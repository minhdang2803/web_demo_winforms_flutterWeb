define(['dart_sdk', 'packages/flutter/src/painting/box_shadow.dart', 'packages/cc_library/theme/base_colors.dart', 'packages/flutter/src/material/colors.dart', 'packages/flutter/src/painting/border_radius.dart', 'packages/cc_library/util/base_utils.dart', 'packages/flutter/src/painting/box_fit.dart', 'packages/flutter/src/material/icon_button.dart', 'packages/flutter/src/gestures/tap.dart', 'packages/flutter/src/widgets/title.dart', 'packages/flutter/src/painting/placeholder_span.dart', 'packages/google_fonts/src/google_fonts_base.dart', 'packages/get/get_rx/src/rx_types/rx_types.dart', 'packages/get/get_utils/src/platform/platform_web.dart', 'packages/get/get_navigation/src/snackbar/snackbar_controller.dart', 'packages/get/get_core/src/get_main.dart', 'packages/flutter/src/rendering/viewport_offset.dart', 'packages/flutter/src/scheduler/binding.dart', 'packages/flutter/src/services/system_chrome.dart', 'packages/flutter/src/animation/curves.dart', 'packages/flutter/src/gestures/recognizer.dart'], (function load__packages__cc_library__widget__widget_util_dart(dart_sdk, packages__flutter__src__painting__box_shadow$46dart, packages__cc_library__theme__base_colors$46dart, packages__flutter__src__material__colors$46dart, packages__flutter__src__painting__border_radius$46dart, packages__cc_library__util__base_utils$46dart, packages__flutter__src__painting__box_fit$46dart, packages__flutter__src__material__icon_button$46dart, packages__flutter__src__gestures__tap$46dart, packages__flutter__src__widgets__title$46dart, packages__flutter__src__painting__placeholder_span$46dart, packages__google_fonts__src__google_fonts_base$46dart, packages__get__get_rx__src__rx_types__rx_types$46dart, packages__get__get_utils__src__platform__platform_web$46dart, packages__get__get_navigation__src__snackbar__snackbar_controller$46dart, packages__get__get_core__src__get_main$46dart, packages__flutter__src__rendering__viewport_offset$46dart, packages__flutter__src__scheduler__binding$46dart, packages__flutter__src__services__system_chrome$46dart, packages__flutter__src__animation__curves$46dart, packages__flutter__src__gestures__recognizer$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const ui = dart_sdk.ui;
  const _interceptors = dart_sdk._interceptors;
  const io = dart_sdk.io;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const box_shadow = packages__flutter__src__painting__box_shadow$46dart.src__painting__box_shadow;
  const base_colors = packages__cc_library__theme__base_colors$46dart.theme__base_colors;
  const colors = packages__flutter__src__material__colors$46dart.src__material__colors;
  const border_radius = packages__flutter__src__painting__border_radius$46dart.src__painting__border_radius;
  const base_utils = packages__cc_library__util__base_utils$46dart.util__base_utils;
  const box_fit = packages__flutter__src__painting__box_fit$46dart.src__painting__box_fit;
  const material = packages__flutter__src__material__icon_button$46dart.src__material__material;
  const ink_well = packages__flutter__src__material__icon_button$46dart.src__material__ink_well;
  const tap = packages__flutter__src__gestures__tap$46dart.src__gestures__tap;
  const widget_inspector = packages__flutter__src__widgets__title$46dart.src__widgets__widget_inspector;
  const basic = packages__flutter__src__widgets__title$46dart.src__widgets__basic;
  const scroll_notification = packages__flutter__src__widgets__title$46dart.src__widgets__scroll_notification;
  const framework = packages__flutter__src__widgets__title$46dart.src__widgets__framework;
  const scroll_controller = packages__flutter__src__widgets__title$46dart.src__widgets__scroll_controller;
  const text_span = packages__flutter__src__painting__placeholder_span$46dart.src__painting__text_span;
  const text_style = packages__flutter__src__painting__placeholder_span$46dart.src__painting__text_style;
  const google_fonts = packages__google_fonts__src__google_fonts_base$46dart.google_fonts;
  const rx_types = packages__get__get_rx__src__rx_types__rx_types$46dart.get_rx__src__rx_types__rx_types;
  const context_extensions = packages__get__get_utils__src__platform__platform_web$46dart.get_utils__src__extensions__context_extensions;
  const extension_navigation = packages__get__get_navigation__src__snackbar__snackbar_controller$46dart.get_navigation__src__extension_navigation;
  const get_main = packages__get__get_core__src__get_main$46dart.get_core__src__get_main;
  const viewport_offset = packages__flutter__src__rendering__viewport_offset$46dart.src__rendering__viewport_offset;
  const binding = packages__flutter__src__scheduler__binding$46dart.src__scheduler__binding;
  const system_chrome = packages__flutter__src__services__system_chrome$46dart.src__services__system_chrome;
  const curves = packages__flutter__src__animation__curves$46dart.src__animation__curves;
  const recognizer = packages__flutter__src__gestures__recognizer$46dart.src__gestures__recognizer;
  var widget_util = Object.create(dart.library);
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(false);
  var T = {
    JSArrayOfBoxShadow: () => (T.JSArrayOfBoxShadow = dart.constFn(_interceptors.JSArray$(box_shadow.BoxShadow)))(),
    TapDownDetailsTovoid: () => (T.TapDownDetailsTovoid = dart.constFn(dart.fnType(dart.void, [tap.TapDownDetails])))(),
    DurationTovoid: () => (T.DurationTovoid = dart.constFn(dart.fnType(dart.void, [core.Duration])))(),
    VoidToNull: () => (T.VoidToNull = dart.constFn(dart.fnType(core.Null, [])))(),
    JSArrayOfDeviceOrientation: () => (T.JSArrayOfDeviceOrientation = dart.constFn(_interceptors.JSArray$(system_chrome.DeviceOrientation)))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "InkWell",
        [_Location_column]: 16,
        [_Location_line]: 62,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/git/cci.mobile.appbase-92a8d850addc8e5d612bef53c28acb630d12a616/modules/cc_library/lib/widget/widget_util.dart"
      });
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Material",
        [_Location_column]: 7,
        [_Location_line]: 60,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/git/cci.mobile.appbase-92a8d850addc8e5d612bef53c28acb630d12a616/modules/cc_library/lib/widget/widget_util.dart"
      });
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "InkWell",
        [_Location_column]: 18,
        [_Location_line]: 82,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/git/cci.mobile.appbase-92a8d850addc8e5d612bef53c28acb630d12a616/modules/cc_library/lib/widget/widget_util.dart"
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Material",
        [_Location_column]: 16,
        [_Location_line]: 80,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/git/cci.mobile.appbase-92a8d850addc8e5d612bef53c28acb630d12a616/modules/cc_library/lib/widget/widget_util.dart"
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "AspectRatio",
        [_Location_column]: 7,
        [_Location_line]: 78,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/git/cci.mobile.appbase-92a8d850addc8e5d612bef53c28acb630d12a616/modules/cc_library/lib/widget/widget_util.dart"
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: ui.Radius.prototype,
        [Radius_y]: 0,
        [Radius_x]: 0
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: ui.Radius.prototype,
        [Radius_y]: 9,
        [Radius_x]: 9
      });
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: border_radius.BorderRadius.prototype,
        [BorderRadius_bottomRight]: C[6] || CT.C6,
        [BorderRadius_bottomLeft]: C[6] || CT.C6,
        [BorderRadius_topRight]: C[7] || CT.C7,
        [BorderRadius_topLeft]: C[7] || CT.C7
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 300000
      });
    }
  }, false);
  var C = Array(9).fill(void 0);
  var I = ["package:cc_library/widget/widget_util.dart"];
  var _Location_name = dart.privateName(widget_inspector, "_Location.name");
  var _Location_column = dart.privateName(widget_inspector, "_Location.column");
  var _Location_line = dart.privateName(widget_inspector, "_Location.line");
  var _Location_file = dart.privateName(widget_inspector, "_Location.file");
  var Radius_y = dart.privateName(ui, "Radius.y");
  var Radius_x = dart.privateName(ui, "Radius.x");
  var BorderRadius_bottomRight = dart.privateName(border_radius, "BorderRadius.bottomRight");
  var BorderRadius_bottomLeft = dart.privateName(border_radius, "BorderRadius.bottomLeft");
  var BorderRadius_topRight = dart.privateName(border_radius, "BorderRadius.topRight");
  var BorderRadius_topLeft = dart.privateName(border_radius, "BorderRadius.topLeft");
  var Duration__duration = dart.privateName(core, "Duration._duration");
  widget_util.WidgetUtil = class WidgetUtil extends core.Object {
    static getBoxShadows(opts) {
      let t0, t0$, t0$0, t0$1, t0$2, t0$3;
      let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
      let x = opts && 'x' in opts ? opts.x : null;
      let y = opts && 'y' in opts ? opts.y : null;
      let blurRadius = opts && 'blurRadius' in opts ? opts.blurRadius : null;
      let spreadRadius = opts && 'spreadRadius' in opts ? opts.spreadRadius : null;
      let bgColor = opts && 'bgColor' in opts ? opts.bgColor : null;
      return T.JSArrayOfBoxShadow().of([new box_shadow.BoxShadow.new({color: (t0 = shadowColor, t0 == null ? base_colors.BaseColors.black_30 : t0), spreadRadius: (t0$ = spreadRadius, t0$ == null ? 0.0 : t0$), blurRadius: (t0$0 = blurRadius, t0$0 == null ? 3.0 : t0$0), offset: new ui.Offset.new((t0$1 = x, t0$1 == null ? 2.0 : t0$1), (t0$2 = y, t0$2 == null ? 2.0 : t0$2))}), new box_shadow.BoxShadow.new({color: (t0$3 = bgColor, t0$3 == null ? colors.Colors.white : t0$3), spreadRadius: 0.0, blurRadius: 0.0, offset: ui.Offset.zero})]);
    }
    static getCircleBorderRadius() {
      return new border_radius.BorderRadius.circular(45.0);
    }
    static getBoxFitType() {
      if (base_utils.BaseUtils.isProMaxDeviceType()) {
        return box_fit.BoxFit.fill;
      }
      return box_fit.BoxFit.cover;
    }
    static getInkResponse(onTap, opts) {
      let t0;
      let onTapUp = opts && 'onTapUp' in opts ? opts.onTapUp : null;
      let onTapDown = opts && 'onTapDown' in opts ? opts.onTapDown : null;
      let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
      let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
      return new material.Material.new({color: colors.Colors.transparent, child: new ink_well.InkWell.new({onTap: onTap, splashColor: io.Platform.isAndroid ? base_colors.BaseColors.black_5 : colors.Colors.transparent, borderRadius: (t0 = borderRadius, t0 == null ? widget_util.WidgetUtil.getCircleBorderRadius() : t0), canRequestFocus: false, onTapDown: dart.fn(_ => onTapDown, T.TapDownDetailsTovoid()), onTapCancel: onTapUp, onLongPress: onLongPress, $creationLocationd_0dea112b090073317d4: C[0] || CT.C0}), $creationLocationd_0dea112b090073317d4: C[1] || CT.C1});
    }
    static getInkResponsePadding(onTap, opts) {
      let t0, t0$;
      let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
      let aspectRatio = opts && 'aspectRatio' in opts ? opts.aspectRatio : null;
      return new basic.AspectRatio.new({aspectRatio: (t0 = aspectRatio, t0 == null ? 16 / 9 : t0), child: new material.Material.new({color: colors.Colors.transparent, child: new ink_well.InkWell.new({onTap: onTap, splashColor: io.Platform.isAndroid ? base_colors.BaseColors.black_5 : colors.Colors.transparent, borderRadius: (t0$ = borderRadius, t0$ == null ? widget_util.WidgetUtil.getCircleBorderRadius() : t0$), canRequestFocus: false, $creationLocationd_0dea112b090073317d4: C[2] || CT.C2}), $creationLocationd_0dea112b090073317d4: C[3] || CT.C3}), $creationLocationd_0dea112b090073317d4: C[4] || CT.C4});
    }
    static getBorderRoundedLarge() {
      return new border_radius.BorderRadius.circular(12.0);
    }
    static getBorderRoundedSmall() {
      return new border_radius.BorderRadius.circular(8.0);
    }
    static getBorderRoundedSquareTopLeftRight() {
      return C[5] || CT.C5;
    }
    static getTextSpanMontserrat(text, opts) {
      let color = opts && 'color' in opts ? opts.color : null;
      let fontSize = opts && 'fontSize' in opts ? opts.fontSize : null;
      let fontStyle = opts && 'fontStyle' in opts ? opts.fontStyle : null;
      let fontWeight = opts && 'fontWeight' in opts ? opts.fontWeight : null;
      let heightLine = opts && 'heightLine' in opts ? opts.heightLine : null;
      let recognizer = opts && 'recognizer' in opts ? opts.recognizer : null;
      return new text_span.TextSpan.new({recognizer: recognizer, style: widget_util.WidgetUtil.getTextStyleMontserrat({color: color, heightLine: heightLine, fontWeight: fontWeight, fontSize: fontSize, fontStyle: fontStyle}), text: text});
    }
    static getTextStyleMontserrat(opts) {
      let t0, t0$, t0$0, t0$1, t0$2;
      let color = opts && 'color' in opts ? opts.color : null;
      let heightLine = opts && 'heightLine' in opts ? opts.heightLine : null;
      let fontWeight = opts && 'fontWeight' in opts ? opts.fontWeight : null;
      let fontSize = opts && 'fontSize' in opts ? opts.fontSize : null;
      let fontStyle = opts && 'fontStyle' in opts ? opts.fontStyle : null;
      return google_fonts.GoogleFonts.montserrat({color: (t0 = color, t0 == null ? colors.Colors.white : t0), height: (t0$ = heightLine, t0$ == null ? 1.2 : t0$), fontWeight: (t0$0 = fontWeight, t0$0 == null ? ui.FontWeight.w400 : t0$0), fontSize: (t0$1 = fontSize, t0$1 == null ? 14.0 : t0$1), fontStyle: (t0$2 = fontStyle, t0$2 == null ? ui.FontStyle.normal : t0$2)});
    }
    static getTextSpanPacifico(text, opts) {
      let color = opts && 'color' in opts ? opts.color : null;
      let fontSize = opts && 'fontSize' in opts ? opts.fontSize : null;
      let fontStyle = opts && 'fontStyle' in opts ? opts.fontStyle : null;
      let fontWeight = opts && 'fontWeight' in opts ? opts.fontWeight : null;
      let heightLine = opts && 'heightLine' in opts ? opts.heightLine : null;
      let recognizer = opts && 'recognizer' in opts ? opts.recognizer : null;
      return new text_span.TextSpan.new({recognizer: recognizer, style: widget_util.WidgetUtil.getTextStylePacifico({color: color, heightLine: heightLine, fontWeight: fontWeight, fontSize: fontSize, fontStyle: fontStyle}), text: text});
    }
    static getTextStylePacifico(opts) {
      let t0, t0$, t0$0, t0$1, t0$2;
      let color = opts && 'color' in opts ? opts.color : null;
      let heightLine = opts && 'heightLine' in opts ? opts.heightLine : null;
      let fontWeight = opts && 'fontWeight' in opts ? opts.fontWeight : null;
      let fontSize = opts && 'fontSize' in opts ? opts.fontSize : null;
      let fontStyle = opts && 'fontStyle' in opts ? opts.fontStyle : null;
      return google_fonts.GoogleFonts.pacifico({color: (t0 = color, t0 == null ? colors.Colors.white : t0), height: (t0$ = heightLine, t0$ == null ? 1.2 : t0$), fontWeight: (t0$0 = fontWeight, t0$0 == null ? ui.FontWeight.w400 : t0$0), fontSize: (t0$1 = fontSize, t0$1 == null ? 14.0 : t0$1), fontStyle: (t0$2 = fontStyle, t0$2 == null ? ui.FontStyle.normal : t0$2)});
    }
    static getTextSpanRoboto(text, opts) {
      let color = opts && 'color' in opts ? opts.color : null;
      let fontSize = opts && 'fontSize' in opts ? opts.fontSize : null;
      let fontStyle = opts && 'fontStyle' in opts ? opts.fontStyle : null;
      let fontWeight = opts && 'fontWeight' in opts ? opts.fontWeight : null;
      let heightLine = opts && 'heightLine' in opts ? opts.heightLine : null;
      let recognizer = opts && 'recognizer' in opts ? opts.recognizer : null;
      return new text_span.TextSpan.new({recognizer: recognizer, style: widget_util.WidgetUtil.getTextStyleRoboto({fontWeight: fontWeight, heightLine: heightLine, color: color, fontSize: fontSize, fontStyle: fontStyle}), text: text});
    }
    static getTextSpanMali(text, opts) {
      let color = opts && 'color' in opts ? opts.color : null;
      let fontSize = opts && 'fontSize' in opts ? opts.fontSize : null;
      let fontStyle = opts && 'fontStyle' in opts ? opts.fontStyle : null;
      let fontWeight = opts && 'fontWeight' in opts ? opts.fontWeight : null;
      let heightLine = opts && 'heightLine' in opts ? opts.heightLine : null;
      let recognizer = opts && 'recognizer' in opts ? opts.recognizer : null;
      return new text_span.TextSpan.new({recognizer: recognizer, style: widget_util.WidgetUtil.getTextStyleMali({fontWeight: fontWeight, heightLine: heightLine, color: color, fontSize: fontSize, fontStyle: fontStyle}), text: text});
    }
    static getTextStyleRoboto(opts) {
      let t0, t0$, t0$0, t0$1, t0$2;
      let color = opts && 'color' in opts ? opts.color : null;
      let heightLine = opts && 'heightLine' in opts ? opts.heightLine : null;
      let fontWeight = opts && 'fontWeight' in opts ? opts.fontWeight : null;
      let fontSize = opts && 'fontSize' in opts ? opts.fontSize : null;
      let fontStyle = opts && 'fontStyle' in opts ? opts.fontStyle : null;
      return google_fonts.GoogleFonts.roboto({fontWeight: (t0 = fontWeight, t0 == null ? ui.FontWeight.w400 : t0), height: (t0$ = heightLine, t0$ == null ? 1.2 : t0$), color: (t0$0 = color, t0$0 == null ? colors.Colors.white : t0$0), fontSize: (t0$1 = fontSize, t0$1 == null ? 14.0 : t0$1), fontStyle: (t0$2 = fontStyle, t0$2 == null ? ui.FontStyle.normal : t0$2)});
    }
    static getTextStyleMali(opts) {
      let t0, t0$, t0$0, t0$1, t0$2;
      let color = opts && 'color' in opts ? opts.color : null;
      let heightLine = opts && 'heightLine' in opts ? opts.heightLine : null;
      let fontWeight = opts && 'fontWeight' in opts ? opts.fontWeight : null;
      let fontSize = opts && 'fontSize' in opts ? opts.fontSize : null;
      let fontStyle = opts && 'fontStyle' in opts ? opts.fontStyle : null;
      return google_fonts.GoogleFonts.mali({fontWeight: (t0 = fontWeight, t0 == null ? ui.FontWeight.w400 : t0), height: (t0$ = heightLine, t0$ == null ? 1.2 : t0$), color: (t0$0 = color, t0$0 == null ? colors.Colors.white : t0$0), fontSize: (t0$1 = fontSize, t0$1 == null ? 14.0 : t0$1), fontStyle: (t0$2 = fontStyle, t0$2 == null ? ui.FontStyle.normal : t0$2)});
    }
    static isPortraitScreenMode() {
      return rx_types['BoolExtension|get#obs'](context_extensions['ContextExtensionss|get#isPortrait'](dart.nullCheck(extension_navigation['GetNavigation|get#context'](get_main.Get))));
    }
    static isSafeScreenExisted(paddingBottom, viewPaddingTop) {
      return paddingBottom >= 20.0 || viewPaddingTop >= 40.0;
    }
    static isScrollingClickEnd(scrollState) {
      return scroll_notification.ScrollEndNotification.is(scrollState);
    }
    static isScrollingClickStart(scrollState) {
      return scroll_notification.ScrollStartNotification.is(scrollState);
    }
    static isScrollingToEnd(scrollState) {
      return scroll_notification.UserScrollNotification.is(scrollState) && scrollState.direction === viewport_offset.ScrollDirection.idle;
    }
    static markNeedsBuild($function) {
      return binding.SchedulerBinding.instance.addPostFrameCallback(dart.fn(_ => dart.dcall($function, []), T.DurationTovoid()));
    }
    pauseAudioPlayer(c) {
      widget_util.WidgetUtil.markNeedsBuild(dart.fn(() => {
      }, T.VoidToNull()));
    }
    pauseVideoPlayer() {
      widget_util.WidgetUtil.markNeedsBuild(dart.fn(() => {
      }, T.VoidToNull()));
    }
    setLandscape() {
      return system_chrome.SystemChrome.setPreferredOrientations(T.JSArrayOfDeviceOrientation().of([system_chrome.DeviceOrientation.landscapeLeft, system_chrome.DeviceOrientation.landscapeRight]));
    }
    setOrientationDefault() {
      return system_chrome.SystemChrome.setPreferredOrientations(system_chrome.DeviceOrientation.values);
    }
    setPortrait() {
      return system_chrome.SystemChrome.setPreferredOrientations(T.JSArrayOfDeviceOrientation().of([system_chrome.DeviceOrientation.portraitUp, system_chrome.DeviceOrientation.portraitDown]));
    }
    scrollToTop(_scrollController) {
      if (_scrollController.hasClients) {
        _scrollController.animateTo(0.0, {curve: curves.Curves.easeOut, duration: C[8] || CT.C8});
      }
    }
    static ['_#new#tearOff']() {
      return new widget_util.WidgetUtil.new();
    }
  };
  (widget_util.WidgetUtil.new = function() {
    ;
  }).prototype = widget_util.WidgetUtil.prototype;
  dart.addTypeTests(widget_util.WidgetUtil);
  dart.addTypeCaches(widget_util.WidgetUtil);
  dart.setMethodSignature(widget_util.WidgetUtil, () => ({
    __proto__: dart.getMethods(widget_util.WidgetUtil.__proto__),
    pauseAudioPlayer: dart.fnType(dart.void, [framework.BuildContext]),
    pauseVideoPlayer: dart.fnType(dart.void, []),
    setLandscape: dart.fnType(dart.void, []),
    setOrientationDefault: dart.fnType(dart.void, []),
    setPortrait: dart.fnType(dart.void, []),
    scrollToTop: dart.fnType(dart.void, [scroll_controller.ScrollController])
  }));
  dart.setStaticMethodSignature(widget_util.WidgetUtil, () => ['getBoxShadows', 'getCircleBorderRadius', 'getBoxFitType', 'getInkResponse', 'getInkResponsePadding', 'getBorderRoundedLarge', 'getBorderRoundedSmall', 'getBorderRoundedSquareTopLeftRight', 'getTextSpanMontserrat', 'getTextStyleMontserrat', 'getTextSpanPacifico', 'getTextStylePacifico', 'getTextSpanRoboto', 'getTextSpanMali', 'getTextStyleRoboto', 'getTextStyleMali', 'isPortraitScreenMode', 'isSafeScreenExisted', 'isScrollingClickEnd', 'isScrollingClickStart', 'isScrollingToEnd', 'markNeedsBuild']);
  dart.setLibraryUri(widget_util.WidgetUtil, I[0]);
  dart.trackLibraries("packages/cc_library/widget/widget_util.dart", {
    "package:cc_library/widget/widget_util.dart": widget_util
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["widget_util.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAiBa;UACC;UACF;UACA;UACA;UACD;AAEL,wCAEE,sCACqB,KAAZ,WAAW,EAAX,aAA0B,sDACN,MAAb,YAAY,EAAZ,cAAgB,yBACP,OAAX,UAAU,EAAV,eAAc,qBAClB,mBAAS,OAAF,CAAC,EAAD,eAAK,cAAO,OAAF,CAAC,EAAD,eAAK,gBAIhC,sCACiB,OAAR,OAAO,EAAP,eAAkB,2CACX,iBACF,aACG;IAElB;;AAE0C,YAAa,yCAAS;IAAG;;AAGtE,UAAc;AACZ,cAAc;;AAGhB,YAAc;IAChB;0BAGe;;UACC;UACA;UACA;UACA;AAEZ,+CACgB,kCACP,iCAEE,KAAK,eAEU,wBAAuB,iCAAiB,0CACnC,KAAb,YAAY,EAAZ,aAAgB,uEAGb,kBACN,QAAC,KAAM,SAAS,0CACd,OAAO,eACP,WAAW;IAE3B;iCAE4C;;UAAsB;UAAsB;AACzF,sDAC2B,KAAZ,WAAW,EAAX,aAAe,AAAG,KAAE,gBAC1B,kCACS,kCACP,iCAEE,KAAK,eACU,wBAAuB,iCAAiB,0CAEnC,MAAb,YAAY,EAAZ,cAAgB,wEAGb;IAGtB;;AAE0C,YAAa,yCAAS;IAAG;;AAEzB,YAAa,yCAAS;IAAE;;AAEX;IAGvD;iCAII;UACA;UACC;UACG;UACC;UACJ;UACW;AAEjB,qDACc,UAAU,SACf,sDACE,KAAK,cACA,UAAU,cACV,UAAU,YACZ,QAAQ,aACP,SAAS,UAEhB,IAAI;IACX;;;UAII;UACC;UACI;UACJ;UACG;AAET,YAAY,8CACG,KAAN,KAAK,EAAL,aAAgB,oCACJ,MAAX,UAAU,EAAV,cAAc,yBACC,OAAX,UAAU,EAAV,eAAyB,uCAClB,OAAT,QAAQ,EAAR,eAAY,0BACD,OAAV,SAAS,EAAT,eAAuB;IACnC;+BAII;UACA;UACC;UACG;UACC;UACJ;UACW;AAEjB,qDACc,UAAU,SACf,oDACE,KAAK,cACA,UAAU,cACV,UAAU,YACZ,QAAQ,aACP,SAAS,UAEhB,IAAI;IACX;;;UAII;UACC;UACI;UACJ;UACG;AAET,YAAY,4CACG,KAAN,KAAK,EAAL,aAAgB,oCACJ,MAAX,UAAU,EAAV,cAAc,yBACC,OAAX,UAAU,EAAV,eAAyB,uCAClB,OAAT,QAAQ,EAAR,eAAY,0BACD,OAAV,SAAS,EAAT,eAAuB;IACnC;6BAII;UACA;UACC;UACG;UACC;UACJ;UACW;AAEjB,qDACc,UAAU,SACf,uDACO,UAAU,cACV,UAAU,SACf,KAAK,YACF,QAAQ,aACP,SAAS,UAEhB,IAAI;IACX;2BAGI;UACA;UACC;UACG;UACC;UACJ;UACW;AAEjB,qDACc,UAAU,SACf,qDACO,UAAU,cACV,UAAU,SACf,KAAK,YACF,QAAQ,aACP,SAAS,UAEhB,IAAI;IACX;;;UAII;UACC;UACI;UACJ;UACG;AAET,YAAY,+CACa,KAAX,UAAU,EAAV,aAAyB,mCAClB,MAAX,UAAU,EAAV,cAAc,oBACT,OAAN,KAAK,EAAL,eAAgB,wCACJ,OAAT,QAAQ,EAAR,eAAY,0BACD,OAAV,SAAS,EAAT,eAAuB;IACnC;;;UAGI;UACC;UACI;UACJ;UACG;AAET,YAAY,6CACa,KAAX,UAAU,EAAV,aAAyB,mCAClB,MAAX,UAAU,EAAV,cAAc,oBACT,OAAN,KAAK,EAAL,eAAgB,wCACJ,OAAT,QAAQ,EAAR,eAAY,0BACD,OAAV,SAAS,EAAT,eAAuB;IACnC;;AAGmC,YAAwB,mCAAX,wDAAF,eAAP,kDAAJ;IAA2B;+BAK1D,eACA;AAEL,YAAA,AAAc,AAAQ,cAAT,IAAI,QAAQ,AAAe,cAAD,IAAI;IAAI;+BAGA;AAAgB,YAAY,8CAAZ,WAAW;IAAyB;iCAGlD;AAAgB,YAAY,gDAAZ,WAAW;IAA2B;4BAG3D;AAC5C,YAAY,AAA0B,+CAAtC,WAAW,KAA8B,AAAY,AAAU,WAAX,eAA8B;IAAI;0BAE/D;AAAa,YAAiB,AAAS,wDAAqB,QAAC,KAAc,WAAR;IAAW;qBAMtE;AAU/B,MATF,sCAAe;;IAUjB;;AAcI,MANF,sCAAe;;IAOjB;;AAGuB,YAAa,qDAC9B,mCAAmB,+CAAiC;IACrD;;AAG2B,YAAa,qDAA2C;IAAO;;AAGzE,YAAa,qDAC7B,mCAAmB,4CAA8B;IAClD;gBAG6B;AAChC,UAAI,AAAkB,iBAAD;AAKlB,QAJD,AAAkB,iBAAD,WACf,aACc;;IAIpB;;;;;;;EACF","file":"../../../../../../../../../../../../packages/cc_library/widget/widget_util.dart.lib.js"}');
  // Exports:
  return {
    widget__widget_util: widget_util
  };
}));

//# sourceMappingURL=widget_util.dart.lib.js.map
