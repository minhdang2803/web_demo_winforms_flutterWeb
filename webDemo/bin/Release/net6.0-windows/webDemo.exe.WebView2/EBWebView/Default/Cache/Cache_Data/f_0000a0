define(['dart_sdk', 'packages/flutter/src/widgets/title.dart', 'packages/flutter/src/foundation/object.dart'], (function load__packages__flutter__src__widgets__async_dart(dart_sdk, packages__flutter__src__widgets__title$46dart, packages__flutter__src__foundation__object$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const _internal = dart_sdk._internal;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const framework = packages__flutter__src__widgets__title$46dart.src__widgets__framework;
  const widget_inspector = packages__flutter__src__widgets__title$46dart.src__widgets__widget_inspector;
  const object = packages__flutter__src__foundation__object$46dart.src__foundation__object;
  var async$ = Object.create(dart.library);
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(false);
  var T$ = {
    VoidTovoid: () => (T$.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    ObjectAndStackTraceToNull: () => (T$.ObjectAndStackTraceToNull = dart.constFn(dart.fnType(core.Null, [core.Object, core.StackTrace])))(),
    FutureOfObject: () => (T$.FutureOfObject = dart.constFn(async.Future$(core.Object)))(),
    VoidTobool: () => (T$.VoidTobool = dart.constFn(dart.fnType(core.bool, [])))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C1() {
      return C[1] = dart.const({
        __proto__: async$.ConnectionState.prototype,
        [_Enum__name]: "none",
        [_Enum_index]: 0
      });
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: async$.ConnectionState.prototype,
        [_Enum__name]: "waiting",
        [_Enum_index]: 1
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: async$.ConnectionState.prototype,
        [_Enum__name]: "active",
        [_Enum_index]: 2
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: async$.ConnectionState.prototype,
        [_Enum__name]: "done",
        [_Enum_index]: 3
      });
    },
    get C0() {
      return C[0] = dart.constList([C[1] || CT.C1, C[2] || CT.C2, C[3] || CT.C3, C[4] || CT.C4], async$.ConnectionState);
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: core._StringStackTrace.prototype,
        [_StringStackTrace__stackTrace]: ""
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "StreamBuilder",
        [_Location_column]: 9,
        [_Location_line]: 396,
        [_Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/widgets/async.dart"
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "FutureBuilder",
        [_Location_column]: 9,
        [_Location_line]: 526,
        [_Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/widgets/async.dart"
      });
    }
  }, false);
  var C = Array(8).fill(void 0);
  var I = [
    "package:flutter/src/widgets/async.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/widgets/async.dart"
  ];
  var stream$ = dart.privateName(async$, "StreamBuilderBase.stream");
  const _is_StreamBuilderBase_default = Symbol('_is_StreamBuilderBase_default');
  async$.StreamBuilderBase$ = dart.generic((T, S) => {
    var __t$_StreamBuilderBaseStateOfT$S = () => (__t$_StreamBuilderBaseStateOfT$S = dart.constFn(async$._StreamBuilderBaseState$(T, S)))();
    class StreamBuilderBase extends framework.StatefulWidget {
      get stream() {
        return this[stream$];
      }
      set stream(value) {
        super.stream = value;
      }
      afterConnected(current) {
        S.as(current);
        return current;
      }
      afterError(current, error, stackTrace) {
        S.as(current);
        return current;
      }
      afterDone(current) {
        S.as(current);
        return current;
      }
      afterDisconnected(current) {
        S.as(current);
        return current;
      }
      createState() {
        return new (__t$_StreamBuilderBaseStateOfT$S()).new();
      }
    }
    (StreamBuilderBase.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let stream = opts && 'stream' in opts ? opts.stream : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[stream$] = stream;
      StreamBuilderBase.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = StreamBuilderBase.prototype;
    dart.addTypeTests(StreamBuilderBase);
    StreamBuilderBase.prototype[_is_StreamBuilderBase_default] = true;
    dart.addTypeCaches(StreamBuilderBase);
    dart.setMethodSignature(StreamBuilderBase, () => ({
      __proto__: dart.getMethods(StreamBuilderBase.__proto__),
      afterConnected: dart.fnType(S, [dart.nullable(core.Object)]),
      afterError: dart.fnType(S, [dart.nullable(core.Object), core.Object, core.StackTrace]),
      afterDone: dart.fnType(S, [dart.nullable(core.Object)]),
      afterDisconnected: dart.fnType(S, [dart.nullable(core.Object)]),
      createState: dart.fnType(framework.State$(async$.StreamBuilderBase$(T, S)), [])
    }));
    dart.setLibraryUri(StreamBuilderBase, I[0]);
    dart.setFieldSignature(StreamBuilderBase, () => ({
      __proto__: dart.getFields(StreamBuilderBase.__proto__),
      stream: dart.finalFieldType(dart.nullable(async.Stream$(T)))
    }));
    return StreamBuilderBase;
  });
  async$.StreamBuilderBase = async$.StreamBuilderBase$();
  dart.addTypeTests(async$.StreamBuilderBase, _is_StreamBuilderBase_default);
  var _subscription = dart.privateName(async$, "_subscription");
  var ___StreamBuilderBaseState__summary = dart.privateName(async$, "_#_StreamBuilderBaseState#_summary");
  var ___StreamBuilderBaseState__summary_isSet = dart.privateName(async$, "_#_StreamBuilderBaseState#_summary#isSet");
  var _summary = dart.privateName(async$, "_summary");
  var _subscribe = dart.privateName(async$, "_subscribe");
  var _unsubscribe = dart.privateName(async$, "_unsubscribe");
  const _is__StreamBuilderBaseState_default = Symbol('_is__StreamBuilderBaseState_default');
  async$._StreamBuilderBaseState$ = dart.generic((T, S) => {
    var __t$StreamBuilderBaseOfT$S = () => (__t$StreamBuilderBaseOfT$S = dart.constFn(async$.StreamBuilderBase$(T, S)))();
    var __t$TTovoid = () => (__t$TTovoid = dart.constFn(dart.fnType(dart.void, [T])))();
    class _StreamBuilderBaseState extends framework.State$(async$.StreamBuilderBase$(T, S)) {
      get [_summary]() {
        let t0;
        return this[___StreamBuilderBaseState__summary_isSet] ? (t0 = this[___StreamBuilderBaseState__summary], t0) : dart.throw(new _internal.LateError.fieldNI("_summary"));
      }
      set [_summary](library$32package$58flutter$47src$47widgets$47async$46dart$58$58_summary$35param) {
        this[___StreamBuilderBaseState__summary_isSet] = true;
        this[___StreamBuilderBaseState__summary] = library$32package$58flutter$47src$47widgets$47async$46dart$58$58_summary$35param;
      }
      initState() {
        super.initState();
        this[_summary] = this.widget.initial();
        this[_subscribe]();
      }
      didUpdateWidget(oldWidget) {
        __t$StreamBuilderBaseOfT$S().as(oldWidget);
        super.didUpdateWidget(oldWidget);
        if (!dart.equals(oldWidget.stream, this.widget.stream)) {
          if (this[_subscription] != null) {
            this[_unsubscribe]();
            this[_summary] = this.widget.afterDisconnected(this[_summary]);
          }
          this[_subscribe]();
        }
      }
      build(context) {
        return this.widget.build(context, this[_summary]);
      }
      dispose() {
        this[_unsubscribe]();
        super.dispose();
      }
      [_subscribe]() {
        if (this.widget.stream != null) {
          this[_subscription] = dart.nullCheck(this.widget.stream).listen(dart.fn(data => {
            this.setState(dart.fn(() => {
              this[_summary] = this.widget.afterData(this[_summary], data);
            }, T$.VoidTovoid()));
          }, __t$TTovoid()), {onError: dart.fn((error, stackTrace) => {
              this.setState(dart.fn(() => {
                this[_summary] = this.widget.afterError(this[_summary], error, stackTrace);
              }, T$.VoidTovoid()));
            }, T$.ObjectAndStackTraceToNull()), onDone: dart.fn(() => {
              this.setState(dart.fn(() => {
                this[_summary] = this.widget.afterDone(this[_summary]);
              }, T$.VoidTovoid()));
            }, T$.VoidTovoid())});
          this[_summary] = this.widget.afterConnected(this[_summary]);
        }
      }
      [_unsubscribe]() {
        if (this[_subscription] != null) {
          dart.nullCheck(this[_subscription]).cancel();
          this[_subscription] = null;
        }
      }
      static ['_#new#tearOff'](T, S) {
        return new (async$._StreamBuilderBaseState$(T, S)).new();
      }
    }
    (_StreamBuilderBaseState.new = function() {
      this[_subscription] = null;
      this[___StreamBuilderBaseState__summary] = null;
      this[___StreamBuilderBaseState__summary_isSet] = false;
      _StreamBuilderBaseState.__proto__.new.call(this);
      ;
    }).prototype = _StreamBuilderBaseState.prototype;
    dart.addTypeTests(_StreamBuilderBaseState);
    _StreamBuilderBaseState.prototype[_is__StreamBuilderBaseState_default] = true;
    dart.addTypeCaches(_StreamBuilderBaseState);
    dart.setMethodSignature(_StreamBuilderBaseState, () => ({
      __proto__: dart.getMethods(_StreamBuilderBaseState.__proto__),
      build: dart.fnType(framework.Widget, [framework.BuildContext]),
      [_subscribe]: dart.fnType(dart.void, []),
      [_unsubscribe]: dart.fnType(dart.void, [])
    }));
    dart.setGetterSignature(_StreamBuilderBaseState, () => ({
      __proto__: dart.getGetters(_StreamBuilderBaseState.__proto__),
      [_summary]: S
    }));
    dart.setSetterSignature(_StreamBuilderBaseState, () => ({
      __proto__: dart.getSetters(_StreamBuilderBaseState.__proto__),
      [_summary]: S
    }));
    dart.setLibraryUri(_StreamBuilderBaseState, I[0]);
    dart.setFieldSignature(_StreamBuilderBaseState, () => ({
      __proto__: dart.getFields(_StreamBuilderBaseState.__proto__),
      [_subscription]: dart.fieldType(dart.nullable(async.StreamSubscription$(T))),
      [___StreamBuilderBaseState__summary]: dart.fieldType(dart.nullable(S)),
      [___StreamBuilderBaseState__summary_isSet]: dart.fieldType(core.bool)
    }));
    return _StreamBuilderBaseState;
  });
  async$._StreamBuilderBaseState = async$._StreamBuilderBaseState$();
  dart.addTypeTests(async$._StreamBuilderBaseState, _is__StreamBuilderBaseState_default);
  var _name = dart.privateName(core, "_name");
  var _Enum__name = dart.privateName(core, "_Enum._name");
  var _Enum_index = dart.privateName(core, "_Enum.index");
  async$.ConnectionState = class ConnectionState extends core._Enum {
    toString() {
      return "ConnectionState." + this[_name];
    }
  };
  (async$.ConnectionState.new = function(index, name) {
    async$.ConnectionState.__proto__.new.call(this, index, name);
    ;
  }).prototype = async$.ConnectionState.prototype;
  dart.addTypeTests(async$.ConnectionState);
  dart.addTypeCaches(async$.ConnectionState);
  dart.setLibraryUri(async$.ConnectionState, I[0]);
  dart.setStaticFieldSignature(async$.ConnectionState, () => ['values', 'none', 'waiting', 'active', 'done']);
  dart.defineExtensionMethods(async$.ConnectionState, ['toString']);
  dart.defineLazy(async$.ConnectionState, {
    /*async$.ConnectionState.values*/get values() {
      return C[0] || CT.C0;
    },
    /*async$.ConnectionState.none*/get none() {
      return C[1] || CT.C1;
    },
    /*async$.ConnectionState.waiting*/get waiting() {
      return C[2] || CT.C2;
    },
    /*async$.ConnectionState.active*/get active() {
      return C[3] || CT.C3;
    },
    /*async$.ConnectionState.done*/get done() {
      return C[4] || CT.C4;
    }
  }, false);
  var connectionState$ = dart.privateName(async$, "AsyncSnapshot.connectionState");
  var data$ = dart.privateName(async$, "AsyncSnapshot.data");
  var error$ = dart.privateName(async$, "AsyncSnapshot.error");
  var stackTrace$ = dart.privateName(async$, "AsyncSnapshot.stackTrace");
  var _StringStackTrace__stackTrace = dart.privateName(core, "_StringStackTrace._stackTrace");
  const _is_AsyncSnapshot_default = Symbol('_is_AsyncSnapshot_default');
  async$.AsyncSnapshot$ = dart.generic(T => {
    var __t$AsyncSnapshotOfT = () => (__t$AsyncSnapshotOfT = dart.constFn(async$.AsyncSnapshot$(T)))();
    class AsyncSnapshot extends core.Object {
      get connectionState() {
        return this[connectionState$];
      }
      set connectionState(value) {
        super.connectionState = value;
      }
      get data() {
        return this[data$];
      }
      set data(value) {
        super.data = value;
      }
      get error() {
        return this[error$];
      }
      set error(value) {
        super.error = value;
      }
      get stackTrace() {
        return this[stackTrace$];
      }
      set stackTrace(value) {
        super.stackTrace = value;
      }
      static ['_#_#tearOff'](T, connectionState, data, error, stackTrace) {
        return new (async$.AsyncSnapshot$(T)).__(connectionState, data, error, stackTrace);
      }
      static ['_#nothing#tearOff'](T) {
        return new (async$.AsyncSnapshot$(T)).nothing();
      }
      static ['_#waiting#tearOff'](T) {
        return new (async$.AsyncSnapshot$(T)).waiting();
      }
      static ['_#withData#tearOff'](T, state, data) {
        return new (async$.AsyncSnapshot$(T)).withData(state, data);
      }
      static ['_#withError#tearOff'](T, state, error, stackTrace = C[5] || CT.C5) {
        return new (async$.AsyncSnapshot$(T)).withError(state, error, stackTrace);
      }
      get requireData() {
        if (this.hasData) {
          return dart.nullCheck(this.data);
        }
        if (this.hasError) {
          core.Error.throwWithStackTrace(dart.nullCheck(this.error), dart.nullCheck(this.stackTrace));
        }
        dart.throw(new core.StateError.new("Snapshot has neither data nor error"));
      }
      inState(state) {
        return new (__t$AsyncSnapshotOfT()).__(state, this.data, this.error, this.stackTrace);
      }
      get hasData() {
        return this.data != null;
      }
      get hasError() {
        return this.error != null;
      }
      toString() {
        return object.objectRuntimeType(this, "AsyncSnapshot") + "(" + dart.str(this.connectionState) + ", " + dart.str(this.data) + ", " + dart.str(this.error) + ", " + dart.str(this.stackTrace) + ")";
      }
      _equals(other) {
        if (other == null) return false;
        if (this === other) {
          return true;
        }
        return __t$AsyncSnapshotOfT().is(other) && other.connectionState === this.connectionState && dart.equals(other.data, this.data) && dart.equals(other.error, this.error) && dart.equals(other.stackTrace, this.stackTrace);
      }
      get hashCode() {
        return core.Object.hash(this.connectionState, this.data, this.error);
      }
    }
    (AsyncSnapshot.__ = function(connectionState, data, error, stackTrace) {
      this[connectionState$] = connectionState;
      this[data$] = data;
      this[error$] = error;
      this[stackTrace$] = stackTrace;
      if (!(connectionState !== null)) dart.assertFailed(null, I[1], 207, 14, "connectionState != null");
      if (!!(data != null && error != null)) dart.assertFailed(null, I[1], 208, 14, "!(data != null && error != null)");
      if (!(stackTrace == null || error != null)) dart.assertFailed(null, I[1], 209, 14, "stackTrace == null || error != null");
      ;
    }).prototype = AsyncSnapshot.prototype;
    (AsyncSnapshot.nothing = function() {
      AsyncSnapshot.__.call(this, async$.ConnectionState.none, null, null, null);
    }).prototype = AsyncSnapshot.prototype;
    (AsyncSnapshot.waiting = function() {
      AsyncSnapshot.__.call(this, async$.ConnectionState.waiting, null, null, null);
    }).prototype = AsyncSnapshot.prototype;
    (AsyncSnapshot.withData = function(state, data) {
      AsyncSnapshot.__.call(this, state, data, null, null);
    }).prototype = AsyncSnapshot.prototype;
    (AsyncSnapshot.withError = function(state, error, stackTrace = C[5] || CT.C5) {
      AsyncSnapshot.__.call(this, state, null, error, stackTrace);
    }).prototype = AsyncSnapshot.prototype;
    dart.addTypeTests(AsyncSnapshot);
    AsyncSnapshot.prototype[_is_AsyncSnapshot_default] = true;
    dart.addTypeCaches(AsyncSnapshot);
    dart.setMethodSignature(AsyncSnapshot, () => ({
      __proto__: dart.getMethods(AsyncSnapshot.__proto__),
      inState: dart.fnType(async$.AsyncSnapshot$(T), [async$.ConnectionState])
    }));
    dart.setGetterSignature(AsyncSnapshot, () => ({
      __proto__: dart.getGetters(AsyncSnapshot.__proto__),
      requireData: T,
      hasData: core.bool,
      hasError: core.bool
    }));
    dart.setLibraryUri(AsyncSnapshot, I[0]);
    dart.setFieldSignature(AsyncSnapshot, () => ({
      __proto__: dart.getFields(AsyncSnapshot.__proto__),
      connectionState: dart.finalFieldType(async$.ConnectionState),
      data: dart.finalFieldType(dart.nullable(T)),
      error: dart.finalFieldType(dart.nullable(core.Object)),
      stackTrace: dart.finalFieldType(dart.nullable(core.StackTrace))
    }));
    dart.defineExtensionMethods(AsyncSnapshot, ['toString', '_equals']);
    dart.defineExtensionAccessors(AsyncSnapshot, ['hashCode']);
    return AsyncSnapshot;
  });
  async$.AsyncSnapshot = async$.AsyncSnapshot$();
  dart.addTypeTests(async$.AsyncSnapshot, _is_AsyncSnapshot_default);
  var builder$ = dart.privateName(async$, "StreamBuilder.builder");
  var initialData$ = dart.privateName(async$, "StreamBuilder.initialData");
  var _Location_name = dart.privateName(widget_inspector, "_Location.name");
  var _Location_column = dart.privateName(widget_inspector, "_Location.column");
  var _Location_line = dart.privateName(widget_inspector, "_Location.line");
  var _Location_file = dart.privateName(widget_inspector, "_Location.file");
  const _is_StreamBuilder_default = Symbol('_is_StreamBuilder_default');
  async$.StreamBuilder$ = dart.generic(T => {
    var __t$AsyncSnapshotOfT = () => (__t$AsyncSnapshotOfT = dart.constFn(async$.AsyncSnapshot$(T)))();
    class StreamBuilder extends async$.StreamBuilderBase$(T, async$.AsyncSnapshot$(T)) {
      get builder() {
        return this[builder$];
      }
      set builder(value) {
        super.builder = value;
      }
      get initialData() {
        return this[initialData$];
      }
      set initialData(value) {
        super.initialData = value;
      }
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let initialData = opts && 'initialData' in opts ? opts.initialData : null;
        let stream = opts && 'stream' in opts ? opts.stream : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        return new (async$.StreamBuilder$(T)).new({key: key, initialData: initialData, stream: stream, builder: builder, $creationLocationd_0dea112b090073317d4: C[6] || CT.C6});
      }
      initial() {
        return this.initialData == null ? new (__t$AsyncSnapshotOfT()).nothing() : new (__t$AsyncSnapshotOfT()).withData(async$.ConnectionState.none, T.as(this.initialData));
      }
      afterConnected(current) {
        __t$AsyncSnapshotOfT().as(current);
        return current.inState(async$.ConnectionState.waiting);
      }
      afterData(current, data) {
        __t$AsyncSnapshotOfT().as(current);
        T.as(data);
        return new (__t$AsyncSnapshotOfT()).withData(async$.ConnectionState.active, data);
      }
      afterError(current, error, stackTrace) {
        __t$AsyncSnapshotOfT().as(current);
        return new (__t$AsyncSnapshotOfT()).withError(async$.ConnectionState.active, error, stackTrace);
      }
      afterDone(current) {
        __t$AsyncSnapshotOfT().as(current);
        return current.inState(async$.ConnectionState.done);
      }
      afterDisconnected(current) {
        __t$AsyncSnapshotOfT().as(current);
        return current.inState(async$.ConnectionState.none);
      }
      build(context, currentSummary) {
        let t3, t2;
        __t$AsyncSnapshotOfT().as(currentSummary);
        t2 = context;
        t3 = currentSummary;
        return this.builder(t2, t3);
      }
    }
    (StreamBuilder.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let initialData = opts && 'initialData' in opts ? opts.initialData : null;
      let stream = opts && 'stream' in opts ? opts.stream : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[initialData$] = initialData;
      this[builder$] = builder;
      if (!(builder !== null)) dart.assertFailed(null, I[1], 401, 15, "builder != null");
      StreamBuilder.__proto__.new.call(this, {key: key, stream: stream, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = StreamBuilder.prototype;
    dart.addTypeTests(StreamBuilder);
    StreamBuilder.prototype[_is_StreamBuilder_default] = true;
    dart.addTypeCaches(StreamBuilder);
    dart.setMethodSignature(StreamBuilder, () => ({
      __proto__: dart.getMethods(StreamBuilder.__proto__),
      initial: dart.fnType(async$.AsyncSnapshot$(T), []),
      afterData: dart.fnType(async$.AsyncSnapshot$(T), [dart.nullable(core.Object), dart.nullable(core.Object)]),
      build: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(core.Object)])
    }));
    dart.setLibraryUri(StreamBuilder, I[0]);
    dart.setFieldSignature(StreamBuilder, () => ({
      __proto__: dart.getFields(StreamBuilder.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, async$.AsyncSnapshot$(T)])),
      initialData: dart.finalFieldType(dart.nullable(T))
    }));
    return StreamBuilder;
  });
  async$.StreamBuilder = async$.StreamBuilder$();
  dart.addTypeTests(async$.StreamBuilder, _is_StreamBuilder_default);
  var future$ = dart.privateName(async$, "FutureBuilder.future");
  var builder$0 = dart.privateName(async$, "FutureBuilder.builder");
  var initialData$0 = dart.privateName(async$, "FutureBuilder.initialData");
  const _is_FutureBuilder_default = Symbol('_is_FutureBuilder_default');
  async$.FutureBuilder$ = dart.generic(T => {
    var __t$_FutureBuilderStateOfT = () => (__t$_FutureBuilderStateOfT = dart.constFn(async$._FutureBuilderState$(T)))();
    class FutureBuilder extends framework.StatefulWidget {
      get future() {
        return this[future$];
      }
      set future(value) {
        super.future = value;
      }
      get builder() {
        return this[builder$0];
      }
      set builder(value) {
        super.builder = value;
      }
      get initialData() {
        return this[initialData$0];
      }
      set initialData(value) {
        super.initialData = value;
      }
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let future = opts && 'future' in opts ? opts.future : null;
        let initialData = opts && 'initialData' in opts ? opts.initialData : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        return new (async$.FutureBuilder$(T)).new({key: key, future: future, initialData: initialData, builder: builder, $creationLocationd_0dea112b090073317d4: C[7] || CT.C7});
      }
      createState() {
        return new (__t$_FutureBuilderStateOfT()).new();
      }
    }
    (FutureBuilder.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let future = opts && 'future' in opts ? opts.future : null;
      let initialData = opts && 'initialData' in opts ? opts.initialData : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[future$] = future;
      this[initialData$0] = initialData;
      this[builder$0] = builder;
      if (!(builder !== null)) dart.assertFailed(null, I[1], 531, 15, "builder != null");
      FutureBuilder.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = FutureBuilder.prototype;
    dart.addTypeTests(FutureBuilder);
    FutureBuilder.prototype[_is_FutureBuilder_default] = true;
    dart.addTypeCaches(FutureBuilder);
    dart.setMethodSignature(FutureBuilder, () => ({
      __proto__: dart.getMethods(FutureBuilder.__proto__),
      createState: dart.fnType(framework.State$(async$.FutureBuilder$(T)), [])
    }));
    dart.setLibraryUri(FutureBuilder, I[0]);
    dart.setFieldSignature(FutureBuilder, () => ({
      __proto__: dart.getFields(FutureBuilder.__proto__),
      future: dart.finalFieldType(dart.nullable(async.Future$(T))),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, async$.AsyncSnapshot$(T)])),
      initialData: dart.finalFieldType(dart.nullable(T))
    }));
    dart.setStaticFieldSignature(FutureBuilder, () => ['debugRethrowError']);
    return FutureBuilder;
  });
  async$.FutureBuilder = async$.FutureBuilder$();
  dart.defineLazy(async$.FutureBuilder, {
    /*async$.FutureBuilder.debugRethrowError*/get debugRethrowError() {
      return false;
    },
    set debugRethrowError(_) {}
  }, false);
  dart.addTypeTests(async$.FutureBuilder, _is_FutureBuilder_default);
  var _activeCallbackIdentity = dart.privateName(async$, "_activeCallbackIdentity");
  var ___FutureBuilderState__snapshot = dart.privateName(async$, "_#_FutureBuilderState#_snapshot");
  var _snapshot = dart.privateName(async$, "_snapshot");
  const _is__FutureBuilderState_default = Symbol('_is__FutureBuilderState_default');
  async$._FutureBuilderState$ = dart.generic(T => {
    var __t$AsyncSnapshotOfT = () => (__t$AsyncSnapshotOfT = dart.constFn(async$.AsyncSnapshot$(T)))();
    var __t$FutureBuilderOfT = () => (__t$FutureBuilderOfT = dart.constFn(async$.FutureBuilder$(T)))();
    var __t$BuildContextAndAsyncSnapshotOfTToWidget = () => (__t$BuildContextAndAsyncSnapshotOfTToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, __t$AsyncSnapshotOfT()])))();
    var __t$TToNull = () => (__t$TToNull = dart.constFn(dart.fnType(core.Null, [T])))();
    class _FutureBuilderState extends framework.State$(async$.FutureBuilder$(T)) {
      get [_snapshot]() {
        let t2;
        t2 = this[___FutureBuilderState__snapshot];
        return t2 == null ? dart.throw(new _internal.LateError.fieldNI("_snapshot")) : t2;
      }
      set [_snapshot](library$32package$58flutter$47src$47widgets$47async$46dart$58$58_snapshot$35param) {
        this[___FutureBuilderState__snapshot] = library$32package$58flutter$47src$47widgets$47async$46dart$58$58_snapshot$35param;
      }
      initState() {
        super.initState();
        this[_snapshot] = this.widget.initialData == null ? new (__t$AsyncSnapshotOfT()).nothing() : new (__t$AsyncSnapshotOfT()).withData(async$.ConnectionState.none, T.as(this.widget.initialData));
        this[_subscribe]();
      }
      didUpdateWidget(oldWidget) {
        __t$FutureBuilderOfT().as(oldWidget);
        super.didUpdateWidget(oldWidget);
        if (!dart.equals(oldWidget.future, this.widget.future)) {
          if (this[_activeCallbackIdentity] != null) {
            this[_unsubscribe]();
            this[_snapshot] = this[_snapshot].inState(async$.ConnectionState.none);
          }
          this[_subscribe]();
        }
      }
      build(context) {
        let t4, t3, t2;
        t2 = this.widget;
        t3 = context;
        t4 = this[_snapshot];
        return __t$BuildContextAndAsyncSnapshotOfTToWidget().as(t2.builder)(t3, t4);
      }
      dispose() {
        this[_unsubscribe]();
        super.dispose();
      }
      [_subscribe]() {
        if (this.widget.future != null) {
          let callbackIdentity = new core.Object.new();
          this[_activeCallbackIdentity] = callbackIdentity;
          dart.nullCheck(this.widget.future).then(dart.void, dart.fn(data => {
            if (dart.equals(this[_activeCallbackIdentity], callbackIdentity)) {
              this.setState(dart.fn(() => {
                this[_snapshot] = new (__t$AsyncSnapshotOfT()).withData(async$.ConnectionState.done, data);
              }, T$.VoidTovoid()));
            }
          }, __t$TToNull()), {onError: dart.fn((error, stackTrace) => {
              if (dart.equals(this[_activeCallbackIdentity], callbackIdentity)) {
                this.setState(dart.fn(() => {
                  this[_snapshot] = new (__t$AsyncSnapshotOfT()).withError(async$.ConnectionState.done, error, stackTrace);
                }, T$.VoidTovoid()));
              }
              if (!dart.fn(() => {
                if (async$.FutureBuilder.debugRethrowError) {
                  T$.FutureOfObject().error(error, stackTrace);
                }
                return true;
              }, T$.VoidTobool())()) dart.assertFailed(null, I[1], 640, 16, "() {\n          if(FutureBuilder.debugRethrowError) {\n            Future<Object>.error(error, stackTrace);\n          }\n          return true;\n        }()");
            }, T$.ObjectAndStackTraceToNull())});
          this[_snapshot] = this[_snapshot].inState(async$.ConnectionState.waiting);
        }
      }
      [_unsubscribe]() {
        this[_activeCallbackIdentity] = null;
      }
      static ['_#new#tearOff'](T) {
        return new (async$._FutureBuilderState$(T)).new();
      }
    }
    (_FutureBuilderState.new = function() {
      this[_activeCallbackIdentity] = null;
      this[___FutureBuilderState__snapshot] = null;
      _FutureBuilderState.__proto__.new.call(this);
      ;
    }).prototype = _FutureBuilderState.prototype;
    dart.addTypeTests(_FutureBuilderState);
    _FutureBuilderState.prototype[_is__FutureBuilderState_default] = true;
    dart.addTypeCaches(_FutureBuilderState);
    dart.setMethodSignature(_FutureBuilderState, () => ({
      __proto__: dart.getMethods(_FutureBuilderState.__proto__),
      build: dart.fnType(framework.Widget, [framework.BuildContext]),
      [_subscribe]: dart.fnType(dart.void, []),
      [_unsubscribe]: dart.fnType(dart.void, [])
    }));
    dart.setGetterSignature(_FutureBuilderState, () => ({
      __proto__: dart.getGetters(_FutureBuilderState.__proto__),
      [_snapshot]: async$.AsyncSnapshot$(T)
    }));
    dart.setSetterSignature(_FutureBuilderState, () => ({
      __proto__: dart.getSetters(_FutureBuilderState.__proto__),
      [_snapshot]: async$.AsyncSnapshot$(T)
    }));
    dart.setLibraryUri(_FutureBuilderState, I[0]);
    dart.setFieldSignature(_FutureBuilderState, () => ({
      __proto__: dart.getFields(_FutureBuilderState.__proto__),
      [_activeCallbackIdentity]: dart.fieldType(dart.nullable(core.Object)),
      [___FutureBuilderState__snapshot]: dart.fieldType(dart.nullable(async$.AsyncSnapshot$(T)))
    }));
    return _FutureBuilderState;
  });
  async$._FutureBuilderState = async$._FutureBuilderState$();
  dart.addTypeTests(async$._FutureBuilderState, _is__FutureBuilderState_default);
  dart.trackLibraries("packages/flutter/src/widgets/async.dart", {
    "package:flutter/src/widgets/async.dart": async$
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["async.dart"],"names":[],"mappings":"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","file":"../../../../../../../../../packages/flutter/src/widgets/async.dart.lib.js"}');
  // Exports:
  return {
    src__widgets__async: async$
  };
}));

//# sourceMappingURL=async.dart.lib.js.map
