define(['dart_sdk', 'packages/flutter/src/widgets/title.dart', 'packages/flutter/src/painting/alignment.dart', 'packages/get/get_core/src/get_main.dart', 'packages/flutter/src/rendering/tweens.dart', 'packages/flutter/src/animation/listener_helpers.dart', 'packages/flutter/src/animation/animation_controller.dart', 'packages/flutter/src/animation/curves.dart', 'packages/flutter/src/rendering/box.dart', 'packages/flutter/src/widgets/dismissible.dart', 'packages/flutter/src/foundation/key.dart', 'packages/get/get_utils/src/queue/get_queue.dart', 'packages/flutter/src/painting/edge_insets.dart', 'packages/flutter/src/painting/box_shadow.dart', 'packages/flutter/src/painting/gradient.dart', 'packages/flutter/src/widgets/form.dart', 'packages/flutter/src/material/icon_button.dart', 'packages/flutter/src/material/colors.dart', 'packages/flutter/src/widgets/safe_area.dart', 'packages/flutter/src/widgets/async.dart', 'packages/flutter/src/painting/border_radius.dart', 'packages/flutter/src/painting/box_decoration.dart', 'packages/get/get_core/get_core.dart', 'packages/flutter/src/scheduler/binding.dart', 'packages/flutter/src/painting/box_border.dart', 'packages/flutter/src/rendering/flex.dart', 'packages/flutter/src/material/progress_indicator.dart', 'packages/flutter/src/painting/placeholder_span.dart', 'packages/flutter/src/widgets/icon.dart', 'packages/flutter/src/foundation/synchronous_future.dart', 'packages/get/get_navigation/src/routes/custom_transition.dart', 'packages/get/get_navigation/src/routes/transitions_type.dart', 'packages/flutter/src/rendering/stack.dart', 'packages/flutter/src/rendering/proxy_box.dart', 'packages/flutter/src/gestures/monodrag.dart', 'packages/flutter/src/gestures/drag_details.dart', 'packages/flutter/src/gestures/events.dart', 'packages/flutter/src/cupertino/route.dart', 'packages/flutter/src/foundation/change_notifier.dart', 'packages/get/get_navigation/src/routes/default_transitions.dart', 'packages/get/get_utils/src/platform/platform_web.dart', 'packages/get/get_utils/src/extensions/event_loop_extensions.dart', 'packages/get/get_instance/src/lifecycle.dart', 'packages/get/get_state_manager/src/simple/list_notifier.dart', 'packages/flutter/src/material/app.dart', 'packages/get/get_core/src/smart_management.dart', 'packages/get/get_utils/src/extensions/internacionalization.dart', 'packages/get/get_navigation/src/root/internacionalization.dart', 'packages/get/get_state_manager/src/rx_flutter/rx_obx_widget.dart', 'packages/get/get_state_manager/src/simple/get_widget_cache.dart', 'packages/flutter/src/foundation/debug.dart', 'packages/flutter/src/scheduler/ticker.dart', 'packages/get/get_rx/src/rx_types/rx_types.dart', 'packages/flutter/src/cupertino/app.dart', 'packages/flutter/src/cupertino/text_theme.dart', 'packages/flutter/src/gestures/recognizer.dart', 'packages/flutter/src/painting/borders.dart', 'packages/flutter/src/painting/rounded_rectangle_border.dart', 'packages/flutter/src/material/dialog.dart', 'packages/flutter/src/rendering/wrap.dart', 'packages/flutter/src/widgets/will_pop_scope.dart', 'packages/flutter/src/foundation/_platform_web.dart', 'packages/flutter/src/rendering/shifted_box.dart'], (function load__packages__get__get_navigation__src__snackbar__snackbar_controller_dart(dart_sdk, packages__flutter__src__widgets__title$46dart, packages__flutter__src__painting__alignment$46dart, packages__get__get_core__src__get_main$46dart, packages__flutter__src__rendering__tweens$46dart, packages__flutter__src__animation__listener_helpers$46dart, packages__flutter__src__animation__animation_controller$46dart, packages__flutter__src__animation__curves$46dart, packages__flutter__src__rendering__box$46dart, packages__flutter__src__widgets__dismissible$46dart, packages__flutter__src__foundation__key$46dart, packages__get__get_utils__src__queue__get_queue$46dart, packages__flutter__src__painting__edge_insets$46dart, packages__flutter__src__painting__box_shadow$46dart, packages__flutter__src__painting__gradient$46dart, packages__flutter__src__widgets__form$46dart, packages__flutter__src__material__icon_button$46dart, packages__flutter__src__material__colors$46dart, packages__flutter__src__widgets__safe_area$46dart, packages__flutter__src__widgets__async$46dart, packages__flutter__src__painting__border_radius$46dart, packages__flutter__src__painting__box_decoration$46dart, packages__get__get_core__get_core$46dart, packages__flutter__src__scheduler__binding$46dart, packages__flutter__src__painting__box_border$46dart, packages__flutter__src__rendering__flex$46dart, packages__flutter__src__material__progress_indicator$46dart, packages__flutter__src__painting__placeholder_span$46dart, packages__flutter__src__widgets__icon$46dart, packages__flutter__src__foundation__synchronous_future$46dart, packages__get__get_navigation__src__routes__custom_transition$46dart, packages__get__get_navigation__src__routes__transitions_type$46dart, packages__flutter__src__rendering__stack$46dart, packages__flutter__src__rendering__proxy_box$46dart, packages__flutter__src__gestures__monodrag$46dart, packages__flutter__src__gestures__drag_details$46dart, packages__flutter__src__gestures__events$46dart, packages__flutter__src__cupertino__route$46dart, packages__flutter__src__foundation__change_notifier$46dart, packages__get__get_navigation__src__routes__default_transitions$46dart, packages__get__get_utils__src__platform__platform_web$46dart, packages__get__get_utils__src__extensions__event_loop_extensions$46dart, packages__get__get_instance__src__lifecycle$46dart, packages__get__get_state_manager__src__simple__list_notifier$46dart, packages__flutter__src__material__app$46dart, packages__get__get_core__src__smart_management$46dart, packages__get__get_utils__src__extensions__internacionalization$46dart, packages__get__get_navigation__src__root__internacionalization$46dart, packages__get__get_state_manager__src__rx_flutter__rx_obx_widget$46dart, packages__get__get_state_manager__src__simple__get_widget_cache$46dart, packages__flutter__src__foundation__debug$46dart, packages__flutter__src__scheduler__ticker$46dart, packages__get__get_rx__src__rx_types__rx_types$46dart, packages__flutter__src__cupertino__app$46dart, packages__flutter__src__cupertino__text_theme$46dart, packages__flutter__src__gestures__recognizer$46dart, packages__flutter__src__painting__borders$46dart, packages__flutter__src__painting__rounded_rectangle_border$46dart, packages__flutter__src__material__dialog$46dart, packages__flutter__src__rendering__wrap$46dart, packages__flutter__src__widgets__will_pop_scope$46dart, packages__flutter__src__foundation___platform_web$46dart, packages__flutter__src__rendering__shifted_box$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const _interceptors = dart_sdk._interceptors;
  const _internal = dart_sdk._internal;
  const ui = dart_sdk.ui;
  const math = dart_sdk.math;
  const _js_helper = dart_sdk._js_helper;
  const collection = dart_sdk.collection;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const framework = packages__flutter__src__widgets__title$46dart.src__widgets__framework;
  const overlay = packages__flutter__src__widgets__title$46dart.src__widgets__overlay;
  const gesture_detector = packages__flutter__src__widgets__title$46dart.src__widgets__gesture_detector;
  const transitions = packages__flutter__src__widgets__title$46dart.src__widgets__transitions;
  const basic = packages__flutter__src__widgets__title$46dart.src__widgets__basic;
  const container = packages__flutter__src__widgets__title$46dart.src__widgets__container;
  const widget_inspector = packages__flutter__src__widgets__title$46dart.src__widgets__widget_inspector;
  const media_query = packages__flutter__src__widgets__title$46dart.src__widgets__media_query;
  const focus_manager = packages__flutter__src__widgets__title$46dart.src__widgets__focus_manager;
  const focus_scope = packages__flutter__src__widgets__title$46dart.src__widgets__focus_scope;
  const text = packages__flutter__src__widgets__title$46dart.src__widgets__text;
  const ticker_provider = packages__flutter__src__widgets__title$46dart.src__widgets__ticker_provider;
  const navigator = packages__flutter__src__widgets__title$46dart.src__widgets__navigator;
  const pages = packages__flutter__src__widgets__title$46dart.src__widgets__pages;
  const debug = packages__flutter__src__widgets__title$46dart.src__widgets__debug;
  const binding = packages__flutter__src__widgets__title$46dart.src__widgets__binding;
  const localizations = packages__flutter__src__widgets__title$46dart.src__widgets__localizations;
  const shortcuts = packages__flutter__src__widgets__title$46dart.src__widgets__shortcuts;
  const actions = packages__flutter__src__widgets__title$46dart.src__widgets__actions;
  const scroll_configuration = packages__flutter__src__widgets__title$46dart.src__widgets__scroll_configuration;
  const router = packages__flutter__src__widgets__title$46dart.src__widgets__router;
  const scroll_controller = packages__flutter__src__widgets__title$46dart.src__widgets__scroll_controller;
  const routes = packages__flutter__src__widgets__title$46dart.src__widgets__routes;
  const alignment = packages__flutter__src__painting__alignment$46dart.src__painting__alignment;
  const get_main = packages__get__get_core__src__get_main$46dart.get_core__src__get_main;
  const tweens = packages__flutter__src__rendering__tweens$46dart.src__rendering__tweens;
  const animations = packages__flutter__src__animation__listener_helpers$46dart.src__animation__animations;
  const tween = packages__flutter__src__animation__listener_helpers$46dart.src__animation__tween;
  const animation = packages__flutter__src__animation__listener_helpers$46dart.src__animation__animation;
  const animation_controller = packages__flutter__src__animation__animation_controller$46dart.src__animation__animation_controller;
  const curves = packages__flutter__src__animation__curves$46dart.src__animation__curves;
  const box$ = packages__flutter__src__rendering__box$46dart.src__rendering__box;
  const dismissible = packages__flutter__src__widgets__dismissible$46dart.src__widgets__dismissible;
  const key = packages__flutter__src__foundation__key$46dart.src__foundation__key;
  const get_queue = packages__get__get_utils__src__queue__get_queue$46dart.get_utils__src__queue__get_queue;
  const edge_insets = packages__flutter__src__painting__edge_insets$46dart.src__painting__edge_insets;
  const box_shadow = packages__flutter__src__painting__box_shadow$46dart.src__painting__box_shadow;
  const gradient = packages__flutter__src__painting__gradient$46dart.src__painting__gradient;
  const form = packages__flutter__src__widgets__form$46dart.src__widgets__form;
  const material = packages__flutter__src__material__icon_button$46dart.src__material__material;
  const page_transitions_theme = packages__flutter__src__material__icon_button$46dart.src__material__page_transitions_theme;
  const scaffold = packages__flutter__src__material__icon_button$46dart.src__material__scaffold;
  const theme_data = packages__flutter__src__material__icon_button$46dart.src__material__theme_data;
  const theme$ = packages__flutter__src__material__icon_button$46dart.src__material__theme;
  const material_localizations = packages__flutter__src__material__icon_button$46dart.src__material__material_localizations;
  const debug$ = packages__flutter__src__material__icon_button$46dart.src__material__debug;
  const text_button = packages__flutter__src__material__icon_button$46dart.src__material__text_button;
  const button_theme = packages__flutter__src__material__icon_button$46dart.src__material__button_theme;
  const bottom_sheet = packages__flutter__src__material__icon_button$46dart.src__material__bottom_sheet;
  const colors = packages__flutter__src__material__colors$46dart.src__material__colors;
  const safe_area = packages__flutter__src__widgets__safe_area$46dart.src__widgets__safe_area;
  const async$ = packages__flutter__src__widgets__async$46dart.src__widgets__async;
  const border_radius = packages__flutter__src__painting__border_radius$46dart.src__painting__border_radius;
  const box_decoration = packages__flutter__src__painting__box_decoration$46dart.src__painting__box_decoration;
  const get_core = packages__get__get_core__get_core$46dart.get_core__get_core;
  const binding$ = packages__flutter__src__scheduler__binding$46dart.src__scheduler__binding;
  const box_border = packages__flutter__src__painting__box_border$46dart.src__painting__box_border;
  const flex = packages__flutter__src__rendering__flex$46dart.src__rendering__flex;
  const progress_indicator = packages__flutter__src__material__progress_indicator$46dart.src__material__progress_indicator;
  const text_style = packages__flutter__src__painting__placeholder_span$46dart.src__painting__text_style;
  const icon = packages__flutter__src__widgets__icon$46dart.src__widgets__icon;
  const synchronous_future = packages__flutter__src__foundation__synchronous_future$46dart.src__foundation__synchronous_future;
  const custom_transition = packages__get__get_navigation__src__routes__custom_transition$46dart.get_navigation__src__routes__custom_transition;
  const transitions_type = packages__get__get_navigation__src__routes__transitions_type$46dart.get_navigation__src__routes__transitions_type;
  const stack = packages__flutter__src__rendering__stack$46dart.src__rendering__stack;
  const proxy_box = packages__flutter__src__rendering__proxy_box$46dart.src__rendering__proxy_box;
  const monodrag = packages__flutter__src__gestures__monodrag$46dart.src__gestures__monodrag;
  const drag_details = packages__flutter__src__gestures__drag_details$46dart.src__gestures__drag_details;
  const events = packages__flutter__src__gestures__events$46dart.src__gestures__events;
  const route$ = packages__flutter__src__cupertino__route$46dart.src__cupertino__route;
  const change_notifier = packages__flutter__src__foundation__change_notifier$46dart.src__foundation__change_notifier;
  const default_transitions = packages__get__get_navigation__src__routes__default_transitions$46dart.get_navigation__src__routes__default_transitions;
  const platform = packages__get__get_utils__src__platform__platform_web$46dart.get_utils__src__platform__platform;
  const context_extensions = packages__get__get_utils__src__platform__platform_web$46dart.get_utils__src__extensions__context_extensions;
  const event_loop_extensions = packages__get__get_utils__src__extensions__event_loop_extensions$46dart.get_utils__src__extensions__event_loop_extensions;
  const lifecycle = packages__get__get_instance__src__lifecycle$46dart.get_instance__src__lifecycle;
  const list_notifier = packages__get__get_state_manager__src__simple__list_notifier$46dart.get_state_manager__src__simple__list_notifier;
  const app = packages__flutter__src__material__app$46dart.src__material__app;
  const smart_management = packages__get__get_core__src__smart_management$46dart.get_core__src__smart_management;
  const internacionalization = packages__get__get_utils__src__extensions__internacionalization$46dart.get_utils__src__extensions__internacionalization;
  const internacionalization$ = packages__get__get_navigation__src__root__internacionalization$46dart.get_navigation__src__root__internacionalization;
  const rx_obx_widget = packages__get__get_state_manager__src__rx_flutter__rx_obx_widget$46dart.get_state_manager__src__rx_flutter__rx_obx_widget;
  const get_widget_cache = packages__get__get_state_manager__src__simple__get_widget_cache$46dart.get_state_manager__src__simple__get_widget_cache;
  const assertions = packages__flutter__src__foundation__debug$46dart.src__foundation__assertions;
  const diagnostics = packages__flutter__src__foundation__debug$46dart.src__foundation__diagnostics;
  const ticker = packages__flutter__src__scheduler__ticker$46dart.src__scheduler__ticker;
  const rx_types = packages__get__get_rx__src__rx_types__rx_types$46dart.get_rx__src__rx_types__rx_types;
  const app$ = packages__flutter__src__cupertino__app$46dart.src__cupertino__app;
  const theme = packages__flutter__src__cupertino__text_theme$46dart.src__cupertino__theme;
  const recognizer = packages__flutter__src__gestures__recognizer$46dart.src__gestures__recognizer;
  const borders = packages__flutter__src__painting__borders$46dart.src__painting__borders;
  const rounded_rectangle_border = packages__flutter__src__painting__rounded_rectangle_border$46dart.src__painting__rounded_rectangle_border;
  const dialog = packages__flutter__src__material__dialog$46dart.src__material__dialog;
  const wrap = packages__flutter__src__rendering__wrap$46dart.src__rendering__wrap;
  const will_pop_scope = packages__flutter__src__widgets__will_pop_scope$46dart.src__widgets__will_pop_scope;
  const platform$ = packages__flutter__src__foundation___platform_web$46dart.src__foundation__platform;
  const shifted_box = packages__flutter__src__rendering__shifted_box$46dart.src__rendering__shifted_box;
  var snackbar_controller = Object.create(dart.library);
  var snackbar = Object.create(dart.library);
  var route_middleware = Object.create(dart.library);
  var route_observer = Object.create(dart.library);
  var get_route = Object.create(dart.library);
  var get_transition_mixin = Object.create(dart.library);
  var default_route = Object.create(dart.library);
  var root_controller = Object.create(dart.library);
  var get_material_app = Object.create(dart.library);
  var simple_builder = Object.create(dart.library);
  var mixin_state = Object.create(dart.library);
  var get_view = Object.create(dart.library);
  var get_state = Object.create(dart.library);
  var get_responsive = Object.create(dart.library);
  var get_controllers = Object.create(dart.library);
  var rx_ticket_provider_mixin = Object.create(dart.library);
  var instance_manager = Object.create(dart.library);
  var rx_notifier = Object.create(dart.library);
  var rx_getx_widget = Object.create(dart.library);
  var rx_disposable = Object.create(dart.library);
  var get_state_manager = Object.create(dart.library);
  var get_cupertino_app = Object.create(dart.library);
  var router_outlet = Object.create(dart.library);
  var get_router_delegate = Object.create(dart.library);
  var get_nav_config = Object.create(dart.library);
  var get_information_parser = Object.create(dart.library);
  var parse_route = Object.create(dart.library);
  var dialog_route = Object.create(dart.library);
  var extension_navigation = Object.create(dart.library);
  var bottomsheet$ = Object.create(dart.library);
  var get_navigation = Object.create(dart.library);
  var route_manager = Object.create(dart.library);
  var extension_instance = Object.create(dart.library);
  var router_report = Object.create(dart.library);
  var get_instance = Object.create(dart.library);
  var bindings_interface = Object.create(dart.library);
  var get_instance$ = Object.create(dart.library);
  var get_reset = Object.create(dart.library);
  var get = Object.create(dart.library);
  var $clear = dartx.clear;
  var $addAll = dartx.addAll;
  var $runtimeType = dartx.runtimeType;
  var $isNotEmpty = dartx.isNotEmpty;
  var $first = dartx.first;
  var $isEmpty = dartx.isEmpty;
  var $add = dartx.add;
  var $remove = dartx.remove;
  var $compareTo = dartx.compareTo;
  var $sort = dartx.sort;
  var $forEach = dartx.forEach;
  var $entries = dartx.entries;
  var $addEntries = dartx.addEntries;
  var $hashCode = dartx.hashCode;
  var $startsWith = dartx.startsWith;
  var $replaceAllMapped = dartx.replaceAllMapped;
  var $replaceAll = dartx.replaceAll;
  var $_equals = dartx._equals;
  var $abs = dartx.abs;
  var $floor = dartx.floor;
  var $toString = dartx.toString;
  var $contains = dartx.contains;
  var $length = dartx.length;
  var $skip = dartx.skip;
  var $take = dartx.take;
  var $toList = dartx.toList;
  var $whereType = dartx.whereType;
  var $last = dartx.last;
  var $where = dartx.where;
  var $map = dartx.map;
  var $removeLast = dartx.removeLast;
  var $_set = dartx._set;
  var $_get = dartx._get;
  var $cast = dartx.cast;
  var $firstWhere = dartx.firstWhere;
  var $containsKey = dartx.containsKey;
  var $indexWhere = dartx.indexWhere;
  var $indexOf = dartx.indexOf;
  var $removeAt = dartx.removeAt;
  var $skipWhile = dartx.skipWhile;
  var $any = dartx.any;
  var $split = dartx.split;
  var $endsWith = dartx.endsWith;
  var $substring = dartx.substring;
  var $putIfAbsent = dartx.putIfAbsent;
  var $keys = dartx.keys;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(false);
  var T$ = {
    GlobalKeyOfGetSnackBarState: () => (T$.GlobalKeyOfGetSnackBarState = dart.constFn(framework.GlobalKey$(snackbar.GetSnackBarState)))(),
    JSArrayOfOverlayEntry: () => (T$.JSArrayOfOverlayEntry = dart.constFn(_interceptors.JSArray$(overlay.OverlayEntry)))(),
    TweenOfdouble: () => (T$.TweenOfdouble = dart.constFn(tween.Tween$(core.double)))(),
    VoidTovoid: () => (T$.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    WidgetN: () => (T$.WidgetN = dart.constFn(dart.nullable(framework.Widget)))(),
    BuildContextAndWidgetNToBackdropFilter: () => (T$.BuildContextAndWidgetNToBackdropFilter = dart.constFn(dart.fnType(basic.BackdropFilter, [framework.BuildContext, T$.WidgetN()])))(),
    BuildContextToGestureDetector: () => (T$.BuildContextToGestureDetector = dart.constFn(dart.fnType(gesture_detector.GestureDetector, [framework.BuildContext])))(),
    BuildContextToSemantics: () => (T$.BuildContextToSemantics = dart.constFn(dart.fnType(basic.Semantics, [framework.BuildContext])))(),
    boolN: () => (T$.boolN = dart.constFn(dart.nullable(core.bool)))(),
    FutureOfboolN: () => (T$.FutureOfboolN = dart.constFn(async.Future$(T$.boolN())))(),
    DismissDirectionToFutureOfboolN: () => (T$.DismissDirectionToFutureOfboolN = dart.constFn(dart.fnType(T$.FutureOfboolN(), [dismissible.DismissDirection])))(),
    ValueKeyOfString: () => (T$.ValueKeyOfString = dart.constFn(key.ValueKey$(core.String)))(),
    DismissDirectionTovoid: () => (T$.DismissDirectionTovoid = dart.constFn(dart.fnType(dart.void, [dismissible.DismissDirection])))(),
    JSArrayOfSnackbarController: () => (T$.JSArrayOfSnackbarController = dart.constFn(_interceptors.JSArray$(snackbar_controller.SnackbarController)))(),
    CompleterOfSize: () => (T$.CompleterOfSize = dart.constFn(async.Completer$(ui.Size)))(),
    StateOfStatefulWidget: () => (T$.StateOfStatefulWidget = dart.constFn(framework.State$(framework.StatefulWidget)))(),
    GlobalKeyOfStateOfStatefulWidget: () => (T$.GlobalKeyOfStateOfStatefulWidget = dart.constFn(framework.GlobalKey$(T$.StateOfStatefulWidget())))(),
    FutureBuilderOfSize: () => (T$.FutureBuilderOfSize = dart.constFn(async$.FutureBuilder$(ui.Size)))(),
    AsyncSnapshotOfSize: () => (T$.AsyncSnapshotOfSize = dart.constFn(async$.AsyncSnapshot$(ui.Size)))(),
    BuildContextAndAsyncSnapshotOfSizeToWidget: () => (T$.BuildContextAndAsyncSnapshotOfSizeToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, T$.AsyncSnapshotOfSize()])))(),
    JSArrayOfWidget: () => (T$.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))(),
    DurationTovoid: () => (T$.DurationTovoid = dart.constFn(dart.fnType(dart.void, [core.Duration])))(),
    AnimationStatusTovoid: () => (T$.AnimationStatusTovoid = dart.constFn(dart.fnType(dart.void, [animation.AnimationStatus])))(),
    GetNavConfigN: () => (T$.GetNavConfigN = dart.constFn(dart.nullable(get_nav_config.GetNavConfig)))(),
    SynchronousFutureOfGetNavConfigN: () => (T$.SynchronousFutureOfGetNavConfigN = dart.constFn(synchronous_future.SynchronousFuture$(T$.GetNavConfigN())))(),
    JSArrayOfGetMiddleware: () => (T$.JSArrayOfGetMiddleware = dart.constFn(_interceptors.JSArray$(route_middleware.GetMiddleware)))(),
    GetMiddlewareAndGetMiddlewareToint: () => (T$.GetMiddlewareAndGetMiddlewareToint = dart.constFn(dart.fnType(core.int, [route_middleware.GetMiddleware, route_middleware.GetMiddleware])))(),
    GetMiddlewareTovoid: () => (T$.GetMiddlewareTovoid = dart.constFn(dart.fnType(dart.void, [route_middleware.GetMiddleware])))(),
    RoutingTovoid: () => (T$.RoutingTovoid = dart.constFn(dart.fnType(dart.void, [route_observer.Routing])))(),
    StringN: () => (T$.StringN = dart.constFn(dart.nullable(core.String)))(),
    JSArrayOfStringN: () => (T$.JSArrayOfStringN = dart.constFn(_interceptors.JSArray$(T$.StringN())))(),
    MatchToString: () => (T$.MatchToString = dart.constFn(dart.fnType(core.String, [core.Match])))(),
    ObjectN: () => (T$.ObjectN = dart.constFn(dart.nullable(core.Object)))(),
    VoidToFn: () => (T$.VoidToFn = dart.constFn(dart.fnType(T$.AnimationStatusTovoid(), [])))(),
    FnTodynamic: () => (T$.FnTodynamic = dart.constFn(dart.fnType(dart.dynamic, [T$.AnimationStatusTovoid()])))(),
    ValueNotifierOfStringN: () => (T$.ValueNotifierOfStringN = dart.constFn(change_notifier.ValueNotifier$(T$.StringN())))(),
    VoidTobool: () => (T$.VoidTobool = dart.constFn(dart.fnType(core.bool, [])))(),
    JSArrayOfBindings: () => (T$.JSArrayOfBindings = dart.constFn(_interceptors.JSArray$(bindings_interface.Bindings)))(),
    GlobalKeyOfScaffoldMessengerState: () => (T$.GlobalKeyOfScaffoldMessengerState = dart.constFn(framework.GlobalKey$(scaffold.ScaffoldMessengerState)))(),
    IdentityMapOfString$StringN: () => (T$.IdentityMapOfString$StringN = dart.constFn(_js_helper.IdentityMap$(core.String, T$.StringN())))(),
    GlobalKeyOfNavigatorState: () => (T$.GlobalKeyOfNavigatorState = dart.constFn(framework.GlobalKey$(navigator.NavigatorState)))(),
    LinkedMapOfdynamic$GlobalKeyOfNavigatorState: () => (T$.LinkedMapOfdynamic$GlobalKeyOfNavigatorState = dart.constFn(_js_helper.LinkedMap$(dart.dynamic, T$.GlobalKeyOfNavigatorState())))(),
    VoidToNull: () => (T$.VoidToNull = dart.constFn(dart.fnType(core.Null, [])))(),
    dynamicToNull: () => (T$.dynamicToNull = dart.constFn(dart.fnType(core.Null, [dart.dynamic])))(),
    BuildContextToWidget: () => (T$.BuildContextToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext])))(),
    GetBuilderOfGetMaterialController: () => (T$.GetBuilderOfGetMaterialController = dart.constFn(get_state.GetBuilder$(root_controller.GetMaterialController)))(),
    GetBuilderStateOfGetMaterialController: () => (T$.GetBuilderStateOfGetMaterialController = dart.constFn(get_state.GetBuilderState$(root_controller.GetMaterialController)))(),
    GetBuilderStateOfGetMaterialControllerTovoid: () => (T$.GetBuilderStateOfGetMaterialControllerTovoid = dart.constFn(dart.fnType(dart.void, [T$.GetBuilderStateOfGetMaterialController()])))(),
    JSArrayOfNavigatorObserver: () => (T$.JSArrayOfNavigatorObserver = dart.constFn(_interceptors.JSArray$(navigator.NavigatorObserver)))(),
    GetMaterialControllerToMaterialApp: () => (T$.GetMaterialControllerToMaterialApp = dart.constFn(dart.fnType(app.MaterialApp, [root_controller.GetMaterialController])))(),
    JSArrayOfRoute: () => (T$.JSArrayOfRoute = dart.constFn(_interceptors.JSArray$(navigator.Route)))(),
    ChangeNotifierN: () => (T$.ChangeNotifierN = dart.constFn(dart.nullable(change_notifier.ChangeNotifier)))(),
    StreamControllerN: () => (T$.StreamControllerN = dart.constFn(dart.nullable(async.StreamController)))(),
    JSArrayOfVoidTovoid: () => (T$.JSArrayOfVoidTovoid = dart.constFn(_interceptors.JSArray$(T$.VoidTovoid())))(),
    VoidToWidget: () => (T$.VoidToWidget = dart.constFn(dart.fnType(framework.Widget, [])))(),
    ExpandoOfGetLifeCycleBase: () => (T$.ExpandoOfGetLifeCycleBase = dart.constFn(core.Expando$(lifecycle.GetLifeCycleBase)))(),
    GetBuilderOfGetxController: () => (T$.GetBuilderOfGetxController = dart.constFn(get_state.GetBuilder$(get_controllers.GetxController)))(),
    JSArrayOfDiagnosticsNode: () => (T$.JSArrayOfDiagnosticsNode = dart.constFn(_interceptors.JSArray$(diagnostics.DiagnosticsNode)))(),
    LinkedHashSetOf_WidgetTicker: () => (T$.LinkedHashSetOf_WidgetTicker = dart.constFn(collection.LinkedHashSet$(rx_ticket_provider_mixin._WidgetTicker)))(),
    StringNToWidget: () => (T$.StringNToWidget = dart.constFn(dart.fnType(framework.Widget, [T$.StringN()])))(),
    StringNToNWidget: () => (T$.StringNToNWidget = dart.constFn(dart.nullable(T$.StringNToWidget())))(),
    DiagnosticsPropertyOfString: () => (T$.DiagnosticsPropertyOfString = dart.constFn(diagnostics.DiagnosticsProperty$(core.String)))(),
    dynamicTovoid: () => (T$.dynamicTovoid = dart.constFn(dart.fnType(dart.void, [dart.dynamic])))(),
    GetXOfDisposableInterface: () => (T$.GetXOfDisposableInterface = dart.constFn(rx_getx_widget.GetX$(rx_disposable.DisposableInterface)))(),
    GetMaterialControllerToCupertinoApp: () => (T$.GetMaterialControllerToCupertinoApp = dart.constFn(dart.fnType(app$.CupertinoApp, [root_controller.GetMaterialController])))(),
    IterableOfGetPage: () => (T$.IterableOfGetPage = dart.constFn(core.Iterable$(get_route.GetPage)))(),
    GetNavConfigToIterableOfGetPage: () => (T$.GetNavConfigToIterableOfGetPage = dart.constFn(dart.fnType(T$.IterableOfGetPage(), [get_nav_config.GetNavConfig])))(),
    GetDelegateToGetPage: () => (T$.GetDelegateToGetPage = dart.constFn(dart.fnType(get_route.GetPage, [get_router_delegate.GetDelegate])))(),
    GetPageN: () => (T$.GetPageN = dart.constFn(dart.nullable(get_route.GetPage)))(),
    JSArrayOfGetPageN: () => (T$.JSArrayOfGetPageN = dart.constFn(_interceptors.JSArray$(T$.GetPageN())))(),
    RouteAnddynamicTobool: () => (T$.RouteAnddynamicTobool = dart.constFn(dart.fnType(core.bool, [navigator.Route, dart.dynamic])))(),
    IterableNOfGetPage: () => (T$.IterableNOfGetPage = dart.constFn(dart.nullable(T$.IterableOfGetPage())))(),
    BuildContextAndGetDelegateAndIterableNOfGetPageToWidget: () => (T$.BuildContextAndGetDelegateAndIterableNOfGetPageToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, get_router_delegate.GetDelegate, T$.IterableNOfGetPage()])))(),
    JSArrayOfGetNavConfig: () => (T$.JSArrayOfGetNavConfig = dart.constFn(_interceptors.JSArray$(get_nav_config.GetNavConfig)))(),
    LinkedMapOfGetPage$Completer: () => (T$.LinkedMapOfGetPage$Completer = dart.constFn(_js_helper.LinkedMap$(get_route.GetPage, async.Completer)))(),
    VoidToScaffold: () => (T$.VoidToScaffold = dart.constFn(dart.fnType(scaffold.Scaffold, [])))(),
    IdentityMapOfString$String: () => (T$.IdentityMapOfString$String = dart.constFn(_js_helper.IdentityMap$(core.String, core.String)))(),
    SynchronousFutureOfbool: () => (T$.SynchronousFutureOfbool = dart.constFn(synchronous_future.SynchronousFuture$(core.bool)))(),
    JSArrayOfGetPage: () => (T$.JSArrayOfGetPage = dart.constFn(_interceptors.JSArray$(get_route.GetPage)))(),
    GetPageTobool: () => (T$.GetPageTobool = dart.constFn(dart.fnType(core.bool, [get_route.GetPage])))(),
    GetNavConfigToGetPage: () => (T$.GetNavConfigToGetPage = dart.constFn(dart.fnType(get_route.GetPage, [get_nav_config.GetNavConfig])))(),
    RouteTobool: () => (T$.RouteTobool = dart.constFn(dart.fnType(core.bool, [navigator.Route])))(),
    GetNavConfigNTobool: () => (T$.GetNavConfigNTobool = dart.constFn(dart.fnType(core.bool, [T$.GetNavConfigN()])))(),
    GetNavConfigTobool: () => (T$.GetNavConfigTobool = dart.constFn(dart.fnType(core.bool, [get_nav_config.GetNavConfig])))(),
    StringToIterableOfGetPage: () => (T$.StringToIterableOfGetPage = dart.constFn(dart.fnType(T$.IterableOfGetPage(), [core.String])))(),
    SynchronousFutureOfGetNavConfig: () => (T$.SynchronousFutureOfGetNavConfig = dart.constFn(synchronous_future.SynchronousFuture$(get_nav_config.GetNavConfig)))(),
    StringTobool: () => (T$.StringTobool = dart.constFn(dart.fnType(core.bool, [core.String])))(),
    JSArrayOfString: () => (T$.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    MapEntryOfString$GetPageN: () => (T$.MapEntryOfString$GetPageN = dart.constFn(core.MapEntry$(core.String, T$.GetPageN())))(),
    StringToMapEntryOfString$GetPageN: () => (T$.StringToMapEntryOfString$GetPageN = dart.constFn(dart.fnType(T$.MapEntryOfString$GetPageN(), [core.String])))(),
    MapEntryOfString$GetPageNTobool: () => (T$.MapEntryOfString$GetPageNTobool = dart.constFn(dart.fnType(core.bool, [T$.MapEntryOfString$GetPageN()])))(),
    MapEntryOfString$GetPage: () => (T$.MapEntryOfString$GetPage = dart.constFn(core.MapEntry$(core.String, get_route.GetPage)))(),
    MapEntryOfString$GetPageNToMapEntryOfString$GetPage: () => (T$.MapEntryOfString$GetPageNToMapEntryOfString$GetPage = dart.constFn(dart.fnType(T$.MapEntryOfString$GetPage(), [T$.MapEntryOfString$GetPageN()])))(),
    LinkedHashMapOfString$String: () => (T$.LinkedHashMapOfString$String = dart.constFn(collection.LinkedHashMap$(core.String, core.String)))(),
    MapEntryOfString$GetPageToGetPage: () => (T$.MapEntryOfString$GetPageToGetPage = dart.constFn(dart.fnType(get_route.GetPage, [T$.MapEntryOfString$GetPage()])))(),
    ListOfGetMiddleware: () => (T$.ListOfGetMiddleware = dart.constFn(core.List$(route_middleware.GetMiddleware)))(),
    ColorN: () => (T$.ColorN = dart.constFn(dart.nullable(ui.Color)))(),
    ClipN: () => (T$.ClipN = dart.constFn(dart.nullable(ui.Clip)))(),
    doubleN: () => (T$.doubleN = dart.constFn(dart.nullable(core.double)))(),
    DurationN: () => (T$.DurationN = dart.constFn(dart.nullable(core.Duration)))(),
    RouteSettingsN: () => (T$.RouteSettingsN = dart.constFn(dart.nullable(navigator.RouteSettings)))(),
    ShapeBorderN: () => (T$.ShapeBorderN = dart.constFn(dart.nullable(borders.ShapeBorder)))(),
    Widget__ToFutureOfTN: () => (T$.Widget__ToFutureOfTN = dart.constFn(dart.gFnType(T => {
      var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
      var __t$FutureOfTN = () => (__t$FutureOfTN = dart.constFn(async.Future$(__t$TN())))();
      return [__t$FutureOfTN(), [framework.Widget], {backgroundColor: T$.ColorN(), barrierColor: T$.ColorN(), clipBehavior: T$.ClipN(), elevation: T$.doubleN(), enableDrag: core.bool, enterBottomSheetDuration: T$.DurationN(), exitBottomSheetDuration: T$.DurationN(), ignoreSafeArea: T$.boolN(), isDismissible: core.bool, isScrollControlled: core.bool, persistent: core.bool, settings: T$.RouteSettingsN(), shape: T$.ShapeBorderN(), useRootNavigator: core.bool}, {}];
    }, T => {
      var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
      var __t$FutureOfTN = () => (__t$FutureOfTN = dart.constFn(async.Future$(__t$TN())))();
      return [T$.ObjectN()];
    })))(),
    BuildContextToTheme: () => (T$.BuildContextToTheme = dart.constFn(dart.fnType(theme$.Theme, [framework.BuildContext])))(),
    AnimationOfdouble: () => (T$.AnimationOfdouble = dart.constFn(animation.Animation$(core.double)))(),
    BuildContextAndAnimationOfdoubleAndAnimationOfdoubleToWidget: () => (T$.BuildContextAndAnimationOfdoubleAndAnimationOfdoubleToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, T$.AnimationOfdouble(), T$.AnimationOfdouble()])))(),
    BuildContextAndAnimationOfdoubleAndAnimationOfdouble__ToFadeTransition: () => (T$.BuildContextAndAnimationOfdoubleAndAnimationOfdouble__ToFadeTransition = dart.constFn(dart.fnType(transitions.FadeTransition, [framework.BuildContext, T$.AnimationOfdouble(), T$.AnimationOfdouble(), framework.Widget])))(),
    GlobalKeyNOfNavigatorState: () => (T$.GlobalKeyNOfNavigatorState = dart.constFn(dart.nullable(T$.GlobalKeyOfNavigatorState())))(),
    CurveN: () => (T$.CurveN = dart.constFn(dart.nullable(curves.Curve)))(),
    Widget__ToFutureOfTN$1: () => (T$.Widget__ToFutureOfTN$1 = dart.constFn(dart.gFnType(T => {
      var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
      var __t$FutureOfTN = () => (__t$FutureOfTN = dart.constFn(async.Future$(__t$TN())))();
      return [__t$FutureOfTN(), [framework.Widget], {arguments: T$.ObjectN(), barrierColor: T$.ColorN(), barrierDismissible: core.bool, name: T$.StringN(), navigatorKey: T$.GlobalKeyNOfNavigatorState(), routeSettings: T$.RouteSettingsN(), transitionCurve: T$.CurveN(), transitionDuration: T$.DurationN(), useSafeArea: core.bool}, {}];
    }, T => {
      var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
      var __t$FutureOfTN = () => (__t$FutureOfTN = dart.constFn(async.Future$(__t$TN())))();
      return [T$.ObjectN()];
    })))(),
    BuildContextAndAnimationOfdoubleAndAnimationOfdouble__ToWidget: () => (T$.BuildContextAndAnimationOfdoubleAndAnimationOfdouble__ToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, T$.AnimationOfdouble(), T$.AnimationOfdouble(), framework.Widget])))(),
    BuildContextAndAnimationOfdoubleAndAnimationOfdouble__ToNWidget: () => (T$.BuildContextAndAnimationOfdoubleAndAnimationOfdouble__ToNWidget = dart.constFn(dart.nullable(T$.BuildContextAndAnimationOfdoubleAndAnimationOfdouble__ToWidget())))(),
    __ToFutureOfTN: () => (T$.__ToFutureOfTN = dart.constFn(dart.gFnType(T => {
      var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
      var __t$FutureOfTN = () => (__t$FutureOfTN = dart.constFn(async.Future$(__t$TN())))();
      return [__t$FutureOfTN(), [], {barrierColor: ui.Color, barrierDismissible: core.bool, barrierLabel: T$.StringN(), navigatorKey: T$.GlobalKeyNOfNavigatorState(), pageBuilder: T$.BuildContextAndAnimationOfdoubleAndAnimationOfdoubleToWidget(), routeSettings: T$.RouteSettingsN(), transitionBuilder: T$.BuildContextAndAnimationOfdoubleAndAnimationOfdouble__ToNWidget(), transitionDuration: core.Duration}, {}];
    }, T => {
      var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
      var __t$FutureOfTN = () => (__t$FutureOfTN = dart.constFn(async.Future$(__t$TN())))();
      return [T$.ObjectN()];
    })))(),
    ListOfWidget: () => (T$.ListOfWidget = dart.constFn(core.List$(framework.Widget)))(),
    ListNOfWidget: () => (T$.ListNOfWidget = dart.constFn(dart.nullable(T$.ListOfWidget())))(),
    EdgeInsetsGeometryN: () => (T$.EdgeInsetsGeometryN = dart.constFn(dart.nullable(edge_insets.EdgeInsetsGeometry)))(),
    TextStyleN: () => (T$.TextStyleN = dart.constFn(dart.nullable(text_style.TextStyle)))(),
    VoidToNvoid: () => (T$.VoidToNvoid = dart.constFn(dart.nullable(T$.VoidTovoid())))(),
    FutureOfbool: () => (T$.FutureOfbool = dart.constFn(async.Future$(core.bool)))(),
    VoidToFutureOfbool: () => (T$.VoidToFutureOfbool = dart.constFn(dart.fnType(T$.FutureOfbool(), [])))(),
    VoidToNFutureOfbool: () => (T$.VoidToNFutureOfbool = dart.constFn(dart.nullable(T$.VoidToFutureOfbool())))(),
    __ToFutureOfTN$1: () => (T$.__ToFutureOfTN$1 = dart.constFn(dart.gFnType(T => {
      var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
      var __t$FutureOfTN = () => (__t$FutureOfTN = dart.constFn(async.Future$(__t$TN())))();
      return [__t$FutureOfTN(), [], {actions: T$.ListNOfWidget(), backgroundColor: T$.ColorN(), barrierDismissible: core.bool, buttonColor: T$.ColorN(), cancel: T$.WidgetN(), cancelTextColor: T$.ColorN(), confirm: T$.WidgetN(), confirmTextColor: T$.ColorN(), content: T$.WidgetN(), contentPadding: T$.EdgeInsetsGeometryN(), custom: T$.WidgetN(), middleText: core.String, middleTextStyle: T$.TextStyleN(), navigatorKey: T$.GlobalKeyNOfNavigatorState(), onCancel: T$.VoidToNvoid(), onConfirm: T$.VoidToNvoid(), onCustom: T$.VoidToNvoid(), onWillPop: T$.VoidToNFutureOfbool(), radius: core.double, textCancel: T$.StringN(), textConfirm: T$.StringN(), textCustom: T$.StringN(), title: core.String, titlePadding: T$.EdgeInsetsGeometryN(), titleStyle: T$.TextStyleN()}, {}];
    }, T => {
      var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
      var __t$FutureOfTN = () => (__t$FutureOfTN = dart.constFn(async.Future$(__t$TN())))();
      return [T$.ObjectN()];
    })))(),
    GradientN: () => (T$.GradientN = dart.constFn(dart.nullable(gradient.Gradient)))(),
    ListOfBoxShadow: () => (T$.ListOfBoxShadow = dart.constFn(core.List$(box_shadow.BoxShadow)))(),
    ListNOfBoxShadow: () => (T$.ListNOfBoxShadow = dart.constFn(dart.nullable(T$.ListOfBoxShadow())))(),
    DismissDirectionN: () => (T$.DismissDirectionN = dart.constFn(dart.nullable(dismissible.DismissDirection)))(),
    GetSnackBarTovoid: () => (T$.GetSnackBarTovoid = dart.constFn(dart.fnType(dart.void, [snackbar.GetSnackBar])))(),
    GetSnackBarToNvoid: () => (T$.GetSnackBarToNvoid = dart.constFn(dart.nullable(T$.GetSnackBarTovoid())))(),
    AnimationControllerN: () => (T$.AnimationControllerN = dart.constFn(dart.nullable(animation_controller.AnimationController)))(),
    AnimationOfColor: () => (T$.AnimationOfColor = dart.constFn(animation.Animation$(ui.Color)))(),
    AnimationNOfColor: () => (T$.AnimationNOfColor = dart.constFn(dart.nullable(T$.AnimationOfColor())))(),
    SnackbarStatusN: () => (T$.SnackbarStatusN = dart.constFn(dart.nullable(snackbar.SnackbarStatus)))(),
    SnackbarStatusNTovoid: () => (T$.SnackbarStatusNTovoid = dart.constFn(dart.fnType(dart.void, [T$.SnackbarStatusN()])))(),
    SnackbarStatusNToNvoid: () => (T$.SnackbarStatusNToNvoid = dart.constFn(dart.nullable(T$.SnackbarStatusNTovoid())))(),
    FormN: () => (T$.FormN = dart.constFn(dart.nullable(form.Form)))(),
    __ToSnackbarController: () => (T$.__ToSnackbarController = dart.constFn(dart.fnType(snackbar_controller.SnackbarController, [], {animationDuration: core.Duration, backgroundColor: ui.Color, backgroundGradient: T$.GradientN(), barBlur: core.double, borderColor: T$.ColorN(), borderRadius: core.double, borderWidth: core.double, boxShadows: T$.ListNOfBoxShadow(), dismissDirection: T$.DismissDirectionN(), duration: T$.DurationN(), forwardAnimationCurve: curves.Curve, icon: T$.WidgetN(), instantInit: core.bool, isDismissible: core.bool, leftBarIndicatorColor: T$.ColorN(), mainButton: T$.WidgetN(), margin: edge_insets.EdgeInsets, maxWidth: T$.doubleN(), message: T$.StringN(), messageText: T$.WidgetN(), onTap: T$.GetSnackBarToNvoid(), overlayBlur: core.double, overlayColor: T$.ColorN(), padding: edge_insets.EdgeInsets, progressIndicatorBackgroundColor: T$.ColorN(), progressIndicatorController: T$.AnimationControllerN(), progressIndicatorValueColor: T$.AnimationNOfColor(), reverseAnimationCurve: curves.Curve, shouldIconPulse: core.bool, showProgressIndicator: core.bool, snackPosition: snackbar.SnackPosition, snackStyle: snackbar.SnackStyle, snackbarStatus: T$.SnackbarStatusNToNvoid(), title: T$.StringN(), titleText: T$.WidgetN(), userInputForm: T$.FormN()}, {})))(),
    GetSnackBarToSnackbarController: () => (T$.GetSnackBarToSnackbarController = dart.constFn(dart.fnType(snackbar_controller.SnackbarController, [snackbar.GetSnackBar])))(),
    TextButtonN: () => (T$.TextButtonN = dart.constFn(dart.nullable(text_button.TextButton)))(),
    EdgeInsetsN: () => (T$.EdgeInsetsN = dart.constFn(dart.nullable(edge_insets.EdgeInsets)))(),
    SnackPositionN: () => (T$.SnackPositionN = dart.constFn(dart.nullable(snackbar.SnackPosition)))(),
    SnackStyleN: () => (T$.SnackStyleN = dart.constFn(dart.nullable(snackbar.SnackStyle)))(),
    StringAndString__ToSnackbarController: () => (T$.StringAndString__ToSnackbarController = dart.constFn(dart.fnType(snackbar_controller.SnackbarController, [core.String, core.String], {animationDuration: T$.DurationN(), backgroundColor: T$.ColorN(), backgroundGradient: T$.GradientN(), barBlur: T$.doubleN(), borderColor: T$.ColorN(), borderRadius: T$.doubleN(), borderWidth: T$.doubleN(), boxShadows: T$.ListNOfBoxShadow(), colorText: T$.ColorN(), dismissDirection: T$.DismissDirectionN(), duration: T$.DurationN(), forwardAnimationCurve: T$.CurveN(), icon: T$.WidgetN(), instantInit: core.bool, isDismissible: T$.boolN(), leftBarIndicatorColor: T$.ColorN(), mainButton: T$.TextButtonN(), margin: T$.EdgeInsetsN(), maxWidth: T$.doubleN(), messageText: T$.WidgetN(), onTap: T$.GetSnackBarToNvoid(), overlayBlur: T$.doubleN(), overlayColor: T$.ColorN(), padding: T$.EdgeInsetsN(), progressIndicatorBackgroundColor: T$.ColorN(), progressIndicatorController: T$.AnimationControllerN(), progressIndicatorValueColor: T$.AnimationNOfColor(), reverseAnimationCurve: T$.CurveN(), shouldIconPulse: T$.boolN(), showProgressIndicator: T$.boolN(), snackPosition: T$.SnackPositionN(), snackStyle: T$.SnackStyleN(), snackbarStatus: T$.SnackbarStatusNToNvoid(), titleText: T$.WidgetN(), userInputForm: T$.FormN()}, {})))(),
    BindingsN: () => (T$.BindingsN = dart.constFn(dart.nullable(bindings_interface.Bindings)))(),
    BuildContextTodouble: () => (T$.BuildContextTodouble = dart.constFn(dart.fnType(core.double, [framework.BuildContext])))(),
    BuildContextToNdouble: () => (T$.BuildContextToNdouble = dart.constFn(dart.nullable(T$.BuildContextTodouble())))(),
    intN: () => (T$.intN = dart.constFn(dart.nullable(core.int)))(),
    TransitionN: () => (T$.TransitionN = dart.constFn(dart.nullable(transitions_type.Transition)))(),
    dynamic__ToFutureNOfTN: () => (T$.dynamic__ToFutureNOfTN = dart.constFn(dart.gFnType(T => {
      var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
      var __t$FutureOfTN = () => (__t$FutureOfTN = dart.constFn(async.Future$(__t$TN())))();
      var __t$FutureNOfTN = () => (__t$FutureNOfTN = dart.constFn(dart.nullable(__t$FutureOfTN())))();
      return [__t$FutureNOfTN(), [dart.dynamic], {arguments: dart.dynamic, binding: T$.BindingsN(), curve: T$.CurveN(), duration: T$.DurationN(), fullscreenDialog: core.bool, gestureWidth: T$.BuildContextToNdouble(), id: T$.intN(), opaque: T$.boolN(), popGesture: T$.boolN(), preventDuplicates: core.bool, routeName: T$.StringN(), transition: T$.TransitionN()}, {}];
    }, T => {
      var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
      var __t$FutureOfTN = () => (__t$FutureOfTN = dart.constFn(async.Future$(__t$TN())))();
      var __t$FutureNOfTN = () => (__t$FutureNOfTN = dart.constFn(dart.nullable(__t$FutureOfTN())))();
      return [T$.ObjectN()];
    })))(),
    dynamicAndStringToFn: () => (T$.dynamicAndStringToFn = dart.constFn(dart.fnType(T$.VoidToWidget(), [dart.dynamic, core.String])))(),
    MapOfString$String: () => (T$.MapOfString$String = dart.constFn(core.Map$(core.String, core.String)))(),
    MapNOfString$String: () => (T$.MapNOfString$String = dart.constFn(dart.nullable(T$.MapOfString$String())))(),
    String__ToFutureNOfTN: () => (T$.String__ToFutureNOfTN = dart.constFn(dart.gFnType(T => {
      var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
      var __t$FutureOfTN = () => (__t$FutureOfTN = dart.constFn(async.Future$(__t$TN())))();
      var __t$FutureNOfTN = () => (__t$FutureNOfTN = dart.constFn(dart.nullable(__t$FutureOfTN())))();
      return [__t$FutureNOfTN(), [core.String], {arguments: dart.dynamic, id: T$.intN(), parameters: T$.MapNOfString$String(), preventDuplicates: core.bool}, {}];
    }, T => {
      var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
      var __t$FutureOfTN = () => (__t$FutureOfTN = dart.constFn(async.Future$(__t$TN())))();
      var __t$FutureNOfTN = () => (__t$FutureNOfTN = dart.constFn(dart.nullable(__t$FutureOfTN())))();
      return [T$.ObjectN()];
    })))(),
    Fn__Tovoid: () => (T$.Fn__Tovoid = dart.constFn(dart.fnType(dart.void, [T$.RouteTobool()], {id: T$.intN()}, {})))(),
    RouteOfTAndFn__ToFutureNOfTN: () => (T$.RouteOfTAndFn__ToFutureNOfTN = dart.constFn(dart.gFnType(T => {
      var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
      var __t$FutureOfTN = () => (__t$FutureOfTN = dart.constFn(async.Future$(__t$TN())))();
      var __t$FutureNOfTN = () => (__t$FutureNOfTN = dart.constFn(dart.nullable(__t$FutureOfTN())))();
      var __t$RouteOfT = () => (__t$RouteOfT = dart.constFn(navigator.Route$(T)))();
      return [__t$FutureNOfTN(), [__t$RouteOfT(), T$.RouteTobool()], {id: T$.intN()}, {}];
    }, T => {
      var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
      var __t$FutureOfTN = () => (__t$FutureOfTN = dart.constFn(async.Future$(__t$TN())))();
      var __t$FutureNOfTN = () => (__t$FutureNOfTN = dart.constFn(dart.nullable(__t$FutureOfTN())))();
      var __t$RouteOfT = () => (__t$RouteOfT = dart.constFn(navigator.Route$(T)))();
      return [T$.ObjectN()];
    })))(),
    StringAndFn__ToFutureNOfTN: () => (T$.StringAndFn__ToFutureNOfTN = dart.constFn(dart.gFnType(T => {
      var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
      var __t$FutureOfTN = () => (__t$FutureOfTN = dart.constFn(async.Future$(__t$TN())))();
      var __t$FutureNOfTN = () => (__t$FutureNOfTN = dart.constFn(dart.nullable(__t$FutureOfTN())))();
      return [__t$FutureNOfTN(), [core.String, T$.RouteTobool()], {arguments: dart.dynamic, id: T$.intN(), parameters: T$.MapNOfString$String()}, {}];
    }, T => {
      var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
      var __t$FutureOfTN = () => (__t$FutureOfTN = dart.constFn(async.Future$(__t$TN())))();
      var __t$FutureNOfTN = () => (__t$FutureNOfTN = dart.constFn(dart.nullable(__t$FutureOfTN())))();
      return [T$.ObjectN()];
    })))(),
    String__ToFutureNOfTN$1: () => (T$.String__ToFutureNOfTN$1 = dart.constFn(dart.gFnType(T => {
      var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
      var __t$FutureOfTN = () => (__t$FutureOfTN = dart.constFn(async.Future$(__t$TN())))();
      var __t$FutureNOfTN = () => (__t$FutureNOfTN = dart.constFn(dart.nullable(__t$FutureOfTN())))();
      return [__t$FutureNOfTN(), [core.String], {arguments: dart.dynamic, id: T$.intN(), parameters: T$.MapNOfString$String(), result: dart.dynamic}, {}];
    }, T => {
      var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
      var __t$FutureOfTN = () => (__t$FutureOfTN = dart.constFn(async.Future$(__t$TN())))();
      var __t$FutureNOfTN = () => (__t$FutureNOfTN = dart.constFn(dart.nullable(__t$FutureOfTN())))();
      return [T$.ObjectN()];
    })))(),
    Route__Tovoid: () => (T$.Route__Tovoid = dart.constFn(dart.fnType(dart.void, [navigator.Route], {id: T$.intN()}, {})))(),
    RouteToNbool: () => (T$.RouteToNbool = dart.constFn(dart.nullable(T$.RouteTobool())))(),
    String__ToFutureNOfTN$2: () => (T$.String__ToFutureNOfTN$2 = dart.constFn(dart.gFnType(T => {
      var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
      var __t$FutureOfTN = () => (__t$FutureOfTN = dart.constFn(async.Future$(__t$TN())))();
      var __t$FutureNOfTN = () => (__t$FutureNOfTN = dart.constFn(dart.nullable(__t$FutureOfTN())))();
      return [__t$FutureNOfTN(), [core.String], {arguments: dart.dynamic, id: T$.intN(), parameters: T$.MapNOfString$String(), predicate: T$.RouteToNbool()}, {}];
    }, T => {
      var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
      var __t$FutureOfTN = () => (__t$FutureOfTN = dart.constFn(async.Future$(__t$TN())))();
      var __t$FutureNOfTN = () => (__t$FutureNOfTN = dart.constFn(dart.nullable(__t$FutureOfTN())))();
      return [T$.ObjectN()];
    })))(),
    __Tovoid: () => (T$.__Tovoid = dart.constFn(dart.gFnType(T => {
      var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
      return [dart.void, [], {canPop: core.bool, closeOverlays: core.bool, id: T$.intN(), result: __t$TN()}, {}];
    }, T => {
      var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
      return [T$.ObjectN()];
    })))(),
    intAndintNTovoid: () => (T$.intAndintNTovoid = dart.constFn(dart.fnType(dart.void, [core.int], [T$.intN()])))(),
    dynamic__ToFutureNOfTN$1: () => (T$.dynamic__ToFutureNOfTN$1 = dart.constFn(dart.gFnType(T => {
      var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
      var __t$FutureOfTN = () => (__t$FutureOfTN = dart.constFn(async.Future$(__t$TN())))();
      var __t$FutureNOfTN = () => (__t$FutureNOfTN = dart.constFn(dart.nullable(__t$FutureOfTN())))();
      return [__t$FutureNOfTN(), [dart.dynamic], {arguments: dart.dynamic, binding: T$.BindingsN(), curve: T$.CurveN(), duration: T$.DurationN(), fullscreenDialog: core.bool, gestureWidth: T$.BuildContextToNdouble(), id: T$.intN(), opaque: core.bool, popGesture: T$.boolN(), preventDuplicates: core.bool, routeName: T$.StringN(), transition: T$.TransitionN()}, {}];
    }, T => {
      var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
      var __t$FutureOfTN = () => (__t$FutureOfTN = dart.constFn(async.Future$(__t$TN())))();
      var __t$FutureNOfTN = () => (__t$FutureNOfTN = dart.constFn(dart.nullable(__t$FutureOfTN())))();
      return [T$.ObjectN()];
    })))(),
    dynamic__ToFutureNOfTN$2: () => (T$.dynamic__ToFutureNOfTN$2 = dart.constFn(dart.gFnType(T => {
      var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
      var __t$FutureOfTN = () => (__t$FutureOfTN = dart.constFn(async.Future$(__t$TN())))();
      var __t$FutureNOfTN = () => (__t$FutureNOfTN = dart.constFn(dart.nullable(__t$FutureOfTN())))();
      return [__t$FutureNOfTN(), [dart.dynamic], {arguments: dart.dynamic, binding: T$.BindingsN(), curve: T$.CurveN(), duration: T$.DurationN(), fullscreenDialog: core.bool, gestureWidth: T$.BuildContextToNdouble(), id: T$.intN(), opaque: core.bool, popGesture: T$.boolN(), predicate: T$.RouteToNbool(), routeName: T$.StringN(), transition: T$.TransitionN()}, {}];
    }, T => {
      var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
      var __t$FutureOfTN = () => (__t$FutureOfTN = dart.constFn(async.Future$(__t$TN())))();
      var __t$FutureNOfTN = () => (__t$FutureNOfTN = dart.constFn(dart.nullable(__t$FutureOfTN())))();
      return [T$.ObjectN()];
    })))(),
    StringToString: () => (T$.StringToString = dart.constFn(dart.fnType(core.String, [core.String])))(),
    String__Tovoid: () => (T$.String__Tovoid = dart.constFn(dart.fnType(dart.void, [core.String], {isError: core.bool}, {})))(),
    String__ToNvoid: () => (T$.String__ToNvoid = dart.constFn(dart.nullable(T$.String__Tovoid())))(),
    __Tovoid$1: () => (T$.__Tovoid$1 = dart.constFn(dart.fnType(dart.void, [], {defaultDurationTransition: T$.DurationN(), defaultGlobalState: T$.boolN(), defaultOpaqueRoute: T$.boolN(), defaultPopGesture: T$.boolN(), defaultTransition: T$.TransitionN(), enableLog: T$.boolN(), logWriterCallback: T$.String__ToNvoid()}, {})))(),
    FutureOfvoid: () => (T$.FutureOfvoid = dart.constFn(async.Future$(dart.void)))(),
    LocaleToFutureOfvoid: () => (T$.LocaleToFutureOfvoid = dart.constFn(dart.fnType(T$.FutureOfvoid(), [ui.Locale])))(),
    VoidToFutureOfvoid: () => (T$.VoidToFutureOfvoid = dart.constFn(dart.fnType(T$.FutureOfvoid(), [])))(),
    ThemeDataTovoid: () => (T$.ThemeDataTovoid = dart.constFn(dart.fnType(dart.void, [theme_data.ThemeData])))(),
    ThemeModeTovoid: () => (T$.ThemeModeTovoid = dart.constFn(dart.fnType(dart.void, [app.ThemeMode])))(),
    GlobalKeyOfNavigatorStateToGlobalKeyNOfNavigatorState: () => (T$.GlobalKeyOfNavigatorStateToGlobalKeyNOfNavigatorState = dart.constFn(dart.fnType(T$.GlobalKeyNOfNavigatorState(), [T$.GlobalKeyOfNavigatorState()])))(),
    VoidToGlobalKeyOfNavigatorState: () => (T$.VoidToGlobalKeyOfNavigatorState = dart.constFn(dart.fnType(T$.GlobalKeyOfNavigatorState(), [])))(),
    dynamicToGlobalKeyNOfNavigatorState: () => (T$.dynamicToGlobalKeyNOfNavigatorState = dart.constFn(dart.fnType(T$.GlobalKeyNOfNavigatorState(), [dart.dynamic])))(),
    intNToGlobalKeyOfNavigatorState: () => (T$.intNToGlobalKeyOfNavigatorState = dart.constFn(dart.fnType(T$.GlobalKeyOfNavigatorState(), [T$.intN()])))(),
    ElementTovoid: () => (T$.ElementTovoid = dart.constFn(dart.fnType(dart.void, [framework.Element])))(),
    ListOfGetPage: () => (T$.ListOfGetPage = dart.constFn(core.List$(get_route.GetPage)))(),
    ListOfGetPageTovoid: () => (T$.ListOfGetPageTovoid = dart.constFn(dart.fnType(dart.void, [T$.ListOfGetPage()])))(),
    GetPageTovoid: () => (T$.GetPageTovoid = dart.constFn(dart.fnType(dart.void, [get_route.GetPage])))(),
    VoidToTDelegateN: () => (T$.VoidToTDelegateN = dart.constFn(dart.gFnType((TDelegate, TPage) => {
      var __t$TDelegateN = () => (__t$TDelegateN = dart.constFn(dart.nullable(TDelegate)))();
      return [__t$TDelegateN(), []];
    }, (TDelegate, TPage) => {
      var __t$TDelegateN = () => (__t$TDelegateN = dart.constFn(dart.nullable(TDelegate)))();
      var __t$RouterDelegateOfTPage = () => (__t$RouterDelegateOfTPage = dart.constFn(router.RouterDelegate$(TPage)))();
      return [__t$RouterDelegateOfTPage(), T$.ObjectN()];
    })))(),
    __ToGetInformationParser: () => (T$.__ToGetInformationParser = dart.constFn(dart.fnType(get_information_parser.GetInformationParser, [], {initialRoute: core.String}, {})))(),
    ListOfNavigatorObserver: () => (T$.ListOfNavigatorObserver = dart.constFn(core.List$(navigator.NavigatorObserver)))(),
    ListNOfNavigatorObserver: () => (T$.ListNOfNavigatorObserver = dart.constFn(dart.nullable(T$.ListOfNavigatorObserver())))(),
    TransitionDelegateN: () => (T$.TransitionDelegateN = dart.constFn(dart.nullable(navigator.TransitionDelegate)))(),
    __ToGetDelegate: () => (T$.__ToGetDelegate = dart.constFn(dart.fnType(get_router_delegate.GetDelegate, [], {backButtonPopMode: get_router_delegate.PopMode, navigatorObservers: T$.ListNOfNavigatorObserver(), notFoundRoute: T$.GetPageN(), preventDuplicateHandlingMode: get_router_delegate.PreventDuplicateHandlingMode, transitionDelegate: T$.TransitionDelegateN()}, {})))(),
    BuildContextToOpacity: () => (T$.BuildContextToOpacity = dart.constFn(dart.fnType(basic.Opacity, [framework.BuildContext])))(),
    __ToFutureOfT: () => (T$.__ToFutureOfT = dart.constFn(dart.gFnType(T => {
      var __t$FutureOfT = () => (__t$FutureOfT = dart.constFn(async.Future$(T)))();
      var __t$VoidToFutureOfT = () => (__t$VoidToFutureOfT = dart.constFn(dart.fnType(__t$FutureOfT(), [])))();
      return [__t$FutureOfT(), [], {asyncFunction: __t$VoidToFutureOfT(), loadingWidget: T$.WidgetN(), opacity: core.double, opacityColor: ui.Color}, {}];
    }, T => {
      var __t$FutureOfT = () => (__t$FutureOfT = dart.constFn(async.Future$(T)))();
      var __t$VoidToFutureOfT = () => (__t$VoidToFutureOfT = dart.constFn(dart.fnType(__t$FutureOfT(), [])))();
      return [T$.ObjectN()];
    })))(),
    BuildContextAndWidgetNToSemantics: () => (T$.BuildContextAndWidgetNToSemantics = dart.constFn(dart.fnType(basic.Semantics, [framework.BuildContext, T$.WidgetN()])))(),
    Fn__Tovoid$1: () => (T$.Fn__Tovoid$1 = dart.constFn(dart.gFnType(S => {
      var __t$VoidToS = () => (__t$VoidToS = dart.constFn(dart.fnType(S, [])))();
      return [dart.void, [__t$VoidToS()], {fenix: core.bool, tag: T$.StringN()}, {}];
    }, S => {
      var __t$VoidToS = () => (__t$VoidToS = dart.constFn(dart.fnType(S, [])))();
      return [T$.ObjectN()];
    })))(),
    Fn__ToFutureOfS: () => (T$.Fn__ToFutureOfS = dart.constFn(dart.gFnType(S => {
      var __t$FutureOfS = () => (__t$FutureOfS = dart.constFn(async.Future$(S)))();
      var __t$VoidToFutureOfS = () => (__t$VoidToFutureOfS = dart.constFn(dart.fnType(__t$FutureOfS(), [])))();
      return [__t$FutureOfS(), [__t$VoidToFutureOfS()], {permanent: core.bool, tag: T$.StringN()}, {}];
    }, S => {
      var __t$FutureOfS = () => (__t$FutureOfS = dart.constFn(async.Future$(S)))();
      var __t$VoidToFutureOfS = () => (__t$VoidToFutureOfS = dart.constFn(dart.fnType(__t$FutureOfS(), [])))();
      return [T$.ObjectN()];
    })))(),
    Fn__Tovoid$2: () => (T$.Fn__Tovoid$2 = dart.constFn(dart.gFnType(S => {
      var __t$VoidToS = () => (__t$VoidToS = dart.constFn(dart.fnType(S, [])))();
      return [dart.void, [__t$VoidToS()], {permanent: core.bool, tag: T$.StringN()}, {}];
    }, S => {
      var __t$VoidToS = () => (__t$VoidToS = dart.constFn(dart.fnType(S, [])))();
      return [T$.ObjectN()];
    })))(),
    __ToS: () => (T$.__ToS = dart.constFn(dart.gFnType(S => [S, [], {tag: T$.StringN()}, {}], S => [T$.ObjectN()])))(),
    S__ToS: () => (T$.S__ToS = dart.constFn(dart.gFnType(S => {
      var __t$VoidToS = () => (__t$VoidToS = dart.constFn(dart.fnType(S, [])))();
      var __t$VoidToNS = () => (__t$VoidToNS = dart.constFn(dart.nullable(__t$VoidToS())))();
      return [S, [S], {builder: __t$VoidToNS(), permanent: core.bool, tag: T$.StringN()}, {}];
    }, S => {
      var __t$VoidToS = () => (__t$VoidToS = dart.constFn(dart.fnType(S, [])))();
      var __t$VoidToNS = () => (__t$VoidToNS = dart.constFn(dart.nullable(__t$VoidToS())))();
      return [T$.ObjectN()];
    })))(),
    __ToFutureOfbool: () => (T$.__ToFutureOfbool = dart.constFn(dart.gFnType(S => [T$.FutureOfbool(), [], {force: core.bool, tag: T$.StringN()}, {}], S => [T$.ObjectN()])))(),
    __ToFutureOfvoid: () => (T$.__ToFutureOfvoid = dart.constFn(dart.fnType(T$.FutureOfvoid(), [], {force: core.bool}, {})))(),
    __Tovoid$2: () => (T$.__Tovoid$2 = dart.constFn(dart.fnType(dart.void, [], {force: core.bool}, {})))(),
    __Tovoid$3: () => (T$.__Tovoid$3 = dart.constFn(dart.gFnType(S => [dart.void, [], {force: core.bool, key: T$.StringN(), tag: T$.StringN()}, {}], S => [T$.ObjectN()])))(),
    __Tobool: () => (T$.__Tobool = dart.constFn(dart.gFnType(S => [core.bool, [], {tag: T$.StringN()}, {}], S => [T$.ObjectN()])))(),
    P__Tovoid: () => (T$.P__Tovoid = dart.constFn(dart.gFnType(P => [dart.void, [P], {tag: T$.StringN()}, {}], P => [T$.ObjectN()])))(),
    Fn__Tovoid$3: () => (T$.Fn__Tovoid$3 = dart.constFn(dart.gFnType(P => {
      var __t$VoidToP = () => (__t$VoidToP = dart.constFn(dart.fnType(P, [])))();
      return [dart.void, [__t$VoidToP()], {fenix: T$.boolN(), tag: T$.StringN()}, {}];
    }, P => {
      var __t$VoidToP = () => (__t$VoidToP = dart.constFn(dart.fnType(P, [])))();
      return [T$.ObjectN()];
    })))(),
    _HashSetOfFunction: () => (T$._HashSetOfFunction = dart.constFn(collection._HashSet$(core.Function)))(),
    StringTovoid: () => (T$.StringTovoid = dart.constFn(dart.fnType(dart.void, [core.String])))(),
    RouteN: () => (T$.RouteN = dart.constFn(dart.nullable(navigator.Route)))(),
    ListOfString: () => (T$.ListOfString = dart.constFn(core.List$(core.String)))(),
    LinkedMapOfRouteN$ListOfString: () => (T$.LinkedMapOfRouteN$ListOfString = dart.constFn(_js_helper.LinkedMap$(T$.RouteN(), T$.ListOfString())))(),
    HashSetOfFunction: () => (T$.HashSetOfFunction = dart.constFn(collection.HashSet$(core.Function)))(),
    LinkedMapOfRouteN$HashSetOfFunction: () => (T$.LinkedMapOfRouteN$HashSetOfFunction = dart.constFn(_js_helper.LinkedMap$(T$.RouteN(), T$.HashSetOfFunction())))(),
    StringAnd_InstanceBuilderFactoryTovoid: () => (T$.StringAnd_InstanceBuilderFactoryTovoid = dart.constFn(dart.fnType(dart.void, [core.String, get_instance._InstanceBuilderFactory])))(),
    IdentityMapOfString$_InstanceBuilderFactory: () => (T$.IdentityMapOfString$_InstanceBuilderFactory = dart.constFn(_js_helper.IdentityMap$(core.String, get_instance._InstanceBuilderFactory)))(),
    __Tovoid$4: () => (T$.__Tovoid$4 = dart.constFn(dart.fnType(dart.void, [], {clearFactory: core.bool, clearRouteBindings: core.bool}, {})))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.const({
        __proto__: alignment.Alignment.prototype,
        [Alignment_y]: -2,
        [Alignment_x]: -1
      });
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: alignment.Alignment.prototype,
        [Alignment_y]: -1,
        [Alignment_x]: -1
      });
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: snackbar.SnackPosition.prototype,
        [_Enum__name]: "TOP",
        [_Enum_index]: 0
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: alignment.Alignment.prototype,
        [Alignment_y]: 2,
        [Alignment_x]: -1
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: alignment.Alignment.prototype,
        [Alignment_y]: 1,
        [Alignment_x]: -1
      });
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: snackbar.SnackPosition.prototype,
        [_Enum__name]: "BOTTOM",
        [_Enum_index]: 1
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: curves.Cubic.prototype,
        [Cubic_d]: 0.86,
        [Cubic_c]: 0.15,
        [Cubic_b]: 0.135,
        [Cubic_a]: 0.785
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: curves.Interval.prototype,
        [Interval_curve]: C[7] || CT.C7,
        [Interval_end]: 0.35,
        [Interval_begin]: 0
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 0
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: box$.BoxConstraints.prototype,
        [BoxConstraints_maxHeight]: 1 / 0,
        [BoxConstraints_minHeight]: 1 / 0,
        [BoxConstraints_maxWidth]: 1 / 0,
        [BoxConstraints_minWidth]: 1 / 0
      });
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Container",
        [_Location_column]: 26,
        [_Location_line]: 201,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/snackbar/snackbar_controller.dart"
      });
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "BackdropFilter",
        [_Location_column]: 24,
        [_Location_line]: 196,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/snackbar/snackbar_controller.dart"
      });
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "AnimatedBuilder",
        [_Location_column]: 20,
        [_Location_line]: 193,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/snackbar/snackbar_controller.dart"
      });
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "GestureDetector",
        [_Location_column]: 33,
        [_Location_line]: 186,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/snackbar/snackbar_controller.dart"
      });
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "AlignTransition",
        [_Location_column]: 18,
        [_Location_line]: 215,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/snackbar/snackbar_controller.dart"
      });
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Semantics",
        [_Location_column]: 31,
        [_Location_line]: 214,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/snackbar/snackbar_controller.dart"
      });
    },
    get C16() {
      return C[16] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "GestureDetector",
        [_Location_column]: 14,
        [_Location_line]: 233,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/snackbar/snackbar_controller.dart"
      });
    },
    get C17() {
      return C[17] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Builder",
        [_Location_column]: 12,
        [_Location_line]: 232,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/snackbar/snackbar_controller.dart"
      });
    },
    get C18() {
      return C[18] = dart.const({
        __proto__: T$.ValueKeyOfString().prototype,
        [ValueKey_value]: "dismissible"
      });
    },
    get C19() {
      return C[19] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Dismissible",
        [_Location_column]: 12,
        [_Location_line]: 250,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/snackbar/snackbar_controller.dart"
      });
    },
    get C20() {
      return C[20] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Container",
        [_Location_column]: 12,
        [_Location_line]: 270,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/snackbar/snackbar_controller.dart"
      });
    },
    get C21() {
      return C[21] = dart.const({
        __proto__: animation.AnimationStatus.prototype,
        [_Enum__name]: "completed",
        [_Enum_index]: 3
      });
    },
    get C22() {
      return C[22] = dart.const({
        __proto__: animation.AnimationStatus.prototype,
        [_Enum__name]: "forward",
        [_Enum_index]: 1
      });
    },
    get C23() {
      return C[23] = dart.const({
        __proto__: animation.AnimationStatus.prototype,
        [_Enum__name]: "reverse",
        [_Enum_index]: 2
      });
    },
    get C24() {
      return C[24] = dart.const({
        __proto__: animation.AnimationStatus.prototype,
        [_Enum__name]: "dismissed",
        [_Enum_index]: 0
      });
    },
    get C25() {
      return C[25] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 200000
      });
    },
    get C26() {
      return C[26] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 0,
        [EdgeInsets_top]: 0,
        [EdgeInsets_left]: 0
      });
    },
    get C27() {
      return C[27] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 16,
        [EdgeInsets_right]: 16,
        [EdgeInsets_top]: 16,
        [EdgeInsets_left]: 16
      });
    },
    get C28() {
      return C[28] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4281348144.0
      });
    },
    get C29() {
      return C[29] = dart.const({
        __proto__: snackbar.SnackStyle.prototype,
        [_Enum__name]: "FLOATING",
        [_Enum_index]: 0
      });
    },
    get C30() {
      return C[30] = dart.const({
        __proto__: curves.Cubic.prototype,
        [Cubic_d]: 1,
        [Cubic_c]: 0.165,
        [Cubic_b]: 0.82,
        [Cubic_a]: 0.075
      });
    },
    get C31() {
      return C[31] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 1000000
      });
    },
    get C32() {
      return C[32] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "GetBar",
        [_Location_column]: 3,
        [_Location_line]: 16,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/snackbar/snackbar.dart"
      });
    },
    get C33() {
      return C[33] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "GetSnackBar",
        [_Location_column]: 9,
        [_Location_line]: 243,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/snackbar/snackbar.dart"
      });
    },
    get C34() {
      return C[34] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "SizedBox",
        [_Location_column]: 31,
        [_Location_line]: 297,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/snackbar/snackbar.dart"
      });
    },
    get C35() {
      return C[35] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Container",
        [_Location_column]: 32,
        [_Location_line]: 366,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/snackbar/snackbar.dart"
      });
    },
    get C36() {
      return C[36] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "BackdropFilter",
        [_Location_column]: 30,
        [_Location_line]: 363,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/snackbar/snackbar.dart"
      });
    },
    get C37() {
      return C[37] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "ClipRRect",
        [_Location_column]: 28,
        [_Location_line]: 361,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/snackbar/snackbar.dart"
      });
    },
    get C38() {
      return C[38] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "FutureBuilder",
        [_Location_column]: 15,
        [_Location_line]: 354,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/snackbar/snackbar.dart"
      });
    },
    get C39() {
      return C[39] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Stack",
        [_Location_column]: 18,
        [_Location_line]: 352,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/snackbar/snackbar.dart"
      });
    },
    get C40() {
      return C[40] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "SafeArea",
        [_Location_column]: 16,
        [_Location_line]: 343,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/snackbar/snackbar.dart"
      });
    },
    get C41() {
      return C[41] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Material",
        [_Location_column]: 14,
        [_Location_line]: 339,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/snackbar/snackbar.dart"
      });
    },
    get C42() {
      return C[42] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Align",
        [_Location_column]: 12,
        [_Location_line]: 337,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/snackbar/snackbar.dart"
      });
    },
    get C43() {
      return C[43] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Container",
        [_Location_column]: 20,
        [_Location_line]: 436,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/snackbar/snackbar.dart"
      });
    },
    get C44() {
      return C[44] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "FutureBuilder",
        [_Location_column]: 14,
        [_Location_line]: 432,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/snackbar/snackbar.dart"
      });
    },
    get C45() {
      return C[45] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 8,
        [EdgeInsets_right]: 8,
        [EdgeInsets_top]: 16,
        [EdgeInsets_left]: 8
      });
    },
    get C46() {
      return C[46] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "FocusScope",
        [_Location_column]: 16,
        [_Location_line]: 516,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/snackbar/snackbar.dart"
      });
    },
    get C47() {
      return C[47] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Padding",
        [_Location_column]: 14,
        [_Location_line]: 513,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/snackbar/snackbar.dart"
      });
    },
    get C48() {
      return C[48] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Container",
        [_Location_column]: 12,
        [_Location_line]: 496,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/snackbar/snackbar.dart"
      });
    },
    get C49() {
      return C[49] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "LinearProgressIndicator",
        [_Location_column]: 17,
        [_Location_line]: 551,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/snackbar/snackbar.dart"
      });
    },
    get C50() {
      return C[50] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "ConstrainedBox",
        [_Location_column]: 17,
        [_Location_line]: 564,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/snackbar/snackbar.dart"
      });
    },
    get C51() {
      return C[51] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Text",
        [_Location_column]: 29,
        [_Location_line]: 583,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/snackbar/snackbar.dart"
      });
    },
    get C52() {
      return C[52] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Padding",
        [_Location_column]: 23,
        [_Location_line]: 576,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/snackbar/snackbar.dart"
      });
    },
    get C53() {
      return C[53] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Text",
        [_Location_column]: 27,
        [_Location_line]: 602,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/snackbar/snackbar.dart"
      });
    },
    get C54() {
      return C[54] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Padding",
        [_Location_column]: 21,
        [_Location_line]: 594,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/snackbar/snackbar.dart"
      });
    },
    get C55() {
      return C[55] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Column",
        [_Location_column]: 24,
        [_Location_line]: 571,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/snackbar/snackbar.dart"
      });
    },
    get C56() {
      return C[56] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Expanded",
        [_Location_column]: 15,
        [_Location_line]: 569,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/snackbar/snackbar.dart"
      });
    },
    get C57() {
      return C[57] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Padding",
        [_Location_column]: 17,
        [_Location_line]: 612,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/snackbar/snackbar.dart"
      });
    },
    get C58() {
      return C[58] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Row",
        [_Location_column]: 11,
        [_Location_line]: 559,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/snackbar/snackbar.dart"
      });
    },
    get C59() {
      return C[59] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Column",
        [_Location_column]: 14,
        [_Location_line]: 547,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/snackbar/snackbar.dart"
      });
    },
    get C60() {
      return C[60] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Container",
        [_Location_column]: 12,
        [_Location_line]: 533,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/snackbar/snackbar.dart"
      });
    },
    get C61() {
      return C[61] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "FadeTransition",
        [_Location_column]: 14,
        [_Location_line]: 625,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/snackbar/snackbar.dart"
      });
    },
    get C63() {
      return C[63] = dart.const({
        __proto__: snackbar.RowStyle.prototype,
        [_Enum__name]: "icon",
        [_Enum_index]: 0
      });
    },
    get C64() {
      return C[64] = dart.const({
        __proto__: snackbar.RowStyle.prototype,
        [_Enum__name]: "action",
        [_Enum_index]: 1
      });
    },
    get C65() {
      return C[65] = dart.const({
        __proto__: snackbar.RowStyle.prototype,
        [_Enum__name]: "all",
        [_Enum_index]: 2
      });
    },
    get C66() {
      return C[66] = dart.const({
        __proto__: snackbar.RowStyle.prototype,
        [_Enum__name]: "none",
        [_Enum_index]: 3
      });
    },
    get C62() {
      return C[62] = dart.constList([C[63] || CT.C63, C[64] || CT.C64, C[65] || CT.C65, C[66] || CT.C66], snackbar.RowStyle);
    },
    get C68() {
      return C[68] = dart.const({
        __proto__: snackbar.SnackbarStatus.prototype,
        [_Enum__name]: "OPEN",
        [_Enum_index]: 0
      });
    },
    get C69() {
      return C[69] = dart.const({
        __proto__: snackbar.SnackbarStatus.prototype,
        [_Enum__name]: "CLOSED",
        [_Enum_index]: 1
      });
    },
    get C70() {
      return C[70] = dart.const({
        __proto__: snackbar.SnackbarStatus.prototype,
        [_Enum__name]: "OPENING",
        [_Enum_index]: 2
      });
    },
    get C71() {
      return C[71] = dart.const({
        __proto__: snackbar.SnackbarStatus.prototype,
        [_Enum__name]: "CLOSING",
        [_Enum_index]: 3
      });
    },
    get C67() {
      return C[67] = dart.constList([C[68] || CT.C68, C[69] || CT.C69, C[70] || CT.C70, C[71] || CT.C71], snackbar.SnackbarStatus);
    },
    get C72() {
      return C[72] = dart.constList([C[2] || CT.C2, C[5] || CT.C5], snackbar.SnackPosition);
    },
    get C74() {
      return C[74] = dart.const({
        __proto__: snackbar.SnackStyle.prototype,
        [_Enum__name]: "GROUNDED",
        [_Enum_index]: 1
      });
    },
    get C73() {
      return C[73] = dart.constList([C[29] || CT.C29, C[74] || CT.C74], snackbar.SnackStyle);
    },
    get C75() {
      return C[75] = dart.const({
        __proto__: curves._Linear.prototype
      });
    },
    get C76() {
      return C[76] = dart.constList([], bindings_interface.Bindings);
    },
    get C77() {
      return C[77] = dart.constList([], get_route.GetPage);
    },
    get C78() {
      return C[78] = dart.const({
        __proto__: curves.Cubic.prototype,
        [Cubic_d]: 1,
        [Cubic_c]: 0.04,
        [Cubic_b]: 1,
        [Cubic_a]: 0.18
      });
    },
    get C79() {
      return C[79] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "CupertinoBackGestureDetector",
        [_Location_column]: 9,
        [_Location_line]: 121,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/routes/get_transition_mixin.dart"
      });
    },
    get C80() {
      return C[80] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Listener",
        [_Location_column]: 18,
        [_Location_line]: 158,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/routes/get_transition_mixin.dart"
      });
    },
    get C81() {
      return C[81] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "PositionedDirectional",
        [_Location_column]: 9,
        [_Location_line]: 153,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/routes/get_transition_mixin.dart"
      });
    },
    get C82() {
      return C[82] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Stack",
        [_Location_column]: 12,
        [_Location_line]: 149,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/routes/get_transition_mixin.dart"
      });
    },
    get C83() {
      return C[83] = dart.const({
        __proto__: ui.TextDirection.prototype,
        [_Enum__name]: "rtl",
        [_Enum_index]: 0
      });
    },
    get C84() {
      return C[84] = dart.const({
        __proto__: ui.TextDirection.prototype,
        [_Enum__name]: "ltr",
        [_Enum_index]: 1
      });
    },
    get C85() {
      return C[85] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 400000
      });
    },
    get C86() {
      return C[86] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Semantics",
        [_Location_column]: 27,
        [_Location_line]: 306,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/routes/get_transition_mixin.dart"
      });
    },
    get C87() {
      return C[87] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "CupertinoFullscreenDialogTransition",
        [_Location_column]: 14,
        [_Location_line]: 377,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/routes/get_transition_mixin.dart"
      });
    },
    get C88() {
      return C[88] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "CupertinoBackGestureDetector",
        [_Location_column]: 17,
        [_Location_line]: 394,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/routes/get_transition_mixin.dart"
      });
    },
    get C89() {
      return C[89] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "CupertinoBackGestureDetector",
        [_Location_column]: 21,
        [_Location_line]: 417,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/routes/get_transition_mixin.dart"
      });
    },
    get C90() {
      return C[90] = dart.const({
        __proto__: transitions_type.Transition.prototype,
        [_Enum__name]: "leftToRight",
        [_Enum_index]: 3
      });
    },
    get C91() {
      return C[91] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "CupertinoBackGestureDetector",
        [_Location_column]: 21,
        [_Location_line]: 433,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/routes/get_transition_mixin.dart"
      });
    },
    get C92() {
      return C[92] = dart.const({
        __proto__: transitions_type.Transition.prototype,
        [_Enum__name]: "downToUp",
        [_Enum_index]: 5
      });
    },
    get C93() {
      return C[93] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "CupertinoBackGestureDetector",
        [_Location_column]: 21,
        [_Location_line]: 449,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/routes/get_transition_mixin.dart"
      });
    },
    get C94() {
      return C[94] = dart.const({
        __proto__: transitions_type.Transition.prototype,
        [_Enum__name]: "upToDown",
        [_Enum_index]: 4
      });
    },
    get C95() {
      return C[95] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "CupertinoBackGestureDetector",
        [_Location_column]: 17,
        [_Location_line]: 459,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/routes/get_transition_mixin.dart"
      });
    },
    get C96() {
      return C[96] = dart.const({
        __proto__: transitions_type.Transition.prototype,
        [_Enum__name]: "noTransition",
        [_Enum_index]: 10
      });
    },
    get C97() {
      return C[97] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "CupertinoBackGestureDetector",
        [_Location_column]: 21,
        [_Location_line]: 475,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/routes/get_transition_mixin.dart"
      });
    },
    get C98() {
      return C[98] = dart.const({
        __proto__: transitions_type.Transition.prototype,
        [_Enum__name]: "rightToLeft",
        [_Enum_index]: 2
      });
    },
    get C99() {
      return C[99] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "CupertinoBackGestureDetector",
        [_Location_column]: 21,
        [_Location_line]: 491,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/routes/get_transition_mixin.dart"
      });
    },
    get C100() {
      return C[100] = dart.const({
        __proto__: transitions_type.Transition.prototype,
        [_Enum__name]: "zoom",
        [_Enum_index]: 8
      });
    },
    get C101() {
      return C[101] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "CupertinoBackGestureDetector",
        [_Location_column]: 21,
        [_Location_line]: 507,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/routes/get_transition_mixin.dart"
      });
    },
    get C102() {
      return C[102] = dart.const({
        __proto__: transitions_type.Transition.prototype,
        [_Enum__name]: "fadeIn",
        [_Enum_index]: 1
      });
    },
    get C103() {
      return C[103] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "CupertinoBackGestureDetector",
        [_Location_column]: 21,
        [_Location_line]: 523,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/routes/get_transition_mixin.dart"
      });
    },
    get C104() {
      return C[104] = dart.const({
        __proto__: transitions_type.Transition.prototype,
        [_Enum__name]: "rightToLeftWithFade",
        [_Enum_index]: 6
      });
    },
    get C105() {
      return C[105] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "CupertinoBackGestureDetector",
        [_Location_column]: 21,
        [_Location_line]: 539,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/routes/get_transition_mixin.dart"
      });
    },
    get C106() {
      return C[106] = dart.const({
        __proto__: transitions_type.Transition.prototype,
        [_Enum__name]: "leftToRightWithFade",
        [_Enum_index]: 7
      });
    },
    get C107() {
      return C[107] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "CupertinoBackGestureDetector",
        [_Location_column]: 20,
        [_Location_line]: 552,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/routes/get_transition_mixin.dart"
      });
    },
    get C108() {
      return C[108] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "CupertinoPageTransition",
        [_Location_column]: 18,
        [_Location_line]: 548,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/routes/get_transition_mixin.dart"
      });
    },
    get C109() {
      return C[109] = dart.const({
        __proto__: transitions_type.Transition.prototype,
        [_Enum__name]: "cupertino",
        [_Enum_index]: 11
      });
    },
    get C110() {
      return C[110] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "CupertinoBackGestureDetector",
        [_Location_column]: 21,
        [_Location_line]: 569,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/routes/get_transition_mixin.dart"
      });
    },
    get C111() {
      return C[111] = dart.const({
        __proto__: transitions_type.Transition.prototype,
        [_Enum__name]: "size",
        [_Enum_index]: 13
      });
    },
    get C112() {
      return C[112] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "CupertinoBackGestureDetector",
        [_Location_column]: 21,
        [_Location_line]: 584,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/routes/get_transition_mixin.dart"
      });
    },
    get C113() {
      return C[113] = dart.const({
        __proto__: transitions_type.Transition.prototype,
        [_Enum__name]: "fade",
        [_Enum_index]: 0
      });
    },
    get C114() {
      return C[114] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "CupertinoBackGestureDetector",
        [_Location_column]: 21,
        [_Location_line]: 599,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/routes/get_transition_mixin.dart"
      });
    },
    get C115() {
      return C[115] = dart.const({
        __proto__: transitions_type.Transition.prototype,
        [_Enum__name]: "topLevel",
        [_Enum_index]: 9
      });
    },
    get C116() {
      return C[116] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "CupertinoBackGestureDetector",
        [_Location_column]: 21,
        [_Location_line]: 614,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/routes/get_transition_mixin.dart"
      });
    },
    get C117() {
      return C[117] = dart.const({
        __proto__: transitions_type.Transition.prototype,
        [_Enum__name]: "native",
        [_Enum_index]: 15
      });
    },
    get C118() {
      return C[118] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "CupertinoBackGestureDetector",
        [_Location_column]: 21,
        [_Location_line]: 630,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/routes/get_transition_mixin.dart"
      });
    },
    get C119() {
      return C[119] = dart.const({
        __proto__: transitions_type.Transition.prototype,
        [_Enum__name]: "circularReveal",
        [_Enum_index]: 14
      });
    },
    get C120() {
      return C[120] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "CupertinoBackGestureDetector",
        [_Location_column]: 21,
        [_Location_line]: 650,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/routes/get_transition_mixin.dart"
      });
    },
    get C121() {
      return C[121] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 300000
      });
    },
    get C122() {
      return C[122] = dart.const({
        __proto__: ui.AppLifecycleState.prototype,
        [_Enum__name]: "resumed",
        [_Enum_index]: 0
      });
    },
    get C123() {
      return C[123] = dart.const({
        __proto__: ui.AppLifecycleState.prototype,
        [_Enum__name]: "inactive",
        [_Enum_index]: 1
      });
    },
    get C124() {
      return C[124] = dart.const({
        __proto__: ui.AppLifecycleState.prototype,
        [_Enum__name]: "paused",
        [_Enum_index]: 2
      });
    },
    get C125() {
      return C[125] = dart.const({
        __proto__: ui.AppLifecycleState.prototype,
        [_Enum__name]: "detached",
        [_Enum_index]: 3
      });
    },
    get C126() {
      return C[126] = dart.constMap(core.String, T$.BuildContextToWidget(), []);
    },
    get C127() {
      return C[127] = dart.constList([], navigator.NavigatorObserver);
    },
    get C128() {
      return C[128] = dart.const({
        __proto__: app.ThemeMode.prototype,
        [_Enum__name]: "system",
        [_Enum_index]: 0
      });
    },
    get C130() {
      return C[130] = dart.const({
        __proto__: ui.Locale.prototype,
        [Locale__countryCode]: "US",
        [Locale_scriptCode]: null,
        [Locale__languageCode]: "en"
      });
    },
    get C129() {
      return C[129] = dart.constList([C[130] || CT.C130], ui.Locale);
    },
    get C131() {
      return C[131] = dart.const({
        __proto__: smart_management.SmartManagement.prototype,
        [_Enum__name]: "full",
        [_Enum_index]: 0
      });
    },
    get C132() {
      return C[132] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "GetMaterialApp",
        [_Location_column]: 9,
        [_Location_line]: 69,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/root/get_material_app.dart"
      });
    },
    get C133() {
      return C[133] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "GetMaterialApp",
        [_Location_column]: 3,
        [_Location_line]: 132,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/root/get_material_app.dart"
      });
    },
    get C134() {
      return C[134] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "MaterialApp",
        [_Location_column]: 27,
        [_Location_line]: 246,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/root/get_material_app.dart"
      });
    },
    get C135() {
      return C[135] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "MaterialApp",
        [_Location_column]: 15,
        [_Location_line]: 277,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/root/get_material_app.dart"
      });
    },
    get C136() {
      return C[136] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "GetBuilder",
        [_Location_column]: 41,
        [_Location_line]: 205,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/root/get_material_app.dart"
      });
    },
    get C137() {
      return C[137] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Material",
        [_Location_column]: 23,
        [_Location_line]: 334,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/root/get_material_app.dart"
      });
    },
    get C138() {
      return C[138] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Material",
        [_Location_column]: 40,
        [_Location_line]: 335,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/root/get_material_app.dart"
      });
    },
    get C139() {
      return C[139] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Directionality",
        [_Location_column]: 12,
        [_Location_line]: 328,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/root/get_material_app.dart"
      });
    },
    get C140() {
      return C[140] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "ValueBuilder",
        [_Location_column]: 9,
        [_Location_line]: 31,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_state_manager/src/simple/simple_builder.dart"
      });
    },
    get C141() {
      return C[141] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "SimpleBuilder",
        [_Location_column]: 9,
        [_Location_line]: 81,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_state_manager/src/simple/simple_builder.dart"
      });
    },
    get C142() {
      return C[142] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "MixinBuilder",
        [_Location_column]: 9,
        [_Location_line]: 15,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_state_manager/src/simple/mixin_state.dart"
      });
    },
    get C143() {
      return C[143] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Obx",
        [_Location_column]: 34,
        [_Location_line]: 39,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_state_manager/src/simple/mixin_state.dart"
      });
    },
    get C144() {
      return C[144] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "GetBuilder",
        [_Location_column]: 12,
        [_Location_line]: 30,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_state_manager/src/simple/mixin_state.dart"
      });
    },
    get C145() {
      return C[145] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "GetBuilder",
        [_Location_column]: 9,
        [_Location_line]: 69,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_state_manager/src/simple/get_state.dart"
      });
    },
    get C146() {
      return C[146] = dart.const({
        __proto__: get_responsive.ResponsiveScreenSettings.prototype,
        [ResponsiveScreenSettings_watchChangePoint]: 300,
        [ResponsiveScreenSettings_tabletChangePoint]: 600,
        [ResponsiveScreenSettings_desktopChangePoint]: 1200
      });
    },
    get C147() {
      return C[147] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "GetResponsiveView",
        [_Location_column]: 3,
        [_Location_line]: 62,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_state_manager/src/simple/get_responsive.dart"
      });
    },
    get C148() {
      return C[148] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "GetResponsiveWidget",
        [_Location_column]: 3,
        [_Location_line]: 78,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_state_manager/src/simple/get_responsive.dart"
      });
    },
    get C150() {
      return C[150] = dart.const({
        __proto__: get_responsive.ScreenType.prototype,
        [_Enum__name]: "Watch",
        [_Enum_index]: 0
      });
    },
    get C151() {
      return C[151] = dart.const({
        __proto__: get_responsive.ScreenType.prototype,
        [_Enum__name]: "Phone",
        [_Enum_index]: 1
      });
    },
    get C152() {
      return C[152] = dart.const({
        __proto__: get_responsive.ScreenType.prototype,
        [_Enum__name]: "Tablet",
        [_Enum_index]: 2
      });
    },
    get C153() {
      return C[153] = dart.const({
        __proto__: get_responsive.ScreenType.prototype,
        [_Enum__name]: "Desktop",
        [_Enum_index]: 3
      });
    },
    get C149() {
      return C[149] = dart.constList([C[150] || CT.C150, C[151] || CT.C151, C[152] || CT.C152, C[153] || CT.C153], get_responsive.ScreenType);
    },
    get C155() {
      return C[155] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Center",
        [_Location_column]: 35,
        [_Location_line]: 144,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_state_manager/src/rx_flutter/rx_notifier.dart"
      });
    },
    get C157() {
      return C[157] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "CircularProgressIndicator",
        [_Location_column]: 49,
        [_Location_line]: 144,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_state_manager/src/rx_flutter/rx_notifier.dart"
      });
    },
    get C158() {
      return C[158] = dart.const({
        __proto__: progress_indicator._ActivityIndicatorType.prototype,
        [_Enum__name]: "material",
        [_Enum_index]: 0
      });
    },
    get C156() {
      return C[156] = dart.const({
        __proto__: progress_indicator.CircularProgressIndicator.prototype,
        [Widget__location]: C[157] || CT.C157,
        [Widget_key]: null,
        [ProgressIndicator_semanticsValue]: null,
        [ProgressIndicator_semanticsLabel]: null,
        [ProgressIndicator_valueColor]: null,
        [ProgressIndicator_color]: null,
        [ProgressIndicator_backgroundColor]: null,
        [ProgressIndicator_value]: null,
        [CircularProgressIndicator_strokeWidth]: 4,
        [CircularProgressIndicator__indicatorType]: C[158] || CT.C158
      });
    },
    get C159() {
      return C[159] = dart.const({
        __proto__: alignment.Alignment.prototype,
        [Alignment_y]: 0,
        [Alignment_x]: 0
      });
    },
    get C154() {
      return C[154] = dart.const({
        __proto__: basic.Center.prototype,
        [Widget__location]: C[155] || CT.C155,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: C[156] || CT.C156,
        [Align_heightFactor]: null,
        [Align_widthFactor]: null,
        [Align_alignment]: C[159] || CT.C159
      });
    },
    get C160() {
      return C[160] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Text",
        [_Location_column]: 29,
        [_Location_line]: 148,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_state_manager/src/rx_flutter/rx_notifier.dart"
      });
    },
    get C161() {
      return C[161] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Center",
        [_Location_column]: 15,
        [_Location_line]: 148,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_state_manager/src/rx_flutter/rx_notifier.dart"
      });
    },
    get C162() {
      return C[162] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "SizedBox",
        [_Location_column]: 24,
        [_Location_line]: 152,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_state_manager/src/rx_flutter/rx_notifier.dart"
      });
    },
    get C163() {
      return C[163] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "SimpleBuilder",
        [_Location_column]: 12,
        [_Location_line]: 142,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_state_manager/src/rx_flutter/rx_notifier.dart"
      });
    },
    get C164() {
      return C[164] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "GetX",
        [_Location_column]: 9,
        [_Location_line]: 29,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_state_manager/src/rx_flutter/rx_getx_widget.dart"
      });
    },
    get C165() {
      return C[165] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "GetCupertinoApp",
        [_Location_column]: 9,
        [_Location_line]: 65,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/root/get_cupertino_app.dart"
      });
    },
    get C166() {
      return C[166] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "GetCupertinoApp",
        [_Location_column]: 3,
        [_Location_line]: 123,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/root/get_cupertino_app.dart"
      });
    },
    get C167() {
      return C[167] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "CupertinoApp",
        [_Location_column]: 28,
        [_Location_line]: 230,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/root/get_cupertino_app.dart"
      });
    },
    get C168() {
      return C[168] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "CupertinoApp",
        [_Location_column]: 15,
        [_Location_line]: 254,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/root/get_cupertino_app.dart"
      });
    },
    get C169() {
      return C[169] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "GetBuilder",
        [_Location_column]: 41,
        [_Location_line]: 190,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/root/get_cupertino_app.dart"
      });
    },
    get C170() {
      return C[170] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Material",
        [_Location_column]: 23,
        [_Location_line]: 304,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/root/get_cupertino_app.dart"
      });
    },
    get C171() {
      return C[171] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Material",
        [_Location_column]: 40,
        [_Location_line]: 305,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/root/get_cupertino_app.dart"
      });
    },
    get C172() {
      return C[172] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Directionality",
        [_Location_column]: 12,
        [_Location_line]: 298,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/root/get_cupertino_app.dart"
      });
    },
    get C173() {
      return C[173] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "RouterOutlet",
        [_Location_column]: 3,
        [_Location_line]: 15,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/nav2/router_outlet.dart"
      });
    },
    get C174() {
      return C[174] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "RouterOutlet",
        [_Location_column]: 3,
        [_Location_line]: 22,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/nav2/router_outlet.dart"
      });
    },
    get C175() {
      return C[175] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "GetNavigator",
        [_Location_column]: 22,
        [_Location_line]: 125,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/nav2/router_outlet.dart"
      });
    },
    get C177() {
      return C[177] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "SizedBox",
        [_Location_column]: 59,
        [_Location_line]: 138,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/nav2/router_outlet.dart"
      });
    },
    get C176() {
      return C[176] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget__location]: C[177] || CT.C177,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 0,
        [SizedBox_width]: 0
      });
    },
    get C178() {
      return C[178] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "GetRouterOutlet",
        [_Location_column]: 3,
        [_Location_line]: 80,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/nav2/router_outlet.dart"
      });
    },
    get C179() {
      return C[179] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "GetRouterOutlet",
        [_Location_column]: 3,
        [_Location_line]: 110,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/nav2/router_outlet.dart"
      });
    },
    get C180() {
      return C[180] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "GetRouterOutlet",
        [_Location_column]: 3,
        [_Location_line]: 144,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/nav2/router_outlet.dart"
      });
    },
    get C181() {
      return C[181] = dart.const({
        __proto__: get_router_delegate.PopMode.prototype,
        [_Enum__name]: "History",
        [_Enum_index]: 0
      });
    },
    get C182() {
      return C[182] = dart.const({
        __proto__: get_router_delegate.PreventDuplicateHandlingMode.prototype,
        [_Enum__name]: "ReorderRoutes",
        [_Enum_index]: 2
      });
    },
    get C184() {
      return C[184] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Scaffold",
        [_Location_column]: 33,
        [_Location_line]: 32,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/nav2/get_router_delegate.dart"
      });
    },
    get C185() {
      return C[185] = dart.const({
        __proto__: recognizer.DragStartBehavior.prototype,
        [_Enum__name]: "start",
        [_Enum_index]: 1
      });
    },
    get C186() {
      return C[186] = dart.const({
        __proto__: alignment.AlignmentDirectional.prototype,
        [AlignmentDirectional_y]: 0,
        [AlignmentDirectional_start]: 1
      });
    },
    get C188() {
      return C[188] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Text",
        [_Location_column]: 23,
        [_Location_line]: 33,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/nav2/get_router_delegate.dart"
      });
    },
    get C187() {
      return C[187] = dart.const({
        __proto__: text.Text.prototype,
        [Widget__location]: C[188] || CT.C188,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Route not found"
      });
    },
    get C183() {
      return C[183] = dart.const({
        __proto__: scaffold.Scaffold.prototype,
        [Widget__location]: C[184] || CT.C184,
        [Widget_key]: null,
        [Scaffold_restorationId]: null,
        [Scaffold_endDrawerEnableOpenDragGesture]: true,
        [Scaffold_drawerEnableOpenDragGesture]: true,
        [Scaffold_drawerEdgeDragWidth]: null,
        [Scaffold_drawerDragStartBehavior]: C[185] || CT.C185,
        [Scaffold_primary]: true,
        [Scaffold_resizeToAvoidBottomInset]: null,
        [Scaffold_bottomSheet]: null,
        [Scaffold_bottomNavigationBar]: null,
        [Scaffold_backgroundColor]: null,
        [Scaffold_drawerScrimColor]: null,
        [Scaffold_onEndDrawerChanged]: null,
        [Scaffold_endDrawer]: null,
        [Scaffold_onDrawerChanged]: null,
        [Scaffold_drawer]: null,
        [Scaffold_persistentFooterAlignment]: C[186] || CT.C186,
        [Scaffold_persistentFooterButtons]: null,
        [Scaffold_floatingActionButtonAnimator]: null,
        [Scaffold_floatingActionButtonLocation]: null,
        [Scaffold_floatingActionButton]: null,
        [Scaffold_body]: C[187] || CT.C187,
        [Scaffold_appBar]: null,
        [Scaffold_extendBodyBehindAppBar]: false,
        [Scaffold_extendBody]: false
      });
    },
    get C189() {
      return C[189] = dart.const({
        __proto__: get_router_delegate.PopMode.prototype,
        [_Enum__name]: "Page",
        [_Enum_index]: 1
      });
    },
    get C191() {
      return C[191] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "SizedBox",
        [_Location_column]: 37,
        [_Location_line]: 78,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/nav2/get_router_delegate.dart"
      });
    },
    get C190() {
      return C[190] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget__location]: C[191] || CT.C191,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 0,
        [SizedBox_width]: 0
      });
    },
    get C192() {
      return C[192] = dart.const({
        __proto__: navigator.DefaultTransitionDelegate.prototype
      });
    },
    get C193() {
      return C[193] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "GetNavigator",
        [_Location_column]: 12,
        [_Location_line]: 80,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/nav2/get_router_delegate.dart"
      });
    },
    get C194() {
      return C[194] = dart.const({
        __proto__: get_router_delegate.PreventDuplicateHandlingMode.prototype,
        [_Enum__name]: "PopUntilOriginalRoute",
        [_Enum_index]: 0
      });
    },
    get C195() {
      return C[195] = dart.const({
        __proto__: get_router_delegate.PreventDuplicateHandlingMode.prototype,
        [_Enum__name]: "DoNothing",
        [_Enum_index]: 1
      });
    },
    get C196() {
      return C[196] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "GetNavigator",
        [_Location_column]: 3,
        [_Location_line]: 418,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/nav2/get_router_delegate.dart"
      });
    },
    get C197() {
      return C[197] = dart.constList([C[181] || CT.C181, C[189] || CT.C189], get_router_delegate.PopMode);
    },
    get C198() {
      return C[198] = dart.constList([C[194] || CT.C194, C[195] || CT.C195, C[182] || CT.C182], get_router_delegate.PreventDuplicateHandlingMode);
    },
    get C199() {
      return C[199] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 2147483648.0
      });
    },
    get C200() {
      return C[200] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Semantics",
        [_Location_column]: 12,
        [_Location_line]: 53,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/dialog/dialog_route.dart"
      });
    },
    get C201() {
      return C[201] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "FadeTransition",
        [_Location_column]: 14,
        [_Location_line]: 64,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/dialog/dialog_route.dart"
      });
    },
    get C202() {
      return C[202] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 250000
      });
    },
    get C203() {
      return C[203] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Theme",
        [_Location_column]: 18,
        [_Location_line]: 89,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/extension_navigation.dart"
      });
    },
    get C204() {
      return C[204] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Builder",
        [_Location_column]: 25,
        [_Location_line]: 88,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/extension_navigation.dart"
      });
    },
    get C205() {
      return C[205] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "SafeArea",
        [_Location_column]: 20,
        [_Location_line]: 92,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/extension_navigation.dart"
      });
    },
    get C206() {
      return C[206] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "FadeTransition",
        [_Location_column]: 16,
        [_Location_line]: 101,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/extension_navigation.dart"
      });
    },
    get C207() {
      return C[207] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 8,
        [EdgeInsets_right]: 10,
        [EdgeInsets_top]: 8,
        [EdgeInsets_left]: 10
      });
    },
    get C208() {
      return C[208] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Text",
        [_Location_column]: 18,
        [_Location_line]: 200,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/extension_navigation.dart"
      });
    },
    get C209() {
      return C[209] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "TextButton",
        [_Location_column]: 21,
        [_Location_line]: 185,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/extension_navigation.dart"
      });
    },
    get C210() {
      return C[210] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Text",
        [_Location_column]: 20,
        [_Location_line]: 219,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/extension_navigation.dart"
      });
    },
    get C211() {
      return C[211] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "TextButton",
        [_Location_column]: 21,
        [_Location_line]: 212,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/extension_navigation.dart"
      });
    },
    get C212() {
      return C[212] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 8,
        [EdgeInsets_right]: 8,
        [EdgeInsets_top]: 8,
        [EdgeInsets_left]: 8
      });
    },
    get C213() {
      return C[213] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Text",
        [_Location_column]: 14,
        [_Location_line]: 237,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/extension_navigation.dart"
      });
    },
    get C214() {
      return C[214] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Text",
        [_Location_column]: 15,
        [_Location_line]: 243,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/extension_navigation.dart"
      });
    },
    get C216() {
      return C[216] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "SizedBox",
        [_Location_column]: 17,
        [_Location_line]: 245,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/extension_navigation.dart"
      });
    },
    get C215() {
      return C[215] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget__location]: C[216] || CT.C216,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 16,
        [SizedBox_width]: null
      });
    },
    get C217() {
      return C[217] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Wrap",
        [_Location_column]: 20,
        [_Location_line]: 249,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/extension_navigation.dart"
      });
    },
    get C218() {
      return C[218] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "ButtonTheme",
        [_Location_column]: 11,
        [_Location_line]: 246,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/extension_navigation.dart"
      });
    },
    get C219() {
      return C[219] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Column",
        [_Location_column]: 16,
        [_Location_line]: 238,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/extension_navigation.dart"
      });
    },
    get C220() {
      return C[220] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "AlertDialog",
        [_Location_column]: 30,
        [_Location_line]: 230,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/extension_navigation.dart"
      });
    },
    get C221() {
      return C[221] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "WillPopScope",
        [_Location_column]: 13,
        [_Location_line]: 264,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/extension_navigation.dart"
      });
    },
    get C222() {
      return C[222] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 3000000
      });
    },
    get C223() {
      return C[223] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "GetSnackBar",
        [_Location_column]: 25,
        [_Location_line]: 314,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/extension_navigation.dart"
      });
    },
    get C224() {
      return C[224] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Text",
        [_Location_column]: 13,
        [_Location_line]: 414,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/extension_navigation.dart"
      });
    },
    get C225() {
      return C[225] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Text",
        [_Location_column]: 13,
        [_Location_line]: 423,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/extension_navigation.dart"
      });
    },
    get C226() {
      return C[226] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 10,
        [EdgeInsets_top]: 0,
        [EdgeInsets_left]: 10
      });
    },
    get C227() {
      return C[227] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "GetSnackBar",
        [_Location_column]: 25,
        [_Location_line]: 411,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/extension_navigation.dart"
      });
    },
    get C228() {
      return C[228] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4278190080.0
      });
    },
    get C229() {
      return C[229] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Container",
        [_Location_column]: 18,
        [_Location_line]: 1342,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/extension_navigation.dart"
      });
    },
    get C230() {
      return C[230] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Opacity",
        [_Location_column]: 14,
        [_Location_line]: 1340,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/extension_navigation.dart"
      });
    },
    get C232() {
      return C[232] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Center",
        [_Location_column]: 17,
        [_Location_line]: 1348,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/extension_navigation.dart"
      });
    },
    get C234() {
      return C[234] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "SizedBox",
        [_Location_column]: 22,
        [_Location_line]: 1349,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/extension_navigation.dart"
      });
    },
    get C236() {
      return C[236] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Text",
        [_Location_column]: 20,
        [_Location_line]: 1352,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/extension_navigation.dart"
      });
    },
    get C235() {
      return C[235] = dart.const({
        __proto__: text.Text.prototype,
        [Widget__location]: C[236] || CT.C236,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Loading..."
      });
    },
    get C233() {
      return C[233] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget__location]: C[234] || CT.C234,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: C[235] || CT.C235,
        [SizedBox_height]: 90,
        [SizedBox_width]: 90
      });
    },
    get C231() {
      return C[231] = dart.const({
        __proto__: basic.Center.prototype,
        [Widget__location]: C[232] || CT.C232,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: C[233] || CT.C233,
        [Align_heightFactor]: null,
        [Align_widthFactor]: null,
        [Align_alignment]: C[159] || CT.C159
      });
    },
    get C237() {
      return C[237] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 700000
      });
    },
    get C238() {
      return C[238] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "_GetModalBottomSheet",
        [_Location_column]: 16,
        [_Location_line]: 87,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/bottomsheet/bottomsheet.dart"
      });
    },
    get C239() {
      return C[239] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Padding",
        [_Location_column]: 14,
        [_Location_line]: 84,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/bottomsheet/bottomsheet.dart"
      });
    },
    get C240() {
      return C[240] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "MediaQuery",
        [_Location_column]: 37,
        [_Location_line]: 81,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/bottomsheet/bottomsheet.dart"
      });
    },
    get C241() {
      return C[241] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Theme",
        [_Location_column]: 38,
        [_Location_line]: 101,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/bottomsheet/bottomsheet.dart"
      });
    },
    get C242() {
      return C[242] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "_GetModalBottomSheet",
        [_Location_column]: 9,
        [_Location_line]: 107,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/bottomsheet/bottomsheet.dart"
      });
    },
    get C243() {
      return C[243] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "BottomSheet",
        [_Location_column]: 23,
        [_Location_line]: 167,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/bottomsheet/bottomsheet.dart"
      });
    },
    get C244() {
      return C[244] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "BottomSheet",
        [_Location_column]: 38,
        [_Location_line]: 182,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/bottomsheet/bottomsheet.dart"
      });
    },
    get C245() {
      return C[245] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Scaffold",
        [_Location_column]: 23,
        [_Location_line]: 181,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/bottomsheet/bottomsheet.dart"
      });
    },
    get C246() {
      return C[246] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "CustomSingleChildLayout",
        [_Location_column]: 20,
        [_Location_line]: 163,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/bottomsheet/bottomsheet.dart"
      });
    },
    get C247() {
      return C[247] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "ClipRect",
        [_Location_column]: 18,
        [_Location_line]: 162,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/bottomsheet/bottomsheet.dart"
      });
    },
    get C248() {
      return C[248] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Semantics",
        [_Location_column]: 16,
        [_Location_line]: 157,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/bottomsheet/bottomsheet.dart"
      });
    },
    get C249() {
      return C[249] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "AnimatedBuilder",
        [_Location_column]: 12,
        [_Location_line]: 149,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/bottomsheet/bottomsheet.dart"
      });
    },
    get C250() {
      return C[250] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "_GetPerModalBottomSheet",
        [_Location_column]: 9,
        [_Location_line]: 206,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/bottomsheet/bottomsheet.dart"
      });
    },
    get C251() {
      return C[251] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "BottomSheet",
        [_Location_column]: 23,
        [_Location_line]: 270,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/bottomsheet/bottomsheet.dart"
      });
    },
    get C252() {
      return C[252] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "BottomSheet",
        [_Location_column]: 38,
        [_Location_line]: 285,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/bottomsheet/bottomsheet.dart"
      });
    },
    get C253() {
      return C[253] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Scaffold",
        [_Location_column]: 23,
        [_Location_line]: 284,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/bottomsheet/bottomsheet.dart"
      });
    },
    get C254() {
      return C[254] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "CustomSingleChildLayout",
        [_Location_column]: 20,
        [_Location_line]: 266,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/bottomsheet/bottomsheet.dart"
      });
    },
    get C255() {
      return C[255] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "ClipRect",
        [_Location_column]: 18,
        [_Location_line]: 265,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/bottomsheet/bottomsheet.dart"
      });
    },
    get C256() {
      return C[256] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Semantics",
        [_Location_column]: 16,
        [_Location_line]: 260,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/bottomsheet/bottomsheet.dart"
      });
    },
    get C257() {
      return C[257] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "AnimatedBuilder",
        [_Location_column]: 12,
        [_Location_line]: 252,
        [_Location_file]: "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/bottomsheet/bottomsheet.dart"
      });
    },
    get C258() {
      return C[258] = dart.const({
        __proto__: get_instance.GetInstance.prototype
      });
    }
  }, false);
  var C = Array(259).fill(void 0);
  var I = [
    "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/snackbar/snackbar_controller.dart",
    "package:get/get_navigation/src/snackbar/snackbar_controller.dart",
    "package:get/get_navigation/src/snackbar/snackbar.dart",
    "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/snackbar/snackbar.dart",
    "package:get/get_navigation/src/routes/route_middleware.dart",
    "package:get/get_navigation/src/routes/observers/route_observer.dart",
    "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/routes/get_route.dart",
    "package:get/get_navigation/src/routes/get_route.dart",
    "package:get/get_navigation/src/routes/get_transition_mixin.dart",
    "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/routes/get_transition_mixin.dart",
    "package:get/get_navigation/src/routes/default_route.dart",
    "package:get/get_state_manager/src/rx_flutter/rx_disposable.dart",
    "package:get/get_state_manager/src/simple/get_controllers.dart",
    "package:get/get_state_manager/src/rx_flutter/rx_notifier.dart",
    "package:get/get_navigation/src/root/root_controller.dart",
    "package:get/get_navigation/src/root/get_material_app.dart",
    "package:get/get_state_manager/src/simple/simple_builder.dart",
    "package:get/get_state_manager/src/simple/get_state.dart",
    "package:get/get_state_manager/src/simple/mixin_state.dart",
    "package:get/get_state_manager/src/simple/get_view.dart",
    "package:get/get_state_manager/src/simple/get_responsive.dart",
    "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_state_manager/src/rx_flutter/rx_ticket_provider_mixin.dart",
    "package:get/get_state_manager/src/rx_flutter/rx_ticket_provider_mixin.dart",
    "package:get/get_state_manager/src/rx_flutter/rx_getx_widget.dart",
    "package:get/get_navigation/src/root/get_cupertino_app.dart",
    "package:get/get_navigation/src/nav2/router_outlet.dart",
    "package:get/get_navigation/src/nav2/get_nav_config.dart",
    "package:get/get_navigation/src/nav2/get_router_delegate.dart",
    "package:get/get_navigation/src/nav2/get_information_parser.dart",
    "package:get/get_navigation/src/root/parse_route.dart",
    "package:get/get_navigation/src/dialog/dialog_route.dart",
    "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/extension_navigation.dart",
    "file:///C:/Users/Admin/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/get-4.6.5/lib/get_navigation/src/bottomsheet/bottomsheet.dart",
    "package:get/get_navigation/src/bottomsheet/bottomsheet.dart",
    "package:get/get_navigation/src/router_report.dart",
    "package:get/get_instance/src/get_instance.dart",
    "package:get/get_instance/src/bindings_interface.dart"
  ];
  var key$ = dart.privateName(snackbar_controller, "SnackbarController.key");
  var snackbar$ = dart.privateName(snackbar_controller, "SnackbarController.snackbar");
  var __SnackbarController__filterBlurAnimation = dart.privateName(snackbar_controller, "_#SnackbarController#_filterBlurAnimation");
  var __SnackbarController__filterColorAnimation = dart.privateName(snackbar_controller, "_#SnackbarController#_filterColorAnimation");
  var _transitionCompleter = dart.privateName(snackbar_controller, "_transitionCompleter");
  var __SnackbarController__snackbarStatus = dart.privateName(snackbar_controller, "_#SnackbarController#_snackbarStatus");
  var __SnackbarController__snackbarStatus_isSet = dart.privateName(snackbar_controller, "_#SnackbarController#_snackbarStatus#isSet");
  var __SnackbarController__initialAlignment = dart.privateName(snackbar_controller, "_#SnackbarController#_initialAlignment");
  var __SnackbarController__initialAlignment_isSet = dart.privateName(snackbar_controller, "_#SnackbarController#_initialAlignment#isSet");
  var __SnackbarController__endAlignment = dart.privateName(snackbar_controller, "_#SnackbarController#_endAlignment");
  var __SnackbarController__endAlignment_isSet = dart.privateName(snackbar_controller, "_#SnackbarController#_endAlignment#isSet");
  var _wasDismissedBySwipe = dart.privateName(snackbar_controller, "_wasDismissedBySwipe");
  var _onTappedDismiss = dart.privateName(snackbar_controller, "_onTappedDismiss");
  var _timer = dart.privateName(snackbar_controller, "_timer");
  var __SnackbarController__animation = dart.privateName(snackbar_controller, "_#SnackbarController#_animation");
  var __SnackbarController__controller = dart.privateName(snackbar_controller, "_#SnackbarController#_controller");
  var _currentStatus = dart.privateName(snackbar_controller, "_currentStatus");
  var _overlayEntries = dart.privateName(snackbar_controller, "_overlayEntries");
  var _overlayState = dart.privateName(snackbar_controller, "_overlayState");
  var _isJobInProgress = dart.privateName(snackbar_controller, "_isJobInProgress");
  var _filterBlurAnimation = dart.privateName(snackbar_controller, "_filterBlurAnimation");
  var _filterColorAnimation = dart.privateName(snackbar_controller, "_filterColorAnimation");
  var _snackbarStatus = dart.privateName(snackbar_controller, "_snackbarStatus");
  var _initialAlignment = dart.privateName(snackbar_controller, "_initialAlignment");
  var _endAlignment = dart.privateName(snackbar_controller, "_endAlignment");
  var _animation = dart.privateName(snackbar_controller, "_animation");
  var _controller = dart.privateName(snackbar_controller, "_controller");
  var _removeOverlay = dart.privateName(snackbar_controller, "_removeOverlay");
  var _removeEntry = dart.privateName(snackbar_controller, "_removeEntry");
  var _addJob = dart.privateName(snackbar_controller, "_addJob");
  var _cancelTimer = dart.privateName(snackbar_controller, "_cancelTimer");
  var Alignment_y = dart.privateName(alignment, "Alignment.y");
  var Alignment_x = dart.privateName(alignment, "Alignment.x");
  var _Enum__name = dart.privateName(core, "_Enum._name");
  var _Enum_index = dart.privateName(core, "_Enum.index");
  var _configureAlignment = dart.privateName(snackbar_controller, "_configureAlignment");
  var _getBodyWidget = dart.privateName(snackbar_controller, "_getBodyWidget");
  var _createOverlayEntries = dart.privateName(snackbar_controller, "_createOverlayEntries");
  var _configureSnackBarDisplay = dart.privateName(snackbar_controller, "_configureSnackBarDisplay");
  var _configureOverlay = dart.privateName(snackbar_controller, "_configureOverlay");
  var _createAnimationController = dart.privateName(snackbar_controller, "_createAnimationController");
  var _createBlurFilterAnimation = dart.privateName(snackbar_controller, "_createBlurFilterAnimation");
  var _createColorOverlayColor = dart.privateName(snackbar_controller, "_createColorOverlayColor");
  var _createAnimation = dart.privateName(snackbar_controller, "_createAnimation");
  var _handleStatusChanged = dart.privateName(snackbar_controller, "_handleStatusChanged");
  var _configureTimer = dart.privateName(snackbar_controller, "_configureTimer");
  var Cubic_d = dart.privateName(curves, "Cubic.d");
  var Cubic_c = dart.privateName(curves, "Cubic.c");
  var Cubic_b = dart.privateName(curves, "Cubic.b");
  var Cubic_a = dart.privateName(curves, "Cubic.a");
  var Interval_curve = dart.privateName(curves, "Interval.curve");
  var Interval_end = dart.privateName(curves, "Interval.end");
  var Interval_begin = dart.privateName(curves, "Interval.begin");
  var Color_value = dart.privateName(ui, "Color.value");
  var BoxConstraints_maxHeight = dart.privateName(box$, "BoxConstraints.maxHeight");
  var BoxConstraints_minHeight = dart.privateName(box$, "BoxConstraints.minHeight");
  var BoxConstraints_maxWidth = dart.privateName(box$, "BoxConstraints.maxWidth");
  var BoxConstraints_minWidth = dart.privateName(box$, "BoxConstraints.minWidth");
  var _Location_name = dart.privateName(widget_inspector, "_Location.name");
  var _Location_column = dart.privateName(widget_inspector, "_Location.column");
  var _Location_line = dart.privateName(widget_inspector, "_Location.line");
  var _Location_file = dart.privateName(widget_inspector, "_Location.file");
  var _getDismissibleSnack = dart.privateName(snackbar_controller, "_getDismissibleSnack");
  var _getSnackbarContainer = dart.privateName(snackbar_controller, "_getSnackbarContainer");
  var _getDefaultDismissDirection = dart.privateName(snackbar_controller, "_getDefaultDismissDirection");
  var ValueKey_value = dart.privateName(key, "ValueKey.value");
  var Duration__duration = dart.privateName(core, "Duration._duration");
  var _show = dart.privateName(snackbar_controller, "_show");
  var _cancelAllJobs = dart.privateName(snackbar_controller, "_cancelAllJobs");
  var _closeCurrentJob = dart.privateName(snackbar_controller, "_closeCurrentJob");
  snackbar_controller.SnackbarController = class SnackbarController extends core.Object {
    get key() {
      return this[key$];
    }
    set key(value) {
      super.key = value;
    }
    get snackbar() {
      return this[snackbar$];
    }
    set snackbar(value) {
      super.snackbar = value;
    }
    static get isSnackbarBeingShown() {
      return snackbar_controller.SnackbarController._snackBarQueue[_isJobInProgress];
    }
    get [_filterBlurAnimation]() {
      let t0;
      t0 = this[__SnackbarController__filterBlurAnimation];
      return t0 == null ? dart.throw(new _internal.LateError.fieldNI("_filterBlurAnimation")) : t0;
    }
    set [_filterBlurAnimation](library$32package$58get$47get_navigation$47src$47snackbar$47snackbar_controller$46dart$58$58_filterBlurAnimation$35param) {
      this[__SnackbarController__filterBlurAnimation] = library$32package$58get$47get_navigation$47src$47snackbar$47snackbar_controller$46dart$58$58_filterBlurAnimation$35param;
    }
    get [_filterColorAnimation]() {
      let t0;
      t0 = this[__SnackbarController__filterColorAnimation];
      return t0 == null ? dart.throw(new _internal.LateError.fieldNI("_filterColorAnimation")) : t0;
    }
    set [_filterColorAnimation](library$32package$58get$47get_navigation$47src$47snackbar$47snackbar_controller$46dart$58$58_filterColorAnimation$35param) {
      this[__SnackbarController__filterColorAnimation] = library$32package$58get$47get_navigation$47src$47snackbar$47snackbar_controller$46dart$58$58_filterColorAnimation$35param;
    }
    get [_snackbarStatus]() {
      return this[__SnackbarController__snackbarStatus_isSet] ? this[__SnackbarController__snackbarStatus] : dart.throw(new _internal.LateError.fieldNI("_snackbarStatus"));
    }
    set [_snackbarStatus](library$32package$58get$47get_navigation$47src$47snackbar$47snackbar_controller$46dart$58$58_snackbarStatus$35param) {
      this[__SnackbarController__snackbarStatus_isSet] = true;
      this[__SnackbarController__snackbarStatus] = library$32package$58get$47get_navigation$47src$47snackbar$47snackbar_controller$46dart$58$58_snackbarStatus$35param;
    }
    get [_initialAlignment]() {
      return this[__SnackbarController__initialAlignment_isSet] ? this[__SnackbarController__initialAlignment] : dart.throw(new _internal.LateError.fieldNI("_initialAlignment"));
    }
    set [_initialAlignment](library$32package$58get$47get_navigation$47src$47snackbar$47snackbar_controller$46dart$58$58_initialAlignment$35param) {
      if (this[__SnackbarController__initialAlignment_isSet])
        dart.throw(new _internal.LateError.fieldAI("_initialAlignment"));
      else {
        this[__SnackbarController__initialAlignment_isSet] = true;
        this[__SnackbarController__initialAlignment] = library$32package$58get$47get_navigation$47src$47snackbar$47snackbar_controller$46dart$58$58_initialAlignment$35param;
      }
    }
    get [_endAlignment]() {
      return this[__SnackbarController__endAlignment_isSet] ? this[__SnackbarController__endAlignment] : dart.throw(new _internal.LateError.fieldNI("_endAlignment"));
    }
    set [_endAlignment](library$32package$58get$47get_navigation$47src$47snackbar$47snackbar_controller$46dart$58$58_endAlignment$35param) {
      if (this[__SnackbarController__endAlignment_isSet])
        dart.throw(new _internal.LateError.fieldAI("_endAlignment"));
      else {
        this[__SnackbarController__endAlignment_isSet] = true;
        this[__SnackbarController__endAlignment] = library$32package$58get$47get_navigation$47src$47snackbar$47snackbar_controller$46dart$58$58_endAlignment$35param;
      }
    }
    get [_animation]() {
      let t0;
      t0 = this[__SnackbarController__animation];
      return t0 == null ? dart.throw(new _internal.LateError.fieldNI("_animation")) : t0;
    }
    set [_animation](library$32package$58get$47get_navigation$47src$47snackbar$47snackbar_controller$46dart$58$58_animation$35param) {
      if (this[__SnackbarController__animation] == null)
        this[__SnackbarController__animation] = library$32package$58get$47get_navigation$47src$47snackbar$47snackbar_controller$46dart$58$58_animation$35param;
      else
        dart.throw(new _internal.LateError.fieldAI("_animation"));
    }
    get [_controller]() {
      let t0;
      t0 = this[__SnackbarController__controller];
      return t0 == null ? dart.throw(new _internal.LateError.fieldNI("_controller")) : t0;
    }
    set [_controller](library$32package$58get$47get_navigation$47src$47snackbar$47snackbar_controller$46dart$58$58_controller$35param) {
      if (this[__SnackbarController__controller] == null)
        this[__SnackbarController__controller] = library$32package$58get$47get_navigation$47src$47snackbar$47snackbar_controller$46dart$58$58_controller$35param;
      else
        dart.throw(new _internal.LateError.fieldAI("_controller"));
    }
    static ['_#new#tearOff'](snackbar) {
      return new snackbar_controller.SnackbarController.new(snackbar);
    }
    get future() {
      return this[_transitionCompleter].future;
    }
    close(opts) {
      let withAnimations = opts && 'withAnimations' in opts ? opts.withAnimations : true;
      return async.async(dart.void, (function* close() {
        if (!withAnimations) {
          this[_removeOverlay]();
          return;
        }
        this[_removeEntry]();
        yield this.future;
      }).bind(this));
    }
    show() {
      return snackbar_controller.SnackbarController._snackBarQueue[_addJob](this);
    }
    [_cancelTimer]() {
      if (this[_timer] != null && dart.nullCheck(this[_timer]).isActive) {
        dart.nullCheck(this[_timer]).cancel();
      }
    }
    [_configureAlignment](snackPosition) {
      switch (this.snackbar.snackPosition) {
        case C[2] || CT.C2:
          {
            {
              this[_initialAlignment] = C[0] || CT.C0;
              this[_endAlignment] = C[1] || CT.C1;
              break;
            }
          }
        case C[5] || CT.C5:
          {
            {
              this[_initialAlignment] = C[3] || CT.C3;
              this[_endAlignment] = C[4] || CT.C4;
              break;
            }
          }
      }
    }
    [_configureOverlay]() {
      this[_overlayState] = overlay.Overlay.of(dart.nullCheck(extension_navigation['GetNavigation|get#overlayContext'](get_main.Get)));
      this[_overlayEntries][$clear]();
      this[_overlayEntries][$addAll](this[_createOverlayEntries](this[_getBodyWidget]()));
      dart.nullCheck(this[_overlayState]).insertAll(this[_overlayEntries]);
      this[_configureSnackBarDisplay]();
    }
    [_configureSnackBarDisplay]() {
      if (!!this[_transitionCompleter].isCompleted) dart.assertFailed("Cannot configure a snackbar after disposing it.", I[0], 99, 12, "!_transitionCompleter.isCompleted");
      this[_controller] = this[_createAnimationController]();
      this[_configureAlignment](this.snackbar.snackPosition);
      this[_snackbarStatus] = this.snackbar.snackbarStatus;
      this[_filterBlurAnimation] = this[_createBlurFilterAnimation]();
      this[_filterColorAnimation] = this[_createColorOverlayColor]();
      this[_animation] = this[_createAnimation]();
      this[_animation].addStatusListener(dart.bind(this, _handleStatusChanged));
      this[_configureTimer]();
      this[_controller].forward();
    }
    [_configureTimer]() {
      if (this.snackbar.duration != null) {
        if (this[_timer] != null && dart.nullCheck(this[_timer]).isActive) {
          dart.nullCheck(this[_timer]).cancel();
        }
        this[_timer] = async.Timer.new(dart.nullCheck(this.snackbar.duration), dart.bind(this, _removeEntry));
      } else {
        if (this[_timer] != null) {
          dart.nullCheck(this[_timer]).cancel();
        }
      }
    }
    [_createAnimation]() {
      if (!!this[_transitionCompleter].isCompleted) dart.assertFailed("Cannot create a animation from a disposed snackbar", I[0], 129, 12, "!_transitionCompleter.isCompleted");
      return new tweens.AlignmentTween.new({begin: this[_initialAlignment], end: this[_endAlignment]}).animate(new animations.CurvedAnimation.new({parent: this[_controller], curve: this.snackbar.forwardAnimationCurve, reverseCurve: this.snackbar.reverseAnimationCurve}));
    }
    [_createAnimationController]() {
      if (!!this[_transitionCompleter].isCompleted) dart.assertFailed("Cannot create a animationController from a disposed snackbar", I[0], 144, 12, "!_transitionCompleter.isCompleted");
      if (!this.snackbar.animationDuration['>='](core.Duration.zero)) dart.assertFailed(null, I[0], 146, 12, "snackbar.animationDuration >= Duration.zero");
      return new animation_controller.AnimationController.new({duration: this.snackbar.animationDuration, debugLabel: dart.str(this[$runtimeType]), vsync: dart.nullCheck(this[_overlayState])});
    }
    [_createBlurFilterAnimation]() {
      return new (T$.TweenOfdouble()).new({begin: 0.0, end: this.snackbar.overlayBlur}).animate(new animations.CurvedAnimation.new({parent: this[_controller], curve: C[6] || CT.C6}));
    }
    [_createColorOverlayColor]() {
      return new tween.ColorTween.new({begin: C[8] || CT.C8, end: this.snackbar.overlayColor}).animate(new animations.CurvedAnimation.new({parent: this[_controller], curve: C[6] || CT.C6}));
    }
    [_createOverlayEntries](child) {
      return (() => {
        let t0 = T$.JSArrayOfOverlayEntry().of([]);
        if (this.snackbar.overlayBlur > 0.0) t0[$addAll](T$.JSArrayOfOverlayEntry().of([new overlay.OverlayEntry.new({builder: dart.fn(context => new gesture_detector.GestureDetector.new({onTap: dart.fn(() => {
                if (this.snackbar.isDismissible && !this[_onTappedDismiss]) {
                  this[_onTappedDismiss] = true;
                  this.close();
                }
              }, T$.VoidTovoid()), child: new transitions.AnimatedBuilder.new({animation: this[_filterBlurAnimation], builder: dart.fn((context, child) => new basic.BackdropFilter.new({filter: ui.ImageFilter.blur({sigmaX: math.max(core.double, 0.001, this[_filterBlurAnimation].value), sigmaY: math.max(core.double, 0.001, this[_filterBlurAnimation].value)}), child: new container.Container.new({constraints: C[9] || CT.C9, color: this[_filterColorAnimation].value, $creationLocationd_0dea112b090073317d4: C[10] || CT.C10}), $creationLocationd_0dea112b090073317d4: C[11] || CT.C11}), T$.BuildContextAndWidgetNToBackdropFilter()), $creationLocationd_0dea112b090073317d4: C[12] || CT.C12}), $creationLocationd_0dea112b090073317d4: C[13] || CT.C13}), T$.BuildContextToGestureDetector()), maintainState: false, opaque: false})]));
        t0.push(new overlay.OverlayEntry.new({builder: dart.fn(context => new basic.Semantics.new({child: new transitions.AlignTransition.new({alignment: this[_animation], child: this.snackbar.isDismissible ? this[_getDismissibleSnack](child) : this[_getSnackbarContainer](child), $creationLocationd_0dea112b090073317d4: C[14] || CT.C14}), focused: false, container: true, explicitChildNodes: true, $creationLocationd_0dea112b090073317d4: C[15] || CT.C15}), T$.BuildContextToSemantics()), maintainState: false, opaque: false}));
        return t0;
      })();
    }
    [_getBodyWidget]() {
      return new basic.Builder.new({builder: dart.fn(_ => new gesture_detector.GestureDetector.new({child: this.snackbar, onTap: this.snackbar.onTap != null ? dart.fn(() => {
            let t1;
            t1 = this.snackbar.onTap;
            return t1 == null ? null : t1(this.snackbar);
          }, T$.VoidTovoid()) : null, $creationLocationd_0dea112b090073317d4: C[16] || CT.C16}), T$.BuildContextToGestureDetector()), $creationLocationd_0dea112b090073317d4: C[17] || CT.C17});
    }
    [_getDefaultDismissDirection]() {
      if (this.snackbar.snackPosition === snackbar.SnackPosition.TOP) {
        return dismissible.DismissDirection.up;
      }
      return dismissible.DismissDirection.down;
    }
    [_getDismissibleSnack](child) {
      let t1;
      return new dismissible.Dismissible.new({direction: (t1 = this.snackbar.dismissDirection, t1 == null ? this[_getDefaultDismissDirection]() : t1), resizeDuration: null, confirmDismiss: dart.fn(_ => {
          if (this[_currentStatus] === snackbar.SnackbarStatus.OPENING || this[_currentStatus] === snackbar.SnackbarStatus.CLOSING) {
            return T$.FutureOfboolN().value(false);
          }
          return T$.FutureOfboolN().value(true);
        }, T$.DismissDirectionToFutureOfboolN()), key: C[18] || CT.C18, onDismissed: dart.fn(_ => {
          this[_wasDismissedBySwipe] = true;
          this[_removeEntry]();
        }, T$.DismissDirectionTovoid()), child: this[_getSnackbarContainer](child), $creationLocationd_0dea112b090073317d4: C[19] || CT.C19});
    }
    [_getSnackbarContainer](child) {
      return new container.Container.new({margin: this.snackbar.margin, child: child, $creationLocationd_0dea112b090073317d4: C[20] || CT.C20});
    }
    [_handleStatusChanged](status) {
      let t1, t1$, t1$0, t1$1;
      switch (status) {
        case C[21] || CT.C21:
          {
            this[_currentStatus] = snackbar.SnackbarStatus.OPEN;
            t1 = this[_snackbarStatus];
            t1 == null ? null : t1(this[_currentStatus]);
            if (this[_overlayEntries][$isNotEmpty]) this[_overlayEntries][$first].opaque = false;
            break;
          }
        case C[22] || CT.C22:
          {
            this[_currentStatus] = snackbar.SnackbarStatus.OPENING;
            t1$ = this[_snackbarStatus];
            t1$ == null ? null : t1$(this[_currentStatus]);
            break;
          }
        case C[23] || CT.C23:
          {
            this[_currentStatus] = snackbar.SnackbarStatus.CLOSING;
            t1$0 = this[_snackbarStatus];
            t1$0 == null ? null : t1$0(this[_currentStatus]);
            if (this[_overlayEntries][$isNotEmpty]) this[_overlayEntries][$first].opaque = false;
            break;
          }
        case C[24] || CT.C24:
          {
            if (!!this[_overlayEntries][$first].opaque) dart.assertFailed(null, I[0], 294, 16, "!_overlayEntries.first.opaque");
            this[_currentStatus] = snackbar.SnackbarStatus.CLOSED;
            t1$1 = this[_snackbarStatus];
            t1$1 == null ? null : t1$1(this[_currentStatus]);
            this[_removeOverlay]();
            break;
          }
      }
    }
    [_removeEntry]() {
      if (!!this[_transitionCompleter].isCompleted) dart.assertFailed("Cannot remove entry from a disposed snackbar", I[0], 304, 7, "!_transitionCompleter.isCompleted");
      this[_cancelTimer]();
      if (this[_wasDismissedBySwipe]) {
        async.Timer.new(C[25] || CT.C25, dart.bind(this[_controller], 'reset'));
        this[_wasDismissedBySwipe] = false;
      } else {
        this[_controller].reverse();
      }
    }
    [_removeOverlay]() {
      for (let element of this[_overlayEntries]) {
        element.remove();
      }
      if (!!this[_transitionCompleter].isCompleted) dart.assertFailed("Cannot remove overlay from a disposed snackbar", I[0], 323, 12, "!_transitionCompleter.isCompleted");
      this[_controller].dispose();
      this[_overlayEntries][$clear]();
      this[_transitionCompleter].complete();
    }
    [_show]() {
      this[_configureOverlay]();
      return this.future;
    }
    static cancelAllSnackbars() {
      snackbar_controller.SnackbarController._snackBarQueue[_cancelAllJobs]();
    }
    static closeCurrentSnackbar() {
      return async.async(dart.void, function* closeCurrentSnackbar() {
        yield snackbar_controller.SnackbarController._snackBarQueue[_closeCurrentJob]();
      });
    }
  };
  (snackbar_controller.SnackbarController.new = function(snackbar) {
    this[key$] = T$.GlobalKeyOfGetSnackBarState().new();
    this[__SnackbarController__filterBlurAnimation] = null;
    this[__SnackbarController__filterColorAnimation] = null;
    this[_transitionCompleter] = async.Completer.new();
    this[__SnackbarController__snackbarStatus] = null;
    this[__SnackbarController__snackbarStatus_isSet] = false;
    this[__SnackbarController__initialAlignment] = null;
    this[__SnackbarController__initialAlignment_isSet] = false;
    this[__SnackbarController__endAlignment] = null;
    this[__SnackbarController__endAlignment_isSet] = false;
    this[_wasDismissedBySwipe] = false;
    this[_onTappedDismiss] = false;
    this[_timer] = null;
    this[__SnackbarController__animation] = null;
    this[__SnackbarController__controller] = null;
    this[_currentStatus] = null;
    this[_overlayEntries] = T$.JSArrayOfOverlayEntry().of([]);
    this[_overlayState] = null;
    this[snackbar$] = snackbar;
    ;
  }).prototype = snackbar_controller.SnackbarController.prototype;
  dart.addTypeTests(snackbar_controller.SnackbarController);
  dart.addTypeCaches(snackbar_controller.SnackbarController);
  dart.setMethodSignature(snackbar_controller.SnackbarController, () => ({
    __proto__: dart.getMethods(snackbar_controller.SnackbarController.__proto__),
    close: dart.fnType(async.Future$(dart.void), [], {withAnimations: core.bool}, {}),
    show: dart.fnType(async.Future$(dart.void), []),
    [_cancelTimer]: dart.fnType(dart.void, []),
    [_configureAlignment]: dart.fnType(dart.void, [snackbar.SnackPosition]),
    [_configureOverlay]: dart.fnType(dart.void, []),
    [_configureSnackBarDisplay]: dart.fnType(dart.void, []),
    [_configureTimer]: dart.fnType(dart.void, []),
    [_createAnimation]: dart.fnType(animation.Animation$(alignment.Alignment), []),
    [_createAnimationController]: dart.fnType(animation_controller.AnimationController, []),
    [_createBlurFilterAnimation]: dart.fnType(animation.Animation$(core.double), []),
    [_createColorOverlayColor]: dart.fnType(animation.Animation$(dart.nullable(ui.Color)), []),
    [_createOverlayEntries]: dart.fnType(core.Iterable$(overlay.OverlayEntry), [framework.Widget]),
    [_getBodyWidget]: dart.fnType(framework.Widget, []),
    [_getDefaultDismissDirection]: dart.fnType(dismissible.DismissDirection, []),
    [_getDismissibleSnack]: dart.fnType(framework.Widget, [framework.Widget]),
    [_getSnackbarContainer]: dart.fnType(framework.Widget, [framework.Widget]),
    [_handleStatusChanged]: dart.fnType(dart.void, [animation.AnimationStatus]),
    [_removeEntry]: dart.fnType(dart.void, []),
    [_removeOverlay]: dart.fnType(dart.void, []),
    [_show]: dart.fnType(async.Future$(dart.void), [])
  }));
  dart.setStaticMethodSignature(snackbar_controller.SnackbarController, () => ['cancelAllSnackbars', 'closeCurrentSnackbar']);
  dart.setGetterSignature(snackbar_controller.SnackbarController, () => ({
    __proto__: dart.getGetters(snackbar_controller.SnackbarController.__proto__),
    [_filterBlurAnimation]: animation.Animation$(core.double),
    [_filterColorAnimation]: animation.Animation$(dart.nullable(ui.Color)),
    [_snackbarStatus]: dart.nullable(dart.fnType(dart.void, [dart.nullable(snackbar.SnackbarStatus)])),
    [_initialAlignment]: dart.nullable(alignment.Alignment),
    [_endAlignment]: dart.nullable(alignment.Alignment),
    [_animation]: animation.Animation$(alignment.Alignment),
    [_controller]: animation_controller.AnimationController,
    future: async.Future$(dart.void)
  }));
  dart.setSetterSignature(snackbar_controller.SnackbarController, () => ({
    __proto__: dart.getSetters(snackbar_controller.SnackbarController.__proto__),
    [_filterBlurAnimation]: animation.Animation$(core.double),
    [_filterColorAnimation]: animation.Animation$(dart.nullable(ui.Color)),
    [_snackbarStatus]: dart.nullable(dart.fnType(dart.void, [dart.nullable(snackbar.SnackbarStatus)])),
    [_initialAlignment]: dart.nullable(alignment.Alignment),
    [_endAlignment]: dart.nullable(alignment.Alignment),
    [_animation]: animation.Animation$(alignment.Alignment),
    [_controller]: animation_controller.AnimationController
  }));
  dart.setStaticGetterSignature(snackbar_controller.SnackbarController, () => ['isSnackbarBeingShown']);
  dart.setLibraryUri(snackbar_controller.SnackbarController, I[1]);
  dart.setFieldSignature(snackbar_controller.SnackbarController, () => ({
    __proto__: dart.getFields(snackbar_controller.SnackbarController.__proto__),
    key: dart.finalFieldType(framework.GlobalKey$(snackbar.GetSnackBarState)),
    [__SnackbarController__filterBlurAnimation]: dart.fieldType(dart.nullable(animation.Animation$(core.double))),
    [__SnackbarController__filterColorAnimation]: dart.fieldType(dart.nullable(animation.Animation$(dart.nullable(ui.Color)))),
    snackbar: dart.finalFieldType(snackbar.GetSnackBar),
    [_transitionCompleter]: dart.finalFieldType(async.Completer),
    [__SnackbarController__snackbarStatus]: dart.fieldType(dart.nullable(dart.fnType(dart.void, [dart.nullable(snackbar.SnackbarStatus)]))),
    [__SnackbarController__snackbarStatus_isSet]: dart.fieldType(core.bool),
    [__SnackbarController__initialAlignment]: dart.fieldType(dart.nullable(alignment.Alignment)),
    [__SnackbarController__initialAlignment_isSet]: dart.fieldType(core.bool),
    [__SnackbarController__endAlignment]: dart.fieldType(dart.nullable(alignment.Alignment)),
    [__SnackbarController__endAlignment_isSet]: dart.fieldType(core.bool),
    [_wasDismissedBySwipe]: dart.fieldType(core.bool),
    [_onTappedDismiss]: dart.fieldType(core.bool),
    [_timer]: dart.fieldType(dart.nullable(async.Timer)),
    [__SnackbarController__animation]: dart.fieldType(dart.nullable(animation.Animation$(alignment.Alignment))),
    [__SnackbarController__controller]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [_currentStatus]: dart.fieldType(dart.nullable(snackbar.SnackbarStatus)),
    [_overlayEntries]: dart.finalFieldType(core.List$(overlay.OverlayEntry)),
    [_overlayState]: dart.fieldType(dart.nullable(overlay.OverlayState))
  }));
  dart.setStaticFieldSignature(snackbar_controller.SnackbarController, () => ['_snackBarQueue']);
  dart.defineLazy(snackbar_controller.SnackbarController, {
    /*snackbar_controller.SnackbarController._snackBarQueue*/get _snackBarQueue() {
      return new snackbar_controller._SnackBarQueue.new();
    }
  }, false);
  var _queue = dart.privateName(snackbar_controller, "_queue");
  var _snackbarList = dart.privateName(snackbar_controller, "_snackbarList");
  var _currentSnackbar = dart.privateName(snackbar_controller, "_currentSnackbar");
  snackbar_controller._SnackBarQueue = class _SnackBarQueue extends core.Object {
    get [_currentSnackbar]() {
      if (this[_snackbarList][$isEmpty]) return null;
      return this[_snackbarList][$first];
    }
    get [_isJobInProgress]() {
      return this[_snackbarList][$isNotEmpty];
    }
    [_addJob](job) {
      return async.async(dart.void, (function* _addJob() {
        this[_snackbarList][$add](job);
        let data = (yield this[_queue].add(dart.dynamic, dart.bind(job, _show)));
        this[_snackbarList][$remove](job);
        return data;
      }).bind(this));
    }
    [_cancelAllJobs]() {
      return async.async(dart.void, (function* _cancelAllJobs() {
        let t1;
        yield (t1 = this[_currentSnackbar], t1 == null ? null : t1.close());
        this[_queue].cancelAllJobs();
        this[_snackbarList][$clear]();
      }).bind(this));
    }
    [_closeCurrentJob]() {
      return async.async(dart.void, (function* _closeCurrentJob() {
        if (this[_currentSnackbar] == null) return;
        yield dart.nullCheck(this[_currentSnackbar]).close();
      }).bind(this));
    }
    static ['_#new#tearOff']() {
      return new snackbar_controller._SnackBarQueue.new();
    }
  };
  (snackbar_controller._SnackBarQueue.new = function() {
    this[_queue] = new get_queue.GetQueue.new();
    this[_snackbarList] = T$.JSArrayOfSnackbarController().of([]);
    ;
  }).prototype = snackbar_controller._SnackBarQueue.prototype;
  dart.addTypeTests(snackbar_controller._SnackBarQueue);
  dart.addTypeCaches(snackbar_controller._SnackBarQueue);
  dart.setMethodSignature(snackbar_controller._SnackBarQueue, () => ({
    __proto__: dart.getMethods(snackbar_controller._SnackBarQueue.__proto__),
    [_addJob]: dart.fnType(async.Future$(dart.void), [snackbar_controller.SnackbarController]),
    [_cancelAllJobs]: dart.fnType(async.Future$(dart.void), []),
    [_closeCurrentJob]: dart.fnType(async.Future$(dart.void), [])
  }));
  dart.setGetterSignature(snackbar_controller._SnackBarQueue, () => ({
    __proto__: dart.getGetters(snackbar_controller._SnackBarQueue.__proto__),
    [_currentSnackbar]: dart.nullable(snackbar_controller.SnackbarController),
    [_isJobInProgress]: core.bool
  }));
  dart.setLibraryUri(snackbar_controller._SnackBarQueue, I[1]);
  dart.setFieldSignature(snackbar_controller._SnackBarQueue, () => ({
    __proto__: dart.getFields(snackbar_controller._SnackBarQueue.__proto__),
    [_queue]: dart.finalFieldType(get_queue.GetQueue),
    [_snackbarList]: dart.finalFieldType(core.List$(snackbar_controller.SnackbarController))
  }));
  var EdgeInsets_bottom = dart.privateName(edge_insets, "EdgeInsets.bottom");
  var EdgeInsets_right = dart.privateName(edge_insets, "EdgeInsets.right");
  var EdgeInsets_top = dart.privateName(edge_insets, "EdgeInsets.top");
  var EdgeInsets_left = dart.privateName(edge_insets, "EdgeInsets.left");
  var snackbarStatus$ = dart.privateName(snackbar, "GetSnackBar.snackbarStatus");
  var title$ = dart.privateName(snackbar, "GetSnackBar.title");
  var dismissDirection$ = dart.privateName(snackbar, "GetSnackBar.dismissDirection");
  var message$ = dart.privateName(snackbar, "GetSnackBar.message");
  var titleText$ = dart.privateName(snackbar, "GetSnackBar.titleText");
  var messageText$ = dart.privateName(snackbar, "GetSnackBar.messageText");
  var backgroundColor$ = dart.privateName(snackbar, "GetSnackBar.backgroundColor");
  var leftBarIndicatorColor$ = dart.privateName(snackbar, "GetSnackBar.leftBarIndicatorColor");
  var boxShadows$ = dart.privateName(snackbar, "GetSnackBar.boxShadows");
  var backgroundGradient$ = dart.privateName(snackbar, "GetSnackBar.backgroundGradient");
  var icon$ = dart.privateName(snackbar, "GetSnackBar.icon");
  var shouldIconPulse$ = dart.privateName(snackbar, "GetSnackBar.shouldIconPulse");
  var mainButton$ = dart.privateName(snackbar, "GetSnackBar.mainButton");
  var onTap$ = dart.privateName(snackbar, "GetSnackBar.onTap");
  var duration$ = dart.privateName(snackbar, "GetSnackBar.duration");
  var showProgressIndicator$ = dart.privateName(snackbar, "GetSnackBar.showProgressIndicator");
  var progressIndicatorController$ = dart.privateName(snackbar, "GetSnackBar.progressIndicatorController");
  var progressIndicatorBackgroundColor$ = dart.privateName(snackbar, "GetSnackBar.progressIndicatorBackgroundColor");
  var progressIndicatorValueColor$ = dart.privateName(snackbar, "GetSnackBar.progressIndicatorValueColor");
  var isDismissible$ = dart.privateName(snackbar, "GetSnackBar.isDismissible");
  var maxWidth$ = dart.privateName(snackbar, "GetSnackBar.maxWidth");
  var margin$ = dart.privateName(snackbar, "GetSnackBar.margin");
  var padding$ = dart.privateName(snackbar, "GetSnackBar.padding");
  var borderRadius$ = dart.privateName(snackbar, "GetSnackBar.borderRadius");
  var borderColor$ = dart.privateName(snackbar, "GetSnackBar.borderColor");
  var borderWidth$ = dart.privateName(snackbar, "GetSnackBar.borderWidth");
  var snackPosition$ = dart.privateName(snackbar, "GetSnackBar.snackPosition");
  var snackStyle$ = dart.privateName(snackbar, "GetSnackBar.snackStyle");
  var forwardAnimationCurve$ = dart.privateName(snackbar, "GetSnackBar.forwardAnimationCurve");
  var reverseAnimationCurve$ = dart.privateName(snackbar, "GetSnackBar.reverseAnimationCurve");
  var animationDuration$ = dart.privateName(snackbar, "GetSnackBar.animationDuration");
  var barBlur$ = dart.privateName(snackbar, "GetSnackBar.barBlur");
  var overlayBlur$ = dart.privateName(snackbar, "GetSnackBar.overlayBlur");
  var overlayColor$ = dart.privateName(snackbar, "GetSnackBar.overlayColor");
  var userInputForm$ = dart.privateName(snackbar, "GetSnackBar.userInputForm");
  snackbar.GetSnackBar = class GetSnackBar extends framework.StatefulWidget {
    get snackbarStatus() {
      return this[snackbarStatus$];
    }
    set snackbarStatus(value) {
      super.snackbarStatus = value;
    }
    get title() {
      return this[title$];
    }
    set title(value) {
      super.title = value;
    }
    get dismissDirection() {
      return this[dismissDirection$];
    }
    set dismissDirection(value) {
      super.dismissDirection = value;
    }
    get message() {
      return this[message$];
    }
    set message(value) {
      super.message = value;
    }
    get titleText() {
      return this[titleText$];
    }
    set titleText(value) {
      super.titleText = value;
    }
    get messageText() {
      return this[messageText$];
    }
    set messageText(value) {
      super.messageText = value;
    }
    get backgroundColor() {
      return this[backgroundColor$];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get leftBarIndicatorColor() {
      return this[leftBarIndicatorColor$];
    }
    set leftBarIndicatorColor(value) {
      super.leftBarIndicatorColor = value;
    }
    get boxShadows() {
      return this[boxShadows$];
    }
    set boxShadows(value) {
      super.boxShadows = value;
    }
    get backgroundGradient() {
      return this[backgroundGradient$];
    }
    set backgroundGradient(value) {
      super.backgroundGradient = value;
    }
    get icon() {
      return this[icon$];
    }
    set icon(value) {
      super.icon = value;
    }
    get shouldIconPulse() {
      return this[shouldIconPulse$];
    }
    set shouldIconPulse(value) {
      super.shouldIconPulse = value;
    }
    get mainButton() {
      return this[mainButton$];
    }
    set mainButton(value) {
      super.mainButton = value;
    }
    get onTap() {
      return this[onTap$];
    }
    set onTap(value) {
      super.onTap = value;
    }
    get duration() {
      return this[duration$];
    }
    set duration(value) {
      super.duration = value;
    }
    get showProgressIndicator() {
      return this[showProgressIndicator$];
    }
    set showProgressIndicator(value) {
      super.showProgressIndicator = value;
    }
    get progressIndicatorController() {
      return this[progressIndicatorController$];
    }
    set progressIndicatorController(value) {
      super.progressIndicatorController = value;
    }
    get progressIndicatorBackgroundColor() {
      return this[progressIndicatorBackgroundColor$];
    }
    set progressIndicatorBackgroundColor(value) {
      super.progressIndicatorBackgroundColor = value;
    }
    get progressIndicatorValueColor() {
      return this[progressIndicatorValueColor$];
    }
    set progressIndicatorValueColor(value) {
      super.progressIndicatorValueColor = value;
    }
    get isDismissible() {
      return this[isDismissible$];
    }
    set isDismissible(value) {
      super.isDismissible = value;
    }
    get maxWidth() {
      return this[maxWidth$];
    }
    set maxWidth(value) {
      super.maxWidth = value;
    }
    get margin() {
      return this[margin$];
    }
    set margin(value) {
      super.margin = value;
    }
    get padding() {
      return this[padding$];
    }
    set padding(value) {
      super.padding = value;
    }
    get borderRadius() {
      return this[borderRadius$];
    }
    set borderRadius(value) {
      super.borderRadius = value;
    }
    get borderColor() {
      return this[borderColor$];
    }
    set borderColor(value) {
      super.borderColor = value;
    }
    get borderWidth() {
      return this[borderWidth$];
    }
    set borderWidth(value) {
      super.borderWidth = value;
    }
    get snackPosition() {
      return this[snackPosition$];
    }
    set snackPosition(value) {
      super.snackPosition = value;
    }
    get snackStyle() {
      return this[snackStyle$];
    }
    set snackStyle(value) {
      super.snackStyle = value;
    }
    get forwardAnimationCurve() {
      return this[forwardAnimationCurve$];
    }
    set forwardAnimationCurve(value) {
      super.forwardAnimationCurve = value;
    }
    get reverseAnimationCurve() {
      return this[reverseAnimationCurve$];
    }
    set reverseAnimationCurve(value) {
      super.reverseAnimationCurve = value;
    }
    get animationDuration() {
      return this[animationDuration$];
    }
    set animationDuration(value) {
      super.animationDuration = value;
    }
    get barBlur() {
      return this[barBlur$];
    }
    set barBlur(value) {
      super.barBlur = value;
    }
    get overlayBlur() {
      return this[overlayBlur$];
    }
    set overlayBlur(value) {
      super.overlayBlur = value;
    }
    get overlayColor() {
      return this[overlayColor$];
    }
    set overlayColor(value) {
      super.overlayColor = value;
    }
    get userInputForm() {
      return this[userInputForm$];
    }
    set userInputForm(value) {
      super.userInputForm = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let title = opts && 'title' in opts ? opts.title : null;
      let message = opts && 'message' in opts ? opts.message : null;
      let titleText = opts && 'titleText' in opts ? opts.titleText : null;
      let messageText = opts && 'messageText' in opts ? opts.messageText : null;
      let icon = opts && 'icon' in opts ? opts.icon : null;
      let shouldIconPulse = opts && 'shouldIconPulse' in opts ? opts.shouldIconPulse : true;
      let maxWidth = opts && 'maxWidth' in opts ? opts.maxWidth : null;
      let margin = opts && 'margin' in opts ? opts.margin : C[26] || CT.C26;
      let padding = opts && 'padding' in opts ? opts.padding : C[27] || CT.C27;
      let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : 0;
      let borderColor = opts && 'borderColor' in opts ? opts.borderColor : null;
      let borderWidth = opts && 'borderWidth' in opts ? opts.borderWidth : 1;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : C[28] || CT.C28;
      let leftBarIndicatorColor = opts && 'leftBarIndicatorColor' in opts ? opts.leftBarIndicatorColor : null;
      let boxShadows = opts && 'boxShadows' in opts ? opts.boxShadows : null;
      let backgroundGradient = opts && 'backgroundGradient' in opts ? opts.backgroundGradient : null;
      let mainButton = opts && 'mainButton' in opts ? opts.mainButton : null;
      let onTap = opts && 'onTap' in opts ? opts.onTap : null;
      let duration = opts && 'duration' in opts ? opts.duration : null;
      let isDismissible = opts && 'isDismissible' in opts ? opts.isDismissible : true;
      let dismissDirection = opts && 'dismissDirection' in opts ? opts.dismissDirection : null;
      let showProgressIndicator = opts && 'showProgressIndicator' in opts ? opts.showProgressIndicator : false;
      let progressIndicatorController = opts && 'progressIndicatorController' in opts ? opts.progressIndicatorController : null;
      let progressIndicatorBackgroundColor = opts && 'progressIndicatorBackgroundColor' in opts ? opts.progressIndicatorBackgroundColor : null;
      let progressIndicatorValueColor = opts && 'progressIndicatorValueColor' in opts ? opts.progressIndicatorValueColor : null;
      let snackPosition = opts && 'snackPosition' in opts ? opts.snackPosition : C[5] || CT.C5;
      let snackStyle = opts && 'snackStyle' in opts ? opts.snackStyle : C[29] || CT.C29;
      let forwardAnimationCurve = opts && 'forwardAnimationCurve' in opts ? opts.forwardAnimationCurve : C[30] || CT.C30;
      let reverseAnimationCurve = opts && 'reverseAnimationCurve' in opts ? opts.reverseAnimationCurve : C[30] || CT.C30;
      let animationDuration = opts && 'animationDuration' in opts ? opts.animationDuration : C[31] || CT.C31;
      let barBlur = opts && 'barBlur' in opts ? opts.barBlur : 0;
      let overlayBlur = opts && 'overlayBlur' in opts ? opts.overlayBlur : 0;
      let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : C[8] || CT.C8;
      let userInputForm = opts && 'userInputForm' in opts ? opts.userInputForm : null;
      let snackbarStatus = opts && 'snackbarStatus' in opts ? opts.snackbarStatus : null;
      return new snackbar.GetSnackBar.new({key: key, title: title, message: message, titleText: titleText, messageText: messageText, icon: icon, shouldIconPulse: shouldIconPulse, maxWidth: maxWidth, margin: margin, padding: padding, borderRadius: borderRadius, borderColor: borderColor, borderWidth: borderWidth, backgroundColor: backgroundColor, leftBarIndicatorColor: leftBarIndicatorColor, boxShadows: boxShadows, backgroundGradient: backgroundGradient, mainButton: mainButton, onTap: onTap, duration: duration, isDismissible: isDismissible, dismissDirection: dismissDirection, showProgressIndicator: showProgressIndicator, progressIndicatorController: progressIndicatorController, progressIndicatorBackgroundColor: progressIndicatorBackgroundColor, progressIndicatorValueColor: progressIndicatorValueColor, snackPosition: snackPosition, snackStyle: snackStyle, forwardAnimationCurve: forwardAnimationCurve, reverseAnimationCurve: reverseAnimationCurve, animationDuration: animationDuration, barBlur: barBlur, overlayBlur: overlayBlur, overlayColor: overlayColor, userInputForm: userInputForm, snackbarStatus: snackbarStatus, $creationLocationd_0dea112b090073317d4: C[33] || CT.C33});
    }
    createState() {
      return new snackbar.GetSnackBarState.new();
    }
    show() {
      return extension_navigation['ExtensionSnackbar|showSnackbar'](get_main.Get, this);
    }
  };
  (snackbar.GetSnackBar.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let title = opts && 'title' in opts ? opts.title : null;
    let message = opts && 'message' in opts ? opts.message : null;
    let titleText = opts && 'titleText' in opts ? opts.titleText : null;
    let messageText = opts && 'messageText' in opts ? opts.messageText : null;
    let icon = opts && 'icon' in opts ? opts.icon : null;
    let shouldIconPulse = opts && 'shouldIconPulse' in opts ? opts.shouldIconPulse : true;
    let maxWidth = opts && 'maxWidth' in opts ? opts.maxWidth : null;
    let margin = opts && 'margin' in opts ? opts.margin : C[26] || CT.C26;
    let padding = opts && 'padding' in opts ? opts.padding : C[27] || CT.C27;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : 0;
    let borderColor = opts && 'borderColor' in opts ? opts.borderColor : null;
    let borderWidth = opts && 'borderWidth' in opts ? opts.borderWidth : 1;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : C[28] || CT.C28;
    let leftBarIndicatorColor = opts && 'leftBarIndicatorColor' in opts ? opts.leftBarIndicatorColor : null;
    let boxShadows = opts && 'boxShadows' in opts ? opts.boxShadows : null;
    let backgroundGradient = opts && 'backgroundGradient' in opts ? opts.backgroundGradient : null;
    let mainButton = opts && 'mainButton' in opts ? opts.mainButton : null;
    let onTap = opts && 'onTap' in opts ? opts.onTap : null;
    let duration = opts && 'duration' in opts ? opts.duration : null;
    let isDismissible = opts && 'isDismissible' in opts ? opts.isDismissible : true;
    let dismissDirection = opts && 'dismissDirection' in opts ? opts.dismissDirection : null;
    let showProgressIndicator = opts && 'showProgressIndicator' in opts ? opts.showProgressIndicator : false;
    let progressIndicatorController = opts && 'progressIndicatorController' in opts ? opts.progressIndicatorController : null;
    let progressIndicatorBackgroundColor = opts && 'progressIndicatorBackgroundColor' in opts ? opts.progressIndicatorBackgroundColor : null;
    let progressIndicatorValueColor = opts && 'progressIndicatorValueColor' in opts ? opts.progressIndicatorValueColor : null;
    let snackPosition = opts && 'snackPosition' in opts ? opts.snackPosition : C[5] || CT.C5;
    let snackStyle = opts && 'snackStyle' in opts ? opts.snackStyle : C[29] || CT.C29;
    let forwardAnimationCurve = opts && 'forwardAnimationCurve' in opts ? opts.forwardAnimationCurve : C[30] || CT.C30;
    let reverseAnimationCurve = opts && 'reverseAnimationCurve' in opts ? opts.reverseAnimationCurve : C[30] || CT.C30;
    let animationDuration = opts && 'animationDuration' in opts ? opts.animationDuration : C[31] || CT.C31;
    let barBlur = opts && 'barBlur' in opts ? opts.barBlur : 0;
    let overlayBlur = opts && 'overlayBlur' in opts ? opts.overlayBlur : 0;
    let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : C[8] || CT.C8;
    let userInputForm = opts && 'userInputForm' in opts ? opts.userInputForm : null;
    let snackbarStatus = opts && 'snackbarStatus' in opts ? opts.snackbarStatus : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[title$] = title;
    this[message$] = message;
    this[titleText$] = titleText;
    this[messageText$] = messageText;
    this[icon$] = icon;
    this[shouldIconPulse$] = shouldIconPulse;
    this[maxWidth$] = maxWidth;
    this[margin$] = margin;
    this[padding$] = padding;
    this[borderRadius$] = borderRadius;
    this[borderColor$] = borderColor;
    this[borderWidth$] = borderWidth;
    this[backgroundColor$] = backgroundColor;
    this[leftBarIndicatorColor$] = leftBarIndicatorColor;
    this[boxShadows$] = boxShadows;
    this[backgroundGradient$] = backgroundGradient;
    this[mainButton$] = mainButton;
    this[onTap$] = onTap;
    this[duration$] = duration;
    this[isDismissible$] = isDismissible;
    this[dismissDirection$] = dismissDirection;
    this[showProgressIndicator$] = showProgressIndicator;
    this[progressIndicatorController$] = progressIndicatorController;
    this[progressIndicatorBackgroundColor$] = progressIndicatorBackgroundColor;
    this[progressIndicatorValueColor$] = progressIndicatorValueColor;
    this[snackPosition$] = snackPosition;
    this[snackStyle$] = snackStyle;
    this[forwardAnimationCurve$] = forwardAnimationCurve;
    this[reverseAnimationCurve$] = reverseAnimationCurve;
    this[animationDuration$] = animationDuration;
    this[barBlur$] = barBlur;
    this[overlayBlur$] = overlayBlur;
    this[overlayColor$] = overlayColor;
    this[userInputForm$] = userInputForm;
    this[snackbarStatus$] = snackbarStatus;
    snackbar.GetSnackBar.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = snackbar.GetSnackBar.prototype;
  dart.addTypeTests(snackbar.GetSnackBar);
  dart.addTypeCaches(snackbar.GetSnackBar);
  dart.setMethodSignature(snackbar.GetSnackBar, () => ({
    __proto__: dart.getMethods(snackbar.GetSnackBar.__proto__),
    createState: dart.fnType(framework.State$(framework.StatefulWidget), []),
    show: dart.fnType(snackbar_controller.SnackbarController, [])
  }));
  dart.setLibraryUri(snackbar.GetSnackBar, I[2]);
  dart.setFieldSignature(snackbar.GetSnackBar, () => ({
    __proto__: dart.getFields(snackbar.GetSnackBar.__proto__),
    snackbarStatus: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [dart.nullable(snackbar.SnackbarStatus)]))),
    title: dart.finalFieldType(dart.nullable(core.String)),
    dismissDirection: dart.finalFieldType(dart.nullable(dismissible.DismissDirection)),
    message: dart.finalFieldType(dart.nullable(core.String)),
    titleText: dart.finalFieldType(dart.nullable(framework.Widget)),
    messageText: dart.finalFieldType(dart.nullable(framework.Widget)),
    backgroundColor: dart.finalFieldType(ui.Color),
    leftBarIndicatorColor: dart.finalFieldType(dart.nullable(ui.Color)),
    boxShadows: dart.finalFieldType(dart.nullable(core.List$(box_shadow.BoxShadow))),
    backgroundGradient: dart.finalFieldType(dart.nullable(gradient.Gradient)),
    icon: dart.finalFieldType(dart.nullable(framework.Widget)),
    shouldIconPulse: dart.finalFieldType(core.bool),
    mainButton: dart.finalFieldType(dart.nullable(framework.Widget)),
    onTap: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [snackbar.GetSnackBar]))),
    duration: dart.finalFieldType(dart.nullable(core.Duration)),
    showProgressIndicator: dart.finalFieldType(core.bool),
    progressIndicatorController: dart.finalFieldType(dart.nullable(animation_controller.AnimationController)),
    progressIndicatorBackgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    progressIndicatorValueColor: dart.finalFieldType(dart.nullable(animation.Animation$(ui.Color))),
    isDismissible: dart.finalFieldType(core.bool),
    maxWidth: dart.finalFieldType(dart.nullable(core.double)),
    margin: dart.finalFieldType(edge_insets.EdgeInsets),
    padding: dart.finalFieldType(edge_insets.EdgeInsets),
    borderRadius: dart.finalFieldType(core.double),
    borderColor: dart.finalFieldType(dart.nullable(ui.Color)),
    borderWidth: dart.finalFieldType(dart.nullable(core.double)),
    snackPosition: dart.finalFieldType(snackbar.SnackPosition),
    snackStyle: dart.finalFieldType(snackbar.SnackStyle),
    forwardAnimationCurve: dart.finalFieldType(curves.Curve),
    reverseAnimationCurve: dart.finalFieldType(curves.Curve),
    animationDuration: dart.finalFieldType(core.Duration),
    barBlur: dart.finalFieldType(core.double),
    overlayBlur: dart.finalFieldType(core.double),
    overlayColor: dart.finalFieldType(dart.nullable(ui.Color)),
    userInputForm: dart.finalFieldType(dart.nullable(form.Form))
  }));
  snackbar.GetBar = class GetBar extends snackbar.GetSnackBar {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let title = opts && 'title' in opts ? opts.title : null;
      let message = opts && 'message' in opts ? opts.message : null;
      let titleText = opts && 'titleText' in opts ? opts.titleText : null;
      let messageText = opts && 'messageText' in opts ? opts.messageText : null;
      let icon = opts && 'icon' in opts ? opts.icon : null;
      let shouldIconPulse = opts && 'shouldIconPulse' in opts ? opts.shouldIconPulse : true;
      let maxWidth = opts && 'maxWidth' in opts ? opts.maxWidth : null;
      let margin = opts && 'margin' in opts ? opts.margin : C[26] || CT.C26;
      let padding = opts && 'padding' in opts ? opts.padding : C[27] || CT.C27;
      let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : 0;
      let borderColor = opts && 'borderColor' in opts ? opts.borderColor : null;
      let borderWidth = opts && 'borderWidth' in opts ? opts.borderWidth : 1;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : C[28] || CT.C28;
      let leftBarIndicatorColor = opts && 'leftBarIndicatorColor' in opts ? opts.leftBarIndicatorColor : null;
      let boxShadows = opts && 'boxShadows' in opts ? opts.boxShadows : null;
      let backgroundGradient = opts && 'backgroundGradient' in opts ? opts.backgroundGradient : null;
      let mainButton = opts && 'mainButton' in opts ? opts.mainButton : null;
      let onTap = opts && 'onTap' in opts ? opts.onTap : null;
      let duration = opts && 'duration' in opts ? opts.duration : null;
      let isDismissible = opts && 'isDismissible' in opts ? opts.isDismissible : true;
      let dismissDirection = opts && 'dismissDirection' in opts ? opts.dismissDirection : null;
      let showProgressIndicator = opts && 'showProgressIndicator' in opts ? opts.showProgressIndicator : false;
      let progressIndicatorController = opts && 'progressIndicatorController' in opts ? opts.progressIndicatorController : null;
      let progressIndicatorBackgroundColor = opts && 'progressIndicatorBackgroundColor' in opts ? opts.progressIndicatorBackgroundColor : null;
      let progressIndicatorValueColor = opts && 'progressIndicatorValueColor' in opts ? opts.progressIndicatorValueColor : null;
      let snackPosition = opts && 'snackPosition' in opts ? opts.snackPosition : C[5] || CT.C5;
      let snackStyle = opts && 'snackStyle' in opts ? opts.snackStyle : C[29] || CT.C29;
      let forwardAnimationCurve = opts && 'forwardAnimationCurve' in opts ? opts.forwardAnimationCurve : C[30] || CT.C30;
      let reverseAnimationCurve = opts && 'reverseAnimationCurve' in opts ? opts.reverseAnimationCurve : C[30] || CT.C30;
      let animationDuration = opts && 'animationDuration' in opts ? opts.animationDuration : C[31] || CT.C31;
      let barBlur = opts && 'barBlur' in opts ? opts.barBlur : 0;
      let overlayBlur = opts && 'overlayBlur' in opts ? opts.overlayBlur : 0;
      let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : C[8] || CT.C8;
      let userInputForm = opts && 'userInputForm' in opts ? opts.userInputForm : null;
      let snackbarStatus = opts && 'snackbarStatus' in opts ? opts.snackbarStatus : null;
      return new snackbar.GetBar.new({key: key, title: title, message: message, titleText: titleText, messageText: messageText, icon: icon, shouldIconPulse: shouldIconPulse, maxWidth: maxWidth, margin: margin, padding: padding, borderRadius: borderRadius, borderColor: borderColor, borderWidth: borderWidth, backgroundColor: backgroundColor, leftBarIndicatorColor: leftBarIndicatorColor, boxShadows: boxShadows, backgroundGradient: backgroundGradient, mainButton: mainButton, onTap: onTap, duration: duration, isDismissible: isDismissible, dismissDirection: dismissDirection, showProgressIndicator: showProgressIndicator, progressIndicatorController: progressIndicatorController, progressIndicatorBackgroundColor: progressIndicatorBackgroundColor, progressIndicatorValueColor: progressIndicatorValueColor, snackPosition: snackPosition, snackStyle: snackStyle, forwardAnimationCurve: forwardAnimationCurve, reverseAnimationCurve: reverseAnimationCurve, animationDuration: animationDuration, barBlur: barBlur, overlayBlur: overlayBlur, overlayColor: overlayColor, userInputForm: userInputForm, snackbarStatus: snackbarStatus, $creationLocationd_0dea112b090073317d4: C[32] || CT.C32});
    }
  };
  (snackbar.GetBar.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let title = opts && 'title' in opts ? opts.title : null;
    let message = opts && 'message' in opts ? opts.message : null;
    let titleText = opts && 'titleText' in opts ? opts.titleText : null;
    let messageText = opts && 'messageText' in opts ? opts.messageText : null;
    let icon = opts && 'icon' in opts ? opts.icon : null;
    let shouldIconPulse = opts && 'shouldIconPulse' in opts ? opts.shouldIconPulse : true;
    let maxWidth = opts && 'maxWidth' in opts ? opts.maxWidth : null;
    let margin = opts && 'margin' in opts ? opts.margin : C[26] || CT.C26;
    let padding = opts && 'padding' in opts ? opts.padding : C[27] || CT.C27;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : 0;
    let borderColor = opts && 'borderColor' in opts ? opts.borderColor : null;
    let borderWidth = opts && 'borderWidth' in opts ? opts.borderWidth : 1;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : C[28] || CT.C28;
    let leftBarIndicatorColor = opts && 'leftBarIndicatorColor' in opts ? opts.leftBarIndicatorColor : null;
    let boxShadows = opts && 'boxShadows' in opts ? opts.boxShadows : null;
    let backgroundGradient = opts && 'backgroundGradient' in opts ? opts.backgroundGradient : null;
    let mainButton = opts && 'mainButton' in opts ? opts.mainButton : null;
    let onTap = opts && 'onTap' in opts ? opts.onTap : null;
    let duration = opts && 'duration' in opts ? opts.duration : null;
    let isDismissible = opts && 'isDismissible' in opts ? opts.isDismissible : true;
    let dismissDirection = opts && 'dismissDirection' in opts ? opts.dismissDirection : null;
    let showProgressIndicator = opts && 'showProgressIndicator' in opts ? opts.showProgressIndicator : false;
    let progressIndicatorController = opts && 'progressIndicatorController' in opts ? opts.progressIndicatorController : null;
    let progressIndicatorBackgroundColor = opts && 'progressIndicatorBackgroundColor' in opts ? opts.progressIndicatorBackgroundColor : null;
    let progressIndicatorValueColor = opts && 'progressIndicatorValueColor' in opts ? opts.progressIndicatorValueColor : null;
    let snackPosition = opts && 'snackPosition' in opts ? opts.snackPosition : C[5] || CT.C5;
    let snackStyle = opts && 'snackStyle' in opts ? opts.snackStyle : C[29] || CT.C29;
    let forwardAnimationCurve = opts && 'forwardAnimationCurve' in opts ? opts.forwardAnimationCurve : C[30] || CT.C30;
    let reverseAnimationCurve = opts && 'reverseAnimationCurve' in opts ? opts.reverseAnimationCurve : C[30] || CT.C30;
    let animationDuration = opts && 'animationDuration' in opts ? opts.animationDuration : C[31] || CT.C31;
    let barBlur = opts && 'barBlur' in opts ? opts.barBlur : 0;
    let overlayBlur = opts && 'overlayBlur' in opts ? opts.overlayBlur : 0;
    let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : C[8] || CT.C8;
    let userInputForm = opts && 'userInputForm' in opts ? opts.userInputForm : null;
    let snackbarStatus = opts && 'snackbarStatus' in opts ? opts.snackbarStatus : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    snackbar.GetBar.__proto__.new.call(this, {key: key, title: title, message: message, titleText: titleText, messageText: messageText, icon: icon, shouldIconPulse: shouldIconPulse, maxWidth: maxWidth, margin: margin, padding: padding, borderRadius: borderRadius, borderColor: borderColor, borderWidth: borderWidth, backgroundColor: backgroundColor, leftBarIndicatorColor: leftBarIndicatorColor, boxShadows: boxShadows, backgroundGradient: backgroundGradient, mainButton: mainButton, onTap: onTap, duration: duration, isDismissible: isDismissible, dismissDirection: dismissDirection, showProgressIndicator: showProgressIndicator, progressIndicatorController: progressIndicatorController, progressIndicatorBackgroundColor: progressIndicatorBackgroundColor, progressIndicatorValueColor: progressIndicatorValueColor, snackPosition: snackPosition, snackStyle: snackStyle, forwardAnimationCurve: forwardAnimationCurve, reverseAnimationCurve: reverseAnimationCurve, animationDuration: animationDuration, barBlur: barBlur, overlayBlur: overlayBlur, overlayColor: overlayColor, userInputForm: userInputForm, snackbarStatus: snackbarStatus, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = snackbar.GetBar.prototype;
  dart.addTypeTests(snackbar.GetBar);
  dart.addTypeCaches(snackbar.GetBar);
  dart.setLibraryUri(snackbar.GetBar, I[2]);
  var _fadeController = dart.privateName(snackbar, "_fadeController");
  var __GetSnackBarState__fadeAnimation = dart.privateName(snackbar, "_#GetSnackBarState#_fadeAnimation");
  var _emptyWidget = dart.privateName(snackbar, "_emptyWidget");
  var _initialOpacity = dart.privateName(snackbar, "_initialOpacity");
  var _finalOpacity = dart.privateName(snackbar, "_finalOpacity");
  var _pulseAnimationDuration = dart.privateName(snackbar, "_pulseAnimationDuration");
  var __GetSnackBarState__isTitlePresent = dart.privateName(snackbar, "_#GetSnackBarState#_isTitlePresent");
  var __GetSnackBarState__messageTopMargin = dart.privateName(snackbar, "_#GetSnackBarState#_messageTopMargin");
  var _focusNode = dart.privateName(snackbar, "_focusNode");
  var __GetSnackBarState__focusAttachment = dart.privateName(snackbar, "_#GetSnackBarState#_focusAttachment");
  var _boxHeightCompleter = dart.privateName(snackbar, "_boxHeightCompleter");
  var __GetSnackBarState__progressAnimation = dart.privateName(snackbar, "_#GetSnackBarState#_progressAnimation");
  var _backgroundBoxKey = dart.privateName(snackbar, "_backgroundBoxKey");
  var _fadeAnimation = dart.privateName(snackbar, "_fadeAnimation");
  var _isTitlePresent = dart.privateName(snackbar, "_isTitlePresent");
  var _messageTopMargin = dart.privateName(snackbar, "_messageTopMargin");
  var _focusAttachment = dart.privateName(snackbar, "_focusAttachment");
  var _progressAnimation = dart.privateName(snackbar, "_progressAnimation");
  var _rowStyle = dart.privateName(snackbar, "_rowStyle");
  var _containerWithForm = dart.privateName(snackbar, "_containerWithForm");
  var _containerWithoutForm = dart.privateName(snackbar, "_containerWithoutForm");
  var _updateProgress = dart.privateName(snackbar, "_updateProgress");
  var _configureLeftBarFuture = dart.privateName(snackbar, "_configureLeftBarFuture");
  var _configureProgressIndicatorAnimation = dart.privateName(snackbar, "_configureProgressIndicatorAnimation");
  var _configurePulseAnimation = dart.privateName(snackbar, "_configurePulseAnimation");
  var _buildLeftBarIndicator = dart.privateName(snackbar, "_buildLeftBarIndicator");
  var _getIcon = dart.privateName(snackbar, "_getIcon");
  const State_TickerProviderStateMixin$36 = class State_TickerProviderStateMixin extends framework.State$(snackbar.GetSnackBar) {};
  (State_TickerProviderStateMixin$36.new = function() {
    ticker_provider.TickerProviderStateMixin$(snackbar.GetSnackBar)[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36, ticker_provider.TickerProviderStateMixin$(snackbar.GetSnackBar));
  snackbar.GetSnackBarState = class GetSnackBarState extends State_TickerProviderStateMixin$36 {
    get [_fadeAnimation]() {
      let t1;
      t1 = this[__GetSnackBarState__fadeAnimation];
      return t1 == null ? dart.throw(new _internal.LateError.fieldNI("_fadeAnimation")) : t1;
    }
    set [_fadeAnimation](library$32package$58get$47get_navigation$47src$47snackbar$47snackbar$46dart$58$58_fadeAnimation$35param) {
      this[__GetSnackBarState__fadeAnimation] = library$32package$58get$47get_navigation$47src$47snackbar$47snackbar$46dart$58$58_fadeAnimation$35param;
    }
    get [_isTitlePresent]() {
      let t1;
      t1 = this[__GetSnackBarState__isTitlePresent];
      return t1 == null ? dart.throw(new _internal.LateError.fieldNI("_isTitlePresent")) : t1;
    }
    set [_isTitlePresent](library$32package$58get$47get_navigation$47src$47snackbar$47snackbar$46dart$58$58_isTitlePresent$35param) {
      this[__GetSnackBarState__isTitlePresent] = library$32package$58get$47get_navigation$47src$47snackbar$47snackbar$46dart$58$58_isTitlePresent$35param;
    }
    get [_messageTopMargin]() {
      let t1;
      t1 = this[__GetSnackBarState__messageTopMargin];
      return t1 == null ? dart.throw(new _internal.LateError.fieldNI("_messageTopMargin")) : t1;
    }
    set [_messageTopMargin](library$32package$58get$47get_navigation$47src$47snackbar$47snackbar$46dart$58$58_messageTopMargin$35param) {
      this[__GetSnackBarState__messageTopMargin] = library$32package$58get$47get_navigation$47src$47snackbar$47snackbar$46dart$58$58_messageTopMargin$35param;
    }
    get [_focusAttachment]() {
      let t1;
      t1 = this[__GetSnackBarState__focusAttachment];
      return t1 == null ? dart.throw(new _internal.LateError.fieldNI("_focusAttachment")) : t1;
    }
    set [_focusAttachment](library$32package$58get$47get_navigation$47src$47snackbar$47snackbar$46dart$58$58_focusAttachment$35param) {
      this[__GetSnackBarState__focusAttachment] = library$32package$58get$47get_navigation$47src$47snackbar$47snackbar$46dart$58$58_focusAttachment$35param;
    }
    get [_progressAnimation]() {
      let t1;
      t1 = this[__GetSnackBarState__progressAnimation];
      return t1 == null ? dart.throw(new _internal.LateError.fieldNI("_progressAnimation")) : t1;
    }
    set [_progressAnimation](library$32package$58get$47get_navigation$47src$47snackbar$47snackbar$46dart$58$58_progressAnimation$35param) {
      this[__GetSnackBarState__progressAnimation] = library$32package$58get$47get_navigation$47src$47snackbar$47snackbar$46dart$58$58_progressAnimation$35param;
    }
    get buttonPadding() {
      if (this.widget.padding.right - 12 < 0) {
        return 4.0;
      } else {
        return this.widget.padding.right - 12;
      }
    }
    get [_rowStyle]() {
      if (this.widget.mainButton != null && this.widget.icon == null) {
        return snackbar.RowStyle.action;
      } else if (this.widget.mainButton == null && this.widget.icon != null) {
        return snackbar.RowStyle.icon;
      } else if (this.widget.mainButton != null && this.widget.icon != null) {
        return snackbar.RowStyle.all;
      } else {
        return snackbar.RowStyle.none;
      }
    }
    build(context) {
      return new basic.Align.new({heightFactor: 1.0, child: new material.Material.new({color: this.widget.snackStyle === snackbar.SnackStyle.FLOATING ? colors.Colors.transparent : this.widget.backgroundColor, child: new safe_area.SafeArea.new({minimum: this.widget.snackPosition === snackbar.SnackPosition.BOTTOM ? new edge_insets.EdgeInsets.only({bottom: media_query.MediaQuery.of(context).viewInsets.bottom}) : new edge_insets.EdgeInsets.only({top: media_query.MediaQuery.of(context).padding.top}), bottom: this.widget.snackPosition === snackbar.SnackPosition.BOTTOM, top: this.widget.snackPosition === snackbar.SnackPosition.TOP, left: false, right: false, child: new basic.Stack.new({children: (() => {
                let t1 = T$.JSArrayOfWidget().of([new (T$.FutureBuilderOfSize()).new({future: this[_boxHeightCompleter].future, builder: dart.fn((context, snapshot) => {
                      if (snapshot.hasData) {
                        if (this.widget.barBlur === 0) {
                          return this[_emptyWidget];
                        }
                        return new basic.ClipRRect.new({borderRadius: new border_radius.BorderRadius.circular(this.widget.borderRadius), child: new basic.BackdropFilter.new({filter: ui.ImageFilter.blur({sigmaX: this.widget.barBlur, sigmaY: this.widget.barBlur}), child: new container.Container.new({height: dart.nullCheck(snapshot.data).height, width: dart.nullCheck(snapshot.data).width, decoration: new box_decoration.BoxDecoration.new({color: colors.Colors.transparent, borderRadius: new border_radius.BorderRadius.circular(this.widget.borderRadius)}), $creationLocationd_0dea112b090073317d4: C[35] || CT.C35}), $creationLocationd_0dea112b090073317d4: C[36] || CT.C36}), $creationLocationd_0dea112b090073317d4: C[37] || CT.C37});
                      } else {
                        return this[_emptyWidget];
                      }
                    }, T$.BuildContextAndAsyncSnapshotOfSizeToWidget()), $creationLocationd_0dea112b090073317d4: C[38] || CT.C38})]);
                if (this.widget.userInputForm != null)
                  t1.push(this[_containerWithForm]());
                else
                  t1.push(this[_containerWithoutForm]());
                return t1;
              })(), $creationLocationd_0dea112b090073317d4: C[39] || CT.C39}), $creationLocationd_0dea112b090073317d4: C[40] || CT.C40}), $creationLocationd_0dea112b090073317d4: C[41] || CT.C41}), $creationLocationd_0dea112b090073317d4: C[42] || CT.C42});
    }
    dispose() {
      let t2, t2$, t2$0;
      t2 = this[_fadeController];
      t2 == null ? null : t2.dispose();
      t2$ = this.widget.progressIndicatorController;
      t2$ == null ? null : t2$.removeListener(dart.bind(this, _updateProgress));
      t2$0 = this.widget.progressIndicatorController;
      t2$0 == null ? null : t2$0.dispose();
      this[_focusAttachment].detach();
      dart.nullCheck(this[_focusNode]).dispose();
      super.dispose();
    }
    initState() {
      let t2;
      super.initState();
      if (!(this.widget.userInputForm != null || this.widget.message != null && dart.nullCheck(this.widget.message)[$isNotEmpty] || this.widget.messageText != null)) dart.assertFailed("You need to either use message[String], or messageText[Widget] or define a userInputForm[Form] in GetSnackbar", I[3], 409, 9, "widget.userInputForm != null ||\n            ((widget.message != null && widget.message!.isNotEmpty) ||\n                widget.messageText != null)");
      this[_isTitlePresent] = this.widget.title != null || this.widget.titleText != null;
      this[_messageTopMargin] = this[_isTitlePresent] ? 6.0 : this.widget.padding.top;
      this[_configureLeftBarFuture]();
      this[_configureProgressIndicatorAnimation]();
      if (this.widget.icon != null && this.widget.shouldIconPulse) {
        this[_configurePulseAnimation]();
        t2 = this[_fadeController];
        t2 == null ? null : t2.forward();
      }
      this[_focusNode] = new focus_manager.FocusScopeNode.new();
      this[_focusAttachment] = dart.nullCheck(this[_focusNode]).attach(this.context);
    }
    [_buildLeftBarIndicator]() {
      if (this.widget.leftBarIndicatorColor != null) {
        return new (T$.FutureBuilderOfSize()).new({future: this[_boxHeightCompleter].future, builder: dart.fn((buildContext, snapshot) => {
            if (snapshot.hasData) {
              return new container.Container.new({color: this.widget.leftBarIndicatorColor, width: 5.0, height: dart.nullCheck(snapshot.data).height, $creationLocationd_0dea112b090073317d4: C[43] || CT.C43});
            } else {
              return this[_emptyWidget];
            }
          }, T$.BuildContextAndAsyncSnapshotOfSizeToWidget()), $creationLocationd_0dea112b090073317d4: C[44] || CT.C44});
      } else {
        return this[_emptyWidget];
      }
    }
    [_configureLeftBarFuture]() {
      let t2;
      t2 = get_core.ambiguate(binding$.SchedulerBinding, binding$.SchedulerBinding.instance);
      t2 == null ? null : t2.addPostFrameCallback(dart.fn(_ => {
        let keyContext = this[_backgroundBoxKey].currentContext;
        if (keyContext != null) {
          let box = box$.RenderBox.as(keyContext.findRenderObject());
          this[_boxHeightCompleter].complete(box.size);
        }
      }, T$.DurationTovoid()));
    }
    [_configureProgressIndicatorAnimation]() {
      if (this.widget.showProgressIndicator && this.widget.progressIndicatorController != null) {
        dart.nullCheck(this.widget.progressIndicatorController).addListener(dart.bind(this, _updateProgress));
        this[_progressAnimation] = new animations.CurvedAnimation.new({curve: curves.Curves.linear, parent: dart.nullCheck(this.widget.progressIndicatorController)});
      }
    }
    [_configurePulseAnimation]() {
      this[_fadeController] = new animation_controller.AnimationController.new({vsync: this, duration: this[_pulseAnimationDuration]});
      this[_fadeAnimation] = new (T$.TweenOfdouble()).new({begin: this[_initialOpacity], end: this[_finalOpacity]}).animate(new animations.CurvedAnimation.new({parent: dart.nullCheck(this[_fadeController]), curve: curves.Curves.linear}));
      dart.nullCheck(this[_fadeController]).addStatusListener(dart.fn(status => {
        if (status === animation.AnimationStatus.completed) {
          dart.nullCheck(this[_fadeController]).reverse();
        }
        if (status === animation.AnimationStatus.dismissed) {
          dart.nullCheck(this[_fadeController]).forward();
        }
      }, T$.AnimationStatusTovoid()));
      dart.nullCheck(this[_fadeController]).forward();
    }
    [_containerWithForm]() {
      return new container.Container.new({key: this[_backgroundBoxKey], constraints: this.widget.maxWidth != null ? new box$.BoxConstraints.new({maxWidth: dart.nullCheck(this.widget.maxWidth)}) : null, decoration: new box_decoration.BoxDecoration.new({color: this.widget.backgroundColor, gradient: this.widget.backgroundGradient, boxShadow: this.widget.boxShadows, borderRadius: new border_radius.BorderRadius.circular(this.widget.borderRadius), border: this.widget.borderColor != null ? box_border.Border.all({color: dart.nullCheck(this.widget.borderColor), width: dart.nullCheck(this.widget.borderWidth)}) : null}), child: new basic.Padding.new({padding: C[45] || CT.C45, child: new focus_scope.FocusScope.new({child: dart.nullCheck(this.widget.userInputForm), node: this[_focusNode], autofocus: true, $creationLocationd_0dea112b090073317d4: C[46] || CT.C46}), $creationLocationd_0dea112b090073317d4: C[47] || CT.C47}), $creationLocationd_0dea112b090073317d4: C[48] || CT.C48});
    }
    [_containerWithoutForm]() {
      let t5, t4, t5$, t4$;
      let iconPadding = this.widget.padding.left > 16.0 ? this.widget.padding.left : 0.0;
      let left = this[_rowStyle] === snackbar.RowStyle.icon || this[_rowStyle] === snackbar.RowStyle.all ? 4.0 : this.widget.padding.left;
      let right = this[_rowStyle] === snackbar.RowStyle.action || this[_rowStyle] === snackbar.RowStyle.all ? 8.0 : this.widget.padding.right;
      return new container.Container.new({key: this[_backgroundBoxKey], constraints: this.widget.maxWidth != null ? new box$.BoxConstraints.new({maxWidth: dart.nullCheck(this.widget.maxWidth)}) : null, decoration: new box_decoration.BoxDecoration.new({color: this.widget.backgroundColor, gradient: this.widget.backgroundGradient, boxShadow: this.widget.boxShadows, borderRadius: new border_radius.BorderRadius.circular(this.widget.borderRadius), border: this.widget.borderColor != null ? box_border.Border.all({color: dart.nullCheck(this.widget.borderColor), width: dart.nullCheck(this.widget.borderWidth)}) : null}), child: new basic.Column.new({mainAxisSize: flex.MainAxisSize.min, children: T$.JSArrayOfWidget().of([this.widget.showProgressIndicator ? new progress_indicator.LinearProgressIndicator.new({value: this.widget.progressIndicatorController != null ? this[_progressAnimation].value : null, backgroundColor: this.widget.progressIndicatorBackgroundColor, valueColor: this.widget.progressIndicatorValueColor, $creationLocationd_0dea112b090073317d4: C[49] || CT.C49}) : this[_emptyWidget], new basic.Row.new({mainAxisSize: flex.MainAxisSize.max, children: (() => {
                let t2 = T$.JSArrayOfWidget().of([this[_buildLeftBarIndicator]()]);
                if (this[_rowStyle] === snackbar.RowStyle.icon || this[_rowStyle] === snackbar.RowStyle.all) t2.push(new basic.ConstrainedBox.new({constraints: new box$.BoxConstraints.tightFor({width: 42.0 + iconPadding}), child: this[_getIcon](), $creationLocationd_0dea112b090073317d4: C[50] || CT.C50}));
                t2.push(new basic.Expanded.new({flex: 1, child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.stretch, mainAxisSize: flex.MainAxisSize.min, children: (() => {
                      let t3 = T$.JSArrayOfWidget().of([]);
                      if (this[_isTitlePresent])
                        t3.push(new basic.Padding.new({padding: new edge_insets.EdgeInsets.only({top: this.widget.padding.top, left: left, right: right}), child: (t4 = this.widget.titleText, t4 == null ? new text.Text.new((t5 = this.widget.title, t5 == null ? "" : t5), {style: new text_style.TextStyle.new({fontSize: 16.0, color: colors.Colors.white, fontWeight: ui.FontWeight.bold}), $creationLocationd_0dea112b090073317d4: C[51] || CT.C51}) : t4), $creationLocationd_0dea112b090073317d4: C[52] || CT.C52}));
                      else
                        t3.push(this[_emptyWidget]);
                      t3.push(new basic.Padding.new({padding: new edge_insets.EdgeInsets.only({top: this[_messageTopMargin], left: left, right: right, bottom: this.widget.padding.bottom}), child: (t4$ = this.widget.messageText, t4$ == null ? new text.Text.new((t5$ = this.widget.message, t5$ == null ? "" : t5$), {style: new text_style.TextStyle.new({fontSize: 14.0, color: colors.Colors.white}), $creationLocationd_0dea112b090073317d4: C[53] || CT.C53}) : t4$), $creationLocationd_0dea112b090073317d4: C[54] || CT.C54}));
                      return t3;
                    })(), $creationLocationd_0dea112b090073317d4: C[55] || CT.C55}), $creationLocationd_0dea112b090073317d4: C[56] || CT.C56}));
                if (this[_rowStyle] === snackbar.RowStyle.action || this[_rowStyle] === snackbar.RowStyle.all) t2.push(new basic.Padding.new({padding: new edge_insets.EdgeInsets.only({right: this.buttonPadding}), child: this.widget.mainButton, $creationLocationd_0dea112b090073317d4: C[57] || CT.C57}));
                return t2;
              })(), $creationLocationd_0dea112b090073317d4: C[58] || CT.C58})]), $creationLocationd_0dea112b090073317d4: C[59] || CT.C59}), $creationLocationd_0dea112b090073317d4: C[60] || CT.C60});
    }
    [_getIcon]() {
      if (this.widget.icon != null && icon.Icon.is(this.widget.icon) && this.widget.shouldIconPulse) {
        return new transitions.FadeTransition.new({opacity: this[_fadeAnimation], child: this.widget.icon, $creationLocationd_0dea112b090073317d4: C[61] || CT.C61});
      } else if (this.widget.icon != null) {
        return this.widget.icon;
      } else {
        return this[_emptyWidget];
      }
    }
    [_updateProgress]() {
      return this.setState(dart.fn(() => {
      }, T$.VoidTovoid()));
    }
    static ['_#new#tearOff']() {
      return new snackbar.GetSnackBarState.new();
    }
  };
  (snackbar.GetSnackBarState.new = function() {
    this[_fadeController] = null;
    this[__GetSnackBarState__fadeAnimation] = null;
    this[_emptyWidget] = new basic.SizedBox.new({width: 0.0, height: 0.0, $creationLocationd_0dea112b090073317d4: C[34] || CT.C34});
    this[_initialOpacity] = 1.0;
    this[_finalOpacity] = 0.4;
    this[_pulseAnimationDuration] = new core.Duration.new({seconds: 1});
    this[__GetSnackBarState__isTitlePresent] = null;
    this[__GetSnackBarState__messageTopMargin] = null;
    this[_focusNode] = null;
    this[__GetSnackBarState__focusAttachment] = null;
    this[_boxHeightCompleter] = T$.CompleterOfSize().new();
    this[__GetSnackBarState__progressAnimation] = null;
    this[_backgroundBoxKey] = T$.GlobalKeyOfStateOfStatefulWidget().new();
    snackbar.GetSnackBarState.__proto__.new.call(this);
    ;
  }).prototype = snackbar.GetSnackBarState.prototype;
  dart.addTypeTests(snackbar.GetSnackBarState);
  dart.addTypeCaches(snackbar.GetSnackBarState);
  dart.setMethodSignature(snackbar.GetSnackBarState, () => ({
    __proto__: dart.getMethods(snackbar.GetSnackBarState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    [_buildLeftBarIndicator]: dart.fnType(framework.Widget, []),
    [_configureLeftBarFuture]: dart.fnType(dart.void, []),
    [_configureProgressIndicatorAnimation]: dart.fnType(dart.void, []),
    [_configurePulseAnimation]: dart.fnType(dart.void, []),
    [_containerWithForm]: dart.fnType(framework.Widget, []),
    [_containerWithoutForm]: dart.fnType(framework.Widget, []),
    [_getIcon]: dart.fnType(dart.nullable(framework.Widget), []),
    [_updateProgress]: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(snackbar.GetSnackBarState, () => ({
    __proto__: dart.getGetters(snackbar.GetSnackBarState.__proto__),
    [_fadeAnimation]: animation.Animation$(core.double),
    [_isTitlePresent]: core.bool,
    [_messageTopMargin]: core.double,
    [_focusAttachment]: focus_manager.FocusAttachment,
    [_progressAnimation]: animations.CurvedAnimation,
    buttonPadding: core.double,
    [_rowStyle]: snackbar.RowStyle
  }));
  dart.setSetterSignature(snackbar.GetSnackBarState, () => ({
    __proto__: dart.getSetters(snackbar.GetSnackBarState.__proto__),
    [_fadeAnimation]: animation.Animation$(core.double),
    [_isTitlePresent]: core.bool,
    [_messageTopMargin]: core.double,
    [_focusAttachment]: focus_manager.FocusAttachment,
    [_progressAnimation]: animations.CurvedAnimation
  }));
  dart.setLibraryUri(snackbar.GetSnackBarState, I[2]);
  dart.setFieldSignature(snackbar.GetSnackBarState, () => ({
    __proto__: dart.getFields(snackbar.GetSnackBarState.__proto__),
    [_fadeController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [__GetSnackBarState__fadeAnimation]: dart.fieldType(dart.nullable(animation.Animation$(core.double))),
    [_emptyWidget]: dart.finalFieldType(framework.Widget),
    [_initialOpacity]: dart.finalFieldType(core.double),
    [_finalOpacity]: dart.finalFieldType(core.double),
    [_pulseAnimationDuration]: dart.finalFieldType(core.Duration),
    [__GetSnackBarState__isTitlePresent]: dart.fieldType(dart.nullable(core.bool)),
    [__GetSnackBarState__messageTopMargin]: dart.fieldType(dart.nullable(core.double)),
    [_focusNode]: dart.fieldType(dart.nullable(focus_manager.FocusScopeNode)),
    [__GetSnackBarState__focusAttachment]: dart.fieldType(dart.nullable(focus_manager.FocusAttachment)),
    [_boxHeightCompleter]: dart.finalFieldType(async.Completer$(ui.Size)),
    [__GetSnackBarState__progressAnimation]: dart.fieldType(dart.nullable(animations.CurvedAnimation)),
    [_backgroundBoxKey]: dart.finalFieldType(framework.GlobalKey$(framework.State$(framework.StatefulWidget)))
  }));
  var _name = dart.privateName(core, "_name");
  snackbar.RowStyle = class RowStyle extends core._Enum {
    toString() {
      return "RowStyle." + this[_name];
    }
  };
  (snackbar.RowStyle.new = function(index, name) {
    snackbar.RowStyle.__proto__.new.call(this, index, name);
    ;
  }).prototype = snackbar.RowStyle.prototype;
  dart.addTypeTests(snackbar.RowStyle);
  dart.addTypeCaches(snackbar.RowStyle);
  dart.setLibraryUri(snackbar.RowStyle, I[2]);
  dart.setStaticFieldSignature(snackbar.RowStyle, () => ['values', 'icon', 'action', 'all', 'none']);
  dart.defineExtensionMethods(snackbar.RowStyle, ['toString']);
  dart.defineLazy(snackbar.RowStyle, {
    /*snackbar.RowStyle.values*/get values() {
      return C[62] || CT.C62;
    },
    /*snackbar.RowStyle.icon*/get icon() {
      return C[63] || CT.C63;
    },
    /*snackbar.RowStyle.action*/get action() {
      return C[64] || CT.C64;
    },
    /*snackbar.RowStyle.all*/get all() {
      return C[65] || CT.C65;
    },
    /*snackbar.RowStyle.none*/get none() {
      return C[66] || CT.C66;
    }
  }, false);
  snackbar.SnackbarStatus = class SnackbarStatus extends core._Enum {
    toString() {
      return "SnackbarStatus." + this[_name];
    }
  };
  (snackbar.SnackbarStatus.new = function(index, name) {
    snackbar.SnackbarStatus.__proto__.new.call(this, index, name);
    ;
  }).prototype = snackbar.SnackbarStatus.prototype;
  dart.addTypeTests(snackbar.SnackbarStatus);
  dart.addTypeCaches(snackbar.SnackbarStatus);
  dart.setLibraryUri(snackbar.SnackbarStatus, I[2]);
  dart.setStaticFieldSignature(snackbar.SnackbarStatus, () => ['values', 'OPEN', 'CLOSED', 'OPENING', 'CLOSING']);
  dart.defineExtensionMethods(snackbar.SnackbarStatus, ['toString']);
  dart.defineLazy(snackbar.SnackbarStatus, {
    /*snackbar.SnackbarStatus.values*/get values() {
      return C[67] || CT.C67;
    },
    /*snackbar.SnackbarStatus.OPEN*/get OPEN() {
      return C[68] || CT.C68;
    },
    /*snackbar.SnackbarStatus.CLOSED*/get CLOSED() {
      return C[69] || CT.C69;
    },
    /*snackbar.SnackbarStatus.OPENING*/get OPENING() {
      return C[70] || CT.C70;
    },
    /*snackbar.SnackbarStatus.CLOSING*/get CLOSING() {
      return C[71] || CT.C71;
    }
  }, false);
  snackbar.SnackPosition = class SnackPosition extends core._Enum {
    toString() {
      return "SnackPosition." + this[_name];
    }
  };
  (snackbar.SnackPosition.new = function(index, name) {
    snackbar.SnackPosition.__proto__.new.call(this, index, name);
    ;
  }).prototype = snackbar.SnackPosition.prototype;
  dart.addTypeTests(snackbar.SnackPosition);
  dart.addTypeCaches(snackbar.SnackPosition);
  dart.setLibraryUri(snackbar.SnackPosition, I[2]);
  dart.setStaticFieldSignature(snackbar.SnackPosition, () => ['values', 'TOP', 'BOTTOM']);
  dart.defineExtensionMethods(snackbar.SnackPosition, ['toString']);
  dart.defineLazy(snackbar.SnackPosition, {
    /*snackbar.SnackPosition.values*/get values() {
      return C[72] || CT.C72;
    },
    /*snackbar.SnackPosition.TOP*/get TOP() {
      return C[2] || CT.C2;
    },
    /*snackbar.SnackPosition.BOTTOM*/get BOTTOM() {
      return C[5] || CT.C5;
    }
  }, false);
  snackbar.SnackStyle = class SnackStyle extends core._Enum {
    toString() {
      return "SnackStyle." + this[_name];
    }
  };
  (snackbar.SnackStyle.new = function(index, name) {
    snackbar.SnackStyle.__proto__.new.call(this, index, name);
    ;
  }).prototype = snackbar.SnackStyle.prototype;
  dart.addTypeTests(snackbar.SnackStyle);
  dart.addTypeCaches(snackbar.SnackStyle);
  dart.setLibraryUri(snackbar.SnackStyle, I[2]);
  dart.setStaticFieldSignature(snackbar.SnackStyle, () => ['values', 'FLOATING', 'GROUNDED']);
  dart.defineExtensionMethods(snackbar.SnackStyle, ['toString']);
  dart.defineLazy(snackbar.SnackStyle, {
    /*snackbar.SnackStyle.values*/get values() {
      return C[73] || CT.C73;
    },
    /*snackbar.SnackStyle.FLOATING*/get FLOATING() {
      return C[29] || CT.C29;
    },
    /*snackbar.SnackStyle.GROUNDED*/get GROUNDED() {
      return C[74] || CT.C74;
    }
  }, false);
  route_middleware._RouteMiddleware = class _RouteMiddleware extends core.Object {};
  (route_middleware._RouteMiddleware.new = function() {
    this.priority = null;
    ;
  }).prototype = route_middleware._RouteMiddleware.prototype;
  dart.addTypeTests(route_middleware._RouteMiddleware);
  dart.addTypeCaches(route_middleware._RouteMiddleware);
  dart.setLibraryUri(route_middleware._RouteMiddleware, I[4]);
  dart.setFieldSignature(route_middleware._RouteMiddleware, () => ({
    __proto__: dart.getFields(route_middleware._RouteMiddleware.__proto__),
    priority: dart.fieldType(dart.nullable(core.int))
  }));
  var priority$ = dart.privateName(route_middleware, "GetMiddleware.priority");
  route_middleware.GetMiddleware = class GetMiddleware extends core.Object {
    get priority() {
      return this[priority$];
    }
    set priority(value) {
      this[priority$] = value;
    }
    static ['_#new#tearOff'](opts) {
      let priority = opts && 'priority' in opts ? opts.priority : null;
      return new route_middleware.GetMiddleware.new({priority: priority});
    }
    redirect(route) {
      return null;
    }
    onPageCalled(page) {
      return page;
    }
    onBindingsStart(bindings) {
      return bindings;
    }
    onPageBuildStart(page) {
      return page;
    }
    onPageBuilt(page) {
      return page;
    }
    onPageDispose() {
    }
    redirectDelegate(route) {
      return new (T$.SynchronousFutureOfGetNavConfigN()).new(route);
    }
  };
  (route_middleware.GetMiddleware.new = function(opts) {
    let priority = opts && 'priority' in opts ? opts.priority : null;
    this[priority$] = 0;
    this[priority$] = priority;
    ;
  }).prototype = route_middleware.GetMiddleware.prototype;
  dart.addTypeTests(route_middleware.GetMiddleware);
  dart.addTypeCaches(route_middleware.GetMiddleware);
  route_middleware.GetMiddleware[dart.implements] = () => [route_middleware._RouteMiddleware];
  dart.setMethodSignature(route_middleware.GetMiddleware, () => ({
    __proto__: dart.getMethods(route_middleware.GetMiddleware.__proto__),
    redirect: dart.fnType(dart.nullable(navigator.RouteSettings), [dart.nullable(core.String)]),
    onPageCalled: dart.fnType(dart.nullable(get_route.GetPage), [dart.nullable(get_route.GetPage)]),
    onBindingsStart: dart.fnType(dart.nullable(core.List$(bindings_interface.Bindings)), [dart.nullable(core.List$(bindings_interface.Bindings))]),
    onPageBuildStart: dart.fnType(dart.nullable(dart.fnType(framework.Widget, [])), [dart.nullable(dart.fnType(framework.Widget, []))]),
    onPageBuilt: dart.fnType(framework.Widget, [framework.Widget]),
    onPageDispose: dart.fnType(dart.void, []),
    redirectDelegate: dart.fnType(async.Future$(dart.nullable(get_nav_config.GetNavConfig)), [get_nav_config.GetNavConfig])
  }));
  dart.setLibraryUri(route_middleware.GetMiddleware, I[4]);
  dart.setFieldSignature(route_middleware.GetMiddleware, () => ({
    __proto__: dart.getFields(route_middleware.GetMiddleware.__proto__),
    priority: dart.fieldType(dart.nullable(core.int))
  }));
  var _middlewares$ = dart.privateName(route_middleware, "_middlewares");
  var _getMiddlewares = dart.privateName(route_middleware, "_getMiddlewares");
  route_middleware.MiddlewareRunner = class MiddlewareRunner extends core.Object {
    static ['_#new#tearOff'](_middlewares) {
      return new route_middleware.MiddlewareRunner.new(_middlewares);
    }
    [_getMiddlewares]() {
      let t12, t12$;
      let _m = (t12 = this[_middlewares$], t12 == null ? T$.JSArrayOfGetMiddleware().of([]) : t12);
      t12$ = _m;
      return (() => {
        t12$[$sort](dart.fn((a, b) => {
          let t13, t13$;
          return (t13 = a.priority, t13 == null ? 0 : t13)[$compareTo]((t13$ = b.priority, t13$ == null ? 0 : t13$));
        }, T$.GetMiddlewareAndGetMiddlewareToint()));
        return t12$;
      })();
    }
    runOnPageCalled(page) {
      this[_getMiddlewares]()[$forEach](dart.fn(element => {
        page = element.onPageCalled(page);
      }, T$.GetMiddlewareTovoid()));
      return page;
    }
    runRedirect(route) {
      let t13, t12;
      let to = null;
      for (let element of this[_getMiddlewares]()) {
        to = element.redirect(route);
        if (to != null) {
          break;
        }
      }
      t12 = get_main.Get;
      t13 = "Redirect to " + dart.str(to);
      t12.log(t13);
      return to;
    }
    runOnBindingsStart(bindings) {
      this[_getMiddlewares]()[$forEach](dart.fn(element => {
        bindings = element.onBindingsStart(bindings);
      }, T$.GetMiddlewareTovoid()));
      return bindings;
    }
    runOnPageBuildStart(page) {
      this[_getMiddlewares]()[$forEach](dart.fn(element => {
        page = element.onPageBuildStart(page);
      }, T$.GetMiddlewareTovoid()));
      return page;
    }
    runOnPageBuilt(page) {
      this[_getMiddlewares]()[$forEach](dart.fn(element => {
        page = element.onPageBuilt(page);
      }, T$.GetMiddlewareTovoid()));
      return page;
    }
    runOnPageDispose() {
      return this[_getMiddlewares]()[$forEach](dart.fn(element => element.onPageDispose(), T$.GetMiddlewareTovoid()));
    }
  };
  (route_middleware.MiddlewareRunner.new = function(_middlewares) {
    this[_middlewares$] = _middlewares;
    ;
  }).prototype = route_middleware.MiddlewareRunner.prototype;
  dart.addTypeTests(route_middleware.MiddlewareRunner);
  dart.addTypeCaches(route_middleware.MiddlewareRunner);
  dart.setMethodSignature(route_middleware.MiddlewareRunner, () => ({
    __proto__: dart.getMethods(route_middleware.MiddlewareRunner.__proto__),
    [_getMiddlewares]: dart.fnType(core.List$(route_middleware.GetMiddleware), []),
    runOnPageCalled: dart.fnType(dart.nullable(get_route.GetPage), [dart.nullable(get_route.GetPage)]),
    runRedirect: dart.fnType(dart.nullable(navigator.RouteSettings), [dart.nullable(core.String)]),
    runOnBindingsStart: dart.fnType(dart.nullable(core.List$(bindings_interface.Bindings)), [dart.nullable(core.List$(bindings_interface.Bindings))]),
    runOnPageBuildStart: dart.fnType(dart.nullable(dart.fnType(framework.Widget, [])), [dart.nullable(dart.fnType(framework.Widget, []))]),
    runOnPageBuilt: dart.fnType(framework.Widget, [framework.Widget]),
    runOnPageDispose: dart.fnType(dart.void, [])
  }));
  dart.setLibraryUri(route_middleware.MiddlewareRunner, I[4]);
  dart.setFieldSignature(route_middleware.MiddlewareRunner, () => ({
    __proto__: dart.getFields(route_middleware.MiddlewareRunner.__proto__),
    [_middlewares$]: dart.finalFieldType(dart.nullable(core.List$(route_middleware.GetMiddleware)))
  }));
  var route$0 = dart.privateName(route_middleware, "PageRedirect.route");
  var unknownRoute$ = dart.privateName(route_middleware, "PageRedirect.unknownRoute");
  var settings$ = dart.privateName(route_middleware, "PageRedirect.settings");
  var isUnknown$ = dart.privateName(route_middleware, "PageRedirect.isUnknown");
  route_middleware.PageRedirect = class PageRedirect extends core.Object {
    get route() {
      return this[route$0];
    }
    set route(value) {
      this[route$0] = value;
    }
    get unknownRoute() {
      return this[unknownRoute$];
    }
    set unknownRoute(value) {
      this[unknownRoute$] = value;
    }
    get settings() {
      return this[settings$];
    }
    set settings(value) {
      this[settings$] = value;
    }
    get isUnknown() {
      return this[isUnknown$];
    }
    set isUnknown(value) {
      this[isUnknown$] = value;
    }
    static ['_#new#tearOff'](opts) {
      let route = opts && 'route' in opts ? opts.route : null;
      let unknownRoute = opts && 'unknownRoute' in opts ? opts.unknownRoute : null;
      let isUnknown = opts && 'isUnknown' in opts ? opts.isUnknown : false;
      let settings = opts && 'settings' in opts ? opts.settings : null;
      return new route_middleware.PageRedirect.new({route: route, unknownRoute: unknownRoute, isUnknown: isUnknown, settings: settings});
    }
    page(T) {
      let t12;
      while (this.needRecheck()) {
      }
      let _r = dart.nullCheck(this.isUnknown ? this.unknownRoute : this.route);
      return new (default_route.GetPageRoute$(T)).new({page: _r.page, parameter: _r.parameters, settings: this.isUnknown ? new navigator.RouteSettings.new({name: _r.name, arguments: dart.nullCheck(this.settings).arguments}) : this.settings, curve: _r.curve, opaque: _r.opaque, showCupertinoParallax: _r.showCupertinoParallax, gestureWidth: _r.gestureWidth, customTransition: _r.customTransition, binding: _r.binding, bindings: _r.bindings, transitionDuration: (t12 = _r.transitionDuration, t12 == null ? extension_navigation['GetNavigation|get#defaultTransitionDuration'](get_main.Get) : t12), transition: _r.transition, popGesture: _r.popGesture, fullscreenDialog: _r.fullscreenDialog, middlewares: _r.middlewares});
    }
    getPageToRoute(T, rou, unk) {
      let t12;
      while (this.needRecheck()) {
      }
      let _r = dart.nullCheck(this.isUnknown ? unk : rou);
      return new (default_route.GetPageRoute$(T)).new({page: _r.page, parameter: _r.parameters, alignment: _r.alignment, title: _r.title, maintainState: _r.maintainState, routeName: _r.name, settings: _r, curve: _r.curve, showCupertinoParallax: _r.showCupertinoParallax, gestureWidth: _r.gestureWidth, opaque: _r.opaque, customTransition: _r.customTransition, binding: _r.binding, bindings: _r.bindings, transitionDuration: (t12 = _r.transitionDuration, t12 == null ? extension_navigation['GetNavigation|get#defaultTransitionDuration'](get_main.Get) : t12), transition: _r.transition, popGesture: _r.popGesture, fullscreenDialog: _r.fullscreenDialog, middlewares: _r.middlewares});
    }
    needRecheck() {
      if (this.settings == null && this.route != null) {
        this.settings = this.route;
      }
      let match = extension_navigation['NavTwoExt|get#routeTree'](get_main.Get).matchRoute(dart.nullCheck(dart.nullCheck(this.settings).name));
      extension_navigation['GetNavigation|set#parameters'](get_main.Get, match.parameters);
      if (match.route == null) {
        this.isUnknown = true;
        return false;
      }
      let runner = new route_middleware.MiddlewareRunner.new(dart.nullCheck(match.route).middlewares);
      this.route = runner.runOnPageCalled(match.route);
      this.addPageParameter(dart.nullCheck(this.route));
      if (dart.nullCheck(match.route).middlewares == null || dart.nullCheck(dart.nullCheck(match.route).middlewares)[$isEmpty]) {
        return false;
      }
      let newSettings = runner.runRedirect(dart.nullCheck(this.settings).name);
      if (newSettings == null) {
        return false;
      }
      this.settings = newSettings;
      return true;
    }
    addPageParameter(route) {
      if (route.parameters == null) return;
      let parameters = extension_navigation['GetNavigation|get#parameters'](get_main.Get);
      parameters[$addEntries](dart.nullCheck(route.parameters)[$entries]);
      extension_navigation['GetNavigation|set#parameters'](get_main.Get, parameters);
    }
  };
  (route_middleware.PageRedirect.new = function(opts) {
    let route = opts && 'route' in opts ? opts.route : null;
    let unknownRoute = opts && 'unknownRoute' in opts ? opts.unknownRoute : null;
    let isUnknown = opts && 'isUnknown' in opts ? opts.isUnknown : false;
    let settings = opts && 'settings' in opts ? opts.settings : null;
    this[route$0] = route;
    this[unknownRoute$] = unknownRoute;
    this[isUnknown$] = isUnknown;
    this[settings$] = settings;
    ;
  }).prototype = route_middleware.PageRedirect.prototype;
  dart.addTypeTests(route_middleware.PageRedirect);
  dart.addTypeCaches(route_middleware.PageRedirect);
  dart.setMethodSignature(route_middleware.PageRedirect, () => ({
    __proto__: dart.getMethods(route_middleware.PageRedirect.__proto__),
    page: dart.gFnType(T => [default_route.GetPageRoute$(T), []], T => [dart.nullable(core.Object)]),
    getPageToRoute: dart.gFnType(T => [default_route.GetPageRoute$(T), [get_route.GetPage, dart.nullable(get_route.GetPage)]], T => [dart.nullable(core.Object)]),
    needRecheck: dart.fnType(core.bool, []),
    addPageParameter: dart.fnType(dart.void, [get_route.GetPage])
  }));
  dart.setLibraryUri(route_middleware.PageRedirect, I[4]);
  dart.setFieldSignature(route_middleware.PageRedirect, () => ({
    __proto__: dart.getFields(route_middleware.PageRedirect.__proto__),
    route: dart.fieldType(dart.nullable(get_route.GetPage)),
    unknownRoute: dart.fieldType(dart.nullable(get_route.GetPage)),
    settings: dart.fieldType(dart.nullable(navigator.RouteSettings)),
    isUnknown: dart.fieldType(core.bool)
  }));
  var routing$ = dart.privateName(route_observer, "GetObserver.routing");
  var _routeSend$ = dart.privateName(route_observer, "_routeSend");
  route_observer.GetObserver = class GetObserver extends navigator.NavigatorObserver {
    get routing() {
      return this[routing$];
    }
    set routing(value) {
      super.routing = value;
    }
    static ['_#new#tearOff'](routing = null, _routeSend = null) {
      return new route_observer.GetObserver.new(routing, _routeSend);
    }
    didPop(route, previousRoute) {
      let t13, t12, t13$, t12$, t12$0, t12$1;
      super.didPop(route, previousRoute);
      let currentRoute = route_observer._RouteData.ofRoute(route);
      let newRoute = route_observer._RouteData.ofRoute(previousRoute);
      if (currentRoute.isBottomSheet || currentRoute.isDialog) {
        t12 = get_main.Get;
        t13 = "CLOSE " + dart.str(currentRoute.name);
        t12.log(t13);
      } else if (currentRoute.isGetPageRoute) {
        t12$ = get_main.Get;
        t13$ = "CLOSE TO ROUTE " + dart.str(currentRoute.name);
        t12$.log(t13$);
      }
      if (previousRoute != null) {
        router_report.RouterReportManager.reportCurrentRoute(previousRoute);
      }
      t12$0 = this[_routeSend$];
      t12$0 == null ? null : t12$0.update(dart.fn(value => {
        let t13, t13$, t13$0;
        if (pages.PageRoute.is(previousRoute)) {
          value.current = (t13 = route_observer._extractRouteName(previousRoute), t13 == null ? "" : t13);
          value.previous = (t13$ = newRoute.name, t13$ == null ? "" : t13$);
        } else if (value.previous[$isNotEmpty]) {
          value.current = value.previous;
        }
        value.args = (t13$0 = previousRoute, t13$0 == null ? null : t13$0.settings.arguments);
        value.route = previousRoute;
        value.isBack = true;
        value.removed = "";
        value.isBottomSheet = newRoute.isBottomSheet;
        value.isDialog = newRoute.isDialog;
      }, T$.RoutingTovoid()));
      t12$1 = this.routing;
      t12$1 == null ? null : t12$1(this[_routeSend$]);
    }
    didPush(route, previousRoute) {
      let t13, t12, t13$, t12$, t12$0;
      super.didPush(route, previousRoute);
      let newRoute = route_observer._RouteData.ofRoute(route);
      if (newRoute.isBottomSheet || newRoute.isDialog) {
        t12 = get_main.Get;
        t13 = "OPEN " + dart.str(newRoute.name);
        t12.log(t13);
      } else if (newRoute.isGetPageRoute) {
        t12$ = get_main.Get;
        t13$ = "GOING TO ROUTE " + dart.str(newRoute.name);
        t12$.log(t13$);
      }
      router_report.RouterReportManager.reportCurrentRoute(route);
      t12$0 = this[_routeSend$];
      t12$0 == null ? null : t12$0.update(dart.fn(value => {
        let t13, t13$, t13$0;
        if (pages.PageRoute.is(route)) {
          value.current = (t13 = newRoute.name, t13 == null ? "" : t13);
        }
        let previousRouteName = route_observer._extractRouteName(previousRoute);
        if (previousRouteName != null) {
          value.previous = previousRouteName;
        }
        value.args = route.settings.arguments;
        value.route = route;
        value.isBack = false;
        value.removed = "";
        value.isBottomSheet = newRoute.isBottomSheet ? true : (t13$ = value.isBottomSheet, t13$ == null ? false : t13$);
        value.isDialog = newRoute.isDialog ? true : (t13$0 = value.isDialog, t13$0 == null ? false : t13$0);
      }, T$.RoutingTovoid()));
      if (this.routing != null) {
        dart.nullCheck(this.routing)(this[_routeSend$]);
      }
    }
    didRemove(route, previousRoute) {
      let t13, t12, t12$, t12$0;
      super.didRemove(route, previousRoute);
      let routeName = route_observer._extractRouteName(route);
      let currentRoute = route_observer._RouteData.ofRoute(route);
      t12 = get_main.Get;
      t13 = "REMOVING ROUTE " + dart.str(routeName);
      t12.log(t13);
      t12$ = this[_routeSend$];
      t12$ == null ? null : t12$.update(dart.fn(value => {
        let t13, t13$;
        value.route = previousRoute;
        value.isBack = false;
        value.removed = (t13 = routeName, t13 == null ? "" : t13);
        value.previous = (t13$ = routeName, t13$ == null ? "" : t13$);
        value.isBottomSheet = currentRoute.isBottomSheet ? false : value.isBottomSheet;
        value.isDialog = currentRoute.isDialog ? false : value.isDialog;
      }, T$.RoutingTovoid()));
      if (default_route.GetPageRoute.is(route)) {
        router_report.RouterReportManager.reportRouteWillDispose(route);
      }
      t12$0 = this.routing;
      t12$0 == null ? null : t12$0(this[_routeSend$]);
    }
    didReplace(opts) {
      let t13, t12, t13$, t12$, t12$0, t12$1;
      let newRoute = opts && 'newRoute' in opts ? opts.newRoute : null;
      let oldRoute = opts && 'oldRoute' in opts ? opts.oldRoute : null;
      super.didReplace({newRoute: newRoute, oldRoute: oldRoute});
      let newName = route_observer._extractRouteName(newRoute);
      let oldName = route_observer._extractRouteName(oldRoute);
      let currentRoute = route_observer._RouteData.ofRoute(oldRoute);
      t12 = get_main.Get;
      t13 = "REPLACE ROUTE " + dart.str(oldName);
      t12.log(t13);
      t12$ = get_main.Get;
      t13$ = "NEW ROUTE " + dart.str(newName);
      t12$.log(t13$);
      if (newRoute != null) {
        router_report.RouterReportManager.reportCurrentRoute(newRoute);
      }
      t12$0 = this[_routeSend$];
      t12$0 == null ? null : t12$0.update(dart.fn(value => {
        let t13, t13$;
        if (pages.PageRoute.is(newRoute)) {
          value.current = (t13 = newName, t13 == null ? "" : t13);
        }
        value.args = (t13$ = newRoute, t13$ == null ? null : t13$.settings.arguments);
        value.route = newRoute;
        value.isBack = false;
        value.removed = "";
        value.previous = dart.str(oldName);
        value.isBottomSheet = currentRoute.isBottomSheet ? false : value.isBottomSheet;
        value.isDialog = currentRoute.isDialog ? false : value.isDialog;
      }, T$.RoutingTovoid()));
      if (default_route.GetPageRoute.is(oldRoute)) {
        router_report.RouterReportManager.reportRouteWillDispose(oldRoute);
      }
      t12$1 = this.routing;
      t12$1 == null ? null : t12$1(this[_routeSend$]);
    }
  };
  (route_observer.GetObserver.new = function(routing = null, _routeSend = null) {
    this[routing$] = routing;
    this[_routeSend$] = _routeSend;
    route_observer.GetObserver.__proto__.new.call(this);
    ;
  }).prototype = route_observer.GetObserver.prototype;
  dart.addTypeTests(route_observer.GetObserver);
  dart.addTypeCaches(route_observer.GetObserver);
  dart.setLibraryUri(route_observer.GetObserver, I[5]);
  dart.setFieldSignature(route_observer.GetObserver, () => ({
    __proto__: dart.getFields(route_observer.GetObserver.__proto__),
    routing: dart.finalFieldType(dart.nullable(dart.fnType(dart.dynamic, [dart.nullable(route_observer.Routing)]))),
    [_routeSend$]: dart.finalFieldType(dart.nullable(route_observer.Routing))
  }));
  var current$ = dart.privateName(route_observer, "Routing.current");
  var previous$ = dart.privateName(route_observer, "Routing.previous");
  var args$ = dart.privateName(route_observer, "Routing.args");
  var removed$ = dart.privateName(route_observer, "Routing.removed");
  var route$1 = dart.privateName(route_observer, "Routing.route");
  var isBack$ = dart.privateName(route_observer, "Routing.isBack");
  var isBottomSheet$ = dart.privateName(route_observer, "Routing.isBottomSheet");
  var isDialog$ = dart.privateName(route_observer, "Routing.isDialog");
  route_observer.Routing = class Routing extends core.Object {
    get current() {
      return this[current$];
    }
    set current(value) {
      this[current$] = value;
    }
    get previous() {
      return this[previous$];
    }
    set previous(value) {
      this[previous$] = value;
    }
    get args() {
      return this[args$];
    }
    set args(value) {
      this[args$] = value;
    }
    get removed() {
      return this[removed$];
    }
    set removed(value) {
      this[removed$] = value;
    }
    get route() {
      return this[route$1];
    }
    set route(value) {
      this[route$1] = value;
    }
    get isBack() {
      return this[isBack$];
    }
    set isBack(value) {
      this[isBack$] = value;
    }
    get isBottomSheet() {
      return this[isBottomSheet$];
    }
    set isBottomSheet(value) {
      this[isBottomSheet$] = value;
    }
    get isDialog() {
      return this[isDialog$];
    }
    set isDialog(value) {
      this[isDialog$] = value;
    }
    static ['_#new#tearOff'](opts) {
      let current = opts && 'current' in opts ? opts.current : "";
      let previous = opts && 'previous' in opts ? opts.previous : "";
      let args = opts && 'args' in opts ? opts.args : null;
      let removed = opts && 'removed' in opts ? opts.removed : "";
      let route = opts && 'route' in opts ? opts.route : null;
      let isBack = opts && 'isBack' in opts ? opts.isBack : null;
      let isBottomSheet = opts && 'isBottomSheet' in opts ? opts.isBottomSheet : null;
      let isDialog = opts && 'isDialog' in opts ? opts.isDialog : null;
      return new route_observer.Routing.new({current: current, previous: previous, args: args, removed: removed, route: route, isBack: isBack, isBottomSheet: isBottomSheet, isDialog: isDialog});
    }
    update(fn) {
      fn(this);
    }
  };
  (route_observer.Routing.new = function(opts) {
    let current = opts && 'current' in opts ? opts.current : "";
    let previous = opts && 'previous' in opts ? opts.previous : "";
    let args = opts && 'args' in opts ? opts.args : null;
    let removed = opts && 'removed' in opts ? opts.removed : "";
    let route = opts && 'route' in opts ? opts.route : null;
    let isBack = opts && 'isBack' in opts ? opts.isBack : null;
    let isBottomSheet = opts && 'isBottomSheet' in opts ? opts.isBottomSheet : null;
    let isDialog = opts && 'isDialog' in opts ? opts.isDialog : null;
    this[current$] = current;
    this[previous$] = previous;
    this[args$] = args;
    this[removed$] = removed;
    this[route$1] = route;
    this[isBack$] = isBack;
    this[isBottomSheet$] = isBottomSheet;
    this[isDialog$] = isDialog;
    ;
  }).prototype = route_observer.Routing.prototype;
  dart.addTypeTests(route_observer.Routing);
  dart.addTypeCaches(route_observer.Routing);
  dart.setMethodSignature(route_observer.Routing, () => ({
    __proto__: dart.getMethods(route_observer.Routing.__proto__),
    update: dart.fnType(dart.void, [dart.fnType(dart.void, [route_observer.Routing])])
  }));
  dart.setLibraryUri(route_observer.Routing, I[5]);
  dart.setFieldSignature(route_observer.Routing, () => ({
    __proto__: dart.getFields(route_observer.Routing.__proto__),
    current: dart.fieldType(core.String),
    previous: dart.fieldType(core.String),
    args: dart.fieldType(dart.dynamic),
    removed: dart.fieldType(core.String),
    route: dart.fieldType(dart.nullable(navigator.Route)),
    isBack: dart.fieldType(dart.nullable(core.bool)),
    isBottomSheet: dart.fieldType(dart.nullable(core.bool)),
    isDialog: dart.fieldType(dart.nullable(core.bool))
  }));
  route_observer._RouteData = class _RouteData extends core.Object {
    static ['_#new#tearOff'](opts) {
      let name = opts && 'name' in opts ? opts.name : null;
      let isGetPageRoute = opts && 'isGetPageRoute' in opts ? opts.isGetPageRoute : null;
      let isBottomSheet = opts && 'isBottomSheet' in opts ? opts.isBottomSheet : null;
      let isDialog = opts && 'isDialog' in opts ? opts.isDialog : null;
      return new route_observer._RouteData.new({name: name, isGetPageRoute: isGetPageRoute, isBottomSheet: isBottomSheet, isDialog: isDialog});
    }
    static ofRoute(route) {
      return new route_observer._RouteData.new({name: route_observer._extractRouteName(route), isGetPageRoute: default_route.GetPageRoute.is(route), isDialog: dialog_route.GetDialogRoute.is(route), isBottomSheet: bottomsheet$.GetModalBottomSheetRoute.is(route)});
    }
    static ['_#ofRoute#tearOff'](route) {
      return route_observer._RouteData.ofRoute(route);
    }
  };
  (route_observer._RouteData.new = function(opts) {
    let name = opts && 'name' in opts ? opts.name : null;
    let isGetPageRoute = opts && 'isGetPageRoute' in opts ? opts.isGetPageRoute : null;
    let isBottomSheet = opts && 'isBottomSheet' in opts ? opts.isBottomSheet : null;
    let isDialog = opts && 'isDialog' in opts ? opts.isDialog : null;
    this.name = name;
    this.isGetPageRoute = isGetPageRoute;
    this.isBottomSheet = isBottomSheet;
    this.isDialog = isDialog;
    ;
  }).prototype = route_observer._RouteData.prototype;
  dart.addTypeTests(route_observer._RouteData);
  dart.addTypeCaches(route_observer._RouteData);
  dart.setStaticMethodSignature(route_observer._RouteData, () => ['ofRoute']);
  dart.setLibraryUri(route_observer._RouteData, I[5]);
  dart.setFieldSignature(route_observer._RouteData, () => ({
    __proto__: dart.getFields(route_observer._RouteData.__proto__),
    isGetPageRoute: dart.finalFieldType(core.bool),
    isBottomSheet: dart.finalFieldType(core.bool),
    isDialog: dart.finalFieldType(core.bool),
    name: dart.finalFieldType(dart.nullable(core.String))
  }));
  route_observer._extractRouteName = function _extractRouteName(route) {
    let t12;
    if ((t12 = route, t12 == null ? null : t12.settings.name) != null) {
      return dart.nullCheck(route).settings.name;
    }
    if (default_route.GetPageRoute.is(route)) {
      return route.routeName;
    }
    if (dialog_route.GetDialogRoute.is(route)) {
      return "DIALOG " + dart.str(dart.hashCode(route));
    }
    if (bottomsheet$.GetModalBottomSheetRoute.is(route)) {
      return "BOTTOMSHEET " + dart.str(dart.hashCode(route));
    }
    return null;
  };
  var page$ = dart.privateName(get_route, "GetPage.page");
  var popGesture$ = dart.privateName(get_route, "GetPage.popGesture");
  var parameters$ = dart.privateName(get_route, "GetPage.parameters");
  var title$0 = dart.privateName(get_route, "GetPage.title");
  var transition$ = dart.privateName(get_route, "GetPage.transition");
  var curve$ = dart.privateName(get_route, "GetPage.curve");
  var participatesInRootNavigator$ = dart.privateName(get_route, "GetPage.participatesInRootNavigator");
  var alignment$ = dart.privateName(get_route, "GetPage.alignment");
  var maintainState$ = dart.privateName(get_route, "GetPage.maintainState");
  var opaque$ = dart.privateName(get_route, "GetPage.opaque");
  var gestureWidth$ = dart.privateName(get_route, "GetPage.gestureWidth");
  var binding$0 = dart.privateName(get_route, "GetPage.binding");
  var bindings$ = dart.privateName(get_route, "GetPage.bindings");
  var customTransition$ = dart.privateName(get_route, "GetPage.customTransition");
  var transitionDuration$ = dart.privateName(get_route, "GetPage.transitionDuration");
  var fullscreenDialog$ = dart.privateName(get_route, "GetPage.fullscreenDialog");
  var preventDuplicates$ = dart.privateName(get_route, "GetPage.preventDuplicates");
  var $arguments$ = dart.privateName(get_route, "GetPage.arguments");
  var name$ = dart.privateName(get_route, "GetPage.name");
  var children$ = dart.privateName(get_route, "GetPage.children");
  var middlewares$ = dart.privateName(get_route, "GetPage.middlewares");
  var path = dart.privateName(get_route, "GetPage.path");
  var unknownRoute$0 = dart.privateName(get_route, "GetPage.unknownRoute");
  var showCupertinoParallax$ = dart.privateName(get_route, "GetPage.showCupertinoParallax");
  const _is_GetPage_default = Symbol('_is_GetPage_default');
  get_route.GetPage$ = dart.generic(T => {
    var __t$GetPageOfT = () => (__t$GetPageOfT = dart.constFn(get_route.GetPage$(T)))();
    class GetPage extends navigator.Page$(T) {
      get page() {
        return this[page$];
      }
      set page(value) {
        super.page = value;
      }
      get popGesture() {
        return this[popGesture$];
      }
      set popGesture(value) {
        super.popGesture = value;
      }
      get parameters() {
        return this[parameters$];
      }
      set parameters(value) {
        super.parameters = value;
      }
      get title() {
        return this[title$0];
      }
      set title(value) {
        super.title = value;
      }
      get transition() {
        return this[transition$];
      }
      set transition(value) {
        super.transition = value;
      }
      get curve() {
        return this[curve$];
      }
      set curve(value) {
        super.curve = value;
      }
      get participatesInRootNavigator() {
        return this[participatesInRootNavigator$];
      }
      set participatesInRootNavigator(value) {
        super.participatesInRootNavigator = value;
      }
      get alignment() {
        return this[alignment$];
      }
      set alignment(value) {
        super.alignment = value;
      }
      get maintainState() {
        return this[maintainState$];
      }
      set maintainState(value) {
        super.maintainState = value;
      }
      get opaque() {
        return this[opaque$];
      }
      set opaque(value) {
        super.opaque = value;
      }
      get gestureWidth() {
        return this[gestureWidth$];
      }
      set gestureWidth(value) {
        super.gestureWidth = value;
      }
      get binding() {
        return this[binding$0];
      }
      set binding(value) {
        super.binding = value;
      }
      get bindings() {
        return this[bindings$];
      }
      set bindings(value) {
        super.bindings = value;
      }
      get customTransition() {
        return this[customTransition$];
      }
      set customTransition(value) {
        super.customTransition = value;
      }
      get transitionDuration() {
        return this[transitionDuration$];
      }
      set transitionDuration(value) {
        super.transitionDuration = value;
      }
      get fullscreenDialog() {
        return this[fullscreenDialog$];
      }
      set fullscreenDialog(value) {
        super.fullscreenDialog = value;
      }
      get preventDuplicates() {
        return this[preventDuplicates$];
      }
      set preventDuplicates(value) {
        super.preventDuplicates = value;
      }
      get arguments() {
        return this[$arguments$];
      }
      set arguments(value) {
        super.arguments = value;
      }
      get name() {
        return this[name$];
      }
      set name(value) {
        super.name = value;
      }
      get children() {
        return this[children$];
      }
      set children(value) {
        super.children = value;
      }
      get middlewares() {
        return this[middlewares$];
      }
      set middlewares(value) {
        super.middlewares = value;
      }
      get path() {
        return this[path];
      }
      set path(value) {
        super.path = value;
      }
      get unknownRoute() {
        return this[unknownRoute$0];
      }
      set unknownRoute(value) {
        super.unknownRoute = value;
      }
      get showCupertinoParallax() {
        return this[showCupertinoParallax$];
      }
      set showCupertinoParallax(value) {
        super.showCupertinoParallax = value;
      }
      static ['_#new#tearOff'](T, opts) {
        let name = opts && 'name' in opts ? opts.name : null;
        let page = opts && 'page' in opts ? opts.page : null;
        let title = opts && 'title' in opts ? opts.title : null;
        let participatesInRootNavigator = opts && 'participatesInRootNavigator' in opts ? opts.participatesInRootNavigator : null;
        let gestureWidth = opts && 'gestureWidth' in opts ? opts.gestureWidth : null;
        let maintainState = opts && 'maintainState' in opts ? opts.maintainState : true;
        let curve = opts && 'curve' in opts ? opts.curve : C[75] || CT.C75;
        let alignment = opts && 'alignment' in opts ? opts.alignment : null;
        let parameters = opts && 'parameters' in opts ? opts.parameters : null;
        let opaque = opts && 'opaque' in opts ? opts.opaque : true;
        let transitionDuration = opts && 'transitionDuration' in opts ? opts.transitionDuration : null;
        let popGesture = opts && 'popGesture' in opts ? opts.popGesture : null;
        let binding = opts && 'binding' in opts ? opts.binding : null;
        let bindings = opts && 'bindings' in opts ? opts.bindings : C[76] || CT.C76;
        let transition = opts && 'transition' in opts ? opts.transition : null;
        let customTransition = opts && 'customTransition' in opts ? opts.customTransition : null;
        let fullscreenDialog = opts && 'fullscreenDialog' in opts ? opts.fullscreenDialog : false;
        let children = opts && 'children' in opts ? opts.children : C[77] || CT.C77;
        let middlewares = opts && 'middlewares' in opts ? opts.middlewares : null;
        let unknownRoute = opts && 'unknownRoute' in opts ? opts.unknownRoute : null;
        let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
        let showCupertinoParallax = opts && 'showCupertinoParallax' in opts ? opts.showCupertinoParallax : true;
        let preventDuplicates = opts && 'preventDuplicates' in opts ? opts.preventDuplicates : true;
        return new (get_route.GetPage$(T)).new({name: name, page: page, title: title, participatesInRootNavigator: participatesInRootNavigator, gestureWidth: gestureWidth, maintainState: maintainState, curve: curve, alignment: alignment, parameters: parameters, opaque: opaque, transitionDuration: transitionDuration, popGesture: popGesture, binding: binding, bindings: bindings, transition: transition, customTransition: customTransition, fullscreenDialog: fullscreenDialog, children: children, middlewares: middlewares, unknownRoute: unknownRoute, arguments: $arguments, showCupertinoParallax: showCupertinoParallax, preventDuplicates: preventDuplicates});
      }
      copy(opts) {
        let t12, t12$, t12$0, t12$1, t12$2, t12$3, t12$4, t12$5, t12$6, t12$7, t12$8, t12$9, t12$10, t12$11, t12$12, t12$13, t12$14, t12$15, t12$16, t12$17, t12$18, t12$19, t12$20;
        let name = opts && 'name' in opts ? opts.name : null;
        let page = opts && 'page' in opts ? opts.page : null;
        let popGesture = opts && 'popGesture' in opts ? opts.popGesture : null;
        let parameters = opts && 'parameters' in opts ? opts.parameters : null;
        let title = opts && 'title' in opts ? opts.title : null;
        let transition = opts && 'transition' in opts ? opts.transition : null;
        let curve = opts && 'curve' in opts ? opts.curve : null;
        let alignment = opts && 'alignment' in opts ? opts.alignment : null;
        let maintainState = opts && 'maintainState' in opts ? opts.maintainState : null;
        let opaque = opts && 'opaque' in opts ? opts.opaque : null;
        let binding = opts && 'binding' in opts ? opts.binding : null;
        let bindings = opts && 'bindings' in opts ? opts.bindings : null;
        let customTransition = opts && 'customTransition' in opts ? opts.customTransition : null;
        let transitionDuration = opts && 'transitionDuration' in opts ? opts.transitionDuration : null;
        let fullscreenDialog = opts && 'fullscreenDialog' in opts ? opts.fullscreenDialog : null;
        let settings = opts && 'settings' in opts ? opts.settings : null;
        let children = opts && 'children' in opts ? opts.children : null;
        let unknownRoute = opts && 'unknownRoute' in opts ? opts.unknownRoute : null;
        let middlewares = opts && 'middlewares' in opts ? opts.middlewares : null;
        let preventDuplicates = opts && 'preventDuplicates' in opts ? opts.preventDuplicates : null;
        let gestureWidth = opts && 'gestureWidth' in opts ? opts.gestureWidth : null;
        let participatesInRootNavigator = opts && 'participatesInRootNavigator' in opts ? opts.participatesInRootNavigator : null;
        let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
        let showCupertinoParallax = opts && 'showCupertinoParallax' in opts ? opts.showCupertinoParallax : null;
        return new (__t$GetPageOfT()).new({participatesInRootNavigator: (t12 = participatesInRootNavigator, t12 == null ? this.participatesInRootNavigator : t12), preventDuplicates: (t12$ = preventDuplicates, t12$ == null ? this.preventDuplicates : t12$), name: (t12$0 = name, t12$0 == null ? this.name : t12$0), page: (t12$1 = page, t12$1 == null ? this.page : t12$1), popGesture: (t12$2 = popGesture, t12$2 == null ? this.popGesture : t12$2), parameters: (t12$3 = parameters, t12$3 == null ? this.parameters : t12$3), title: (t12$4 = title, t12$4 == null ? this.title : t12$4), transition: (t12$5 = transition, t12$5 == null ? this.transition : t12$5), curve: (t12$6 = curve, t12$6 == null ? this.curve : t12$6), alignment: (t12$7 = alignment, t12$7 == null ? this.alignment : t12$7), maintainState: (t12$8 = maintainState, t12$8 == null ? this.maintainState : t12$8), opaque: (t12$9 = opaque, t12$9 == null ? this.opaque : t12$9), binding: (t12$10 = binding, t12$10 == null ? this.binding : t12$10), bindings: (t12$11 = bindings, t12$11 == null ? this.bindings : t12$11), customTransition: (t12$12 = customTransition, t12$12 == null ? this.customTransition : t12$12), transitionDuration: (t12$13 = transitionDuration, t12$13 == null ? this.transitionDuration : t12$13), fullscreenDialog: (t12$14 = fullscreenDialog, t12$14 == null ? this.fullscreenDialog : t12$14), children: (t12$15 = children, t12$15 == null ? this.children : t12$15), unknownRoute: (t12$16 = unknownRoute, t12$16 == null ? this.unknownRoute : t12$16), middlewares: (t12$17 = middlewares, t12$17 == null ? this.middlewares : t12$17), gestureWidth: (t12$18 = gestureWidth, t12$18 == null ? this.gestureWidth : t12$18), arguments: (t12$19 = $arguments, t12$19 == null ? this.arguments : t12$19), showCupertinoParallax: (t12$20 = showCupertinoParallax, t12$20 == null ? this.showCupertinoParallax : t12$20)});
      }
      createRoute(context) {
        let _page = new route_middleware.PageRedirect.new({route: this, settings: this, unknownRoute: this.unknownRoute}).getPageToRoute(T, this, this.unknownRoute);
        return _page;
      }
      static _nameToRegex(path) {
        let keys = T$.JSArrayOfStringN().of([]);
        function _replace(pattern) {
          let buffer = new core.StringBuffer.new("(?:");
          if (pattern._get(1) != null) buffer.write(".");
          buffer.write("([\\w%+-._~!$&'()*,;=:@]+))");
          if (pattern._get(3) != null) buffer.write("?");
          keys[$add](pattern._get(2));
          return dart.str(buffer);
        }
        dart.fn(_replace, T$.MatchToString());
        let stringPath = (path + "/?")[$replaceAllMapped](core.RegExp.new("(\\.)?:(\\w+)(\\?)?"), _replace)[$replaceAll]("//", "/");
        return new get_route.PathDecoded.new(core.RegExp.new("^" + stringPath + "$"), keys);
      }
    }
    (GetPage.new = function(opts) {
      let name = opts && 'name' in opts ? opts.name : null;
      let page = opts && 'page' in opts ? opts.page : null;
      let title = opts && 'title' in opts ? opts.title : null;
      let participatesInRootNavigator = opts && 'participatesInRootNavigator' in opts ? opts.participatesInRootNavigator : null;
      let gestureWidth = opts && 'gestureWidth' in opts ? opts.gestureWidth : null;
      let maintainState = opts && 'maintainState' in opts ? opts.maintainState : true;
      let curve = opts && 'curve' in opts ? opts.curve : C[75] || CT.C75;
      let alignment = opts && 'alignment' in opts ? opts.alignment : null;
      let parameters = opts && 'parameters' in opts ? opts.parameters : null;
      let opaque = opts && 'opaque' in opts ? opts.opaque : true;
      let transitionDuration = opts && 'transitionDuration' in opts ? opts.transitionDuration : null;
      let popGesture = opts && 'popGesture' in opts ? opts.popGesture : null;
      let binding = opts && 'binding' in opts ? opts.binding : null;
      let bindings = opts && 'bindings' in opts ? opts.bindings : C[76] || CT.C76;
      let transition = opts && 'transition' in opts ? opts.transition : null;
      let customTransition = opts && 'customTransition' in opts ? opts.customTransition : null;
      let fullscreenDialog = opts && 'fullscreenDialog' in opts ? opts.fullscreenDialog : false;
      let children = opts && 'children' in opts ? opts.children : C[77] || CT.C77;
      let middlewares = opts && 'middlewares' in opts ? opts.middlewares : null;
      let unknownRoute = opts && 'unknownRoute' in opts ? opts.unknownRoute : null;
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      let showCupertinoParallax = opts && 'showCupertinoParallax' in opts ? opts.showCupertinoParallax : true;
      let preventDuplicates = opts && 'preventDuplicates' in opts ? opts.preventDuplicates : true;
      this[name$] = name;
      this[page$] = page;
      this[title$0] = title;
      this[participatesInRootNavigator$] = participatesInRootNavigator;
      this[gestureWidth$] = gestureWidth;
      this[maintainState$] = maintainState;
      this[curve$] = curve;
      this[alignment$] = alignment;
      this[parameters$] = parameters;
      this[opaque$] = opaque;
      this[transitionDuration$] = transitionDuration;
      this[popGesture$] = popGesture;
      this[binding$0] = binding;
      this[bindings$] = bindings;
      this[transition$] = transition;
      this[customTransition$] = customTransition;
      this[fullscreenDialog$] = fullscreenDialog;
      this[children$] = children;
      this[middlewares$] = middlewares;
      this[unknownRoute$0] = unknownRoute;
      this[$arguments$] = $arguments;
      this[showCupertinoParallax$] = showCupertinoParallax;
      this[preventDuplicates$] = preventDuplicates;
      this[path] = get_route.GetPage._nameToRegex(name);
      if (!name[$startsWith]("/")) dart.assertFailed("It is necessary to start route name [" + name + "] with a slash: /" + name, I[6], 70, 16, "name.startsWith('/')");
      GetPage.__proto__.new.call(this, {key: new (T$.ValueKeyOfString()).new(name), name: name, arguments: extension_navigation['GetNavigation|get#arguments'](get_main.Get)});
      ;
    }).prototype = GetPage.prototype;
    dart.addTypeTests(GetPage);
    GetPage.prototype[_is_GetPage_default] = true;
    dart.addTypeCaches(GetPage);
    dart.setMethodSignature(GetPage, () => ({
      __proto__: dart.getMethods(GetPage.__proto__),
      copy: dart.fnType(get_route.GetPage$(T), [], {alignment: dart.nullable(alignment.Alignment), arguments: dart.nullable(core.Object), binding: dart.nullable(bindings_interface.Bindings), bindings: dart.nullable(core.List$(bindings_interface.Bindings)), children: dart.nullable(core.List$(get_route.GetPage)), curve: dart.nullable(curves.Curve), customTransition: dart.nullable(custom_transition.CustomTransition), fullscreenDialog: dart.nullable(core.bool), gestureWidth: dart.nullable(dart.fnType(core.double, [framework.BuildContext])), maintainState: dart.nullable(core.bool), middlewares: dart.nullable(core.List$(route_middleware.GetMiddleware)), name: dart.nullable(core.String), opaque: dart.nullable(core.bool), page: dart.nullable(dart.fnType(framework.Widget, [])), parameters: dart.nullable(core.Map$(core.String, core.String)), participatesInRootNavigator: dart.nullable(core.bool), popGesture: dart.nullable(core.bool), preventDuplicates: dart.nullable(core.bool), settings: dart.nullable(navigator.RouteSettings), showCupertinoParallax: dart.nullable(core.bool), title: dart.nullable(core.String), transition: dart.nullable(transitions_type.Transition), transitionDuration: dart.nullable(core.Duration), unknownRoute: dart.nullable(get_route.GetPage)}, {}),
      createRoute: dart.fnType(navigator.Route$(T), [framework.BuildContext])
    }));
    dart.setStaticMethodSignature(GetPage, () => ['_nameToRegex']);
    dart.setLibraryUri(GetPage, I[7]);
    dart.setFieldSignature(GetPage, () => ({
      __proto__: dart.getFields(GetPage.__proto__),
      page: dart.finalFieldType(dart.fnType(framework.Widget, [])),
      popGesture: dart.finalFieldType(dart.nullable(core.bool)),
      parameters: dart.finalFieldType(dart.nullable(core.Map$(core.String, core.String))),
      title: dart.finalFieldType(dart.nullable(core.String)),
      transition: dart.finalFieldType(dart.nullable(transitions_type.Transition)),
      curve: dart.finalFieldType(curves.Curve),
      participatesInRootNavigator: dart.finalFieldType(dart.nullable(core.bool)),
      alignment: dart.finalFieldType(dart.nullable(alignment.Alignment)),
      maintainState: dart.finalFieldType(core.bool),
      opaque: dart.finalFieldType(core.bool),
      gestureWidth: dart.finalFieldType(dart.nullable(dart.fnType(core.double, [framework.BuildContext]))),
      binding: dart.finalFieldType(dart.nullable(bindings_interface.Bindings)),
      bindings: dart.finalFieldType(core.List$(bindings_interface.Bindings)),
      customTransition: dart.finalFieldType(dart.nullable(custom_transition.CustomTransition)),
      transitionDuration: dart.finalFieldType(dart.nullable(core.Duration)),
      fullscreenDialog: dart.finalFieldType(core.bool),
      preventDuplicates: dart.finalFieldType(core.bool),
      arguments: dart.finalFieldType(dart.nullable(core.Object)),
      name: dart.finalFieldType(core.String),
      children: dart.finalFieldType(core.List$(get_route.GetPage)),
      middlewares: dart.finalFieldType(dart.nullable(core.List$(route_middleware.GetMiddleware))),
      path: dart.finalFieldType(get_route.PathDecoded),
      unknownRoute: dart.finalFieldType(dart.nullable(get_route.GetPage)),
      showCupertinoParallax: dart.finalFieldType(core.bool)
    }));
    return GetPage;
  });
  get_route.GetPage = get_route.GetPage$();
  dart.addTypeTests(get_route.GetPage, _is_GetPage_default);
  var regex$ = dart.privateName(get_route, "PathDecoded.regex");
  var keys$ = dart.privateName(get_route, "PathDecoded.keys");
  get_route.PathDecoded = class PathDecoded extends core.Object {
    get regex() {
      return this[regex$];
    }
    set regex(value) {
      super.regex = value;
    }
    get keys() {
      return this[keys$];
    }
    set keys(value) {
      super.keys = value;
    }
    static ['_#new#tearOff'](regex, keys) {
      return new get_route.PathDecoded.new(regex, keys);
    }
    get hashCode() {
      return this.regex[$hashCode];
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      return get_route.PathDecoded.is(other) && other.regex[$_equals](this.regex);
    }
  };
  (get_route.PathDecoded.new = function(regex, keys) {
    this[regex$] = regex;
    this[keys$] = keys;
    ;
  }).prototype = get_route.PathDecoded.prototype;
  dart.addTypeTests(get_route.PathDecoded);
  dart.addTypeCaches(get_route.PathDecoded);
  dart.setLibraryUri(get_route.PathDecoded, I[7]);
  dart.setFieldSignature(get_route.PathDecoded, () => ({
    __proto__: dart.getFields(get_route.PathDecoded.__proto__),
    regex: dart.finalFieldType(core.RegExp),
    keys: dart.finalFieldType(core.List$(dart.nullable(core.String)))
  }));
  dart.defineExtensionMethods(get_route.PathDecoded, ['_equals']);
  dart.defineExtensionAccessors(get_route.PathDecoded, ['hashCode']);
  var controller$ = dart.privateName(get_transition_mixin, "CupertinoBackGestureController.controller");
  var navigator$ = dart.privateName(get_transition_mixin, "CupertinoBackGestureController.navigator");
  const _is_CupertinoBackGestureController_default = Symbol('_is_CupertinoBackGestureController_default');
  get_transition_mixin.CupertinoBackGestureController$ = dart.generic(T => {
    class CupertinoBackGestureController extends core.Object {
      get controller() {
        return this[controller$];
      }
      set controller(value) {
        super.controller = value;
      }
      get navigator() {
        return this[navigator$];
      }
      set navigator(value) {
        super.navigator = value;
      }
      static ['_#new#tearOff'](T, opts) {
        let navigator = opts && 'navigator' in opts ? opts.navigator : null;
        let controller = opts && 'controller' in opts ? opts.controller : null;
        return new (get_transition_mixin.CupertinoBackGestureController$(T)).new({navigator: navigator, controller: controller});
      }
      dragEnd(velocity) {
        let animationCurve = C[78] || CT.C78;
        let animateForward = null;
        if (velocity[$abs]() >= 1) {
          animateForward = velocity <= 0;
        } else {
          animateForward = this.controller.value > 0.5;
        }
        if (animateForward) {
          let droppedPageForwardAnimationTime = math.min(core.int, dart.nullCheck(ui.lerpDouble(800, 0, this.controller.value))[$floor](), 300);
          this.controller.animateTo(1.0, {duration: new core.Duration.new({milliseconds: droppedPageForwardAnimationTime}), curve: animationCurve});
        } else {
          this.navigator.pop(T$.ObjectN());
          if (this.controller.isAnimating) {
            let droppedPageBackAnimationTime = dart.nullCheck(ui.lerpDouble(0, 800, this.controller.value))[$floor]();
            this.controller.animateBack(0.0, {duration: new core.Duration.new({milliseconds: droppedPageBackAnimationTime}), curve: animationCurve});
          }
        }
        if (this.controller.isAnimating) {
          let animationStatusCallback = null;
          function animationStatusCallback$35get() {
            let t13;
            t13 = animationStatusCallback;
            return t13 == null ? dart.throw(new _internal.LateError.localNI("animationStatusCallback")) : t13;
          }
          dart.fn(animationStatusCallback$35get, T$.VoidToFn());
          function animationStatusCallback$35set(animationStatusCallback$35param) {
            return animationStatusCallback = animationStatusCallback$35param;
          }
          dart.fn(animationStatusCallback$35set, T$.FnTodynamic());
          animationStatusCallback$35set(dart.fn(status => {
            this.navigator.didStopUserGesture();
            this.controller.removeStatusListener(animationStatusCallback$35get());
          }, T$.AnimationStatusTovoid()));
          this.controller.addStatusListener(animationStatusCallback$35get());
        } else {
          this.navigator.didStopUserGesture();
        }
      }
      dragUpdate(delta) {
        let t15;
        t15 = this.controller;
        t15.value = t15.value - delta;
      }
    }
    (CupertinoBackGestureController.new = function(opts) {
      let navigator = opts && 'navigator' in opts ? opts.navigator : null;
      let controller = opts && 'controller' in opts ? opts.controller : null;
      this[navigator$] = navigator;
      this[controller$] = controller;
      this.navigator.didStartUserGesture();
    }).prototype = CupertinoBackGestureController.prototype;
    dart.addTypeTests(CupertinoBackGestureController);
    CupertinoBackGestureController.prototype[_is_CupertinoBackGestureController_default] = true;
    dart.addTypeCaches(CupertinoBackGestureController);
    dart.setMethodSignature(CupertinoBackGestureController, () => ({
      __proto__: dart.getMethods(CupertinoBackGestureController.__proto__),
      dragEnd: dart.fnType(dart.void, [core.double]),
      dragUpdate: dart.fnType(dart.void, [core.double])
    }));
    dart.setLibraryUri(CupertinoBackGestureController, I[8]);
    dart.setFieldSignature(CupertinoBackGestureController, () => ({
      __proto__: dart.getFields(CupertinoBackGestureController.__proto__),
      controller: dart.finalFieldType(animation_controller.AnimationController),
      navigator: dart.finalFieldType(navigator.NavigatorState)
    }));
    return CupertinoBackGestureController;
  });
  get_transition_mixin.CupertinoBackGestureController = get_transition_mixin.CupertinoBackGestureController$();
  dart.addTypeTests(get_transition_mixin.CupertinoBackGestureController, _is_CupertinoBackGestureController_default);
  var child$ = dart.privateName(get_transition_mixin, "CupertinoBackGestureDetector.child");
  var gestureWidth$0 = dart.privateName(get_transition_mixin, "CupertinoBackGestureDetector.gestureWidth");
  var enabledCallback$ = dart.privateName(get_transition_mixin, "CupertinoBackGestureDetector.enabledCallback");
  var onStartPopGesture$ = dart.privateName(get_transition_mixin, "CupertinoBackGestureDetector.onStartPopGesture");
  const _is_CupertinoBackGestureDetector_default = Symbol('_is_CupertinoBackGestureDetector_default');
  get_transition_mixin.CupertinoBackGestureDetector$ = dart.generic(T => {
    var __t$CupertinoBackGestureDetectorStateOfT = () => (__t$CupertinoBackGestureDetectorStateOfT = dart.constFn(get_transition_mixin.CupertinoBackGestureDetectorState$(T)))();
    class CupertinoBackGestureDetector extends framework.StatefulWidget {
      get child() {
        return this[child$];
      }
      set child(value) {
        super.child = value;
      }
      get gestureWidth() {
        return this[gestureWidth$0];
      }
      set gestureWidth(value) {
        super.gestureWidth = value;
      }
      get enabledCallback() {
        return this[enabledCallback$];
      }
      set enabledCallback(value) {
        super.enabledCallback = value;
      }
      get onStartPopGesture() {
        return this[onStartPopGesture$];
      }
      set onStartPopGesture(value) {
        super.onStartPopGesture = value;
      }
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let enabledCallback = opts && 'enabledCallback' in opts ? opts.enabledCallback : null;
        let onStartPopGesture = opts && 'onStartPopGesture' in opts ? opts.onStartPopGesture : null;
        let child = opts && 'child' in opts ? opts.child : null;
        let gestureWidth = opts && 'gestureWidth' in opts ? opts.gestureWidth : null;
        return new (get_transition_mixin.CupertinoBackGestureDetector$(T)).new({key: key, enabledCallback: enabledCallback, onStartPopGesture: onStartPopGesture, child: child, gestureWidth: gestureWidth, $creationLocationd_0dea112b090073317d4: C[79] || CT.C79});
      }
      createState() {
        return new (__t$CupertinoBackGestureDetectorStateOfT()).new();
      }
    }
    (CupertinoBackGestureDetector.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let enabledCallback = opts && 'enabledCallback' in opts ? opts.enabledCallback : null;
      let onStartPopGesture = opts && 'onStartPopGesture' in opts ? opts.onStartPopGesture : null;
      let child = opts && 'child' in opts ? opts.child : null;
      let gestureWidth = opts && 'gestureWidth' in opts ? opts.gestureWidth : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[enabledCallback$] = enabledCallback;
      this[onStartPopGesture$] = onStartPopGesture;
      this[child$] = child;
      this[gestureWidth$0] = gestureWidth;
      CupertinoBackGestureDetector.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = CupertinoBackGestureDetector.prototype;
    dart.addTypeTests(CupertinoBackGestureDetector);
    CupertinoBackGestureDetector.prototype[_is_CupertinoBackGestureDetector_default] = true;
    dart.addTypeCaches(CupertinoBackGestureDetector);
    dart.setMethodSignature(CupertinoBackGestureDetector, () => ({
      __proto__: dart.getMethods(CupertinoBackGestureDetector.__proto__),
      createState: dart.fnType(get_transition_mixin.CupertinoBackGestureDetectorState$(T), [])
    }));
    dart.setLibraryUri(CupertinoBackGestureDetector, I[8]);
    dart.setFieldSignature(CupertinoBackGestureDetector, () => ({
      __proto__: dart.getFields(CupertinoBackGestureDetector.__proto__),
      child: dart.finalFieldType(framework.Widget),
      gestureWidth: dart.finalFieldType(core.double),
      enabledCallback: dart.finalFieldType(dart.fnType(core.bool, [])),
      onStartPopGesture: dart.finalFieldType(dart.fnType(get_transition_mixin.CupertinoBackGestureController$(T), []))
    }));
    return CupertinoBackGestureDetector;
  });
  get_transition_mixin.CupertinoBackGestureDetector = get_transition_mixin.CupertinoBackGestureDetector$();
  dart.addTypeTests(get_transition_mixin.CupertinoBackGestureDetector, _is_CupertinoBackGestureDetector_default);
  var _backGestureController = dart.privateName(get_transition_mixin, "_backGestureController");
  var __CupertinoBackGestureDetectorState__recognizer = dart.privateName(get_transition_mixin, "_#CupertinoBackGestureDetectorState#_recognizer");
  var _recognizer = dart.privateName(get_transition_mixin, "_recognizer");
  var _handlePointerDown = dart.privateName(get_transition_mixin, "_handlePointerDown");
  var _handleDragStart = dart.privateName(get_transition_mixin, "_handleDragStart");
  var _handleDragUpdate = dart.privateName(get_transition_mixin, "_handleDragUpdate");
  var _handleDragEnd = dart.privateName(get_transition_mixin, "_handleDragEnd");
  var _handleDragCancel = dart.privateName(get_transition_mixin, "_handleDragCancel");
  var _convertToLogical = dart.privateName(get_transition_mixin, "_convertToLogical");
  const _is_CupertinoBackGestureDetectorState_default = Symbol('_is_CupertinoBackGestureDetectorState_default');
  get_transition_mixin.CupertinoBackGestureDetectorState$ = dart.generic(T => {
    class CupertinoBackGestureDetectorState extends framework.State$(get_transition_mixin.CupertinoBackGestureDetector$(T)) {
      get [_recognizer]() {
        let t15;
        t15 = this[__CupertinoBackGestureDetectorState__recognizer];
        return t15 == null ? dart.throw(new _internal.LateError.fieldNI("_recognizer")) : t15;
      }
      set [_recognizer](library$32package$58get$47get_navigation$47src$47routes$47get_transition_mixin$46dart$58$58_recognizer$35param) {
        this[__CupertinoBackGestureDetectorState__recognizer] = library$32package$58get$47get_navigation$47src$47routes$47get_transition_mixin$46dart$58$58_recognizer$35param;
      }
      build(context) {
        if (!debug.debugCheckHasDirectionality(context)) dart.assertFailed(null, I[9], 142, 12, "debugCheckHasDirectionality(context)");
        let dragAreaWidth = basic.Directionality.of(context) === ui.TextDirection.ltr ? media_query.MediaQuery.of(context).padding.left : media_query.MediaQuery.of(context).padding.right;
        dragAreaWidth = math.max(core.double, dragAreaWidth, this.widget.gestureWidth);
        return new basic.Stack.new({fit: stack.StackFit.passthrough, children: T$.JSArrayOfWidget().of([this.widget.child, new basic.PositionedDirectional.new({start: 0.0, width: dragAreaWidth, top: 0.0, bottom: 0.0, child: new basic.Listener.new({onPointerDown: dart.bind(this, _handlePointerDown), behavior: proxy_box.HitTestBehavior.translucent, $creationLocationd_0dea112b090073317d4: C[80] || CT.C80}), $creationLocationd_0dea112b090073317d4: C[81] || CT.C81})]), $creationLocationd_0dea112b090073317d4: C[82] || CT.C82});
      }
      dispose() {
        this[_recognizer].dispose();
        super.dispose();
      }
      initState() {
        let t15;
        super.initState();
        this[_recognizer] = (t15 = new monodrag.HorizontalDragGestureRecognizer.new({debugOwner: this}), (() => {
          t15.onStart = dart.bind(this, _handleDragStart);
          t15.onUpdate = dart.bind(this, _handleDragUpdate);
          t15.onEnd = dart.bind(this, _handleDragEnd);
          t15.onCancel = dart.bind(this, _handleDragCancel);
          return t15;
        })());
      }
      [_convertToLogical](value) {
        switch (basic.Directionality.of(this.context)) {
          case C[83] || CT.C83:
            {
              return -value;
            }
          case C[84] || CT.C84:
            {
              return value;
            }
        }
      }
      [_handleDragCancel]() {
        let t15;
        if (!this.mounted) dart.assertFailed(null, I[9], 193, 12, "mounted");
        t15 = this[_backGestureController];
        t15 == null ? null : t15.dragEnd(0.0);
        this[_backGestureController] = null;
      }
      [_handleDragEnd](details) {
        if (!this.mounted) dart.assertFailed(null, I[9], 202, 12, "mounted");
        if (!(this[_backGestureController] != null)) dart.assertFailed(null, I[9], 203, 12, "_backGestureController != null");
        dart.nullCheck(this[_backGestureController]).dragEnd(this[_convertToLogical](details.velocity.pixelsPerSecond.dx / dart.nullCheck(this.context.size).width));
        this[_backGestureController] = null;
      }
      [_handleDragStart](details) {
        if (!this.mounted) dart.assertFailed(null, I[9], 210, 12, "mounted");
        if (!(this[_backGestureController] == null)) dart.assertFailed(null, I[9], 211, 12, "_backGestureController == null");
        this[_backGestureController] = this.widget.onStartPopGesture();
      }
      [_handleDragUpdate](details) {
        if (!this.mounted) dart.assertFailed(null, I[9], 216, 12, "mounted");
        if (!(this[_backGestureController] != null)) dart.assertFailed(null, I[9], 217, 12, "_backGestureController != null");
        dart.nullCheck(this[_backGestureController]).dragUpdate(this[_convertToLogical](dart.nullCheck(details.primaryDelta) / dart.nullCheck(this.context.size).width));
      }
      [_handlePointerDown](event) {
        if (this.widget.enabledCallback()) this[_recognizer].addPointer(event);
      }
      static ['_#new#tearOff'](T) {
        return new (get_transition_mixin.CupertinoBackGestureDetectorState$(T)).new();
      }
    }
    (CupertinoBackGestureDetectorState.new = function() {
      this[_backGestureController] = null;
      this[__CupertinoBackGestureDetectorState__recognizer] = null;
      CupertinoBackGestureDetectorState.__proto__.new.call(this);
      ;
    }).prototype = CupertinoBackGestureDetectorState.prototype;
    dart.addTypeTests(CupertinoBackGestureDetectorState);
    CupertinoBackGestureDetectorState.prototype[_is_CupertinoBackGestureDetectorState_default] = true;
    dart.addTypeCaches(CupertinoBackGestureDetectorState);
    dart.setMethodSignature(CupertinoBackGestureDetectorState, () => ({
      __proto__: dart.getMethods(CupertinoBackGestureDetectorState.__proto__),
      build: dart.fnType(framework.Widget, [framework.BuildContext]),
      [_convertToLogical]: dart.fnType(core.double, [core.double]),
      [_handleDragCancel]: dart.fnType(dart.void, []),
      [_handleDragEnd]: dart.fnType(dart.void, [drag_details.DragEndDetails]),
      [_handleDragStart]: dart.fnType(dart.void, [drag_details.DragStartDetails]),
      [_handleDragUpdate]: dart.fnType(dart.void, [drag_details.DragUpdateDetails]),
      [_handlePointerDown]: dart.fnType(dart.void, [events.PointerDownEvent])
    }));
    dart.setGetterSignature(CupertinoBackGestureDetectorState, () => ({
      __proto__: dart.getGetters(CupertinoBackGestureDetectorState.__proto__),
      [_recognizer]: monodrag.HorizontalDragGestureRecognizer
    }));
    dart.setSetterSignature(CupertinoBackGestureDetectorState, () => ({
      __proto__: dart.getSetters(CupertinoBackGestureDetectorState.__proto__),
      [_recognizer]: monodrag.HorizontalDragGestureRecognizer
    }));
    dart.setLibraryUri(CupertinoBackGestureDetectorState, I[8]);
    dart.setFieldSignature(CupertinoBackGestureDetectorState, () => ({
      __proto__: dart.getFields(CupertinoBackGestureDetectorState.__proto__),
      [_backGestureController]: dart.fieldType(dart.nullable(get_transition_mixin.CupertinoBackGestureController$(T))),
      [__CupertinoBackGestureDetectorState__recognizer]: dart.fieldType(dart.nullable(monodrag.HorizontalDragGestureRecognizer))
    }));
    return CupertinoBackGestureDetectorState;
  });
  get_transition_mixin.CupertinoBackGestureDetectorState = get_transition_mixin.CupertinoBackGestureDetectorState$();
  dart.addTypeTests(get_transition_mixin.CupertinoBackGestureDetectorState, _is_CupertinoBackGestureDetectorState_default);
  var _previousTitle = dart.privateName(get_transition_mixin, "_previousTitle");
  const _is_GetPageRouteTransitionMixin_default = Symbol('_is_GetPageRouteTransitionMixin_default');
  get_transition_mixin.GetPageRouteTransitionMixin$ = dart.generic(T => {
    class GetPageRouteTransitionMixin extends pages.PageRoute$(T) {
      static buildPageTransitions(T, rawRoute, context, animation, secondaryAnimation, child) {
        let t15, t15$, t15$0, t15$1, t15$2, t15$3, t15$4, t15$5, t15$6, t15$7, t15$8, t15$9, t15$10, t15$11, t15$12, t15$13, t15$14, t15$15, t15$16, t15$17, t15$18, t15$19, t15$20, t15$21, t15$22, t15$23, t15$24, t15$25, t15$26, t15$27, t15$28, t15$29, t15$30, t15$31, t15$32, t15$33, t15$34, t15$35, t15$36, t15$37, t15$38, t15$39, t15$40, t15$41, t15$42, t15$43, t15$44, t15$45, t15$46, t15$47, t15$48, t15$49;
        let route = default_route.GetPageRoute$(T).as(rawRoute);
        let linearTransition = get_transition_mixin.GetPageRouteTransitionMixin.isPopGestureInProgress(route);
        let finalCurve = (t15 = route.curve, t15 == null ? extension_navigation['GetNavigation|get#defaultTransitionCurve'](get_main.Get) : t15);
        let hasCurve = route.curve != null;
        if (route.fullscreenDialog && route.transition == null) {
          return new route$.CupertinoFullscreenDialogTransition.new({primaryRouteAnimation: hasCurve ? new animations.CurvedAnimation.new({parent: animation, curve: finalCurve}) : animation, secondaryRouteAnimation: secondaryAnimation, child: child, linearTransition: linearTransition, $creationLocationd_0dea112b090073317d4: C[87] || CT.C87});
        } else {
          if (route.customTransition != null) {
            return dart.nullCheck(route.customTransition).buildTransition(context, finalCurve, route.alignment, animation, secondaryAnimation, dart.test((t15$ = route.popGesture, t15$ == null ? extension_navigation['GetNavigation|get#defaultPopGesture'](get_main.Get) : t15$)) ? new (get_transition_mixin.CupertinoBackGestureDetector$(T)).new({gestureWidth: (t15$1 = (t15$0 = route.gestureWidth, t15$0 == null ? null : t15$0(context)), t15$1 == null ? 20 : t15$1), enabledCallback: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._isPopGestureEnabled(T, route), T$.VoidTobool()), onStartPopGesture: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._startPopGesture(T, route), dart.fnType(get_transition_mixin.CupertinoBackGestureController$(T), [])), child: child, $creationLocationd_0dea112b090073317d4: C[88] || CT.C88}) : child);
          }
          let iosAnimation = animation;
          animation = new animations.CurvedAnimation.new({parent: animation, curve: finalCurve});
          switch (t15$49 = route.transition, t15$49 == null ? extension_navigation['GetNavigation|get#defaultTransition'](get_main.Get) : t15$49) {
            case C[90] || CT.C90:
              {
                return new default_transitions.SlideLeftTransition.new().buildTransitions(context, route.curve, route.alignment, animation, secondaryAnimation, dart.test((t15$2 = route.popGesture, t15$2 == null ? extension_navigation['GetNavigation|get#defaultPopGesture'](get_main.Get) : t15$2)) ? new (get_transition_mixin.CupertinoBackGestureDetector$(T)).new({gestureWidth: (t15$4 = (t15$3 = route.gestureWidth, t15$3 == null ? null : t15$3(context)), t15$4 == null ? 20 : t15$4), enabledCallback: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._isPopGestureEnabled(T, route), T$.VoidTobool()), onStartPopGesture: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._startPopGesture(T, route), dart.fnType(get_transition_mixin.CupertinoBackGestureController$(T), [])), child: child, $creationLocationd_0dea112b090073317d4: C[89] || CT.C89}) : child);
              }
            case C[92] || CT.C92:
              {
                return new default_transitions.SlideDownTransition.new().buildTransitions(context, route.curve, route.alignment, animation, secondaryAnimation, dart.test((t15$5 = route.popGesture, t15$5 == null ? extension_navigation['GetNavigation|get#defaultPopGesture'](get_main.Get) : t15$5)) ? new (get_transition_mixin.CupertinoBackGestureDetector$(T)).new({gestureWidth: (t15$7 = (t15$6 = route.gestureWidth, t15$6 == null ? null : t15$6(context)), t15$7 == null ? 20 : t15$7), enabledCallback: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._isPopGestureEnabled(T, route), T$.VoidTobool()), onStartPopGesture: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._startPopGesture(T, route), dart.fnType(get_transition_mixin.CupertinoBackGestureController$(T), [])), child: child, $creationLocationd_0dea112b090073317d4: C[91] || CT.C91}) : child);
              }
            case C[94] || CT.C94:
              {
                return new default_transitions.SlideTopTransition.new().buildTransitions(context, route.curve, route.alignment, animation, secondaryAnimation, dart.test((t15$8 = route.popGesture, t15$8 == null ? extension_navigation['GetNavigation|get#defaultPopGesture'](get_main.Get) : t15$8)) ? new (get_transition_mixin.CupertinoBackGestureDetector$(T)).new({gestureWidth: (t15$10 = (t15$9 = route.gestureWidth, t15$9 == null ? null : t15$9(context)), t15$10 == null ? 20 : t15$10), enabledCallback: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._isPopGestureEnabled(T, route), T$.VoidTobool()), onStartPopGesture: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._startPopGesture(T, route), dart.fnType(get_transition_mixin.CupertinoBackGestureController$(T), [])), child: child, $creationLocationd_0dea112b090073317d4: C[93] || CT.C93}) : child);
              }
            case C[96] || CT.C96:
              {
                return dart.test((t15$11 = route.popGesture, t15$11 == null ? extension_navigation['GetNavigation|get#defaultPopGesture'](get_main.Get) : t15$11)) ? new (get_transition_mixin.CupertinoBackGestureDetector$(T)).new({gestureWidth: (t15$13 = (t15$12 = route.gestureWidth, t15$12 == null ? null : t15$12(context)), t15$13 == null ? 20 : t15$13), enabledCallback: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._isPopGestureEnabled(T, route), T$.VoidTobool()), onStartPopGesture: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._startPopGesture(T, route), dart.fnType(get_transition_mixin.CupertinoBackGestureController$(T), [])), child: child, $creationLocationd_0dea112b090073317d4: C[95] || CT.C95}) : child;
              }
            case C[98] || CT.C98:
              {
                return new default_transitions.SlideRightTransition.new().buildTransitions(context, route.curve, route.alignment, animation, secondaryAnimation, dart.test((t15$14 = route.popGesture, t15$14 == null ? extension_navigation['GetNavigation|get#defaultPopGesture'](get_main.Get) : t15$14)) ? new (get_transition_mixin.CupertinoBackGestureDetector$(T)).new({gestureWidth: (t15$16 = (t15$15 = route.gestureWidth, t15$15 == null ? null : t15$15(context)), t15$16 == null ? 20 : t15$16), enabledCallback: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._isPopGestureEnabled(T, route), T$.VoidTobool()), onStartPopGesture: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._startPopGesture(T, route), dart.fnType(get_transition_mixin.CupertinoBackGestureController$(T), [])), child: child, $creationLocationd_0dea112b090073317d4: C[97] || CT.C97}) : child);
              }
            case C[100] || CT.C100:
              {
                return new default_transitions.ZoomInTransition.new().buildTransitions(context, route.curve, route.alignment, animation, secondaryAnimation, dart.test((t15$17 = route.popGesture, t15$17 == null ? extension_navigation['GetNavigation|get#defaultPopGesture'](get_main.Get) : t15$17)) ? new (get_transition_mixin.CupertinoBackGestureDetector$(T)).new({gestureWidth: (t15$19 = (t15$18 = route.gestureWidth, t15$18 == null ? null : t15$18(context)), t15$19 == null ? 20 : t15$19), enabledCallback: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._isPopGestureEnabled(T, route), T$.VoidTobool()), onStartPopGesture: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._startPopGesture(T, route), dart.fnType(get_transition_mixin.CupertinoBackGestureController$(T), [])), child: child, $creationLocationd_0dea112b090073317d4: C[99] || CT.C99}) : child);
              }
            case C[102] || CT.C102:
              {
                return new default_transitions.FadeInTransition.new().buildTransitions(context, route.curve, route.alignment, animation, secondaryAnimation, dart.test((t15$20 = route.popGesture, t15$20 == null ? extension_navigation['GetNavigation|get#defaultPopGesture'](get_main.Get) : t15$20)) ? new (get_transition_mixin.CupertinoBackGestureDetector$(T)).new({gestureWidth: (t15$22 = (t15$21 = route.gestureWidth, t15$21 == null ? null : t15$21(context)), t15$22 == null ? 20 : t15$22), enabledCallback: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._isPopGestureEnabled(T, route), T$.VoidTobool()), onStartPopGesture: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._startPopGesture(T, route), dart.fnType(get_transition_mixin.CupertinoBackGestureController$(T), [])), child: child, $creationLocationd_0dea112b090073317d4: C[101] || CT.C101}) : child);
              }
            case C[104] || CT.C104:
              {
                return new default_transitions.RightToLeftFadeTransition.new().buildTransitions(context, route.curve, route.alignment, animation, secondaryAnimation, dart.test((t15$23 = route.popGesture, t15$23 == null ? extension_navigation['GetNavigation|get#defaultPopGesture'](get_main.Get) : t15$23)) ? new (get_transition_mixin.CupertinoBackGestureDetector$(T)).new({gestureWidth: (t15$25 = (t15$24 = route.gestureWidth, t15$24 == null ? null : t15$24(context)), t15$25 == null ? 20 : t15$25), enabledCallback: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._isPopGestureEnabled(T, route), T$.VoidTobool()), onStartPopGesture: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._startPopGesture(T, route), dart.fnType(get_transition_mixin.CupertinoBackGestureController$(T), [])), child: child, $creationLocationd_0dea112b090073317d4: C[103] || CT.C103}) : child);
              }
            case C[106] || CT.C106:
              {
                return new default_transitions.LeftToRightFadeTransition.new().buildTransitions(context, route.curve, route.alignment, animation, secondaryAnimation, dart.test((t15$26 = route.popGesture, t15$26 == null ? extension_navigation['GetNavigation|get#defaultPopGesture'](get_main.Get) : t15$26)) ? new (get_transition_mixin.CupertinoBackGestureDetector$(T)).new({gestureWidth: (t15$28 = (t15$27 = route.gestureWidth, t15$27 == null ? null : t15$27(context)), t15$28 == null ? 20 : t15$28), enabledCallback: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._isPopGestureEnabled(T, route), T$.VoidTobool()), onStartPopGesture: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._startPopGesture(T, route), dart.fnType(get_transition_mixin.CupertinoBackGestureController$(T), [])), child: child, $creationLocationd_0dea112b090073317d4: C[105] || CT.C105}) : child);
              }
            case C[109] || CT.C109:
              {
                return new route$.CupertinoPageTransition.new({primaryRouteAnimation: animation, secondaryRouteAnimation: secondaryAnimation, linearTransition: linearTransition, child: new (get_transition_mixin.CupertinoBackGestureDetector$(T)).new({gestureWidth: (t15$30 = (t15$29 = route.gestureWidth, t15$29 == null ? null : t15$29(context)), t15$30 == null ? 20 : t15$30), enabledCallback: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._isPopGestureEnabled(T, route), T$.VoidTobool()), onStartPopGesture: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._startPopGesture(T, route), dart.fnType(get_transition_mixin.CupertinoBackGestureController$(T), [])), child: child, $creationLocationd_0dea112b090073317d4: C[107] || CT.C107}), $creationLocationd_0dea112b090073317d4: C[108] || CT.C108});
              }
            case C[111] || CT.C111:
              {
                return new default_transitions.SizeTransitions.new().buildTransitions(context, dart.nullCheck(route.curve), route.alignment, animation, secondaryAnimation, dart.test((t15$31 = route.popGesture, t15$31 == null ? extension_navigation['GetNavigation|get#defaultPopGesture'](get_main.Get) : t15$31)) ? new (get_transition_mixin.CupertinoBackGestureDetector$(T)).new({gestureWidth: (t15$33 = (t15$32 = route.gestureWidth, t15$32 == null ? null : t15$32(context)), t15$33 == null ? 20 : t15$33), enabledCallback: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._isPopGestureEnabled(T, route), T$.VoidTobool()), onStartPopGesture: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._startPopGesture(T, route), dart.fnType(get_transition_mixin.CupertinoBackGestureController$(T), [])), child: child, $creationLocationd_0dea112b090073317d4: C[110] || CT.C110}) : child);
              }
            case C[113] || CT.C113:
              {
                return new page_transitions_theme.FadeUpwardsPageTransitionsBuilder.new().buildTransitions(T, route, context, animation, secondaryAnimation, dart.test((t15$34 = route.popGesture, t15$34 == null ? extension_navigation['GetNavigation|get#defaultPopGesture'](get_main.Get) : t15$34)) ? new (get_transition_mixin.CupertinoBackGestureDetector$(T)).new({gestureWidth: (t15$36 = (t15$35 = route.gestureWidth, t15$35 == null ? null : t15$35(context)), t15$36 == null ? 20 : t15$36), enabledCallback: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._isPopGestureEnabled(T, route), T$.VoidTobool()), onStartPopGesture: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._startPopGesture(T, route), dart.fnType(get_transition_mixin.CupertinoBackGestureController$(T), [])), child: child, $creationLocationd_0dea112b090073317d4: C[112] || CT.C112}) : child);
              }
            case C[115] || CT.C115:
              {
                return new page_transitions_theme.ZoomPageTransitionsBuilder.new().buildTransitions(T, route, context, animation, secondaryAnimation, dart.test((t15$37 = route.popGesture, t15$37 == null ? extension_navigation['GetNavigation|get#defaultPopGesture'](get_main.Get) : t15$37)) ? new (get_transition_mixin.CupertinoBackGestureDetector$(T)).new({gestureWidth: (t15$39 = (t15$38 = route.gestureWidth, t15$38 == null ? null : t15$38(context)), t15$39 == null ? 20 : t15$39), enabledCallback: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._isPopGestureEnabled(T, route), T$.VoidTobool()), onStartPopGesture: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._startPopGesture(T, route), dart.fnType(get_transition_mixin.CupertinoBackGestureController$(T), [])), child: child, $creationLocationd_0dea112b090073317d4: C[114] || CT.C114}) : child);
              }
            case C[117] || CT.C117:
              {
                return new page_transitions_theme.PageTransitionsTheme.new().buildTransitions(T, route, context, iosAnimation, secondaryAnimation, dart.test((t15$40 = route.popGesture, t15$40 == null ? extension_navigation['GetNavigation|get#defaultPopGesture'](get_main.Get) : t15$40)) ? new (get_transition_mixin.CupertinoBackGestureDetector$(T)).new({gestureWidth: (t15$42 = (t15$41 = route.gestureWidth, t15$41 == null ? null : t15$41(context)), t15$42 == null ? 20 : t15$42), enabledCallback: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._isPopGestureEnabled(T, route), T$.VoidTobool()), onStartPopGesture: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._startPopGesture(T, route), dart.fnType(get_transition_mixin.CupertinoBackGestureController$(T), [])), child: child, $creationLocationd_0dea112b090073317d4: C[116] || CT.C116}) : child);
              }
            case C[119] || CT.C119:
              {
                return new default_transitions.CircularRevealTransition.new().buildTransitions(context, route.curve, route.alignment, animation, secondaryAnimation, dart.test((t15$43 = route.popGesture, t15$43 == null ? extension_navigation['GetNavigation|get#defaultPopGesture'](get_main.Get) : t15$43)) ? new (get_transition_mixin.CupertinoBackGestureDetector$(T)).new({gestureWidth: (t15$45 = (t15$44 = route.gestureWidth, t15$44 == null ? null : t15$44(context)), t15$45 == null ? 20 : t15$45), enabledCallback: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._isPopGestureEnabled(T, route), T$.VoidTobool()), onStartPopGesture: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._startPopGesture(T, route), dart.fnType(get_transition_mixin.CupertinoBackGestureController$(T), [])), child: child, $creationLocationd_0dea112b090073317d4: C[118] || CT.C118}) : child);
              }
            default:
              {
                if (extension_navigation['GetNavigation|get#customTransition'](get_main.Get) != null) {
                  return dart.nullCheck(extension_navigation['GetNavigation|get#customTransition'](get_main.Get)).buildTransition(context, route.curve, route.alignment, animation, secondaryAnimation, child);
                }
                return new page_transitions_theme.PageTransitionsTheme.new().buildTransitions(T, route, context, iosAnimation, secondaryAnimation, dart.test((t15$46 = route.popGesture, t15$46 == null ? extension_navigation['GetNavigation|get#defaultPopGesture'](get_main.Get) : t15$46)) ? new (get_transition_mixin.CupertinoBackGestureDetector$(T)).new({gestureWidth: (t15$48 = (t15$47 = route.gestureWidth, t15$47 == null ? null : t15$47(context)), t15$48 == null ? 20 : t15$48), enabledCallback: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._isPopGestureEnabled(T, route), T$.VoidTobool()), onStartPopGesture: dart.fn(() => get_transition_mixin.GetPageRouteTransitionMixin._startPopGesture(T, route), dart.fnType(get_transition_mixin.CupertinoBackGestureController$(T), [])), child: child, $creationLocationd_0dea112b090073317d4: C[120] || CT.C120}) : child);
              }
          }
        }
      }
      static isPopGestureInProgress(route) {
        return dart.nullCheck(route.navigator).userGestureInProgress;
      }
      static _isPopGestureEnabled(T, route) {
        if (route.isFirst) return false;
        if (route.willHandlePopInternally) return false;
        if (route.hasScopedWillPopCallback) return false;
        if (route.fullscreenDialog) return false;
        if (dart.nullCheck(route.animation).status !== animation.AnimationStatus.completed) return false;
        if (dart.nullCheck(route.secondaryAnimation).status !== animation.AnimationStatus.dismissed) {
          return false;
        }
        if (get_transition_mixin.GetPageRouteTransitionMixin.isPopGestureInProgress(route)) return false;
        return true;
      }
      static _startPopGesture(T, route) {
        if (!get_transition_mixin.GetPageRouteTransitionMixin._isPopGestureEnabled(T, route)) dart.assertFailed(null, I[9], 707, 12, "_isPopGestureEnabled(route)");
        return new (get_transition_mixin.CupertinoBackGestureController$(T)).new({navigator: dart.nullCheck(route.navigator), controller: dart.nullCheck(route.controller)});
      }
    }
    GetPageRouteTransitionMixin[dart.mixinOn] = PageRoute => class GetPageRouteTransitionMixin extends PageRoute {
      get barrierColor() {
        return null;
      }
      get barrierLabel() {
        return null;
      }
      get popGestureEnabled() {
        return get_transition_mixin.GetPageRouteTransitionMixin._isPopGestureEnabled(T, this);
      }
      get popGestureInProgress() {
        return get_transition_mixin.GetPageRouteTransitionMixin.isPopGestureInProgress(this);
      }
      get previousTitle() {
        if (!(this[_previousTitle] != null)) dart.assertFailed("Cannot read the previousTitle for a route that has not yet been installed", I[9], 276, 7, "_previousTitle != null");
        return dart.nullCheck(this[_previousTitle]);
      }
      get transitionDuration() {
        return C[85] || CT.C85;
      }
      buildPage(context, animation, secondaryAnimation) {
        let child = this.buildContent(context);
        let result = new basic.Semantics.new({scopesRoute: true, explicitChildNodes: true, child: child, $creationLocationd_0dea112b090073317d4: C[86] || CT.C86});
        return result;
      }
      buildTransitions(context, animation, secondaryAnimation, child) {
        return get_transition_mixin.GetPageRouteTransitionMixin.buildPageTransitions(T, this, context, animation, secondaryAnimation, child);
      }
      canTransitionTo(nextRoute) {
        return get_transition_mixin.GetPageRouteTransitionMixin.is(nextRoute) && !nextRoute.fullscreenDialog && nextRoute.showCupertinoParallax || route$.CupertinoRouteTransitionMixin.is(nextRoute) && !nextRoute.fullscreenDialog;
      }
      didChangePrevious(previousRoute) {
        let previousTitleString = route$.CupertinoRouteTransitionMixin.is(previousRoute) ? previousRoute.title : null;
        if (this[_previousTitle] == null) {
          this[_previousTitle] = new (T$.ValueNotifierOfStringN()).new(previousTitleString);
        } else {
          dart.nullCheck(this[_previousTitle]).value = previousTitleString;
        }
        super.didChangePrevious(previousRoute);
      }
    };
    (GetPageRouteTransitionMixin[dart.mixinNew] = function() {
      this[_previousTitle] = null;
    }).prototype = GetPageRouteTransitionMixin.prototype;
    dart.addTypeTests(GetPageRouteTransitionMixin);
    GetPageRouteTransitionMixin.prototype[_is_GetPageRouteTransitionMixin_default] = true;
    dart.addTypeCaches(GetPageRouteTransitionMixin);
    GetPageRouteTransitionMixin[dart.implements] = () => [pages.PageRoute$(T)];
    dart.setMethodSignature(GetPageRouteTransitionMixin, () => ({
      __proto__: dart.getMethods(GetPageRouteTransitionMixin.__proto__),
      buildPage: dart.fnType(framework.Widget, [framework.BuildContext, animation.Animation$(core.double), animation.Animation$(core.double)])
    }));
    dart.setStaticMethodSignature(GetPageRouteTransitionMixin, () => ['buildPageTransitions', 'isPopGestureInProgress', '_isPopGestureEnabled', '_startPopGesture']);
    dart.setGetterSignature(GetPageRouteTransitionMixin, () => ({
      __proto__: dart.getGetters(GetPageRouteTransitionMixin.__proto__),
      barrierColor: dart.nullable(ui.Color),
      barrierLabel: dart.nullable(core.String),
      popGestureEnabled: core.bool,
      popGestureInProgress: core.bool,
      previousTitle: change_notifier.ValueListenable$(dart.nullable(core.String)),
      transitionDuration: core.Duration
    }));
    dart.setLibraryUri(GetPageRouteTransitionMixin, I[8]);
    dart.setFieldSignature(GetPageRouteTransitionMixin, () => ({
      __proto__: dart.getFields(GetPageRouteTransitionMixin.__proto__),
      [_previousTitle]: dart.fieldType(dart.nullable(change_notifier.ValueNotifier$(dart.nullable(core.String))))
    }));
    return GetPageRouteTransitionMixin;
  });
  get_transition_mixin.GetPageRouteTransitionMixin = get_transition_mixin.GetPageRouteTransitionMixin$();
  dart.addTypeTests(get_transition_mixin.GetPageRouteTransitionMixin, _is_GetPageRouteTransitionMixin_default);
  dart.defineLazy(get_transition_mixin, {
    /*get_transition_mixin._kBackGestureWidth*/get _kBackGestureWidth() {
      return 20;
    },
    /*get_transition_mixin._kMaxDroppedSwipePageForwardAnimationTime*/get _kMaxDroppedSwipePageForwardAnimationTime() {
      return 800;
    },
    /*get_transition_mixin._kMaxPageBackAnimationTime*/get _kMaxPageBackAnimationTime() {
      return 300;
    },
    /*get_transition_mixin._kMinFlingVelocity*/get _kMinFlingVelocity() {
      return 1;
    }
  }, false);
  const _is_PageRouteReportMixin_default = Symbol('_is_PageRouteReportMixin_default');
  default_route.PageRouteReportMixin$ = dart.generic(T => {
    class PageRouteReportMixin extends navigator.Route$(T) {}
    PageRouteReportMixin[dart.mixinOn] = Route => class PageRouteReportMixin extends Route {
      install() {
        super.install();
        router_report.RouterReportManager.reportCurrentRoute(this);
      }
      dispose() {
        super.dispose();
        router_report.RouterReportManager.reportRouteDispose(this);
      }
    };
    dart.addTypeTests(PageRouteReportMixin);
    PageRouteReportMixin.prototype[_is_PageRouteReportMixin_default] = true;
    dart.addTypeCaches(PageRouteReportMixin);
    PageRouteReportMixin[dart.implements] = () => [navigator.Route$(T)];
    dart.setLibraryUri(PageRouteReportMixin, I[10]);
    return PageRouteReportMixin;
  });
  default_route.PageRouteReportMixin = default_route.PageRouteReportMixin$();
  dart.addTypeTests(default_route.PageRouteReportMixin, _is_PageRouteReportMixin_default);
  var transitionDuration$0 = dart.privateName(default_route, "GetPageRoute.transitionDuration");
  var page$0 = dart.privateName(default_route, "GetPageRoute.page");
  var routeName$ = dart.privateName(default_route, "GetPageRoute.routeName");
  var customTransition$0 = dart.privateName(default_route, "GetPageRoute.customTransition");
  var binding$1 = dart.privateName(default_route, "GetPageRoute.binding");
  var parameter$ = dart.privateName(default_route, "GetPageRoute.parameter");
  var bindings$0 = dart.privateName(default_route, "GetPageRoute.bindings");
  var showCupertinoParallax$0 = dart.privateName(default_route, "GetPageRoute.showCupertinoParallax");
  var opaque$0 = dart.privateName(default_route, "GetPageRoute.opaque");
  var popGesture$0 = dart.privateName(default_route, "GetPageRoute.popGesture");
  var barrierDismissible$ = dart.privateName(default_route, "GetPageRoute.barrierDismissible");
  var transition$0 = dart.privateName(default_route, "GetPageRoute.transition");
  var curve$0 = dart.privateName(default_route, "GetPageRoute.curve");
  var alignment$0 = dart.privateName(default_route, "GetPageRoute.alignment");
  var middlewares$0 = dart.privateName(default_route, "GetPageRoute.middlewares");
  var barrierColor$ = dart.privateName(default_route, "GetPageRoute.barrierColor");
  var barrierLabel$ = dart.privateName(default_route, "GetPageRoute.barrierLabel");
  var maintainState$0 = dart.privateName(default_route, "GetPageRoute.maintainState");
  var title$1 = dart.privateName(default_route, "GetPageRoute.title");
  var gestureWidth$1 = dart.privateName(default_route, "GetPageRoute.gestureWidth");
  var _child = dart.privateName(default_route, "_child");
  var _getChild = dart.privateName(default_route, "_getChild");
  const _is_GetPageRoute_default = Symbol('_is_GetPageRoute_default');
  default_route.GetPageRoute$ = dart.generic(T => {
    const PageRoute_GetPageRouteTransitionMixin$36 = class PageRoute_GetPageRouteTransitionMixin extends pages.PageRoute$(T) {};
    (PageRoute_GetPageRouteTransitionMixin$36.new = function(opts) {
      get_transition_mixin.GetPageRouteTransitionMixin$(T)[dart.mixinNew].call(this);
      PageRoute_GetPageRouteTransitionMixin$36.__proto__.new.call(this, opts);
    }).prototype = PageRoute_GetPageRouteTransitionMixin$36.prototype;
    dart.applyMixin(PageRoute_GetPageRouteTransitionMixin$36, get_transition_mixin.GetPageRouteTransitionMixin$(T));
    const PageRoute_PageRouteReportMixin$36 = class PageRoute_PageRouteReportMixin extends PageRoute_GetPageRouteTransitionMixin$36 {};
    (PageRoute_PageRouteReportMixin$36.new = function(opts) {
      PageRoute_PageRouteReportMixin$36.__proto__.new.call(this, opts);
    }).prototype = PageRoute_PageRouteReportMixin$36.prototype;
    dart.applyMixin(PageRoute_PageRouteReportMixin$36, default_route.PageRouteReportMixin$(T));
    class GetPageRoute extends PageRoute_PageRouteReportMixin$36 {
      get transitionDuration() {
        return this[transitionDuration$0];
      }
      set transitionDuration(value) {
        super.transitionDuration = value;
      }
      get page() {
        return this[page$0];
      }
      set page(value) {
        super.page = value;
      }
      get routeName() {
        return this[routeName$];
      }
      set routeName(value) {
        super.routeName = value;
      }
      get customTransition() {
        return this[customTransition$0];
      }
      set customTransition(value) {
        super.customTransition = value;
      }
      get binding() {
        return this[binding$1];
      }
      set binding(value) {
        super.binding = value;
      }
      get parameter() {
        return this[parameter$];
      }
      set parameter(value) {
        super.parameter = value;
      }
      get bindings() {
        return this[bindings$0];
      }
      set bindings(value) {
        super.bindings = value;
      }
      get showCupertinoParallax() {
        return this[showCupertinoParallax$0];
      }
      set showCupertinoParallax(value) {
        super.showCupertinoParallax = value;
      }
      get opaque() {
        return this[opaque$0];
      }
      set opaque(value) {
        super.opaque = value;
      }
      get popGesture() {
        return this[popGesture$0];
      }
      set popGesture(value) {
        super.popGesture = value;
      }
      get barrierDismissible() {
        return this[barrierDismissible$];
      }
      set barrierDismissible(value) {
        super.barrierDismissible = value;
      }
      get transition() {
        return this[transition$0];
      }
      set transition(value) {
        super.transition = value;
      }
      get curve() {
        return this[curve$0];
      }
      set curve(value) {
        super.curve = value;
      }
      get alignment() {
        return this[alignment$0];
      }
      set alignment(value) {
        super.alignment = value;
      }
      get middlewares() {
        return this[middlewares$0];
      }
      set middlewares(value) {
        super.middlewares = value;
      }
      get barrierColor() {
        return this[barrierColor$];
      }
      set barrierColor(value) {
        super.barrierColor = value;
      }
      get barrierLabel() {
        return this[barrierLabel$];
      }
      set barrierLabel(value) {
        super.barrierLabel = value;
      }
      get maintainState() {
        return this[maintainState$0];
      }
      set maintainState(value) {
        super.maintainState = value;
      }
      get title() {
        return this[title$1];
      }
      set title(value) {
        super.title = value;
      }
      get gestureWidth() {
        return this[gestureWidth$1];
      }
      set gestureWidth(value) {
        super.gestureWidth = value;
      }
      static ['_#new#tearOff'](T, opts) {
        let settings = opts && 'settings' in opts ? opts.settings : null;
        let transitionDuration = opts && 'transitionDuration' in opts ? opts.transitionDuration : C[121] || CT.C121;
        let opaque = opts && 'opaque' in opts ? opts.opaque : true;
        let parameter = opts && 'parameter' in opts ? opts.parameter : null;
        let gestureWidth = opts && 'gestureWidth' in opts ? opts.gestureWidth : null;
        let curve = opts && 'curve' in opts ? opts.curve : null;
        let alignment = opts && 'alignment' in opts ? opts.alignment : null;
        let transition = opts && 'transition' in opts ? opts.transition : null;
        let popGesture = opts && 'popGesture' in opts ? opts.popGesture : null;
        let customTransition = opts && 'customTransition' in opts ? opts.customTransition : null;
        let barrierDismissible = opts && 'barrierDismissible' in opts ? opts.barrierDismissible : false;
        let barrierColor = opts && 'barrierColor' in opts ? opts.barrierColor : null;
        let binding = opts && 'binding' in opts ? opts.binding : null;
        let bindings = opts && 'bindings' in opts ? opts.bindings : null;
        let routeName = opts && 'routeName' in opts ? opts.routeName : null;
        let page = opts && 'page' in opts ? opts.page : null;
        let title = opts && 'title' in opts ? opts.title : null;
        let showCupertinoParallax = opts && 'showCupertinoParallax' in opts ? opts.showCupertinoParallax : true;
        let barrierLabel = opts && 'barrierLabel' in opts ? opts.barrierLabel : null;
        let maintainState = opts && 'maintainState' in opts ? opts.maintainState : true;
        let fullscreenDialog = opts && 'fullscreenDialog' in opts ? opts.fullscreenDialog : false;
        let middlewares = opts && 'middlewares' in opts ? opts.middlewares : null;
        return new (default_route.GetPageRoute$(T)).new({settings: settings, transitionDuration: transitionDuration, opaque: opaque, parameter: parameter, gestureWidth: gestureWidth, curve: curve, alignment: alignment, transition: transition, popGesture: popGesture, customTransition: customTransition, barrierDismissible: barrierDismissible, barrierColor: barrierColor, binding: binding, bindings: bindings, routeName: routeName, page: page, title: title, showCupertinoParallax: showCupertinoParallax, barrierLabel: barrierLabel, maintainState: maintainState, fullscreenDialog: fullscreenDialog, middlewares: middlewares});
      }
      dispose() {
        super.dispose();
        let middlewareRunner = new route_middleware.MiddlewareRunner.new(this.middlewares);
        middlewareRunner.runOnPageDispose();
      }
      [_getChild]() {
        if (this[_child] != null) return dart.nullCheck(this[_child]);
        let middlewareRunner = new route_middleware.MiddlewareRunner.new(this.middlewares);
        let localbindings = (() => {
          let t15 = T$.JSArrayOfBindings().of([]);
          if (this.bindings != null) t15[$addAll](dart.nullCheck(this.bindings));
          if (this.binding != null) t15[$addAll](T$.JSArrayOfBindings().of([dart.nullCheck(this.binding)]));
          return t15;
        })();
        let bindingsToBind = middlewareRunner.runOnBindingsStart(localbindings);
        if (bindingsToBind != null) {
          for (let binding of bindingsToBind) {
            binding.dependencies();
          }
        }
        let pageToBuild = dart.nullCheck(middlewareRunner.runOnPageBuildStart(this.page));
        this[_child] = middlewareRunner.runOnPageBuilt(pageToBuild());
        return dart.nullCheck(this[_child]);
      }
      buildContent(context) {
        return this[_getChild]();
      }
      get debugLabel() {
        return super.debugLabel + "(" + dart.str(this.settings.name) + ")";
      }
    }
    (GetPageRoute.new = function(opts) {
      let settings = opts && 'settings' in opts ? opts.settings : null;
      let transitionDuration = opts && 'transitionDuration' in opts ? opts.transitionDuration : C[121] || CT.C121;
      let opaque = opts && 'opaque' in opts ? opts.opaque : true;
      let parameter = opts && 'parameter' in opts ? opts.parameter : null;
      let gestureWidth = opts && 'gestureWidth' in opts ? opts.gestureWidth : null;
      let curve = opts && 'curve' in opts ? opts.curve : null;
      let alignment = opts && 'alignment' in opts ? opts.alignment : null;
      let transition = opts && 'transition' in opts ? opts.transition : null;
      let popGesture = opts && 'popGesture' in opts ? opts.popGesture : null;
      let customTransition = opts && 'customTransition' in opts ? opts.customTransition : null;
      let barrierDismissible = opts && 'barrierDismissible' in opts ? opts.barrierDismissible : false;
      let barrierColor = opts && 'barrierColor' in opts ? opts.barrierColor : null;
      let binding = opts && 'binding' in opts ? opts.binding : null;
      let bindings = opts && 'bindings' in opts ? opts.bindings : null;
      let routeName = opts && 'routeName' in opts ? opts.routeName : null;
      let page = opts && 'page' in opts ? opts.page : null;
      let title = opts && 'title' in opts ? opts.title : null;
      let showCupertinoParallax = opts && 'showCupertinoParallax' in opts ? opts.showCupertinoParallax : true;
      let barrierLabel = opts && 'barrierLabel' in opts ? opts.barrierLabel : null;
      let maintainState = opts && 'maintainState' in opts ? opts.maintainState : true;
      let fullscreenDialog = opts && 'fullscreenDialog' in opts ? opts.fullscreenDialog : false;
      let middlewares = opts && 'middlewares' in opts ? opts.middlewares : null;
      this[_child] = null;
      this[transitionDuration$0] = transitionDuration;
      this[opaque$0] = opaque;
      this[parameter$] = parameter;
      this[gestureWidth$1] = gestureWidth;
      this[curve$0] = curve;
      this[alignment$0] = alignment;
      this[transition$0] = transition;
      this[popGesture$0] = popGesture;
      this[customTransition$0] = customTransition;
      this[barrierDismissible$] = barrierDismissible;
      this[barrierColor$] = barrierColor;
      this[binding$1] = binding;
      this[bindings$0] = bindings;
      this[routeName$] = routeName;
      this[page$0] = page;
      this[title$1] = title;
      this[showCupertinoParallax$0] = showCupertinoParallax;
      this[barrierLabel$] = barrierLabel;
      this[maintainState$0] = maintainState;
      this[middlewares$0] = middlewares;
      GetPageRoute.__proto__.new.call(this, {settings: settings, fullscreenDialog: fullscreenDialog});
      ;
    }).prototype = GetPageRoute.prototype;
    dart.addTypeTests(GetPageRoute);
    GetPageRoute.prototype[_is_GetPageRoute_default] = true;
    dart.addTypeCaches(GetPageRoute);
    dart.setMethodSignature(GetPageRoute, () => ({
      __proto__: dart.getMethods(GetPageRoute.__proto__),
      [_getChild]: dart.fnType(framework.Widget, []),
      buildContent: dart.fnType(framework.Widget, [framework.BuildContext])
    }));
    dart.setLibraryUri(GetPageRoute, I[10]);
    dart.setFieldSignature(GetPageRoute, () => ({
      __proto__: dart.getFields(GetPageRoute.__proto__),
      transitionDuration: dart.finalFieldType(core.Duration),
      page: dart.finalFieldType(dart.nullable(dart.fnType(framework.Widget, []))),
      routeName: dart.finalFieldType(dart.nullable(core.String)),
      customTransition: dart.finalFieldType(dart.nullable(custom_transition.CustomTransition)),
      binding: dart.finalFieldType(dart.nullable(bindings_interface.Bindings)),
      parameter: dart.finalFieldType(dart.nullable(core.Map$(core.String, core.String))),
      bindings: dart.finalFieldType(dart.nullable(core.List$(bindings_interface.Bindings))),
      showCupertinoParallax: dart.finalFieldType(core.bool),
      opaque: dart.finalFieldType(core.bool),
      popGesture: dart.finalFieldType(dart.nullable(core.bool)),
      barrierDismissible: dart.finalFieldType(core.bool),
      transition: dart.finalFieldType(dart.nullable(transitions_type.Transition)),
      curve: dart.finalFieldType(dart.nullable(curves.Curve)),
      alignment: dart.finalFieldType(dart.nullable(alignment.Alignment)),
      middlewares: dart.finalFieldType(dart.nullable(core.List$(route_middleware.GetMiddleware))),
      barrierColor: dart.finalFieldType(dart.nullable(ui.Color)),
      barrierLabel: dart.finalFieldType(dart.nullable(core.String)),
      maintainState: dart.finalFieldType(core.bool),
      [_child]: dart.fieldType(dart.nullable(framework.Widget)),
      title: dart.finalFieldType(dart.nullable(core.String)),
      gestureWidth: dart.finalFieldType(dart.nullable(dart.fnType(core.double, [framework.BuildContext])))
    }));
    return GetPageRoute;
  });
  default_route.GetPageRoute = default_route.GetPageRoute$();
  dart.addTypeTests(default_route.GetPageRoute, _is_GetPageRoute_default);
  var testMode = dart.privateName(root_controller, "GetMaterialController.testMode");
  var unikey = dart.privateName(root_controller, "GetMaterialController.unikey");
  var theme$0 = dart.privateName(root_controller, "GetMaterialController.theme");
  var darkTheme = dart.privateName(root_controller, "GetMaterialController.darkTheme");
  var themeMode = dart.privateName(root_controller, "GetMaterialController.themeMode");
  var scaffoldMessengerKey = dart.privateName(root_controller, "GetMaterialController.scaffoldMessengerKey");
  var defaultPopGesture = dart.privateName(root_controller, "GetMaterialController.defaultPopGesture");
  var defaultOpaqueRoute = dart.privateName(root_controller, "GetMaterialController.defaultOpaqueRoute");
  var defaultTransition = dart.privateName(root_controller, "GetMaterialController.defaultTransition");
  var defaultTransitionDuration = dart.privateName(root_controller, "GetMaterialController.defaultTransitionDuration");
  var defaultTransitionCurve = dart.privateName(root_controller, "GetMaterialController.defaultTransitionCurve");
  var defaultDialogTransitionCurve = dart.privateName(root_controller, "GetMaterialController.defaultDialogTransitionCurve");
  var defaultDialogTransitionDuration = dart.privateName(root_controller, "GetMaterialController.defaultDialogTransitionDuration");
  var routing = dart.privateName(root_controller, "GetMaterialController.routing");
  var parameters = dart.privateName(root_controller, "GetMaterialController.parameters");
  var customTransition = dart.privateName(root_controller, "GetMaterialController.customTransition");
  var keys = dart.privateName(root_controller, "GetMaterialController.keys");
  var _key = dart.privateName(root_controller, "_key");
  rx_disposable.DisposableInterface = class DisposableInterface extends lifecycle.GetLifeCycle {
    onInit() {
      super.onInit();
      extension_navigation['GetNavigation|get#engine'](get_main.Get).addPostFrameCallback(dart.fn(_ => this.onReady(), T$.DurationTovoid()));
    }
    onReady() {
      super.onReady();
    }
    onClose() {
      super.onClose();
    }
  };
  (rx_disposable.DisposableInterface.new = function() {
    rx_disposable.DisposableInterface.__proto__.new.call(this);
    ;
  }).prototype = rx_disposable.DisposableInterface.prototype;
  dart.addTypeTests(rx_disposable.DisposableInterface);
  dart.addTypeCaches(rx_disposable.DisposableInterface);
  dart.setLibraryUri(rx_disposable.DisposableInterface, I[11]);
  const DisposableInterface_ListenableMixin$36 = class DisposableInterface_ListenableMixin extends rx_disposable.DisposableInterface {};
  (DisposableInterface_ListenableMixin$36.new = function() {
    DisposableInterface_ListenableMixin$36.__proto__.new.call(this);
  }).prototype = DisposableInterface_ListenableMixin$36.prototype;
  dart.applyMixin(DisposableInterface_ListenableMixin$36, list_notifier.ListenableMixin);
  const DisposableInterface_ListNotifierMixin$36 = class DisposableInterface_ListNotifierMixin extends DisposableInterface_ListenableMixin$36 {};
  (DisposableInterface_ListNotifierMixin$36.new = function() {
    list_notifier.ListNotifierMixin[dart.mixinNew].call(this);
    DisposableInterface_ListNotifierMixin$36.__proto__.new.call(this);
  }).prototype = DisposableInterface_ListNotifierMixin$36.prototype;
  dart.applyMixin(DisposableInterface_ListNotifierMixin$36, list_notifier.ListNotifierMixin);
  get_controllers.GetxController = class GetxController extends DisposableInterface_ListNotifierMixin$36 {
    update(ids = null, condition = true) {
      if (!condition) {
        return;
      }
      if (ids == null) {
        this.refresh();
      } else {
        for (let id of ids) {
          this.refreshGroup(id);
        }
      }
    }
  };
  (get_controllers.GetxController.new = function() {
    get_controllers.GetxController.__proto__.new.call(this);
    ;
  }).prototype = get_controllers.GetxController.prototype;
  dart.addTypeTests(get_controllers.GetxController);
  dart.addTypeCaches(get_controllers.GetxController);
  dart.setMethodSignature(get_controllers.GetxController, () => ({
    __proto__: dart.getMethods(get_controllers.GetxController.__proto__),
    update: dart.fnType(dart.void, [], [dart.nullable(core.List$(core.Object)), core.bool])
  }));
  dart.setLibraryUri(get_controllers.GetxController, I[12]);
  const GetxController_WidgetsBindingObserver$36 = class GetxController_WidgetsBindingObserver extends get_controllers.GetxController {};
  (GetxController_WidgetsBindingObserver$36.new = function() {
    GetxController_WidgetsBindingObserver$36.__proto__.new.call(this);
  }).prototype = GetxController_WidgetsBindingObserver$36.prototype;
  dart.applyMixin(GetxController_WidgetsBindingObserver$36, binding.WidgetsBindingObserver);
  get_controllers.FullLifeCycleController = class FullLifeCycleController extends GetxController_WidgetsBindingObserver$36 {};
  (get_controllers.FullLifeCycleController.new = function() {
    get_controllers.FullLifeCycleController.__proto__.new.call(this);
    ;
  }).prototype = get_controllers.FullLifeCycleController.prototype;
  dart.addTypeTests(get_controllers.FullLifeCycleController);
  dart.addTypeCaches(get_controllers.FullLifeCycleController);
  dart.setLibraryUri(get_controllers.FullLifeCycleController, I[12]);
  get_controllers.FullLifeCycleMixin = class FullLifeCycleMixin extends get_controllers.FullLifeCycleController {};
  get_controllers.FullLifeCycleMixin[dart.mixinOn] = FullLifeCycleController => class FullLifeCycleMixin extends FullLifeCycleController {
    onInit() {
      let t16;
      super.onInit();
      t16 = get_core.ambiguate(binding.WidgetsBinding, binding.WidgetsBinding.instance);
      t16 == null ? null : t16.addObserver(this);
    }
    onClose() {
      let t16;
      t16 = get_core.ambiguate(binding.WidgetsBinding, binding.WidgetsBinding.instance);
      t16 == null ? null : t16.removeObserver(this);
      super.onClose();
    }
    didChangeAppLifecycleState(state) {
      switch (state) {
        case C[122] || CT.C122:
          {
            this.onResumed();
            break;
          }
        case C[123] || CT.C123:
          {
            this.onInactive();
            break;
          }
        case C[124] || CT.C124:
          {
            this.onPaused();
            break;
          }
        case C[125] || CT.C125:
          {
            this.onDetached();
            break;
          }
      }
    }
  };
  dart.addTypeTests(get_controllers.FullLifeCycleMixin);
  dart.addTypeCaches(get_controllers.FullLifeCycleMixin);
  get_controllers.FullLifeCycleMixin[dart.implements] = () => [get_controllers.FullLifeCycleController];
  dart.setLibraryUri(get_controllers.FullLifeCycleMixin, I[12]);
  var _value = dart.privateName(rx_notifier, "StateMixin._value");
  var _status = dart.privateName(rx_notifier, "StateMixin._status");
  var _value$ = dart.privateName(rx_notifier, "_value");
  var _status$ = dart.privateName(rx_notifier, "_status");
  var _isNullOrEmpty = dart.privateName(rx_notifier, "_isNullOrEmpty");
  var _fillEmptyStatus = dart.privateName(rx_notifier, "_fillEmptyStatus");
  const _is_StateMixin_default = Symbol('_is_StateMixin_default');
  rx_notifier.StateMixin$ = dart.generic(T => {
    var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
    var __t$FutureOfT = () => (__t$FutureOfT = dart.constFn(async.Future$(T)))();
    var __t$VoidToFutureOfT = () => (__t$VoidToFutureOfT = dart.constFn(dart.fnType(__t$FutureOfT(), [])))();
    var __t$VoidToFn = () => (__t$VoidToFn = dart.constFn(dart.fnType(__t$VoidToFutureOfT(), [])))();
    var __t$TToNull = () => (__t$TToNull = dart.constFn(dart.fnType(core.Null, [T])))();
    class StateMixin extends list_notifier.ListNotifierMixin {}
    StateMixin[dart.mixinOn] = ListNotifierMixin => class StateMixin extends ListNotifierMixin {
      get [_value$]() {
        return this[_value];
      }
      set [_value$](value) {
        this[_value] = value;
      }
      get [_status$]() {
        return this[_status];
      }
      set [_status$](value) {
        this[_status] = value;
      }
      [_isNullOrEmpty](val) {
        if (val == null) return true;
        let result = false;
        if (core.Iterable.is(val)) {
          result = val[$isEmpty];
        } else if (typeof val == 'string') {
          result = val[$isEmpty];
        } else if (core.Map.is(val)) {
          result = val[$isEmpty];
        }
        return result;
      }
      [_fillEmptyStatus]() {
        this[_status$] = this[_isNullOrEmpty](this[_value$]) ? rx_notifier.RxStatus.loading() : rx_notifier.RxStatus.success();
      }
      get status() {
        let t16;
        this.notifyChildrens();
        t16 = this[_status$];
        return t16 == null ? this[_status$] = this[_status$] = rx_notifier.RxStatus.loading() : t16;
      }
      get state() {
        return this.value;
      }
      get value() {
        this.notifyChildrens();
        return this[_value$];
      }
      set value(newValue) {
        __t$TN().as(newValue);
        if (dart.equals(this[_value$], newValue)) return;
        this[_value$] = newValue;
        this.refresh();
      }
      change(newState, opts) {
        __t$TN().as(newState);
        let status = opts && 'status' in opts ? opts.status : null;
        let _canUpdate = false;
        if (status != null) {
          this[_status$] = status;
          _canUpdate = true;
        }
        if (!dart.equals(newState, this[_value$])) {
          this[_value$] = newState;
          _canUpdate = true;
        }
        if (_canUpdate) {
          this.refresh();
        }
      }
      append(body, opts) {
        __t$VoidToFn().as(body);
        let errorMessage = opts && 'errorMessage' in opts ? opts.errorMessage : null;
        let compute = body();
        compute().then(core.Null, dart.fn(newValue => {
          this.change(newValue, {status: rx_notifier.RxStatus.success()});
        }, __t$TToNull()), {onError: dart.fn(err => {
            let t16;
            this.change(this.state, {status: rx_notifier.RxStatus.error((t16 = errorMessage, t16 == null ? dart.toString(err) : t16))});
          }, T$.dynamicToNull())});
      }
    };
    (StateMixin[dart.mixinNew] = function() {
      this[_value] = null;
      this[_status] = null;
    }).prototype = StateMixin.prototype;
    dart.addTypeTests(StateMixin);
    StateMixin.prototype[_is_StateMixin_default] = true;
    dart.addTypeCaches(StateMixin);
    StateMixin[dart.implements] = () => [list_notifier.ListNotifierMixin];
    dart.setMethodSignature(StateMixin, () => ({
      __proto__: dart.getMethods(StateMixin.__proto__),
      [_isNullOrEmpty]: dart.fnType(core.bool, [dart.dynamic]),
      [_fillEmptyStatus]: dart.fnType(dart.void, []),
      change: dart.fnType(dart.void, [dart.nullable(core.Object)], {status: dart.nullable(rx_notifier.RxStatus)}, {}),
      append: dart.fnType(dart.void, [dart.nullable(core.Object)], {errorMessage: dart.nullable(core.String)}, {})
    }));
    dart.setGetterSignature(StateMixin, () => ({
      __proto__: dart.getGetters(StateMixin.__proto__),
      status: rx_notifier.RxStatus,
      state: dart.nullable(T),
      value: dart.nullable(T)
    }));
    dart.setSetterSignature(StateMixin, () => ({
      __proto__: dart.getSetters(StateMixin.__proto__),
      value: dart.nullable(core.Object)
    }));
    dart.setLibraryUri(StateMixin, I[13]);
    dart.setFieldSignature(StateMixin, () => ({
      __proto__: dart.getFields(StateMixin.__proto__),
      [_value$]: dart.fieldType(dart.nullable(T)),
      [_status$]: dart.fieldType(dart.nullable(rx_notifier.RxStatus))
    }));
    return StateMixin;
  });
  rx_notifier.StateMixin = rx_notifier.StateMixin$();
  dart.addTypeTests(rx_notifier.StateMixin, _is_StateMixin_default);
  const _is_SuperController_default = Symbol('_is_SuperController_default');
  get_controllers.SuperController$ = dart.generic(T => {
    const FullLifeCycleController_FullLifeCycleMixin$36 = class FullLifeCycleController_FullLifeCycleMixin extends get_controllers.FullLifeCycleController {};
    (FullLifeCycleController_FullLifeCycleMixin$36.new = function() {
      FullLifeCycleController_FullLifeCycleMixin$36.__proto__.new.call(this);
    }).prototype = FullLifeCycleController_FullLifeCycleMixin$36.prototype;
    dart.applyMixin(FullLifeCycleController_FullLifeCycleMixin$36, get_controllers.FullLifeCycleMixin);
    const FullLifeCycleController_StateMixin$36 = class FullLifeCycleController_StateMixin extends FullLifeCycleController_FullLifeCycleMixin$36 {};
    (FullLifeCycleController_StateMixin$36.new = function() {
      rx_notifier.StateMixin$(T)[dart.mixinNew].call(this);
      FullLifeCycleController_StateMixin$36.__proto__.new.call(this);
    }).prototype = FullLifeCycleController_StateMixin$36.prototype;
    dart.applyMixin(FullLifeCycleController_StateMixin$36, rx_notifier.StateMixin$(T));
    class SuperController extends FullLifeCycleController_StateMixin$36 {}
    (SuperController.new = function() {
      SuperController.__proto__.new.call(this);
      ;
    }).prototype = SuperController.prototype;
    dart.addTypeTests(SuperController);
    SuperController.prototype[_is_SuperController_default] = true;
    dart.addTypeCaches(SuperController);
    dart.setLibraryUri(SuperController, I[12]);
    return SuperController;
  });
  get_controllers.SuperController = get_controllers.SuperController$();
  dart.addTypeTests(get_controllers.SuperController, _is_SuperController_default);
  root_controller.GetMaterialController = class GetMaterialController extends get_controllers.SuperController {
    get testMode() {
      return this[testMode];
    }
    set testMode(value) {
      this[testMode] = value;
    }
    get unikey() {
      return this[unikey];
    }
    set unikey(value) {
      this[unikey] = value;
    }
    get theme() {
      return this[theme$0];
    }
    set theme(value) {
      this[theme$0] = value;
    }
    get darkTheme() {
      return this[darkTheme];
    }
    set darkTheme(value) {
      this[darkTheme] = value;
    }
    get themeMode() {
      return this[themeMode];
    }
    set themeMode(value) {
      this[themeMode] = value;
    }
    get scaffoldMessengerKey() {
      return this[scaffoldMessengerKey];
    }
    set scaffoldMessengerKey(value) {
      super.scaffoldMessengerKey = value;
    }
    get defaultPopGesture() {
      return this[defaultPopGesture];
    }
    set defaultPopGesture(value) {
      this[defaultPopGesture] = value;
    }
    get defaultOpaqueRoute() {
      return this[defaultOpaqueRoute];
    }
    set defaultOpaqueRoute(value) {
      this[defaultOpaqueRoute] = value;
    }
    get defaultTransition() {
      return this[defaultTransition];
    }
    set defaultTransition(value) {
      this[defaultTransition] = value;
    }
    get defaultTransitionDuration() {
      return this[defaultTransitionDuration];
    }
    set defaultTransitionDuration(value) {
      this[defaultTransitionDuration] = value;
    }
    get defaultTransitionCurve() {
      return this[defaultTransitionCurve];
    }
    set defaultTransitionCurve(value) {
      this[defaultTransitionCurve] = value;
    }
    get defaultDialogTransitionCurve() {
      return this[defaultDialogTransitionCurve];
    }
    set defaultDialogTransitionCurve(value) {
      this[defaultDialogTransitionCurve] = value;
    }
    get defaultDialogTransitionDuration() {
      return this[defaultDialogTransitionDuration];
    }
    set defaultDialogTransitionDuration(value) {
      this[defaultDialogTransitionDuration] = value;
    }
    get routing() {
      return this[routing];
    }
    set routing(value) {
      super.routing = value;
    }
    get parameters() {
      return this[parameters];
    }
    set parameters(value) {
      this[parameters] = value;
    }
    get customTransition() {
      return this[customTransition];
    }
    set customTransition(value) {
      this[customTransition] = value;
    }
    get keys() {
      return this[keys];
    }
    set keys(value) {
      this[keys] = value;
    }
    get key() {
      return this[_key];
    }
    addKey(newKey) {
      this[_key] = newKey;
      return this.key;
    }
    didChangeLocales(locales) {
      event_loop_extensions['LoopEventsExt|asap'](core.Null, get_main.Get, dart.fn(() => {
        let locale = extension_navigation['GetNavigation|get#deviceLocale'](get_main.Get);
        if (locale != null) {
          extension_navigation['GetNavigation|updateLocale'](get_main.Get, locale);
        }
      }, T$.VoidToNull()));
    }
    onDetached() {
    }
    onInactive() {
    }
    onPaused() {
    }
    onResumed() {
    }
    restartApp() {
      this.unikey = new key.UniqueKey.new();
      this.update();
    }
    setTheme(value) {
      if (this.darkTheme == null) {
        this.theme = value;
      } else {
        if (value.brightness === ui.Brightness.light) {
          this.theme = value;
        } else {
          this.darkTheme = value;
        }
      }
      this.update();
    }
    setThemeMode(value) {
      this.themeMode = value;
      this.update();
    }
    static ['_#new#tearOff']() {
      return new root_controller.GetMaterialController.new();
    }
  };
  (root_controller.GetMaterialController.new = function() {
    this[testMode] = false;
    this[unikey] = null;
    this[theme$0] = null;
    this[darkTheme] = null;
    this[themeMode] = null;
    this[scaffoldMessengerKey] = T$.GlobalKeyOfScaffoldMessengerState().new();
    this[defaultPopGesture] = platform.GetPlatform.isIOS;
    this[defaultOpaqueRoute] = true;
    this[defaultTransition] = null;
    this[defaultTransitionDuration] = new core.Duration.new({milliseconds: 300});
    this[defaultTransitionCurve] = curves.Curves.easeOutQuad;
    this[defaultDialogTransitionCurve] = curves.Curves.easeOutQuad;
    this[defaultDialogTransitionDuration] = new core.Duration.new({milliseconds: 300});
    this[routing] = new route_observer.Routing.new();
    this[parameters] = new (T$.IdentityMapOfString$StringN()).new();
    this[customTransition] = null;
    this[_key] = T$.GlobalKeyOfNavigatorState().new({debugLabel: "Key Created by default"});
    this[keys] = new (T$.LinkedMapOfdynamic$GlobalKeyOfNavigatorState()).new();
    root_controller.GetMaterialController.__proto__.new.call(this);
    ;
  }).prototype = root_controller.GetMaterialController.prototype;
  dart.addTypeTests(root_controller.GetMaterialController);
  dart.addTypeCaches(root_controller.GetMaterialController);
  dart.setMethodSignature(root_controller.GetMaterialController, () => ({
    __proto__: dart.getMethods(root_controller.GetMaterialController.__proto__),
    addKey: dart.fnType(dart.nullable(framework.GlobalKey$(navigator.NavigatorState)), [framework.GlobalKey$(navigator.NavigatorState)]),
    onDetached: dart.fnType(dart.void, []),
    onInactive: dart.fnType(dart.void, []),
    onPaused: dart.fnType(dart.void, []),
    onResumed: dart.fnType(dart.void, []),
    restartApp: dart.fnType(dart.void, []),
    setTheme: dart.fnType(dart.void, [theme_data.ThemeData]),
    setThemeMode: dart.fnType(dart.void, [app.ThemeMode])
  }));
  dart.setGetterSignature(root_controller.GetMaterialController, () => ({
    __proto__: dart.getGetters(root_controller.GetMaterialController.__proto__),
    key: framework.GlobalKey$(navigator.NavigatorState)
  }));
  dart.setLibraryUri(root_controller.GetMaterialController, I[14]);
  dart.setFieldSignature(root_controller.GetMaterialController, () => ({
    __proto__: dart.getFields(root_controller.GetMaterialController.__proto__),
    testMode: dart.fieldType(core.bool),
    unikey: dart.fieldType(dart.nullable(key.Key)),
    theme: dart.fieldType(dart.nullable(theme_data.ThemeData)),
    darkTheme: dart.fieldType(dart.nullable(theme_data.ThemeData)),
    themeMode: dart.fieldType(dart.nullable(app.ThemeMode)),
    scaffoldMessengerKey: dart.finalFieldType(framework.GlobalKey$(scaffold.ScaffoldMessengerState)),
    defaultPopGesture: dart.fieldType(core.bool),
    defaultOpaqueRoute: dart.fieldType(core.bool),
    defaultTransition: dart.fieldType(dart.nullable(transitions_type.Transition)),
    defaultTransitionDuration: dart.fieldType(core.Duration),
    defaultTransitionCurve: dart.fieldType(curves.Curve),
    defaultDialogTransitionCurve: dart.fieldType(curves.Curve),
    defaultDialogTransitionDuration: dart.fieldType(core.Duration),
    routing: dart.finalFieldType(route_observer.Routing),
    parameters: dart.fieldType(core.Map$(core.String, dart.nullable(core.String))),
    customTransition: dart.fieldType(dart.nullable(custom_transition.CustomTransition)),
    [_key]: dart.fieldType(framework.GlobalKey$(navigator.NavigatorState)),
    keys: dart.fieldType(core.Map$(dart.dynamic, framework.GlobalKey$(navigator.NavigatorState)))
  }));
  var navigatorKey$ = dart.privateName(get_material_app, "GetMaterialApp.navigatorKey");
  var scaffoldMessengerKey$ = dart.privateName(get_material_app, "GetMaterialApp.scaffoldMessengerKey");
  var home$ = dart.privateName(get_material_app, "GetMaterialApp.home");
  var routes$ = dart.privateName(get_material_app, "GetMaterialApp.routes");
  var initialRoute$ = dart.privateName(get_material_app, "GetMaterialApp.initialRoute");
  var onGenerateRoute$ = dart.privateName(get_material_app, "GetMaterialApp.onGenerateRoute");
  var onGenerateInitialRoutes$ = dart.privateName(get_material_app, "GetMaterialApp.onGenerateInitialRoutes");
  var onUnknownRoute$ = dart.privateName(get_material_app, "GetMaterialApp.onUnknownRoute");
  var navigatorObservers$ = dart.privateName(get_material_app, "GetMaterialApp.navigatorObservers");
  var builder$ = dart.privateName(get_material_app, "GetMaterialApp.builder");
  var title$2 = dart.privateName(get_material_app, "GetMaterialApp.title");
  var onGenerateTitle$ = dart.privateName(get_material_app, "GetMaterialApp.onGenerateTitle");
  var theme$1 = dart.privateName(get_material_app, "GetMaterialApp.theme");
  var darkTheme$ = dart.privateName(get_material_app, "GetMaterialApp.darkTheme");
  var themeMode$ = dart.privateName(get_material_app, "GetMaterialApp.themeMode");
  var customTransition$1 = dart.privateName(get_material_app, "GetMaterialApp.customTransition");
  var color$ = dart.privateName(get_material_app, "GetMaterialApp.color");
  var translationsKeys$ = dart.privateName(get_material_app, "GetMaterialApp.translationsKeys");
  var translations$ = dart.privateName(get_material_app, "GetMaterialApp.translations");
  var textDirection$ = dart.privateName(get_material_app, "GetMaterialApp.textDirection");
  var locale$ = dart.privateName(get_material_app, "GetMaterialApp.locale");
  var fallbackLocale$ = dart.privateName(get_material_app, "GetMaterialApp.fallbackLocale");
  var localizationsDelegates$ = dart.privateName(get_material_app, "GetMaterialApp.localizationsDelegates");
  var localeListResolutionCallback$ = dart.privateName(get_material_app, "GetMaterialApp.localeListResolutionCallback");
  var localeResolutionCallback$ = dart.privateName(get_material_app, "GetMaterialApp.localeResolutionCallback");
  var supportedLocales$ = dart.privateName(get_material_app, "GetMaterialApp.supportedLocales");
  var showPerformanceOverlay$ = dart.privateName(get_material_app, "GetMaterialApp.showPerformanceOverlay");
  var checkerboardRasterCacheImages$ = dart.privateName(get_material_app, "GetMaterialApp.checkerboardRasterCacheImages");
  var checkerboardOffscreenLayers$ = dart.privateName(get_material_app, "GetMaterialApp.checkerboardOffscreenLayers");
  var showSemanticsDebugger$ = dart.privateName(get_material_app, "GetMaterialApp.showSemanticsDebugger");
  var debugShowCheckedModeBanner$ = dart.privateName(get_material_app, "GetMaterialApp.debugShowCheckedModeBanner");
  var shortcuts$ = dart.privateName(get_material_app, "GetMaterialApp.shortcuts");
  var scrollBehavior$ = dart.privateName(get_material_app, "GetMaterialApp.scrollBehavior");
  var highContrastTheme$ = dart.privateName(get_material_app, "GetMaterialApp.highContrastTheme");
  var highContrastDarkTheme$ = dart.privateName(get_material_app, "GetMaterialApp.highContrastDarkTheme");
  var actions$ = dart.privateName(get_material_app, "GetMaterialApp.actions");
  var debugShowMaterialGrid$ = dart.privateName(get_material_app, "GetMaterialApp.debugShowMaterialGrid");
  var routingCallback$ = dart.privateName(get_material_app, "GetMaterialApp.routingCallback");
  var defaultTransition$ = dart.privateName(get_material_app, "GetMaterialApp.defaultTransition");
  var opaqueRoute$ = dart.privateName(get_material_app, "GetMaterialApp.opaqueRoute");
  var onInit$ = dart.privateName(get_material_app, "GetMaterialApp.onInit");
  var onReady$ = dart.privateName(get_material_app, "GetMaterialApp.onReady");
  var onDispose$ = dart.privateName(get_material_app, "GetMaterialApp.onDispose");
  var enableLog$ = dart.privateName(get_material_app, "GetMaterialApp.enableLog");
  var logWriterCallback$ = dart.privateName(get_material_app, "GetMaterialApp.logWriterCallback");
  var popGesture$1 = dart.privateName(get_material_app, "GetMaterialApp.popGesture");
  var smartManagement$ = dart.privateName(get_material_app, "GetMaterialApp.smartManagement");
  var initialBinding$ = dart.privateName(get_material_app, "GetMaterialApp.initialBinding");
  var transitionDuration$1 = dart.privateName(get_material_app, "GetMaterialApp.transitionDuration");
  var defaultGlobalState$ = dart.privateName(get_material_app, "GetMaterialApp.defaultGlobalState");
  var getPages$ = dart.privateName(get_material_app, "GetMaterialApp.getPages");
  var unknownRoute$1 = dart.privateName(get_material_app, "GetMaterialApp.unknownRoute");
  var routeInformationProvider$ = dart.privateName(get_material_app, "GetMaterialApp.routeInformationProvider");
  var routeInformationParser$ = dart.privateName(get_material_app, "GetMaterialApp.routeInformationParser");
  var routerDelegate$ = dart.privateName(get_material_app, "GetMaterialApp.routerDelegate");
  var backButtonDispatcher$ = dart.privateName(get_material_app, "GetMaterialApp.backButtonDispatcher");
  var useInheritedMediaQuery$ = dart.privateName(get_material_app, "GetMaterialApp.useInheritedMediaQuery");
  var Locale__countryCode = dart.privateName(ui, "Locale._countryCode");
  var Locale_scriptCode = dart.privateName(ui, "Locale.scriptCode");
  var Locale__languageCode = dart.privateName(ui, "Locale._languageCode");
  get_material_app.GetMaterialApp = class GetMaterialApp extends framework.StatelessWidget {
    get navigatorKey() {
      return this[navigatorKey$];
    }
    set navigatorKey(value) {
      super.navigatorKey = value;
    }
    get scaffoldMessengerKey() {
      return this[scaffoldMessengerKey$];
    }
    set scaffoldMessengerKey(value) {
      super.scaffoldMessengerKey = value;
    }
    get home() {
      return this[home$];
    }
    set home(value) {
      super.home = value;
    }
    get routes() {
      return this[routes$];
    }
    set routes(value) {
      super.routes = value;
    }
    get initialRoute() {
      return this[initialRoute$];
    }
    set initialRoute(value) {
      super.initialRoute = value;
    }
    get onGenerateRoute() {
      return this[onGenerateRoute$];
    }
    set onGenerateRoute(value) {
      super.onGenerateRoute = value;
    }
    get onGenerateInitialRoutes() {
      return this[onGenerateInitialRoutes$];
    }
    set onGenerateInitialRoutes(value) {
      super.onGenerateInitialRoutes = value;
    }
    get onUnknownRoute() {
      return this[onUnknownRoute$];
    }
    set onUnknownRoute(value) {
      super.onUnknownRoute = value;
    }
    get navigatorObservers() {
      return this[navigatorObservers$];
    }
    set navigatorObservers(value) {
      super.navigatorObservers = value;
    }
    get builder() {
      return this[builder$];
    }
    set builder(value) {
      super.builder = value;
    }
    get title() {
      return this[title$2];
    }
    set title(value) {
      super.title = value;
    }
    get onGenerateTitle() {
      return this[onGenerateTitle$];
    }
    set onGenerateTitle(value) {
      super.onGenerateTitle = value;
    }
    get theme() {
      return this[theme$1];
    }
    set theme(value) {
      super.theme = value;
    }
    get darkTheme() {
      return this[darkTheme$];
    }
    set darkTheme(value) {
      super.darkTheme = value;
    }
    get themeMode() {
      return this[themeMode$];
    }
    set themeMode(value) {
      super.themeMode = value;
    }
    get customTransition() {
      return this[customTransition$1];
    }
    set customTransition(value) {
      super.customTransition = value;
    }
    get color() {
      return this[color$];
    }
    set color(value) {
      super.color = value;
    }
    get translationsKeys() {
      return this[translationsKeys$];
    }
    set translationsKeys(value) {
      super.translationsKeys = value;
    }
    get translations() {
      return this[translations$];
    }
    set translations(value) {
      super.translations = value;
    }
    get textDirection() {
      return this[textDirection$];
    }
    set textDirection(value) {
      super.textDirection = value;
    }
    get locale() {
      return this[locale$];
    }
    set locale(value) {
      super.locale = value;
    }
    get fallbackLocale() {
      return this[fallbackLocale$];
    }
    set fallbackLocale(value) {
      super.fallbackLocale = value;
    }
    get localizationsDelegates() {
      return this[localizationsDelegates$];
    }
    set localizationsDelegates(value) {
      super.localizationsDelegates = value;
    }
    get localeListResolutionCallback() {
      return this[localeListResolutionCallback$];
    }
    set localeListResolutionCallback(value) {
      super.localeListResolutionCallback = value;
    }
    get localeResolutionCallback() {
      return this[localeResolutionCallback$];
    }
    set localeResolutionCallback(value) {
      super.localeResolutionCallback = value;
    }
    get supportedLocales() {
      return this[supportedLocales$];
    }
    set supportedLocales(value) {
      super.supportedLocales = value;
    }
    get showPerformanceOverlay() {
      return this[showPerformanceOverlay$];
    }
    set showPerformanceOverlay(value) {
      super.showPerformanceOverlay = value;
    }
    get checkerboardRasterCacheImages() {
      return this[checkerboardRasterCacheImages$];
    }
    set checkerboardRasterCacheImages(value) {
      super.checkerboardRasterCacheImages = value;
    }
    get checkerboardOffscreenLayers() {
      return this[checkerboardOffscreenLayers$];
    }
    set checkerboardOffscreenLayers(value) {
      super.checkerboardOffscreenLayers = value;
    }
    get showSemanticsDebugger() {
      return this[showSemanticsDebugger$];
    }
    set showSemanticsDebugger(value) {
      super.showSemanticsDebugger = value;
    }
    get debugShowCheckedModeBanner() {
      return this[debugShowCheckedModeBanner$];
    }
    set debugShowCheckedModeBanner(value) {
      super.debugShowCheckedModeBanner = value;
    }
    get shortcuts() {
      return this[shortcuts$];
    }
    set shortcuts(value) {
      super.shortcuts = value;
    }
    get scrollBehavior() {
      return this[scrollBehavior$];
    }
    set scrollBehavior(value) {
      super.scrollBehavior = value;
    }
    get highContrastTheme() {
      return this[highContrastTheme$];
    }
    set highContrastTheme(value) {
      super.highContrastTheme = value;
    }
    get highContrastDarkTheme() {
      return this[highContrastDarkTheme$];
    }
    set highContrastDarkTheme(value) {
      super.highContrastDarkTheme = value;
    }
    get actions() {
      return this[actions$];
    }
    set actions(value) {
      super.actions = value;
    }
    get debugShowMaterialGrid() {
      return this[debugShowMaterialGrid$];
    }
    set debugShowMaterialGrid(value) {
      super.debugShowMaterialGrid = value;
    }
    get routingCallback() {
      return this[routingCallback$];
    }
    set routingCallback(value) {
      super.routingCallback = value;
    }
    get defaultTransition() {
      return this[defaultTransition$];
    }
    set defaultTransition(value) {
      super.defaultTransition = value;
    }
    get opaqueRoute() {
      return this[opaqueRoute$];
    }
    set opaqueRoute(value) {
      super.opaqueRoute = value;
    }
    get onInit() {
      return this[onInit$];
    }
    set onInit(value) {
      super.onInit = value;
    }
    get onReady() {
      return this[onReady$];
    }
    set onReady(value) {
      super.onReady = value;
    }
    get onDispose() {
      return this[onDispose$];
    }
    set onDispose(value) {
      super.onDispose = value;
    }
    get enableLog() {
      return this[enableLog$];
    }
    set enableLog(value) {
      super.enableLog = value;
    }
    get logWriterCallback() {
      return this[logWriterCallback$];
    }
    set logWriterCallback(value) {
      super.logWriterCallback = value;
    }
    get popGesture() {
      return this[popGesture$1];
    }
    set popGesture(value) {
      super.popGesture = value;
    }
    get smartManagement() {
      return this[smartManagement$];
    }
    set smartManagement(value) {
      super.smartManagement = value;
    }
    get initialBinding() {
      return this[initialBinding$];
    }
    set initialBinding(value) {
      super.initialBinding = value;
    }
    get transitionDuration() {
      return this[transitionDuration$1];
    }
    set transitionDuration(value) {
      super.transitionDuration = value;
    }
    get defaultGlobalState() {
      return this[defaultGlobalState$];
    }
    set defaultGlobalState(value) {
      super.defaultGlobalState = value;
    }
    get getPages() {
      return this[getPages$];
    }
    set getPages(value) {
      super.getPages = value;
    }
    get unknownRoute() {
      return this[unknownRoute$1];
    }
    set unknownRoute(value) {
      super.unknownRoute = value;
    }
    get routeInformationProvider() {
      return this[routeInformationProvider$];
    }
    set routeInformationProvider(value) {
      super.routeInformationProvider = value;
    }
    get routeInformationParser() {
      return this[routeInformationParser$];
    }
    set routeInformationParser(value) {
      super.routeInformationParser = value;
    }
    get routerDelegate() {
      return this[routerDelegate$];
    }
    set routerDelegate(value) {
      super.routerDelegate = value;
    }
    get backButtonDispatcher() {
      return this[backButtonDispatcher$];
    }
    set backButtonDispatcher(value) {
      super.backButtonDispatcher = value;
    }
    get useInheritedMediaQuery() {
      return this[useInheritedMediaQuery$];
    }
    set useInheritedMediaQuery(value) {
      super.useInheritedMediaQuery = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let navigatorKey = opts && 'navigatorKey' in opts ? opts.navigatorKey : null;
      let scaffoldMessengerKey = opts && 'scaffoldMessengerKey' in opts ? opts.scaffoldMessengerKey : null;
      let home = opts && 'home' in opts ? opts.home : null;
      let routes = opts && 'routes' in opts ? opts.routes : C[126] || CT.C126;
      let initialRoute = opts && 'initialRoute' in opts ? opts.initialRoute : null;
      let onGenerateRoute = opts && 'onGenerateRoute' in opts ? opts.onGenerateRoute : null;
      let onGenerateInitialRoutes = opts && 'onGenerateInitialRoutes' in opts ? opts.onGenerateInitialRoutes : null;
      let onUnknownRoute = opts && 'onUnknownRoute' in opts ? opts.onUnknownRoute : null;
      let useInheritedMediaQuery = opts && 'useInheritedMediaQuery' in opts ? opts.useInheritedMediaQuery : false;
      let navigatorObservers = opts && 'navigatorObservers' in opts ? opts.navigatorObservers : C[127] || CT.C127;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      let title = opts && 'title' in opts ? opts.title : "";
      let onGenerateTitle = opts && 'onGenerateTitle' in opts ? opts.onGenerateTitle : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let theme = opts && 'theme' in opts ? opts.theme : null;
      let darkTheme = opts && 'darkTheme' in opts ? opts.darkTheme : null;
      let themeMode = opts && 'themeMode' in opts ? opts.themeMode : C[128] || CT.C128;
      let locale = opts && 'locale' in opts ? opts.locale : null;
      let fallbackLocale = opts && 'fallbackLocale' in opts ? opts.fallbackLocale : null;
      let localizationsDelegates = opts && 'localizationsDelegates' in opts ? opts.localizationsDelegates : null;
      let localeListResolutionCallback = opts && 'localeListResolutionCallback' in opts ? opts.localeListResolutionCallback : null;
      let localeResolutionCallback = opts && 'localeResolutionCallback' in opts ? opts.localeResolutionCallback : null;
      let supportedLocales = opts && 'supportedLocales' in opts ? opts.supportedLocales : C[129] || CT.C129;
      let debugShowMaterialGrid = opts && 'debugShowMaterialGrid' in opts ? opts.debugShowMaterialGrid : false;
      let showPerformanceOverlay = opts && 'showPerformanceOverlay' in opts ? opts.showPerformanceOverlay : false;
      let checkerboardRasterCacheImages = opts && 'checkerboardRasterCacheImages' in opts ? opts.checkerboardRasterCacheImages : false;
      let checkerboardOffscreenLayers = opts && 'checkerboardOffscreenLayers' in opts ? opts.checkerboardOffscreenLayers : false;
      let showSemanticsDebugger = opts && 'showSemanticsDebugger' in opts ? opts.showSemanticsDebugger : false;
      let debugShowCheckedModeBanner = opts && 'debugShowCheckedModeBanner' in opts ? opts.debugShowCheckedModeBanner : true;
      let shortcuts = opts && 'shortcuts' in opts ? opts.shortcuts : null;
      let scrollBehavior = opts && 'scrollBehavior' in opts ? opts.scrollBehavior : null;
      let customTransition = opts && 'customTransition' in opts ? opts.customTransition : null;
      let translationsKeys = opts && 'translationsKeys' in opts ? opts.translationsKeys : null;
      let translations = opts && 'translations' in opts ? opts.translations : null;
      let onInit = opts && 'onInit' in opts ? opts.onInit : null;
      let onReady = opts && 'onReady' in opts ? opts.onReady : null;
      let onDispose = opts && 'onDispose' in opts ? opts.onDispose : null;
      let routingCallback = opts && 'routingCallback' in opts ? opts.routingCallback : null;
      let defaultTransition = opts && 'defaultTransition' in opts ? opts.defaultTransition : null;
      let getPages = opts && 'getPages' in opts ? opts.getPages : null;
      let opaqueRoute = opts && 'opaqueRoute' in opts ? opts.opaqueRoute : null;
      let enableLog = opts && 'enableLog' in opts ? opts.enableLog : true;
      let logWriterCallback = opts && 'logWriterCallback' in opts ? opts.logWriterCallback : null;
      let popGesture = opts && 'popGesture' in opts ? opts.popGesture : null;
      let transitionDuration = opts && 'transitionDuration' in opts ? opts.transitionDuration : null;
      let defaultGlobalState = opts && 'defaultGlobalState' in opts ? opts.defaultGlobalState : null;
      let smartManagement = opts && 'smartManagement' in opts ? opts.smartManagement : C[131] || CT.C131;
      let initialBinding = opts && 'initialBinding' in opts ? opts.initialBinding : null;
      let unknownRoute = opts && 'unknownRoute' in opts ? opts.unknownRoute : null;
      let highContrastTheme = opts && 'highContrastTheme' in opts ? opts.highContrastTheme : null;
      let highContrastDarkTheme = opts && 'highContrastDarkTheme' in opts ? opts.highContrastDarkTheme : null;
      let actions = opts && 'actions' in opts ? opts.actions : null;
      return new get_material_app.GetMaterialApp.new({key: key, navigatorKey: navigatorKey, scaffoldMessengerKey: scaffoldMessengerKey, home: home, routes: routes, initialRoute: initialRoute, onGenerateRoute: onGenerateRoute, onGenerateInitialRoutes: onGenerateInitialRoutes, onUnknownRoute: onUnknownRoute, useInheritedMediaQuery: useInheritedMediaQuery, navigatorObservers: navigatorObservers, builder: builder, textDirection: textDirection, title: title, onGenerateTitle: onGenerateTitle, color: color, theme: theme, darkTheme: darkTheme, themeMode: themeMode, locale: locale, fallbackLocale: fallbackLocale, localizationsDelegates: localizationsDelegates, localeListResolutionCallback: localeListResolutionCallback, localeResolutionCallback: localeResolutionCallback, supportedLocales: supportedLocales, debugShowMaterialGrid: debugShowMaterialGrid, showPerformanceOverlay: showPerformanceOverlay, checkerboardRasterCacheImages: checkerboardRasterCacheImages, checkerboardOffscreenLayers: checkerboardOffscreenLayers, showSemanticsDebugger: showSemanticsDebugger, debugShowCheckedModeBanner: debugShowCheckedModeBanner, shortcuts: shortcuts, scrollBehavior: scrollBehavior, customTransition: customTransition, translationsKeys: translationsKeys, translations: translations, onInit: onInit, onReady: onReady, onDispose: onDispose, routingCallback: routingCallback, defaultTransition: defaultTransition, getPages: getPages, opaqueRoute: opaqueRoute, enableLog: enableLog, logWriterCallback: logWriterCallback, popGesture: popGesture, transitionDuration: transitionDuration, defaultGlobalState: defaultGlobalState, smartManagement: smartManagement, initialBinding: initialBinding, unknownRoute: unknownRoute, highContrastTheme: highContrastTheme, highContrastDarkTheme: highContrastDarkTheme, actions: actions, $creationLocationd_0dea112b090073317d4: C[132] || CT.C132});
    }
    static ['_#router#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let routeInformationProvider = opts && 'routeInformationProvider' in opts ? opts.routeInformationProvider : null;
      let scaffoldMessengerKey = opts && 'scaffoldMessengerKey' in opts ? opts.scaffoldMessengerKey : null;
      let routeInformationParser = opts && 'routeInformationParser' in opts ? opts.routeInformationParser : null;
      let routerDelegate = opts && 'routerDelegate' in opts ? opts.routerDelegate : null;
      let backButtonDispatcher = opts && 'backButtonDispatcher' in opts ? opts.backButtonDispatcher : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let title = opts && 'title' in opts ? opts.title : "";
      let onGenerateTitle = opts && 'onGenerateTitle' in opts ? opts.onGenerateTitle : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let theme = opts && 'theme' in opts ? opts.theme : null;
      let darkTheme = opts && 'darkTheme' in opts ? opts.darkTheme : null;
      let useInheritedMediaQuery = opts && 'useInheritedMediaQuery' in opts ? opts.useInheritedMediaQuery : false;
      let highContrastTheme = opts && 'highContrastTheme' in opts ? opts.highContrastTheme : null;
      let highContrastDarkTheme = opts && 'highContrastDarkTheme' in opts ? opts.highContrastDarkTheme : null;
      let themeMode = opts && 'themeMode' in opts ? opts.themeMode : C[128] || CT.C128;
      let locale = opts && 'locale' in opts ? opts.locale : null;
      let localizationsDelegates = opts && 'localizationsDelegates' in opts ? opts.localizationsDelegates : null;
      let localeListResolutionCallback = opts && 'localeListResolutionCallback' in opts ? opts.localeListResolutionCallback : null;
      let localeResolutionCallback = opts && 'localeResolutionCallback' in opts ? opts.localeResolutionCallback : null;
      let supportedLocales = opts && 'supportedLocales' in opts ? opts.supportedLocales : C[129] || CT.C129;
      let debugShowMaterialGrid = opts && 'debugShowMaterialGrid' in opts ? opts.debugShowMaterialGrid : false;
      let showPerformanceOverlay = opts && 'showPerformanceOverlay' in opts ? opts.showPerformanceOverlay : false;
      let checkerboardRasterCacheImages = opts && 'checkerboardRasterCacheImages' in opts ? opts.checkerboardRasterCacheImages : false;
      let checkerboardOffscreenLayers = opts && 'checkerboardOffscreenLayers' in opts ? opts.checkerboardOffscreenLayers : false;
      let showSemanticsDebugger = opts && 'showSemanticsDebugger' in opts ? opts.showSemanticsDebugger : false;
      let debugShowCheckedModeBanner = opts && 'debugShowCheckedModeBanner' in opts ? opts.debugShowCheckedModeBanner : true;
      let shortcuts = opts && 'shortcuts' in opts ? opts.shortcuts : null;
      let scrollBehavior = opts && 'scrollBehavior' in opts ? opts.scrollBehavior : null;
      let actions = opts && 'actions' in opts ? opts.actions : null;
      let customTransition = opts && 'customTransition' in opts ? opts.customTransition : null;
      let translationsKeys = opts && 'translationsKeys' in opts ? opts.translationsKeys : null;
      let translations = opts && 'translations' in opts ? opts.translations : null;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      let fallbackLocale = opts && 'fallbackLocale' in opts ? opts.fallbackLocale : null;
      let routingCallback = opts && 'routingCallback' in opts ? opts.routingCallback : null;
      let defaultTransition = opts && 'defaultTransition' in opts ? opts.defaultTransition : null;
      let opaqueRoute = opts && 'opaqueRoute' in opts ? opts.opaqueRoute : null;
      let onInit = opts && 'onInit' in opts ? opts.onInit : null;
      let onReady = opts && 'onReady' in opts ? opts.onReady : null;
      let onDispose = opts && 'onDispose' in opts ? opts.onDispose : null;
      let enableLog = opts && 'enableLog' in opts ? opts.enableLog : true;
      let logWriterCallback = opts && 'logWriterCallback' in opts ? opts.logWriterCallback : null;
      let popGesture = opts && 'popGesture' in opts ? opts.popGesture : null;
      let smartManagement = opts && 'smartManagement' in opts ? opts.smartManagement : C[131] || CT.C131;
      let initialBinding = opts && 'initialBinding' in opts ? opts.initialBinding : null;
      let transitionDuration = opts && 'transitionDuration' in opts ? opts.transitionDuration : null;
      let defaultGlobalState = opts && 'defaultGlobalState' in opts ? opts.defaultGlobalState : null;
      let getPages = opts && 'getPages' in opts ? opts.getPages : null;
      let navigatorObservers = opts && 'navigatorObservers' in opts ? opts.navigatorObservers : null;
      let unknownRoute = opts && 'unknownRoute' in opts ? opts.unknownRoute : null;
      return new get_material_app.GetMaterialApp.router({key: key, routeInformationProvider: routeInformationProvider, scaffoldMessengerKey: scaffoldMessengerKey, routeInformationParser: routeInformationParser, routerDelegate: routerDelegate, backButtonDispatcher: backButtonDispatcher, builder: builder, title: title, onGenerateTitle: onGenerateTitle, color: color, theme: theme, darkTheme: darkTheme, useInheritedMediaQuery: useInheritedMediaQuery, highContrastTheme: highContrastTheme, highContrastDarkTheme: highContrastDarkTheme, themeMode: themeMode, locale: locale, localizationsDelegates: localizationsDelegates, localeListResolutionCallback: localeListResolutionCallback, localeResolutionCallback: localeResolutionCallback, supportedLocales: supportedLocales, debugShowMaterialGrid: debugShowMaterialGrid, showPerformanceOverlay: showPerformanceOverlay, checkerboardRasterCacheImages: checkerboardRasterCacheImages, checkerboardOffscreenLayers: checkerboardOffscreenLayers, showSemanticsDebugger: showSemanticsDebugger, debugShowCheckedModeBanner: debugShowCheckedModeBanner, shortcuts: shortcuts, scrollBehavior: scrollBehavior, actions: actions, customTransition: customTransition, translationsKeys: translationsKeys, translations: translations, textDirection: textDirection, fallbackLocale: fallbackLocale, routingCallback: routingCallback, defaultTransition: defaultTransition, opaqueRoute: opaqueRoute, onInit: onInit, onReady: onReady, onDispose: onDispose, enableLog: enableLog, logWriterCallback: logWriterCallback, popGesture: popGesture, smartManagement: smartManagement, initialBinding: initialBinding, transitionDuration: transitionDuration, defaultGlobalState: defaultGlobalState, getPages: getPages, navigatorObservers: navigatorObservers, unknownRoute: unknownRoute, $creationLocationd_0dea112b090073317d4: C[133] || CT.C133});
    }
    build(context) {
      return new (T$.GetBuilderOfGetMaterialController()).new({init: extension_navigation['GetNavigation|get#rootController'](get_main.Get), dispose: dart.fn(d => {
          let t16;
          t16 = this.onDispose;
          t16 == null ? null : t16();
        }, T$.GetBuilderStateOfGetMaterialControllerTovoid()), initState: dart.fn(i => {
          let t16, t16$, t16$0, t16$1, t16$2, t16$3, t16$4;
          extension_navigation['GetNavigation|get#engine'](get_main.Get).addPostFrameCallback(dart.fn(timeStamp => {
            let t16;
            t16 = this.onReady;
            t16 == null ? null : t16();
          }, T$.DurationTovoid()));
          if (this.locale != null) internacionalization['LocalesIntl|set#locale'](get_main.Get, this.locale);
          if (this.fallbackLocale != null) internacionalization['LocalesIntl|set#fallbackLocale'](get_main.Get, this.fallbackLocale);
          if (this.translations != null) {
            internacionalization['LocalesIntl|addTranslations'](get_main.Get, dart.nullCheck(this.translations).keys);
          } else if (this.translationsKeys != null) {
            internacionalization['LocalesIntl|addTranslations'](get_main.Get, dart.nullCheck(this.translationsKeys));
          }
          extension_navigation['GetNavigation|set#customTransition'](get_main.Get, this.customTransition);
          t16 = this.initialBinding;
          t16 == null ? null : t16.dependencies();
          if (this.getPages != null) {
            extension_navigation['NavTwoExt|addPages'](get_main.Get, dart.nullCheck(this.getPages));
          }
          get_main.Get.smartManagement = this.smartManagement;
          t16$ = this.onInit;
          t16$ == null ? null : t16$();
          extension_navigation['GetNavigation|config'](get_main.Get, {enableLog: (t16$0 = this.enableLog, t16$0 == null ? get_main.Get.isLogEnable : t16$0), logWriterCallback: this.logWriterCallback, defaultTransition: (t16$1 = this.defaultTransition, t16$1 == null ? extension_navigation['GetNavigation|get#defaultTransition'](get_main.Get) : t16$1), defaultOpaqueRoute: (t16$2 = this.opaqueRoute, t16$2 == null ? extension_navigation['GetNavigation|get#isOpaqueRouteDefault'](get_main.Get) : t16$2), defaultPopGesture: (t16$3 = this.popGesture, t16$3 == null ? extension_navigation['GetNavigation|get#isPopGestureEnable'](get_main.Get) : t16$3), defaultDurationTransition: (t16$4 = this.transitionDuration, t16$4 == null ? extension_navigation['GetNavigation|get#defaultTransitionDuration'](get_main.Get) : t16$4)});
        }, T$.GetBuilderStateOfGetMaterialControllerTovoid()), builder: dart.fn(_ => {
          let t16, t16$, t16$0, t16$1, t16$2, t16$3, t16$4, t16$5, t16$6, t16$7, t16$8, t16$9, t16$10, t16$11, t16$12, t16$13, t16$14, t16$15;
          return this.routerDelegate != null ? new app.MaterialApp.router({routerDelegate: dart.nullCheck(this.routerDelegate), routeInformationParser: dart.nullCheck(this.routeInformationParser), backButtonDispatcher: this.backButtonDispatcher, routeInformationProvider: this.routeInformationProvider, key: _.unikey, builder: dart.bind(this, 'defaultBuilder'), title: this.title, onGenerateTitle: this.onGenerateTitle, color: this.color, theme: (t16$ = (t16 = _.theme, t16 == null ? this.theme : t16), t16$ == null ? theme_data.ThemeData.fallback() : t16$), darkTheme: (t16$2 = (t16$1 = (t16$0 = _.darkTheme, t16$0 == null ? this.darkTheme : t16$0), t16$1 == null ? this.theme : t16$1), t16$2 == null ? theme_data.ThemeData.fallback() : t16$2), themeMode: (t16$3 = _.themeMode, t16$3 == null ? this.themeMode : t16$3), locale: (t16$4 = internacionalization['LocalesIntl|get#locale'](get_main.Get), t16$4 == null ? this.locale : t16$4), scaffoldMessengerKey: (t16$5 = this.scaffoldMessengerKey, t16$5 == null ? _.scaffoldMessengerKey : t16$5), localizationsDelegates: this.localizationsDelegates, localeListResolutionCallback: this.localeListResolutionCallback, localeResolutionCallback: this.localeResolutionCallback, supportedLocales: this.supportedLocales, debugShowMaterialGrid: this.debugShowMaterialGrid, showPerformanceOverlay: this.showPerformanceOverlay, checkerboardRasterCacheImages: this.checkerboardRasterCacheImages, checkerboardOffscreenLayers: this.checkerboardOffscreenLayers, showSemanticsDebugger: this.showSemanticsDebugger, debugShowCheckedModeBanner: this.debugShowCheckedModeBanner, shortcuts: this.shortcuts, scrollBehavior: this.scrollBehavior, useInheritedMediaQuery: this.useInheritedMediaQuery, $creationLocationd_0dea112b090073317d4: C[134] || CT.C134}) : new app.MaterialApp.new({key: _.unikey, navigatorKey: this.navigatorKey == null ? extension_navigation['GetNavigation|get#key'](get_main.Get) : extension_navigation['GetNavigation|addKey'](get_main.Get, dart.nullCheck(this.navigatorKey)), scaffoldMessengerKey: (t16$6 = this.scaffoldMessengerKey, t16$6 == null ? _.scaffoldMessengerKey : t16$6), home: this.home, routes: (t16$7 = this.routes, t16$7 == null ? C[126] || CT.C126 : t16$7), initialRoute: this.initialRoute, onGenerateRoute: this.getPages != null ? dart.bind(this, 'generator') : this.onGenerateRoute, onGenerateInitialRoutes: this.getPages == null || this.home != null ? this.onGenerateInitialRoutes : dart.bind(this, 'initialRoutesGenerate'), onUnknownRoute: this.onUnknownRoute, navigatorObservers: (t16$8 = this.navigatorObservers == null ? T$.JSArrayOfNavigatorObserver().of([new route_observer.GetObserver.new(this.routingCallback, extension_navigation['GetNavigation|get#routing'](get_main.Get))]) : T$.JSArrayOfNavigatorObserver().of([new route_observer.GetObserver.new(this.routingCallback, extension_navigation['GetNavigation|get#routing'](get_main.Get))]), (() => {
              t16$8[$addAll](dart.nullCheck(this.navigatorObservers));
              return t16$8;
            })()), builder: dart.bind(this, 'defaultBuilder'), title: this.title, onGenerateTitle: this.onGenerateTitle, color: this.color, theme: (t16$10 = (t16$9 = _.theme, t16$9 == null ? this.theme : t16$9), t16$10 == null ? theme_data.ThemeData.fallback() : t16$10), darkTheme: (t16$13 = (t16$12 = (t16$11 = _.darkTheme, t16$11 == null ? this.darkTheme : t16$11), t16$12 == null ? this.theme : t16$12), t16$13 == null ? theme_data.ThemeData.fallback() : t16$13), themeMode: (t16$14 = _.themeMode, t16$14 == null ? this.themeMode : t16$14), locale: (t16$15 = internacionalization['LocalesIntl|get#locale'](get_main.Get), t16$15 == null ? this.locale : t16$15), localizationsDelegates: this.localizationsDelegates, localeListResolutionCallback: this.localeListResolutionCallback, localeResolutionCallback: this.localeResolutionCallback, supportedLocales: this.supportedLocales, debugShowMaterialGrid: this.debugShowMaterialGrid, showPerformanceOverlay: this.showPerformanceOverlay, checkerboardRasterCacheImages: this.checkerboardRasterCacheImages, checkerboardOffscreenLayers: this.checkerboardOffscreenLayers, showSemanticsDebugger: this.showSemanticsDebugger, debugShowCheckedModeBanner: this.debugShowCheckedModeBanner, shortcuts: this.shortcuts, scrollBehavior: this.scrollBehavior, useInheritedMediaQuery: this.useInheritedMediaQuery, $creationLocationd_0dea112b090073317d4: C[135] || CT.C135});
        }, T$.GetMaterialControllerToMaterialApp()), $creationLocationd_0dea112b090073317d4: C[136] || CT.C136});
    }
    defaultBuilder(context, child) {
      let t17, t16, t16$, t16$0;
      return new basic.Directionality.new({textDirection: (t16 = this.textDirection, t16 == null ? internacionalization$.rtlLanguages[$contains]((t17 = internacionalization['LocalesIntl|get#locale'](get_main.Get), t17 == null ? null : t17.languageCode)) ? ui.TextDirection.rtl : ui.TextDirection.ltr : t16), child: this.builder == null ? (t16$ = child, t16$ == null ? new material.Material.new({$creationLocationd_0dea112b090073317d4: C[137] || CT.C137}) : t16$) : dart.nullCheck(this.builder)(context, (t16$0 = child, t16$0 == null ? new material.Material.new({$creationLocationd_0dea112b090073317d4: C[138] || CT.C138}) : t16$0)), $creationLocationd_0dea112b090073317d4: C[139] || CT.C139});
    }
    generator(settings) {
      return new route_middleware.PageRedirect.new({settings: settings, unknownRoute: this.unknownRoute}).page(dart.dynamic);
    }
    initialRoutesGenerate(name) {
      return T$.JSArrayOfRoute().of([new route_middleware.PageRedirect.new({settings: new navigator.RouteSettings.new({name: name}), unknownRoute: this.unknownRoute}).page(dart.dynamic)]);
    }
  };
  (get_material_app.GetMaterialApp.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let navigatorKey = opts && 'navigatorKey' in opts ? opts.navigatorKey : null;
    let scaffoldMessengerKey = opts && 'scaffoldMessengerKey' in opts ? opts.scaffoldMessengerKey : null;
    let home = opts && 'home' in opts ? opts.home : null;
    let routes = opts && 'routes' in opts ? opts.routes : C[126] || CT.C126;
    let initialRoute = opts && 'initialRoute' in opts ? opts.initialRoute : null;
    let onGenerateRoute = opts && 'onGenerateRoute' in opts ? opts.onGenerateRoute : null;
    let onGenerateInitialRoutes = opts && 'onGenerateInitialRoutes' in opts ? opts.onGenerateInitialRoutes : null;
    let onUnknownRoute = opts && 'onUnknownRoute' in opts ? opts.onUnknownRoute : null;
    let useInheritedMediaQuery = opts && 'useInheritedMediaQuery' in opts ? opts.useInheritedMediaQuery : false;
    let navigatorObservers = opts && 'navigatorObservers' in opts ? opts.navigatorObservers : C[127] || CT.C127;
    let builder = opts && 'builder' in opts ? opts.builder : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let title = opts && 'title' in opts ? opts.title : "";
    let onGenerateTitle = opts && 'onGenerateTitle' in opts ? opts.onGenerateTitle : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let theme = opts && 'theme' in opts ? opts.theme : null;
    let darkTheme = opts && 'darkTheme' in opts ? opts.darkTheme : null;
    let themeMode = opts && 'themeMode' in opts ? opts.themeMode : C[128] || CT.C128;
    let locale = opts && 'locale' in opts ? opts.locale : null;
    let fallbackLocale = opts && 'fallbackLocale' in opts ? opts.fallbackLocale : null;
    let localizationsDelegates = opts && 'localizationsDelegates' in opts ? opts.localizationsDelegates : null;
    let localeListResolutionCallback = opts && 'localeListResolutionCallback' in opts ? opts.localeListResolutionCallback : null;
    let localeResolutionCallback = opts && 'localeResolutionCallback' in opts ? opts.localeResolutionCallback : null;
    let supportedLocales = opts && 'supportedLocales' in opts ? opts.supportedLocales : C[129] || CT.C129;
    let debugShowMaterialGrid = opts && 'debugShowMaterialGrid' in opts ? opts.debugShowMaterialGrid : false;
    let showPerformanceOverlay = opts && 'showPerformanceOverlay' in opts ? opts.showPerformanceOverlay : false;
    let checkerboardRasterCacheImages = opts && 'checkerboardRasterCacheImages' in opts ? opts.checkerboardRasterCacheImages : false;
    let checkerboardOffscreenLayers = opts && 'checkerboardOffscreenLayers' in opts ? opts.checkerboardOffscreenLayers : false;
    let showSemanticsDebugger = opts && 'showSemanticsDebugger' in opts ? opts.showSemanticsDebugger : false;
    let debugShowCheckedModeBanner = opts && 'debugShowCheckedModeBanner' in opts ? opts.debugShowCheckedModeBanner : true;
    let shortcuts = opts && 'shortcuts' in opts ? opts.shortcuts : null;
    let scrollBehavior = opts && 'scrollBehavior' in opts ? opts.scrollBehavior : null;
    let customTransition = opts && 'customTransition' in opts ? opts.customTransition : null;
    let translationsKeys = opts && 'translationsKeys' in opts ? opts.translationsKeys : null;
    let translations = opts && 'translations' in opts ? opts.translations : null;
    let onInit = opts && 'onInit' in opts ? opts.onInit : null;
    let onReady = opts && 'onReady' in opts ? opts.onReady : null;
    let onDispose = opts && 'onDispose' in opts ? opts.onDispose : null;
    let routingCallback = opts && 'routingCallback' in opts ? opts.routingCallback : null;
    let defaultTransition = opts && 'defaultTransition' in opts ? opts.defaultTransition : null;
    let getPages = opts && 'getPages' in opts ? opts.getPages : null;
    let opaqueRoute = opts && 'opaqueRoute' in opts ? opts.opaqueRoute : null;
    let enableLog = opts && 'enableLog' in opts ? opts.enableLog : true;
    let logWriterCallback = opts && 'logWriterCallback' in opts ? opts.logWriterCallback : null;
    let popGesture = opts && 'popGesture' in opts ? opts.popGesture : null;
    let transitionDuration = opts && 'transitionDuration' in opts ? opts.transitionDuration : null;
    let defaultGlobalState = opts && 'defaultGlobalState' in opts ? opts.defaultGlobalState : null;
    let smartManagement = opts && 'smartManagement' in opts ? opts.smartManagement : C[131] || CT.C131;
    let initialBinding = opts && 'initialBinding' in opts ? opts.initialBinding : null;
    let unknownRoute = opts && 'unknownRoute' in opts ? opts.unknownRoute : null;
    let highContrastTheme = opts && 'highContrastTheme' in opts ? opts.highContrastTheme : null;
    let highContrastDarkTheme = opts && 'highContrastDarkTheme' in opts ? opts.highContrastDarkTheme : null;
    let actions = opts && 'actions' in opts ? opts.actions : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[navigatorKey$] = navigatorKey;
    this[scaffoldMessengerKey$] = scaffoldMessengerKey;
    this[home$] = home;
    this[routes$] = routes;
    this[initialRoute$] = initialRoute;
    this[onGenerateRoute$] = onGenerateRoute;
    this[onGenerateInitialRoutes$] = onGenerateInitialRoutes;
    this[onUnknownRoute$] = onUnknownRoute;
    this[useInheritedMediaQuery$] = useInheritedMediaQuery;
    this[navigatorObservers$] = navigatorObservers;
    this[builder$] = builder;
    this[textDirection$] = textDirection;
    this[title$2] = title;
    this[onGenerateTitle$] = onGenerateTitle;
    this[color$] = color;
    this[theme$1] = theme;
    this[darkTheme$] = darkTheme;
    this[themeMode$] = themeMode;
    this[locale$] = locale;
    this[fallbackLocale$] = fallbackLocale;
    this[localizationsDelegates$] = localizationsDelegates;
    this[localeListResolutionCallback$] = localeListResolutionCallback;
    this[localeResolutionCallback$] = localeResolutionCallback;
    this[supportedLocales$] = supportedLocales;
    this[debugShowMaterialGrid$] = debugShowMaterialGrid;
    this[showPerformanceOverlay$] = showPerformanceOverlay;
    this[checkerboardRasterCacheImages$] = checkerboardRasterCacheImages;
    this[checkerboardOffscreenLayers$] = checkerboardOffscreenLayers;
    this[showSemanticsDebugger$] = showSemanticsDebugger;
    this[debugShowCheckedModeBanner$] = debugShowCheckedModeBanner;
    this[shortcuts$] = shortcuts;
    this[scrollBehavior$] = scrollBehavior;
    this[customTransition$1] = customTransition;
    this[translationsKeys$] = translationsKeys;
    this[translations$] = translations;
    this[onInit$] = onInit;
    this[onReady$] = onReady;
    this[onDispose$] = onDispose;
    this[routingCallback$] = routingCallback;
    this[defaultTransition$] = defaultTransition;
    this[getPages$] = getPages;
    this[opaqueRoute$] = opaqueRoute;
    this[enableLog$] = enableLog;
    this[logWriterCallback$] = logWriterCallback;
    this[popGesture$1] = popGesture;
    this[transitionDuration$1] = transitionDuration;
    this[defaultGlobalState$] = defaultGlobalState;
    this[smartManagement$] = smartManagement;
    this[initialBinding$] = initialBinding;
    this[unknownRoute$1] = unknownRoute;
    this[highContrastTheme$] = highContrastTheme;
    this[highContrastDarkTheme$] = highContrastDarkTheme;
    this[actions$] = actions;
    this[routeInformationProvider$] = null;
    this[routeInformationParser$] = null;
    this[routerDelegate$] = null;
    this[backButtonDispatcher$] = null;
    get_material_app.GetMaterialApp.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = get_material_app.GetMaterialApp.prototype;
  (get_material_app.GetMaterialApp.router = function(opts) {
    let t16, t17, t17$, t16$;
    let key = opts && 'key' in opts ? opts.key : null;
    let routeInformationProvider = opts && 'routeInformationProvider' in opts ? opts.routeInformationProvider : null;
    let scaffoldMessengerKey = opts && 'scaffoldMessengerKey' in opts ? opts.scaffoldMessengerKey : null;
    let routeInformationParser = opts && 'routeInformationParser' in opts ? opts.routeInformationParser : null;
    let routerDelegate = opts && 'routerDelegate' in opts ? opts.routerDelegate : null;
    let backButtonDispatcher = opts && 'backButtonDispatcher' in opts ? opts.backButtonDispatcher : null;
    let builder = opts && 'builder' in opts ? opts.builder : null;
    let title = opts && 'title' in opts ? opts.title : "";
    let onGenerateTitle = opts && 'onGenerateTitle' in opts ? opts.onGenerateTitle : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let theme = opts && 'theme' in opts ? opts.theme : null;
    let darkTheme = opts && 'darkTheme' in opts ? opts.darkTheme : null;
    let useInheritedMediaQuery = opts && 'useInheritedMediaQuery' in opts ? opts.useInheritedMediaQuery : false;
    let highContrastTheme = opts && 'highContrastTheme' in opts ? opts.highContrastTheme : null;
    let highContrastDarkTheme = opts && 'highContrastDarkTheme' in opts ? opts.highContrastDarkTheme : null;
    let themeMode = opts && 'themeMode' in opts ? opts.themeMode : C[128] || CT.C128;
    let locale = opts && 'locale' in opts ? opts.locale : null;
    let localizationsDelegates = opts && 'localizationsDelegates' in opts ? opts.localizationsDelegates : null;
    let localeListResolutionCallback = opts && 'localeListResolutionCallback' in opts ? opts.localeListResolutionCallback : null;
    let localeResolutionCallback = opts && 'localeResolutionCallback' in opts ? opts.localeResolutionCallback : null;
    let supportedLocales = opts && 'supportedLocales' in opts ? opts.supportedLocales : C[129] || CT.C129;
    let debugShowMaterialGrid = opts && 'debugShowMaterialGrid' in opts ? opts.debugShowMaterialGrid : false;
    let showPerformanceOverlay = opts && 'showPerformanceOverlay' in opts ? opts.showPerformanceOverlay : false;
    let checkerboardRasterCacheImages = opts && 'checkerboardRasterCacheImages' in opts ? opts.checkerboardRasterCacheImages : false;
    let checkerboardOffscreenLayers = opts && 'checkerboardOffscreenLayers' in opts ? opts.checkerboardOffscreenLayers : false;
    let showSemanticsDebugger = opts && 'showSemanticsDebugger' in opts ? opts.showSemanticsDebugger : false;
    let debugShowCheckedModeBanner = opts && 'debugShowCheckedModeBanner' in opts ? opts.debugShowCheckedModeBanner : true;
    let shortcuts = opts && 'shortcuts' in opts ? opts.shortcuts : null;
    let scrollBehavior = opts && 'scrollBehavior' in opts ? opts.scrollBehavior : null;
    let actions = opts && 'actions' in opts ? opts.actions : null;
    let customTransition = opts && 'customTransition' in opts ? opts.customTransition : null;
    let translationsKeys = opts && 'translationsKeys' in opts ? opts.translationsKeys : null;
    let translations = opts && 'translations' in opts ? opts.translations : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let fallbackLocale = opts && 'fallbackLocale' in opts ? opts.fallbackLocale : null;
    let routingCallback = opts && 'routingCallback' in opts ? opts.routingCallback : null;
    let defaultTransition = opts && 'defaultTransition' in opts ? opts.defaultTransition : null;
    let opaqueRoute = opts && 'opaqueRoute' in opts ? opts.opaqueRoute : null;
    let onInit = opts && 'onInit' in opts ? opts.onInit : null;
    let onReady = opts && 'onReady' in opts ? opts.onReady : null;
    let onDispose = opts && 'onDispose' in opts ? opts.onDispose : null;
    let enableLog = opts && 'enableLog' in opts ? opts.enableLog : true;
    let logWriterCallback = opts && 'logWriterCallback' in opts ? opts.logWriterCallback : null;
    let popGesture = opts && 'popGesture' in opts ? opts.popGesture : null;
    let smartManagement = opts && 'smartManagement' in opts ? opts.smartManagement : C[131] || CT.C131;
    let initialBinding = opts && 'initialBinding' in opts ? opts.initialBinding : null;
    let transitionDuration = opts && 'transitionDuration' in opts ? opts.transitionDuration : null;
    let defaultGlobalState = opts && 'defaultGlobalState' in opts ? opts.defaultGlobalState : null;
    let getPages = opts && 'getPages' in opts ? opts.getPages : null;
    let navigatorObservers = opts && 'navigatorObservers' in opts ? opts.navigatorObservers : null;
    let unknownRoute = opts && 'unknownRoute' in opts ? opts.unknownRoute : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[routeInformationProvider$] = routeInformationProvider;
    this[scaffoldMessengerKey$] = scaffoldMessengerKey;
    this[backButtonDispatcher$] = backButtonDispatcher;
    this[builder$] = builder;
    this[title$2] = title;
    this[onGenerateTitle$] = onGenerateTitle;
    this[color$] = color;
    this[theme$1] = theme;
    this[darkTheme$] = darkTheme;
    this[useInheritedMediaQuery$] = useInheritedMediaQuery;
    this[highContrastTheme$] = highContrastTheme;
    this[highContrastDarkTheme$] = highContrastDarkTheme;
    this[themeMode$] = themeMode;
    this[locale$] = locale;
    this[localizationsDelegates$] = localizationsDelegates;
    this[localeListResolutionCallback$] = localeListResolutionCallback;
    this[localeResolutionCallback$] = localeResolutionCallback;
    this[supportedLocales$] = supportedLocales;
    this[debugShowMaterialGrid$] = debugShowMaterialGrid;
    this[showPerformanceOverlay$] = showPerformanceOverlay;
    this[checkerboardRasterCacheImages$] = checkerboardRasterCacheImages;
    this[checkerboardOffscreenLayers$] = checkerboardOffscreenLayers;
    this[showSemanticsDebugger$] = showSemanticsDebugger;
    this[debugShowCheckedModeBanner$] = debugShowCheckedModeBanner;
    this[shortcuts$] = shortcuts;
    this[scrollBehavior$] = scrollBehavior;
    this[actions$] = actions;
    this[customTransition$1] = customTransition;
    this[translationsKeys$] = translationsKeys;
    this[translations$] = translations;
    this[textDirection$] = textDirection;
    this[fallbackLocale$] = fallbackLocale;
    this[routingCallback$] = routingCallback;
    this[defaultTransition$] = defaultTransition;
    this[opaqueRoute$] = opaqueRoute;
    this[onInit$] = onInit;
    this[onReady$] = onReady;
    this[onDispose$] = onDispose;
    this[enableLog$] = enableLog;
    this[logWriterCallback$] = logWriterCallback;
    this[popGesture$1] = popGesture;
    this[smartManagement$] = smartManagement;
    this[initialBinding$] = initialBinding;
    this[transitionDuration$1] = transitionDuration;
    this[defaultGlobalState$] = defaultGlobalState;
    this[getPages$] = getPages;
    this[navigatorObservers$] = navigatorObservers;
    this[unknownRoute$1] = unknownRoute;
    this[routerDelegate$] = (t16 = routerDelegate, t16 == null ? routerDelegate = extension_navigation['NavTwoExt|createDelegate'](get_main.Get, {notFoundRoute: unknownRoute}) : t16);
    this[routeInformationParser$] = (t16$ = routeInformationParser, t16$ == null ? routeInformationParser = extension_navigation['NavTwoExt|createInformationParser'](get_main.Get, {initialRoute: (t17$ = (t17 = getPages, t17 == null ? null : t17[$first].name), t17$ == null ? "/" : t17$)}) : t16$);
    this[navigatorKey$] = null;
    this[onGenerateRoute$] = null;
    this[home$] = null;
    this[onGenerateInitialRoutes$] = null;
    this[onUnknownRoute$] = null;
    this[routes$] = null;
    this[initialRoute$] = null;
    get_material_app.GetMaterialApp.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    get_main.Get.routerDelegate = routerDelegate;
    get_main.Get.routeInformationParser = routeInformationParser;
  }).prototype = get_material_app.GetMaterialApp.prototype;
  dart.addTypeTests(get_material_app.GetMaterialApp);
  dart.addTypeCaches(get_material_app.GetMaterialApp);
  dart.setMethodSignature(get_material_app.GetMaterialApp, () => ({
    __proto__: dart.getMethods(get_material_app.GetMaterialApp.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    defaultBuilder: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)]),
    generator: dart.fnType(navigator.Route, [navigator.RouteSettings]),
    initialRoutesGenerate: dart.fnType(core.List$(navigator.Route), [core.String])
  }));
  dart.setLibraryUri(get_material_app.GetMaterialApp, I[15]);
  dart.setFieldSignature(get_material_app.GetMaterialApp, () => ({
    __proto__: dart.getFields(get_material_app.GetMaterialApp.__proto__),
    navigatorKey: dart.finalFieldType(dart.nullable(framework.GlobalKey$(navigator.NavigatorState))),
    scaffoldMessengerKey: dart.finalFieldType(dart.nullable(framework.GlobalKey$(scaffold.ScaffoldMessengerState))),
    home: dart.finalFieldType(dart.nullable(framework.Widget)),
    routes: dart.finalFieldType(dart.nullable(core.Map$(core.String, dart.fnType(framework.Widget, [framework.BuildContext])))),
    initialRoute: dart.finalFieldType(dart.nullable(core.String)),
    onGenerateRoute: dart.finalFieldType(dart.nullable(dart.fnType(dart.nullable(navigator.Route), [navigator.RouteSettings]))),
    onGenerateInitialRoutes: dart.finalFieldType(dart.nullable(dart.fnType(core.List$(navigator.Route), [core.String]))),
    onUnknownRoute: dart.finalFieldType(dart.nullable(dart.fnType(dart.nullable(navigator.Route), [navigator.RouteSettings]))),
    navigatorObservers: dart.finalFieldType(dart.nullable(core.List$(navigator.NavigatorObserver))),
    builder: dart.finalFieldType(dart.nullable(dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)]))),
    title: dart.finalFieldType(core.String),
    onGenerateTitle: dart.finalFieldType(dart.nullable(dart.fnType(core.String, [framework.BuildContext]))),
    theme: dart.finalFieldType(dart.nullable(theme_data.ThemeData)),
    darkTheme: dart.finalFieldType(dart.nullable(theme_data.ThemeData)),
    themeMode: dart.finalFieldType(app.ThemeMode),
    customTransition: dart.finalFieldType(dart.nullable(custom_transition.CustomTransition)),
    color: dart.finalFieldType(dart.nullable(ui.Color)),
    translationsKeys: dart.finalFieldType(dart.nullable(core.Map$(core.String, core.Map$(core.String, core.String)))),
    translations: dart.finalFieldType(dart.nullable(internacionalization$.Translations)),
    textDirection: dart.finalFieldType(dart.nullable(ui.TextDirection)),
    locale: dart.finalFieldType(dart.nullable(ui.Locale)),
    fallbackLocale: dart.finalFieldType(dart.nullable(ui.Locale)),
    localizationsDelegates: dart.finalFieldType(dart.nullable(core.Iterable$(localizations.LocalizationsDelegate))),
    localeListResolutionCallback: dart.finalFieldType(dart.nullable(dart.fnType(dart.nullable(ui.Locale), [dart.nullable(core.List$(ui.Locale)), core.Iterable$(ui.Locale)]))),
    localeResolutionCallback: dart.finalFieldType(dart.nullable(dart.fnType(dart.nullable(ui.Locale), [dart.nullable(ui.Locale), core.Iterable$(ui.Locale)]))),
    supportedLocales: dart.finalFieldType(core.Iterable$(ui.Locale)),
    showPerformanceOverlay: dart.finalFieldType(core.bool),
    checkerboardRasterCacheImages: dart.finalFieldType(core.bool),
    checkerboardOffscreenLayers: dart.finalFieldType(core.bool),
    showSemanticsDebugger: dart.finalFieldType(core.bool),
    debugShowCheckedModeBanner: dart.finalFieldType(core.bool),
    shortcuts: dart.finalFieldType(dart.nullable(core.Map$(shortcuts.LogicalKeySet, actions.Intent))),
    scrollBehavior: dart.finalFieldType(dart.nullable(scroll_configuration.ScrollBehavior)),
    highContrastTheme: dart.finalFieldType(dart.nullable(theme_data.ThemeData)),
    highContrastDarkTheme: dart.finalFieldType(dart.nullable(theme_data.ThemeData)),
    actions: dart.finalFieldType(dart.nullable(core.Map$(core.Type, actions.Action$(actions.Intent)))),
    debugShowMaterialGrid: dart.finalFieldType(core.bool),
    routingCallback: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [dart.nullable(route_observer.Routing)]))),
    defaultTransition: dart.finalFieldType(dart.nullable(transitions_type.Transition)),
    opaqueRoute: dart.finalFieldType(dart.nullable(core.bool)),
    onInit: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onReady: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onDispose: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    enableLog: dart.finalFieldType(dart.nullable(core.bool)),
    logWriterCallback: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.String], {isError: core.bool}, {}))),
    popGesture: dart.finalFieldType(dart.nullable(core.bool)),
    smartManagement: dart.finalFieldType(smart_management.SmartManagement),
    initialBinding: dart.finalFieldType(dart.nullable(bindings_interface.Bindings)),
    transitionDuration: dart.finalFieldType(dart.nullable(core.Duration)),
    defaultGlobalState: dart.finalFieldType(dart.nullable(core.bool)),
    getPages: dart.finalFieldType(dart.nullable(core.List$(get_route.GetPage))),
    unknownRoute: dart.finalFieldType(dart.nullable(get_route.GetPage)),
    routeInformationProvider: dart.finalFieldType(dart.nullable(router.RouteInformationProvider)),
    routeInformationParser: dart.finalFieldType(dart.nullable(router.RouteInformationParser$(core.Object))),
    routerDelegate: dart.finalFieldType(dart.nullable(router.RouterDelegate$(core.Object))),
    backButtonDispatcher: dart.finalFieldType(dart.nullable(router.BackButtonDispatcher)),
    useInheritedMediaQuery: dart.finalFieldType(core.bool)
  }));
  var initialValue$ = dart.privateName(simple_builder, "ValueBuilder.initialValue");
  var builder$0 = dart.privateName(simple_builder, "ValueBuilder.builder");
  var onDispose$0 = dart.privateName(simple_builder, "ValueBuilder.onDispose");
  var onUpdate$ = dart.privateName(simple_builder, "ValueBuilder.onUpdate");
  const _is_ValueBuilder_default = Symbol('_is_ValueBuilder_default');
  simple_builder.ValueBuilder$ = dart.generic(T => {
    var __t$_ValueBuilderStateOfT = () => (__t$_ValueBuilderStateOfT = dart.constFn(simple_builder._ValueBuilderState$(T)))();
    class ValueBuilder extends framework.StatefulWidget {
      get initialValue() {
        return this[initialValue$];
      }
      set initialValue(value) {
        super.initialValue = value;
      }
      get builder() {
        return this[builder$0];
      }
      set builder(value) {
        super.builder = value;
      }
      get onDispose() {
        return this[onDispose$0];
      }
      set onDispose(value) {
        super.onDispose = value;
      }
      get onUpdate() {
        return this[onUpdate$];
      }
      set onUpdate(value) {
        super.onUpdate = value;
      }
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let initialValue = opts && 'initialValue' in opts ? opts.initialValue : null;
        let onDispose = opts && 'onDispose' in opts ? opts.onDispose : null;
        let onUpdate = opts && 'onUpdate' in opts ? opts.onUpdate : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        return new (simple_builder.ValueBuilder$(T)).new({key: key, initialValue: initialValue, onDispose: onDispose, onUpdate: onUpdate, builder: builder, $creationLocationd_0dea112b090073317d4: C[140] || CT.C140});
      }
      createState() {
        return new (__t$_ValueBuilderStateOfT()).new();
      }
    }
    (ValueBuilder.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let initialValue = opts && 'initialValue' in opts ? opts.initialValue : null;
      let onDispose = opts && 'onDispose' in opts ? opts.onDispose : null;
      let onUpdate = opts && 'onUpdate' in opts ? opts.onUpdate : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[initialValue$] = initialValue;
      this[onDispose$0] = onDispose;
      this[onUpdate$] = onUpdate;
      this[builder$0] = builder;
      ValueBuilder.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = ValueBuilder.prototype;
    dart.addTypeTests(ValueBuilder);
    ValueBuilder.prototype[_is_ValueBuilder_default] = true;
    dart.addTypeCaches(ValueBuilder);
    dart.setMethodSignature(ValueBuilder, () => ({
      __proto__: dart.getMethods(ValueBuilder.__proto__),
      createState: dart.fnType(simple_builder._ValueBuilderState$(T), [])
    }));
    dart.setLibraryUri(ValueBuilder, I[16]);
    dart.setFieldSignature(ValueBuilder, () => ({
      __proto__: dart.getFields(ValueBuilder.__proto__),
      initialValue: dart.finalFieldType(dart.nullable(T)),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [T, dart.fnType(dart.void, [T])])),
      onDispose: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
      onUpdate: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [T])))
    }));
    return ValueBuilder;
  });
  simple_builder.ValueBuilder = simple_builder.ValueBuilder$();
  dart.addTypeTests(simple_builder.ValueBuilder, _is_ValueBuilder_default);
  var value$ = dart.privateName(simple_builder, "_ValueBuilderState.value");
  const _is__ValueBuilderState_default = Symbol('_is__ValueBuilderState_default');
  simple_builder._ValueBuilderState$ = dart.generic(T => {
    var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
    var __t$TNTovoid = () => (__t$TNTovoid = dart.constFn(dart.fnType(dart.void, [__t$TN()])))();
    var __t$TNAndFnToWidget = () => (__t$TNAndFnToWidget = dart.constFn(dart.fnType(framework.Widget, [__t$TN(), __t$TNTovoid()])))();
    var __t$TNToNvoid = () => (__t$TNToNvoid = dart.constFn(dart.nullable(__t$TNTovoid())))();
    class _ValueBuilderState extends framework.State$(simple_builder.ValueBuilder$(dart.nullable(T))) {
      get value() {
        return this[value$];
      }
      set value(value) {
        this[value$] = __t$TN().as(value);
      }
      initState() {
        super.initState();
        this.value = this.widget.initialValue;
      }
      build(context) {
        let t18, t17, t16;
        t16 = this.widget;
        t17 = this.value;
        t18 = dart.bind(this, 'updater');
        return __t$TNAndFnToWidget().as(t16.builder)(t17, t18);
      }
      updater(newValue) {
        __t$TN().as(newValue);
        if (__t$TNToNvoid().as(this.widget.onUpdate) != null) {
          dart.nullCheck(__t$TNToNvoid().as(this.widget.onUpdate))(newValue);
        }
        this.setState(dart.fn(() => {
          this.value = newValue;
        }, T$.VoidTovoid()));
      }
      dispose() {
        let t16, t16$, t16$0;
        super.dispose();
        t16 = this.widget.onDispose;
        t16 == null ? null : t16();
        if (change_notifier.ChangeNotifier.is(this.value)) {
          t16$ = T$.ChangeNotifierN().as(this.value);
          t16$ == null ? null : t16$.dispose();
        } else if (async.StreamController.is(this.value)) {
          t16$0 = T$.StreamControllerN().as(this.value);
          t16$0 == null ? null : t16$0.close();
        }
        this.value = null;
      }
      static ['_#new#tearOff'](T) {
        return new (simple_builder._ValueBuilderState$(T)).new();
      }
    }
    (_ValueBuilderState.new = function() {
      this[value$] = null;
      _ValueBuilderState.__proto__.new.call(this);
      ;
    }).prototype = _ValueBuilderState.prototype;
    dart.addTypeTests(_ValueBuilderState);
    _ValueBuilderState.prototype[_is__ValueBuilderState_default] = true;
    dart.addTypeCaches(_ValueBuilderState);
    dart.setMethodSignature(_ValueBuilderState, () => ({
      __proto__: dart.getMethods(_ValueBuilderState.__proto__),
      build: dart.fnType(framework.Widget, [framework.BuildContext]),
      updater: dart.fnType(dart.void, [dart.nullable(core.Object)])
    }));
    dart.setLibraryUri(_ValueBuilderState, I[16]);
    dart.setFieldSignature(_ValueBuilderState, () => ({
      __proto__: dart.getFields(_ValueBuilderState.__proto__),
      value: dart.fieldType(dart.nullable(T))
    }));
    return _ValueBuilderState;
  });
  simple_builder._ValueBuilderState = simple_builder._ValueBuilderState$();
  dart.addTypeTests(simple_builder._ValueBuilderState, _is__ValueBuilderState_default);
  var builder$1 = dart.privateName(simple_builder, "SimpleBuilder.builder");
  simple_builder.SimpleBuilder = class SimpleBuilder extends framework.StatefulWidget {
    get builder() {
      return this[builder$1];
    }
    set builder(value) {
      super.builder = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      return new simple_builder.SimpleBuilder.new({key: key, builder: builder, $creationLocationd_0dea112b090073317d4: C[141] || CT.C141});
    }
    createState() {
      return new simple_builder._SimpleBuilderState.new();
    }
  };
  (simple_builder.SimpleBuilder.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let builder = opts && 'builder' in opts ? opts.builder : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[builder$1] = builder;
    simple_builder.SimpleBuilder.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = simple_builder.SimpleBuilder.prototype;
  dart.addTypeTests(simple_builder.SimpleBuilder);
  dart.addTypeCaches(simple_builder.SimpleBuilder);
  dart.setMethodSignature(simple_builder.SimpleBuilder, () => ({
    __proto__: dart.getMethods(simple_builder.SimpleBuilder.__proto__),
    createState: dart.fnType(simple_builder._SimpleBuilderState, [])
  }));
  dart.setLibraryUri(simple_builder.SimpleBuilder, I[16]);
  dart.setFieldSignature(simple_builder.SimpleBuilder, () => ({
    __proto__: dart.getFields(simple_builder.SimpleBuilder.__proto__),
    builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext]))
  }));
  const _is_GetStateUpdaterMixin_default = Symbol('_is_GetStateUpdaterMixin_default');
  get_state.GetStateUpdaterMixin$ = dart.generic(T => {
    class GetStateUpdaterMixin extends framework.State$(T) {}
    GetStateUpdaterMixin[dart.mixinOn] = State => class GetStateUpdaterMixin extends State {
      getUpdate() {
        if (this.mounted) this.setState(dart.fn(() => {
        }, T$.VoidTovoid()));
      }
    };
    dart.addTypeTests(GetStateUpdaterMixin);
    GetStateUpdaterMixin.prototype[_is_GetStateUpdaterMixin_default] = true;
    dart.addTypeCaches(GetStateUpdaterMixin);
    GetStateUpdaterMixin[dart.implements] = () => [framework.State$(T)];
    dart.setMethodSignature(GetStateUpdaterMixin, () => ({
      __proto__: dart.getMethods(GetStateUpdaterMixin.__proto__),
      getUpdate: dart.fnType(dart.void, [])
    }));
    dart.setLibraryUri(GetStateUpdaterMixin, I[17]);
    return GetStateUpdaterMixin;
  });
  get_state.GetStateUpdaterMixin = get_state.GetStateUpdaterMixin$();
  dart.addTypeTests(get_state.GetStateUpdaterMixin, _is_GetStateUpdaterMixin_default);
  const State_GetStateUpdaterMixin$36 = class State_GetStateUpdaterMixin extends framework.State$(simple_builder.SimpleBuilder) {};
  (State_GetStateUpdaterMixin$36.new = function() {
    State_GetStateUpdaterMixin$36.__proto__.new.call(this);
  }).prototype = State_GetStateUpdaterMixin$36.prototype;
  dart.applyMixin(State_GetStateUpdaterMixin$36, get_state.GetStateUpdaterMixin$(simple_builder.SimpleBuilder));
  simple_builder._SimpleBuilderState = class _SimpleBuilderState extends State_GetStateUpdaterMixin$36 {
    dispose() {
      super.dispose();
      for (let disposer of this.disposers) {
        disposer();
      }
    }
    build(context) {
      return list_notifier.TaskManager.instance.exchange(this.disposers, dart.bind(this, 'getUpdate'), this.widget.builder, context);
    }
    static ['_#new#tearOff']() {
      return new simple_builder._SimpleBuilderState.new();
    }
  };
  (simple_builder._SimpleBuilderState.new = function() {
    this.disposers = T$.JSArrayOfVoidTovoid().of([]);
    simple_builder._SimpleBuilderState.__proto__.new.call(this);
    ;
  }).prototype = simple_builder._SimpleBuilderState.prototype;
  dart.addTypeTests(simple_builder._SimpleBuilderState);
  dart.addTypeCaches(simple_builder._SimpleBuilderState);
  dart.setMethodSignature(simple_builder._SimpleBuilderState, () => ({
    __proto__: dart.getMethods(simple_builder._SimpleBuilderState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(simple_builder._SimpleBuilderState, I[16]);
  dart.setFieldSignature(simple_builder._SimpleBuilderState, () => ({
    __proto__: dart.getFields(simple_builder._SimpleBuilderState.__proto__),
    disposers: dart.finalFieldType(core.List$(dart.fnType(dart.void, [])))
  }));
  var builder$2 = dart.privateName(mixin_state, "MixinBuilder.builder");
  var global$ = dart.privateName(mixin_state, "MixinBuilder.global");
  var id$ = dart.privateName(mixin_state, "MixinBuilder.id");
  var autoRemove$ = dart.privateName(mixin_state, "MixinBuilder.autoRemove");
  var initState$ = dart.privateName(mixin_state, "MixinBuilder.initState");
  var dispose$ = dart.privateName(mixin_state, "MixinBuilder.dispose");
  var didChangeDependencies$ = dart.privateName(mixin_state, "MixinBuilder.didChangeDependencies");
  var didUpdateWidget$ = dart.privateName(mixin_state, "MixinBuilder.didUpdateWidget");
  var init$ = dart.privateName(mixin_state, "MixinBuilder.init");
  const _is_MixinBuilder_default = Symbol('_is_MixinBuilder_default');
  mixin_state.MixinBuilder$ = dart.generic(T => {
    var __t$GetBuilderOfT = () => (__t$GetBuilderOfT = dart.constFn(get_state.GetBuilder$(T)))();
    var __t$TToObx = () => (__t$TToObx = dart.constFn(dart.fnType(rx_obx_widget.Obx, [T])))();
    class MixinBuilder extends framework.StatelessWidget {
      get builder() {
        return this[builder$2];
      }
      set builder(value) {
        super.builder = value;
      }
      get global() {
        return this[global$];
      }
      set global(value) {
        super.global = value;
      }
      get id() {
        return this[id$];
      }
      set id(value) {
        super.id = value;
      }
      get autoRemove() {
        return this[autoRemove$];
      }
      set autoRemove(value) {
        super.autoRemove = value;
      }
      get initState() {
        return this[initState$];
      }
      set initState(value) {
        super.initState = value;
      }
      get dispose() {
        return this[dispose$];
      }
      set dispose(value) {
        super.dispose = value;
      }
      get didChangeDependencies() {
        return this[didChangeDependencies$];
      }
      set didChangeDependencies(value) {
        super.didChangeDependencies = value;
      }
      get didUpdateWidget() {
        return this[didUpdateWidget$];
      }
      set didUpdateWidget(value) {
        super.didUpdateWidget = value;
      }
      get init() {
        return this[init$];
      }
      set init(value) {
        super.init = value;
      }
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let init = opts && 'init' in opts ? opts.init : null;
        let global = opts && 'global' in opts ? opts.global : true;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let autoRemove = opts && 'autoRemove' in opts ? opts.autoRemove : true;
        let initState = opts && 'initState' in opts ? opts.initState : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let id = opts && 'id' in opts ? opts.id : null;
        let didChangeDependencies = opts && 'didChangeDependencies' in opts ? opts.didChangeDependencies : null;
        let didUpdateWidget = opts && 'didUpdateWidget' in opts ? opts.didUpdateWidget : null;
        return new (mixin_state.MixinBuilder$(T)).new({key: key, init: init, global: global, builder: builder, autoRemove: autoRemove, initState: initState, dispose: dispose, id: id, didChangeDependencies: didChangeDependencies, didUpdateWidget: didUpdateWidget, $creationLocationd_0dea112b090073317d4: C[142] || CT.C142});
      }
      build(context) {
        return new (__t$GetBuilderOfT()).new({init: this.init, global: this.global, autoRemove: this.autoRemove, initState: this.initState, dispose: this.dispose, id: this.id, didChangeDependencies: this.didChangeDependencies, didUpdateWidget: this.didUpdateWidget, builder: dart.fn(controller => new rx_obx_widget.Obx.new(dart.fn(() => this.builder(controller), T$.VoidToWidget()), {$creationLocationd_0dea112b090073317d4: C[143] || CT.C143}), __t$TToObx()), $creationLocationd_0dea112b090073317d4: C[144] || CT.C144});
      }
    }
    (MixinBuilder.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let init = opts && 'init' in opts ? opts.init : null;
      let global = opts && 'global' in opts ? opts.global : true;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let autoRemove = opts && 'autoRemove' in opts ? opts.autoRemove : true;
      let initState = opts && 'initState' in opts ? opts.initState : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let id = opts && 'id' in opts ? opts.id : null;
      let didChangeDependencies = opts && 'didChangeDependencies' in opts ? opts.didChangeDependencies : null;
      let didUpdateWidget = opts && 'didUpdateWidget' in opts ? opts.didUpdateWidget : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[init$] = init;
      this[global$] = global;
      this[builder$2] = builder;
      this[autoRemove$] = autoRemove;
      this[initState$] = initState;
      this[dispose$] = dispose;
      this[id$] = id;
      this[didChangeDependencies$] = didChangeDependencies;
      this[didUpdateWidget$] = didUpdateWidget;
      MixinBuilder.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = MixinBuilder.prototype;
    dart.addTypeTests(MixinBuilder);
    MixinBuilder.prototype[_is_MixinBuilder_default] = true;
    dart.addTypeCaches(MixinBuilder);
    dart.setMethodSignature(MixinBuilder, () => ({
      __proto__: dart.getMethods(MixinBuilder.__proto__),
      build: dart.fnType(framework.Widget, [framework.BuildContext])
    }));
    dart.setLibraryUri(MixinBuilder, I[18]);
    dart.setFieldSignature(MixinBuilder, () => ({
      __proto__: dart.getFields(MixinBuilder.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [T])),
      global: dart.finalFieldType(core.bool),
      id: dart.finalFieldType(dart.nullable(core.String)),
      autoRemove: dart.finalFieldType(core.bool),
      initState: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [framework.State$(framework.StatefulWidget)]))),
      dispose: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [framework.State$(framework.StatefulWidget)]))),
      didChangeDependencies: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [framework.State$(framework.StatefulWidget)]))),
      didUpdateWidget: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [get_state.GetBuilder$(get_controllers.GetxController), framework.State$(framework.StatefulWidget)]))),
      init: dart.finalFieldType(dart.nullable(T))
    }));
    return MixinBuilder;
  });
  mixin_state.MixinBuilder = mixin_state.MixinBuilder$();
  dart.addTypeTests(mixin_state.MixinBuilder, _is_MixinBuilder_default);
  var tag = dart.privateName(get_view, "GetView.tag");
  const _is_GetView_default = Symbol('_is_GetView_default');
  get_view.GetView$ = dart.generic(T => {
    class GetView extends framework.StatelessWidget {
      get tag() {
        return this[tag];
      }
      set tag(value) {
        super.tag = value;
      }
      get controller() {
        return dart.nullCheck(get_instance.GetInstance.new().find(T, {tag: this.tag}));
      }
    }
    (GetView.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[tag] = null;
      GetView.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = GetView.prototype;
    dart.addTypeTests(GetView);
    GetView.prototype[_is_GetView_default] = true;
    dart.addTypeCaches(GetView);
    dart.setGetterSignature(GetView, () => ({
      __proto__: dart.getGetters(GetView.__proto__),
      controller: T
    }));
    dart.setLibraryUri(GetView, I[19]);
    dart.setFieldSignature(GetView, () => ({
      __proto__: dart.getFields(GetView.__proto__),
      tag: dart.finalFieldType(dart.nullable(core.String))
    }));
    return GetView;
  });
  get_view.GetView = get_view.GetView$();
  dart.addTypeTests(get_view.GetView, _is_GetView_default);
  var tag$ = dart.privateName(get_view, "GetWidget.tag");
  const _is_GetWidget_default = Symbol('_is_GetWidget_default');
  get_view.GetWidget$ = dart.generic(S => {
    var __t$_GetCacheOfS = () => (__t$_GetCacheOfS = dart.constFn(get_view._GetCache$(S)))();
    class GetWidget extends get_widget_cache.GetWidgetCache {
      get tag() {
        return this[tag$];
      }
      set tag(value) {
        super.tag = value;
      }
      get controller() {
        return S.as(get_view.GetWidget._cache._get(this));
      }
      createWidgetCache() {
        return new (__t$_GetCacheOfS()).new();
      }
    }
    (GetWidget.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[tag$] = null;
      GetWidget.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = GetWidget.prototype;
    dart.addTypeTests(GetWidget);
    GetWidget.prototype[_is_GetWidget_default] = true;
    dart.addTypeCaches(GetWidget);
    dart.setMethodSignature(GetWidget, () => ({
      __proto__: dart.getMethods(GetWidget.__proto__),
      createWidgetCache: dart.fnType(get_widget_cache.WidgetCache$(get_widget_cache.GetWidgetCache), [])
    }));
    dart.setGetterSignature(GetWidget, () => ({
      __proto__: dart.getGetters(GetWidget.__proto__),
      controller: S
    }));
    dart.setLibraryUri(GetWidget, I[19]);
    dart.setFieldSignature(GetWidget, () => ({
      __proto__: dart.getFields(GetWidget.__proto__),
      tag: dart.finalFieldType(dart.nullable(core.String))
    }));
    dart.setStaticFieldSignature(GetWidget, () => ['_cache']);
    return GetWidget;
  });
  get_view.GetWidget = get_view.GetWidget$();
  dart.defineLazy(get_view.GetWidget, {
    /*get_view.GetWidget._cache*/get _cache() {
      return new (T$.ExpandoOfGetLifeCycleBase()).new();
    }
  }, false);
  dart.addTypeTests(get_view.GetWidget, _is_GetWidget_default);
  var _controller$ = dart.privateName(get_view, "_controller");
  var _isCreator = dart.privateName(get_view, "_isCreator");
  const _is__GetCache_default = Symbol('_is__GetCache_default');
  get_view._GetCache$ = dart.generic(S => {
    class _GetCache extends get_widget_cache.WidgetCache$(get_view.GetWidget$(S)) {
      onInit() {
        this.info = get_instance.GetInstance.new().getInstanceInfo(S, {tag: dart.nullCheck(this.widget).tag});
        this[_isCreator] = dart.nullCheck(this.info).isPrepared && dart.nullCheck(this.info).isCreate;
        if (dart.nullCheck(this.info).isRegistered) {
          this[_controller$] = extension_instance['Inst|find'](S, get_main.Get, {tag: dart.nullCheck(this.widget).tag});
        }
        get_view.GetWidget._cache._set(dart.nullCheck(this.widget), this[_controller$]);
        super.onInit();
      }
      onClose() {
        if (this[_isCreator]) {
          event_loop_extensions['LoopEventsExt|asap'](core.Null, get_main.Get, dart.fn(() => {
            let t17, t16, t17$, t16$;
            dart.nullCheck(dart.nullCheck(this.widget).controller).onDelete.call();
            t16 = get_main.Get;
            t17 = "\"" + dart.str(dart.runtimeType(dart.nullCheck(this.widget).controller)) + "\" onClose() called";
            t16.log(t17);
            t16$ = get_main.Get;
            t17$ = "\"" + dart.str(dart.runtimeType(dart.nullCheck(this.widget).controller)) + "\" deleted from memory";
            t16$.log(t17$);
            get_view.GetWidget._cache._set(dart.nullCheck(this.widget), null);
          }, T$.VoidToNull()));
        }
        this.info = null;
        super.onClose();
      }
      build(context) {
        return dart.nullCheck(this.widget).build(context);
      }
      static ['_#new#tearOff'](S) {
        return new (get_view._GetCache$(S)).new();
      }
    }
    (_GetCache.new = function() {
      this[_controller$] = null;
      this[_isCreator] = false;
      this.info = null;
      _GetCache.__proto__.new.call(this);
      ;
    }).prototype = _GetCache.prototype;
    dart.addTypeTests(_GetCache);
    _GetCache.prototype[_is__GetCache_default] = true;
    dart.addTypeCaches(_GetCache);
    dart.setMethodSignature(_GetCache, () => ({
      __proto__: dart.getMethods(_GetCache.__proto__),
      build: dart.fnType(framework.Widget, [framework.BuildContext])
    }));
    dart.setLibraryUri(_GetCache, I[19]);
    dart.setFieldSignature(_GetCache, () => ({
      __proto__: dart.getFields(_GetCache.__proto__),
      [_controller$]: dart.fieldType(dart.nullable(S)),
      [_isCreator]: dart.fieldType(core.bool),
      info: dart.fieldType(dart.nullable(get_instance.InstanceInfo))
    }));
    return _GetCache;
  });
  get_view._GetCache = get_view._GetCache$();
  dart.addTypeTests(get_view._GetCache, _is__GetCache_default);
  var builder$3 = dart.privateName(get_state, "GetBuilder.builder");
  var global$0 = dart.privateName(get_state, "GetBuilder.global");
  var id$0 = dart.privateName(get_state, "GetBuilder.id");
  var tag$0 = dart.privateName(get_state, "GetBuilder.tag");
  var autoRemove$0 = dart.privateName(get_state, "GetBuilder.autoRemove");
  var assignId$ = dart.privateName(get_state, "GetBuilder.assignId");
  var filter$ = dart.privateName(get_state, "GetBuilder.filter");
  var initState$0 = dart.privateName(get_state, "GetBuilder.initState");
  var dispose$0 = dart.privateName(get_state, "GetBuilder.dispose");
  var didChangeDependencies$0 = dart.privateName(get_state, "GetBuilder.didChangeDependencies");
  var didUpdateWidget$0 = dart.privateName(get_state, "GetBuilder.didUpdateWidget");
  var init$0 = dart.privateName(get_state, "GetBuilder.init");
  const _is_GetBuilder_default = Symbol('_is_GetBuilder_default');
  get_state.GetBuilder$ = dart.generic(T => {
    var __t$GetBuilderStateOfT = () => (__t$GetBuilderStateOfT = dart.constFn(get_state.GetBuilderState$(T)))();
    class GetBuilder extends framework.StatefulWidget {
      get builder() {
        return this[builder$3];
      }
      set builder(value) {
        super.builder = value;
      }
      get global() {
        return this[global$0];
      }
      set global(value) {
        super.global = value;
      }
      get id() {
        return this[id$0];
      }
      set id(value) {
        super.id = value;
      }
      get tag() {
        return this[tag$0];
      }
      set tag(value) {
        super.tag = value;
      }
      get autoRemove() {
        return this[autoRemove$0];
      }
      set autoRemove(value) {
        super.autoRemove = value;
      }
      get assignId() {
        return this[assignId$];
      }
      set assignId(value) {
        super.assignId = value;
      }
      get filter() {
        return this[filter$];
      }
      set filter(value) {
        super.filter = value;
      }
      get initState() {
        return this[initState$0];
      }
      set initState(value) {
        super.initState = value;
      }
      get dispose() {
        return this[dispose$0];
      }
      set dispose(value) {
        super.dispose = value;
      }
      get didChangeDependencies() {
        return this[didChangeDependencies$0];
      }
      set didChangeDependencies(value) {
        super.didChangeDependencies = value;
      }
      get didUpdateWidget() {
        return this[didUpdateWidget$0];
      }
      set didUpdateWidget(value) {
        super.didUpdateWidget = value;
      }
      get init() {
        return this[init$0];
      }
      set init(value) {
        super.init = value;
      }
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let init = opts && 'init' in opts ? opts.init : null;
        let global = opts && 'global' in opts ? opts.global : true;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let autoRemove = opts && 'autoRemove' in opts ? opts.autoRemove : true;
        let assignId = opts && 'assignId' in opts ? opts.assignId : false;
        let initState = opts && 'initState' in opts ? opts.initState : null;
        let filter = opts && 'filter' in opts ? opts.filter : null;
        let tag = opts && 'tag' in opts ? opts.tag : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let id = opts && 'id' in opts ? opts.id : null;
        let didChangeDependencies = opts && 'didChangeDependencies' in opts ? opts.didChangeDependencies : null;
        let didUpdateWidget = opts && 'didUpdateWidget' in opts ? opts.didUpdateWidget : null;
        return new (get_state.GetBuilder$(T)).new({key: key, init: init, global: global, builder: builder, autoRemove: autoRemove, assignId: assignId, initState: initState, filter: filter, tag: tag, dispose: dispose, id: id, didChangeDependencies: didChangeDependencies, didUpdateWidget: didUpdateWidget, $creationLocationd_0dea112b090073317d4: C[145] || CT.C145});
      }
      createState() {
        return new (__t$GetBuilderStateOfT()).new();
      }
    }
    (GetBuilder.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let init = opts && 'init' in opts ? opts.init : null;
      let global = opts && 'global' in opts ? opts.global : true;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let autoRemove = opts && 'autoRemove' in opts ? opts.autoRemove : true;
      let assignId = opts && 'assignId' in opts ? opts.assignId : false;
      let initState = opts && 'initState' in opts ? opts.initState : null;
      let filter = opts && 'filter' in opts ? opts.filter : null;
      let tag = opts && 'tag' in opts ? opts.tag : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let id = opts && 'id' in opts ? opts.id : null;
      let didChangeDependencies = opts && 'didChangeDependencies' in opts ? opts.didChangeDependencies : null;
      let didUpdateWidget = opts && 'didUpdateWidget' in opts ? opts.didUpdateWidget : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[init$0] = init;
      this[global$0] = global;
      this[builder$3] = builder;
      this[autoRemove$0] = autoRemove;
      this[assignId$] = assignId;
      this[initState$0] = initState;
      this[filter$] = filter;
      this[tag$0] = tag;
      this[dispose$0] = dispose;
      this[id$0] = id;
      this[didChangeDependencies$0] = didChangeDependencies;
      this[didUpdateWidget$0] = didUpdateWidget;
      GetBuilder.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = GetBuilder.prototype;
    dart.addTypeTests(GetBuilder);
    GetBuilder.prototype[_is_GetBuilder_default] = true;
    dart.addTypeCaches(GetBuilder);
    dart.setMethodSignature(GetBuilder, () => ({
      __proto__: dart.getMethods(GetBuilder.__proto__),
      createState: dart.fnType(get_state.GetBuilderState$(T), [])
    }));
    dart.setLibraryUri(GetBuilder, I[17]);
    dart.setFieldSignature(GetBuilder, () => ({
      __proto__: dart.getFields(GetBuilder.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [T])),
      global: dart.finalFieldType(core.bool),
      id: dart.finalFieldType(dart.nullable(core.Object)),
      tag: dart.finalFieldType(dart.nullable(core.String)),
      autoRemove: dart.finalFieldType(core.bool),
      assignId: dart.finalFieldType(core.bool),
      filter: dart.finalFieldType(dart.nullable(dart.fnType(core.Object, [T]))),
      initState: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [get_state.GetBuilderState$(T)]))),
      dispose: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [get_state.GetBuilderState$(T)]))),
      didChangeDependencies: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [get_state.GetBuilderState$(T)]))),
      didUpdateWidget: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [get_state.GetBuilder$(get_controllers.GetxController), get_state.GetBuilderState$(T)]))),
      init: dart.finalFieldType(dart.nullable(T))
    }));
    return GetBuilder;
  });
  get_state.GetBuilder = get_state.GetBuilder$();
  dart.addTypeTests(get_state.GetBuilder, _is_GetBuilder_default);
  var controller = dart.privateName(get_state, "GetBuilderState.controller");
  var _isCreator$ = dart.privateName(get_state, "_isCreator");
  var _remove = dart.privateName(get_state, "_remove");
  var _filter = dart.privateName(get_state, "_filter");
  var _subscribeToController = dart.privateName(get_state, "_subscribeToController");
  var _filterUpdate = dart.privateName(get_state, "_filterUpdate");
  const _is_GetBuilderState_default = Symbol('_is_GetBuilderState_default');
  get_state.GetBuilderState$ = dart.generic(T => {
    var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
    var __t$GetBuilderStateOfT = () => (__t$GetBuilderStateOfT = dart.constFn(get_state.GetBuilderState$(T)))();
    var __t$GetBuilderStateOfTTovoid = () => (__t$GetBuilderStateOfTTovoid = dart.constFn(dart.fnType(dart.void, [__t$GetBuilderStateOfT()])))();
    var __t$GetBuilderStateOfTToNvoid = () => (__t$GetBuilderStateOfTToNvoid = dart.constFn(dart.nullable(__t$GetBuilderStateOfTTovoid())))();
    var __t$TToObject = () => (__t$TToObject = dart.constFn(dart.fnType(core.Object, [T])))();
    var __t$TToNObject = () => (__t$TToNObject = dart.constFn(dart.nullable(__t$TToObject())))();
    var __t$GetBuilderOfT = () => (__t$GetBuilderOfT = dart.constFn(get_state.GetBuilder$(T)))();
    var __t$GetBuilderOfGetxControllerAndGetBuilderStateOfTTovoid = () => (__t$GetBuilderOfGetxControllerAndGetBuilderStateOfTTovoid = dart.constFn(dart.fnType(dart.void, [T$.GetBuilderOfGetxController(), __t$GetBuilderStateOfT()])))();
    var __t$GetBuilderOfGetxControllerAndGetBuilderStateOfTToNvoid = () => (__t$GetBuilderOfGetxControllerAndGetBuilderStateOfTToNvoid = dart.constFn(dart.nullable(__t$GetBuilderOfGetxControllerAndGetBuilderStateOfTTovoid())))();
    var __t$TToWidget = () => (__t$TToWidget = dart.constFn(dart.fnType(framework.Widget, [T])))();
    const State_GetStateUpdaterMixin$36 = class State_GetStateUpdaterMixin extends framework.State$(get_state.GetBuilder$(T)) {};
    (State_GetStateUpdaterMixin$36.new = function() {
      State_GetStateUpdaterMixin$36.__proto__.new.call(this);
    }).prototype = State_GetStateUpdaterMixin$36.prototype;
    dart.applyMixin(State_GetStateUpdaterMixin$36, get_state.GetStateUpdaterMixin$(get_state.GetBuilder$(T)));
    class GetBuilderState extends State_GetStateUpdaterMixin$36 {
      get controller() {
        return this[controller];
      }
      set controller(value) {
        this[controller] = __t$TN().as(value);
      }
      initState() {
        let t16, t16$;
        super.initState();
        t16 = __t$GetBuilderStateOfTToNvoid().as(this.widget.initState);
        t16 == null ? null : t16(this);
        let isRegistered = get_instance.GetInstance.new().isRegistered(T, {tag: this.widget.tag});
        if (this.widget.global) {
          if (isRegistered) {
            if (get_instance.GetInstance.new().isPrepared(T, {tag: this.widget.tag})) {
              this[_isCreator$] = true;
            } else {
              this[_isCreator$] = false;
            }
            this.controller = get_instance.GetInstance.new().find(T, {tag: this.widget.tag});
          } else {
            this.controller = this.widget.init;
            this[_isCreator$] = true;
            get_instance.GetInstance.new().put(T, dart.nullCheck(this.controller), {tag: this.widget.tag});
          }
        } else {
          this.controller = this.widget.init;
          this[_isCreator$] = true;
          t16$ = this.controller;
          t16$ == null ? null : t16$.onStart.call();
        }
        if (__t$TToNObject().as(this.widget.filter) != null) {
          this[_filter] = dart.nullCheck(__t$TToNObject().as(this.widget.filter))(dart.nullCheck(this.controller));
        }
        this[_subscribeToController]();
      }
      [_subscribeToController]() {
        let t16, t16$, t16$0;
        t16 = this[_remove];
        t16 == null ? null : t16();
        this[_remove] = this.widget.id == null ? (t16$ = this.controller, t16$ == null ? null : t16$.addListener(this[_filter] != null ? dart.bind(this, _filterUpdate) : dart.bind(this, 'getUpdate'))) : (t16$0 = this.controller, t16$0 == null ? null : t16$0.addListenerId(this.widget.id, this[_filter] != null ? dart.bind(this, _filterUpdate) : dart.bind(this, 'getUpdate')));
      }
      [_filterUpdate]() {
        let newFilter = dart.nullCheck(__t$TToNObject().as(this.widget.filter))(dart.nullCheck(this.controller));
        if (!newFilter[$_equals](this[_filter])) {
          this[_filter] = newFilter;
          this.getUpdate();
        }
      }
      dispose() {
        let t16, t16$;
        super.dispose();
        t16 = __t$GetBuilderStateOfTToNvoid().as(this.widget.dispose);
        t16 == null ? null : t16(this);
        if (dart.nullCheck(this[_isCreator$]) || this.widget.assignId) {
          if (this.widget.autoRemove && get_instance.GetInstance.new().isRegistered(T, {tag: this.widget.tag})) {
            get_instance.GetInstance.new().delete(T, {tag: this.widget.tag});
          }
        }
        t16$ = this[_remove];
        t16$ == null ? null : t16$();
        this.controller = null;
        this[_isCreator$] = null;
        this[_remove] = null;
        this[_filter] = null;
      }
      didChangeDependencies() {
        let t16;
        super.didChangeDependencies();
        t16 = __t$GetBuilderStateOfTToNvoid().as(this.widget.didChangeDependencies);
        t16 == null ? null : t16(this);
      }
      didUpdateWidget(oldWidget) {
        let t16;
        T$.GetBuilderOfGetxController().as(oldWidget);
        super.didUpdateWidget(__t$GetBuilderOfT().as(oldWidget));
        if (!dart.equals(oldWidget.id, this.widget.id)) {
          this[_subscribeToController]();
        }
        t16 = __t$GetBuilderOfGetxControllerAndGetBuilderStateOfTToNvoid().as(this.widget.didUpdateWidget);
        t16 == null ? null : t16(oldWidget, this);
      }
      build(context) {
        let t17, t16;
        t16 = this.widget;
        t17 = dart.nullCheck(this.controller);
        return __t$TToWidget().as(t16.builder)(t17);
      }
      static ['_#new#tearOff'](T) {
        return new (get_state.GetBuilderState$(T)).new();
      }
    }
    (GetBuilderState.new = function() {
      this[controller] = null;
      this[_isCreator$] = false;
      this[_remove] = null;
      this[_filter] = null;
      GetBuilderState.__proto__.new.call(this);
      ;
    }).prototype = GetBuilderState.prototype;
    dart.addTypeTests(GetBuilderState);
    GetBuilderState.prototype[_is_GetBuilderState_default] = true;
    dart.addTypeCaches(GetBuilderState);
    dart.setMethodSignature(GetBuilderState, () => ({
      __proto__: dart.getMethods(GetBuilderState.__proto__),
      [_subscribeToController]: dart.fnType(dart.void, []),
      [_filterUpdate]: dart.fnType(dart.void, []),
      build: dart.fnType(framework.Widget, [framework.BuildContext])
    }));
    dart.setLibraryUri(GetBuilderState, I[17]);
    dart.setFieldSignature(GetBuilderState, () => ({
      __proto__: dart.getFields(GetBuilderState.__proto__),
      controller: dart.fieldType(dart.nullable(T)),
      [_isCreator$]: dart.fieldType(dart.nullable(core.bool)),
      [_remove]: dart.fieldType(dart.nullable(dart.fnType(dart.void, []))),
      [_filter]: dart.fieldType(dart.nullable(core.Object))
    }));
    return GetBuilderState;
  });
  get_state.GetBuilderState = get_state.GetBuilderState$();
  dart.addTypeTests(get_state.GetBuilderState, _is_GetBuilderState_default);
  get_responsive.GetResponsiveMixin = class GetResponsiveMixin extends framework.Widget {};
  get_responsive.GetResponsiveMixin[dart.mixinOn] = Widget => class GetResponsiveMixin extends Widget {
    build(context) {
      let t16, t16$, t16$0, t16$1, t16$2, t16$3, t16$4, t16$5;
      this.screen.context = context;
      let widget = null;
      if (this.alwaysUseBuilder) {
        widget = this.builder();
        if (widget != null) return widget;
      }
      if (this.screen.isDesktop) {
        widget = (t16 = this.desktop(), t16 == null ? widget : t16);
        if (widget != null) return widget;
      }
      if (this.screen.isTablet) {
        widget = (t16$ = this.tablet(), t16$ == null ? this.desktop() : t16$);
        if (widget != null) return widget;
      }
      if (this.screen.isPhone) {
        widget = (t16$1 = (t16$0 = this.phone(), t16$0 == null ? this.tablet() : t16$0), t16$1 == null ? this.desktop() : t16$1);
        if (widget != null) return widget;
      }
      t16$5 = (t16$4 = (t16$3 = (t16$2 = this.watch(), t16$2 == null ? this.phone() : t16$2), t16$3 == null ? this.tablet() : t16$3), t16$4 == null ? this.desktop() : t16$4);
      return t16$5 == null ? dart.nullCheck(this.builder()) : t16$5;
    }
    builder() {
      return null;
    }
    desktop() {
      return null;
    }
    phone() {
      return null;
    }
    tablet() {
      return null;
    }
    watch() {
      return null;
    }
  };
  dart.addTypeTests(get_responsive.GetResponsiveMixin);
  dart.addTypeCaches(get_responsive.GetResponsiveMixin);
  get_responsive.GetResponsiveMixin[dart.implements] = () => [framework.Widget];
  dart.setMethodSignature(get_responsive.GetResponsiveMixin, () => ({
    __proto__: dart.getMethods(get_responsive.GetResponsiveMixin.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    builder: dart.fnType(dart.nullable(framework.Widget), []),
    desktop: dart.fnType(dart.nullable(framework.Widget), []),
    phone: dart.fnType(dart.nullable(framework.Widget), []),
    tablet: dart.fnType(dart.nullable(framework.Widget), []),
    watch: dart.fnType(dart.nullable(framework.Widget), [])
  }));
  dart.setLibraryUri(get_responsive.GetResponsiveMixin, I[20]);
  var alwaysUseBuilder$ = dart.privateName(get_responsive, "GetResponsiveView.alwaysUseBuilder");
  var screen = dart.privateName(get_responsive, "GetResponsiveView.screen");
  var ResponsiveScreenSettings_watchChangePoint = dart.privateName(get_responsive, "ResponsiveScreenSettings.watchChangePoint");
  var ResponsiveScreenSettings_tabletChangePoint = dart.privateName(get_responsive, "ResponsiveScreenSettings.tabletChangePoint");
  var ResponsiveScreenSettings_desktopChangePoint = dart.privateName(get_responsive, "ResponsiveScreenSettings.desktopChangePoint");
  const _is_GetResponsiveView_default = Symbol('_is_GetResponsiveView_default');
  get_responsive.GetResponsiveView$ = dart.generic(T => {
    const GetView_GetResponsiveMixin$36 = class GetView_GetResponsiveMixin extends get_view.GetView$(T) {};
    (GetView_GetResponsiveMixin$36.new = function(opts) {
      GetView_GetResponsiveMixin$36.__proto__.new.call(this, opts);
    }).prototype = GetView_GetResponsiveMixin$36.prototype;
    dart.applyMixin(GetView_GetResponsiveMixin$36, get_responsive.GetResponsiveMixin);
    class GetResponsiveView extends GetView_GetResponsiveMixin$36 {
      get alwaysUseBuilder() {
        return this[alwaysUseBuilder$];
      }
      set alwaysUseBuilder(value) {
        super.alwaysUseBuilder = value;
      }
      get screen() {
        return this[screen];
      }
      set screen(value) {
        super.screen = value;
      }
      static ['_#new#tearOff'](T, opts) {
        let alwaysUseBuilder = opts && 'alwaysUseBuilder' in opts ? opts.alwaysUseBuilder : false;
        let settings = opts && 'settings' in opts ? opts.settings : C[146] || CT.C146;
        let key = opts && 'key' in opts ? opts.key : null;
        return new (get_responsive.GetResponsiveView$(T)).new({alwaysUseBuilder: alwaysUseBuilder, settings: settings, key: key, $creationLocationd_0dea112b090073317d4: C[147] || CT.C147});
      }
    }
    (GetResponsiveView.new = function(opts) {
      let alwaysUseBuilder = opts && 'alwaysUseBuilder' in opts ? opts.alwaysUseBuilder : false;
      let settings = opts && 'settings' in opts ? opts.settings : C[146] || CT.C146;
      let key = opts && 'key' in opts ? opts.key : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[alwaysUseBuilder$] = alwaysUseBuilder;
      this[screen] = new get_responsive.ResponsiveScreen.new(settings);
      GetResponsiveView.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = GetResponsiveView.prototype;
    dart.addTypeTests(GetResponsiveView);
    GetResponsiveView.prototype[_is_GetResponsiveView_default] = true;
    dart.addTypeCaches(GetResponsiveView);
    dart.setLibraryUri(GetResponsiveView, I[20]);
    dart.setFieldSignature(GetResponsiveView, () => ({
      __proto__: dart.getFields(GetResponsiveView.__proto__),
      alwaysUseBuilder: dart.finalFieldType(core.bool),
      screen: dart.finalFieldType(get_responsive.ResponsiveScreen)
    }));
    return GetResponsiveView;
  });
  get_responsive.GetResponsiveView = get_responsive.GetResponsiveView$();
  dart.addTypeTests(get_responsive.GetResponsiveView, _is_GetResponsiveView_default);
  var alwaysUseBuilder$0 = dart.privateName(get_responsive, "GetResponsiveWidget.alwaysUseBuilder");
  var screen$ = dart.privateName(get_responsive, "GetResponsiveWidget.screen");
  const _is_GetResponsiveWidget_default = Symbol('_is_GetResponsiveWidget_default');
  get_responsive.GetResponsiveWidget$ = dart.generic(T => {
    const GetWidget_GetResponsiveMixin$36 = class GetWidget_GetResponsiveMixin extends get_view.GetWidget$(T) {};
    (GetWidget_GetResponsiveMixin$36.new = function(opts) {
      GetWidget_GetResponsiveMixin$36.__proto__.new.call(this, opts);
    }).prototype = GetWidget_GetResponsiveMixin$36.prototype;
    dart.applyMixin(GetWidget_GetResponsiveMixin$36, get_responsive.GetResponsiveMixin);
    class GetResponsiveWidget extends GetWidget_GetResponsiveMixin$36 {
      get alwaysUseBuilder() {
        return this[alwaysUseBuilder$0];
      }
      set alwaysUseBuilder(value) {
        super.alwaysUseBuilder = value;
      }
      get screen() {
        return this[screen$];
      }
      set screen(value) {
        super.screen = value;
      }
      static ['_#new#tearOff'](T, opts) {
        let alwaysUseBuilder = opts && 'alwaysUseBuilder' in opts ? opts.alwaysUseBuilder : false;
        let settings = opts && 'settings' in opts ? opts.settings : C[146] || CT.C146;
        let key = opts && 'key' in opts ? opts.key : null;
        return new (get_responsive.GetResponsiveWidget$(T)).new({alwaysUseBuilder: alwaysUseBuilder, settings: settings, key: key, $creationLocationd_0dea112b090073317d4: C[148] || CT.C148});
      }
    }
    (GetResponsiveWidget.new = function(opts) {
      let alwaysUseBuilder = opts && 'alwaysUseBuilder' in opts ? opts.alwaysUseBuilder : false;
      let settings = opts && 'settings' in opts ? opts.settings : C[146] || CT.C146;
      let key = opts && 'key' in opts ? opts.key : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[alwaysUseBuilder$0] = alwaysUseBuilder;
      this[screen$] = new get_responsive.ResponsiveScreen.new(settings);
      GetResponsiveWidget.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = GetResponsiveWidget.prototype;
    dart.addTypeTests(GetResponsiveWidget);
    GetResponsiveWidget.prototype[_is_GetResponsiveWidget_default] = true;
    dart.addTypeCaches(GetResponsiveWidget);
    dart.setLibraryUri(GetResponsiveWidget, I[20]);
    dart.setFieldSignature(GetResponsiveWidget, () => ({
      __proto__: dart.getFields(GetResponsiveWidget.__proto__),
      alwaysUseBuilder: dart.finalFieldType(core.bool),
      screen: dart.finalFieldType(get_responsive.ResponsiveScreen)
    }));
    return GetResponsiveWidget;
  });
  get_responsive.GetResponsiveWidget = get_responsive.GetResponsiveWidget$();
  dart.addTypeTests(get_responsive.GetResponsiveWidget, _is_GetResponsiveWidget_default);
  const desktopChangePoint$ = ResponsiveScreenSettings_desktopChangePoint;
  const tabletChangePoint$ = ResponsiveScreenSettings_tabletChangePoint;
  const watchChangePoint$ = ResponsiveScreenSettings_watchChangePoint;
  get_responsive.ResponsiveScreenSettings = class ResponsiveScreenSettings extends core.Object {
    get desktopChangePoint() {
      return this[desktopChangePoint$];
    }
    set desktopChangePoint(value) {
      super.desktopChangePoint = value;
    }
    get tabletChangePoint() {
      return this[tabletChangePoint$];
    }
    set tabletChangePoint(value) {
      super.tabletChangePoint = value;
    }
    get watchChangePoint() {
      return this[watchChangePoint$];
    }
    set watchChangePoint(value) {
      super.watchChangePoint = value;
    }
    static ['_#new#tearOff'](opts) {
      let desktopChangePoint = opts && 'desktopChangePoint' in opts ? opts.desktopChangePoint : 1200;
      let tabletChangePoint = opts && 'tabletChangePoint' in opts ? opts.tabletChangePoint : 600;
      let watchChangePoint = opts && 'watchChangePoint' in opts ? opts.watchChangePoint : 300;
      return new get_responsive.ResponsiveScreenSettings.new({desktopChangePoint: desktopChangePoint, tabletChangePoint: tabletChangePoint, watchChangePoint: watchChangePoint});
    }
  };
  (get_responsive.ResponsiveScreenSettings.new = function(opts) {
    let desktopChangePoint = opts && 'desktopChangePoint' in opts ? opts.desktopChangePoint : 1200;
    let tabletChangePoint = opts && 'tabletChangePoint' in opts ? opts.tabletChangePoint : 600;
    let watchChangePoint = opts && 'watchChangePoint' in opts ? opts.watchChangePoint : 300;
    this[desktopChangePoint$] = desktopChangePoint;
    this[tabletChangePoint$] = tabletChangePoint;
    this[watchChangePoint$] = watchChangePoint;
    ;
  }).prototype = get_responsive.ResponsiveScreenSettings.prototype;
  dart.addTypeTests(get_responsive.ResponsiveScreenSettings);
  dart.addTypeCaches(get_responsive.ResponsiveScreenSettings);
  dart.setLibraryUri(get_responsive.ResponsiveScreenSettings, I[20]);
  dart.setFieldSignature(get_responsive.ResponsiveScreenSettings, () => ({
    __proto__: dart.getFields(get_responsive.ResponsiveScreenSettings.__proto__),
    desktopChangePoint: dart.finalFieldType(core.double),
    tabletChangePoint: dart.finalFieldType(core.double),
    watchChangePoint: dart.finalFieldType(core.double)
  }));
  var settings$0 = dart.privateName(get_responsive, "ResponsiveScreen.settings");
  var __ResponsiveScreen_context = dart.privateName(get_responsive, "_#ResponsiveScreen#context");
  var __ResponsiveScreen__isPaltformDesktop = dart.privateName(get_responsive, "_#ResponsiveScreen#_isPaltformDesktop");
  var _isPaltformDesktop = dart.privateName(get_responsive, "_isPaltformDesktop");
  var _getdeviceWidth = dart.privateName(get_responsive, "_getdeviceWidth");
  get_responsive.ResponsiveScreen = class ResponsiveScreen extends core.Object {
    get settings() {
      return this[settings$0];
    }
    set settings(value) {
      super.settings = value;
    }
    get context() {
      let t16;
      t16 = this[__ResponsiveScreen_context];
      return t16 == null ? dart.throw(new _internal.LateError.fieldNI("context")) : t16;
    }
    set context(context$35param) {
      this[__ResponsiveScreen_context] = context$35param;
    }
    get [_isPaltformDesktop]() {
      let t16;
      t16 = this[__ResponsiveScreen__isPaltformDesktop];
      return t16 == null ? dart.throw(new _internal.LateError.fieldNI("_isPaltformDesktop")) : t16;
    }
    set [_isPaltformDesktop](library$32package$58get$47get_state_manager$47src$47simple$47get_responsive$46dart$58$58_isPaltformDesktop$35param) {
      this[__ResponsiveScreen__isPaltformDesktop] = library$32package$58get$47get_state_manager$47src$47simple$47get_responsive$46dart$58$58_isPaltformDesktop$35param;
    }
    static ['_#new#tearOff'](settings) {
      return new get_responsive.ResponsiveScreen.new(settings);
    }
    get height() {
      return context_extensions['ContextExtensionss|get#height'](this.context);
    }
    get width() {
      return context_extensions['ContextExtensionss|get#width'](this.context);
    }
    get isDesktop() {
      return this.screenType === get_responsive.ScreenType.Desktop;
    }
    get isTablet() {
      return this.screenType === get_responsive.ScreenType.Tablet;
    }
    get isPhone() {
      return this.screenType === get_responsive.ScreenType.Phone;
    }
    get isWatch() {
      return this.screenType === get_responsive.ScreenType.Watch;
    }
    get [_getdeviceWidth]() {
      if (this[_isPaltformDesktop]) {
        return this.width;
      }
      return context_extensions['ContextExtensionss|get#mediaQueryShortestSide'](this.context);
    }
    get screenType() {
      let deviceWidth = this[_getdeviceWidth];
      if (deviceWidth >= this.settings.desktopChangePoint) return get_responsive.ScreenType.Desktop;
      if (deviceWidth >= this.settings.tabletChangePoint) return get_responsive.ScreenType.Tablet;
      if (deviceWidth < this.settings.watchChangePoint) return get_responsive.ScreenType.Watch;
      return get_responsive.ScreenType.Phone;
    }
    responsiveValue(T, opts) {
      let mobile = opts && 'mobile' in opts ? opts.mobile : null;
      let tablet = opts && 'tablet' in opts ? opts.tablet : null;
      let desktop = opts && 'desktop' in opts ? opts.desktop : null;
      let watch = opts && 'watch' in opts ? opts.watch : null;
      if (this.isDesktop && desktop != null) return desktop;
      if (this.isTablet && tablet != null) return tablet;
      if (this.isPhone && mobile != null) return mobile;
      return watch;
    }
  };
  (get_responsive.ResponsiveScreen.new = function(settings) {
    this[__ResponsiveScreen_context] = null;
    this[__ResponsiveScreen__isPaltformDesktop] = null;
    this[settings$0] = settings;
    this[_isPaltformDesktop] = platform.GetPlatform.isDesktop;
  }).prototype = get_responsive.ResponsiveScreen.prototype;
  dart.addTypeTests(get_responsive.ResponsiveScreen);
  dart.addTypeCaches(get_responsive.ResponsiveScreen);
  dart.setMethodSignature(get_responsive.ResponsiveScreen, () => ({
    __proto__: dart.getMethods(get_responsive.ResponsiveScreen.__proto__),
    responsiveValue: dart.gFnType(T => [dart.nullable(T), [], {desktop: dart.nullable(T), mobile: dart.nullable(T), tablet: dart.nullable(T), watch: dart.nullable(T)}, {}], T => [dart.nullable(core.Object)])
  }));
  dart.setGetterSignature(get_responsive.ResponsiveScreen, () => ({
    __proto__: dart.getGetters(get_responsive.ResponsiveScreen.__proto__),
    context: framework.BuildContext,
    [_isPaltformDesktop]: core.bool,
    height: core.double,
    width: core.double,
    isDesktop: core.bool,
    isTablet: core.bool,
    isPhone: core.bool,
    isWatch: core.bool,
    [_getdeviceWidth]: core.double,
    screenType: get_responsive.ScreenType
  }));
  dart.setSetterSignature(get_responsive.ResponsiveScreen, () => ({
    __proto__: dart.getSetters(get_responsive.ResponsiveScreen.__proto__),
    context: framework.BuildContext,
    [_isPaltformDesktop]: core.bool
  }));
  dart.setLibraryUri(get_responsive.ResponsiveScreen, I[20]);
  dart.setFieldSignature(get_responsive.ResponsiveScreen, () => ({
    __proto__: dart.getFields(get_responsive.ResponsiveScreen.__proto__),
    [__ResponsiveScreen_context]: dart.fieldType(dart.nullable(framework.BuildContext)),
    settings: dart.finalFieldType(get_responsive.ResponsiveScreenSettings),
    [__ResponsiveScreen__isPaltformDesktop]: dart.fieldType(dart.nullable(core.bool))
  }));
  get_responsive.ScreenType = class ScreenType extends core._Enum {
    toString() {
      return "ScreenType." + this[_name];
    }
  };
  (get_responsive.ScreenType.new = function(index, name) {
    get_responsive.ScreenType.__proto__.new.call(this, index, name);
    ;
  }).prototype = get_responsive.ScreenType.prototype;
  dart.addTypeTests(get_responsive.ScreenType);
  dart.addTypeCaches(get_responsive.ScreenType);
  dart.setLibraryUri(get_responsive.ScreenType, I[20]);
  dart.setStaticFieldSignature(get_responsive.ScreenType, () => ['values', 'Watch', 'Phone', 'Tablet', 'Desktop']);
  dart.defineExtensionMethods(get_responsive.ScreenType, ['toString']);
  dart.defineLazy(get_responsive.ScreenType, {
    /*get_responsive.ScreenType.values*/get values() {
      return C[149] || CT.C149;
    },
    /*get_responsive.ScreenType.Watch*/get Watch() {
      return C[150] || CT.C150;
    },
    /*get_responsive.ScreenType.Phone*/get Phone() {
      return C[151] || CT.C151;
    },
    /*get_responsive.ScreenType.Tablet*/get Tablet() {
      return C[152] || CT.C152;
    },
    /*get_responsive.ScreenType.Desktop*/get Desktop() {
      return C[153] || CT.C153;
    }
  }, false);
  var scroll = dart.privateName(get_controllers, "ScrollMixin.scroll");
  var _canFetchBottom = dart.privateName(get_controllers, "_canFetchBottom");
  var _canFetchTop = dart.privateName(get_controllers, "_canFetchTop");
  var _listener = dart.privateName(get_controllers, "_listener");
  var _checkIfCanLoadMore = dart.privateName(get_controllers, "_checkIfCanLoadMore");
  get_controllers.ScrollMixin = class ScrollMixin extends lifecycle.GetLifeCycleBase {};
  get_controllers.ScrollMixin[dart.mixinOn] = GetLifeCycleBase => class ScrollMixin extends GetLifeCycleBase {
    get scroll() {
      return this[scroll];
    }
    set scroll(value) {
      super.scroll = value;
    }
    onInit() {
      super.onInit();
      this.scroll.addListener(dart.bind(this, _listener));
    }
    [_listener]() {
      if (this.scroll.position.atEdge) {
        this[_checkIfCanLoadMore]();
      }
    }
    [_checkIfCanLoadMore]() {
      return async.async(dart.void, (function* _checkIfCanLoadMore() {
        if (this.scroll.position.pixels === 0) {
          if (!this[_canFetchTop]) return;
          this[_canFetchTop] = false;
          yield this.onTopScroll();
          this[_canFetchTop] = true;
        } else {
          if (!this[_canFetchBottom]) return;
          this[_canFetchBottom] = false;
          yield this.onEndScroll();
          this[_canFetchBottom] = true;
        }
      }).bind(this));
    }
    onClose() {
      this.scroll.removeListener(dart.bind(this, _listener));
      super.onClose();
    }
  };
  (get_controllers.ScrollMixin[dart.mixinNew] = function() {
    this[scroll] = new scroll_controller.ScrollController.new();
    this[_canFetchBottom] = true;
    this[_canFetchTop] = true;
  }).prototype = get_controllers.ScrollMixin.prototype;
  dart.addTypeTests(get_controllers.ScrollMixin);
  dart.addTypeCaches(get_controllers.ScrollMixin);
  get_controllers.ScrollMixin[dart.implements] = () => [lifecycle.GetLifeCycleBase];
  dart.setMethodSignature(get_controllers.ScrollMixin, () => ({
    __proto__: dart.getMethods(get_controllers.ScrollMixin.__proto__),
    [_listener]: dart.fnType(dart.void, []),
    [_checkIfCanLoadMore]: dart.fnType(async.Future$(dart.void), [])
  }));
  dart.setLibraryUri(get_controllers.ScrollMixin, I[12]);
  dart.setFieldSignature(get_controllers.ScrollMixin, () => ({
    __proto__: dart.getFields(get_controllers.ScrollMixin.__proto__),
    scroll: dart.finalFieldType(scroll_controller.ScrollController),
    [_canFetchBottom]: dart.fieldType(core.bool),
    [_canFetchTop]: dart.fieldType(core.bool)
  }));
  get_controllers.RxController = class RxController extends rx_disposable.DisposableInterface {};
  (get_controllers.RxController.new = function() {
    get_controllers.RxController.__proto__.new.call(this);
    ;
  }).prototype = get_controllers.RxController.prototype;
  dart.addTypeTests(get_controllers.RxController);
  dart.addTypeCaches(get_controllers.RxController);
  dart.setLibraryUri(get_controllers.RxController, I[12]);
  var _ticker = dart.privateName(rx_ticket_provider_mixin, "_ticker");
  rx_ticket_provider_mixin.GetSingleTickerProviderStateMixin = class GetSingleTickerProviderStateMixin extends get_controllers.GetxController {};
  rx_ticket_provider_mixin.GetSingleTickerProviderStateMixin[dart.mixinOn] = GetxController => class GetSingleTickerProviderStateMixin extends GetxController {
    createTicker(onTick) {
      if (!dart.fn(() => {
        if (this[_ticker] == null) return true;
        dart.throw(new assertions.FlutterError.fromParts(T$.JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new(dart.str(this[$runtimeType]) + " is a GetSingleTickerProviderStateMixin but multiple tickers were created."), new assertions.ErrorDescription.new("A GetSingleTickerProviderStateMixin can only be used as a TickerProvider once."), new assertions.ErrorHint.new("If a State is used for multiple AnimationController objects, or if it is passed to other " + "objects and those objects might use it more than one time in total, then instead of " + "mixing in a GetSingleTickerProviderStateMixin, use a regular GetTickerProviderStateMixin.")])));
      }, T$.VoidTobool())()) dart.assertFailed(null, I[21], 35, 12, "() {\n      if (_ticker == null) return true;\n      throw FlutterError.fromParts(<DiagnosticsNode>[\n        ErrorSummary(\n            '$runtimeType is a GetSingleTickerProviderStateMixin but multiple tickers were created.'),\n        ErrorDescription(\n            'A GetSingleTickerProviderStateMixin can only be used as a TickerProvider once.'),\n        ErrorHint(\n          'If a State is used for multiple AnimationController objects, or if it is passed to other '\n          'objects and those objects might use it more than one time in total, then instead of '\n          'mixing in a GetSingleTickerProviderStateMixin, use a regular GetTickerProviderStateMixin.',\n        ),\n      ]);\n    }()");
      this[_ticker] = new ticker.Ticker.new(onTick, {debugLabel: "created by " + dart.str(this)});
      return dart.nullCheck(this[_ticker]);
    }
    didChangeDependencies(context) {
      if (this[_ticker] != null) dart.nullCheck(this[_ticker]).muted = !ticker_provider.TickerMode.of(context);
    }
    onClose() {
      if (!dart.fn(() => {
        if (this[_ticker] == null || !dart.nullCheck(this[_ticker]).isActive) return true;
        dart.throw(new assertions.FlutterError.fromParts(T$.JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new(dart.str(this) + " was disposed with an active Ticker."), new assertions.ErrorDescription.new(dart.str(this[$runtimeType]) + " created a Ticker via its GetSingleTickerProviderStateMixin, but at the time " + "dispose() was called on the mixin, that Ticker was still active. The Ticker must " + "be disposed before calling super.dispose()."), new assertions.ErrorHint.new("Tickers used by AnimationControllers " + "should be disposed by calling dispose() on the AnimationController itself. " + "Otherwise, the ticker will leak."), dart.nullCheck(this[_ticker]).describeForError("The offending ticker was")])));
      }, T$.VoidTobool())()) dart.assertFailed(null, I[21], 64, 12, "() {\n      if (_ticker == null || !_ticker!.isActive) return true;\n      throw FlutterError.fromParts(<DiagnosticsNode>[\n        ErrorSummary('$this was disposed with an active Ticker.'),\n        ErrorDescription(\n          '$runtimeType created a Ticker via its GetSingleTickerProviderStateMixin, but at the time '\n          'dispose() was called on the mixin, that Ticker was still active. The Ticker must '\n          'be disposed before calling super.dispose().',\n        ),\n        ErrorHint(\n          'Tickers used by AnimationControllers '\n          'should be disposed by calling dispose() on the AnimationController itself. '\n          'Otherwise, the ticker will leak.',\n        ),\n        _ticker!.describeForError('The offending ticker was'),\n      ]);\n    }()");
      super.onClose();
    }
  };
  (rx_ticket_provider_mixin.GetSingleTickerProviderStateMixin[dart.mixinNew] = function() {
    this[_ticker] = null;
  }).prototype = rx_ticket_provider_mixin.GetSingleTickerProviderStateMixin.prototype;
  dart.addTypeTests(rx_ticket_provider_mixin.GetSingleTickerProviderStateMixin);
  dart.addTypeCaches(rx_ticket_provider_mixin.GetSingleTickerProviderStateMixin);
  rx_ticket_provider_mixin.GetSingleTickerProviderStateMixin[dart.implements] = () => [ticker.TickerProvider, get_controllers.GetxController];
  dart.setMethodSignature(rx_ticket_provider_mixin.GetSingleTickerProviderStateMixin, () => ({
    __proto__: dart.getMethods(rx_ticket_provider_mixin.GetSingleTickerProviderStateMixin.__proto__),
    createTicker: dart.fnType(ticker.Ticker, [dart.fnType(dart.void, [core.Duration])]),
    didChangeDependencies: dart.fnType(dart.void, [framework.BuildContext])
  }));
  dart.setLibraryUri(rx_ticket_provider_mixin.GetSingleTickerProviderStateMixin, I[22]);
  dart.setFieldSignature(rx_ticket_provider_mixin.GetSingleTickerProviderStateMixin, () => ({
    __proto__: dart.getFields(rx_ticket_provider_mixin.GetSingleTickerProviderStateMixin.__proto__),
    [_ticker]: dart.fieldType(dart.nullable(ticker.Ticker))
  }));
  var _tickers = dart.privateName(rx_ticket_provider_mixin, "_tickers");
  var _removeTicker = dart.privateName(rx_ticket_provider_mixin, "_removeTicker");
  rx_ticket_provider_mixin.GetTickerProviderStateMixin = class GetTickerProviderStateMixin extends get_controllers.GetxController {};
  rx_ticket_provider_mixin.GetTickerProviderStateMixin[dart.mixinOn] = GetxController => class GetTickerProviderStateMixin extends GetxController {
    createTicker(onTick) {
      this[_tickers] == null ? this[_tickers] = T$.LinkedHashSetOf_WidgetTicker().new() : null;
      let result = new rx_ticket_provider_mixin._WidgetTicker.new(onTick, this, {debugLabel: "created by " + diagnostics.describeIdentity(this)});
      dart.nullCheck(this[_tickers]).add(result);
      return result;
    }
    [_removeTicker](ticker) {
      if (!(this[_tickers] != null)) dart.assertFailed(null, I[21], 123, 12, "_tickers != null");
      if (!dart.nullCheck(this[_tickers]).contains(ticker)) dart.assertFailed(null, I[21], 124, 12, "_tickers!.contains(ticker)");
      dart.nullCheck(this[_tickers]).remove(ticker);
    }
    didChangeDependencies(context) {
      let muted = !ticker_provider.TickerMode.of(context);
      if (this[_tickers] != null) {
        for (let ticker of dart.nullCheck(this[_tickers])) {
          ticker.muted = muted;
        }
      }
    }
    onClose() {
      if (!dart.fn(() => {
        if (this[_tickers] != null) {
          for (let ticker of dart.nullCheck(this[_tickers])) {
            if (ticker.isActive) {
              dart.throw(new assertions.FlutterError.fromParts(T$.JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new(dart.str(this) + " was disposed with an active Ticker."), new assertions.ErrorDescription.new(dart.str(this[$runtimeType]) + " created a Ticker via its GetTickerProviderStateMixin, but at the time " + "dispose() was called on the mixin, that Ticker was still active. All Tickers must " + "be disposed before calling super.dispose()."), new assertions.ErrorHint.new("Tickers used by AnimationControllers " + "should be disposed by calling dispose() on the AnimationController itself. " + "Otherwise, the ticker will leak."), ticker.describeForError("The offending ticker was")])));
            }
          }
        }
        return true;
      }, T$.VoidTobool())()) dart.assertFailed(null, I[21], 139, 12, "() {\n      if (_tickers != null) {\n        for (final ticker in _tickers!) {\n          if (ticker.isActive) {\n            throw FlutterError.fromParts(<DiagnosticsNode>[\n              ErrorSummary('$this was disposed with an active Ticker.'),\n              ErrorDescription(\n                '$runtimeType created a Ticker via its GetTickerProviderStateMixin, but at the time '\n                'dispose() was called on the mixin, that Ticker was still active. All Tickers must '\n                'be disposed before calling super.dispose().',\n              ),\n              ErrorHint(\n                'Tickers used by AnimationControllers '\n                'should be disposed by calling dispose() on the AnimationController itself. '\n                'Otherwise, the ticker will leak.',\n              ),\n              ticker.describeForError('The offending ticker was'),\n            ]);\n          }\n        }\n      }\n      return true;\n    }()");
      super.onClose();
    }
  };
  (rx_ticket_provider_mixin.GetTickerProviderStateMixin[dart.mixinNew] = function() {
    this[_tickers] = null;
  }).prototype = rx_ticket_provider_mixin.GetTickerProviderStateMixin.prototype;
  dart.addTypeTests(rx_ticket_provider_mixin.GetTickerProviderStateMixin);
  dart.addTypeCaches(rx_ticket_provider_mixin.GetTickerProviderStateMixin);
  rx_ticket_provider_mixin.GetTickerProviderStateMixin[dart.implements] = () => [ticker.TickerProvider, get_controllers.GetxController];
  dart.setMethodSignature(rx_ticket_provider_mixin.GetTickerProviderStateMixin, () => ({
    __proto__: dart.getMethods(rx_ticket_provider_mixin.GetTickerProviderStateMixin.__proto__),
    createTicker: dart.fnType(ticker.Ticker, [dart.fnType(dart.void, [core.Duration])]),
    [_removeTicker]: dart.fnType(dart.void, [rx_ticket_provider_mixin._WidgetTicker]),
    didChangeDependencies: dart.fnType(dart.void, [framework.BuildContext])
  }));
  dart.setLibraryUri(rx_ticket_provider_mixin.GetTickerProviderStateMixin, I[22]);
  dart.setFieldSignature(rx_ticket_provider_mixin.GetTickerProviderStateMixin, () => ({
    __proto__: dart.getFields(rx_ticket_provider_mixin.GetTickerProviderStateMixin.__proto__),
    [_tickers]: dart.fieldType(dart.nullable(core.Set$(ticker.Ticker)))
  }));
  var _creator$ = dart.privateName(rx_ticket_provider_mixin, "_creator");
  rx_ticket_provider_mixin._WidgetTicker = class _WidgetTicker extends ticker.Ticker {
    static ['_#new#tearOff'](onTick, _creator, opts) {
      let debugLabel = opts && 'debugLabel' in opts ? opts.debugLabel : null;
      return new rx_ticket_provider_mixin._WidgetTicker.new(onTick, _creator, {debugLabel: debugLabel});
    }
    dispose() {
      this[_creator$][_removeTicker](this);
      super.dispose();
    }
  };
  (rx_ticket_provider_mixin._WidgetTicker.new = function(onTick, _creator, opts) {
    let debugLabel = opts && 'debugLabel' in opts ? opts.debugLabel : null;
    this[_creator$] = _creator;
    rx_ticket_provider_mixin._WidgetTicker.__proto__.new.call(this, onTick, {debugLabel: debugLabel});
    ;
  }).prototype = rx_ticket_provider_mixin._WidgetTicker.prototype;
  dart.addTypeTests(rx_ticket_provider_mixin._WidgetTicker);
  dart.addTypeCaches(rx_ticket_provider_mixin._WidgetTicker);
  dart.setLibraryUri(rx_ticket_provider_mixin._WidgetTicker, I[22]);
  dart.setFieldSignature(rx_ticket_provider_mixin._WidgetTicker, () => ({
    __proto__: dart.getFields(rx_ticket_provider_mixin._WidgetTicker.__proto__),
    [_creator$]: dart.finalFieldType(rx_ticket_provider_mixin.GetTickerProviderStateMixin)
  }));
  rx_ticket_provider_mixin.SingleGetTickerProviderMixin = class SingleGetTickerProviderMixin extends rx_disposable.DisposableInterface {};
  rx_ticket_provider_mixin.SingleGetTickerProviderMixin[dart.mixinOn] = DisposableInterface => class SingleGetTickerProviderMixin extends DisposableInterface {
    createTicker(onTick) {
      return new ticker.Ticker.new(onTick);
    }
  };
  dart.addTypeTests(rx_ticket_provider_mixin.SingleGetTickerProviderMixin);
  dart.addTypeCaches(rx_ticket_provider_mixin.SingleGetTickerProviderMixin);
  rx_ticket_provider_mixin.SingleGetTickerProviderMixin[dart.implements] = () => [ticker.TickerProvider, rx_disposable.DisposableInterface];
  dart.setMethodSignature(rx_ticket_provider_mixin.SingleGetTickerProviderMixin, () => ({
    __proto__: dart.getMethods(rx_ticket_provider_mixin.SingleGetTickerProviderMixin.__proto__),
    createTicker: dart.fnType(ticker.Ticker, [dart.fnType(dart.void, [core.Duration])])
  }));
  dart.setLibraryUri(rx_ticket_provider_mixin.SingleGetTickerProviderMixin, I[22]);
  const _is_Value_default = Symbol('_is_Value_default');
  rx_notifier.Value$ = dart.generic(T => {
    var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
    const ListNotifier_StateMixin$36 = class ListNotifier_StateMixin extends list_notifier.ListNotifier {};
    (ListNotifier_StateMixin$36.new = function() {
      rx_notifier.StateMixin$(T)[dart.mixinNew].call(this);
      ListNotifier_StateMixin$36.__proto__.new.call(this);
    }).prototype = ListNotifier_StateMixin$36.prototype;
    dart.applyMixin(ListNotifier_StateMixin$36, rx_notifier.StateMixin$(T));
    class Value extends ListNotifier_StateMixin$36 {
      static ['_#new#tearOff'](T, val) {
        return new (rx_notifier.Value$(T)).new(val);
      }
      get value() {
        this.notifyChildrens();
        return this[_value$];
      }
      set value(newValue) {
        __t$TN().as(newValue);
        if (dart.equals(this[_value$], newValue)) return;
        this[_value$] = newValue;
        this.refresh();
      }
      call(v = null) {
        __t$TN().as(v);
        if (v != null) {
          this.value = v;
        }
        return this.value;
      }
      update(fn) {
        fn(this.value);
        this.refresh();
      }
      toString() {
        return dart.toString(this.value);
      }
      toJson() {
        let t18;
        t18 = this.value;
        return t18 == null ? null : dart.dsend(t18, 'toJson', []);
      }
    }
    (Value.new = function(val) {
      Value.__proto__.new.call(this);
      this[_value$] = val;
      this[_fillEmptyStatus]();
    }).prototype = Value.prototype;
    dart.addTypeTests(Value);
    Value.prototype[_is_Value_default] = true;
    dart.addTypeCaches(Value);
    Value[dart.implements] = () => [change_notifier.ValueListenable$(dart.nullable(T))];
    dart.setMethodSignature(Value, () => ({
      __proto__: dart.getMethods(Value.__proto__),
      call: dart.fnType(dart.nullable(T), [], [dart.nullable(core.Object)]),
      update: dart.fnType(dart.void, [dart.fnType(dart.void, [dart.nullable(T)])]),
      toJson: dart.fnType(dart.dynamic, [])
    }));
    dart.setLibraryUri(Value, I[13]);
    dart.defineExtensionMethods(Value, ['toString']);
    return Value;
  });
  rx_notifier.Value = rx_notifier.Value$();
  dart.addTypeTests(rx_notifier.Value, _is_Value_default);
  const _is_GetNotifier_default = Symbol('_is_GetNotifier_default');
  rx_notifier.GetNotifier$ = dart.generic(T => {
    const Value_GetLifeCycleBase$36 = class Value_GetLifeCycleBase extends rx_notifier.Value$(T) {};
    (Value_GetLifeCycleBase$36.new = function(val) {
      lifecycle.GetLifeCycleBase[dart.mixinNew].call(this);
      Value_GetLifeCycleBase$36.__proto__.new.call(this, val);
    }).prototype = Value_GetLifeCycleBase$36.prototype;
    dart.applyMixin(Value_GetLifeCycleBase$36, lifecycle.GetLifeCycleBase);
    class GetNotifier extends Value_GetLifeCycleBase$36 {
      onInit() {
        let t18;
        super.onInit();
        t18 = get_core.ambiguate(binding$.SchedulerBinding, binding$.SchedulerBinding.instance);
        t18 == null ? null : t18.addPostFrameCallback(dart.fn(_ => this.onReady(), T$.DurationTovoid()));
      }
    }
    (GetNotifier.new = function(initial) {
      GetNotifier.__proto__.new.call(this, initial);
      this.$configureLifeCycle();
    }).prototype = GetNotifier.prototype;
    dart.addTypeTests(GetNotifier);
    GetNotifier.prototype[_is_GetNotifier_default] = true;
    dart.addTypeCaches(GetNotifier);
    dart.setLibraryUri(GetNotifier, I[13]);
    return GetNotifier;
  });
  rx_notifier.GetNotifier = rx_notifier.GetNotifier$();
  dart.addTypeTests(rx_notifier.GetNotifier, _is_GetNotifier_default);
  var isLoading$ = dart.privateName(rx_notifier, "RxStatus.isLoading");
  var isError$ = dart.privateName(rx_notifier, "RxStatus.isError");
  var isSuccess$ = dart.privateName(rx_notifier, "RxStatus.isSuccess");
  var isEmpty$ = dart.privateName(rx_notifier, "RxStatus.isEmpty");
  var isLoadingMore$ = dart.privateName(rx_notifier, "RxStatus.isLoadingMore");
  var errorMessage$ = dart.privateName(rx_notifier, "RxStatus.errorMessage");
  rx_notifier.RxStatus = class RxStatus extends core.Object {
    get isLoading() {
      return this[isLoading$];
    }
    set isLoading(value) {
      super.isLoading = value;
    }
    get isError() {
      return this[isError$];
    }
    set isError(value) {
      super.isError = value;
    }
    get isSuccess() {
      return this[isSuccess$];
    }
    set isSuccess(value) {
      super.isSuccess = value;
    }
    get isEmpty() {
      return this[isEmpty$];
    }
    set isEmpty(value) {
      super.isEmpty = value;
    }
    get isLoadingMore() {
      return this[isLoadingMore$];
    }
    set isLoadingMore(value) {
      super.isLoadingMore = value;
    }
    get errorMessage() {
      return this[errorMessage$];
    }
    set errorMessage(value) {
      super.errorMessage = value;
    }
    static ['_#_#tearOff'](opts) {
      let isEmpty = opts && 'isEmpty' in opts ? opts.isEmpty : false;
      let isLoading = opts && 'isLoading' in opts ? opts.isLoading : false;
      let isError = opts && 'isError' in opts ? opts.isError : false;
      let isSuccess = opts && 'isSuccess' in opts ? opts.isSuccess : false;
      let errorMessage = opts && 'errorMessage' in opts ? opts.errorMessage : null;
      let isLoadingMore = opts && 'isLoadingMore' in opts ? opts.isLoadingMore : false;
      return new rx_notifier.RxStatus.__({isEmpty: isEmpty, isLoading: isLoading, isError: isError, isSuccess: isSuccess, errorMessage: errorMessage, isLoadingMore: isLoadingMore});
    }
    static loading() {
      return new rx_notifier.RxStatus.__({isLoading: true});
    }
    static ['_#loading#tearOff']() {
      return rx_notifier.RxStatus.loading();
    }
    static loadingMore() {
      return new rx_notifier.RxStatus.__({isSuccess: true, isLoadingMore: true});
    }
    static ['_#loadingMore#tearOff']() {
      return rx_notifier.RxStatus.loadingMore();
    }
    static success() {
      return new rx_notifier.RxStatus.__({isSuccess: true});
    }
    static ['_#success#tearOff']() {
      return rx_notifier.RxStatus.success();
    }
    static error(message = null) {
      return new rx_notifier.RxStatus.__({isError: true, errorMessage: message});
    }
    static ['_#error#tearOff'](message = null) {
      return rx_notifier.RxStatus.error(message);
    }
    static empty() {
      return new rx_notifier.RxStatus.__({isEmpty: true});
    }
    static ['_#empty#tearOff']() {
      return rx_notifier.RxStatus.empty();
    }
  };
  (rx_notifier.RxStatus.__ = function(opts) {
    let isEmpty = opts && 'isEmpty' in opts ? opts.isEmpty : false;
    let isLoading = opts && 'isLoading' in opts ? opts.isLoading : false;
    let isError = opts && 'isError' in opts ? opts.isError : false;
    let isSuccess = opts && 'isSuccess' in opts ? opts.isSuccess : false;
    let errorMessage = opts && 'errorMessage' in opts ? opts.errorMessage : null;
    let isLoadingMore = opts && 'isLoadingMore' in opts ? opts.isLoadingMore : false;
    this[isEmpty$] = isEmpty;
    this[isLoading$] = isLoading;
    this[isError$] = isError;
    this[isSuccess$] = isSuccess;
    this[errorMessage$] = errorMessage;
    this[isLoadingMore$] = isLoadingMore;
    ;
  }).prototype = rx_notifier.RxStatus.prototype;
  dart.addTypeTests(rx_notifier.RxStatus);
  dart.addTypeCaches(rx_notifier.RxStatus);
  dart.setStaticMethodSignature(rx_notifier.RxStatus, () => ['loading', 'loadingMore', 'success', 'error', 'empty']);
  dart.setLibraryUri(rx_notifier.RxStatus, I[13]);
  dart.setFieldSignature(rx_notifier.RxStatus, () => ({
    __proto__: dart.getFields(rx_notifier.RxStatus.__proto__),
    isLoading: dart.finalFieldType(core.bool),
    isError: dart.finalFieldType(core.bool),
    isSuccess: dart.finalFieldType(core.bool),
    isEmpty: dart.finalFieldType(core.bool),
    isLoadingMore: dart.finalFieldType(core.bool),
    errorMessage: dart.finalFieldType(dart.nullable(core.String))
  }));
  var Widget__location = dart.privateName(framework, "Widget._location");
  var Widget_key = dart.privateName(framework, "Widget.key");
  var ProgressIndicator_semanticsValue = dart.privateName(progress_indicator, "ProgressIndicator.semanticsValue");
  var ProgressIndicator_semanticsLabel = dart.privateName(progress_indicator, "ProgressIndicator.semanticsLabel");
  var ProgressIndicator_valueColor = dart.privateName(progress_indicator, "ProgressIndicator.valueColor");
  var ProgressIndicator_color = dart.privateName(progress_indicator, "ProgressIndicator.color");
  var ProgressIndicator_backgroundColor = dart.privateName(progress_indicator, "ProgressIndicator.backgroundColor");
  var ProgressIndicator_value = dart.privateName(progress_indicator, "ProgressIndicator.value");
  var CircularProgressIndicator_strokeWidth = dart.privateName(progress_indicator, "CircularProgressIndicator.strokeWidth");
  var CircularProgressIndicator__indicatorType = dart.privateName(progress_indicator, "CircularProgressIndicator._indicatorType");
  var SingleChildRenderObjectWidget_child = dart.privateName(framework, "SingleChildRenderObjectWidget.child");
  var Align_heightFactor = dart.privateName(basic, "Align.heightFactor");
  var Align_widthFactor = dart.privateName(basic, "Align.widthFactor");
  var Align_alignment = dart.privateName(basic, "Align.alignment");
  rx_notifier['ReactiveT|get#reactive'] = function ReactiveT$124get$35reactive(T, $this) {
    return new (rx_notifier.Value$(T)).new($this);
  };
  rx_notifier['StateExt|obx'] = function StateExt$124obx(T, $this, widget, opts) {
    let onError = opts && 'onError' in opts ? opts.onError : null;
    let onLoading = opts && 'onLoading' in opts ? opts.onLoading : null;
    let onEmpty = opts && 'onEmpty' in opts ? opts.onEmpty : null;
    return new simple_builder.SimpleBuilder.new({builder: dart.fn(_ => {
        let t20;
        if ($this.status.isLoading) {
          t20 = onLoading;
          return t20 == null ? C[154] || CT.C154 : t20;
        } else if ($this.status.isError) {
          return onError != null ? onError($this.status.errorMessage) : new basic.Center.new({child: new text.Text.new("A error occurred: " + dart.str($this.status.errorMessage), {$creationLocationd_0dea112b090073317d4: C[160] || CT.C160}), $creationLocationd_0dea112b090073317d4: C[161] || CT.C161});
        } else if ($this.status.isEmpty) {
          return onEmpty != null ? onEmpty : new basic.SizedBox.shrink({$creationLocationd_0dea112b090073317d4: C[162] || CT.C162});
        }
        return widget($this.value);
      }, T$.BuildContextToWidget()), $creationLocationd_0dea112b090073317d4: C[163] || CT.C163});
  };
  rx_notifier['StateExt|get#obx'] = function StateExt$124get$35obx(T, $this) {
    return dart.fn((widget, opts) => {
      let onError = opts && 'onError' in opts ? opts.onError : null;
      let onLoading = opts && 'onLoading' in opts ? opts.onLoading : null;
      let onEmpty = opts && 'onEmpty' in opts ? opts.onEmpty : null;
      return rx_notifier['StateExt|obx'](T, $this, widget, {onError: onError, onLoading: onLoading, onEmpty: onEmpty});
    }, dart.fnType(framework.Widget, [dart.fnType(framework.Widget, [dart.nullable(T)])], {onEmpty: T$.WidgetN(), onError: T$.StringNToNWidget(), onLoading: T$.WidgetN()}, {}));
  };
  var builder$4 = dart.privateName(rx_getx_widget, "GetX.builder");
  var global$1 = dart.privateName(rx_getx_widget, "GetX.global");
  var autoRemove$1 = dart.privateName(rx_getx_widget, "GetX.autoRemove");
  var assignId$0 = dart.privateName(rx_getx_widget, "GetX.assignId");
  var initState$1 = dart.privateName(rx_getx_widget, "GetX.initState");
  var dispose$1 = dart.privateName(rx_getx_widget, "GetX.dispose");
  var didChangeDependencies$1 = dart.privateName(rx_getx_widget, "GetX.didChangeDependencies");
  var didUpdateWidget$1 = dart.privateName(rx_getx_widget, "GetX.didUpdateWidget");
  var init$1 = dart.privateName(rx_getx_widget, "GetX.init");
  var tag$1 = dart.privateName(rx_getx_widget, "GetX.tag");
  const _is_GetX_default = Symbol('_is_GetX_default');
  rx_getx_widget.GetX$ = dart.generic(T => {
    var __t$DiagnosticsPropertyOfT = () => (__t$DiagnosticsPropertyOfT = dart.constFn(diagnostics.DiagnosticsProperty$(T)))();
    var __t$TToWidget = () => (__t$TToWidget = dart.constFn(dart.fnType(framework.Widget, [T])))();
    var __t$ObjectFlagPropertyOfTToWidget = () => (__t$ObjectFlagPropertyOfTToWidget = dart.constFn(diagnostics.ObjectFlagProperty$(__t$TToWidget())))();
    var __t$GetXStateOfT = () => (__t$GetXStateOfT = dart.constFn(rx_getx_widget.GetXState$(T)))();
    class GetX extends framework.StatefulWidget {
      get builder() {
        return this[builder$4];
      }
      set builder(value) {
        super.builder = value;
      }
      get global() {
        return this[global$1];
      }
      set global(value) {
        super.global = value;
      }
      get autoRemove() {
        return this[autoRemove$1];
      }
      set autoRemove(value) {
        super.autoRemove = value;
      }
      get assignId() {
        return this[assignId$0];
      }
      set assignId(value) {
        super.assignId = value;
      }
      get initState() {
        return this[initState$1];
      }
      set initState(value) {
        super.initState = value;
      }
      get dispose() {
        return this[dispose$1];
      }
      set dispose(value) {
        super.dispose = value;
      }
      get didChangeDependencies() {
        return this[didChangeDependencies$1];
      }
      set didChangeDependencies(value) {
        super.didChangeDependencies = value;
      }
      get didUpdateWidget() {
        return this[didUpdateWidget$1];
      }
      set didUpdateWidget(value) {
        super.didUpdateWidget = value;
      }
      get init() {
        return this[init$1];
      }
      set init(value) {
        super.init = value;
      }
      get tag() {
        return this[tag$1];
      }
      set tag(value) {
        super.tag = value;
      }
      static ['_#new#tearOff'](T, opts) {
        let tag = opts && 'tag' in opts ? opts.tag : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let global = opts && 'global' in opts ? opts.global : true;
        let autoRemove = opts && 'autoRemove' in opts ? opts.autoRemove : true;
        let initState = opts && 'initState' in opts ? opts.initState : null;
        let assignId = opts && 'assignId' in opts ? opts.assignId : false;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let didChangeDependencies = opts && 'didChangeDependencies' in opts ? opts.didChangeDependencies : null;
        let didUpdateWidget = opts && 'didUpdateWidget' in opts ? opts.didUpdateWidget : null;
        let init = opts && 'init' in opts ? opts.init : null;
        return new (rx_getx_widget.GetX$(T)).new({tag: tag, builder: builder, global: global, autoRemove: autoRemove, initState: initState, assignId: assignId, dispose: dispose, didChangeDependencies: didChangeDependencies, didUpdateWidget: didUpdateWidget, init: init, $creationLocationd_0dea112b090073317d4: C[164] || CT.C164});
      }
      debugFillProperties(properties) {
        let t21;
        super.debugFillProperties(properties);
        t21 = properties;
        (() => {
          t21.add(new (__t$DiagnosticsPropertyOfT()).new("controller", this.init));
          t21.add(new (T$.DiagnosticsPropertyOfString()).new("tag", this.tag));
          t21.add(new (__t$ObjectFlagPropertyOfTToWidget()).has("builder", this.builder));
          return t21;
        })();
      }
      createState() {
        return new (__t$GetXStateOfT()).new();
      }
    }
    (GetX.new = function(opts) {
      let tag = opts && 'tag' in opts ? opts.tag : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let global = opts && 'global' in opts ? opts.global : true;
      let autoRemove = opts && 'autoRemove' in opts ? opts.autoRemove : true;
      let initState = opts && 'initState' in opts ? opts.initState : null;
      let assignId = opts && 'assignId' in opts ? opts.assignId : false;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let didChangeDependencies = opts && 'didChangeDependencies' in opts ? opts.didChangeDependencies : null;
      let didUpdateWidget = opts && 'didUpdateWidget' in opts ? opts.didUpdateWidget : null;
      let init = opts && 'init' in opts ? opts.init : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[tag$1] = tag;
      this[builder$4] = builder;
      this[global$1] = global;
      this[autoRemove$1] = autoRemove;
      this[initState$1] = initState;
      this[assignId$0] = assignId;
      this[dispose$1] = dispose;
      this[didChangeDependencies$1] = didChangeDependencies;
      this[didUpdateWidget$1] = didUpdateWidget;
      this[init$1] = init;
      GetX.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = GetX.prototype;
    dart.addTypeTests(GetX);
    GetX.prototype[_is_GetX_default] = true;
    dart.addTypeCaches(GetX);
    dart.setMethodSignature(GetX, () => ({
      __proto__: dart.getMethods(GetX.__proto__),
      createState: dart.fnType(rx_getx_widget.GetXState$(T), [])
    }));
    dart.setLibraryUri(GetX, I[23]);
    dart.setFieldSignature(GetX, () => ({
      __proto__: dart.getFields(GetX.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [T])),
      global: dart.finalFieldType(core.bool),
      autoRemove: dart.finalFieldType(core.bool),
      assignId: dart.finalFieldType(core.bool),
      initState: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [rx_getx_widget.GetXState$(T)]))),
      dispose: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [rx_getx_widget.GetXState$(T)]))),
      didChangeDependencies: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [rx_getx_widget.GetXState$(T)]))),
      didUpdateWidget: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [rx_getx_widget.GetX$(rx_disposable.DisposableInterface), rx_getx_widget.GetXState$(T)]))),
      init: dart.finalFieldType(dart.nullable(T)),
      tag: dart.finalFieldType(dart.nullable(core.String))
    }));
    return GetX;
  });
  rx_getx_widget.GetX = rx_getx_widget.GetX$();
  dart.addTypeTests(rx_getx_widget.GetX, _is_GetX_default);
  var controller$0 = dart.privateName(rx_getx_widget, "GetXState.controller");
  var _observer = dart.privateName(rx_getx_widget, "_observer");
  var _isCreator$0 = dart.privateName(rx_getx_widget, "_isCreator");
  var __GetXState__subs = dart.privateName(rx_getx_widget, "_#GetXState#_subs");
  var _subs = dart.privateName(rx_getx_widget, "_subs");
  const _is_GetXState_default = Symbol('_is_GetXState_default');
  rx_getx_widget.GetXState$ = dart.generic(T => {
    var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
    var __t$GetXStateOfT = () => (__t$GetXStateOfT = dart.constFn(rx_getx_widget.GetXState$(T)))();
    var __t$GetXStateOfTTovoid = () => (__t$GetXStateOfTTovoid = dart.constFn(dart.fnType(dart.void, [__t$GetXStateOfT()])))();
    var __t$GetXStateOfTToNvoid = () => (__t$GetXStateOfTToNvoid = dart.constFn(dart.nullable(__t$GetXStateOfTTovoid())))();
    var __t$GetXOfT = () => (__t$GetXOfT = dart.constFn(rx_getx_widget.GetX$(T)))();
    var __t$GetXOfDisposableInterfaceAndGetXStateOfTTovoid = () => (__t$GetXOfDisposableInterfaceAndGetXStateOfTTovoid = dart.constFn(dart.fnType(dart.void, [T$.GetXOfDisposableInterface(), __t$GetXStateOfT()])))();
    var __t$GetXOfDisposableInterfaceAndGetXStateOfTToNvoid = () => (__t$GetXOfDisposableInterfaceAndGetXStateOfTToNvoid = dart.constFn(dart.nullable(__t$GetXOfDisposableInterfaceAndGetXStateOfTTovoid())))();
    var __t$DiagnosticsPropertyOfT = () => (__t$DiagnosticsPropertyOfT = dart.constFn(diagnostics.DiagnosticsProperty$(T)))();
    var __t$TToWidget = () => (__t$TToWidget = dart.constFn(dart.fnType(framework.Widget, [T])))();
    class GetXState extends framework.State$(rx_getx_widget.GetX$(T)) {
      get controller() {
        return this[controller$0];
      }
      set controller(value) {
        this[controller$0] = __t$TN().as(value);
      }
      get [_subs]() {
        let t21;
        t21 = this[__GetXState__subs];
        return t21 == null ? dart.throw(new _internal.LateError.fieldNI("_subs")) : t21;
      }
      set [_subs](library$32package$58get$47get_state_manager$47src$47rx_flutter$47rx_getx_widget$46dart$58$58_subs$35param) {
        this[__GetXState__subs] = library$32package$58get$47get_state_manager$47src$47rx_flutter$47rx_getx_widget$46dart$58$58_subs$35param;
      }
      initState() {
        let t21, t21$, t21$0;
        let isRegistered = get_instance.GetInstance.new().isRegistered(T, {tag: this.widget.tag});
        if (this.widget.global) {
          if (isRegistered) {
            this[_isCreator$0] = get_instance.GetInstance.new().isPrepared(T, {tag: this.widget.tag});
            this.controller = get_instance.GetInstance.new().find(T, {tag: this.widget.tag});
          } else {
            this.controller = this.widget.init;
            this[_isCreator$0] = true;
            get_instance.GetInstance.new().put(T, dart.nullCheck(this.controller), {tag: this.widget.tag});
          }
        } else {
          this.controller = this.widget.init;
          this[_isCreator$0] = true;
          t21 = this.controller;
          t21 == null ? null : t21.onStart.call();
        }
        t21$ = __t$GetXStateOfTToNvoid().as(this.widget.initState);
        t21$ == null ? null : t21$(this);
        if (this.widget.global && get_main.Get.smartManagement === smart_management.SmartManagement.onlyBuilder) {
          t21$0 = this.controller;
          t21$0 == null ? null : t21$0.onStart.call();
        }
        this[_subs] = this[_observer].listen(dart.fn(data => this.setState(dart.fn(() => {
        }, T$.VoidTovoid())), T$.dynamicTovoid()), {cancelOnError: false});
        super.initState();
      }
      didChangeDependencies() {
        super.didChangeDependencies();
        if (__t$GetXStateOfTToNvoid().as(this.widget.didChangeDependencies) != null) {
          dart.nullCheck(__t$GetXStateOfTToNvoid().as(this.widget.didChangeDependencies))(this);
        }
      }
      didUpdateWidget(oldWidget) {
        let t21;
        T$.GetXOfDisposableInterface().as(oldWidget);
        super.didUpdateWidget(__t$GetXOfT().as(oldWidget));
        t21 = __t$GetXOfDisposableInterfaceAndGetXStateOfTToNvoid().as(this.widget.didUpdateWidget);
        t21 == null ? null : t21(oldWidget, this);
      }
      dispose() {
        if (__t$GetXStateOfTToNvoid().as(this.widget.dispose) != null) dart.nullCheck(__t$GetXStateOfTToNvoid().as(this.widget.dispose))(this);
        if (dart.nullCheck(this[_isCreator$0]) || this.widget.assignId) {
          if (this.widget.autoRemove && get_instance.GetInstance.new().isRegistered(T, {tag: this.widget.tag})) {
            get_instance.GetInstance.new().delete(T, {tag: this.widget.tag});
          }
        }
        this[_subs].cancel();
        this[_observer].close();
        this.controller = null;
        this[_isCreator$0] = null;
        super.dispose();
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        properties.add(new (__t$DiagnosticsPropertyOfT()).new("controller", this.controller));
      }
      build(context) {
        return rx_types.RxInterface.notifyChildren(framework.Widget, this[_observer], dart.fn(() => {
          let t22, t21;
          t21 = this.widget;
          t22 = dart.nullCheck(this.controller);
          return __t$TToWidget().as(t21.builder)(t22);
        }, T$.VoidToWidget()));
      }
      static ['_#new#tearOff'](T) {
        return new (rx_getx_widget.GetXState$(T)).new();
      }
    }
    (GetXState.new = function() {
      this[_observer] = new rx_types.RxNotifier.new();
      this[controller$0] = null;
      this[_isCreator$0] = false;
      this[__GetXState__subs] = null;
      GetXState.__proto__.new.call(this);
      ;
    }).prototype = GetXState.prototype;
    dart.addTypeTests(GetXState);
    GetXState.prototype[_is_GetXState_default] = true;
    dart.addTypeCaches(GetXState);
    dart.setMethodSignature(GetXState, () => ({
      __proto__: dart.getMethods(GetXState.__proto__),
      build: dart.fnType(framework.Widget, [framework.BuildContext])
    }));
    dart.setGetterSignature(GetXState, () => ({
      __proto__: dart.getGetters(GetXState.__proto__),
      [_subs]: async.StreamSubscription
    }));
    dart.setSetterSignature(GetXState, () => ({
      __proto__: dart.getSetters(GetXState.__proto__),
      [_subs]: async.StreamSubscription
    }));
    dart.setLibraryUri(GetXState, I[23]);
    dart.setFieldSignature(GetXState, () => ({
      __proto__: dart.getFields(GetXState.__proto__),
      [_observer]: dart.finalFieldType(rx_types.RxNotifier),
      controller: dart.fieldType(dart.nullable(T)),
      [_isCreator$0]: dart.fieldType(dart.nullable(core.bool)),
      [__GetXState__subs]: dart.fieldType(dart.nullable(async.StreamSubscription))
    }));
    return GetXState;
  });
  rx_getx_widget.GetXState = rx_getx_widget.GetXState$();
  dart.addTypeTests(rx_getx_widget.GetXState, _is_GetXState_default);
  const DisposableInterface_GetxServiceMixin$36 = class DisposableInterface_GetxServiceMixin extends rx_disposable.DisposableInterface {};
  (DisposableInterface_GetxServiceMixin$36.new = function() {
    DisposableInterface_GetxServiceMixin$36.__proto__.new.call(this);
  }).prototype = DisposableInterface_GetxServiceMixin$36.prototype;
  dart.applyMixin(DisposableInterface_GetxServiceMixin$36, lifecycle.GetxServiceMixin);
  rx_disposable.GetxService = class GetxService extends DisposableInterface_GetxServiceMixin$36 {};
  (rx_disposable.GetxService.new = function() {
    rx_disposable.GetxService.__proto__.new.call(this);
    ;
  }).prototype = rx_disposable.GetxService.prototype;
  dart.addTypeTests(rx_disposable.GetxService);
  dart.addTypeCaches(rx_disposable.GetxService);
  dart.setLibraryUri(rx_disposable.GetxService, I[11]);
  var navigatorKey$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.navigatorKey");
  var home$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.home");
  var routes$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.routes");
  var initialRoute$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.initialRoute");
  var onGenerateRoute$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.onGenerateRoute");
  var onGenerateInitialRoutes$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.onGenerateInitialRoutes");
  var onUnknownRoute$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.onUnknownRoute");
  var navigatorObservers$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.navigatorObservers");
  var builder$5 = dart.privateName(get_cupertino_app, "GetCupertinoApp.builder");
  var title$3 = dart.privateName(get_cupertino_app, "GetCupertinoApp.title");
  var onGenerateTitle$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.onGenerateTitle");
  var customTransition$2 = dart.privateName(get_cupertino_app, "GetCupertinoApp.customTransition");
  var color$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.color");
  var translationsKeys$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.translationsKeys");
  var translations$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.translations");
  var textDirection$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.textDirection");
  var locale$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.locale");
  var fallbackLocale$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.fallbackLocale");
  var localizationsDelegates$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.localizationsDelegates");
  var localeListResolutionCallback$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.localeListResolutionCallback");
  var localeResolutionCallback$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.localeResolutionCallback");
  var supportedLocales$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.supportedLocales");
  var showPerformanceOverlay$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.showPerformanceOverlay");
  var checkerboardRasterCacheImages$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.checkerboardRasterCacheImages");
  var checkerboardOffscreenLayers$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.checkerboardOffscreenLayers");
  var showSemanticsDebugger$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.showSemanticsDebugger");
  var debugShowCheckedModeBanner$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.debugShowCheckedModeBanner");
  var shortcuts$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.shortcuts");
  var highContrastTheme$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.highContrastTheme");
  var highContrastDarkTheme$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.highContrastDarkTheme");
  var actions$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.actions");
  var routingCallback$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.routingCallback");
  var defaultTransition$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.defaultTransition");
  var opaqueRoute$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.opaqueRoute");
  var onInit$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.onInit");
  var onReady$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.onReady");
  var onDispose$1 = dart.privateName(get_cupertino_app, "GetCupertinoApp.onDispose");
  var enableLog$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.enableLog");
  var logWriterCallback$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.logWriterCallback");
  var popGesture$2 = dart.privateName(get_cupertino_app, "GetCupertinoApp.popGesture");
  var smartManagement$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.smartManagement");
  var initialBinding$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.initialBinding");
  var transitionDuration$2 = dart.privateName(get_cupertino_app, "GetCupertinoApp.transitionDuration");
  var defaultGlobalState$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.defaultGlobalState");
  var getPages$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.getPages");
  var unknownRoute$2 = dart.privateName(get_cupertino_app, "GetCupertinoApp.unknownRoute");
  var routeInformationProvider$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.routeInformationProvider");
  var routeInformationParser$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.routeInformationParser");
  var routerDelegate$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.routerDelegate");
  var backButtonDispatcher$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.backButtonDispatcher");
  var theme$2 = dart.privateName(get_cupertino_app, "GetCupertinoApp.theme");
  var useInheritedMediaQuery$0 = dart.privateName(get_cupertino_app, "GetCupertinoApp.useInheritedMediaQuery");
  get_cupertino_app.GetCupertinoApp = class GetCupertinoApp extends framework.StatelessWidget {
    get navigatorKey() {
      return this[navigatorKey$0];
    }
    set navigatorKey(value) {
      super.navigatorKey = value;
    }
    get home() {
      return this[home$0];
    }
    set home(value) {
      super.home = value;
    }
    get routes() {
      return this[routes$0];
    }
    set routes(value) {
      super.routes = value;
    }
    get initialRoute() {
      return this[initialRoute$0];
    }
    set initialRoute(value) {
      super.initialRoute = value;
    }
    get onGenerateRoute() {
      return this[onGenerateRoute$0];
    }
    set onGenerateRoute(value) {
      super.onGenerateRoute = value;
    }
    get onGenerateInitialRoutes() {
      return this[onGenerateInitialRoutes$0];
    }
    set onGenerateInitialRoutes(value) {
      super.onGenerateInitialRoutes = value;
    }
    get onUnknownRoute() {
      return this[onUnknownRoute$0];
    }
    set onUnknownRoute(value) {
      super.onUnknownRoute = value;
    }
    get navigatorObservers() {
      return this[navigatorObservers$0];
    }
    set navigatorObservers(value) {
      super.navigatorObservers = value;
    }
    get builder() {
      return this[builder$5];
    }
    set builder(value) {
      super.builder = value;
    }
    get title() {
      return this[title$3];
    }
    set title(value) {
      super.title = value;
    }
    get onGenerateTitle() {
      return this[onGenerateTitle$0];
    }
    set onGenerateTitle(value) {
      super.onGenerateTitle = value;
    }
    get customTransition() {
      return this[customTransition$2];
    }
    set customTransition(value) {
      super.customTransition = value;
    }
    get color() {
      return this[color$0];
    }
    set color(value) {
      super.color = value;
    }
    get translationsKeys() {
      return this[translationsKeys$0];
    }
    set translationsKeys(value) {
      super.translationsKeys = value;
    }
    get translations() {
      return this[translations$0];
    }
    set translations(value) {
      super.translations = value;
    }
    get textDirection() {
      return this[textDirection$0];
    }
    set textDirection(value) {
      super.textDirection = value;
    }
    get locale() {
      return this[locale$0];
    }
    set locale(value) {
      super.locale = value;
    }
    get fallbackLocale() {
      return this[fallbackLocale$0];
    }
    set fallbackLocale(value) {
      super.fallbackLocale = value;
    }
    get localizationsDelegates() {
      return this[localizationsDelegates$0];
    }
    set localizationsDelegates(value) {
      super.localizationsDelegates = value;
    }
    get localeListResolutionCallback() {
      return this[localeListResolutionCallback$0];
    }
    set localeListResolutionCallback(value) {
      super.localeListResolutionCallback = value;
    }
    get localeResolutionCallback() {
      return this[localeResolutionCallback$0];
    }
    set localeResolutionCallback(value) {
      super.localeResolutionCallback = value;
    }
    get supportedLocales() {
      return this[supportedLocales$0];
    }
    set supportedLocales(value) {
      super.supportedLocales = value;
    }
    get showPerformanceOverlay() {
      return this[showPerformanceOverlay$0];
    }
    set showPerformanceOverlay(value) {
      super.showPerformanceOverlay = value;
    }
    get checkerboardRasterCacheImages() {
      return this[checkerboardRasterCacheImages$0];
    }
    set checkerboardRasterCacheImages(value) {
      super.checkerboardRasterCacheImages = value;
    }
    get checkerboardOffscreenLayers() {
      return this[checkerboardOffscreenLayers$0];
    }
    set checkerboardOffscreenLayers(value) {
      super.checkerboardOffscreenLayers = value;
    }
    get showSemanticsDebugger() {
      return this[showSemanticsDebugger$0];
    }
    set showSemanticsDebugger(value) {
      super.showSemanticsDebugger = value;
    }
    get debugShowCheckedModeBanner() {
      return this[debugShowCheckedModeBanner$0];
    }
    set debugShowCheckedModeBanner(value) {
      super.debugShowCheckedModeBanner = value;
    }
    get shortcuts() {
      return this[shortcuts$0];
    }
    set shortcuts(value) {
      super.shortcuts = value;
    }
    get highContrastTheme() {
      return this[highContrastTheme$0];
    }
    set highContrastTheme(value) {
      super.highContrastTheme = value;
    }
    get highContrastDarkTheme() {
      return this[highContrastDarkTheme$0];
    }
    set highContrastDarkTheme(value) {
      super.highContrastDarkTheme = value;
    }
    get actions() {
      return this[actions$0];
    }
    set actions(value) {
      super.actions = value;
    }
    get routingCallback() {
      return this[routingCallback$0];
    }
    set routingCallback(value) {
      super.routingCallback = value;
    }
    get defaultTransition() {
      return this[defaultTransition$0];
    }
    set defaultTransition(value) {
      super.defaultTransition = value;
    }
    get opaqueRoute() {
      return this[opaqueRoute$0];
    }
    set opaqueRoute(value) {
      super.opaqueRoute = value;
    }
    get onInit() {
      return this[onInit$0];
    }
    set onInit(value) {
      super.onInit = value;
    }
    get onReady() {
      return this[onReady$0];
    }
    set onReady(value) {
      super.onReady = value;
    }
    get onDispose() {
      return this[onDispose$1];
    }
    set onDispose(value) {
      super.onDispose = value;
    }
    get enableLog() {
      return this[enableLog$0];
    }
    set enableLog(value) {
      super.enableLog = value;
    }
    get logWriterCallback() {
      return this[logWriterCallback$0];
    }
    set logWriterCallback(value) {
      super.logWriterCallback = value;
    }
    get popGesture() {
      return this[popGesture$2];
    }
    set popGesture(value) {
      super.popGesture = value;
    }
    get smartManagement() {
      return this[smartManagement$0];
    }
    set smartManagement(value) {
      super.smartManagement = value;
    }
    get initialBinding() {
      return this[initialBinding$0];
    }
    set initialBinding(value) {
      super.initialBinding = value;
    }
    get transitionDuration() {
      return this[transitionDuration$2];
    }
    set transitionDuration(value) {
      super.transitionDuration = value;
    }
    get defaultGlobalState() {
      return this[defaultGlobalState$0];
    }
    set defaultGlobalState(value) {
      super.defaultGlobalState = value;
    }
    get getPages() {
      return this[getPages$0];
    }
    set getPages(value) {
      super.getPages = value;
    }
    get unknownRoute() {
      return this[unknownRoute$2];
    }
    set unknownRoute(value) {
      super.unknownRoute = value;
    }
    get routeInformationProvider() {
      return this[routeInformationProvider$0];
    }
    set routeInformationProvider(value) {
      super.routeInformationProvider = value;
    }
    get routeInformationParser() {
      return this[routeInformationParser$0];
    }
    set routeInformationParser(value) {
      super.routeInformationParser = value;
    }
    get routerDelegate() {
      return this[routerDelegate$0];
    }
    set routerDelegate(value) {
      super.routerDelegate = value;
    }
    get backButtonDispatcher() {
      return this[backButtonDispatcher$0];
    }
    set backButtonDispatcher(value) {
      super.backButtonDispatcher = value;
    }
    get theme() {
      return this[theme$2];
    }
    set theme(value) {
      super.theme = value;
    }
    get useInheritedMediaQuery() {
      return this[useInheritedMediaQuery$0];
    }
    set useInheritedMediaQuery(value) {
      super.useInheritedMediaQuery = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let theme = opts && 'theme' in opts ? opts.theme : null;
      let navigatorKey = opts && 'navigatorKey' in opts ? opts.navigatorKey : null;
      let home = opts && 'home' in opts ? opts.home : null;
      let routes = opts && 'routes' in opts ? opts.routes : C[126] || CT.C126;
      let initialRoute = opts && 'initialRoute' in opts ? opts.initialRoute : null;
      let onGenerateRoute = opts && 'onGenerateRoute' in opts ? opts.onGenerateRoute : null;
      let onGenerateInitialRoutes = opts && 'onGenerateInitialRoutes' in opts ? opts.onGenerateInitialRoutes : null;
      let onUnknownRoute = opts && 'onUnknownRoute' in opts ? opts.onUnknownRoute : null;
      let navigatorObservers = opts && 'navigatorObservers' in opts ? opts.navigatorObservers : C[127] || CT.C127;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let translationsKeys = opts && 'translationsKeys' in opts ? opts.translationsKeys : null;
      let translations = opts && 'translations' in opts ? opts.translations : null;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      let title = opts && 'title' in opts ? opts.title : "";
      let onGenerateTitle = opts && 'onGenerateTitle' in opts ? opts.onGenerateTitle : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let customTransition = opts && 'customTransition' in opts ? opts.customTransition : null;
      let onInit = opts && 'onInit' in opts ? opts.onInit : null;
      let onDispose = opts && 'onDispose' in opts ? opts.onDispose : null;
      let locale = opts && 'locale' in opts ? opts.locale : null;
      let fallbackLocale = opts && 'fallbackLocale' in opts ? opts.fallbackLocale : null;
      let localizationsDelegates = opts && 'localizationsDelegates' in opts ? opts.localizationsDelegates : null;
      let localeListResolutionCallback = opts && 'localeListResolutionCallback' in opts ? opts.localeListResolutionCallback : null;
      let localeResolutionCallback = opts && 'localeResolutionCallback' in opts ? opts.localeResolutionCallback : null;
      let supportedLocales = opts && 'supportedLocales' in opts ? opts.supportedLocales : C[129] || CT.C129;
      let showPerformanceOverlay = opts && 'showPerformanceOverlay' in opts ? opts.showPerformanceOverlay : false;
      let checkerboardRasterCacheImages = opts && 'checkerboardRasterCacheImages' in opts ? opts.checkerboardRasterCacheImages : false;
      let checkerboardOffscreenLayers = opts && 'checkerboardOffscreenLayers' in opts ? opts.checkerboardOffscreenLayers : false;
      let showSemanticsDebugger = opts && 'showSemanticsDebugger' in opts ? opts.showSemanticsDebugger : false;
      let debugShowCheckedModeBanner = opts && 'debugShowCheckedModeBanner' in opts ? opts.debugShowCheckedModeBanner : true;
      let shortcuts = opts && 'shortcuts' in opts ? opts.shortcuts : null;
      let smartManagement = opts && 'smartManagement' in opts ? opts.smartManagement : C[131] || CT.C131;
      let initialBinding = opts && 'initialBinding' in opts ? opts.initialBinding : null;
      let useInheritedMediaQuery = opts && 'useInheritedMediaQuery' in opts ? opts.useInheritedMediaQuery : false;
      let unknownRoute = opts && 'unknownRoute' in opts ? opts.unknownRoute : null;
      let routingCallback = opts && 'routingCallback' in opts ? opts.routingCallback : null;
      let defaultTransition = opts && 'defaultTransition' in opts ? opts.defaultTransition : null;
      let onReady = opts && 'onReady' in opts ? opts.onReady : null;
      let getPages = opts && 'getPages' in opts ? opts.getPages : null;
      let opaqueRoute = opts && 'opaqueRoute' in opts ? opts.opaqueRoute : null;
      let enableLog = opts && 'enableLog' in opts ? opts.enableLog : true;
      let logWriterCallback = opts && 'logWriterCallback' in opts ? opts.logWriterCallback : null;
      let popGesture = opts && 'popGesture' in opts ? opts.popGesture : null;
      let transitionDuration = opts && 'transitionDuration' in opts ? opts.transitionDuration : null;
      let defaultGlobalState = opts && 'defaultGlobalState' in opts ? opts.defaultGlobalState : null;
      let highContrastTheme = opts && 'highContrastTheme' in opts ? opts.highContrastTheme : null;
      let highContrastDarkTheme = opts && 'highContrastDarkTheme' in opts ? opts.highContrastDarkTheme : null;
      let actions = opts && 'actions' in opts ? opts.actions : null;
      return new get_cupertino_app.GetCupertinoApp.new({key: key, theme: theme, navigatorKey: navigatorKey, home: home, routes: routes, initialRoute: initialRoute, onGenerateRoute: onGenerateRoute, onGenerateInitialRoutes: onGenerateInitialRoutes, onUnknownRoute: onUnknownRoute, navigatorObservers: navigatorObservers, builder: builder, translationsKeys: translationsKeys, translations: translations, textDirection: textDirection, title: title, onGenerateTitle: onGenerateTitle, color: color, customTransition: customTransition, onInit: onInit, onDispose: onDispose, locale: locale, fallbackLocale: fallbackLocale, localizationsDelegates: localizationsDelegates, localeListResolutionCallback: localeListResolutionCallback, localeResolutionCallback: localeResolutionCallback, supportedLocales: supportedLocales, showPerformanceOverlay: showPerformanceOverlay, checkerboardRasterCacheImages: checkerboardRasterCacheImages, checkerboardOffscreenLayers: checkerboardOffscreenLayers, showSemanticsDebugger: showSemanticsDebugger, debugShowCheckedModeBanner: debugShowCheckedModeBanner, shortcuts: shortcuts, smartManagement: smartManagement, initialBinding: initialBinding, useInheritedMediaQuery: useInheritedMediaQuery, unknownRoute: unknownRoute, routingCallback: routingCallback, defaultTransition: defaultTransition, onReady: onReady, getPages: getPages, opaqueRoute: opaqueRoute, enableLog: enableLog, logWriterCallback: logWriterCallback, popGesture: popGesture, transitionDuration: transitionDuration, defaultGlobalState: defaultGlobalState, highContrastTheme: highContrastTheme, highContrastDarkTheme: highContrastDarkTheme, actions: actions, $creationLocationd_0dea112b090073317d4: C[165] || CT.C165});
    }
    static ['_#router#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let theme = opts && 'theme' in opts ? opts.theme : null;
      let routeInformationProvider = opts && 'routeInformationProvider' in opts ? opts.routeInformationProvider : null;
      let routeInformationParser = opts && 'routeInformationParser' in opts ? opts.routeInformationParser : null;
      let routerDelegate = opts && 'routerDelegate' in opts ? opts.routerDelegate : null;
      let backButtonDispatcher = opts && 'backButtonDispatcher' in opts ? opts.backButtonDispatcher : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let title = opts && 'title' in opts ? opts.title : "";
      let onGenerateTitle = opts && 'onGenerateTitle' in opts ? opts.onGenerateTitle : null;
      let useInheritedMediaQuery = opts && 'useInheritedMediaQuery' in opts ? opts.useInheritedMediaQuery : false;
      let color = opts && 'color' in opts ? opts.color : null;
      let highContrastTheme = opts && 'highContrastTheme' in opts ? opts.highContrastTheme : null;
      let highContrastDarkTheme = opts && 'highContrastDarkTheme' in opts ? opts.highContrastDarkTheme : null;
      let locale = opts && 'locale' in opts ? opts.locale : null;
      let localizationsDelegates = opts && 'localizationsDelegates' in opts ? opts.localizationsDelegates : null;
      let localeListResolutionCallback = opts && 'localeListResolutionCallback' in opts ? opts.localeListResolutionCallback : null;
      let localeResolutionCallback = opts && 'localeResolutionCallback' in opts ? opts.localeResolutionCallback : null;
      let supportedLocales = opts && 'supportedLocales' in opts ? opts.supportedLocales : C[129] || CT.C129;
      let showPerformanceOverlay = opts && 'showPerformanceOverlay' in opts ? opts.showPerformanceOverlay : false;
      let checkerboardRasterCacheImages = opts && 'checkerboardRasterCacheImages' in opts ? opts.checkerboardRasterCacheImages : false;
      let checkerboardOffscreenLayers = opts && 'checkerboardOffscreenLayers' in opts ? opts.checkerboardOffscreenLayers : false;
      let showSemanticsDebugger = opts && 'showSemanticsDebugger' in opts ? opts.showSemanticsDebugger : false;
      let debugShowCheckedModeBanner = opts && 'debugShowCheckedModeBanner' in opts ? opts.debugShowCheckedModeBanner : true;
      let shortcuts = opts && 'shortcuts' in opts ? opts.shortcuts : null;
      let actions = opts && 'actions' in opts ? opts.actions : null;
      let customTransition = opts && 'customTransition' in opts ? opts.customTransition : null;
      let translationsKeys = opts && 'translationsKeys' in opts ? opts.translationsKeys : null;
      let translations = opts && 'translations' in opts ? opts.translations : null;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      let fallbackLocale = opts && 'fallbackLocale' in opts ? opts.fallbackLocale : null;
      let routingCallback = opts && 'routingCallback' in opts ? opts.routingCallback : null;
      let defaultTransition = opts && 'defaultTransition' in opts ? opts.defaultTransition : null;
      let opaqueRoute = opts && 'opaqueRoute' in opts ? opts.opaqueRoute : null;
      let onInit = opts && 'onInit' in opts ? opts.onInit : null;
      let onReady = opts && 'onReady' in opts ? opts.onReady : null;
      let onDispose = opts && 'onDispose' in opts ? opts.onDispose : null;
      let enableLog = opts && 'enableLog' in opts ? opts.enableLog : true;
      let logWriterCallback = opts && 'logWriterCallback' in opts ? opts.logWriterCallback : null;
      let popGesture = opts && 'popGesture' in opts ? opts.popGesture : null;
      let smartManagement = opts && 'smartManagement' in opts ? opts.smartManagement : C[131] || CT.C131;
      let initialBinding = opts && 'initialBinding' in opts ? opts.initialBinding : null;
      let transitionDuration = opts && 'transitionDuration' in opts ? opts.transitionDuration : null;
      let defaultGlobalState = opts && 'defaultGlobalState' in opts ? opts.defaultGlobalState : null;
      let getPages = opts && 'getPages' in opts ? opts.getPages : null;
      let unknownRoute = opts && 'unknownRoute' in opts ? opts.unknownRoute : null;
      return new get_cupertino_app.GetCupertinoApp.router({key: key, theme: theme, routeInformationProvider: routeInformationProvider, routeInformationParser: routeInformationParser, routerDelegate: routerDelegate, backButtonDispatcher: backButtonDispatcher, builder: builder, title: title, onGenerateTitle: onGenerateTitle, useInheritedMediaQuery: useInheritedMediaQuery, color: color, highContrastTheme: highContrastTheme, highContrastDarkTheme: highContrastDarkTheme, locale: locale, localizationsDelegates: localizationsDelegates, localeListResolutionCallback: localeListResolutionCallback, localeResolutionCallback: localeResolutionCallback, supportedLocales: supportedLocales, showPerformanceOverlay: showPerformanceOverlay, checkerboardRasterCacheImages: checkerboardRasterCacheImages, checkerboardOffscreenLayers: checkerboardOffscreenLayers, showSemanticsDebugger: showSemanticsDebugger, debugShowCheckedModeBanner: debugShowCheckedModeBanner, shortcuts: shortcuts, actions: actions, customTransition: customTransition, translationsKeys: translationsKeys, translations: translations, textDirection: textDirection, fallbackLocale: fallbackLocale, routingCallback: routingCallback, defaultTransition: defaultTransition, opaqueRoute: opaqueRoute, onInit: onInit, onReady: onReady, onDispose: onDispose, enableLog: enableLog, logWriterCallback: logWriterCallback, popGesture: popGesture, smartManagement: smartManagement, initialBinding: initialBinding, transitionDuration: transitionDuration, defaultGlobalState: defaultGlobalState, getPages: getPages, unknownRoute: unknownRoute, $creationLocationd_0dea112b090073317d4: C[166] || CT.C166});
    }
    build(context) {
      return new (T$.GetBuilderOfGetMaterialController()).new({init: extension_navigation['GetNavigation|get#rootController'](get_main.Get), dispose: dart.fn(d => {
          let t21;
          t21 = this.onDispose;
          t21 == null ? null : t21();
        }, T$.GetBuilderStateOfGetMaterialControllerTovoid()), initState: dart.fn(i => {
          let t21, t21$, t21$0, t21$1, t21$2, t21$3, t21$4;
          extension_navigation['GetNavigation|get#engine'](get_main.Get).addPostFrameCallback(dart.fn(timeStamp => {
            let t21;
            t21 = this.onReady;
            t21 == null ? null : t21();
          }, T$.DurationTovoid()));
          if (this.locale != null) internacionalization['LocalesIntl|set#locale'](get_main.Get, this.locale);
          if (this.fallbackLocale != null) internacionalization['LocalesIntl|set#fallbackLocale'](get_main.Get, this.fallbackLocale);
          if (this.translations != null) {
            internacionalization['LocalesIntl|addTranslations'](get_main.Get, dart.nullCheck(this.translations).keys);
          } else if (this.translationsKeys != null) {
            internacionalization['LocalesIntl|addTranslations'](get_main.Get, dart.nullCheck(this.translationsKeys));
          }
          extension_navigation['GetNavigation|set#customTransition'](get_main.Get, this.customTransition);
          t21 = this.initialBinding;
          t21 == null ? null : t21.dependencies();
          if (this.getPages != null) {
            extension_navigation['NavTwoExt|addPages'](get_main.Get, dart.nullCheck(this.getPages));
          }
          get_main.Get.smartManagement = this.smartManagement;
          t21$ = this.onInit;
          t21$ == null ? null : t21$();
          extension_navigation['GetNavigation|config'](get_main.Get, {enableLog: (t21$0 = this.enableLog, t21$0 == null ? get_main.Get.isLogEnable : t21$0), logWriterCallback: this.logWriterCallback, defaultTransition: (t21$1 = this.defaultTransition, t21$1 == null ? extension_navigation['GetNavigation|get#defaultTransition'](get_main.Get) : t21$1), defaultOpaqueRoute: (t21$2 = this.opaqueRoute, t21$2 == null ? extension_navigation['GetNavigation|get#isOpaqueRouteDefault'](get_main.Get) : t21$2), defaultPopGesture: (t21$3 = this.popGesture, t21$3 == null ? extension_navigation['GetNavigation|get#isPopGestureEnable'](get_main.Get) : t21$3), defaultDurationTransition: (t21$4 = this.transitionDuration, t21$4 == null ? extension_navigation['GetNavigation|get#defaultTransitionDuration'](get_main.Get) : t21$4)});
        }, T$.GetBuilderStateOfGetMaterialControllerTovoid()), builder: dart.fn(_ => {
          let t21, t21$, t21$0, t21$1;
          return this.routerDelegate != null ? new app$.CupertinoApp.router({routerDelegate: dart.nullCheck(this.routerDelegate), routeInformationParser: dart.nullCheck(this.routeInformationParser), backButtonDispatcher: this.backButtonDispatcher, routeInformationProvider: this.routeInformationProvider, key: _.unikey, theme: this.theme, builder: dart.bind(this, 'defaultBuilder'), title: this.title, onGenerateTitle: this.onGenerateTitle, color: this.color, locale: (t21 = internacionalization['LocalesIntl|get#locale'](get_main.Get), t21 == null ? this.locale : t21), localizationsDelegates: this.localizationsDelegates, localeListResolutionCallback: this.localeListResolutionCallback, localeResolutionCallback: this.localeResolutionCallback, supportedLocales: this.supportedLocales, showPerformanceOverlay: this.showPerformanceOverlay, checkerboardRasterCacheImages: this.checkerboardRasterCacheImages, checkerboardOffscreenLayers: this.checkerboardOffscreenLayers, showSemanticsDebugger: this.showSemanticsDebugger, debugShowCheckedModeBanner: this.debugShowCheckedModeBanner, shortcuts: this.shortcuts, useInheritedMediaQuery: this.useInheritedMediaQuery, $creationLocationd_0dea112b090073317d4: C[167] || CT.C167}) : new app$.CupertinoApp.new({key: _.unikey, theme: this.theme, navigatorKey: this.navigatorKey == null ? extension_navigation['GetNavigation|get#key'](get_main.Get) : extension_navigation['GetNavigation|addKey'](get_main.Get, dart.nullCheck(this.navigatorKey)), home: this.home, routes: (t21$ = this.routes, t21$ == null ? C[126] || CT.C126 : t21$), initialRoute: this.initialRoute, onGenerateRoute: this.getPages != null ? dart.bind(this, 'generator') : this.onGenerateRoute, onGenerateInitialRoutes: this.getPages == null || this.home != null ? this.onGenerateInitialRoutes : dart.bind(this, 'initialRoutesGenerate'), onUnknownRoute: this.onUnknownRoute, navigatorObservers: (t21$0 = this.navigatorObservers == null ? T$.JSArrayOfNavigatorObserver().of([new route_observer.GetObserver.new(this.routingCallback, extension_navigation['GetNavigation|get#routing'](get_main.Get))]) : T$.JSArrayOfNavigatorObserver().of([new route_observer.GetObserver.new(this.routingCallback, extension_navigation['GetNavigation|get#routing'](get_main.Get))]), (() => {
              t21$0[$addAll](dart.nullCheck(this.navigatorObservers));
              return t21$0;
            })()), builder: dart.bind(this, 'defaultBuilder'), title: this.title, onGenerateTitle: this.onGenerateTitle, color: this.color, locale: (t21$1 = internacionalization['LocalesIntl|get#locale'](get_main.Get), t21$1 == null ? this.locale : t21$1), localizationsDelegates: this.localizationsDelegates, localeListResolutionCallback: this.localeListResolutionCallback, localeResolutionCallback: this.localeResolutionCallback, supportedLocales: this.supportedLocales, showPerformanceOverlay: this.showPerformanceOverlay, checkerboardRasterCacheImages: this.checkerboardRasterCacheImages, checkerboardOffscreenLayers: this.checkerboardOffscreenLayers, showSemanticsDebugger: this.showSemanticsDebugger, debugShowCheckedModeBanner: this.debugShowCheckedModeBanner, shortcuts: this.shortcuts, useInheritedMediaQuery: this.useInheritedMediaQuery, $creationLocationd_0dea112b090073317d4: C[168] || CT.C168});
        }, T$.GetMaterialControllerToCupertinoApp()), $creationLocationd_0dea112b090073317d4: C[169] || CT.C169});
    }
    defaultBuilder(context, child) {
      let t22, t21, t21$, t21$0;
      return new basic.Directionality.new({textDirection: (t21 = this.textDirection, t21 == null ? internacionalization$.rtlLanguages[$contains]((t22 = internacionalization['LocalesIntl|get#locale'](get_main.Get), t22 == null ? null : t22.languageCode)) ? ui.TextDirection.rtl : ui.TextDirection.ltr : t21), child: this.builder == null ? (t21$ = child, t21$ == null ? new material.Material.new({$creationLocationd_0dea112b090073317d4: C[170] || CT.C170}) : t21$) : dart.nullCheck(this.builder)(context, (t21$0 = child, t21$0 == null ? new material.Material.new({$creationLocationd_0dea112b090073317d4: C[171] || CT.C171}) : t21$0)), $creationLocationd_0dea112b090073317d4: C[172] || CT.C172});
    }
    generator(settings) {
      return new route_middleware.PageRedirect.new({settings: settings, unknownRoute: this.unknownRoute}).page(dart.dynamic);
    }
    initialRoutesGenerate(name) {
      return T$.JSArrayOfRoute().of([new route_middleware.PageRedirect.new({settings: new navigator.RouteSettings.new({name: name}), unknownRoute: this.unknownRoute}).page(dart.dynamic)]);
    }
  };
  (get_cupertino_app.GetCupertinoApp.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let theme = opts && 'theme' in opts ? opts.theme : null;
    let navigatorKey = opts && 'navigatorKey' in opts ? opts.navigatorKey : null;
    let home = opts && 'home' in opts ? opts.home : null;
    let routes = opts && 'routes' in opts ? opts.routes : C[126] || CT.C126;
    let initialRoute = opts && 'initialRoute' in opts ? opts.initialRoute : null;
    let onGenerateRoute = opts && 'onGenerateRoute' in opts ? opts.onGenerateRoute : null;
    let onGenerateInitialRoutes = opts && 'onGenerateInitialRoutes' in opts ? opts.onGenerateInitialRoutes : null;
    let onUnknownRoute = opts && 'onUnknownRoute' in opts ? opts.onUnknownRoute : null;
    let navigatorObservers = opts && 'navigatorObservers' in opts ? opts.navigatorObservers : C[127] || CT.C127;
    let builder = opts && 'builder' in opts ? opts.builder : null;
    let translationsKeys = opts && 'translationsKeys' in opts ? opts.translationsKeys : null;
    let translations = opts && 'translations' in opts ? opts.translations : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let title = opts && 'title' in opts ? opts.title : "";
    let onGenerateTitle = opts && 'onGenerateTitle' in opts ? opts.onGenerateTitle : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let customTransition = opts && 'customTransition' in opts ? opts.customTransition : null;
    let onInit = opts && 'onInit' in opts ? opts.onInit : null;
    let onDispose = opts && 'onDispose' in opts ? opts.onDispose : null;
    let locale = opts && 'locale' in opts ? opts.locale : null;
    let fallbackLocale = opts && 'fallbackLocale' in opts ? opts.fallbackLocale : null;
    let localizationsDelegates = opts && 'localizationsDelegates' in opts ? opts.localizationsDelegates : null;
    let localeListResolutionCallback = opts && 'localeListResolutionCallback' in opts ? opts.localeListResolutionCallback : null;
    let localeResolutionCallback = opts && 'localeResolutionCallback' in opts ? opts.localeResolutionCallback : null;
    let supportedLocales = opts && 'supportedLocales' in opts ? opts.supportedLocales : C[129] || CT.C129;
    let showPerformanceOverlay = opts && 'showPerformanceOverlay' in opts ? opts.showPerformanceOverlay : false;
    let checkerboardRasterCacheImages = opts && 'checkerboardRasterCacheImages' in opts ? opts.checkerboardRasterCacheImages : false;
    let checkerboardOffscreenLayers = opts && 'checkerboardOffscreenLayers' in opts ? opts.checkerboardOffscreenLayers : false;
    let showSemanticsDebugger = opts && 'showSemanticsDebugger' in opts ? opts.showSemanticsDebugger : false;
    let debugShowCheckedModeBanner = opts && 'debugShowCheckedModeBanner' in opts ? opts.debugShowCheckedModeBanner : true;
    let shortcuts = opts && 'shortcuts' in opts ? opts.shortcuts : null;
    let smartManagement = opts && 'smartManagement' in opts ? opts.smartManagement : C[131] || CT.C131;
    let initialBinding = opts && 'initialBinding' in opts ? opts.initialBinding : null;
    let useInheritedMediaQuery = opts && 'useInheritedMediaQuery' in opts ? opts.useInheritedMediaQuery : false;
    let unknownRoute = opts && 'unknownRoute' in opts ? opts.unknownRoute : null;
    let routingCallback = opts && 'routingCallback' in opts ? opts.routingCallback : null;
    let defaultTransition = opts && 'defaultTransition' in opts ? opts.defaultTransition : null;
    let onReady = opts && 'onReady' in opts ? opts.onReady : null;
    let getPages = opts && 'getPages' in opts ? opts.getPages : null;
    let opaqueRoute = opts && 'opaqueRoute' in opts ? opts.opaqueRoute : null;
    let enableLog = opts && 'enableLog' in opts ? opts.enableLog : true;
    let logWriterCallback = opts && 'logWriterCallback' in opts ? opts.logWriterCallback : null;
    let popGesture = opts && 'popGesture' in opts ? opts.popGesture : null;
    let transitionDuration = opts && 'transitionDuration' in opts ? opts.transitionDuration : null;
    let defaultGlobalState = opts && 'defaultGlobalState' in opts ? opts.defaultGlobalState : null;
    let highContrastTheme = opts && 'highContrastTheme' in opts ? opts.highContrastTheme : null;
    let highContrastDarkTheme = opts && 'highContrastDarkTheme' in opts ? opts.highContrastDarkTheme : null;
    let actions = opts && 'actions' in opts ? opts.actions : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[theme$2] = theme;
    this[navigatorKey$0] = navigatorKey;
    this[home$0] = home;
    this[routes$0] = routes;
    this[initialRoute$0] = initialRoute;
    this[onGenerateRoute$0] = onGenerateRoute;
    this[onGenerateInitialRoutes$0] = onGenerateInitialRoutes;
    this[onUnknownRoute$0] = onUnknownRoute;
    this[navigatorObservers$0] = navigatorObservers;
    this[builder$5] = builder;
    this[translationsKeys$0] = translationsKeys;
    this[translations$0] = translations;
    this[textDirection$0] = textDirection;
    this[title$3] = title;
    this[onGenerateTitle$0] = onGenerateTitle;
    this[color$0] = color;
    this[customTransition$2] = customTransition;
    this[onInit$0] = onInit;
    this[onDispose$1] = onDispose;
    this[locale$0] = locale;
    this[fallbackLocale$0] = fallbackLocale;
    this[localizationsDelegates$0] = localizationsDelegates;
    this[localeListResolutionCallback$0] = localeListResolutionCallback;
    this[localeResolutionCallback$0] = localeResolutionCallback;
    this[supportedLocales$0] = supportedLocales;
    this[showPerformanceOverlay$0] = showPerformanceOverlay;
    this[checkerboardRasterCacheImages$0] = checkerboardRasterCacheImages;
    this[checkerboardOffscreenLayers$0] = checkerboardOffscreenLayers;
    this[showSemanticsDebugger$0] = showSemanticsDebugger;
    this[debugShowCheckedModeBanner$0] = debugShowCheckedModeBanner;
    this[shortcuts$0] = shortcuts;
    this[smartManagement$0] = smartManagement;
    this[initialBinding$0] = initialBinding;
    this[useInheritedMediaQuery$0] = useInheritedMediaQuery;
    this[unknownRoute$2] = unknownRoute;
    this[routingCallback$0] = routingCallback;
    this[defaultTransition$0] = defaultTransition;
    this[onReady$0] = onReady;
    this[getPages$0] = getPages;
    this[opaqueRoute$0] = opaqueRoute;
    this[enableLog$0] = enableLog;
    this[logWriterCallback$0] = logWriterCallback;
    this[popGesture$2] = popGesture;
    this[transitionDuration$2] = transitionDuration;
    this[defaultGlobalState$0] = defaultGlobalState;
    this[highContrastTheme$0] = highContrastTheme;
    this[highContrastDarkTheme$0] = highContrastDarkTheme;
    this[actions$0] = actions;
    this[routeInformationProvider$0] = null;
    this[routeInformationParser$0] = null;
    this[routerDelegate$0] = null;
    this[backButtonDispatcher$0] = null;
    get_cupertino_app.GetCupertinoApp.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = get_cupertino_app.GetCupertinoApp.prototype;
  (get_cupertino_app.GetCupertinoApp.router = function(opts) {
    let t21, t22, t22$, t21$;
    let key = opts && 'key' in opts ? opts.key : null;
    let theme = opts && 'theme' in opts ? opts.theme : null;
    let routeInformationProvider = opts && 'routeInformationProvider' in opts ? opts.routeInformationProvider : null;
    let routeInformationParser = opts && 'routeInformationParser' in opts ? opts.routeInformationParser : null;
    let routerDelegate = opts && 'routerDelegate' in opts ? opts.routerDelegate : null;
    let backButtonDispatcher = opts && 'backButtonDispatcher' in opts ? opts.backButtonDispatcher : null;
    let builder = opts && 'builder' in opts ? opts.builder : null;
    let title = opts && 'title' in opts ? opts.title : "";
    let onGenerateTitle = opts && 'onGenerateTitle' in opts ? opts.onGenerateTitle : null;
    let useInheritedMediaQuery = opts && 'useInheritedMediaQuery' in opts ? opts.useInheritedMediaQuery : false;
    let color = opts && 'color' in opts ? opts.color : null;
    let highContrastTheme = opts && 'highContrastTheme' in opts ? opts.highContrastTheme : null;
    let highContrastDarkTheme = opts && 'highContrastDarkTheme' in opts ? opts.highContrastDarkTheme : null;
    let locale = opts && 'locale' in opts ? opts.locale : null;
    let localizationsDelegates = opts && 'localizationsDelegates' in opts ? opts.localizationsDelegates : null;
    let localeListResolutionCallback = opts && 'localeListResolutionCallback' in opts ? opts.localeListResolutionCallback : null;
    let localeResolutionCallback = opts && 'localeResolutionCallback' in opts ? opts.localeResolutionCallback : null;
    let supportedLocales = opts && 'supportedLocales' in opts ? opts.supportedLocales : C[129] || CT.C129;
    let showPerformanceOverlay = opts && 'showPerformanceOverlay' in opts ? opts.showPerformanceOverlay : false;
    let checkerboardRasterCacheImages = opts && 'checkerboardRasterCacheImages' in opts ? opts.checkerboardRasterCacheImages : false;
    let checkerboardOffscreenLayers = opts && 'checkerboardOffscreenLayers' in opts ? opts.checkerboardOffscreenLayers : false;
    let showSemanticsDebugger = opts && 'showSemanticsDebugger' in opts ? opts.showSemanticsDebugger : false;
    let debugShowCheckedModeBanner = opts && 'debugShowCheckedModeBanner' in opts ? opts.debugShowCheckedModeBanner : true;
    let shortcuts = opts && 'shortcuts' in opts ? opts.shortcuts : null;
    let actions = opts && 'actions' in opts ? opts.actions : null;
    let customTransition = opts && 'customTransition' in opts ? opts.customTransition : null;
    let translationsKeys = opts && 'translationsKeys' in opts ? opts.translationsKeys : null;
    let translations = opts && 'translations' in opts ? opts.translations : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let fallbackLocale = opts && 'fallbackLocale' in opts ? opts.fallbackLocale : null;
    let routingCallback = opts && 'routingCallback' in opts ? opts.routingCallback : null;
    let defaultTransition = opts && 'defaultTransition' in opts ? opts.defaultTransition : null;
    let opaqueRoute = opts && 'opaqueRoute' in opts ? opts.opaqueRoute : null;
    let onInit = opts && 'onInit' in opts ? opts.onInit : null;
    let onReady = opts && 'onReady' in opts ? opts.onReady : null;
    let onDispose = opts && 'onDispose' in opts ? opts.onDispose : null;
    let enableLog = opts && 'enableLog' in opts ? opts.enableLog : true;
    let logWriterCallback = opts && 'logWriterCallback' in opts ? opts.logWriterCallback : null;
    let popGesture = opts && 'popGesture' in opts ? opts.popGesture : null;
    let smartManagement = opts && 'smartManagement' in opts ? opts.smartManagement : C[131] || CT.C131;
    let initialBinding = opts && 'initialBinding' in opts ? opts.initialBinding : null;
    let transitionDuration = opts && 'transitionDuration' in opts ? opts.transitionDuration : null;
    let defaultGlobalState = opts && 'defaultGlobalState' in opts ? opts.defaultGlobalState : null;
    let getPages = opts && 'getPages' in opts ? opts.getPages : null;
    let unknownRoute = opts && 'unknownRoute' in opts ? opts.unknownRoute : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[theme$2] = theme;
    this[routeInformationProvider$0] = routeInformationProvider;
    this[backButtonDispatcher$0] = backButtonDispatcher;
    this[builder$5] = builder;
    this[title$3] = title;
    this[onGenerateTitle$0] = onGenerateTitle;
    this[useInheritedMediaQuery$0] = useInheritedMediaQuery;
    this[color$0] = color;
    this[highContrastTheme$0] = highContrastTheme;
    this[highContrastDarkTheme$0] = highContrastDarkTheme;
    this[locale$0] = locale;
    this[localizationsDelegates$0] = localizationsDelegates;
    this[localeListResolutionCallback$0] = localeListResolutionCallback;
    this[localeResolutionCallback$0] = localeResolutionCallback;
    this[supportedLocales$0] = supportedLocales;
    this[showPerformanceOverlay$0] = showPerformanceOverlay;
    this[checkerboardRasterCacheImages$0] = checkerboardRasterCacheImages;
    this[checkerboardOffscreenLayers$0] = checkerboardOffscreenLayers;
    this[showSemanticsDebugger$0] = showSemanticsDebugger;
    this[debugShowCheckedModeBanner$0] = debugShowCheckedModeBanner;
    this[shortcuts$0] = shortcuts;
    this[actions$0] = actions;
    this[customTransition$2] = customTransition;
    this[translationsKeys$0] = translationsKeys;
    this[translations$0] = translations;
    this[textDirection$0] = textDirection;
    this[fallbackLocale$0] = fallbackLocale;
    this[routingCallback$0] = routingCallback;
    this[defaultTransition$0] = defaultTransition;
    this[opaqueRoute$0] = opaqueRoute;
    this[onInit$0] = onInit;
    this[onReady$0] = onReady;
    this[onDispose$1] = onDispose;
    this[enableLog$0] = enableLog;
    this[logWriterCallback$0] = logWriterCallback;
    this[popGesture$2] = popGesture;
    this[smartManagement$0] = smartManagement;
    this[initialBinding$0] = initialBinding;
    this[transitionDuration$2] = transitionDuration;
    this[defaultGlobalState$0] = defaultGlobalState;
    this[getPages$0] = getPages;
    this[unknownRoute$2] = unknownRoute;
    this[routerDelegate$0] = (t21 = routerDelegate, t21 == null ? routerDelegate = extension_navigation['NavTwoExt|createDelegate'](get_main.Get, {notFoundRoute: unknownRoute}) : t21);
    this[routeInformationParser$0] = (t21$ = routeInformationParser, t21$ == null ? routeInformationParser = extension_navigation['NavTwoExt|createInformationParser'](get_main.Get, {initialRoute: (t22$ = (t22 = getPages, t22 == null ? null : t22[$first].name), t22$ == null ? "/" : t22$)}) : t21$);
    this[navigatorObservers$0] = null;
    this[navigatorKey$0] = null;
    this[onGenerateRoute$0] = null;
    this[home$0] = null;
    this[onGenerateInitialRoutes$0] = null;
    this[onUnknownRoute$0] = null;
    this[routes$0] = null;
    this[initialRoute$0] = null;
    get_cupertino_app.GetCupertinoApp.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    get_main.Get.routerDelegate = routerDelegate;
    get_main.Get.routeInformationParser = routeInformationParser;
  }).prototype = get_cupertino_app.GetCupertinoApp.prototype;
  dart.addTypeTests(get_cupertino_app.GetCupertinoApp);
  dart.addTypeCaches(get_cupertino_app.GetCupertinoApp);
  dart.setMethodSignature(get_cupertino_app.GetCupertinoApp, () => ({
    __proto__: dart.getMethods(get_cupertino_app.GetCupertinoApp.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    defaultBuilder: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)]),
    generator: dart.fnType(navigator.Route, [navigator.RouteSettings]),
    initialRoutesGenerate: dart.fnType(core.List$(navigator.Route), [core.String])
  }));
  dart.setLibraryUri(get_cupertino_app.GetCupertinoApp, I[24]);
  dart.setFieldSignature(get_cupertino_app.GetCupertinoApp, () => ({
    __proto__: dart.getFields(get_cupertino_app.GetCupertinoApp.__proto__),
    navigatorKey: dart.finalFieldType(dart.nullable(framework.GlobalKey$(navigator.NavigatorState))),
    home: dart.finalFieldType(dart.nullable(framework.Widget)),
    routes: dart.finalFieldType(dart.nullable(core.Map$(core.String, dart.fnType(framework.Widget, [framework.BuildContext])))),
    initialRoute: dart.finalFieldType(dart.nullable(core.String)),
    onGenerateRoute: dart.finalFieldType(dart.nullable(dart.fnType(dart.nullable(navigator.Route), [navigator.RouteSettings]))),
    onGenerateInitialRoutes: dart.finalFieldType(dart.nullable(dart.fnType(core.List$(navigator.Route), [core.String]))),
    onUnknownRoute: dart.finalFieldType(dart.nullable(dart.fnType(dart.nullable(navigator.Route), [navigator.RouteSettings]))),
    navigatorObservers: dart.finalFieldType(dart.nullable(core.List$(navigator.NavigatorObserver))),
    builder: dart.finalFieldType(dart.nullable(dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)]))),
    title: dart.finalFieldType(core.String),
    onGenerateTitle: dart.finalFieldType(dart.nullable(dart.fnType(core.String, [framework.BuildContext]))),
    customTransition: dart.finalFieldType(dart.nullable(custom_transition.CustomTransition)),
    color: dart.finalFieldType(dart.nullable(ui.Color)),
    translationsKeys: dart.finalFieldType(dart.nullable(core.Map$(core.String, core.Map$(core.String, core.String)))),
    translations: dart.finalFieldType(dart.nullable(internacionalization$.Translations)),
    textDirection: dart.finalFieldType(dart.nullable(ui.TextDirection)),
    locale: dart.finalFieldType(dart.nullable(ui.Locale)),
    fallbackLocale: dart.finalFieldType(dart.nullable(ui.Locale)),
    localizationsDelegates: dart.finalFieldType(dart.nullable(core.Iterable$(localizations.LocalizationsDelegate))),
    localeListResolutionCallback: dart.finalFieldType(dart.nullable(dart.fnType(dart.nullable(ui.Locale), [dart.nullable(core.List$(ui.Locale)), core.Iterable$(ui.Locale)]))),
    localeResolutionCallback: dart.finalFieldType(dart.nullable(dart.fnType(dart.nullable(ui.Locale), [dart.nullable(ui.Locale), core.Iterable$(ui.Locale)]))),
    supportedLocales: dart.finalFieldType(core.Iterable$(ui.Locale)),
    showPerformanceOverlay: dart.finalFieldType(core.bool),
    checkerboardRasterCacheImages: dart.finalFieldType(core.bool),
    checkerboardOffscreenLayers: dart.finalFieldType(core.bool),
    showSemanticsDebugger: dart.finalFieldType(core.bool),
    debugShowCheckedModeBanner: dart.finalFieldType(core.bool),
    shortcuts: dart.finalFieldType(dart.nullable(core.Map$(shortcuts.LogicalKeySet, actions.Intent))),
    highContrastTheme: dart.finalFieldType(dart.nullable(theme_data.ThemeData)),
    highContrastDarkTheme: dart.finalFieldType(dart.nullable(theme_data.ThemeData)),
    actions: dart.finalFieldType(dart.nullable(core.Map$(core.Type, actions.Action$(actions.Intent)))),
    routingCallback: dart.finalFieldType(dart.nullable(dart.fnType(dart.dynamic, [dart.nullable(route_observer.Routing)]))),
    defaultTransition: dart.finalFieldType(dart.nullable(transitions_type.Transition)),
    opaqueRoute: dart.finalFieldType(dart.nullable(core.bool)),
    onInit: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onReady: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onDispose: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    enableLog: dart.finalFieldType(dart.nullable(core.bool)),
    logWriterCallback: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.String], {isError: core.bool}, {}))),
    popGesture: dart.finalFieldType(dart.nullable(core.bool)),
    smartManagement: dart.finalFieldType(smart_management.SmartManagement),
    initialBinding: dart.finalFieldType(dart.nullable(bindings_interface.Bindings)),
    transitionDuration: dart.finalFieldType(dart.nullable(core.Duration)),
    defaultGlobalState: dart.finalFieldType(dart.nullable(core.bool)),
    getPages: dart.finalFieldType(dart.nullable(core.List$(get_route.GetPage))),
    unknownRoute: dart.finalFieldType(dart.nullable(get_route.GetPage)),
    routeInformationProvider: dart.finalFieldType(dart.nullable(router.RouteInformationProvider)),
    routeInformationParser: dart.finalFieldType(dart.nullable(router.RouteInformationParser$(core.Object))),
    routerDelegate: dart.finalFieldType(dart.nullable(router.RouterDelegate$(core.Object))),
    backButtonDispatcher: dart.finalFieldType(dart.nullable(router.BackButtonDispatcher)),
    theme: dart.finalFieldType(dart.nullable(theme.CupertinoThemeData)),
    useInheritedMediaQuery: dart.finalFieldType(core.bool)
  }));
  var routerDelegate = dart.privateName(router_outlet, "RouterOutlet.routerDelegate");
  var builder$6 = dart.privateName(router_outlet, "RouterOutlet.builder");
  const _is_RouterOutlet_default = Symbol('_is_RouterOutlet_default');
  router_outlet.RouterOutlet$ = dart.generic((TDelegate, T) => {
    var __t$BuildContextAndTDelegateAndTNToWidget = () => (__t$BuildContextAndTDelegateAndTNToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, TDelegate, __t$TN()])))();
    var __t$RouterOutletStateOfTDelegate$T = () => (__t$RouterOutletStateOfTDelegate$T = dart.constFn(router_outlet.RouterOutletState$(TDelegate, T)))();
    var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
    class RouterOutlet extends framework.StatefulWidget {
      get routerDelegate() {
        return this[routerDelegate];
      }
      set routerDelegate(value) {
        super.routerDelegate = value;
      }
      get builder() {
        return this[builder$6];
      }
      set builder(value) {
        super.builder = value;
      }
      static ['_#builder#tearOff'](TDelegate, T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let delegate = opts && 'delegate' in opts ? opts.delegate : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        return new (router_outlet.RouterOutlet$(TDelegate, T)).builder({key: key, delegate: delegate, builder: builder, $creationLocationd_0dea112b090073317d4: C[173] || CT.C173});
      }
      static ['_#new#tearOff'](TDelegate, T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let delegate = opts && 'delegate' in opts ? opts.delegate : null;
        let pickPages = opts && 'pickPages' in opts ? opts.pickPages : null;
        let pageBuilder = opts && 'pageBuilder' in opts ? opts.pageBuilder : null;
        return new (router_outlet.RouterOutlet$(TDelegate, T)).new({key: key, delegate: delegate, pickPages: pickPages, pageBuilder: pageBuilder, $creationLocationd_0dea112b090073317d4: C[174] || CT.C174});
      }
      createState() {
        return new (__t$RouterOutletStateOfTDelegate$T()).new();
      }
    }
    (RouterOutlet.builder = function(opts) {
      let t21;
      let key = opts && 'key' in opts ? opts.key : null;
      let delegate = opts && 'delegate' in opts ? opts.delegate : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[builder$6] = builder;
      this[routerDelegate] = (t21 = delegate, t21 == null ? dart.nullCheck(extension_navigation['NavTwoExt|delegate'](TDelegate, T, get_main.Get)) : t21);
      RouterOutlet.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = RouterOutlet.prototype;
    (RouterOutlet.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let delegate = opts && 'delegate' in opts ? opts.delegate : null;
      let pickPages = opts && 'pickPages' in opts ? opts.pickPages : null;
      let pageBuilder = opts && 'pageBuilder' in opts ? opts.pageBuilder : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      RouterOutlet.builder.call(this, {builder: dart.fn((context, rDelegate, currentConfig) => {
          let t21, t21$;
          let picked = currentConfig == null ? null : pickPages(currentConfig);
          if (dart.test((t21$ = (t21 = picked, t21 == null ? null : t21[$isEmpty]), t21$ == null ? false : t21$))) {
            picked = null;
          }
          return pageBuilder(context, rDelegate, picked);
        }, __t$BuildContextAndTDelegateAndTNToWidget()), delegate: delegate, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    }).prototype = RouterOutlet.prototype;
    dart.addTypeTests(RouterOutlet);
    RouterOutlet.prototype[_is_RouterOutlet_default] = true;
    dart.addTypeCaches(RouterOutlet);
    dart.setMethodSignature(RouterOutlet, () => ({
      __proto__: dart.getMethods(RouterOutlet.__proto__),
      createState: dart.fnType(router_outlet.RouterOutletState$(TDelegate, T), [])
    }));
    dart.setLibraryUri(RouterOutlet, I[25]);
    dart.setFieldSignature(RouterOutlet, () => ({
      __proto__: dart.getFields(RouterOutlet.__proto__),
      routerDelegate: dart.finalFieldType(TDelegate),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, TDelegate, dart.nullable(T)]))
    }));
    return RouterOutlet;
  });
  router_outlet.RouterOutlet = router_outlet.RouterOutlet$();
  dart.addTypeTests(router_outlet.RouterOutlet, _is_RouterOutlet_default);
  var currentRoute = dart.privateName(router_outlet, "RouterOutletState.currentRoute");
  var _getCurrentRoute = dart.privateName(router_outlet, "_getCurrentRoute");
  const _is_RouterOutletState_default = Symbol('_is_RouterOutletState_default');
  router_outlet.RouterOutletState$ = dart.generic((TDelegate, T) => {
    var __t$BuildContextAndTDelegateAndTNToWidget = () => (__t$BuildContextAndTDelegateAndTNToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, TDelegate, __t$TN()])))();
    var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
    class RouterOutletState extends framework.State$(router_outlet.RouterOutlet$(TDelegate, T)) {
      get currentRoute() {
        return this[currentRoute];
      }
      set currentRoute(value) {
        this[currentRoute] = __t$TN().as(value);
      }
      get delegate() {
        return this.widget.routerDelegate;
      }
      initState() {
        super.initState();
        this[_getCurrentRoute]();
        this.delegate.addListener(dart.bind(this, 'onRouterDelegateChanged'));
      }
      dispose() {
        this.delegate.removeListener(dart.bind(this, 'onRouterDelegateChanged'));
        super.dispose();
      }
      [_getCurrentRoute]() {
        this.currentRoute = this.delegate.currentConfiguration;
      }
      onRouterDelegateChanged() {
        this.setState(dart.bind(this, _getCurrentRoute));
      }
      build(context) {
        let t24, t23, t22, t21;
        t21 = this.widget;
        t22 = context;
        t23 = this.delegate;
        t24 = this.currentRoute;
        return __t$BuildContextAndTDelegateAndTNToWidget().as(t21.builder)(t22, t23, t24);
      }
      static ['_#new#tearOff'](TDelegate, T) {
        return new (router_outlet.RouterOutletState$(TDelegate, T)).new();
      }
    }
    (RouterOutletState.new = function() {
      this[currentRoute] = null;
      RouterOutletState.__proto__.new.call(this);
      ;
    }).prototype = RouterOutletState.prototype;
    dart.addTypeTests(RouterOutletState);
    RouterOutletState.prototype[_is_RouterOutletState_default] = true;
    dart.addTypeCaches(RouterOutletState);
    dart.setMethodSignature(RouterOutletState, () => ({
      __proto__: dart.getMethods(RouterOutletState.__proto__),
      [_getCurrentRoute]: dart.fnType(dart.void, []),
      onRouterDelegateChanged: dart.fnType(dart.void, []),
      build: dart.fnType(framework.Widget, [framework.BuildContext])
    }));
    dart.setGetterSignature(RouterOutletState, () => ({
      __proto__: dart.getGetters(RouterOutletState.__proto__),
      delegate: TDelegate
    }));
    dart.setLibraryUri(RouterOutletState, I[25]);
    dart.setFieldSignature(RouterOutletState, () => ({
      __proto__: dart.getFields(RouterOutletState.__proto__),
      currentRoute: dart.fieldType(dart.nullable(T))
    }));
    return RouterOutletState;
  });
  router_outlet.RouterOutletState = router_outlet.RouterOutletState$();
  dart.addTypeTests(router_outlet.RouterOutletState, _is_RouterOutletState_default);
  var SizedBox_height = dart.privateName(basic, "SizedBox.height");
  var SizedBox_width = dart.privateName(basic, "SizedBox.width");
  var history = dart.privateName(get_router_delegate, "GetDelegate.history");
  var backButtonPopMode$ = dart.privateName(get_router_delegate, "GetDelegate.backButtonPopMode");
  var preventDuplicateHandlingMode$ = dart.privateName(get_router_delegate, "GetDelegate.preventDuplicateHandlingMode");
  var notFoundRoute$ = dart.privateName(get_router_delegate, "GetDelegate.notFoundRoute");
  var navigatorObservers$1 = dart.privateName(get_router_delegate, "GetDelegate.navigatorObservers");
  var transitionDelegate$ = dart.privateName(get_router_delegate, "GetDelegate.transitionDelegate");
  var _allCompleters = dart.privateName(get_router_delegate, "_allCompleters");
  var Scaffold_restorationId = dart.privateName(scaffold, "Scaffold.restorationId");
  var Scaffold_endDrawerEnableOpenDragGesture = dart.privateName(scaffold, "Scaffold.endDrawerEnableOpenDragGesture");
  var Scaffold_drawerEnableOpenDragGesture = dart.privateName(scaffold, "Scaffold.drawerEnableOpenDragGesture");
  var Scaffold_drawerEdgeDragWidth = dart.privateName(scaffold, "Scaffold.drawerEdgeDragWidth");
  var Scaffold_drawerDragStartBehavior = dart.privateName(scaffold, "Scaffold.drawerDragStartBehavior");
  var Scaffold_primary = dart.privateName(scaffold, "Scaffold.primary");
  var Scaffold_resizeToAvoidBottomInset = dart.privateName(scaffold, "Scaffold.resizeToAvoidBottomInset");
  var Scaffold_bottomSheet = dart.privateName(scaffold, "Scaffold.bottomSheet");
  var Scaffold_bottomNavigationBar = dart.privateName(scaffold, "Scaffold.bottomNavigationBar");
  var Scaffold_backgroundColor = dart.privateName(scaffold, "Scaffold.backgroundColor");
  var Scaffold_drawerScrimColor = dart.privateName(scaffold, "Scaffold.drawerScrimColor");
  var Scaffold_onEndDrawerChanged = dart.privateName(scaffold, "Scaffold.onEndDrawerChanged");
  var Scaffold_endDrawer = dart.privateName(scaffold, "Scaffold.endDrawer");
  var Scaffold_onDrawerChanged = dart.privateName(scaffold, "Scaffold.onDrawerChanged");
  var Scaffold_drawer = dart.privateName(scaffold, "Scaffold.drawer");
  var AlignmentDirectional_y = dart.privateName(alignment, "AlignmentDirectional.y");
  var AlignmentDirectional_start = dart.privateName(alignment, "AlignmentDirectional.start");
  var Scaffold_persistentFooterAlignment = dart.privateName(scaffold, "Scaffold.persistentFooterAlignment");
  var Scaffold_persistentFooterButtons = dart.privateName(scaffold, "Scaffold.persistentFooterButtons");
  var Scaffold_floatingActionButtonAnimator = dart.privateName(scaffold, "Scaffold.floatingActionButtonAnimator");
  var Scaffold_floatingActionButtonLocation = dart.privateName(scaffold, "Scaffold.floatingActionButtonLocation");
  var Scaffold_floatingActionButton = dart.privateName(scaffold, "Scaffold.floatingActionButton");
  var Text_selectionColor = dart.privateName(text, "Text.selectionColor");
  var Text_textHeightBehavior = dart.privateName(text, "Text.textHeightBehavior");
  var Text_textWidthBasis = dart.privateName(text, "Text.textWidthBasis");
  var Text_semanticsLabel = dart.privateName(text, "Text.semanticsLabel");
  var Text_maxLines = dart.privateName(text, "Text.maxLines");
  var Text_textScaleFactor = dart.privateName(text, "Text.textScaleFactor");
  var Text_overflow = dart.privateName(text, "Text.overflow");
  var Text_softWrap = dart.privateName(text, "Text.softWrap");
  var Text_locale = dart.privateName(text, "Text.locale");
  var Text_textDirection = dart.privateName(text, "Text.textDirection");
  var Text_textAlign = dart.privateName(text, "Text.textAlign");
  var Text_strutStyle = dart.privateName(text, "Text.strutStyle");
  var Text_style = dart.privateName(text, "Text.style");
  var Text_textSpan = dart.privateName(text, "Text.textSpan");
  var Text_data = dart.privateName(text, "Text.data");
  var Scaffold_body = dart.privateName(scaffold, "Scaffold.body");
  var Scaffold_appBar = dart.privateName(scaffold, "Scaffold.appBar");
  var Scaffold_extendBodyBehindAppBar = dart.privateName(scaffold, "Scaffold.extendBodyBehindAppBar");
  var Scaffold_extendBody = dart.privateName(scaffold, "Scaffold.extendBody");
  var _canPop = dart.privateName(get_router_delegate, "_canPop");
  var _pop = dart.privateName(get_router_delegate, "_pop");
  var _onPopVisualRoute = dart.privateName(get_router_delegate, "_onPopVisualRoute");
  var _canPopHistory = dart.privateName(get_router_delegate, "_canPopHistory");
  var _canPopPage = dart.privateName(get_router_delegate, "_canPopPage");
  var _popHistory = dart.privateName(get_router_delegate, "_popHistory");
  var _pushHistory = dart.privateName(get_router_delegate, "_pushHistory");
  var _unsafeHistoryRemoveAt = dart.privateName(get_router_delegate, "_unsafeHistoryRemoveAt");
  var _doPopHistory = dart.privateName(get_router_delegate, "_doPopHistory");
  var _doPopPage = dart.privateName(get_router_delegate, "_doPopPage");
  var _removeHistoryEntry = dart.privateName(get_router_delegate, "_removeHistoryEntry");
  var _popPage = dart.privateName(get_router_delegate, "_popPage");
  var _unsafeHistoryAdd = dart.privateName(get_router_delegate, "_unsafeHistoryAdd");
  var _unsafeHistoryRemove = dart.privateName(get_router_delegate, "_unsafeHistoryRemove");
  var currentTreeBranch$ = dart.privateName(get_nav_config, "GetNavConfig.currentTreeBranch");
  get_nav_config.GetNavConfig = class GetNavConfig extends router.RouteInformation {
    get currentTreeBranch() {
      return this[currentTreeBranch$];
    }
    set currentTreeBranch(value) {
      super.currentTreeBranch = value;
    }
    get currentPage() {
      return this.currentTreeBranch[$last];
    }
    static ['_#new#tearOff'](opts) {
      let currentTreeBranch = opts && 'currentTreeBranch' in opts ? opts.currentTreeBranch : null;
      let location = opts && 'location' in opts ? opts.location : null;
      let state = opts && 'state' in opts ? opts.state : null;
      return new get_nav_config.GetNavConfig.new({currentTreeBranch: currentTreeBranch, location: location, state: state});
    }
    copyWith(opts) {
      let t24, t24$, t24$0;
      let currentTreeBranch = opts && 'currentTreeBranch' in opts ? opts.currentTreeBranch : null;
      let location = opts && 'location' in opts ? opts.location : null;
      let state = opts && 'state' in opts ? opts.state : null;
      return new get_nav_config.GetNavConfig.new({currentTreeBranch: (t24 = currentTreeBranch, t24 == null ? this.currentTreeBranch : t24), location: (t24$ = location, t24$ == null ? this.location : t24$), state: (t24$0 = state, t24$0 == null ? this.state : t24$0)});
    }
    static fromRoute(route) {
      let res = extension_navigation['NavTwoExt|get#routeTree'](get_main.Get).matchRoute(route);
      if (res.treeBranch[$isEmpty]) return null;
      return new get_nav_config.GetNavConfig.new({currentTreeBranch: res.treeBranch, location: route, state: null});
    }
    toString() {
      return "======GetNavConfig=====\ncurrentTreeBranch: " + dart.str(this.currentTreeBranch) + "\ncurrentPage: " + dart.str(this.currentPage) + "\n======GetNavConfig=====";
    }
  };
  (get_nav_config.GetNavConfig.new = function(opts) {
    let currentTreeBranch = opts && 'currentTreeBranch' in opts ? opts.currentTreeBranch : null;
    let location = opts && 'location' in opts ? opts.location : null;
    let state = opts && 'state' in opts ? opts.state : null;
    this[currentTreeBranch$] = currentTreeBranch;
    get_nav_config.GetNavConfig.__proto__.new.call(this, {location: location, state: state});
    ;
  }).prototype = get_nav_config.GetNavConfig.prototype;
  dart.addTypeTests(get_nav_config.GetNavConfig);
  dart.addTypeCaches(get_nav_config.GetNavConfig);
  dart.setMethodSignature(get_nav_config.GetNavConfig, () => ({
    __proto__: dart.getMethods(get_nav_config.GetNavConfig.__proto__),
    copyWith: dart.fnType(get_nav_config.GetNavConfig, [], {currentTreeBranch: dart.nullable(core.List$(get_route.GetPage))}, {location: dart.nullable(core.String), state: dart.nullable(core.Object)})
  }));
  dart.setStaticMethodSignature(get_nav_config.GetNavConfig, () => ['fromRoute']);
  dart.setGetterSignature(get_nav_config.GetNavConfig, () => ({
    __proto__: dart.getGetters(get_nav_config.GetNavConfig.__proto__),
    currentPage: dart.nullable(get_route.GetPage)
  }));
  dart.setLibraryUri(get_nav_config.GetNavConfig, I[26]);
  dart.setFieldSignature(get_nav_config.GetNavConfig, () => ({
    __proto__: dart.getFields(get_nav_config.GetNavConfig.__proto__),
    currentTreeBranch: dart.finalFieldType(core.List$(get_route.GetPage))
  }));
  dart.defineExtensionMethods(get_nav_config.GetNavConfig, ['toString']);
  const RouterDelegate_ListenableMixin$36 = class RouterDelegate_ListenableMixin extends router.RouterDelegate$(get_nav_config.GetNavConfig) {};
  (RouterDelegate_ListenableMixin$36.new = function() {
    RouterDelegate_ListenableMixin$36.__proto__.new.call(this);
  }).prototype = RouterDelegate_ListenableMixin$36.prototype;
  dart.applyMixin(RouterDelegate_ListenableMixin$36, list_notifier.ListenableMixin);
  const RouterDelegate_ListNotifierMixin$36 = class RouterDelegate_ListNotifierMixin extends RouterDelegate_ListenableMixin$36 {};
  (RouterDelegate_ListNotifierMixin$36.new = function() {
    list_notifier.ListNotifierMixin[dart.mixinNew].call(this);
    RouterDelegate_ListNotifierMixin$36.__proto__.new.call(this);
  }).prototype = RouterDelegate_ListNotifierMixin$36.prototype;
  dart.applyMixin(RouterDelegate_ListNotifierMixin$36, list_notifier.ListNotifierMixin);
  get_router_delegate.GetDelegate = class GetDelegate extends RouterDelegate_ListNotifierMixin$36 {
    get history() {
      return this[history];
    }
    set history(value) {
      super.history = value;
    }
    get backButtonPopMode() {
      return this[backButtonPopMode$];
    }
    set backButtonPopMode(value) {
      super.backButtonPopMode = value;
    }
    get preventDuplicateHandlingMode() {
      return this[preventDuplicateHandlingMode$];
    }
    set preventDuplicateHandlingMode(value) {
      super.preventDuplicateHandlingMode = value;
    }
    get notFoundRoute() {
      return this[notFoundRoute$];
    }
    set notFoundRoute(value) {
      super.notFoundRoute = value;
    }
    get navigatorObservers() {
      return this[navigatorObservers$1];
    }
    set navigatorObservers(value) {
      super.navigatorObservers = value;
    }
    get transitionDelegate() {
      return this[transitionDelegate$];
    }
    set transitionDelegate(value) {
      super.transitionDelegate = value;
    }
    static ['_#new#tearOff'](opts) {
      let notFoundRoute = opts && 'notFoundRoute' in opts ? opts.notFoundRoute : null;
      let navigatorObservers = opts && 'navigatorObservers' in opts ? opts.navigatorObservers : null;
      let transitionDelegate = opts && 'transitionDelegate' in opts ? opts.transitionDelegate : null;
      let backButtonPopMode = opts && 'backButtonPopMode' in opts ? opts.backButtonPopMode : C[181] || CT.C181;
      let preventDuplicateHandlingMode = opts && 'preventDuplicateHandlingMode' in opts ? opts.preventDuplicateHandlingMode : C[182] || CT.C182;
      return new get_router_delegate.GetDelegate.new({notFoundRoute: notFoundRoute, navigatorObservers: navigatorObservers, transitionDelegate: transitionDelegate, backButtonPopMode: backButtonPopMode, preventDuplicateHandlingMode: preventDuplicateHandlingMode});
    }
    get currentConfiguration() {
      if (this.history[$isEmpty]) return null;
      let route = this.history[$last];
      return route;
    }
    get navigatorKey() {
      return extension_navigation['GetNavigation|get#key'](get_main.Get);
    }
    get parameters() {
      let t24, t23, t23$;
      t23$ = (t23 = this.currentConfiguration, t23 == null ? null : (t24 = t23.currentPage, t24 == null ? null : t24.parameters));
      return t23$ == null ? new (T$.IdentityMapOfString$String()).new() : t23$;
    }
    arguments(T) {
      let t24, t23;
      return T.as((t23 = this.currentConfiguration, t23 == null ? null : (t24 = t23.currentPage, t24 == null ? null : t24.arguments)));
    }
    backUntil(fullRoute, opts) {
      let popMode = opts && 'popMode' in opts ? opts.popMode : C[189] || CT.C189;
      return async.async(dart.void, (function* backUntil() {
        let iterator = this.currentConfiguration;
        while (this[_canPop](popMode) && iterator != null && iterator.location !== fullRoute) {
          yield this[_pop](popMode);
          iterator = this.currentConfiguration;
        }
        this.refresh();
      }).bind(this));
    }
    build(context) {
      let t24;
      let pages = this.getVisualPages();
      if (pages[$isEmpty]) return C[190] || CT.C190;
      let extraObservers = this.navigatorObservers;
      return new get_router_delegate.GetNavigator.new({key: this.navigatorKey, onPopPage: dart.bind(this, _onPopVisualRoute), pages: pages, observers: (() => {
          let t23 = T$.JSArrayOfNavigatorObserver().of([new route_observer.GetObserver.new()]);
          if (extraObservers != null) t23[$addAll](extraObservers);
          return t23;
        })(), transitionDelegate: (t24 = this.transitionDelegate, t24 == null ? C[192] || CT.C192 : t24), $creationLocationd_0dea112b090073317d4: C[193] || CT.C193});
    }
    canPopHistory() {
      return new (T$.SynchronousFutureOfbool()).new(this[_canPopHistory]());
    }
    canPopPage() {
      return new (T$.SynchronousFutureOfbool()).new(this[_canPopPage]());
    }
    getVisualPages() {
      let currentHistory = this.currentConfiguration;
      if (currentHistory == null) return T$.JSArrayOfGetPage().of([]);
      let res = currentHistory.currentTreeBranch[$where](dart.fn(r => r.participatesInRootNavigator != null, T$.GetPageTobool()));
      if (res[$isEmpty]) {
        return this.history[$map](get_route.GetPage, dart.fn(e => dart.nullCheck(e.currentPage), T$.GetNavConfigToGetPage()))[$toList]();
      } else {
        return res[$where](dart.fn(element => element.participatesInRootNavigator === true, T$.GetPageTobool()))[$toList]();
      }
    }
    handlePopupRoutes(opts) {
      let result = opts && 'result' in opts ? opts.result : null;
      return async.async(core.bool, (function* handlePopupRoutes() {
        let currentRoute = null;
        dart.nullCheck(this.navigatorKey.currentState).popUntil(dart.fn(route => {
          currentRoute = route;
          return true;
        }, T$.RouteTobool()));
        if (routes.PopupRoute.is(currentRoute)) {
          return yield dart.nullCheck(this.navigatorKey.currentState).maybePop(core.Object, result);
        }
        return false;
      }).bind(this));
    }
    offAndToNamed(T, page, opts) {
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      let id = opts && 'id' in opts ? opts.id : null;
      let result = opts && 'result' in opts ? opts.result : null;
      let parameters = opts && 'parameters' in opts ? opts.parameters : null;
      let popMode = opts && 'popMode' in opts ? opts.popMode : C[181] || CT.C181;
      return async.async(dart.nullable(T), (function* offAndToNamed() {
        if (parameters != null) {
          let uri = core._Uri.new({path: page, queryParameters: parameters});
          page = uri.toString();
        }
        yield this.popRoute({result: result});
        return this.toNamed(dart.nullable(T), page, {arguments: $arguments, parameters: parameters});
      }).bind(this));
    }
    offNamed(T, page, opts) {
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      let parameters = opts && 'parameters' in opts ? opts.parameters : null;
      return async.async(T, (function* offNamed() {
        this.history[$removeLast]();
        return this.toNamed(T, page, {arguments: $arguments, parameters: parameters});
      }).bind(this));
    }
    popHistory() {
      return async.async(T$.GetNavConfigN(), (function* popHistory() {
        return yield this[_popHistory]();
      }).bind(this));
    }
    popRoute(opts) {
      let result = opts && 'result' in opts ? opts.result : null;
      let popMode = opts && 'popMode' in opts ? opts.popMode : C[189] || CT.C189;
      return async.async(core.bool, (function* popRoute() {
        let wasPopup = (yield this.handlePopupRoutes({result: result}));
        if (wasPopup) return true;
        let popped = (yield this[_pop](popMode));
        this.refresh();
        if (popped != null) {
          return true;
        }
        return false;
      }).bind(this));
    }
    pushHistory(config, opts) {
      let rebuildStack = opts && 'rebuildStack' in opts ? opts.rebuildStack : true;
      return async.async(dart.void, (function* pushHistory() {
        yield this[_pushHistory](config);
        if (rebuildStack) {
          this.refresh();
        }
      }).bind(this));
    }
    runMiddleware(config) {
      return async.async(T$.GetNavConfigN(), function* runMiddleware() {
        let middlewares = config.currentTreeBranch[$last].middlewares;
        if (middlewares == null) {
          return config;
        }
        let iterator = config;
        for (let item of middlewares) {
          let redirectRes = (yield item.redirectDelegate(iterator));
          if (redirectRes == null) return null;
          iterator = redirectRes;
        }
        return iterator;
      });
    }
    setNewRoutePath(configuration) {
      get_nav_config.GetNavConfig.as(configuration);
      return async.async(dart.void, (function* setNewRoutePath() {
        yield this.pushHistory(configuration);
      }).bind(this));
    }
    toNamed(T, page, opts) {
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      let parameters = opts && 'parameters' in opts ? opts.parameters : null;
      return async.async(T, (function* toNamed() {
        if (parameters != null) {
          let uri = core._Uri.new({path: page, queryParameters: parameters});
          page = uri.toString();
        }
        let decoder = extension_navigation['NavTwoExt|get#routeTree'](get_main.Get).matchRoute(page, {arguments: $arguments});
        decoder.replaceArguments($arguments);
        let completer = async.Completer$(T).new();
        if (decoder.route != null) {
          this[_allCompleters][$_set](dart.nullCheck(decoder.route), completer);
          yield this.pushHistory(new get_nav_config.GetNavConfig.new({currentTreeBranch: decoder.treeBranch, location: page, state: null}));
          return completer.future;
        } else {
          return async.Future$(T).value();
        }
      }).bind(this));
    }
    [_canPop](mode) {
      switch (mode) {
        case C[181] || CT.C181:
          {
            return this[_canPopHistory]();
          }
        case C[189] || CT.C189:
        default:
          {
            return this[_canPopPage]();
          }
      }
    }
    [_canPopHistory]() {
      return this.history[$length] > 1;
    }
    [_canPopPage]() {
      let t24;
      let currentTreeBranch = (t24 = this.currentConfiguration, t24 == null ? null : t24.currentTreeBranch);
      if (currentTreeBranch == null) return false;
      return currentTreeBranch[$length] > 1 ? true : this[_canPopHistory]();
    }
    [_doPopHistory]() {
      return async.async(T$.GetNavConfigN(), (function* _doPopHistory() {
        return yield this[_unsafeHistoryRemoveAt](this.history[$length] - 1);
      }).bind(this));
    }
    [_doPopPage]() {
      return async.async(T$.GetNavConfigN(), (function* _doPopPage() {
        let t24;
        let currentBranch = (t24 = this.currentConfiguration, t24 == null ? null : t24.currentTreeBranch);
        if (currentBranch != null && currentBranch[$length] > 1) {
          let remaining = currentBranch[$take](currentBranch[$length] - 1);
          let prevHistoryEntry = this.history[$length] > 1 ? this.history[$_get](this.history[$length] - 2) : null;
          if (prevHistoryEntry != null) {
            let newLocation = remaining[$last].name;
            let prevLocation = prevHistoryEntry.location;
            if (newLocation === prevLocation) {
              return yield this[_popHistory]();
            }
          }
          let res = (yield this[_popHistory]());
          yield this[_pushHistory](new get_nav_config.GetNavConfig.new({currentTreeBranch: remaining[$toList](), location: remaining[$last].name, state: null}));
          return res;
        } else {
          return yield this[_popHistory]();
        }
      }).bind(this));
    }
    [_onPopVisualRoute](route, result) {
      let t24;
      let didPop = route.didPop(result);
      if (!didPop) {
        return false;
      }
      let settings = route.settings;
      if (get_route.GetPage.is(settings)) {
        let config = this.history[$cast](T$.GetNavConfigN())[$firstWhere](dart.fn(element => {
          let t24;
          return dart.equals((t24 = element, t24 == null ? null : t24.currentPage), settings);
        }, T$.GetNavConfigNTobool()), {orElse: dart.fn(() => null, T$.VoidToNull())});
        if (config != null) {
          this[_removeHistoryEntry](config);
        }
        if (this[_allCompleters][$containsKey](settings)) {
          t24 = this[_allCompleters][$_get](settings);
          t24 == null ? null : t24.complete(route.popped);
        }
      }
      this.refresh();
      return true;
    }
    [_pop](mode) {
      return async.async(T$.GetNavConfigN(), (function* _pop() {
        switch (mode) {
          case C[181] || CT.C181:
            {
              return yield this[_popHistory]();
            }
          case C[189] || CT.C189:
            {
              return yield this[_popPage]();
            }
          default:
            {
              return null;
            }
        }
      }).bind(this));
    }
    [_popHistory]() {
      return async.async(T$.GetNavConfigN(), (function* _popHistory() {
        if (!this[_canPopHistory]()) return null;
        return yield this[_doPopHistory]();
      }).bind(this));
    }
    [_popPage]() {
      return async.async(T$.GetNavConfigN(), (function* _popPage() {
        if (!this[_canPopPage]()) return null;
        return yield this[_doPopPage]();
      }).bind(this));
    }
    [_pushHistory](config) {
      return async.async(dart.void, (function* _pushHistory() {
        if (dart.nullCheck(config.currentPage).preventDuplicates) {
          let originalEntryIndex = this.history[$indexWhere](dart.fn(element => element.location == config.location, T$.GetNavConfigTobool()));
          if (originalEntryIndex >= 0) {
            switch (this.preventDuplicateHandlingMode) {
              case C[194] || CT.C194:
                {
                  yield this.backUntil(dart.nullCheck(config.location), {popMode: get_router_delegate.PopMode.Page});
                  break;
                }
              case C[182] || CT.C182:
                {
                  yield this[_unsafeHistoryRemoveAt](originalEntryIndex);
                  yield this[_unsafeHistoryAdd](config);
                  break;
                }
              case C[195] || CT.C195:
              default:
                {
                  break;
                }
            }
            return;
          }
        }
        yield this[_unsafeHistoryAdd](config);
      }).bind(this));
    }
    [_removeHistoryEntry](entry) {
      return async.async(dart.void, (function* _removeHistoryEntry() {
        yield this[_unsafeHistoryRemove](entry);
      }).bind(this));
    }
    [_unsafeHistoryAdd](config) {
      return async.async(dart.void, (function* _unsafeHistoryAdd() {
        let res = (yield this.runMiddleware(config));
        if (res == null) return;
        this.history[$add](res);
      }).bind(this));
    }
    [_unsafeHistoryRemove](config) {
      return async.async(dart.void, (function* _unsafeHistoryRemove() {
        let index = this.history[$indexOf](config);
        if (index >= 0) yield this[_unsafeHistoryRemoveAt](index);
      }).bind(this));
    }
    [_unsafeHistoryRemoveAt](index) {
      return async.async(T$.GetNavConfigN(), (function* _unsafeHistoryRemoveAt() {
        if (index === this.history[$length] - 1 && this.history[$length] > 1) {
          let toCheck = this.history[$_get](this.history[$length] - 2);
          let resMiddleware = (yield this.runMiddleware(toCheck));
          if (resMiddleware == null) return null;
          this.history[$_set](this.history[$length] - 2, resMiddleware);
        }
        return this.history[$removeAt](index);
      }).bind(this));
    }
  };
  (get_router_delegate.GetDelegate.new = function(opts) {
    let t23, t24, t23$;
    let notFoundRoute = opts && 'notFoundRoute' in opts ? opts.notFoundRoute : null;
    let navigatorObservers = opts && 'navigatorObservers' in opts ? opts.navigatorObservers : null;
    let transitionDelegate = opts && 'transitionDelegate' in opts ? opts.transitionDelegate : null;
    let backButtonPopMode = opts && 'backButtonPopMode' in opts ? opts.backButtonPopMode : C[181] || CT.C181;
    let preventDuplicateHandlingMode = opts && 'preventDuplicateHandlingMode' in opts ? opts.preventDuplicateHandlingMode : C[182] || CT.C182;
    this[history] = T$.JSArrayOfGetNavConfig().of([]);
    this[_allCompleters] = new (T$.LinkedMapOfGetPage$Completer()).new();
    this[navigatorObservers$1] = navigatorObservers;
    this[transitionDelegate$] = transitionDelegate;
    this[backButtonPopMode$] = backButtonPopMode;
    this[preventDuplicateHandlingMode$] = preventDuplicateHandlingMode;
    this[notFoundRoute$] = (t23 = notFoundRoute, t23 == null ? new get_route.GetPage.new({name: "/404", page: dart.fn(() => C[183] || CT.C183, T$.VoidToScaffold())}) : t23);
    get_router_delegate.GetDelegate.__proto__.new.call(this);
    t23$ = get_main.Get;
    t24 = "GetDelegate is created !";
    t23$.log(t24);
  }).prototype = get_router_delegate.GetDelegate.prototype;
  dart.addTypeTests(get_router_delegate.GetDelegate);
  dart.addTypeCaches(get_router_delegate.GetDelegate);
  dart.setMethodSignature(get_router_delegate.GetDelegate, () => ({
    __proto__: dart.getMethods(get_router_delegate.GetDelegate.__proto__),
    arguments: dart.gFnType(T => [T, []], T => [dart.nullable(core.Object)]),
    backUntil: dart.fnType(async.Future$(dart.void), [core.String], {popMode: get_router_delegate.PopMode}, {}),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    canPopHistory: dart.fnType(async.Future$(core.bool), []),
    canPopPage: dart.fnType(async.Future$(core.bool), []),
    getVisualPages: dart.fnType(core.List$(get_route.GetPage), []),
    handlePopupRoutes: dart.fnType(async.Future$(core.bool), [], {result: dart.nullable(core.Object)}, {}),
    offAndToNamed: dart.gFnType(T => [dart.nullable(async.Future$(dart.nullable(T))), [core.String], {arguments: dart.dynamic, id: dart.nullable(core.int), parameters: dart.nullable(core.Map$(core.String, core.String)), popMode: get_router_delegate.PopMode, result: dart.dynamic}, {}], T => [dart.nullable(core.Object)]),
    offNamed: dart.gFnType(T => [async.Future$(T), [core.String], {arguments: dart.dynamic, parameters: dart.nullable(core.Map$(core.String, core.String))}, {}], T => [dart.nullable(core.Object)]),
    popHistory: dart.fnType(async.Future$(dart.nullable(get_nav_config.GetNavConfig)), []),
    popRoute: dart.fnType(async.Future$(core.bool), [], {popMode: get_router_delegate.PopMode, result: dart.nullable(core.Object)}, {}),
    pushHistory: dart.fnType(async.Future$(dart.void), [get_nav_config.GetNavConfig], {rebuildStack: core.bool}, {}),
    runMiddleware: dart.fnType(async.Future$(dart.nullable(get_nav_config.GetNavConfig)), [get_nav_config.GetNavConfig]),
    setNewRoutePath: dart.fnType(async.Future$(dart.void), [dart.nullable(core.Object)]),
    toNamed: dart.gFnType(T => [async.Future$(T), [core.String], {arguments: dart.dynamic, parameters: dart.nullable(core.Map$(core.String, core.String))}, {}], T => [dart.nullable(core.Object)]),
    [_canPop]: dart.fnType(core.bool, [get_router_delegate.PopMode]),
    [_canPopHistory]: dart.fnType(core.bool, []),
    [_canPopPage]: dart.fnType(core.bool, []),
    [_doPopHistory]: dart.fnType(async.Future$(dart.nullable(get_nav_config.GetNavConfig)), []),
    [_doPopPage]: dart.fnType(async.Future$(dart.nullable(get_nav_config.GetNavConfig)), []),
    [_onPopVisualRoute]: dart.fnType(core.bool, [navigator.Route, dart.dynamic]),
    [_pop]: dart.fnType(async.Future$(dart.nullable(get_nav_config.GetNavConfig)), [get_router_delegate.PopMode]),
    [_popHistory]: dart.fnType(async.Future$(dart.nullable(get_nav_config.GetNavConfig)), []),
    [_popPage]: dart.fnType(async.Future$(dart.nullable(get_nav_config.GetNavConfig)), []),
    [_pushHistory]: dart.fnType(async.Future$(dart.void), [get_nav_config.GetNavConfig]),
    [_removeHistoryEntry]: dart.fnType(async.Future$(dart.void), [get_nav_config.GetNavConfig]),
    [_unsafeHistoryAdd]: dart.fnType(async.Future$(dart.void), [get_nav_config.GetNavConfig]),
    [_unsafeHistoryRemove]: dart.fnType(async.Future$(dart.void), [get_nav_config.GetNavConfig]),
    [_unsafeHistoryRemoveAt]: dart.fnType(async.Future$(dart.nullable(get_nav_config.GetNavConfig)), [core.int])
  }));
  dart.setGetterSignature(get_router_delegate.GetDelegate, () => ({
    __proto__: dart.getGetters(get_router_delegate.GetDelegate.__proto__),
    navigatorKey: framework.GlobalKey$(navigator.NavigatorState),
    parameters: core.Map$(core.String, core.String)
  }));
  dart.setLibraryUri(get_router_delegate.GetDelegate, I[27]);
  dart.setFieldSignature(get_router_delegate.GetDelegate, () => ({
    __proto__: dart.getFields(get_router_delegate.GetDelegate.__proto__),
    history: dart.finalFieldType(core.List$(get_nav_config.GetNavConfig)),
    backButtonPopMode: dart.finalFieldType(get_router_delegate.PopMode),
    preventDuplicateHandlingMode: dart.finalFieldType(get_router_delegate.PreventDuplicateHandlingMode),
    notFoundRoute: dart.finalFieldType(get_route.GetPage),
    navigatorObservers: dart.finalFieldType(dart.nullable(core.List$(navigator.NavigatorObserver))),
    transitionDelegate: dart.finalFieldType(dart.nullable(navigator.TransitionDelegate)),
    [_allCompleters]: dart.finalFieldType(core.Map$(get_route.GetPage, async.Completer))
  }));
  router_outlet.GetRouterOutlet = class GetRouterOutlet extends router_outlet.RouterOutlet$(get_router_delegate.GetDelegate, get_nav_config.GetNavConfig) {
    static ['_#new#tearOff'](opts) {
      let anchorRoute = opts && 'anchorRoute' in opts ? opts.anchorRoute : null;
      let initialRoute = opts && 'initialRoute' in opts ? opts.initialRoute : null;
      let filterPages = opts && 'filterPages' in opts ? opts.filterPages : null;
      let key = opts && 'key' in opts ? opts.key : null;
      let delegate = opts && 'delegate' in opts ? opts.delegate : null;
      return new router_outlet.GetRouterOutlet.new({anchorRoute: anchorRoute, initialRoute: initialRoute, filterPages: filterPages, key: key, delegate: delegate, $creationLocationd_0dea112b090073317d4: C[178] || CT.C178});
    }
    static ['_#pickPages#tearOff'](opts) {
      let emptyWidget = opts && 'emptyWidget' in opts ? opts.emptyWidget : null;
      let emptyPage = opts && 'emptyPage' in opts ? opts.emptyPage : null;
      let pickPages = opts && 'pickPages' in opts ? opts.pickPages : null;
      let onPopPage = opts && 'onPopPage' in opts ? opts.onPopPage : null;
      let key = opts && 'key' in opts ? opts.key : null;
      let delegate = opts && 'delegate' in opts ? opts.delegate : null;
      return new router_outlet.GetRouterOutlet.pickPages({emptyWidget: emptyWidget, emptyPage: emptyPage, pickPages: pickPages, onPopPage: onPopPage, key: key, delegate: delegate, $creationLocationd_0dea112b090073317d4: C[179] || CT.C179});
    }
    static ['_#builder#tearOff'](opts) {
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let routerDelegate = opts && 'routerDelegate' in opts ? opts.routerDelegate : null;
      return new router_outlet.GetRouterOutlet.builder({builder: builder, routerDelegate: routerDelegate, $creationLocationd_0dea112b090073317d4: C[180] || CT.C180});
    }
  };
  (router_outlet.GetRouterOutlet.new = function(opts) {
    let anchorRoute = opts && 'anchorRoute' in opts ? opts.anchorRoute : null;
    let initialRoute = opts && 'initialRoute' in opts ? opts.initialRoute : null;
    let filterPages = opts && 'filterPages' in opts ? opts.filterPages : null;
    let key = opts && 'key' in opts ? opts.key : null;
    let delegate = opts && 'delegate' in opts ? opts.delegate : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    router_outlet.GetRouterOutlet.pickPages.call(this, {pickPages: dart.fn(config => {
        let ret = null;
        if (anchorRoute == null) {
          let length = core.Uri.parse(initialRoute).pathSegments[$length];
          return config.currentTreeBranch[$skip](length)[$take](length)[$toList]();
        }
        ret = router_outlet['PagesListExt|pickAfterRoute'](config.currentTreeBranch, anchorRoute);
        if (filterPages != null) {
          ret = filterPages(ret);
        }
        return ret;
      }, T$.GetNavConfigToIterableOfGetPage()), emptyPage: dart.fn(delegate => {
        let t21;
        t21 = extension_navigation['NavTwoExt|get#routeTree'](get_main.Get).matchRoute(initialRoute).route;
        return t21 == null ? delegate.notFoundRoute : t21;
      }, T$.GetDelegateToGetPage()), key: key, delegate: delegate, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
  }).prototype = router_outlet.GetRouterOutlet.prototype;
  (router_outlet.GetRouterOutlet.pickPages = function(opts) {
    let t23;
    let emptyWidget = opts && 'emptyWidget' in opts ? opts.emptyWidget : null;
    let emptyPage = opts && 'emptyPage' in opts ? opts.emptyPage : null;
    let pickPages = opts && 'pickPages' in opts ? opts.pickPages : null;
    let onPopPage = opts && 'onPopPage' in opts ? opts.onPopPage : null;
    let key = opts && 'key' in opts ? opts.key : null;
    let delegate = opts && 'delegate' in opts ? opts.delegate : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    router_outlet.GetRouterOutlet.__proto__.new.call(this, {pageBuilder: dart.fn((context, rDelegate, pages) => {
        let t23, t23$, t23$0, t23$1;
        let pageRes = (() => {
          let t21 = T$.JSArrayOfGetPageN().of([]);
          let t22 = pages;
          if (t22 != null) t21[$addAll](t22);
          if (pages == null || pages[$isEmpty]) t21.push((t23 = emptyPage, t23 == null ? null : t23(rDelegate)));
          return t21;
        })()[$whereType](get_route.GetPage);
        if (pageRes[$isNotEmpty]) {
          return new get_router_delegate.GetNavigator.new({onPopPage: (t23$ = onPopPage, t23$ == null ? dart.fn((route, result) => {
              let didPop = route.didPop(result);
              if (!didPop) {
                return false;
              }
              return true;
            }, T$.RouteAnddynamicTobool()) : t23$), pages: pageRes[$toList](), key: key, $creationLocationd_0dea112b090073317d4: C[175] || CT.C175});
        }
        t23$1 = (t23$0 = emptyWidget, t23$0 == null ? null : t23$0(rDelegate));
        return t23$1 == null ? C[176] || CT.C176 : t23$1;
      }, T$.BuildContextAndGetDelegateAndIterableNOfGetPageToWidget()), pickPages: pickPages, delegate: (t23 = delegate, t23 == null ? extension_navigation['NavTwoExt|get#rootDelegate'](get_main.Get) : t23), $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = router_outlet.GetRouterOutlet.prototype;
  (router_outlet.GetRouterOutlet.builder = function(opts) {
    let builder = opts && 'builder' in opts ? opts.builder : null;
    let routerDelegate = opts && 'routerDelegate' in opts ? opts.routerDelegate : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    router_outlet.GetRouterOutlet.__proto__.builder.call(this, {builder: builder, delegate: routerDelegate, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = router_outlet.GetRouterOutlet.prototype;
  dart.addTypeTests(router_outlet.GetRouterOutlet);
  dart.addTypeCaches(router_outlet.GetRouterOutlet);
  dart.setLibraryUri(router_outlet.GetRouterOutlet, I[25]);
  router_outlet['PagesListExt|pickAtRoute'] = function PagesListExt$124pickAtRoute($this, route) {
    return $this[$skipWhile](dart.fn(value => value.name !== route, T$.GetPageTobool()));
  };
  router_outlet['PagesListExt|get#pickAtRoute'] = function PagesListExt$124get$35pickAtRoute($this) {
    return dart.fn(route => router_outlet['PagesListExt|pickAtRoute']($this, route), T$.StringToIterableOfGetPage());
  };
  router_outlet['PagesListExt|pickAfterRoute'] = function PagesListExt$124pickAfterRoute($this, route) {
    return router_outlet['PagesListExt|pickAtRoute']($this, route)[$skip](1);
  };
  router_outlet['PagesListExt|get#pickAfterRoute'] = function PagesListExt$124get$35pickAfterRoute($this) {
    return dart.fn(route => router_outlet['PagesListExt|pickAfterRoute']($this, route), T$.StringToIterableOfGetPage());
  };
  get_router_delegate.GetNavigator = class GetNavigator extends navigator.Navigator {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let onPopPage = opts && 'onPopPage' in opts ? opts.onPopPage : null;
      let pages = opts && 'pages' in opts ? opts.pages : null;
      let observers = opts && 'observers' in opts ? opts.observers : null;
      let reportsRouteUpdateToEngine = opts && 'reportsRouteUpdateToEngine' in opts ? opts.reportsRouteUpdateToEngine : false;
      let transitionDelegate = opts && 'transitionDelegate' in opts ? opts.transitionDelegate : null;
      return new get_router_delegate.GetNavigator.new({key: key, onPopPage: onPopPage, pages: pages, observers: observers, reportsRouteUpdateToEngine: reportsRouteUpdateToEngine, transitionDelegate: transitionDelegate, $creationLocationd_0dea112b090073317d4: C[196] || CT.C196});
    }
  };
  (get_router_delegate.GetNavigator.new = function(opts) {
    let t28, t29;
    let key = opts && 'key' in opts ? opts.key : null;
    let onPopPage = opts && 'onPopPage' in opts ? opts.onPopPage : null;
    let pages = opts && 'pages' in opts ? opts.pages : null;
    let observers = opts && 'observers' in opts ? opts.observers : null;
    let reportsRouteUpdateToEngine = opts && 'reportsRouteUpdateToEngine' in opts ? opts.reportsRouteUpdateToEngine : false;
    let transitionDelegate = opts && 'transitionDelegate' in opts ? opts.transitionDelegate : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    get_router_delegate.GetNavigator.__proto__.new.call(this, {key: key, onPopPage: (t28 = onPopPage, t28 == null ? dart.fn((route, result) => {
        let didPop = route.didPop(result);
        if (!didPop) {
          return false;
        }
        return true;
      }, T$.RouteAnddynamicTobool()) : t28), reportsRouteUpdateToEngine: reportsRouteUpdateToEngine, pages: pages, observers: (() => {
        let t28 = T$.JSArrayOfNavigatorObserver().of([]);
        if (observers != null) t28[$addAll](observers);
        return t28;
      })(), transitionDelegate: (t29 = transitionDelegate, t29 == null ? C[192] || CT.C192 : t29), $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = get_router_delegate.GetNavigator.prototype;
  dart.addTypeTests(get_router_delegate.GetNavigator);
  dart.addTypeCaches(get_router_delegate.GetNavigator);
  dart.setLibraryUri(get_router_delegate.GetNavigator, I[27]);
  get_router_delegate.PopMode = class PopMode extends core._Enum {
    toString() {
      return "PopMode." + this[_name];
    }
  };
  (get_router_delegate.PopMode.new = function(index, name) {
    get_router_delegate.PopMode.__proto__.new.call(this, index, name);
    ;
  }).prototype = get_router_delegate.PopMode.prototype;
  dart.addTypeTests(get_router_delegate.PopMode);
  dart.addTypeCaches(get_router_delegate.PopMode);
  dart.setLibraryUri(get_router_delegate.PopMode, I[27]);
  dart.setStaticFieldSignature(get_router_delegate.PopMode, () => ['values', 'History', 'Page']);
  dart.defineExtensionMethods(get_router_delegate.PopMode, ['toString']);
  dart.defineLazy(get_router_delegate.PopMode, {
    /*get_router_delegate.PopMode.values*/get values() {
      return C[197] || CT.C197;
    },
    /*get_router_delegate.PopMode.History*/get History() {
      return C[181] || CT.C181;
    },
    /*get_router_delegate.PopMode.Page*/get Page() {
      return C[189] || CT.C189;
    }
  }, false);
  get_router_delegate.PreventDuplicateHandlingMode = class PreventDuplicateHandlingMode extends core._Enum {
    toString() {
      return "PreventDuplicateHandlingMode." + this[_name];
    }
  };
  (get_router_delegate.PreventDuplicateHandlingMode.new = function(index, name) {
    get_router_delegate.PreventDuplicateHandlingMode.__proto__.new.call(this, index, name);
    ;
  }).prototype = get_router_delegate.PreventDuplicateHandlingMode.prototype;
  dart.addTypeTests(get_router_delegate.PreventDuplicateHandlingMode);
  dart.addTypeCaches(get_router_delegate.PreventDuplicateHandlingMode);
  dart.setLibraryUri(get_router_delegate.PreventDuplicateHandlingMode, I[27]);
  dart.setStaticFieldSignature(get_router_delegate.PreventDuplicateHandlingMode, () => ['values', 'PopUntilOriginalRoute', 'DoNothing', 'ReorderRoutes']);
  dart.defineExtensionMethods(get_router_delegate.PreventDuplicateHandlingMode, ['toString']);
  dart.defineLazy(get_router_delegate.PreventDuplicateHandlingMode, {
    /*get_router_delegate.PreventDuplicateHandlingMode.values*/get values() {
      return C[198] || CT.C198;
    },
    /*get_router_delegate.PreventDuplicateHandlingMode.PopUntilOriginalRoute*/get PopUntilOriginalRoute() {
      return C[194] || CT.C194;
    },
    /*get_router_delegate.PreventDuplicateHandlingMode.DoNothing*/get DoNothing() {
      return C[195] || CT.C195;
    },
    /*get_router_delegate.PreventDuplicateHandlingMode.ReorderRoutes*/get ReorderRoutes() {
      return C[182] || CT.C182;
    }
  }, false);
  var initialRoute$1 = dart.privateName(get_information_parser, "GetInformationParser.initialRoute");
  get_information_parser.GetInformationParser = class GetInformationParser extends router.RouteInformationParser$(get_nav_config.GetNavConfig) {
    get initialRoute() {
      return this[initialRoute$1];
    }
    set initialRoute(value) {
      super.initialRoute = value;
    }
    static ['_#new#tearOff'](opts) {
      let initialRoute = opts && 'initialRoute' in opts ? opts.initialRoute : "/";
      return new get_information_parser.GetInformationParser.new({initialRoute: initialRoute});
    }
    parseRouteInformation(routeInformation) {
      let t34, t33, t33$;
      let location = routeInformation.location;
      if (location === "/") {
        if (!extension_navigation['NavTwoExt|get#routeTree'](get_main.Get).routes[$any](dart.fn(element => element.name === "/", T$.GetPageTobool()))) {
          location = this.initialRoute;
        }
      }
      t33 = get_main.Get;
      t34 = "GetInformationParser: route location: " + dart.str(location);
      t33.log(t34);
      let matchResult = extension_navigation['NavTwoExt|get#routeTree'](get_main.Get).matchRoute((t33$ = location, t33$ == null ? this.initialRoute : t33$));
      return new (T$.SynchronousFutureOfGetNavConfig()).new(new get_nav_config.GetNavConfig.new({currentTreeBranch: matchResult.treeBranch, location: location, state: routeInformation.state}));
    }
    restoreRouteInformation(configuration) {
      get_nav_config.GetNavConfig.as(configuration);
      return new router.RouteInformation.new({location: configuration.location, state: configuration.state});
    }
  };
  (get_information_parser.GetInformationParser.new = function(opts) {
    let t34, t33;
    let initialRoute = opts && 'initialRoute' in opts ? opts.initialRoute : "/";
    this[initialRoute$1] = initialRoute;
    get_information_parser.GetInformationParser.__proto__.new.call(this);
    t33 = get_main.Get;
    t34 = "GetInformationParser is created !";
    t33.log(t34);
  }).prototype = get_information_parser.GetInformationParser.prototype;
  dart.addTypeTests(get_information_parser.GetInformationParser);
  dart.addTypeCaches(get_information_parser.GetInformationParser);
  dart.setMethodSignature(get_information_parser.GetInformationParser, () => ({
    __proto__: dart.getMethods(get_information_parser.GetInformationParser.__proto__),
    parseRouteInformation: dart.fnType(synchronous_future.SynchronousFuture$(get_nav_config.GetNavConfig), [router.RouteInformation]),
    restoreRouteInformation: dart.fnType(router.RouteInformation, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(get_information_parser.GetInformationParser, I[28]);
  dart.setFieldSignature(get_information_parser.GetInformationParser, () => ({
    __proto__: dart.getFields(get_information_parser.GetInformationParser.__proto__),
    initialRoute: dart.finalFieldType(core.String)
  }));
  var treeBranch$ = dart.privateName(parse_route, "RouteDecoder.treeBranch");
  var parameters$0 = dart.privateName(parse_route, "RouteDecoder.parameters");
  var $arguments$0 = dart.privateName(parse_route, "RouteDecoder.arguments");
  parse_route.RouteDecoder = class RouteDecoder extends core.Object {
    get treeBranch() {
      return this[treeBranch$];
    }
    set treeBranch(value) {
      super.treeBranch = value;
    }
    get parameters() {
      return this[parameters$0];
    }
    set parameters(value) {
      super.parameters = value;
    }
    get arguments() {
      return this[$arguments$0];
    }
    set arguments(value) {
      super.arguments = value;
    }
    get route() {
      return this.treeBranch[$isEmpty] ? null : this.treeBranch[$last];
    }
    static ['_#new#tearOff'](treeBranch, parameters, $arguments) {
      return new parse_route.RouteDecoder.new(treeBranch, parameters, $arguments);
    }
    replaceArguments($arguments) {
      let _route = this.route;
      if (_route != null) {
        let index = this.treeBranch[$indexOf](_route);
        this.treeBranch[$_set](index, _route.copy({arguments: $arguments}));
      }
    }
    replaceParameters($arguments) {
      let _route = this.route;
      if (_route != null) {
        let index = this.treeBranch[$indexOf](_route);
        this.treeBranch[$_set](index, _route.copy({parameters: this.parameters}));
      }
    }
  };
  (parse_route.RouteDecoder.new = function(treeBranch, parameters, $arguments) {
    this[treeBranch$] = treeBranch;
    this[parameters$0] = parameters;
    this[$arguments$0] = $arguments;
    ;
  }).prototype = parse_route.RouteDecoder.prototype;
  dart.addTypeTests(parse_route.RouteDecoder);
  dart.addTypeCaches(parse_route.RouteDecoder);
  dart.setMethodSignature(parse_route.RouteDecoder, () => ({
    __proto__: dart.getMethods(parse_route.RouteDecoder.__proto__),
    replaceArguments: dart.fnType(dart.void, [dart.nullable(core.Object)]),
    replaceParameters: dart.fnType(dart.void, [dart.nullable(core.Object)])
  }));
  dart.setGetterSignature(parse_route.RouteDecoder, () => ({
    __proto__: dart.getGetters(parse_route.RouteDecoder.__proto__),
    route: dart.nullable(get_route.GetPage)
  }));
  dart.setLibraryUri(parse_route.RouteDecoder, I[29]);
  dart.setFieldSignature(parse_route.RouteDecoder, () => ({
    __proto__: dart.getFields(parse_route.RouteDecoder.__proto__),
    treeBranch: dart.finalFieldType(core.List$(get_route.GetPage)),
    parameters: dart.finalFieldType(core.Map$(core.String, core.String)),
    arguments: dart.finalFieldType(dart.nullable(core.Object))
  }));
  var routes$1 = dart.privateName(parse_route, "ParseRouteTree.routes");
  var _findRoute = dart.privateName(parse_route, "_findRoute");
  var _parseParams = dart.privateName(parse_route, "_parseParams");
  var _flattenPage = dart.privateName(parse_route, "_flattenPage");
  var _addChild = dart.privateName(parse_route, "_addChild");
  parse_route.ParseRouteTree = class ParseRouteTree extends core.Object {
    get routes() {
      return this[routes$1];
    }
    set routes(value) {
      super.routes = value;
    }
    static ['_#new#tearOff'](opts) {
      let routes = opts && 'routes' in opts ? opts.routes : null;
      return new parse_route.ParseRouteTree.new({routes: routes});
    }
    matchRoute(name, opts) {
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      let uri = core.Uri.parse(name);
      let split = uri.path[$split]("/")[$where](dart.fn(element => element[$isNotEmpty], T$.StringTobool()));
      let curPath = "/";
      let cumulativePaths = T$.JSArrayOfString().of(["/"]);
      for (let item of split) {
        if (curPath[$endsWith]("/")) {
          curPath = curPath + item;
        } else {
          curPath = curPath + ("/" + item);
        }
        cumulativePaths[$add](curPath);
      }
      let treeBranch = cumulativePaths[$map](T$.MapEntryOfString$GetPageN(), dart.fn(e => new (T$.MapEntryOfString$GetPageN()).__(e, this[_findRoute](e)), T$.StringToMapEntryOfString$GetPageN()))[$where](dart.fn(element => element.value != null, T$.MapEntryOfString$GetPageNTobool()))[$map](T$.MapEntryOfString$GetPage(), dart.fn(e => new (T$.MapEntryOfString$GetPage()).__(e.key, dart.nullCheck(e.value)), T$.MapEntryOfString$GetPageNToMapEntryOfString$GetPage()))[$toList]();
      let params = T$.LinkedHashMapOfString$String().from(uri.queryParameters);
      if (treeBranch[$isNotEmpty]) {
        let lastRoute = treeBranch[$last];
        let parsedParams = this[_parseParams](name, lastRoute.value.path);
        if (parsedParams[$isNotEmpty]) {
          params[$addAll](parsedParams);
        }
        let mappedTreeBranch = treeBranch[$map](get_route.GetPage, dart.fn(e => e.value.copy({parameters: (() => {
            let t33 = new (T$.IdentityMapOfString$String()).new();
            if (e.value.parameters != null) t33[$addAll](dart.nullCheck(e.value.parameters));
            t33[$addAll](params);
            return t33;
          })(), name: e.key}), T$.MapEntryOfString$GetPageToGetPage()))[$toList]();
        return new parse_route.RouteDecoder.new(mappedTreeBranch, params, $arguments);
      }
      return new parse_route.RouteDecoder.new(treeBranch[$map](get_route.GetPage, dart.fn(e => e.value, T$.MapEntryOfString$GetPageToGetPage()))[$toList](), params, $arguments);
    }
    addRoutes(getPages) {
      for (let route of getPages) {
        this.addRoute(route);
      }
    }
    addRoute(route) {
      this.routes[$add](route);
      for (let page of this[_flattenPage](route)) {
        this.addRoute(page);
      }
    }
    [_flattenPage](route) {
      let result = T$.JSArrayOfGetPage().of([]);
      if (route.children[$isEmpty]) {
        return result;
      }
      let parentPath = route.name;
      for (let page of route.children) {
        let parentMiddlewares = (() => {
          let t34 = T$.JSArrayOfGetMiddleware().of([]);
          if (page.middlewares != null) t34[$addAll](dart.nullCheck(page.middlewares));
          if (route.middlewares != null) t34[$addAll](dart.nullCheck(route.middlewares));
          return t34;
        })();
        result[$add](this[_addChild](page, parentPath, parentMiddlewares));
        let children = this[_flattenPage](page);
        for (let child of children) {
          result[$add](this[_addChild](child, parentPath, (() => {
            let t35 = T$.ListOfGetMiddleware().of(parentMiddlewares);
            if (child.middlewares != null) t35[$addAll](dart.nullCheck(child.middlewares));
            return t35;
          })()));
        }
      }
      return result;
    }
    [_addChild](origin, parentPath, middlewares) {
      return origin.copy({middlewares: middlewares, name: (parentPath + origin.name)[$replaceAll]("//", "/")});
    }
    [_findRoute](name) {
      return parse_route['FirstWhereExt|firstWhereOrNull'](get_route.GetPage, this.routes, dart.fn(route => route.path.regex.hasMatch(name), T$.GetPageTobool()));
    }
    [_parseParams](path, routePath) {
      let params = new (T$.IdentityMapOfString$String()).new();
      let idx = path[$indexOf]("?");
      if (idx > -1) {
        path = path[$substring](0, idx);
        let uri = core.Uri.tryParse(path);
        if (uri != null) {
          params[$addAll](uri.queryParameters);
        }
      }
      let paramsMatch = routePath.regex.firstMatch(path);
      for (let i = 0; i < routePath.keys[$length]; i = i + 1) {
        let param = core.Uri.decodeQueryComponent(dart.nullCheck(dart.nullCheck(paramsMatch)._get(i + 1)));
        params[$_set](dart.nullCheck(routePath.keys[$_get](i)), param);
      }
      return params;
    }
  };
  (parse_route.ParseRouteTree.new = function(opts) {
    let routes = opts && 'routes' in opts ? opts.routes : null;
    this[routes$1] = routes;
    ;
  }).prototype = parse_route.ParseRouteTree.prototype;
  dart.addTypeTests(parse_route.ParseRouteTree);
  dart.addTypeCaches(parse_route.ParseRouteTree);
  dart.setMethodSignature(parse_route.ParseRouteTree, () => ({
    __proto__: dart.getMethods(parse_route.ParseRouteTree.__proto__),
    matchRoute: dart.fnType(parse_route.RouteDecoder, [core.String], {arguments: dart.nullable(core.Object)}, {}),
    addRoutes: dart.fnType(dart.void, [core.List$(get_route.GetPage)]),
    addRoute: dart.fnType(dart.void, [get_route.GetPage]),
    [_flattenPage]: dart.fnType(core.List$(get_route.GetPage), [get_route.GetPage]),
    [_addChild]: dart.fnType(get_route.GetPage, [get_route.GetPage, core.String, core.List$(route_middleware.GetMiddleware)]),
    [_findRoute]: dart.fnType(dart.nullable(get_route.GetPage), [core.String]),
    [_parseParams]: dart.fnType(core.Map$(core.String, core.String), [core.String, get_route.PathDecoded])
  }));
  dart.setLibraryUri(parse_route.ParseRouteTree, I[29]);
  dart.setFieldSignature(parse_route.ParseRouteTree, () => ({
    __proto__: dart.getFields(parse_route.ParseRouteTree.__proto__),
    routes: dart.finalFieldType(core.List$(get_route.GetPage))
  }));
  parse_route['FirstWhereExt|firstWhereOrNull'] = function FirstWhereExt$124firstWhereOrNull(T, $this, test) {
    for (let element of $this) {
      if (test(element)) return element;
    }
    return null;
  };
  parse_route['FirstWhereExt|get#firstWhereOrNull'] = function FirstWhereExt$124get$35firstWhereOrNull(T, $this) {
    return dart.fn(test => parse_route['FirstWhereExt|firstWhereOrNull'](T, $this, test), dart.fnType(dart.nullable(T), [dart.fnType(core.bool, [T])]));
  };
  var widget = dart.privateName(dialog_route, "GetDialogRoute.widget");
  var _barrierDismissible = dart.privateName(dialog_route, "_barrierDismissible");
  var _barrierLabel = dart.privateName(dialog_route, "_barrierLabel");
  var _barrierColor = dart.privateName(dialog_route, "_barrierColor");
  var _transitionDuration = dart.privateName(dialog_route, "_transitionDuration");
  var _transitionBuilder = dart.privateName(dialog_route, "_transitionBuilder");
  const _is_GetDialogRoute_default = Symbol('_is_GetDialogRoute_default');
  dialog_route.GetDialogRoute$ = dart.generic(T => {
    class GetDialogRoute extends routes.PopupRoute$(T) {
      get widget() {
        return this[widget];
      }
      set widget(value) {
        super.widget = value;
      }
      static ['_#new#tearOff'](T, opts) {
        let pageBuilder = opts && 'pageBuilder' in opts ? opts.pageBuilder : null;
        let barrierDismissible = opts && 'barrierDismissible' in opts ? opts.barrierDismissible : true;
        let barrierLabel = opts && 'barrierLabel' in opts ? opts.barrierLabel : null;
        let barrierColor = opts && 'barrierColor' in opts ? opts.barrierColor : C[199] || CT.C199;
        let transitionDuration = opts && 'transitionDuration' in opts ? opts.transitionDuration : C[25] || CT.C25;
        let transitionBuilder = opts && 'transitionBuilder' in opts ? opts.transitionBuilder : null;
        let settings = opts && 'settings' in opts ? opts.settings : null;
        return new (dialog_route.GetDialogRoute$(T)).new({pageBuilder: pageBuilder, barrierDismissible: barrierDismissible, barrierLabel: barrierLabel, barrierColor: barrierColor, transitionDuration: transitionDuration, transitionBuilder: transitionBuilder, settings: settings});
      }
      get barrierDismissible() {
        return this[_barrierDismissible];
      }
      dispose() {
        router_report.RouterReportManager.reportRouteDispose(this);
        super.dispose();
      }
      get barrierLabel() {
        return this[_barrierLabel];
      }
      get barrierColor() {
        return this[_barrierColor];
      }
      get transitionDuration() {
        return this[_transitionDuration];
      }
      buildPage(context, animation, secondaryAnimation) {
        let t40, t39, t38;
        return new basic.Semantics.new({scopesRoute: true, explicitChildNodes: true, child: (t38 = context, t39 = animation, t40 = secondaryAnimation, this.widget(t38, t39, t40)), $creationLocationd_0dea112b090073317d4: C[200] || CT.C200});
      }
      buildTransitions(context, animation, secondaryAnimation, child) {
        if (this[_transitionBuilder] == null) {
          return new transitions.FadeTransition.new({opacity: new animations.CurvedAnimation.new({parent: animation, curve: curves.Curves.linear}), child: child, $creationLocationd_0dea112b090073317d4: C[201] || CT.C201});
        }
        return dart.nullCheck(this[_transitionBuilder])(context, animation, secondaryAnimation, child);
      }
    }
    (GetDialogRoute.new = function(opts) {
      let pageBuilder = opts && 'pageBuilder' in opts ? opts.pageBuilder : null;
      let barrierDismissible = opts && 'barrierDismissible' in opts ? opts.barrierDismissible : true;
      let barrierLabel = opts && 'barrierLabel' in opts ? opts.barrierLabel : null;
      let barrierColor = opts && 'barrierColor' in opts ? opts.barrierColor : C[199] || CT.C199;
      let transitionDuration = opts && 'transitionDuration' in opts ? opts.transitionDuration : C[25] || CT.C25;
      let transitionBuilder = opts && 'transitionBuilder' in opts ? opts.transitionBuilder : null;
      let settings = opts && 'settings' in opts ? opts.settings : null;
      this[widget] = pageBuilder;
      this[_barrierDismissible] = barrierDismissible;
      this[_barrierLabel] = barrierLabel;
      this[_barrierColor] = barrierColor;
      this[_transitionDuration] = transitionDuration;
      this[_transitionBuilder] = transitionBuilder;
      GetDialogRoute.__proto__.new.call(this, {settings: settings});
      router_report.RouterReportManager.reportCurrentRoute(this);
    }).prototype = GetDialogRoute.prototype;
    dart.addTypeTests(GetDialogRoute);
    GetDialogRoute.prototype[_is_GetDialogRoute_default] = true;
    dart.addTypeCaches(GetDialogRoute);
    dart.setMethodSignature(GetDialogRoute, () => ({
      __proto__: dart.getMethods(GetDialogRoute.__proto__),
      buildPage: dart.fnType(framework.Widget, [framework.BuildContext, animation.Animation$(core.double), animation.Animation$(core.double)])
    }));
    dart.setGetterSignature(GetDialogRoute, () => ({
      __proto__: dart.getGetters(GetDialogRoute.__proto__),
      barrierDismissible: core.bool,
      barrierLabel: dart.nullable(core.String),
      barrierColor: ui.Color,
      transitionDuration: core.Duration
    }));
    dart.setLibraryUri(GetDialogRoute, I[30]);
    dart.setFieldSignature(GetDialogRoute, () => ({
      __proto__: dart.getFields(GetDialogRoute.__proto__),
      widget: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, animation.Animation$(core.double), animation.Animation$(core.double)])),
      [_barrierDismissible]: dart.finalFieldType(core.bool),
      [_barrierLabel]: dart.finalFieldType(dart.nullable(core.String)),
      [_barrierColor]: dart.finalFieldType(ui.Color),
      [_transitionDuration]: dart.finalFieldType(core.Duration),
      [_transitionBuilder]: dart.finalFieldType(dart.nullable(dart.fnType(framework.Widget, [framework.BuildContext, animation.Animation$(core.double), animation.Animation$(core.double), framework.Widget])))
    }));
    return GetDialogRoute;
  });
  dialog_route.GetDialogRoute = dialog_route.GetDialogRoute$();
  dart.addTypeTests(dialog_route.GetDialogRoute, _is_GetDialogRoute_default);
  extension_navigation['ExtensionBottomSheet|bottomSheet'] = function ExtensionBottomSheet$124bottomSheet(T, $this, bottomsheet, opts) {
    let t39, t39$, t39$0, t39$1;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let persistent = opts && 'persistent' in opts ? opts.persistent : true;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
    let barrierColor = opts && 'barrierColor' in opts ? opts.barrierColor : null;
    let ignoreSafeArea = opts && 'ignoreSafeArea' in opts ? opts.ignoreSafeArea : null;
    let isScrollControlled = opts && 'isScrollControlled' in opts ? opts.isScrollControlled : false;
    let useRootNavigator = opts && 'useRootNavigator' in opts ? opts.useRootNavigator : false;
    let isDismissible = opts && 'isDismissible' in opts ? opts.isDismissible : true;
    let enableDrag = opts && 'enableDrag' in opts ? opts.enableDrag : true;
    let settings = opts && 'settings' in opts ? opts.settings : null;
    let enterBottomSheetDuration = opts && 'enterBottomSheetDuration' in opts ? opts.enterBottomSheetDuration : null;
    let exitBottomSheetDuration = opts && 'exitBottomSheetDuration' in opts ? opts.exitBottomSheetDuration : null;
    return navigator.Navigator.of(dart.nullCheck(extension_navigation['GetNavigation|get#overlayContext']($this)), {rootNavigator: useRootNavigator}).push(T, new (bottomsheet$.GetModalBottomSheetRoute$(T)).new({builder: dart.fn(_ => bottomsheet, T$.BuildContextToWidget()), isPersistent: persistent, theme: theme$.Theme.of(dart.nullCheck(extension_navigation['GetNavigation|get#key']($this).currentContext)), isScrollControlled: isScrollControlled, barrierLabel: material_localizations.MaterialLocalizations.of(dart.nullCheck(extension_navigation['GetNavigation|get#key']($this).currentContext)).modalBarrierDismissLabel, backgroundColor: (t39 = backgroundColor, t39 == null ? colors.Colors.transparent : t39), elevation: elevation, shape: shape, removeTop: (t39$ = ignoreSafeArea, t39$ == null ? true : t39$), clipBehavior: clipBehavior, isDismissible: isDismissible, modalBarrierColor: barrierColor, settings: settings, enableDrag: enableDrag, enterBottomSheetDuration: (t39$0 = enterBottomSheetDuration, t39$0 == null ? C[202] || CT.C202 : t39$0), exitBottomSheetDuration: (t39$1 = exitBottomSheetDuration, t39$1 == null ? C[25] || CT.C25 : t39$1)}));
  };
  extension_navigation['ExtensionBottomSheet|get#bottomSheet'] = function ExtensionBottomSheet$124get$35bottomSheet($this) {
    return dart.fn((T, bottomsheet, opts) => {
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let persistent = opts && 'persistent' in opts ? opts.persistent : true;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
      let barrierColor = opts && 'barrierColor' in opts ? opts.barrierColor : null;
      let ignoreSafeArea = opts && 'ignoreSafeArea' in opts ? opts.ignoreSafeArea : null;
      let isScrollControlled = opts && 'isScrollControlled' in opts ? opts.isScrollControlled : false;
      let useRootNavigator = opts && 'useRootNavigator' in opts ? opts.useRootNavigator : false;
      let isDismissible = opts && 'isDismissible' in opts ? opts.isDismissible : true;
      let enableDrag = opts && 'enableDrag' in opts ? opts.enableDrag : true;
      let settings = opts && 'settings' in opts ? opts.settings : null;
      let enterBottomSheetDuration = opts && 'enterBottomSheetDuration' in opts ? opts.enterBottomSheetDuration : null;
      let exitBottomSheetDuration = opts && 'exitBottomSheetDuration' in opts ? opts.exitBottomSheetDuration : null;
      return extension_navigation['ExtensionBottomSheet|bottomSheet'](T, $this, bottomsheet, {backgroundColor: backgroundColor, elevation: elevation, persistent: persistent, shape: shape, clipBehavior: clipBehavior, barrierColor: barrierColor, ignoreSafeArea: ignoreSafeArea, isScrollControlled: isScrollControlled, useRootNavigator: useRootNavigator, isDismissible: isDismissible, enableDrag: enableDrag, settings: settings, enterBottomSheetDuration: enterBottomSheetDuration, exitBottomSheetDuration: exitBottomSheetDuration});
    }, T$.Widget__ToFutureOfTN());
  };
  extension_navigation['ExtensionDialog|dialog'] = function ExtensionDialog$124dialog(T, $this, widget, opts) {
    let t41, t41$, t41$0;
    let barrierDismissible = opts && 'barrierDismissible' in opts ? opts.barrierDismissible : true;
    let barrierColor = opts && 'barrierColor' in opts ? opts.barrierColor : null;
    let useSafeArea = opts && 'useSafeArea' in opts ? opts.useSafeArea : true;
    let navigatorKey = opts && 'navigatorKey' in opts ? opts.navigatorKey : null;
    let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
    let transitionDuration = opts && 'transitionDuration' in opts ? opts.transitionDuration : null;
    let transitionCurve = opts && 'transitionCurve' in opts ? opts.transitionCurve : null;
    let name = opts && 'name' in opts ? opts.name : null;
    let routeSettings = opts && 'routeSettings' in opts ? opts.routeSettings : null;
    if (!debug$.debugCheckHasMaterialLocalizations(dart.nullCheck(extension_navigation['GetNavigation|get#context']($this)))) dart.assertFailed(null, I[31], 81, 12, "debugCheckHasMaterialLocalizations(context!)");
    let theme = theme$.Theme.of(dart.nullCheck(extension_navigation['GetNavigation|get#context']($this)));
    return extension_navigation['ExtensionDialog|generalDialog'](T, $this, {pageBuilder: dart.fn((buildContext, animation, secondaryAnimation) => {
        let pageChild = widget;
        let dialog = new basic.Builder.new({builder: dart.fn(context => new theme$.Theme.new({data: theme, child: pageChild, $creationLocationd_0dea112b090073317d4: C[203] || CT.C203}), T$.BuildContextToTheme()), $creationLocationd_0dea112b090073317d4: C[204] || CT.C204});
        if (useSafeArea) {
          dialog = new safe_area.SafeArea.new({child: dialog, $creationLocationd_0dea112b090073317d4: C[205] || CT.C205});
        }
        return dialog;
      }, T$.BuildContextAndAnimationOfdoubleAndAnimationOfdoubleToWidget()), barrierDismissible: barrierDismissible, barrierLabel: material_localizations.MaterialLocalizations.of(dart.nullCheck(extension_navigation['GetNavigation|get#context']($this))).modalBarrierDismissLabel, barrierColor: (t41 = barrierColor, t41 == null ? colors.Colors.black54 : t41), transitionDuration: (t41$ = transitionDuration, t41$ == null ? extension_navigation['GetNavigation|get#defaultDialogTransitionDuration']($this) : t41$), transitionBuilder: dart.fn((context, animation, secondaryAnimation, child) => {
        let t41;
        return new transitions.FadeTransition.new({opacity: new animations.CurvedAnimation.new({parent: animation, curve: (t41 = transitionCurve, t41 == null ? extension_navigation['GetNavigation|get#defaultDialogTransitionCurve']($this) : t41)}), child: child, $creationLocationd_0dea112b090073317d4: C[206] || CT.C206});
      }, T$.BuildContextAndAnimationOfdoubleAndAnimationOfdouble__ToFadeTransition()), navigatorKey: navigatorKey, routeSettings: (t41$0 = routeSettings, t41$0 == null ? new navigator.RouteSettings.new({arguments: $arguments, name: name}) : t41$0)});
  };
  extension_navigation['ExtensionDialog|get#dialog'] = function ExtensionDialog$124get$35dialog($this) {
    return dart.fn((T, widget, opts) => {
      let barrierDismissible = opts && 'barrierDismissible' in opts ? opts.barrierDismissible : true;
      let barrierColor = opts && 'barrierColor' in opts ? opts.barrierColor : null;
      let useSafeArea = opts && 'useSafeArea' in opts ? opts.useSafeArea : true;
      let navigatorKey = opts && 'navigatorKey' in opts ? opts.navigatorKey : null;
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      let transitionDuration = opts && 'transitionDuration' in opts ? opts.transitionDuration : null;
      let transitionCurve = opts && 'transitionCurve' in opts ? opts.transitionCurve : null;
      let name = opts && 'name' in opts ? opts.name : null;
      let routeSettings = opts && 'routeSettings' in opts ? opts.routeSettings : null;
      return extension_navigation['ExtensionDialog|dialog'](T, $this, widget, {barrierDismissible: barrierDismissible, barrierColor: barrierColor, useSafeArea: useSafeArea, navigatorKey: navigatorKey, arguments: $arguments, transitionDuration: transitionDuration, transitionCurve: transitionCurve, name: name, routeSettings: routeSettings});
    }, T$.Widget__ToFutureOfTN$1());
  };
  extension_navigation['ExtensionDialog|generalDialog'] = function ExtensionDialog$124generalDialog(T, $this, opts) {
    let t43, t43$;
    let pageBuilder = opts && 'pageBuilder' in opts ? opts.pageBuilder : null;
    let barrierDismissible = opts && 'barrierDismissible' in opts ? opts.barrierDismissible : false;
    let barrierLabel = opts && 'barrierLabel' in opts ? opts.barrierLabel : null;
    let barrierColor = opts && 'barrierColor' in opts ? opts.barrierColor : C[199] || CT.C199;
    let transitionDuration = opts && 'transitionDuration' in opts ? opts.transitionDuration : C[25] || CT.C25;
    let transitionBuilder = opts && 'transitionBuilder' in opts ? opts.transitionBuilder : null;
    let navigatorKey = opts && 'navigatorKey' in opts ? opts.navigatorKey : null;
    let routeSettings = opts && 'routeSettings' in opts ? opts.routeSettings : null;
    if (!(!barrierDismissible || barrierLabel != null)) dart.assertFailed(null, I[31], 126, 12, "!barrierDismissible || barrierLabel != null");
    let nav = (t43$ = (t43 = navigatorKey, t43 == null ? null : t43.currentState), t43$ == null ? navigator.Navigator.of(dart.nullCheck(extension_navigation['GetNavigation|get#overlayContext']($this)), {rootNavigator: true}) : t43$);
    return nav.push(T, new (dialog_route.GetDialogRoute$(T)).new({pageBuilder: pageBuilder, barrierDismissible: barrierDismissible, barrierLabel: barrierLabel, barrierColor: barrierColor, transitionDuration: transitionDuration, transitionBuilder: transitionBuilder, settings: routeSettings}));
  };
  extension_navigation['ExtensionDialog|get#generalDialog'] = function ExtensionDialog$124get$35generalDialog($this) {
    return dart.fn((T, opts) => {
      let pageBuilder = opts && 'pageBuilder' in opts ? opts.pageBuilder : null;
      let barrierDismissible = opts && 'barrierDismissible' in opts ? opts.barrierDismissible : false;
      let barrierLabel = opts && 'barrierLabel' in opts ? opts.barrierLabel : null;
      let barrierColor = opts && 'barrierColor' in opts ? opts.barrierColor : C[199] || CT.C199;
      let transitionDuration = opts && 'transitionDuration' in opts ? opts.transitionDuration : C[25] || CT.C25;
      let transitionBuilder = opts && 'transitionBuilder' in opts ? opts.transitionBuilder : null;
      let navigatorKey = opts && 'navigatorKey' in opts ? opts.navigatorKey : null;
      let routeSettings = opts && 'routeSettings' in opts ? opts.routeSettings : null;
      return extension_navigation['ExtensionDialog|generalDialog'](T, $this, {pageBuilder: pageBuilder, barrierDismissible: barrierDismissible, barrierLabel: barrierLabel, barrierColor: barrierColor, transitionDuration: transitionDuration, transitionBuilder: transitionBuilder, navigatorKey: navigatorKey, routeSettings: routeSettings});
    }, T$.__ToFutureOfTN());
  };
  extension_navigation['ExtensionDialog|defaultDialog'] = function ExtensionDialog$124defaultDialog(T, $this, opts) {
    let t45, t45$, t45$0, t45$1, t45$2, t45$3, t45$4, t45$5, t45$6, t45$7;
    let title = opts && 'title' in opts ? opts.title : "Alert";
    let titlePadding = opts && 'titlePadding' in opts ? opts.titlePadding : null;
    let titleStyle = opts && 'titleStyle' in opts ? opts.titleStyle : null;
    let content = opts && 'content' in opts ? opts.content : null;
    let contentPadding = opts && 'contentPadding' in opts ? opts.contentPadding : null;
    let onConfirm = opts && 'onConfirm' in opts ? opts.onConfirm : null;
    let onCancel = opts && 'onCancel' in opts ? opts.onCancel : null;
    let onCustom = opts && 'onCustom' in opts ? opts.onCustom : null;
    let cancelTextColor = opts && 'cancelTextColor' in opts ? opts.cancelTextColor : null;
    let confirmTextColor = opts && 'confirmTextColor' in opts ? opts.confirmTextColor : null;
    let textConfirm = opts && 'textConfirm' in opts ? opts.textConfirm : null;
    let textCancel = opts && 'textCancel' in opts ? opts.textCancel : null;
    let textCustom = opts && 'textCustom' in opts ? opts.textCustom : null;
    let confirm = opts && 'confirm' in opts ? opts.confirm : null;
    let cancel = opts && 'cancel' in opts ? opts.cancel : null;
    let custom = opts && 'custom' in opts ? opts.custom : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let barrierDismissible = opts && 'barrierDismissible' in opts ? opts.barrierDismissible : true;
    let buttonColor = opts && 'buttonColor' in opts ? opts.buttonColor : null;
    let middleText = opts && 'middleText' in opts ? opts.middleText : "Dialog made in 3 lines of code";
    let middleTextStyle = opts && 'middleTextStyle' in opts ? opts.middleTextStyle : null;
    let radius = opts && 'radius' in opts ? opts.radius : 20;
    let actions = opts && 'actions' in opts ? opts.actions : null;
    let onWillPop = opts && 'onWillPop' in opts ? opts.onWillPop : null;
    let navigatorKey = opts && 'navigatorKey' in opts ? opts.navigatorKey : null;
    let leanCancel = onCancel != null || textCancel != null;
    let leanConfirm = onConfirm != null || textConfirm != null;
    actions == null ? actions = T$.JSArrayOfWidget().of([]) : null;
    if (cancel != null) {
      actions[$add](cancel);
    } else {
      if (leanCancel) {
        actions[$add](new text_button.TextButton.new({style: text_button.TextButton.styleFrom({tapTargetSize: theme_data.MaterialTapTargetSize.shrinkWrap, padding: C[207] || CT.C207, shape: new rounded_rectangle_border.RoundedRectangleBorder.new({side: new borders.BorderSide.new({color: (t45 = buttonColor, t45 == null ? extension_navigation['GetNavigation|get#theme']($this).colorScheme.secondary : t45), width: 2.0, style: borders.BorderStyle.solid}), borderRadius: new border_radius.BorderRadius.circular(100.0)})}), onPressed: dart.fn(() => {
            let t45;
            t45 = onCancel;
            t45 == null ? null : t45();
            extension_navigation['GetNavigation|back'](dart.dynamic, $this);
          }, T$.VoidTovoid()), child: new text.Text.new((t45$ = textCancel, t45$ == null ? "Cancel" : t45$), {style: new text_style.TextStyle.new({color: (t45$0 = cancelTextColor, t45$0 == null ? extension_navigation['GetNavigation|get#theme']($this).colorScheme.secondary : t45$0)}), $creationLocationd_0dea112b090073317d4: C[208] || CT.C208}), $creationLocationd_0dea112b090073317d4: C[209] || CT.C209}));
      }
    }
    if (confirm != null) {
      actions[$add](confirm);
    } else {
      if (leanConfirm) {
        actions[$add](new text_button.TextButton.new({style: text_button.TextButton.styleFrom({tapTargetSize: theme_data.MaterialTapTargetSize.shrinkWrap, backgroundColor: (t45$1 = buttonColor, t45$1 == null ? extension_navigation['GetNavigation|get#theme']($this).colorScheme.secondary : t45$1), shape: new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: new border_radius.BorderRadius.circular(100.0)})}), child: new text.Text.new((t45$2 = textConfirm, t45$2 == null ? "Ok" : t45$2), {style: new text_style.TextStyle.new({color: (t45$3 = confirmTextColor, t45$3 == null ? extension_navigation['GetNavigation|get#theme']($this).backgroundColor : t45$3)}), $creationLocationd_0dea112b090073317d4: C[210] || CT.C210}), onPressed: dart.fn(() => {
            let t45;
            t45 = onConfirm;
            t45 == null ? null : t45();
          }, T$.VoidTovoid()), $creationLocationd_0dea112b090073317d4: C[211] || CT.C211}));
      }
    }
    let baseAlertDialog = new dialog.AlertDialog.new({titlePadding: (t45$4 = titlePadding, t45$4 == null ? C[212] || CT.C212 : t45$4), contentPadding: (t45$5 = contentPadding, t45$5 == null ? C[212] || CT.C212 : t45$5), backgroundColor: (t45$6 = backgroundColor, t45$6 == null ? extension_navigation['GetNavigation|get#theme']($this).dialogBackgroundColor : t45$6), shape: new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: new border_radius.BorderRadius.all(new ui.Radius.circular(radius))}), title: new text.Text.new(title, {textAlign: ui.TextAlign.center, style: titleStyle, $creationLocationd_0dea112b090073317d4: C[213] || CT.C213}), content: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.center, mainAxisSize: flex.MainAxisSize.min, children: T$.JSArrayOfWidget().of([(t45$7 = content, t45$7 == null ? new text.Text.new(middleText, {textAlign: ui.TextAlign.center, style: middleTextStyle, $creationLocationd_0dea112b090073317d4: C[214] || CT.C214}) : t45$7), C[215] || CT.C215, new button_theme.ButtonTheme.new({minWidth: 78.0, height: 34.0, child: new basic.Wrap.new({alignment: wrap.WrapAlignment.center, spacing: 8.0, runSpacing: 8.0, children: actions, $creationLocationd_0dea112b090073317d4: C[217] || CT.C217}), $creationLocationd_0dea112b090073317d4: C[218] || CT.C218})]), $creationLocationd_0dea112b090073317d4: C[219] || CT.C219}), buttonPadding: edge_insets.EdgeInsets.zero, $creationLocationd_0dea112b090073317d4: C[220] || CT.C220});
    return extension_navigation['ExtensionDialog|dialog'](T, $this, onWillPop != null ? new will_pop_scope.WillPopScope.new({onWillPop: onWillPop, child: baseAlertDialog, $creationLocationd_0dea112b090073317d4: C[221] || CT.C221}) : baseAlertDialog, {barrierDismissible: barrierDismissible, navigatorKey: navigatorKey});
  };
  extension_navigation['ExtensionDialog|get#defaultDialog'] = function ExtensionDialog$124get$35defaultDialog($this) {
    return dart.fn((T, opts) => {
      let title = opts && 'title' in opts ? opts.title : "Alert";
      let titlePadding = opts && 'titlePadding' in opts ? opts.titlePadding : null;
      let titleStyle = opts && 'titleStyle' in opts ? opts.titleStyle : null;
      let content = opts && 'content' in opts ? opts.content : null;
      let contentPadding = opts && 'contentPadding' in opts ? opts.contentPadding : null;
      let onConfirm = opts && 'onConfirm' in opts ? opts.onConfirm : null;
      let onCancel = opts && 'onCancel' in opts ? opts.onCancel : null;
      let onCustom = opts && 'onCustom' in opts ? opts.onCustom : null;
      let cancelTextColor = opts && 'cancelTextColor' in opts ? opts.cancelTextColor : null;
      let confirmTextColor = opts && 'confirmTextColor' in opts ? opts.confirmTextColor : null;
      let textConfirm = opts && 'textConfirm' in opts ? opts.textConfirm : null;
      let textCancel = opts && 'textCancel' in opts ? opts.textCancel : null;
      let textCustom = opts && 'textCustom' in opts ? opts.textCustom : null;
      let confirm = opts && 'confirm' in opts ? opts.confirm : null;
      let cancel = opts && 'cancel' in opts ? opts.cancel : null;
      let custom = opts && 'custom' in opts ? opts.custom : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let barrierDismissible = opts && 'barrierDismissible' in opts ? opts.barrierDismissible : true;
      let buttonColor = opts && 'buttonColor' in opts ? opts.buttonColor : null;
      let middleText = opts && 'middleText' in opts ? opts.middleText : "Dialog made in 3 lines of code";
      let middleTextStyle = opts && 'middleTextStyle' in opts ? opts.middleTextStyle : null;
      let radius = opts && 'radius' in opts ? opts.radius : 20;
      let actions = opts && 'actions' in opts ? opts.actions : null;
      let onWillPop = opts && 'onWillPop' in opts ? opts.onWillPop : null;
      let navigatorKey = opts && 'navigatorKey' in opts ? opts.navigatorKey : null;
      return extension_navigation['ExtensionDialog|defaultDialog'](T, $this, {title: title, titlePadding: titlePadding, titleStyle: titleStyle, content: content, contentPadding: contentPadding, onConfirm: onConfirm, onCancel: onCancel, onCustom: onCustom, cancelTextColor: cancelTextColor, confirmTextColor: confirmTextColor, textConfirm: textConfirm, textCancel: textCancel, textCustom: textCustom, confirm: confirm, cancel: cancel, custom: custom, backgroundColor: backgroundColor, barrierDismissible: barrierDismissible, buttonColor: buttonColor, middleText: middleText, middleTextStyle: middleTextStyle, radius: radius, actions: actions, onWillPop: onWillPop, navigatorKey: navigatorKey});
    }, T$.__ToFutureOfTN$1());
  };
  extension_navigation['ExtensionSnackbar|rawSnackbar'] = function ExtensionSnackbar$124rawSnackbar($this, opts) {
    let t47;
    let title = opts && 'title' in opts ? opts.title : null;
    let message = opts && 'message' in opts ? opts.message : null;
    let titleText = opts && 'titleText' in opts ? opts.titleText : null;
    let messageText = opts && 'messageText' in opts ? opts.messageText : null;
    let icon = opts && 'icon' in opts ? opts.icon : null;
    let instantInit = opts && 'instantInit' in opts ? opts.instantInit : true;
    let shouldIconPulse = opts && 'shouldIconPulse' in opts ? opts.shouldIconPulse : true;
    let maxWidth = opts && 'maxWidth' in opts ? opts.maxWidth : null;
    let margin = opts && 'margin' in opts ? opts.margin : C[26] || CT.C26;
    let padding = opts && 'padding' in opts ? opts.padding : C[27] || CT.C27;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : 0;
    let borderColor = opts && 'borderColor' in opts ? opts.borderColor : null;
    let borderWidth = opts && 'borderWidth' in opts ? opts.borderWidth : 1;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : C[28] || CT.C28;
    let leftBarIndicatorColor = opts && 'leftBarIndicatorColor' in opts ? opts.leftBarIndicatorColor : null;
    let boxShadows = opts && 'boxShadows' in opts ? opts.boxShadows : null;
    let backgroundGradient = opts && 'backgroundGradient' in opts ? opts.backgroundGradient : null;
    let mainButton = opts && 'mainButton' in opts ? opts.mainButton : null;
    let onTap = opts && 'onTap' in opts ? opts.onTap : null;
    let duration = opts && 'duration' in opts ? opts.duration : C[222] || CT.C222;
    let isDismissible = opts && 'isDismissible' in opts ? opts.isDismissible : true;
    let dismissDirection = opts && 'dismissDirection' in opts ? opts.dismissDirection : null;
    let showProgressIndicator = opts && 'showProgressIndicator' in opts ? opts.showProgressIndicator : false;
    let progressIndicatorController = opts && 'progressIndicatorController' in opts ? opts.progressIndicatorController : null;
    let progressIndicatorBackgroundColor = opts && 'progressIndicatorBackgroundColor' in opts ? opts.progressIndicatorBackgroundColor : null;
    let progressIndicatorValueColor = opts && 'progressIndicatorValueColor' in opts ? opts.progressIndicatorValueColor : null;
    let snackPosition = opts && 'snackPosition' in opts ? opts.snackPosition : C[5] || CT.C5;
    let snackStyle = opts && 'snackStyle' in opts ? opts.snackStyle : C[29] || CT.C29;
    let forwardAnimationCurve = opts && 'forwardAnimationCurve' in opts ? opts.forwardAnimationCurve : C[30] || CT.C30;
    let reverseAnimationCurve = opts && 'reverseAnimationCurve' in opts ? opts.reverseAnimationCurve : C[30] || CT.C30;
    let animationDuration = opts && 'animationDuration' in opts ? opts.animationDuration : C[31] || CT.C31;
    let snackbarStatus = opts && 'snackbarStatus' in opts ? opts.snackbarStatus : null;
    let barBlur = opts && 'barBlur' in opts ? opts.barBlur : 0;
    let overlayBlur = opts && 'overlayBlur' in opts ? opts.overlayBlur : 0;
    let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
    let userInputForm = opts && 'userInputForm' in opts ? opts.userInputForm : null;
    let getSnackBar = new snackbar.GetSnackBar.new({snackbarStatus: snackbarStatus, title: title, message: message, titleText: titleText, messageText: messageText, snackPosition: snackPosition, borderRadius: borderRadius, margin: margin, duration: duration, barBlur: barBlur, backgroundColor: backgroundColor, icon: icon, shouldIconPulse: shouldIconPulse, maxWidth: maxWidth, padding: padding, borderColor: borderColor, borderWidth: borderWidth, leftBarIndicatorColor: leftBarIndicatorColor, boxShadows: boxShadows, backgroundGradient: backgroundGradient, mainButton: mainButton, onTap: onTap, isDismissible: isDismissible, dismissDirection: dismissDirection, showProgressIndicator: showProgressIndicator, progressIndicatorController: progressIndicatorController, progressIndicatorBackgroundColor: progressIndicatorBackgroundColor, progressIndicatorValueColor: progressIndicatorValueColor, snackStyle: snackStyle, forwardAnimationCurve: forwardAnimationCurve, reverseAnimationCurve: reverseAnimationCurve, animationDuration: animationDuration, overlayBlur: overlayBlur, overlayColor: overlayColor, userInputForm: userInputForm, $creationLocationd_0dea112b090073317d4: C[223] || CT.C223});
    let controller = new snackbar_controller.SnackbarController.new(getSnackBar);
    if (instantInit) {
      controller.show();
    } else {
      t47 = get_core.ambiguate(binding$.SchedulerBinding, binding$.SchedulerBinding.instance);
      t47 == null ? null : t47.addPostFrameCallback(dart.fn(_ => {
        controller.show();
      }, T$.DurationTovoid()));
    }
    return controller;
  };
  extension_navigation['ExtensionSnackbar|get#rawSnackbar'] = function ExtensionSnackbar$124get$35rawSnackbar($this) {
    return dart.fn(opts => {
      let title = opts && 'title' in opts ? opts.title : null;
      let message = opts && 'message' in opts ? opts.message : null;
      let titleText = opts && 'titleText' in opts ? opts.titleText : null;
      let messageText = opts && 'messageText' in opts ? opts.messageText : null;
      let icon = opts && 'icon' in opts ? opts.icon : null;
      let instantInit = opts && 'instantInit' in opts ? opts.instantInit : true;
      let shouldIconPulse = opts && 'shouldIconPulse' in opts ? opts.shouldIconPulse : true;
      let maxWidth = opts && 'maxWidth' in opts ? opts.maxWidth : null;
      let margin = opts && 'margin' in opts ? opts.margin : C[26] || CT.C26;
      let padding = opts && 'padding' in opts ? opts.padding : C[27] || CT.C27;
      let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : 0;
      let borderColor = opts && 'borderColor' in opts ? opts.borderColor : null;
      let borderWidth = opts && 'borderWidth' in opts ? opts.borderWidth : 1;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : C[28] || CT.C28;
      let leftBarIndicatorColor = opts && 'leftBarIndicatorColor' in opts ? opts.leftBarIndicatorColor : null;
      let boxShadows = opts && 'boxShadows' in opts ? opts.boxShadows : null;
      let backgroundGradient = opts && 'backgroundGradient' in opts ? opts.backgroundGradient : null;
      let mainButton = opts && 'mainButton' in opts ? opts.mainButton : null;
      let onTap = opts && 'onTap' in opts ? opts.onTap : null;
      let duration = opts && 'duration' in opts ? opts.duration : C[222] || CT.C222;
      let isDismissible = opts && 'isDismissible' in opts ? opts.isDismissible : true;
      let dismissDirection = opts && 'dismissDirection' in opts ? opts.dismissDirection : null;
      let showProgressIndicator = opts && 'showProgressIndicator' in opts ? opts.showProgressIndicator : false;
      let progressIndicatorController = opts && 'progressIndicatorController' in opts ? opts.progressIndicatorController : null;
      let progressIndicatorBackgroundColor = opts && 'progressIndicatorBackgroundColor' in opts ? opts.progressIndicatorBackgroundColor : null;
      let progressIndicatorValueColor = opts && 'progressIndicatorValueColor' in opts ? opts.progressIndicatorValueColor : null;
      let snackPosition = opts && 'snackPosition' in opts ? opts.snackPosition : C[5] || CT.C5;
      let snackStyle = opts && 'snackStyle' in opts ? opts.snackStyle : C[29] || CT.C29;
      let forwardAnimationCurve = opts && 'forwardAnimationCurve' in opts ? opts.forwardAnimationCurve : C[30] || CT.C30;
      let reverseAnimationCurve = opts && 'reverseAnimationCurve' in opts ? opts.reverseAnimationCurve : C[30] || CT.C30;
      let animationDuration = opts && 'animationDuration' in opts ? opts.animationDuration : C[31] || CT.C31;
      let snackbarStatus = opts && 'snackbarStatus' in opts ? opts.snackbarStatus : null;
      let barBlur = opts && 'barBlur' in opts ? opts.barBlur : 0;
      let overlayBlur = opts && 'overlayBlur' in opts ? opts.overlayBlur : 0;
      let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
      let userInputForm = opts && 'userInputForm' in opts ? opts.userInputForm : null;
      return extension_navigation['ExtensionSnackbar|rawSnackbar']($this, {title: title, message: message, titleText: titleText, messageText: messageText, icon: icon, instantInit: instantInit, shouldIconPulse: shouldIconPulse, maxWidth: maxWidth, margin: margin, padding: padding, borderRadius: borderRadius, borderColor: borderColor, borderWidth: borderWidth, backgroundColor: backgroundColor, leftBarIndicatorColor: leftBarIndicatorColor, boxShadows: boxShadows, backgroundGradient: backgroundGradient, mainButton: mainButton, onTap: onTap, duration: duration, isDismissible: isDismissible, dismissDirection: dismissDirection, showProgressIndicator: showProgressIndicator, progressIndicatorController: progressIndicatorController, progressIndicatorBackgroundColor: progressIndicatorBackgroundColor, progressIndicatorValueColor: progressIndicatorValueColor, snackPosition: snackPosition, snackStyle: snackStyle, forwardAnimationCurve: forwardAnimationCurve, reverseAnimationCurve: reverseAnimationCurve, animationDuration: animationDuration, snackbarStatus: snackbarStatus, barBlur: barBlur, overlayBlur: overlayBlur, overlayColor: overlayColor, userInputForm: userInputForm});
    }, T$.__ToSnackbarController());
  };
  extension_navigation['ExtensionSnackbar|showSnackbar'] = function ExtensionSnackbar$124showSnackbar($this, snackbar) {
    let controller = new snackbar_controller.SnackbarController.new(snackbar);
    controller.show();
    return controller;
  };
  extension_navigation['ExtensionSnackbar|get#showSnackbar'] = function ExtensionSnackbar$124get$35showSnackbar($this) {
    return dart.fn(snackbar => extension_navigation['ExtensionSnackbar|showSnackbar']($this, snackbar), T$.GetSnackBarToSnackbarController());
  };
  extension_navigation['ExtensionSnackbar|get#snackbar'] = function ExtensionSnackbar$124get$35snackbar($this) {
    return dart.fn((title, message, opts) => {
      let colorText = opts && 'colorText' in opts ? opts.colorText : null;
      let duration = opts && 'duration' in opts ? opts.duration : C[222] || CT.C222;
      let instantInit = opts && 'instantInit' in opts ? opts.instantInit : true;
      let snackPosition = opts && 'snackPosition' in opts ? opts.snackPosition : null;
      let titleText = opts && 'titleText' in opts ? opts.titleText : null;
      let messageText = opts && 'messageText' in opts ? opts.messageText : null;
      let icon = opts && 'icon' in opts ? opts.icon : null;
      let shouldIconPulse = opts && 'shouldIconPulse' in opts ? opts.shouldIconPulse : null;
      let maxWidth = opts && 'maxWidth' in opts ? opts.maxWidth : null;
      let margin = opts && 'margin' in opts ? opts.margin : null;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
      let borderColor = opts && 'borderColor' in opts ? opts.borderColor : null;
      let borderWidth = opts && 'borderWidth' in opts ? opts.borderWidth : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let leftBarIndicatorColor = opts && 'leftBarIndicatorColor' in opts ? opts.leftBarIndicatorColor : null;
      let boxShadows = opts && 'boxShadows' in opts ? opts.boxShadows : null;
      let backgroundGradient = opts && 'backgroundGradient' in opts ? opts.backgroundGradient : null;
      let mainButton = opts && 'mainButton' in opts ? opts.mainButton : null;
      let onTap = opts && 'onTap' in opts ? opts.onTap : null;
      let isDismissible = opts && 'isDismissible' in opts ? opts.isDismissible : null;
      let showProgressIndicator = opts && 'showProgressIndicator' in opts ? opts.showProgressIndicator : null;
      let dismissDirection = opts && 'dismissDirection' in opts ? opts.dismissDirection : null;
      let progressIndicatorController = opts && 'progressIndicatorController' in opts ? opts.progressIndicatorController : null;
      let progressIndicatorBackgroundColor = opts && 'progressIndicatorBackgroundColor' in opts ? opts.progressIndicatorBackgroundColor : null;
      let progressIndicatorValueColor = opts && 'progressIndicatorValueColor' in opts ? opts.progressIndicatorValueColor : null;
      let snackStyle = opts && 'snackStyle' in opts ? opts.snackStyle : null;
      let forwardAnimationCurve = opts && 'forwardAnimationCurve' in opts ? opts.forwardAnimationCurve : null;
      let reverseAnimationCurve = opts && 'reverseAnimationCurve' in opts ? opts.reverseAnimationCurve : null;
      let animationDuration = opts && 'animationDuration' in opts ? opts.animationDuration : null;
      let barBlur = opts && 'barBlur' in opts ? opts.barBlur : null;
      let overlayBlur = opts && 'overlayBlur' in opts ? opts.overlayBlur : null;
      let snackbarStatus = opts && 'snackbarStatus' in opts ? opts.snackbarStatus : null;
      let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
      let userInputForm = opts && 'userInputForm' in opts ? opts.userInputForm : null;
      return extension_navigation['ExtensionSnackbar|snackbar']($this, title, message, {colorText: colorText, duration: duration, instantInit: instantInit, snackPosition: snackPosition, titleText: titleText, messageText: messageText, icon: icon, shouldIconPulse: shouldIconPulse, maxWidth: maxWidth, margin: margin, padding: padding, borderRadius: borderRadius, borderColor: borderColor, borderWidth: borderWidth, backgroundColor: backgroundColor, leftBarIndicatorColor: leftBarIndicatorColor, boxShadows: boxShadows, backgroundGradient: backgroundGradient, mainButton: mainButton, onTap: onTap, isDismissible: isDismissible, showProgressIndicator: showProgressIndicator, dismissDirection: dismissDirection, progressIndicatorController: progressIndicatorController, progressIndicatorBackgroundColor: progressIndicatorBackgroundColor, progressIndicatorValueColor: progressIndicatorValueColor, snackStyle: snackStyle, forwardAnimationCurve: forwardAnimationCurve, reverseAnimationCurve: reverseAnimationCurve, animationDuration: animationDuration, barBlur: barBlur, overlayBlur: overlayBlur, snackbarStatus: snackbarStatus, overlayColor: overlayColor, userInputForm: userInputForm});
    }, T$.StringAndString__ToSnackbarController());
  };
  extension_navigation['ExtensionSnackbar|snackbar'] = function ExtensionSnackbar$124snackbar($this, title, message, opts) {
    let t53, t53$, t52, t53$0, t53$1, t52$, t52$0, t52$1, t52$2, t52$3, t52$4, t52$5, t52$6, t52$7, t52$8, t52$9, t52$10, t52$11, t52$12, t52$13, t52$14, t52$15;
    let colorText = opts && 'colorText' in opts ? opts.colorText : null;
    let duration = opts && 'duration' in opts ? opts.duration : C[222] || CT.C222;
    let instantInit = opts && 'instantInit' in opts ? opts.instantInit : true;
    let snackPosition = opts && 'snackPosition' in opts ? opts.snackPosition : null;
    let titleText = opts && 'titleText' in opts ? opts.titleText : null;
    let messageText = opts && 'messageText' in opts ? opts.messageText : null;
    let icon = opts && 'icon' in opts ? opts.icon : null;
    let shouldIconPulse = opts && 'shouldIconPulse' in opts ? opts.shouldIconPulse : null;
    let maxWidth = opts && 'maxWidth' in opts ? opts.maxWidth : null;
    let margin = opts && 'margin' in opts ? opts.margin : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
    let borderColor = opts && 'borderColor' in opts ? opts.borderColor : null;
    let borderWidth = opts && 'borderWidth' in opts ? opts.borderWidth : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let leftBarIndicatorColor = opts && 'leftBarIndicatorColor' in opts ? opts.leftBarIndicatorColor : null;
    let boxShadows = opts && 'boxShadows' in opts ? opts.boxShadows : null;
    let backgroundGradient = opts && 'backgroundGradient' in opts ? opts.backgroundGradient : null;
    let mainButton = opts && 'mainButton' in opts ? opts.mainButton : null;
    let onTap = opts && 'onTap' in opts ? opts.onTap : null;
    let isDismissible = opts && 'isDismissible' in opts ? opts.isDismissible : null;
    let showProgressIndicator = opts && 'showProgressIndicator' in opts ? opts.showProgressIndicator : null;
    let dismissDirection = opts && 'dismissDirection' in opts ? opts.dismissDirection : null;
    let progressIndicatorController = opts && 'progressIndicatorController' in opts ? opts.progressIndicatorController : null;
    let progressIndicatorBackgroundColor = opts && 'progressIndicatorBackgroundColor' in opts ? opts.progressIndicatorBackgroundColor : null;
    let progressIndicatorValueColor = opts && 'progressIndicatorValueColor' in opts ? opts.progressIndicatorValueColor : null;
    let snackStyle = opts && 'snackStyle' in opts ? opts.snackStyle : null;
    let forwardAnimationCurve = opts && 'forwardAnimationCurve' in opts ? opts.forwardAnimationCurve : null;
    let reverseAnimationCurve = opts && 'reverseAnimationCurve' in opts ? opts.reverseAnimationCurve : null;
    let animationDuration = opts && 'animationDuration' in opts ? opts.animationDuration : null;
    let barBlur = opts && 'barBlur' in opts ? opts.barBlur : null;
    let overlayBlur = opts && 'overlayBlur' in opts ? opts.overlayBlur : null;
    let snackbarStatus = opts && 'snackbarStatus' in opts ? opts.snackbarStatus : null;
    let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
    let userInputForm = opts && 'userInputForm' in opts ? opts.userInputForm : null;
    let getSnackBar = new snackbar.GetSnackBar.new({snackbarStatus: snackbarStatus, titleText: (t52 = titleText, t52 == null ? new text.Text.new(title, {style: new text_style.TextStyle.new({color: (t53$ = (t53 = colorText, t53 == null ? extension_navigation['GetNavigation|get#iconColor']($this) : t53), t53$ == null ? colors.Colors.black : t53$), fontWeight: ui.FontWeight.w800, fontSize: 16.0}), $creationLocationd_0dea112b090073317d4: C[224] || CT.C224}) : t52), messageText: (t52$ = messageText, t52$ == null ? new text.Text.new(message, {style: new text_style.TextStyle.new({color: (t53$1 = (t53$0 = colorText, t53$0 == null ? extension_navigation['GetNavigation|get#iconColor']($this) : t53$0), t53$1 == null ? colors.Colors.black : t53$1), fontWeight: ui.FontWeight.w300, fontSize: 14.0}), $creationLocationd_0dea112b090073317d4: C[225] || CT.C225}) : t52$), snackPosition: (t52$0 = snackPosition, t52$0 == null ? snackbar.SnackPosition.TOP : t52$0), borderRadius: (t52$1 = borderRadius, t52$1 == null ? 15.0 : t52$1), margin: (t52$2 = margin, t52$2 == null ? C[226] || CT.C226 : t52$2), duration: duration, barBlur: (t52$3 = barBlur, t52$3 == null ? 7.0 : t52$3), backgroundColor: (t52$4 = backgroundColor, t52$4 == null ? colors.Colors.grey.withOpacity(0.2) : t52$4), icon: icon, shouldIconPulse: (t52$5 = shouldIconPulse, t52$5 == null ? true : t52$5), maxWidth: maxWidth, padding: (t52$6 = padding, t52$6 == null ? C[27] || CT.C27 : t52$6), borderColor: borderColor, borderWidth: borderWidth, leftBarIndicatorColor: leftBarIndicatorColor, boxShadows: boxShadows, backgroundGradient: backgroundGradient, mainButton: mainButton, onTap: onTap, isDismissible: (t52$7 = isDismissible, t52$7 == null ? true : t52$7), dismissDirection: dismissDirection, showProgressIndicator: (t52$8 = showProgressIndicator, t52$8 == null ? false : t52$8), progressIndicatorController: progressIndicatorController, progressIndicatorBackgroundColor: progressIndicatorBackgroundColor, progressIndicatorValueColor: progressIndicatorValueColor, snackStyle: (t52$9 = snackStyle, t52$9 == null ? snackbar.SnackStyle.FLOATING : t52$9), forwardAnimationCurve: (t52$10 = forwardAnimationCurve, t52$10 == null ? curves.Curves.easeOutCirc : t52$10), reverseAnimationCurve: (t52$11 = reverseAnimationCurve, t52$11 == null ? curves.Curves.easeOutCirc : t52$11), animationDuration: (t52$12 = animationDuration, t52$12 == null ? C[31] || CT.C31 : t52$12), overlayBlur: (t52$13 = overlayBlur, t52$13 == null ? 0.0 : t52$13), overlayColor: (t52$14 = overlayColor, t52$14 == null ? colors.Colors.transparent : t52$14), userInputForm: userInputForm, $creationLocationd_0dea112b090073317d4: C[227] || CT.C227});
    let controller = new snackbar_controller.SnackbarController.new(getSnackBar);
    if (instantInit) {
      controller.show();
    } else {
      t52$15 = get_core.ambiguate(binding$.SchedulerBinding, binding$.SchedulerBinding.instance);
      t52$15 == null ? null : t52$15.addPostFrameCallback(dart.fn(_ => {
        controller.show();
      }, T$.DurationTovoid()));
    }
    return controller;
  };
  extension_navigation['GetNavigation|to'] = function GetNavigation$124to(T, $this, page, opts) {
    let t54, t54$, t54$0, t54$1, t54$2, t53;
    let opaque = opts && 'opaque' in opts ? opts.opaque : null;
    let transition = opts && 'transition' in opts ? opts.transition : null;
    let curve = opts && 'curve' in opts ? opts.curve : null;
    let duration = opts && 'duration' in opts ? opts.duration : null;
    let id = opts && 'id' in opts ? opts.id : null;
    let routeName = opts && 'routeName' in opts ? opts.routeName : null;
    let fullscreenDialog = opts && 'fullscreenDialog' in opts ? opts.fullscreenDialog : false;
    let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
    let binding = opts && 'binding' in opts ? opts.binding : null;
    let preventDuplicates = opts && 'preventDuplicates' in opts ? opts.preventDuplicates : true;
    let popGesture = opts && 'popGesture' in opts ? opts.popGesture : null;
    let gestureWidth = opts && 'gestureWidth' in opts ? opts.gestureWidth : null;
    routeName == null ? routeName = "/" + dart.str(dart.runtimeType(page)) : null;
    routeName = extension_navigation['GetNavigation|_cleanRouteName']($this, routeName);
    if (preventDuplicates && routeName === extension_navigation['GetNavigation|get#currentRoute']($this)) {
      return null;
    }
    t53 = extension_navigation['GetNavigation|global']($this, id).currentState;
    return t53 == null ? null : t53.push(T, new (default_route.GetPageRoute$(T)).new({opaque: (t54 = opaque, t54 == null ? true : t54), page: extension_navigation['GetNavigation|_resolvePage']($this, page, "to"), routeName: routeName, gestureWidth: gestureWidth, settings: new navigator.RouteSettings.new({name: routeName, arguments: $arguments}), popGesture: (t54$ = popGesture, t54$ == null ? extension_navigation['GetNavigation|get#defaultPopGesture']($this) : t54$), transition: (t54$0 = transition, t54$0 == null ? extension_navigation['GetNavigation|get#defaultTransition']($this) : t54$0), curve: (t54$1 = curve, t54$1 == null ? extension_navigation['GetNavigation|get#defaultTransitionCurve']($this) : t54$1), fullscreenDialog: fullscreenDialog, binding: binding, transitionDuration: (t54$2 = duration, t54$2 == null ? extension_navigation['GetNavigation|get#defaultTransitionDuration']($this) : t54$2)}));
  };
  extension_navigation['GetNavigation|get#to'] = function GetNavigation$124get$35to($this) {
    return dart.fn((T, page, opts) => {
      let opaque = opts && 'opaque' in opts ? opts.opaque : null;
      let transition = opts && 'transition' in opts ? opts.transition : null;
      let curve = opts && 'curve' in opts ? opts.curve : null;
      let duration = opts && 'duration' in opts ? opts.duration : null;
      let id = opts && 'id' in opts ? opts.id : null;
      let routeName = opts && 'routeName' in opts ? opts.routeName : null;
      let fullscreenDialog = opts && 'fullscreenDialog' in opts ? opts.fullscreenDialog : false;
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      let binding = opts && 'binding' in opts ? opts.binding : null;
      let preventDuplicates = opts && 'preventDuplicates' in opts ? opts.preventDuplicates : true;
      let popGesture = opts && 'popGesture' in opts ? opts.popGesture : null;
      let gestureWidth = opts && 'gestureWidth' in opts ? opts.gestureWidth : null;
      return extension_navigation['GetNavigation|to'](T, $this, page, {opaque: opaque, transition: transition, curve: curve, duration: duration, id: id, routeName: routeName, fullscreenDialog: fullscreenDialog, arguments: $arguments, binding: binding, preventDuplicates: preventDuplicates, popGesture: popGesture, gestureWidth: gestureWidth});
    }, T$.dynamic__ToFutureNOfTN());
  };
  extension_navigation['GetNavigation|_resolvePage'] = function GetNavigation$124_resolvePage($this, page, method) {
    let t56, t55;
    if (T$.VoidToWidget().is(page)) {
      return page;
    } else if (framework.Widget.is(page)) {
      t55 = get_main.Get;
      t56 = "WARNING, consider using: \"Get." + method + "(() => Page())\" instead of \"Get." + method + "(Page())\".\nUsing a widget function instead of a widget fully guarantees that the widget and its controllers will be removed from memory when they are no longer used.\n      ";
      t55.log(t56);
      return dart.fn(() => page, T$.VoidToWidget());
    } else if (typeof page == 'string') {
      dart.throw("Unexpected String,\nuse toNamed() instead");
    } else {
      dart.throw("Unexpected format,\nyou can only use widgets and widget functions here");
    }
  };
  extension_navigation['GetNavigation|get#_resolvePage'] = function GetNavigation$124get$35_resolvePage($this) {
    return dart.fn((page, method) => extension_navigation['GetNavigation|_resolvePage']($this, page, method), T$.dynamicAndStringToFn());
  };
  extension_navigation['GetNavigation|toNamed'] = function GetNavigation$124toNamed(T, $this, page, opts) {
    let t57;
    let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
    let id = opts && 'id' in opts ? opts.id : null;
    let preventDuplicates = opts && 'preventDuplicates' in opts ? opts.preventDuplicates : true;
    let parameters = opts && 'parameters' in opts ? opts.parameters : null;
    if (preventDuplicates && page === extension_navigation['GetNavigation|get#currentRoute']($this)) {
      return null;
    }
    if (parameters != null) {
      let uri = core._Uri.new({path: page, queryParameters: parameters});
      page = uri.toString();
    }
    t57 = extension_navigation['GetNavigation|global']($this, id).currentState;
    return t57 == null ? null : t57.pushNamed(T, page, {arguments: $arguments});
  };
  extension_navigation['GetNavigation|get#toNamed'] = function GetNavigation$124get$35toNamed($this) {
    return dart.fn((T, page, opts) => {
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      let id = opts && 'id' in opts ? opts.id : null;
      let preventDuplicates = opts && 'preventDuplicates' in opts ? opts.preventDuplicates : true;
      let parameters = opts && 'parameters' in opts ? opts.parameters : null;
      return extension_navigation['GetNavigation|toNamed'](T, $this, page, {arguments: $arguments, id: id, preventDuplicates: preventDuplicates, parameters: parameters});
    }, T$.String__ToFutureNOfTN());
  };
  extension_navigation['GetNavigation|offNamed'] = function GetNavigation$124offNamed(T, $this, page, opts) {
    let t59;
    let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
    let id = opts && 'id' in opts ? opts.id : null;
    let preventDuplicates = opts && 'preventDuplicates' in opts ? opts.preventDuplicates : true;
    let parameters = opts && 'parameters' in opts ? opts.parameters : null;
    if (preventDuplicates && page === extension_navigation['GetNavigation|get#currentRoute']($this)) {
      return null;
    }
    if (parameters != null) {
      let uri = core._Uri.new({path: page, queryParameters: parameters});
      page = uri.toString();
    }
    t59 = extension_navigation['GetNavigation|global']($this, id).currentState;
    return t59 == null ? null : t59.pushReplacementNamed(T, T$.ObjectN(), page, {arguments: $arguments});
  };
  extension_navigation['GetNavigation|get#offNamed'] = function GetNavigation$124get$35offNamed($this) {
    return dart.fn((T, page, opts) => {
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      let id = opts && 'id' in opts ? opts.id : null;
      let preventDuplicates = opts && 'preventDuplicates' in opts ? opts.preventDuplicates : true;
      let parameters = opts && 'parameters' in opts ? opts.parameters : null;
      return extension_navigation['GetNavigation|offNamed'](T, $this, page, {arguments: $arguments, id: id, preventDuplicates: preventDuplicates, parameters: parameters});
    }, T$.String__ToFutureNOfTN());
  };
  extension_navigation['GetNavigation|until'] = function GetNavigation$124until($this, predicate, opts) {
    let t61;
    let id = opts && 'id' in opts ? opts.id : null;
    t61 = extension_navigation['GetNavigation|global']($this, id).currentState;
    return t61 == null ? null : t61.popUntil(predicate);
  };
  extension_navigation['GetNavigation|get#until'] = function GetNavigation$124get$35until($this) {
    return dart.fn((predicate, opts) => {
      let id = opts && 'id' in opts ? opts.id : null;
      return extension_navigation['GetNavigation|until']($this, predicate, {id: id});
    }, T$.Fn__Tovoid());
  };
  extension_navigation['GetNavigation|offUntil'] = function GetNavigation$124offUntil(T, $this, page, predicate, opts) {
    let t63;
    let id = opts && 'id' in opts ? opts.id : null;
    t63 = extension_navigation['GetNavigation|global']($this, id).currentState;
    return t63 == null ? null : t63.pushAndRemoveUntil(T, page, predicate);
  };
  extension_navigation['GetNavigation|get#offUntil'] = function GetNavigation$124get$35offUntil($this) {
    return dart.fn((T, page, predicate, opts) => {
      let id = opts && 'id' in opts ? opts.id : null;
      return extension_navigation['GetNavigation|offUntil'](T, $this, page, predicate, {id: id});
    }, T$.RouteOfTAndFn__ToFutureNOfTN());
  };
  extension_navigation['GetNavigation|offNamedUntil'] = function GetNavigation$124offNamedUntil(T, $this, page, predicate, opts) {
    let t65;
    let id = opts && 'id' in opts ? opts.id : null;
    let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
    let parameters = opts && 'parameters' in opts ? opts.parameters : null;
    if (parameters != null) {
      let uri = core._Uri.new({path: page, queryParameters: parameters});
      page = uri.toString();
    }
    t65 = extension_navigation['GetNavigation|global']($this, id).currentState;
    return t65 == null ? null : t65.pushNamedAndRemoveUntil(T, page, predicate, {arguments: $arguments});
  };
  extension_navigation['GetNavigation|get#offNamedUntil'] = function GetNavigation$124get$35offNamedUntil($this) {
    return dart.fn((T, page, predicate, opts) => {
      let id = opts && 'id' in opts ? opts.id : null;
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      let parameters = opts && 'parameters' in opts ? opts.parameters : null;
      return extension_navigation['GetNavigation|offNamedUntil'](T, $this, page, predicate, {id: id, arguments: $arguments, parameters: parameters});
    }, T$.StringAndFn__ToFutureNOfTN());
  };
  extension_navigation['GetNavigation|offAndToNamed'] = function GetNavigation$124offAndToNamed(T, $this, page, opts) {
    let t67;
    let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
    let id = opts && 'id' in opts ? opts.id : null;
    let result = opts && 'result' in opts ? opts.result : null;
    let parameters = opts && 'parameters' in opts ? opts.parameters : null;
    if (parameters != null) {
      let uri = core._Uri.new({path: page, queryParameters: parameters});
      page = uri.toString();
    }
    t67 = extension_navigation['GetNavigation|global']($this, id).currentState;
    return t67 == null ? null : t67.popAndPushNamed(T, core.Object, page, {arguments: $arguments, result: result});
  };
  extension_navigation['GetNavigation|get#offAndToNamed'] = function GetNavigation$124get$35offAndToNamed($this) {
    return dart.fn((T, page, opts) => {
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      let id = opts && 'id' in opts ? opts.id : null;
      let result = opts && 'result' in opts ? opts.result : null;
      let parameters = opts && 'parameters' in opts ? opts.parameters : null;
      return extension_navigation['GetNavigation|offAndToNamed'](T, $this, page, {arguments: $arguments, id: id, result: result, parameters: parameters});
    }, T$.String__ToFutureNOfTN$1());
  };
  extension_navigation['GetNavigation|removeRoute'] = function GetNavigation$124removeRoute($this, route, opts) {
    let t69;
    let id = opts && 'id' in opts ? opts.id : null;
    t69 = extension_navigation['GetNavigation|global']($this, id).currentState;
    return t69 == null ? null : t69.removeRoute(route);
  };
  extension_navigation['GetNavigation|get#removeRoute'] = function GetNavigation$124get$35removeRoute($this) {
    return dart.fn((route, opts) => {
      let id = opts && 'id' in opts ? opts.id : null;
      return extension_navigation['GetNavigation|removeRoute']($this, route, {id: id});
    }, T$.Route__Tovoid());
  };
  extension_navigation['GetNavigation|offAllNamed'] = function GetNavigation$124offAllNamed(T, $this, newRouteName, opts) {
    let t72, t71;
    let predicate = opts && 'predicate' in opts ? opts.predicate : null;
    let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
    let id = opts && 'id' in opts ? opts.id : null;
    let parameters = opts && 'parameters' in opts ? opts.parameters : null;
    if (parameters != null) {
      let uri = core._Uri.new({path: newRouteName, queryParameters: parameters});
      newRouteName = uri.toString();
    }
    t71 = extension_navigation['GetNavigation|global']($this, id).currentState;
    return t71 == null ? null : t71.pushNamedAndRemoveUntil(T, newRouteName, (t72 = predicate, t72 == null ? dart.fn(_ => false, T$.RouteTobool()) : t72), {arguments: $arguments});
  };
  extension_navigation['GetNavigation|get#offAllNamed'] = function GetNavigation$124get$35offAllNamed($this) {
    return dart.fn((T, newRouteName, opts) => {
      let predicate = opts && 'predicate' in opts ? opts.predicate : null;
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      let id = opts && 'id' in opts ? opts.id : null;
      let parameters = opts && 'parameters' in opts ? opts.parameters : null;
      return extension_navigation['GetNavigation|offAllNamed'](T, $this, newRouteName, {predicate: predicate, arguments: $arguments, id: id, parameters: parameters});
    }, T$.String__ToFutureNOfTN$2());
  };
  extension_navigation['GetNavigation|get#isOverlaysOpen'] = function GetNavigation$124get$35isOverlaysOpen($this) {
    return extension_navigation['GetNavigation|get#isSnackbarOpen']($this) || dart.nullCheck(extension_navigation['GetNavigation|get#isDialogOpen']($this)) || dart.nullCheck(extension_navigation['GetNavigation|get#isBottomSheetOpen']($this));
  };
  extension_navigation['GetNavigation|get#isOverlaysClosed'] = function GetNavigation$124get$35isOverlaysClosed($this) {
    return !extension_navigation['GetNavigation|get#isSnackbarOpen']($this) && !dart.nullCheck(extension_navigation['GetNavigation|get#isDialogOpen']($this)) && !dart.nullCheck(extension_navigation['GetNavigation|get#isBottomSheetOpen']($this));
  };
  extension_navigation['GetNavigation|back'] = function GetNavigation$124back(T, $this, opts) {
    let t75, t75$, t75$0, t75$1;
    let result = opts && 'result' in opts ? opts.result : null;
    let closeOverlays = opts && 'closeOverlays' in opts ? opts.closeOverlays : false;
    let canPop = opts && 'canPop' in opts ? opts.canPop : true;
    let id = opts && 'id' in opts ? opts.id : null;
    if (extension_navigation['GetNavigation|get#isSnackbarOpen']($this) && !closeOverlays) {
      extension_navigation['GetNavigation|closeCurrentSnackbar']($this);
      return;
    }
    if (closeOverlays && extension_navigation['GetNavigation|get#isOverlaysOpen']($this)) {
      if (extension_navigation['GetNavigation|get#isSnackbarOpen']($this)) {
        extension_navigation['GetNavigation|closeAllSnackbars']($this);
      }
      t75 = extension_navigation.navigator;
      t75 == null ? null : t75.popUntil(dart.fn(route => !dart.nullCheck(extension_navigation['GetNavigation|get#isDialogOpen']($this)) && !dart.nullCheck(extension_navigation['GetNavigation|get#isBottomSheetOpen']($this)), T$.RouteTobool()));
    }
    if (canPop) {
      if ((t75$ = extension_navigation['GetNavigation|global']($this, id).currentState, t75$ == null ? null : t75$.canPop()) === true) {
        t75$0 = extension_navigation['GetNavigation|global']($this, id).currentState;
        t75$0 == null ? null : t75$0.pop(T, result);
      }
    } else {
      t75$1 = extension_navigation['GetNavigation|global']($this, id).currentState;
      t75$1 == null ? null : t75$1.pop(T, result);
    }
  };
  extension_navigation['GetNavigation|get#back'] = function GetNavigation$124get$35back($this) {
    return dart.fn((T, opts) => {
      let result = opts && 'result' in opts ? opts.result : null;
      let closeOverlays = opts && 'closeOverlays' in opts ? opts.closeOverlays : false;
      let canPop = opts && 'canPop' in opts ? opts.canPop : true;
      let id = opts && 'id' in opts ? opts.id : null;
      return extension_navigation['GetNavigation|back'](T, $this, {result: result, closeOverlays: closeOverlays, canPop: canPop, id: id});
    }, T$.__Tovoid());
  };
  extension_navigation['GetNavigation|close'] = function GetNavigation$124close($this, times, id = null) {
    let t77;
    if (times < 1) {
      times = 1;
    }
    let count = 0;
    let back = (t77 = extension_navigation['GetNavigation|global']($this, id).currentState, t77 == null ? null : t77.popUntil(dart.fn(route => {
      let t78;
      return (t78 = count, count = t78 + 1, t78) === times;
    }, T$.RouteTobool())));
    return back;
  };
  extension_navigation['GetNavigation|get#close'] = function GetNavigation$124get$35close($this) {
    return dart.fn((times, id = null) => extension_navigation['GetNavigation|close']($this, times, id), T$.intAndintNTovoid());
  };
  extension_navigation['GetNavigation|off'] = function GetNavigation$124off(T, $this, page, opts) {
    let t80, t80$, t80$0, t80$1, t79;
    let opaque = opts && 'opaque' in opts ? opts.opaque : false;
    let transition = opts && 'transition' in opts ? opts.transition : null;
    let curve = opts && 'curve' in opts ? opts.curve : null;
    let popGesture = opts && 'popGesture' in opts ? opts.popGesture : null;
    let id = opts && 'id' in opts ? opts.id : null;
    let routeName = opts && 'routeName' in opts ? opts.routeName : null;
    let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
    let binding = opts && 'binding' in opts ? opts.binding : null;
    let fullscreenDialog = opts && 'fullscreenDialog' in opts ? opts.fullscreenDialog : false;
    let preventDuplicates = opts && 'preventDuplicates' in opts ? opts.preventDuplicates : true;
    let duration = opts && 'duration' in opts ? opts.duration : null;
    let gestureWidth = opts && 'gestureWidth' in opts ? opts.gestureWidth : null;
    routeName == null ? routeName = "/" + dart.runtimeType(page).toString() : null;
    routeName = extension_navigation['GetNavigation|_cleanRouteName']($this, routeName);
    if (preventDuplicates && routeName === extension_navigation['GetNavigation|get#currentRoute']($this)) {
      return null;
    }
    t79 = extension_navigation['GetNavigation|global']($this, id).currentState;
    return t79 == null ? null : t79.pushReplacement(T, T$.ObjectN(), new (default_route.GetPageRoute$(T)).new({opaque: opaque, gestureWidth: gestureWidth, page: extension_navigation['GetNavigation|_resolvePage']($this, page, "off"), binding: binding, settings: new navigator.RouteSettings.new({arguments: $arguments, name: routeName}), routeName: routeName, fullscreenDialog: fullscreenDialog, popGesture: (t80 = popGesture, t80 == null ? extension_navigation['GetNavigation|get#defaultPopGesture']($this) : t80), transition: (t80$ = transition, t80$ == null ? extension_navigation['GetNavigation|get#defaultTransition']($this) : t80$), curve: (t80$0 = curve, t80$0 == null ? extension_navigation['GetNavigation|get#defaultTransitionCurve']($this) : t80$0), transitionDuration: (t80$1 = duration, t80$1 == null ? extension_navigation['GetNavigation|get#defaultTransitionDuration']($this) : t80$1)}));
  };
  extension_navigation['GetNavigation|get#off'] = function GetNavigation$124get$35off($this) {
    return dart.fn((T, page, opts) => {
      let opaque = opts && 'opaque' in opts ? opts.opaque : false;
      let transition = opts && 'transition' in opts ? opts.transition : null;
      let curve = opts && 'curve' in opts ? opts.curve : null;
      let popGesture = opts && 'popGesture' in opts ? opts.popGesture : null;
      let id = opts && 'id' in opts ? opts.id : null;
      let routeName = opts && 'routeName' in opts ? opts.routeName : null;
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      let binding = opts && 'binding' in opts ? opts.binding : null;
      let fullscreenDialog = opts && 'fullscreenDialog' in opts ? opts.fullscreenDialog : false;
      let preventDuplicates = opts && 'preventDuplicates' in opts ? opts.preventDuplicates : true;
      let duration = opts && 'duration' in opts ? opts.duration : null;
      let gestureWidth = opts && 'gestureWidth' in opts ? opts.gestureWidth : null;
      return extension_navigation['GetNavigation|off'](T, $this, page, {opaque: opaque, transition: transition, curve: curve, popGesture: popGesture, id: id, routeName: routeName, arguments: $arguments, binding: binding, fullscreenDialog: fullscreenDialog, preventDuplicates: preventDuplicates, duration: duration, gestureWidth: gestureWidth});
    }, T$.dynamic__ToFutureNOfTN$1());
  };
  extension_navigation['GetNavigation|offAll'] = function GetNavigation$124offAll(T, $this, page, opts) {
    let t82, t82$, t82$0, t82$1, t82$2, t81;
    let predicate = opts && 'predicate' in opts ? opts.predicate : null;
    let opaque = opts && 'opaque' in opts ? opts.opaque : false;
    let popGesture = opts && 'popGesture' in opts ? opts.popGesture : null;
    let id = opts && 'id' in opts ? opts.id : null;
    let routeName = opts && 'routeName' in opts ? opts.routeName : null;
    let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
    let binding = opts && 'binding' in opts ? opts.binding : null;
    let fullscreenDialog = opts && 'fullscreenDialog' in opts ? opts.fullscreenDialog : false;
    let transition = opts && 'transition' in opts ? opts.transition : null;
    let curve = opts && 'curve' in opts ? opts.curve : null;
    let duration = opts && 'duration' in opts ? opts.duration : null;
    let gestureWidth = opts && 'gestureWidth' in opts ? opts.gestureWidth : null;
    routeName == null ? routeName = "/" + dart.runtimeType(page).toString() : null;
    routeName = extension_navigation['GetNavigation|_cleanRouteName']($this, routeName);
    t81 = extension_navigation['GetNavigation|global']($this, id).currentState;
    return t81 == null ? null : t81.pushAndRemoveUntil(T, new (default_route.GetPageRoute$(T)).new({opaque: opaque, popGesture: (t82 = popGesture, t82 == null ? extension_navigation['GetNavigation|get#defaultPopGesture']($this) : t82), page: extension_navigation['GetNavigation|_resolvePage']($this, page, "offAll"), binding: binding, gestureWidth: gestureWidth, settings: new navigator.RouteSettings.new({name: routeName, arguments: $arguments}), fullscreenDialog: fullscreenDialog, routeName: routeName, transition: (t82$ = transition, t82$ == null ? extension_navigation['GetNavigation|get#defaultTransition']($this) : t82$), curve: (t82$0 = curve, t82$0 == null ? extension_navigation['GetNavigation|get#defaultTransitionCurve']($this) : t82$0), transitionDuration: (t82$1 = duration, t82$1 == null ? extension_navigation['GetNavigation|get#defaultTransitionDuration']($this) : t82$1)}), (t82$2 = predicate, t82$2 == null ? dart.fn(route => false, T$.RouteTobool()) : t82$2));
  };
  extension_navigation['GetNavigation|get#offAll'] = function GetNavigation$124get$35offAll($this) {
    return dart.fn((T, page, opts) => {
      let predicate = opts && 'predicate' in opts ? opts.predicate : null;
      let opaque = opts && 'opaque' in opts ? opts.opaque : false;
      let popGesture = opts && 'popGesture' in opts ? opts.popGesture : null;
      let id = opts && 'id' in opts ? opts.id : null;
      let routeName = opts && 'routeName' in opts ? opts.routeName : null;
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      let binding = opts && 'binding' in opts ? opts.binding : null;
      let fullscreenDialog = opts && 'fullscreenDialog' in opts ? opts.fullscreenDialog : false;
      let transition = opts && 'transition' in opts ? opts.transition : null;
      let curve = opts && 'curve' in opts ? opts.curve : null;
      let duration = opts && 'duration' in opts ? opts.duration : null;
      let gestureWidth = opts && 'gestureWidth' in opts ? opts.gestureWidth : null;
      return extension_navigation['GetNavigation|offAll'](T, $this, page, {predicate: predicate, opaque: opaque, popGesture: popGesture, id: id, routeName: routeName, arguments: $arguments, binding: binding, fullscreenDialog: fullscreenDialog, transition: transition, curve: curve, duration: duration, gestureWidth: gestureWidth});
    }, T$.dynamic__ToFutureNOfTN$2());
  };
  extension_navigation['GetNavigation|_cleanRouteName'] = function GetNavigation$124_cleanRouteName($this, name) {
    let t83, t83$;
    name = name[$replaceAll]("() => ", "");
    if (!name[$startsWith]("/")) {
      name = "/" + name;
    }
    t83$ = (t83 = core.Uri.tryParse(name), t83 == null ? null : dart.toString(t83));
    return t83$ == null ? name : t83$;
  };
  extension_navigation['GetNavigation|get#_cleanRouteName'] = function GetNavigation$124get$35_cleanRouteName($this) {
    return dart.fn(name => extension_navigation['GetNavigation|_cleanRouteName']($this, name), T$.StringToString());
  };
  extension_navigation['GetNavigation|config'] = function GetNavigation$124config($this, opts) {
    let enableLog = opts && 'enableLog' in opts ? opts.enableLog : null;
    let logWriterCallback = opts && 'logWriterCallback' in opts ? opts.logWriterCallback : null;
    let defaultPopGesture = opts && 'defaultPopGesture' in opts ? opts.defaultPopGesture : null;
    let defaultOpaqueRoute = opts && 'defaultOpaqueRoute' in opts ? opts.defaultOpaqueRoute : null;
    let defaultDurationTransition = opts && 'defaultDurationTransition' in opts ? opts.defaultDurationTransition : null;
    let defaultGlobalState = opts && 'defaultGlobalState' in opts ? opts.defaultGlobalState : null;
    let defaultTransition = opts && 'defaultTransition' in opts ? opts.defaultTransition : null;
    if (enableLog != null) {
      get_main.Get.isLogEnable = enableLog;
    }
    if (logWriterCallback != null) {
      get_main.Get.log = logWriterCallback;
    }
    if (defaultPopGesture != null) {
      extension_navigation['GetNavigation|_getxController'].defaultPopGesture = defaultPopGesture;
    }
    if (defaultOpaqueRoute != null) {
      extension_navigation['GetNavigation|_getxController'].defaultOpaqueRoute = defaultOpaqueRoute;
    }
    if (defaultTransition != null) {
      extension_navigation['GetNavigation|_getxController'].defaultTransition = defaultTransition;
    }
    if (defaultDurationTransition != null) {
      extension_navigation['GetNavigation|_getxController'].defaultTransitionDuration = defaultDurationTransition;
    }
  };
  extension_navigation['GetNavigation|get#config'] = function GetNavigation$124get$35config($this) {
    return dart.fn(opts => {
      let enableLog = opts && 'enableLog' in opts ? opts.enableLog : null;
      let logWriterCallback = opts && 'logWriterCallback' in opts ? opts.logWriterCallback : null;
      let defaultPopGesture = opts && 'defaultPopGesture' in opts ? opts.defaultPopGesture : null;
      let defaultOpaqueRoute = opts && 'defaultOpaqueRoute' in opts ? opts.defaultOpaqueRoute : null;
      let defaultDurationTransition = opts && 'defaultDurationTransition' in opts ? opts.defaultDurationTransition : null;
      let defaultGlobalState = opts && 'defaultGlobalState' in opts ? opts.defaultGlobalState : null;
      let defaultTransition = opts && 'defaultTransition' in opts ? opts.defaultTransition : null;
      return extension_navigation['GetNavigation|config']($this, {enableLog: enableLog, logWriterCallback: logWriterCallback, defaultPopGesture: defaultPopGesture, defaultOpaqueRoute: defaultOpaqueRoute, defaultDurationTransition: defaultDurationTransition, defaultGlobalState: defaultGlobalState, defaultTransition: defaultTransition});
    }, T$.__Tovoid$1());
  };
  extension_navigation['GetNavigation|updateLocale'] = function GetNavigation$124updateLocale($this, l) {
    return async.async(dart.void, function* GetNavigation$124updateLocale() {
      internacionalization['LocalesIntl|set#locale'](get_main.Get, l);
      yield extension_navigation['GetNavigation|forceAppUpdate']($this);
    });
  };
  extension_navigation['GetNavigation|get#updateLocale'] = function GetNavigation$124get$35updateLocale($this) {
    return dart.fn(l => extension_navigation['GetNavigation|updateLocale']($this, l), T$.LocaleToFutureOfvoid());
  };
  extension_navigation['GetNavigation|forceAppUpdate'] = function GetNavigation$124forceAppUpdate($this) {
    return async.async(dart.void, function* GetNavigation$124forceAppUpdate() {
      yield extension_navigation['GetNavigation|get#engine']($this).performReassemble();
    });
  };
  extension_navigation['GetNavigation|get#forceAppUpdate'] = function GetNavigation$124get$35forceAppUpdate($this) {
    return dart.fn(() => extension_navigation['GetNavigation|forceAppUpdate']($this), T$.VoidToFutureOfvoid());
  };
  extension_navigation['GetNavigation|appUpdate'] = function GetNavigation$124appUpdate($this) {
    return extension_navigation['GetNavigation|_getxController'].update();
  };
  extension_navigation['GetNavigation|get#appUpdate'] = function GetNavigation$124get$35appUpdate($this) {
    return dart.fn(() => extension_navigation['GetNavigation|appUpdate']($this), T$.VoidTovoid());
  };
  extension_navigation['GetNavigation|changeTheme'] = function GetNavigation$124changeTheme($this, theme) {
    extension_navigation['GetNavigation|_getxController'].setTheme(theme);
  };
  extension_navigation['GetNavigation|get#changeTheme'] = function GetNavigation$124get$35changeTheme($this) {
    return dart.fn(theme => extension_navigation['GetNavigation|changeTheme']($this, theme), T$.ThemeDataTovoid());
  };
  extension_navigation['GetNavigation|get#changeThemeMode'] = function GetNavigation$124get$35changeThemeMode($this) {
    return dart.fn(themeMode => extension_navigation['GetNavigation|changeThemeMode']($this, themeMode), T$.ThemeModeTovoid());
  };
  extension_navigation['GetNavigation|changeThemeMode'] = function GetNavigation$124changeThemeMode($this, themeMode) {
    extension_navigation['GetNavigation|_getxController'].setThemeMode(themeMode);
  };
  extension_navigation['GetNavigation|addKey'] = function GetNavigation$124addKey($this, newKey) {
    return extension_navigation['GetNavigation|_getxController'].addKey(newKey);
  };
  extension_navigation['GetNavigation|get#addKey'] = function GetNavigation$124get$35addKey($this) {
    return dart.fn(newKey => extension_navigation['GetNavigation|addKey']($this, newKey), T$.GlobalKeyOfNavigatorStateToGlobalKeyNOfNavigatorState());
  };
  extension_navigation['GetNavigation|nestedKey'] = function GetNavigation$124nestedKey($this, key) {
    extension_navigation['GetNavigation|get#keys']($this)[$putIfAbsent](key, dart.fn(() => T$.GlobalKeyOfNavigatorState().new({debugLabel: "Getx nested key: " + dart.toString(key)}), T$.VoidToGlobalKeyOfNavigatorState()));
    return extension_navigation['GetNavigation|get#keys']($this)[$_get](key);
  };
  extension_navigation['GetNavigation|get#nestedKey'] = function GetNavigation$124get$35nestedKey($this) {
    return dart.fn(key => extension_navigation['GetNavigation|nestedKey']($this, key), T$.dynamicToGlobalKeyNOfNavigatorState());
  };
  extension_navigation['GetNavigation|global'] = function GetNavigation$124global($this, k) {
    let newKey = null;
    if (k == null) {
      newKey = extension_navigation['GetNavigation|get#key']($this);
    } else {
      if (!extension_navigation['GetNavigation|get#keys']($this)[$containsKey](k)) {
        dart.throw("Route id (" + dart.str(k) + ") not found");
      }
      newKey = dart.nullCheck(extension_navigation['GetNavigation|get#keys']($this)[$_get](k));
    }
    if (newKey.currentContext == null && !extension_navigation['GetNavigation|get#testMode']($this)) {
      dart.throw("You are trying to use contextless navigation without\n      a GetMaterialApp or Get.key.\n      If you are testing your app, you can use:\n      [Get.testMode = true], or if you are running your app on\n      a physical device or emulator, you must exchange your [MaterialApp]\n      for a [GetMaterialApp].\n      ");
    }
    return newKey;
  };
  extension_navigation['GetNavigation|get#global'] = function GetNavigation$124get$35global($this) {
    return dart.fn(k => extension_navigation['GetNavigation|global']($this, k), T$.intNToGlobalKeyOfNavigatorState());
  };
  extension_navigation['GetNavigation|get#arguments'] = function GetNavigation$124get$35arguments($this) {
    return extension_navigation['GetNavigation|get#routing']($this).args;
  };
  extension_navigation['GetNavigation|get#currentRoute'] = function GetNavigation$124get$35currentRoute($this) {
    return extension_navigation['GetNavigation|get#routing']($this).current;
  };
  extension_navigation['GetNavigation|get#previousRoute'] = function GetNavigation$124get$35previousRoute($this) {
    return extension_navigation['GetNavigation|get#routing']($this).previous;
  };
  extension_navigation['GetNavigation|get#isSnackbarOpen'] = function GetNavigation$124get$35isSnackbarOpen($this) {
    return snackbar_controller.SnackbarController.isSnackbarBeingShown;
  };
  extension_navigation['GetNavigation|closeAllSnackbars'] = function GetNavigation$124closeAllSnackbars($this) {
    snackbar_controller.SnackbarController.cancelAllSnackbars();
  };
  extension_navigation['GetNavigation|get#closeAllSnackbars'] = function GetNavigation$124get$35closeAllSnackbars($this) {
    return dart.fn(() => extension_navigation['GetNavigation|closeAllSnackbars']($this), T$.VoidTovoid());
  };
  extension_navigation['GetNavigation|closeCurrentSnackbar'] = function GetNavigation$124closeCurrentSnackbar($this) {
    return async.async(dart.void, function* GetNavigation$124closeCurrentSnackbar() {
      yield snackbar_controller.SnackbarController.closeCurrentSnackbar();
    });
  };
  extension_navigation['GetNavigation|get#closeCurrentSnackbar'] = function GetNavigation$124get$35closeCurrentSnackbar($this) {
    return dart.fn(() => extension_navigation['GetNavigation|closeCurrentSnackbar']($this), T$.VoidToFutureOfvoid());
  };
  extension_navigation['GetNavigation|get#isDialogOpen'] = function GetNavigation$124get$35isDialogOpen($this) {
    return extension_navigation['GetNavigation|get#routing']($this).isDialog;
  };
  extension_navigation['GetNavigation|get#isBottomSheetOpen'] = function GetNavigation$124get$35isBottomSheetOpen($this) {
    return extension_navigation['GetNavigation|get#routing']($this).isBottomSheet;
  };
  extension_navigation['GetNavigation|get#rawRoute'] = function GetNavigation$124get$35rawRoute($this) {
    return extension_navigation['GetNavigation|get#routing']($this).route;
  };
  extension_navigation['GetNavigation|get#isPopGestureEnable'] = function GetNavigation$124get$35isPopGestureEnable($this) {
    return extension_navigation['GetNavigation|get#defaultPopGesture']($this);
  };
  extension_navigation['GetNavigation|get#isOpaqueRouteDefault'] = function GetNavigation$124get$35isOpaqueRouteDefault($this) {
    return extension_navigation['GetNavigation|get#defaultOpaqueRoute']($this);
  };
  extension_navigation['GetNavigation|get#context'] = function GetNavigation$124get$35context($this) {
    return extension_navigation['GetNavigation|get#key']($this).currentContext;
  };
  extension_navigation['GetNavigation|get#overlayContext'] = function GetNavigation$124get$35overlayContext($this) {
    let t118, t117;
    let overlay = null;
    t117 = extension_navigation['GetNavigation|get#key']($this).currentState;
    t117 == null ? null : (t118 = t117.overlay, t118 == null ? null : t118.context.visitChildElements(dart.fn(element => {
      overlay = element;
    }, T$.ElementTovoid())));
    return overlay;
  };
  extension_navigation['GetNavigation|get#theme'] = function GetNavigation$124get$35theme($this) {
    let theme = theme_data.ThemeData.fallback();
    if (extension_navigation['GetNavigation|get#context']($this) != null) {
      theme = theme$.Theme.of(dart.nullCheck(extension_navigation['GetNavigation|get#context']($this)));
    }
    return theme;
  };
  extension_navigation['GetNavigation|get#engine'] = function GetNavigation$124get$35engine($this) {
    return binding.WidgetsFlutterBinding.ensureInitialized();
  };
  extension_navigation['GetNavigation|get#window'] = function GetNavigation$124get$35window($this) {
    return ui.window;
  };
  extension_navigation['GetNavigation|get#deviceLocale'] = function GetNavigation$124get$35deviceLocale($this) {
    return ui.window.locale;
  };
  extension_navigation['GetNavigation|get#pixelRatio'] = function GetNavigation$124get$35pixelRatio($this) {
    return ui.window.devicePixelRatio;
  };
  extension_navigation['GetNavigation|get#size'] = function GetNavigation$124get$35size($this) {
    return ui.window.physicalSize['/'](extension_navigation['GetNavigation|get#pixelRatio']($this));
  };
  extension_navigation['GetNavigation|get#width'] = function GetNavigation$124get$35width($this) {
    return extension_navigation['GetNavigation|get#size']($this).width;
  };
  extension_navigation['GetNavigation|get#height'] = function GetNavigation$124get$35height($this) {
    return extension_navigation['GetNavigation|get#size']($this).height;
  };
  extension_navigation['GetNavigation|get#statusBarHeight'] = function GetNavigation$124get$35statusBarHeight($this) {
    return ui.window.padding.top;
  };
  extension_navigation['GetNavigation|get#bottomBarHeight'] = function GetNavigation$124get$35bottomBarHeight($this) {
    return ui.window.padding.bottom;
  };
  extension_navigation['GetNavigation|get#textScaleFactor'] = function GetNavigation$124get$35textScaleFactor($this) {
    return ui.window.textScaleFactor;
  };
  extension_navigation['GetNavigation|get#textTheme'] = function GetNavigation$124get$35textTheme($this) {
    return extension_navigation['GetNavigation|get#theme']($this).textTheme;
  };
  extension_navigation['GetNavigation|get#mediaQuery'] = function GetNavigation$124get$35mediaQuery($this) {
    return media_query.MediaQuery.of(dart.nullCheck(extension_navigation['GetNavigation|get#context']($this)));
  };
  extension_navigation['GetNavigation|get#isDarkMode'] = function GetNavigation$124get$35isDarkMode($this) {
    return extension_navigation['GetNavigation|get#theme']($this).brightness === ui.Brightness.dark;
  };
  extension_navigation['GetNavigation|get#isPlatformDarkMode'] = function GetNavigation$124get$35isPlatformDarkMode($this) {
    return ui.window.platformBrightness === ui.Brightness.dark;
  };
  extension_navigation['GetNavigation|get#iconColor'] = function GetNavigation$124get$35iconColor($this) {
    return extension_navigation['GetNavigation|get#theme']($this).iconTheme.color;
  };
  extension_navigation['GetNavigation|get#focusScope'] = function GetNavigation$124get$35focusScope($this) {
    return focus_manager.FocusManager.instance.primaryFocus;
  };
  extension_navigation['GetNavigation|get#key'] = function GetNavigation$124get$35key($this) {
    return extension_navigation['GetNavigation|_getxController'].key;
  };
  extension_navigation['GetNavigation|get#keys'] = function GetNavigation$124get$35keys($this) {
    return extension_navigation['GetNavigation|_getxController'].keys;
  };
  extension_navigation['GetNavigation|get#rootController'] = function GetNavigation$124get$35rootController($this) {
    return extension_navigation['GetNavigation|_getxController'];
  };
  extension_navigation['GetNavigation|get#defaultPopGesture'] = function GetNavigation$124get$35defaultPopGesture($this) {
    return extension_navigation['GetNavigation|_getxController'].defaultPopGesture;
  };
  extension_navigation['GetNavigation|get#defaultOpaqueRoute'] = function GetNavigation$124get$35defaultOpaqueRoute($this) {
    return extension_navigation['GetNavigation|_getxController'].defaultOpaqueRoute;
  };
  extension_navigation['GetNavigation|get#defaultTransition'] = function GetNavigation$124get$35defaultTransition($this) {
    return extension_navigation['GetNavigation|_getxController'].defaultTransition;
  };
  extension_navigation['GetNavigation|get#defaultTransitionDuration'] = function GetNavigation$124get$35defaultTransitionDuration($this) {
    return extension_navigation['GetNavigation|_getxController'].defaultTransitionDuration;
  };
  extension_navigation['GetNavigation|get#defaultTransitionCurve'] = function GetNavigation$124get$35defaultTransitionCurve($this) {
    return extension_navigation['GetNavigation|_getxController'].defaultTransitionCurve;
  };
  extension_navigation['GetNavigation|get#defaultDialogTransitionCurve'] = function GetNavigation$124get$35defaultDialogTransitionCurve($this) {
    return extension_navigation['GetNavigation|_getxController'].defaultDialogTransitionCurve;
  };
  extension_navigation['GetNavigation|get#defaultDialogTransitionDuration'] = function GetNavigation$124get$35defaultDialogTransitionDuration($this) {
    return extension_navigation['GetNavigation|_getxController'].defaultDialogTransitionDuration;
  };
  extension_navigation['GetNavigation|get#routing'] = function GetNavigation$124get$35routing($this) {
    return extension_navigation['GetNavigation|_getxController'].routing;
  };
  extension_navigation['GetNavigation|get#parameters'] = function GetNavigation$124get$35parameters($this) {
    return extension_navigation['GetNavigation|_getxController'].parameters;
  };
  extension_navigation['GetNavigation|set#parameters'] = function GetNavigation$124set$35parameters($this, newParameters) {
    return extension_navigation['GetNavigation|_getxController'].parameters = newParameters;
  };
  extension_navigation['GetNavigation|get#customTransition'] = function GetNavigation$124get$35customTransition($this) {
    return extension_navigation['GetNavigation|_getxController'].customTransition;
  };
  extension_navigation['GetNavigation|set#customTransition'] = function GetNavigation$124set$35customTransition($this, newTransition) {
    return extension_navigation['GetNavigation|_getxController'].customTransition = newTransition;
  };
  extension_navigation['GetNavigation|get#testMode'] = function GetNavigation$124get$35testMode($this) {
    return extension_navigation['GetNavigation|_getxController'].testMode;
  };
  extension_navigation['GetNavigation|set#testMode'] = function GetNavigation$124set$35testMode($this, isTest) {
    return extension_navigation['GetNavigation|_getxController'].testMode = isTest;
  };
  extension_navigation['GetNavigation|resetRootNavigator'] = function GetNavigation$124resetRootNavigator($this) {
    extension_navigation['GetNavigation|_getxController'] = new root_controller.GetMaterialController.new();
  };
  extension_navigation['GetNavigation|get#resetRootNavigator'] = function GetNavigation$124get$35resetRootNavigator($this) {
    return dart.fn(() => extension_navigation['GetNavigation|resetRootNavigator']($this), T$.VoidTovoid());
  };
  extension_navigation['NavTwoExt|get#addPages'] = function NavTwoExt$124get$35addPages($this) {
    return dart.fn(getPages => extension_navigation['NavTwoExt|addPages']($this, getPages), T$.ListOfGetPageTovoid());
  };
  extension_navigation['NavTwoExt|addPages'] = function NavTwoExt$124addPages($this, getPages) {
    extension_navigation['NavTwoExt|get#routeTree']($this).addRoutes(getPages);
  };
  extension_navigation['NavTwoExt|clearRouteTree'] = function NavTwoExt$124clearRouteTree($this) {
    extension_navigation['NavTwoExt|_routeTree'].routes[$clear]();
  };
  extension_navigation['NavTwoExt|get#clearRouteTree'] = function NavTwoExt$124get$35clearRouteTree($this) {
    return dart.fn(() => extension_navigation['NavTwoExt|clearRouteTree']($this), T$.VoidTovoid());
  };
  extension_navigation['NavTwoExt|get#routeTree'] = function NavTwoExt$124get$35routeTree($this) {
    return extension_navigation['NavTwoExt|_routeTree'];
  };
  extension_navigation['NavTwoExt|addPage'] = function NavTwoExt$124addPage($this, getPage) {
    extension_navigation['NavTwoExt|get#routeTree']($this).addRoute(getPage);
  };
  extension_navigation['NavTwoExt|get#addPage'] = function NavTwoExt$124get$35addPage($this) {
    return dart.fn(getPage => extension_navigation['NavTwoExt|addPage']($this, getPage), T$.GetPageTovoid());
  };
  extension_navigation['NavTwoExt|delegate'] = function NavTwoExt$124delegate(TDelegate, TPage, $this) {
    return dart.nullable(TDelegate).as($this.routerDelegate);
  };
  extension_navigation['NavTwoExt|get#delegate'] = function NavTwoExt$124get$35delegate($this) {
    return dart.fn((TDelegate, TPage) => extension_navigation['NavTwoExt|delegate'](TDelegate, TPage, $this), T$.VoidToTDelegateN());
  };
  extension_navigation['NavTwoExt|createInformationParser'] = function NavTwoExt$124createInformationParser($this, opts) {
    let initialRoute = opts && 'initialRoute' in opts ? opts.initialRoute : "/";
    if ($this.routeInformationParser == null) {
      return $this.routeInformationParser = new get_information_parser.GetInformationParser.new({initialRoute: initialRoute});
    } else {
      return get_information_parser.GetInformationParser.as($this.routeInformationParser);
    }
  };
  extension_navigation['NavTwoExt|get#createInformationParser'] = function NavTwoExt$124get$35createInformationParser($this) {
    return dart.fn(opts => {
      let initialRoute = opts && 'initialRoute' in opts ? opts.initialRoute : "/";
      return extension_navigation['NavTwoExt|createInformationParser']($this, {initialRoute: initialRoute});
    }, T$.__ToGetInformationParser());
  };
  extension_navigation['NavTwoExt|get#rootDelegate'] = function NavTwoExt$124get$35rootDelegate($this) {
    return extension_navigation['NavTwoExt|createDelegate']($this);
  };
  extension_navigation['NavTwoExt|createDelegate'] = function NavTwoExt$124createDelegate($this, opts) {
    let notFoundRoute = opts && 'notFoundRoute' in opts ? opts.notFoundRoute : null;
    let navigatorObservers = opts && 'navigatorObservers' in opts ? opts.navigatorObservers : null;
    let transitionDelegate = opts && 'transitionDelegate' in opts ? opts.transitionDelegate : null;
    let backButtonPopMode = opts && 'backButtonPopMode' in opts ? opts.backButtonPopMode : C[181] || CT.C181;
    let preventDuplicateHandlingMode = opts && 'preventDuplicateHandlingMode' in opts ? opts.preventDuplicateHandlingMode : C[182] || CT.C182;
    if ($this.routerDelegate == null) {
      return $this.routerDelegate = new get_router_delegate.GetDelegate.new({notFoundRoute: notFoundRoute, navigatorObservers: navigatorObservers, transitionDelegate: transitionDelegate, backButtonPopMode: backButtonPopMode, preventDuplicateHandlingMode: preventDuplicateHandlingMode});
    } else {
      return get_router_delegate.GetDelegate.as($this.routerDelegate);
    }
  };
  extension_navigation['NavTwoExt|get#createDelegate'] = function NavTwoExt$124get$35createDelegate($this) {
    return dart.fn(opts => {
      let notFoundRoute = opts && 'notFoundRoute' in opts ? opts.notFoundRoute : null;
      let navigatorObservers = opts && 'navigatorObservers' in opts ? opts.navigatorObservers : null;
      let transitionDelegate = opts && 'transitionDelegate' in opts ? opts.transitionDelegate : null;
      let backButtonPopMode = opts && 'backButtonPopMode' in opts ? opts.backButtonPopMode : C[181] || CT.C181;
      let preventDuplicateHandlingMode = opts && 'preventDuplicateHandlingMode' in opts ? opts.preventDuplicateHandlingMode : C[182] || CT.C182;
      return extension_navigation['NavTwoExt|createDelegate']($this, {notFoundRoute: notFoundRoute, navigatorObservers: navigatorObservers, transitionDelegate: transitionDelegate, backButtonPopMode: backButtonPopMode, preventDuplicateHandlingMode: preventDuplicateHandlingMode});
    }, T$.__ToGetDelegate());
  };
  extension_navigation['OverlayExt|showOverlay'] = function OverlayExt$124showOverlay(T, $this, opts) {
    let asyncFunction = opts && 'asyncFunction' in opts ? opts.asyncFunction : null;
    let opacityColor = opts && 'opacityColor' in opts ? opts.opacityColor : C[228] || CT.C228;
    let loadingWidget = opts && 'loadingWidget' in opts ? opts.loadingWidget : null;
    let opacity = opts && 'opacity' in opts ? opts.opacity : 0.5;
    return async.async(T, function* OverlayExt$124showOverlay() {
      let navigatorState = navigator.Navigator.of(dart.nullCheck(extension_navigation['GetNavigation|get#overlayContext'](get_main.Get)), {rootNavigator: false});
      let overlayState = dart.nullCheck(navigatorState.overlay);
      let overlayEntryOpacity = new overlay.OverlayEntry.new({builder: dart.fn(context => new basic.Opacity.new({opacity: opacity, child: new container.Container.new({color: opacityColor, $creationLocationd_0dea112b090073317d4: C[229] || CT.C229}), $creationLocationd_0dea112b090073317d4: C[230] || CT.C230}), T$.BuildContextToOpacity())});
      let overlayEntryLoader = new overlay.OverlayEntry.new({builder: dart.fn(context => {
          let t168;
          t168 = loadingWidget;
          return t168 == null ? C[231] || CT.C231 : t168;
        }, T$.BuildContextToWidget())});
      overlayState.insert(overlayEntryOpacity);
      overlayState.insert(overlayEntryLoader);
      let data = null;
      try {
        data = (yield asyncFunction());
      } catch (e) {
        let _ = dart.getThrown(e);
        if (core.Exception.is(_)) {
          overlayEntryLoader.remove();
          overlayEntryOpacity.remove();
          dart.rethrow(e);
        } else
          throw e;
      }
      overlayEntryLoader.remove();
      overlayEntryOpacity.remove();
      return data;
    });
  };
  extension_navigation['OverlayExt|get#showOverlay'] = function OverlayExt$124get$35showOverlay($this) {
    return dart.fn((T, opts) => {
      let asyncFunction = opts && 'asyncFunction' in opts ? opts.asyncFunction : null;
      let opacityColor = opts && 'opacityColor' in opts ? opts.opacityColor : C[228] || CT.C228;
      let loadingWidget = opts && 'loadingWidget' in opts ? opts.loadingWidget : null;
      let opacity = opts && 'opacity' in opts ? opts.opacity : 0.5;
      return extension_navigation['OverlayExt|showOverlay'](T, $this, {asyncFunction: asyncFunction, opacityColor: opacityColor, loadingWidget: loadingWidget, opacity: opacity});
    }, T$.__ToFutureOfT());
  };
  dart.copyProperties(extension_navigation, {
    get navigator() {
      return extension_navigation['GetNavigation|get#key'](get_main.Get).currentState;
    }
  });
  dart.defineLazy(extension_navigation, {
    /*extension_navigation['GetNavigation|_getxController']*/get ['GetNavigation|_getxController']() {
      return new root_controller.GetMaterialController.new();
    },
    set ['GetNavigation|_getxController'](_) {},
    /*extension_navigation['NavTwoExt|_routeTree']*/get ['NavTwoExt|_routeTree']() {
      return new parse_route.ParseRouteTree.new({routes: T$.JSArrayOfGetPage().of([])});
    }
  }, false);
  var isPersistent$ = dart.privateName(bottomsheet$, "GetModalBottomSheetRoute.isPersistent");
  var builder$7 = dart.privateName(bottomsheet$, "GetModalBottomSheetRoute.builder");
  var theme$3 = dart.privateName(bottomsheet$, "GetModalBottomSheetRoute.theme");
  var isScrollControlled$ = dart.privateName(bottomsheet$, "GetModalBottomSheetRoute.isScrollControlled");
  var backgroundColor$0 = dart.privateName(bottomsheet$, "GetModalBottomSheetRoute.backgroundColor");
  var elevation$ = dart.privateName(bottomsheet$, "GetModalBottomSheetRoute.elevation");
  var shape$ = dart.privateName(bottomsheet$, "GetModalBottomSheetRoute.shape");
  var clipBehavior$ = dart.privateName(bottomsheet$, "GetModalBottomSheetRoute.clipBehavior");
  var modalBarrierColor$ = dart.privateName(bottomsheet$, "GetModalBottomSheetRoute.modalBarrierColor");
  var isDismissible$0 = dart.privateName(bottomsheet$, "GetModalBottomSheetRoute.isDismissible");
  var enableDrag$ = dart.privateName(bottomsheet$, "GetModalBottomSheetRoute.enableDrag");
  var enterBottomSheetDuration$ = dart.privateName(bottomsheet$, "GetModalBottomSheetRoute.enterBottomSheetDuration");
  var exitBottomSheetDuration$ = dart.privateName(bottomsheet$, "GetModalBottomSheetRoute.exitBottomSheetDuration");
  var removeTop$ = dart.privateName(bottomsheet$, "GetModalBottomSheetRoute.removeTop");
  var barrierLabel$0 = dart.privateName(bottomsheet$, "GetModalBottomSheetRoute.barrierLabel");
  var _animationController = dart.privateName(bottomsheet$, "_animationController");
  const _is_GetModalBottomSheetRoute_default = Symbol('_is_GetModalBottomSheetRoute_default');
  bottomsheet$.GetModalBottomSheetRoute$ = dart.generic(T => {
    var __t$_GetModalBottomSheetOfT = () => (__t$_GetModalBottomSheetOfT = dart.constFn(bottomsheet$._GetModalBottomSheet$(T)))();
    class GetModalBottomSheetRoute extends routes.PopupRoute$(T) {
      get isPersistent() {
        return this[isPersistent$];
      }
      set isPersistent(value) {
        super.isPersistent = value;
      }
      get builder() {
        return this[builder$7];
      }
      set builder(value) {
        super.builder = value;
      }
      get theme() {
        return this[theme$3];
      }
      set theme(value) {
        super.theme = value;
      }
      get isScrollControlled() {
        return this[isScrollControlled$];
      }
      set isScrollControlled(value) {
        super.isScrollControlled = value;
      }
      get backgroundColor() {
        return this[backgroundColor$0];
      }
      set backgroundColor(value) {
        super.backgroundColor = value;
      }
      get elevation() {
        return this[elevation$];
      }
      set elevation(value) {
        super.elevation = value;
      }
      get shape() {
        return this[shape$];
      }
      set shape(value) {
        super.shape = value;
      }
      get clipBehavior() {
        return this[clipBehavior$];
      }
      set clipBehavior(value) {
        super.clipBehavior = value;
      }
      get modalBarrierColor() {
        return this[modalBarrierColor$];
      }
      set modalBarrierColor(value) {
        super.modalBarrierColor = value;
      }
      get isDismissible() {
        return this[isDismissible$0];
      }
      set isDismissible(value) {
        super.isDismissible = value;
      }
      get enableDrag() {
        return this[enableDrag$];
      }
      set enableDrag(value) {
        super.enableDrag = value;
      }
      get enterBottomSheetDuration() {
        return this[enterBottomSheetDuration$];
      }
      set enterBottomSheetDuration(value) {
        super.enterBottomSheetDuration = value;
      }
      get exitBottomSheetDuration() {
        return this[exitBottomSheetDuration$];
      }
      set exitBottomSheetDuration(value) {
        super.exitBottomSheetDuration = value;
      }
      get removeTop() {
        return this[removeTop$];
      }
      set removeTop(value) {
        super.removeTop = value;
      }
      get barrierLabel() {
        return this[barrierLabel$0];
      }
      set barrierLabel(value) {
        super.barrierLabel = value;
      }
      static ['_#new#tearOff'](T, opts) {
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let theme = opts && 'theme' in opts ? opts.theme : null;
        let barrierLabel = opts && 'barrierLabel' in opts ? opts.barrierLabel : null;
        let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
        let isPersistent = opts && 'isPersistent' in opts ? opts.isPersistent : null;
        let elevation = opts && 'elevation' in opts ? opts.elevation : null;
        let shape = opts && 'shape' in opts ? opts.shape : null;
        let removeTop = opts && 'removeTop' in opts ? opts.removeTop : true;
        let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
        let modalBarrierColor = opts && 'modalBarrierColor' in opts ? opts.modalBarrierColor : null;
        let isDismissible = opts && 'isDismissible' in opts ? opts.isDismissible : true;
        let enableDrag = opts && 'enableDrag' in opts ? opts.enableDrag : true;
        let isScrollControlled = opts && 'isScrollControlled' in opts ? opts.isScrollControlled : null;
        let settings = opts && 'settings' in opts ? opts.settings : null;
        let enterBottomSheetDuration = opts && 'enterBottomSheetDuration' in opts ? opts.enterBottomSheetDuration : C[202] || CT.C202;
        let exitBottomSheetDuration = opts && 'exitBottomSheetDuration' in opts ? opts.exitBottomSheetDuration : C[25] || CT.C25;
        return new (bottomsheet$.GetModalBottomSheetRoute$(T)).new({builder: builder, theme: theme, barrierLabel: barrierLabel, backgroundColor: backgroundColor, isPersistent: isPersistent, elevation: elevation, shape: shape, removeTop: removeTop, clipBehavior: clipBehavior, modalBarrierColor: modalBarrierColor, isDismissible: isDismissible, enableDrag: enableDrag, isScrollControlled: isScrollControlled, settings: settings, enterBottomSheetDuration: enterBottomSheetDuration, exitBottomSheetDuration: exitBottomSheetDuration});
      }
      get transitionDuration() {
        return C[237] || CT.C237;
      }
      get barrierDismissible() {
        return this.isDismissible;
      }
      get barrierColor() {
        let t170;
        t170 = this.modalBarrierColor;
        return t170 == null ? colors.Colors.black54 : t170;
      }
      dispose() {
        router_report.RouterReportManager.reportRouteDispose(this);
        super.dispose();
      }
      createAnimationController() {
        if (!(this[_animationController] == null)) dart.assertFailed(null, I[32], 66, 12, "_animationController == null");
        this[_animationController] = bottom_sheet.BottomSheet.createAnimationController(dart.nullCheck(dart.nullCheck(extension_navigation.navigator).overlay));
        dart.nullCheck(this[_animationController]).duration = this.enterBottomSheetDuration;
        dart.nullCheck(this[_animationController]).reverseDuration = this.exitBottomSheetDuration;
        return dart.nullCheck(this[_animationController]);
      }
      buildPage(context, animation, secondaryAnimation) {
        let t170, t170$, t170$0, t170$1, t170$2, t170$3;
        let sheetTheme = (t170$ = (t170 = this.theme, t170 == null ? null : t170.bottomSheetTheme), t170$ == null ? theme$.Theme.of(context).bottomSheetTheme : t170$);
        let bottomSheet = media_query.MediaQuery.removePadding({context: context, removeTop: this.removeTop, child: new basic.Padding.new({padding: new edge_insets.EdgeInsets.only({bottom: media_query.MediaQuery.of(context).viewInsets.bottom}), child: new (__t$_GetModalBottomSheetOfT()).new({route: this, backgroundColor: (t170$1 = (t170$0 = this.backgroundColor, t170$0 == null ? sheetTheme.modalBackgroundColor : t170$0), t170$1 == null ? sheetTheme.backgroundColor : t170$1), elevation: (t170$3 = (t170$2 = this.elevation, t170$2 == null ? sheetTheme.modalElevation : t170$2), t170$3 == null ? sheetTheme.elevation : t170$3), shape: this.shape, clipBehavior: this.clipBehavior, isScrollControlled: this.isScrollControlled, enableDrag: this.enableDrag, $creationLocationd_0dea112b090073317d4: C[238] || CT.C238}), $creationLocationd_0dea112b090073317d4: C[239] || CT.C239}), $creationLocationd_0dea112b090073317d4: C[240] || CT.C240});
        if (this.theme != null) bottomSheet = new theme$.Theme.new({data: dart.nullCheck(this.theme), child: bottomSheet, $creationLocationd_0dea112b090073317d4: C[241] || CT.C241});
        return bottomSheet;
      }
    }
    (GetModalBottomSheetRoute.new = function(opts) {
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let theme = opts && 'theme' in opts ? opts.theme : null;
      let barrierLabel = opts && 'barrierLabel' in opts ? opts.barrierLabel : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let isPersistent = opts && 'isPersistent' in opts ? opts.isPersistent : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let removeTop = opts && 'removeTop' in opts ? opts.removeTop : true;
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
      let modalBarrierColor = opts && 'modalBarrierColor' in opts ? opts.modalBarrierColor : null;
      let isDismissible = opts && 'isDismissible' in opts ? opts.isDismissible : true;
      let enableDrag = opts && 'enableDrag' in opts ? opts.enableDrag : true;
      let isScrollControlled = opts && 'isScrollControlled' in opts ? opts.isScrollControlled : null;
      let settings = opts && 'settings' in opts ? opts.settings : null;
      let enterBottomSheetDuration = opts && 'enterBottomSheetDuration' in opts ? opts.enterBottomSheetDuration : C[202] || CT.C202;
      let exitBottomSheetDuration = opts && 'exitBottomSheetDuration' in opts ? opts.exitBottomSheetDuration : C[25] || CT.C25;
      this[_animationController] = null;
      this[builder$7] = builder;
      this[theme$3] = theme;
      this[barrierLabel$0] = barrierLabel;
      this[backgroundColor$0] = backgroundColor;
      this[isPersistent$] = isPersistent;
      this[elevation$] = elevation;
      this[shape$] = shape;
      this[removeTop$] = removeTop;
      this[clipBehavior$] = clipBehavior;
      this[modalBarrierColor$] = modalBarrierColor;
      this[isDismissible$0] = isDismissible;
      this[enableDrag$] = enableDrag;
      this[isScrollControlled$] = isScrollControlled;
      this[enterBottomSheetDuration$] = enterBottomSheetDuration;
      this[exitBottomSheetDuration$] = exitBottomSheetDuration;
      GetModalBottomSheetRoute.__proto__.new.call(this, {settings: settings});
      router_report.RouterReportManager.reportCurrentRoute(this);
    }).prototype = GetModalBottomSheetRoute.prototype;
    dart.addTypeTests(GetModalBottomSheetRoute);
    GetModalBottomSheetRoute.prototype[_is_GetModalBottomSheetRoute_default] = true;
    dart.addTypeCaches(GetModalBottomSheetRoute);
    dart.setMethodSignature(GetModalBottomSheetRoute, () => ({
      __proto__: dart.getMethods(GetModalBottomSheetRoute.__proto__),
      buildPage: dart.fnType(framework.Widget, [framework.BuildContext, animation.Animation$(core.double), animation.Animation$(core.double)])
    }));
    dart.setGetterSignature(GetModalBottomSheetRoute, () => ({
      __proto__: dart.getGetters(GetModalBottomSheetRoute.__proto__),
      transitionDuration: core.Duration,
      barrierDismissible: core.bool,
      barrierColor: ui.Color
    }));
    dart.setLibraryUri(GetModalBottomSheetRoute, I[33]);
    dart.setFieldSignature(GetModalBottomSheetRoute, () => ({
      __proto__: dart.getFields(GetModalBottomSheetRoute.__proto__),
      isPersistent: dart.finalFieldType(dart.nullable(core.bool)),
      builder: dart.finalFieldType(dart.nullable(dart.fnType(framework.Widget, [framework.BuildContext]))),
      theme: dart.finalFieldType(dart.nullable(theme_data.ThemeData)),
      isScrollControlled: dart.finalFieldType(core.bool),
      backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
      elevation: dart.finalFieldType(dart.nullable(core.double)),
      shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
      clipBehavior: dart.finalFieldType(dart.nullable(ui.Clip)),
      modalBarrierColor: dart.finalFieldType(dart.nullable(ui.Color)),
      isDismissible: dart.finalFieldType(core.bool),
      enableDrag: dart.finalFieldType(core.bool),
      enterBottomSheetDuration: dart.finalFieldType(core.Duration),
      exitBottomSheetDuration: dart.finalFieldType(core.Duration),
      removeTop: dart.finalFieldType(core.bool),
      barrierLabel: dart.finalFieldType(dart.nullable(core.String)),
      [_animationController]: dart.fieldType(dart.nullable(animation_controller.AnimationController))
    }));
    return GetModalBottomSheetRoute;
  });
  bottomsheet$.GetModalBottomSheetRoute = bottomsheet$.GetModalBottomSheetRoute$();
  dart.addTypeTests(bottomsheet$.GetModalBottomSheetRoute, _is_GetModalBottomSheetRoute_default);
  var isPersistent$0 = dart.privateName(bottomsheet$, "_GetModalBottomSheet.isPersistent");
  var route$2 = dart.privateName(bottomsheet$, "_GetModalBottomSheet.route");
  var isScrollControlled$0 = dart.privateName(bottomsheet$, "_GetModalBottomSheet.isScrollControlled");
  var backgroundColor$1 = dart.privateName(bottomsheet$, "_GetModalBottomSheet.backgroundColor");
  var elevation$0 = dart.privateName(bottomsheet$, "_GetModalBottomSheet.elevation");
  var shape$0 = dart.privateName(bottomsheet$, "_GetModalBottomSheet.shape");
  var clipBehavior$0 = dart.privateName(bottomsheet$, "_GetModalBottomSheet.clipBehavior");
  var enableDrag$0 = dart.privateName(bottomsheet$, "_GetModalBottomSheet.enableDrag");
  const _is__GetModalBottomSheet_default = Symbol('_is__GetModalBottomSheet_default');
  bottomsheet$._GetModalBottomSheet$ = dart.generic(T => {
    var __t$_GetModalBottomSheetStateOfT = () => (__t$_GetModalBottomSheetStateOfT = dart.constFn(bottomsheet$._GetModalBottomSheetState$(T)))();
    class _GetModalBottomSheet extends framework.StatefulWidget {
      get isPersistent() {
        return this[isPersistent$0];
      }
      set isPersistent(value) {
        super.isPersistent = value;
      }
      get route() {
        return this[route$2];
      }
      set route(value) {
        super.route = value;
      }
      get isScrollControlled() {
        return this[isScrollControlled$0];
      }
      set isScrollControlled(value) {
        super.isScrollControlled = value;
      }
      get backgroundColor() {
        return this[backgroundColor$1];
      }
      set backgroundColor(value) {
        super.backgroundColor = value;
      }
      get elevation() {
        return this[elevation$0];
      }
      set elevation(value) {
        super.elevation = value;
      }
      get shape() {
        return this[shape$0];
      }
      set shape(value) {
        super.shape = value;
      }
      get clipBehavior() {
        return this[clipBehavior$0];
      }
      set clipBehavior(value) {
        super.clipBehavior = value;
      }
      get enableDrag() {
        return this[enableDrag$0];
      }
      set enableDrag(value) {
        super.enableDrag = value;
      }
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let route = opts && 'route' in opts ? opts.route : null;
        let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
        let elevation = opts && 'elevation' in opts ? opts.elevation : null;
        let shape = opts && 'shape' in opts ? opts.shape : null;
        let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
        let isScrollControlled = opts && 'isScrollControlled' in opts ? opts.isScrollControlled : false;
        let enableDrag = opts && 'enableDrag' in opts ? opts.enableDrag : true;
        let isPersistent = opts && 'isPersistent' in opts ? opts.isPersistent : false;
        return new (bottomsheet$._GetModalBottomSheet$(T)).new({key: key, route: route, backgroundColor: backgroundColor, elevation: elevation, shape: shape, clipBehavior: clipBehavior, isScrollControlled: isScrollControlled, enableDrag: enableDrag, isPersistent: isPersistent, $creationLocationd_0dea112b090073317d4: C[242] || CT.C242});
      }
      createState() {
        return new (__t$_GetModalBottomSheetStateOfT()).new();
      }
    }
    (_GetModalBottomSheet.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let route = opts && 'route' in opts ? opts.route : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
      let isScrollControlled = opts && 'isScrollControlled' in opts ? opts.isScrollControlled : false;
      let enableDrag = opts && 'enableDrag' in opts ? opts.enableDrag : true;
      let isPersistent = opts && 'isPersistent' in opts ? opts.isPersistent : false;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[route$2] = route;
      this[backgroundColor$1] = backgroundColor;
      this[elevation$0] = elevation;
      this[shape$0] = shape;
      this[clipBehavior$0] = clipBehavior;
      this[isScrollControlled$0] = isScrollControlled;
      this[enableDrag$0] = enableDrag;
      this[isPersistent$0] = isPersistent;
      _GetModalBottomSheet.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = _GetModalBottomSheet.prototype;
    dart.addTypeTests(_GetModalBottomSheet);
    _GetModalBottomSheet.prototype[_is__GetModalBottomSheet_default] = true;
    dart.addTypeCaches(_GetModalBottomSheet);
    dart.setMethodSignature(_GetModalBottomSheet, () => ({
      __proto__: dart.getMethods(_GetModalBottomSheet.__proto__),
      createState: dart.fnType(bottomsheet$._GetModalBottomSheetState$(T), [])
    }));
    dart.setLibraryUri(_GetModalBottomSheet, I[33]);
    dart.setFieldSignature(_GetModalBottomSheet, () => ({
      __proto__: dart.getFields(_GetModalBottomSheet.__proto__),
      isPersistent: dart.finalFieldType(core.bool),
      route: dart.finalFieldType(dart.nullable(bottomsheet$.GetModalBottomSheetRoute$(T))),
      isScrollControlled: dart.finalFieldType(core.bool),
      backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
      elevation: dart.finalFieldType(dart.nullable(core.double)),
      shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
      clipBehavior: dart.finalFieldType(dart.nullable(ui.Clip)),
      enableDrag: dart.finalFieldType(core.bool)
    }));
    return _GetModalBottomSheet;
  });
  bottomsheet$._GetModalBottomSheet = bottomsheet$._GetModalBottomSheet$();
  dart.addTypeTests(bottomsheet$._GetModalBottomSheet, _is__GetModalBottomSheet_default);
  var _getRouteLabel = dart.privateName(bottomsheet$, "_getRouteLabel");
  const _is__GetModalBottomSheetState_default = Symbol('_is__GetModalBottomSheetState_default');
  bottomsheet$._GetModalBottomSheetState$ = dart.generic(T => {
    class _GetModalBottomSheetState extends framework.State$(bottomsheet$._GetModalBottomSheet$(T)) {
      [_getRouteLabel](localizations) {
        if (theme$.Theme.of(this.context).platform === platform$.TargetPlatform.android || theme$.Theme.of(this.context).platform === platform$.TargetPlatform.fuchsia) {
          return localizations.dialogLabel;
        } else {
          return "";
        }
      }
      build(context) {
        if (!debug.debugCheckHasMediaQuery(context)) dart.assertFailed(null, I[32], 143, 12, "debugCheckHasMediaQuery(context)");
        if (!debug$.debugCheckHasMaterialLocalizations(context)) dart.assertFailed(null, I[32], 144, 12, "debugCheckHasMaterialLocalizations(context)");
        let mediaQuery = media_query.MediaQuery.of(context);
        let localizations = material_localizations.MaterialLocalizations.of(context);
        let routeLabel = this[_getRouteLabel](localizations);
        return new transitions.AnimatedBuilder.new({animation: dart.nullCheck(dart.nullCheck(this.widget.route).animation), builder: dart.fn((context, child) => {
            let animationValue = mediaQuery.accessibleNavigation ? 1.0 : dart.nullCheck(dart.nullCheck(this.widget.route).animation).value;
            return new basic.Semantics.new({scopesRoute: true, namesRoute: true, label: routeLabel, explicitChildNodes: true, child: new basic.ClipRect.new({child: new basic.CustomSingleChildLayout.new({delegate: new bottomsheet$._GetModalBottomSheetLayout.new(animationValue, this.widget.isScrollControlled), child: this.widget.isPersistent === false ? new bottom_sheet.BottomSheet.new({animationController: dart.nullCheck(this.widget.route)[_animationController], onClosing: dart.fn(() => {
                      if (dart.nullCheck(this.widget.route).isCurrent) {
                        navigator.Navigator.pop(T$.ObjectN(), context);
                      }
                    }, T$.VoidTovoid()), builder: dart.nullCheck(dart.nullCheck(this.widget.route).builder), backgroundColor: this.widget.backgroundColor, elevation: this.widget.elevation, shape: this.widget.shape, clipBehavior: this.widget.clipBehavior, enableDrag: this.widget.enableDrag, $creationLocationd_0dea112b090073317d4: C[243] || CT.C243}) : new scaffold.Scaffold.new({bottomSheet: new bottom_sheet.BottomSheet.new({animationController: dart.nullCheck(this.widget.route)[_animationController], onClosing: dart.fn(() => {
                      }, T$.VoidTovoid()), builder: dart.nullCheck(dart.nullCheck(this.widget.route).builder), backgroundColor: this.widget.backgroundColor, elevation: this.widget.elevation, shape: this.widget.shape, clipBehavior: this.widget.clipBehavior, enableDrag: this.widget.enableDrag, $creationLocationd_0dea112b090073317d4: C[244] || CT.C244}), $creationLocationd_0dea112b090073317d4: C[245] || CT.C245}), $creationLocationd_0dea112b090073317d4: C[246] || CT.C246}), $creationLocationd_0dea112b090073317d4: C[247] || CT.C247}), $creationLocationd_0dea112b090073317d4: C[248] || CT.C248});
          }, T$.BuildContextAndWidgetNToSemantics()), $creationLocationd_0dea112b090073317d4: C[249] || CT.C249});
      }
      static ['_#new#tearOff'](T) {
        return new (bottomsheet$._GetModalBottomSheetState$(T)).new();
      }
    }
    (_GetModalBottomSheetState.new = function() {
      _GetModalBottomSheetState.__proto__.new.call(this);
      ;
    }).prototype = _GetModalBottomSheetState.prototype;
    dart.addTypeTests(_GetModalBottomSheetState);
    _GetModalBottomSheetState.prototype[_is__GetModalBottomSheetState_default] = true;
    dart.addTypeCaches(_GetModalBottomSheetState);
    dart.setMethodSignature(_GetModalBottomSheetState, () => ({
      __proto__: dart.getMethods(_GetModalBottomSheetState.__proto__),
      [_getRouteLabel]: dart.fnType(core.String, [material_localizations.MaterialLocalizations]),
      build: dart.fnType(framework.Widget, [framework.BuildContext])
    }));
    dart.setLibraryUri(_GetModalBottomSheetState, I[33]);
    return _GetModalBottomSheetState;
  });
  bottomsheet$._GetModalBottomSheetState = bottomsheet$._GetModalBottomSheetState$();
  dart.addTypeTests(bottomsheet$._GetModalBottomSheetState, _is__GetModalBottomSheetState_default);
  var isPersistent$1 = dart.privateName(bottomsheet$, "_GetPerModalBottomSheet.isPersistent");
  var route$3 = dart.privateName(bottomsheet$, "_GetPerModalBottomSheet.route");
  var isScrollControlled$1 = dart.privateName(bottomsheet$, "_GetPerModalBottomSheet.isScrollControlled");
  var backgroundColor$2 = dart.privateName(bottomsheet$, "_GetPerModalBottomSheet.backgroundColor");
  var elevation$1 = dart.privateName(bottomsheet$, "_GetPerModalBottomSheet.elevation");
  var shape$1 = dart.privateName(bottomsheet$, "_GetPerModalBottomSheet.shape");
  var clipBehavior$1 = dart.privateName(bottomsheet$, "_GetPerModalBottomSheet.clipBehavior");
  var enableDrag$1 = dart.privateName(bottomsheet$, "_GetPerModalBottomSheet.enableDrag");
  const _is__GetPerModalBottomSheet_default = Symbol('_is__GetPerModalBottomSheet_default');
  bottomsheet$._GetPerModalBottomSheet$ = dart.generic(T => {
    var __t$_GetPerModalBottomSheetStateOfT = () => (__t$_GetPerModalBottomSheetStateOfT = dart.constFn(bottomsheet$._GetPerModalBottomSheetState$(T)))();
    class _GetPerModalBottomSheet extends framework.StatefulWidget {
      get isPersistent() {
        return this[isPersistent$1];
      }
      set isPersistent(value) {
        super.isPersistent = value;
      }
      get route() {
        return this[route$3];
      }
      set route(value) {
        super.route = value;
      }
      get isScrollControlled() {
        return this[isScrollControlled$1];
      }
      set isScrollControlled(value) {
        super.isScrollControlled = value;
      }
      get backgroundColor() {
        return this[backgroundColor$2];
      }
      set backgroundColor(value) {
        super.backgroundColor = value;
      }
      get elevation() {
        return this[elevation$1];
      }
      set elevation(value) {
        super.elevation = value;
      }
      get shape() {
        return this[shape$1];
      }
      set shape(value) {
        super.shape = value;
      }
      get clipBehavior() {
        return this[clipBehavior$1];
      }
      set clipBehavior(value) {
        super.clipBehavior = value;
      }
      get enableDrag() {
        return this[enableDrag$1];
      }
      set enableDrag(value) {
        super.enableDrag = value;
      }
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let route = opts && 'route' in opts ? opts.route : null;
        let isPersistent = opts && 'isPersistent' in opts ? opts.isPersistent : null;
        let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
        let elevation = opts && 'elevation' in opts ? opts.elevation : null;
        let shape = opts && 'shape' in opts ? opts.shape : null;
        let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
        let isScrollControlled = opts && 'isScrollControlled' in opts ? opts.isScrollControlled : false;
        let enableDrag = opts && 'enableDrag' in opts ? opts.enableDrag : true;
        return new (bottomsheet$._GetPerModalBottomSheet$(T)).new({key: key, route: route, isPersistent: isPersistent, backgroundColor: backgroundColor, elevation: elevation, shape: shape, clipBehavior: clipBehavior, isScrollControlled: isScrollControlled, enableDrag: enableDrag, $creationLocationd_0dea112b090073317d4: C[250] || CT.C250});
      }
      createState() {
        return new (__t$_GetPerModalBottomSheetStateOfT()).new();
      }
    }
    (_GetPerModalBottomSheet.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let route = opts && 'route' in opts ? opts.route : null;
      let isPersistent = opts && 'isPersistent' in opts ? opts.isPersistent : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
      let isScrollControlled = opts && 'isScrollControlled' in opts ? opts.isScrollControlled : false;
      let enableDrag = opts && 'enableDrag' in opts ? opts.enableDrag : true;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[route$3] = route;
      this[isPersistent$1] = isPersistent;
      this[backgroundColor$2] = backgroundColor;
      this[elevation$1] = elevation;
      this[shape$1] = shape;
      this[clipBehavior$1] = clipBehavior;
      this[isScrollControlled$1] = isScrollControlled;
      this[enableDrag$1] = enableDrag;
      _GetPerModalBottomSheet.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = _GetPerModalBottomSheet.prototype;
    dart.addTypeTests(_GetPerModalBottomSheet);
    _GetPerModalBottomSheet.prototype[_is__GetPerModalBottomSheet_default] = true;
    dart.addTypeCaches(_GetPerModalBottomSheet);
    dart.setMethodSignature(_GetPerModalBottomSheet, () => ({
      __proto__: dart.getMethods(_GetPerModalBottomSheet.__proto__),
      createState: dart.fnType(bottomsheet$._GetPerModalBottomSheetState$(T), [])
    }));
    dart.setLibraryUri(_GetPerModalBottomSheet, I[33]);
    dart.setFieldSignature(_GetPerModalBottomSheet, () => ({
      __proto__: dart.getFields(_GetPerModalBottomSheet.__proto__),
      isPersistent: dart.finalFieldType(dart.nullable(core.bool)),
      route: dart.finalFieldType(dart.nullable(bottomsheet$.GetModalBottomSheetRoute$(T))),
      isScrollControlled: dart.finalFieldType(core.bool),
      backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
      elevation: dart.finalFieldType(dart.nullable(core.double)),
      shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
      clipBehavior: dart.finalFieldType(dart.nullable(ui.Clip)),
      enableDrag: dart.finalFieldType(core.bool)
    }));
    return _GetPerModalBottomSheet;
  });
  bottomsheet$._GetPerModalBottomSheet = bottomsheet$._GetPerModalBottomSheet$();
  dart.addTypeTests(bottomsheet$._GetPerModalBottomSheet, _is__GetPerModalBottomSheet_default);
  const _is__GetPerModalBottomSheetState_default = Symbol('_is__GetPerModalBottomSheetState_default');
  bottomsheet$._GetPerModalBottomSheetState$ = dart.generic(T => {
    class _GetPerModalBottomSheetState extends framework.State$(bottomsheet$._GetPerModalBottomSheet$(T)) {
      [_getRouteLabel](localizations) {
        if (theme$.Theme.of(this.context).platform === platform$.TargetPlatform.android || theme$.Theme.of(this.context).platform === platform$.TargetPlatform.fuchsia) {
          return localizations.dialogLabel;
        } else {
          return "";
        }
      }
      build(context) {
        if (!debug.debugCheckHasMediaQuery(context)) dart.assertFailed(null, I[32], 246, 12, "debugCheckHasMediaQuery(context)");
        if (!debug$.debugCheckHasMaterialLocalizations(context)) dart.assertFailed(null, I[32], 247, 12, "debugCheckHasMaterialLocalizations(context)");
        let mediaQuery = media_query.MediaQuery.of(context);
        let localizations = material_localizations.MaterialLocalizations.of(context);
        let routeLabel = this[_getRouteLabel](localizations);
        return new transitions.AnimatedBuilder.new({animation: dart.nullCheck(dart.nullCheck(this.widget.route).animation), builder: dart.fn((context, child) => {
            let animationValue = mediaQuery.accessibleNavigation ? 1.0 : dart.nullCheck(dart.nullCheck(this.widget.route).animation).value;
            return new basic.Semantics.new({scopesRoute: true, namesRoute: true, label: routeLabel, explicitChildNodes: true, child: new basic.ClipRect.new({child: new basic.CustomSingleChildLayout.new({delegate: new bottomsheet$._GetModalBottomSheetLayout.new(animationValue, this.widget.isScrollControlled), child: this.widget.isPersistent === false ? new bottom_sheet.BottomSheet.new({animationController: dart.nullCheck(this.widget.route)[_animationController], onClosing: dart.fn(() => {
                      if (dart.nullCheck(this.widget.route).isCurrent) {
                        navigator.Navigator.pop(T$.ObjectN(), context);
                      }
                    }, T$.VoidTovoid()), builder: dart.nullCheck(dart.nullCheck(this.widget.route).builder), backgroundColor: this.widget.backgroundColor, elevation: this.widget.elevation, shape: this.widget.shape, clipBehavior: this.widget.clipBehavior, enableDrag: this.widget.enableDrag, $creationLocationd_0dea112b090073317d4: C[251] || CT.C251}) : new scaffold.Scaffold.new({bottomSheet: new bottom_sheet.BottomSheet.new({animationController: dart.nullCheck(this.widget.route)[_animationController], onClosing: dart.fn(() => {
                      }, T$.VoidTovoid()), builder: dart.nullCheck(dart.nullCheck(this.widget.route).builder), backgroundColor: this.widget.backgroundColor, elevation: this.widget.elevation, shape: this.widget.shape, clipBehavior: this.widget.clipBehavior, enableDrag: this.widget.enableDrag, $creationLocationd_0dea112b090073317d4: C[252] || CT.C252}), $creationLocationd_0dea112b090073317d4: C[253] || CT.C253}), $creationLocationd_0dea112b090073317d4: C[254] || CT.C254}), $creationLocationd_0dea112b090073317d4: C[255] || CT.C255}), $creationLocationd_0dea112b090073317d4: C[256] || CT.C256});
          }, T$.BuildContextAndWidgetNToSemantics()), $creationLocationd_0dea112b090073317d4: C[257] || CT.C257});
      }
      static ['_#new#tearOff'](T) {
        return new (bottomsheet$._GetPerModalBottomSheetState$(T)).new();
      }
    }
    (_GetPerModalBottomSheetState.new = function() {
      _GetPerModalBottomSheetState.__proto__.new.call(this);
      ;
    }).prototype = _GetPerModalBottomSheetState.prototype;
    dart.addTypeTests(_GetPerModalBottomSheetState);
    _GetPerModalBottomSheetState.prototype[_is__GetPerModalBottomSheetState_default] = true;
    dart.addTypeCaches(_GetPerModalBottomSheetState);
    dart.setMethodSignature(_GetPerModalBottomSheetState, () => ({
      __proto__: dart.getMethods(_GetPerModalBottomSheetState.__proto__),
      [_getRouteLabel]: dart.fnType(core.String, [material_localizations.MaterialLocalizations]),
      build: dart.fnType(framework.Widget, [framework.BuildContext])
    }));
    dart.setLibraryUri(_GetPerModalBottomSheetState, I[33]);
    return _GetPerModalBottomSheetState;
  });
  bottomsheet$._GetPerModalBottomSheetState = bottomsheet$._GetPerModalBottomSheetState$();
  dart.addTypeTests(bottomsheet$._GetPerModalBottomSheetState, _is__GetPerModalBottomSheetState_default);
  bottomsheet$._GetModalBottomSheetLayout = class _GetModalBottomSheetLayout extends shifted_box.SingleChildLayoutDelegate {
    static ['_#new#tearOff'](progress, isScrollControlled) {
      return new bottomsheet$._GetModalBottomSheetLayout.new(progress, isScrollControlled);
    }
    getConstraintsForChild(constraints) {
      return new box$.BoxConstraints.new({minWidth: constraints.maxWidth, maxWidth: constraints.maxWidth, minHeight: 0.0, maxHeight: this.isScrollControlled ? constraints.maxHeight : constraints.maxHeight * 9.0 / 16.0});
    }
    getPositionForChild(size, childSize) {
      return new ui.Offset.new(0.0, size.height - childSize.height * this.progress);
    }
    shouldRelayout(oldDelegate) {
      bottomsheet$._GetModalBottomSheetLayout.as(oldDelegate);
      return this.progress !== oldDelegate.progress;
    }
  };
  (bottomsheet$._GetModalBottomSheetLayout.new = function(progress, isScrollControlled) {
    this.progress = progress;
    this.isScrollControlled = isScrollControlled;
    bottomsheet$._GetModalBottomSheetLayout.__proto__.new.call(this);
    ;
  }).prototype = bottomsheet$._GetModalBottomSheetLayout.prototype;
  dart.addTypeTests(bottomsheet$._GetModalBottomSheetLayout);
  dart.addTypeCaches(bottomsheet$._GetModalBottomSheetLayout);
  dart.setMethodSignature(bottomsheet$._GetModalBottomSheetLayout, () => ({
    __proto__: dart.getMethods(bottomsheet$._GetModalBottomSheetLayout.__proto__),
    shouldRelayout: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(bottomsheet$._GetModalBottomSheetLayout, I[33]);
  dart.setFieldSignature(bottomsheet$._GetModalBottomSheetLayout, () => ({
    __proto__: dart.getFields(bottomsheet$._GetModalBottomSheetLayout.__proto__),
    progress: dart.finalFieldType(core.double),
    isScrollControlled: dart.finalFieldType(core.bool)
  }));
  extension_instance['Inst|lazyPut'] = function Inst$124lazyPut(S, $this, builder, opts) {
    let tag = opts && 'tag' in opts ? opts.tag : null;
    let fenix = opts && 'fenix' in opts ? opts.fenix : false;
    get_instance.GetInstance.new().lazyPut(S, builder, {tag: tag, fenix: fenix});
  };
  extension_instance['Inst|get#lazyPut'] = function Inst$124get$35lazyPut($this) {
    return dart.fn((S, builder, opts) => {
      let tag = opts && 'tag' in opts ? opts.tag : null;
      let fenix = opts && 'fenix' in opts ? opts.fenix : false;
      return extension_instance['Inst|lazyPut'](S, $this, builder, {tag: tag, fenix: fenix});
    }, T$.Fn__Tovoid$1());
  };
  extension_instance['Inst|putAsync'] = function Inst$124putAsync(S, $this, builder, opts) {
    let tag = opts && 'tag' in opts ? opts.tag : null;
    let permanent = opts && 'permanent' in opts ? opts.permanent : false;
    return async.async(S, function* Inst$124putAsync() {
      return get_instance.GetInstance.new().putAsync(S, builder, {tag: tag, permanent: permanent});
    });
  };
  extension_instance['Inst|get#putAsync'] = function Inst$124get$35putAsync($this) {
    return dart.fn((S, builder, opts) => {
      let tag = opts && 'tag' in opts ? opts.tag : null;
      let permanent = opts && 'permanent' in opts ? opts.permanent : false;
      return extension_instance['Inst|putAsync'](S, $this, builder, {tag: tag, permanent: permanent});
    }, T$.Fn__ToFutureOfS());
  };
  extension_instance['Inst|create'] = function Inst$124create(S, $this, builder, opts) {
    let tag = opts && 'tag' in opts ? opts.tag : null;
    let permanent = opts && 'permanent' in opts ? opts.permanent : true;
    return get_instance.GetInstance.new().create(S, builder, {tag: tag, permanent: permanent});
  };
  extension_instance['Inst|get#create'] = function Inst$124get$35create($this) {
    return dart.fn((S, builder, opts) => {
      let tag = opts && 'tag' in opts ? opts.tag : null;
      let permanent = opts && 'permanent' in opts ? opts.permanent : true;
      return extension_instance['Inst|create'](S, $this, builder, {tag: tag, permanent: permanent});
    }, T$.Fn__Tovoid$2());
  };
  extension_instance['Inst|find'] = function Inst$124find(S, $this, opts) {
    let tag = opts && 'tag' in opts ? opts.tag : null;
    return get_instance.GetInstance.new().find(S, {tag: tag});
  };
  extension_instance['Inst|get#find'] = function Inst$124get$35find($this) {
    return dart.fn((S, opts) => {
      let tag = opts && 'tag' in opts ? opts.tag : null;
      return extension_instance['Inst|find'](S, $this, {tag: tag});
    }, T$.__ToS());
  };
  extension_instance['Inst|put'] = function Inst$124put(S, $this, dependency, opts) {
    let tag = opts && 'tag' in opts ? opts.tag : null;
    let permanent = opts && 'permanent' in opts ? opts.permanent : false;
    let builder = opts && 'builder' in opts ? opts.builder : null;
    return get_instance.GetInstance.new().put(S, dependency, {tag: tag, permanent: permanent});
  };
  extension_instance['Inst|get#put'] = function Inst$124get$35put($this) {
    return dart.fn((S, dependency, opts) => {
      let tag = opts && 'tag' in opts ? opts.tag : null;
      let permanent = opts && 'permanent' in opts ? opts.permanent : false;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      return extension_instance['Inst|put'](S, $this, dependency, {tag: tag, permanent: permanent, builder: builder});
    }, T$.S__ToS());
  };
  extension_instance['Inst|delete'] = function Inst$124delete(S, $this, opts) {
    let tag = opts && 'tag' in opts ? opts.tag : null;
    let force = opts && 'force' in opts ? opts.force : false;
    return async.async(core.bool, function* Inst$124delete() {
      return get_instance.GetInstance.new().delete(S, {tag: tag, force: force});
    });
  };
  extension_instance['Inst|get#delete'] = function Inst$124get$35delete($this) {
    return dart.fn((S, opts) => {
      let tag = opts && 'tag' in opts ? opts.tag : null;
      let force = opts && 'force' in opts ? opts.force : false;
      return extension_instance['Inst|delete'](S, $this, {tag: tag, force: force});
    }, T$.__ToFutureOfbool());
  };
  extension_instance['Inst|deleteAll'] = function Inst$124deleteAll($this, opts) {
    let force = opts && 'force' in opts ? opts.force : false;
    return async.async(dart.void, function* Inst$124deleteAll() {
      return get_instance.GetInstance.new().deleteAll({force: force});
    });
  };
  extension_instance['Inst|get#deleteAll'] = function Inst$124get$35deleteAll($this) {
    return dart.fn(opts => {
      let force = opts && 'force' in opts ? opts.force : false;
      return extension_instance['Inst|deleteAll']($this, {force: force});
    }, T$.__ToFutureOfvoid());
  };
  extension_instance['Inst|reloadAll'] = function Inst$124reloadAll($this, opts) {
    let force = opts && 'force' in opts ? opts.force : false;
    return get_instance.GetInstance.new().reloadAll({force: force});
  };
  extension_instance['Inst|get#reloadAll'] = function Inst$124get$35reloadAll($this) {
    return dart.fn(opts => {
      let force = opts && 'force' in opts ? opts.force : false;
      return extension_instance['Inst|reloadAll']($this, {force: force});
    }, T$.__Tovoid$2());
  };
  extension_instance['Inst|reload'] = function Inst$124reload(S, $this, opts) {
    let tag = opts && 'tag' in opts ? opts.tag : null;
    let key = opts && 'key' in opts ? opts.key : null;
    let force = opts && 'force' in opts ? opts.force : false;
    return get_instance.GetInstance.new().reload(S, {tag: tag, key: key, force: force});
  };
  extension_instance['Inst|get#reload'] = function Inst$124get$35reload($this) {
    return dart.fn((S, opts) => {
      let tag = opts && 'tag' in opts ? opts.tag : null;
      let key = opts && 'key' in opts ? opts.key : null;
      let force = opts && 'force' in opts ? opts.force : false;
      return extension_instance['Inst|reload'](S, $this, {tag: tag, key: key, force: force});
    }, T$.__Tovoid$3());
  };
  extension_instance['Inst|isRegistered'] = function Inst$124isRegistered(S, $this, opts) {
    let tag = opts && 'tag' in opts ? opts.tag : null;
    return get_instance.GetInstance.new().isRegistered(S, {tag: tag});
  };
  extension_instance['Inst|get#isRegistered'] = function Inst$124get$35isRegistered($this) {
    return dart.fn((S, opts) => {
      let tag = opts && 'tag' in opts ? opts.tag : null;
      return extension_instance['Inst|isRegistered'](S, $this, {tag: tag});
    }, T$.__Tobool());
  };
  extension_instance['Inst|isPrepared'] = function Inst$124isPrepared(S, $this, opts) {
    let tag = opts && 'tag' in opts ? opts.tag : null;
    return get_instance.GetInstance.new().isPrepared(S, {tag: tag});
  };
  extension_instance['Inst|get#isPrepared'] = function Inst$124get$35isPrepared($this) {
    return dart.fn((S, opts) => {
      let tag = opts && 'tag' in opts ? opts.tag : null;
      return extension_instance['Inst|isPrepared'](S, $this, {tag: tag});
    }, T$.__Tobool());
  };
  extension_instance['Inst|replace'] = function Inst$124replace(P, $this, child, opts) {
    let t193;
    let tag = opts && 'tag' in opts ? opts.tag : null;
    let info = get_instance.GetInstance.new().getInstanceInfo(P, {tag: tag});
    let permanent = (t193 = info.isPermanent, t193 == null ? false : t193);
    extension_instance['Inst|delete'](P, $this, {tag: tag, force: permanent});
    extension_instance['Inst|put'](P, $this, child, {tag: tag, permanent: permanent});
  };
  extension_instance['Inst|get#replace'] = function Inst$124get$35replace($this) {
    return dart.fn((P, child, opts) => {
      let tag = opts && 'tag' in opts ? opts.tag : null;
      return extension_instance['Inst|replace'](P, $this, child, {tag: tag});
    }, T$.P__Tovoid());
  };
  extension_instance['Inst|lazyReplace'] = function Inst$124lazyReplace(P, $this, builder, opts) {
    let t195, t195$;
    let tag = opts && 'tag' in opts ? opts.tag : null;
    let fenix = opts && 'fenix' in opts ? opts.fenix : null;
    let info = get_instance.GetInstance.new().getInstanceInfo(P, {tag: tag});
    let permanent = (t195 = info.isPermanent, t195 == null ? false : t195);
    extension_instance['Inst|delete'](P, $this, {tag: tag, force: permanent});
    extension_instance['Inst|lazyPut'](P, $this, builder, {tag: tag, fenix: (t195$ = fenix, t195$ == null ? permanent : t195$)});
  };
  extension_instance['Inst|get#lazyReplace'] = function Inst$124get$35lazyReplace($this) {
    return dart.fn((P, builder, opts) => {
      let tag = opts && 'tag' in opts ? opts.tag : null;
      let fenix = opts && 'fenix' in opts ? opts.fenix : null;
      return extension_instance['Inst|lazyReplace'](P, $this, builder, {tag: tag, fenix: fenix});
    }, T$.Fn__Tovoid$3());
  };
  const _is_RouterReportManager_default = Symbol('_is_RouterReportManager_default');
  router_report.RouterReportManager$ = dart.generic(T => {
    class RouterReportManager extends core.Object {
      printInstanceStack() {
        let t197, t196;
        t196 = get_main.Get;
        t197 = router_report.RouterReportManager._routesKey[$toString]();
        t196.log(t197);
      }
      static reportCurrentRoute(newRoute) {
        router_report.RouterReportManager._current = newRoute;
      }
      static reportDependencyLinkedToRoute(depedencyKey) {
        if (router_report.RouterReportManager._current == null) return;
        if (router_report.RouterReportManager._routesKey[$containsKey](router_report.RouterReportManager._current)) {
          dart.nullCheck(router_report.RouterReportManager._routesKey[$_get](dart.nullCheck(router_report.RouterReportManager._current)))[$add](depedencyKey);
        } else {
          router_report.RouterReportManager._routesKey[$_set](router_report.RouterReportManager._current, T$.JSArrayOfString().of([depedencyKey]));
        }
      }
      static clearRouteKeys() {
        router_report.RouterReportManager._routesKey[$clear]();
        router_report.RouterReportManager._routesByCreate[$clear]();
      }
      static appendRouteByCreate(i) {
        let t197, t196, t196$;
        t196 = router_report.RouterReportManager._routesByCreate;
        t197 = router_report.RouterReportManager._current;
        t196[$_get](t197) == null ? t196[$_set](t197, new (T$._HashSetOfFunction()).new()) : null;
        dart.nullCheck(router_report.RouterReportManager._routesByCreate[$_get](router_report.RouterReportManager._current)).add((t196$ = i.onDelete, t196$ === null ? null : dart.bind(t196$, 'call')));
      }
      static reportRouteDispose(disposed) {
        let t196;
        if (get_main.Get.smartManagement !== smart_management.SmartManagement.onlyBuilder) {
          t196 = get_core.ambiguate(binding.WidgetsBinding, binding.WidgetsBinding.instance);
          t196 == null ? null : t196.addPostFrameCallback(dart.fn(_ => {
            router_report.RouterReportManager._removeDependencyByRoute(disposed);
          }, T$.DurationTovoid()));
        }
      }
      static reportRouteWillDispose(disposed) {
        let t196;
        let keysToRemove = T$.JSArrayOfString().of([]);
        t196 = router_report.RouterReportManager._routesKey[$_get](disposed);
        t196 == null ? null : t196[$forEach](T$.StringTovoid().as(dart.bind(keysToRemove, $add)));
        if (router_report.RouterReportManager._routesByCreate[$containsKey](disposed)) {
          for (let onClose of dart.nullCheck(router_report.RouterReportManager._routesByCreate[$_get](disposed))) {
            dart.dcall(onClose, []);
          }
          dart.nullCheck(router_report.RouterReportManager._routesByCreate[$_get](disposed)).clear();
          router_report.RouterReportManager._routesByCreate[$remove](disposed);
        }
        for (let element of keysToRemove) {
          get_instance.GetInstance.new().markAsDirty(dart.dynamic, {key: element});
        }
        keysToRemove[$clear]();
      }
      static _removeDependencyByRoute(routeName) {
        let t196, t196$;
        let keysToRemove = T$.JSArrayOfString().of([]);
        t196 = router_report.RouterReportManager._routesKey[$_get](routeName);
        t196 == null ? null : t196[$forEach](T$.StringTovoid().as(dart.bind(keysToRemove, $add)));
        if (router_report.RouterReportManager._routesByCreate[$containsKey](routeName)) {
          for (let onClose of dart.nullCheck(router_report.RouterReportManager._routesByCreate[$_get](routeName))) {
            dart.dcall(onClose, []);
          }
          dart.nullCheck(router_report.RouterReportManager._routesByCreate[$_get](routeName)).clear();
          router_report.RouterReportManager._routesByCreate[$remove](routeName);
        }
        for (let element of keysToRemove) {
          let value = get_instance.GetInstance.new().delete(dart.dynamic, {key: element});
          if (value) {
            t196$ = router_report.RouterReportManager._routesKey[$_get](routeName);
            t196$ == null ? null : t196$[$remove](element);
          }
        }
        keysToRemove[$clear]();
      }
      static ['_#new#tearOff'](T) {
        return new (router_report.RouterReportManager$(T)).new();
      }
    }
    (RouterReportManager.new = function() {
      ;
    }).prototype = RouterReportManager.prototype;
    dart.addTypeTests(RouterReportManager);
    RouterReportManager.prototype[_is_RouterReportManager_default] = true;
    dart.addTypeCaches(RouterReportManager);
    dart.setMethodSignature(RouterReportManager, () => ({
      __proto__: dart.getMethods(RouterReportManager.__proto__),
      printInstanceStack: dart.fnType(dart.void, [])
    }));
    dart.setStaticMethodSignature(RouterReportManager, () => ['reportCurrentRoute', 'reportDependencyLinkedToRoute', 'clearRouteKeys', 'appendRouteByCreate', 'reportRouteDispose', 'reportRouteWillDispose', '_removeDependencyByRoute']);
    dart.setLibraryUri(RouterReportManager, I[34]);
    dart.setStaticFieldSignature(RouterReportManager, () => ['_routesKey', '_routesByCreate', '_current']);
    return RouterReportManager;
  });
  router_report.RouterReportManager = router_report.RouterReportManager$();
  dart.defineLazy(router_report.RouterReportManager, {
    /*router_report.RouterReportManager._routesKey*/get _routesKey() {
      return new (T$.LinkedMapOfRouteN$ListOfString()).new();
    },
    /*router_report.RouterReportManager._routesByCreate*/get _routesByCreate() {
      return new (T$.LinkedMapOfRouteN$HashSetOfFunction()).new();
    },
    /*router_report.RouterReportManager._current*/get _current() {
      return null;
    },
    set _current(_) {}
  }, false);
  dart.addTypeTests(router_report.RouterReportManager, _is_RouterReportManager_default);
  var isPermanent$ = dart.privateName(get_instance, "InstanceInfo.isPermanent");
  var isSingleton$ = dart.privateName(get_instance, "InstanceInfo.isSingleton");
  var isRegistered$ = dart.privateName(get_instance, "InstanceInfo.isRegistered");
  var isPrepared$ = dart.privateName(get_instance, "InstanceInfo.isPrepared");
  var isInit$ = dart.privateName(get_instance, "InstanceInfo.isInit");
  get_instance.InstanceInfo = class InstanceInfo extends core.Object {
    get isPermanent() {
      return this[isPermanent$];
    }
    set isPermanent(value) {
      super.isPermanent = value;
    }
    get isSingleton() {
      return this[isSingleton$];
    }
    set isSingleton(value) {
      super.isSingleton = value;
    }
    get isRegistered() {
      return this[isRegistered$];
    }
    set isRegistered(value) {
      super.isRegistered = value;
    }
    get isPrepared() {
      return this[isPrepared$];
    }
    set isPrepared(value) {
      super.isPrepared = value;
    }
    get isInit() {
      return this[isInit$];
    }
    set isInit(value) {
      super.isInit = value;
    }
    get isCreate() {
      return !dart.nullCheck(this.isSingleton);
    }
    static ['_#new#tearOff'](opts) {
      let isPermanent = opts && 'isPermanent' in opts ? opts.isPermanent : null;
      let isSingleton = opts && 'isSingleton' in opts ? opts.isSingleton : null;
      let isRegistered = opts && 'isRegistered' in opts ? opts.isRegistered : null;
      let isPrepared = opts && 'isPrepared' in opts ? opts.isPrepared : null;
      let isInit = opts && 'isInit' in opts ? opts.isInit : null;
      return new get_instance.InstanceInfo.new({isPermanent: isPermanent, isSingleton: isSingleton, isRegistered: isRegistered, isPrepared: isPrepared, isInit: isInit});
    }
  };
  (get_instance.InstanceInfo.new = function(opts) {
    let isPermanent = opts && 'isPermanent' in opts ? opts.isPermanent : null;
    let isSingleton = opts && 'isSingleton' in opts ? opts.isSingleton : null;
    let isRegistered = opts && 'isRegistered' in opts ? opts.isRegistered : null;
    let isPrepared = opts && 'isPrepared' in opts ? opts.isPrepared : null;
    let isInit = opts && 'isInit' in opts ? opts.isInit : null;
    this[isPermanent$] = isPermanent;
    this[isSingleton$] = isSingleton;
    this[isRegistered$] = isRegistered;
    this[isPrepared$] = isPrepared;
    this[isInit$] = isInit;
    ;
  }).prototype = get_instance.InstanceInfo.prototype;
  dart.addTypeTests(get_instance.InstanceInfo);
  dart.addTypeCaches(get_instance.InstanceInfo);
  dart.setGetterSignature(get_instance.InstanceInfo, () => ({
    __proto__: dart.getGetters(get_instance.InstanceInfo.__proto__),
    isCreate: core.bool
  }));
  dart.setLibraryUri(get_instance.InstanceInfo, I[35]);
  dart.setFieldSignature(get_instance.InstanceInfo, () => ({
    __proto__: dart.getFields(get_instance.InstanceInfo.__proto__),
    isPermanent: dart.finalFieldType(dart.nullable(core.bool)),
    isSingleton: dart.finalFieldType(dart.nullable(core.bool)),
    isRegistered: dart.finalFieldType(core.bool),
    isPrepared: dart.finalFieldType(core.bool),
    isInit: dart.finalFieldType(dart.nullable(core.bool))
  }));
  var _insert = dart.privateName(get_instance, "_insert");
  var _getKey = dart.privateName(get_instance, "_getKey");
  var _startController = dart.privateName(get_instance, "_startController");
  var _initDependencies = dart.privateName(get_instance, "_initDependencies");
  var _getDependency = dart.privateName(get_instance, "_getDependency");
  get_instance.GetInstance = class GetInstance extends core.Object {
    static new() {
      let t196;
      t196 = get_instance.GetInstance._getInstance;
      return t196 == null ? get_instance.GetInstance._getInstance = C[258] || CT.C258 : t196;
    }
    static ['_#new#tearOff']() {
      return get_instance.GetInstance.new();
    }
    static ['_#_#tearOff']() {
      return new get_instance.GetInstance.__();
    }
    call(T) {
      return this.find(T);
    }
    injector(S, fn, opts) {
      let tag = opts && 'tag' in opts ? opts.tag : null;
      let fenix = opts && 'fenix' in opts ? opts.fenix : false;
      this.lazyPut(S, dart.fn(() => fn(this), dart.fnType(S, [])), {tag: tag, fenix: fenix});
    }
    putAsync(S, builder, opts) {
      let tag = opts && 'tag' in opts ? opts.tag : null;
      let permanent = opts && 'permanent' in opts ? opts.permanent : false;
      return async.async(S, (function* putAsync() {
        return this.put(S, yield builder(), {tag: tag, permanent: permanent});
      }).bind(this));
    }
    put(S, dependency, opts) {
      let t196;
      let tag = opts && 'tag' in opts ? opts.tag : null;
      let permanent = opts && 'permanent' in opts ? opts.permanent : false;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      this[_insert](S, {isSingleton: true, name: tag, permanent: permanent, builder: (t196 = builder, t196 == null ? dart.fn(() => dependency, dart.fnType(S, [])) : t196)});
      return this.find(S, {tag: tag});
    }
    lazyPut(S, builder, opts) {
      let t196;
      let tag = opts && 'tag' in opts ? opts.tag : null;
      let fenix = opts && 'fenix' in opts ? opts.fenix : null;
      let permanent = opts && 'permanent' in opts ? opts.permanent : false;
      this[_insert](S, {isSingleton: true, name: tag, permanent: permanent, builder: builder, fenix: (t196 = fenix, t196 == null ? get_main.Get.smartManagement === smart_management.SmartManagement.keepFactory : t196)});
    }
    create(S, builder, opts) {
      let tag = opts && 'tag' in opts ? opts.tag : null;
      let permanent = opts && 'permanent' in opts ? opts.permanent : true;
      this[_insert](S, {isSingleton: false, name: tag, builder: builder, permanent: permanent});
    }
    [_insert](S, opts) {
      let isSingleton = opts && 'isSingleton' in opts ? opts.isSingleton : null;
      let name = opts && 'name' in opts ? opts.name : null;
      let permanent = opts && 'permanent' in opts ? opts.permanent : false;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let fenix = opts && 'fenix' in opts ? opts.fenix : false;
      let key = this[_getKey](dart.wrapType(S), name);
      if (get_instance.GetInstance._singl[$containsKey](key)) {
        let dep = get_instance.GetInstance._singl[$_get](key);
        if (dep != null && dep.isDirty) {
          get_instance.GetInstance._singl[$_set](key, new (get_instance._InstanceBuilderFactory$(S)).new(isSingleton, builder, permanent, false, fenix, name, {lateRemove: get_instance._InstanceBuilderFactory$(S).as(dep)}));
        }
      } else {
        get_instance.GetInstance._singl[$_set](key, new (get_instance._InstanceBuilderFactory$(S)).new(isSingleton, builder, permanent, false, fenix, name));
      }
    }
    [_initDependencies](S, opts) {
      let name = opts && 'name' in opts ? opts.name : null;
      let key = this[_getKey](dart.wrapType(S), name);
      let isInit = dart.nullCheck(get_instance.GetInstance._singl[$_get](key)).isInit;
      let i = null;
      if (!isInit) {
        i = this[_startController](S, {tag: name});
        if (dart.nullCheck(dart.nullCheck(get_instance.GetInstance._singl[$_get](key)).isSingleton)) {
          dart.nullCheck(get_instance.GetInstance._singl[$_get](key)).isInit = true;
          if (get_main.Get.smartManagement !== smart_management.SmartManagement.onlyBuilder) {
            router_report.RouterReportManager.reportDependencyLinkedToRoute(this[_getKey](dart.wrapType(S), name));
          }
        }
      }
      return i;
    }
    getInstanceInfo(S, opts) {
      let t196, t196$, t196$0, t196$1, t196$2;
      let tag = opts && 'tag' in opts ? opts.tag : null;
      let build = this[_getDependency](S, {tag: tag});
      return new get_instance.InstanceInfo.new({isPermanent: (t196 = build, t196 == null ? null : t196.permanent), isSingleton: (t196$ = build, t196$ == null ? null : t196$.isSingleton), isRegistered: this.isRegistered(S, {tag: tag}), isPrepared: !dart.test((t196$1 = (t196$0 = build, t196$0 == null ? null : t196$0.isInit), t196$1 == null ? true : t196$1)), isInit: (t196$2 = build, t196$2 == null ? null : t196$2.isInit)});
    }
    [_getDependency](S, opts) {
      let t196, t198, t197, t196$;
      let tag = opts && 'tag' in opts ? opts.tag : null;
      let key = opts && 'key' in opts ? opts.key : null;
      let newKey = (t196 = key, t196 == null ? this[_getKey](dart.wrapType(S), tag) : t196);
      if (!get_instance.GetInstance._singl[$containsKey](newKey)) {
        t196$ = get_main.Get;
        t197 = "Instance \"" + newKey + "\" is not registered.";
        t198 = true;
        t196$.log(t197, {isError: t198});
        return null;
      } else {
        return get_instance.GetInstance._singl[$_get](newKey);
      }
    }
    markAsDirty(S, opts) {
      let t196;
      let tag = opts && 'tag' in opts ? opts.tag : null;
      let key = opts && 'key' in opts ? opts.key : null;
      let newKey = (t196 = key, t196 == null ? this[_getKey](dart.wrapType(S), tag) : t196);
      if (get_instance.GetInstance._singl[$containsKey](newKey)) {
        let dep = get_instance.GetInstance._singl[$_get](newKey);
        if (dep != null && !dep.permanent) {
          dep.isDirty = true;
        }
      }
    }
    [_startController](S, opts) {
      let t197, t196, t197$, t196$;
      let tag = opts && 'tag' in opts ? opts.tag : null;
      let key = this[_getKey](dart.wrapType(S), tag);
      let i = S.as(dart.nullCheck(get_instance.GetInstance._singl[$_get](key)).getDependency());
      if (lifecycle.GetLifeCycleBase.is(i)) {
        i.onStart.call();
        if (tag == null) {
          t196 = get_main.Get;
          t197 = "Instance \"" + dart.str(dart.wrapType(S)) + "\" has been initialized";
          t196.log(t197);
        } else {
          t196$ = get_main.Get;
          t197$ = "Instance \"" + dart.str(dart.wrapType(S)) + "\" with tag \"" + dart.str(tag) + "\" has been initialized";
          t196$.log(t197$);
        }
        if (!dart.nullCheck(dart.nullCheck(get_instance.GetInstance._singl[$_get](key)).isSingleton)) {
          router_report.RouterReportManager.appendRouteByCreate(i);
        }
      }
      return i;
    }
    putOrFind(S, dep, opts) {
      let tag = opts && 'tag' in opts ? opts.tag : null;
      let key = this[_getKey](dart.wrapType(S), tag);
      if (get_instance.GetInstance._singl[$containsKey](key)) {
        return S.as(dart.nullCheck(get_instance.GetInstance._singl[$_get](key)).getDependency());
      } else {
        return get_instance.GetInstance.new().put(S, dep(), {tag: tag});
      }
    }
    find(S, opts) {
      let t196;
      let tag = opts && 'tag' in opts ? opts.tag : null;
      let key = this[_getKey](dart.wrapType(S), tag);
      if (this.isRegistered(S, {tag: tag})) {
        let dep = get_instance.GetInstance._singl[$_get](key);
        if (dep == null) {
          if (tag == null) {
            dart.throw("Class \"" + dart.str(dart.wrapType(S)) + "\" is not registered");
          } else {
            dart.throw("Class \"" + dart.str(dart.wrapType(S)) + "\" with tag \"" + dart.str(tag) + "\" is not registered");
          }
        }
        let i = this[_initDependencies](S, {name: tag});
        t196 = i;
        return t196 == null ? S.as(dep.getDependency()) : t196;
      } else {
        dart.throw("\"" + dart.str(dart.wrapType(S)) + "\" not found. You need to call \"Get.put(" + dart.str(dart.wrapType(S)) + "())\" or \"Get.lazyPut(()=>" + dart.str(dart.wrapType(S)) + "())\"");
      }
    }
    [_getKey](type, name) {
      return name == null ? type.toString() : type.toString() + dart.notNull(name);
    }
    resetInstance(opts) {
      let clearFactory = opts && 'clearFactory' in opts ? opts.clearFactory : true;
      let clearRouteBindings = opts && 'clearRouteBindings' in opts ? opts.clearRouteBindings : true;
      if (clearRouteBindings) router_report.RouterReportManager.clearRouteKeys();
      get_instance.GetInstance._singl[$clear]();
      return true;
    }
    delete(S, opts) {
      let t196, t198, t197, t196$, t196$0, t198$, t197$, t196$1, t197$0, t196$2, t197$1, t196$3, t198$0, t197$2, t196$4, t197$3, t196$5;
      let tag = opts && 'tag' in opts ? opts.tag : null;
      let key = opts && 'key' in opts ? opts.key : null;
      let force = opts && 'force' in opts ? opts.force : false;
      let newKey = (t196 = key, t196 == null ? this[_getKey](dart.wrapType(S), tag) : t196);
      if (!get_instance.GetInstance._singl[$containsKey](newKey)) {
        t196$ = get_main.Get;
        t197 = "Instance \"" + newKey + "\" already removed.";
        t198 = true;
        t196$.log(t197, {isError: t198});
        return false;
      }
      let dep = get_instance.GetInstance._singl[$_get](newKey);
      if (dep == null) return false;
      let builder = null;
      if (dep.isDirty) {
        builder = (t196$0 = dep.lateRemove, t196$0 == null ? dep : t196$0);
      } else {
        builder = dep;
      }
      if (builder.permanent && !force) {
        t196$1 = get_main.Get;
        t197$ = "\"" + newKey + "\" has been marked as permanent, SmartManagement is not authorized to delete it.";
        t198$ = true;
        t196$1.log(t197$, {isError: t198$});
        return false;
      }
      let i = builder.dependency;
      if (lifecycle.GetxServiceMixin.is(i) && !force) {
        return false;
      }
      if (lifecycle.GetLifeCycleBase.is(i)) {
        i.onDelete.call();
        t196$2 = get_main.Get;
        t197$0 = "\"" + newKey + "\" onDelete() called";
        t196$2.log(t197$0);
      }
      if (builder.fenix) {
        builder.dependency = null;
        builder.isInit = false;
        return true;
      } else {
        if (dep.lateRemove != null) {
          dep.lateRemove = null;
          t196$3 = get_main.Get;
          t197$1 = "\"" + newKey + "\" deleted from memory";
          t196$3.log(t197$1);
          return false;
        } else {
          get_instance.GetInstance._singl[$remove](newKey);
          if (get_instance.GetInstance._singl[$containsKey](newKey)) {
            t196$4 = get_main.Get;
            t197$2 = "Error removing object \"" + newKey + "\"";
            t198$0 = true;
            t196$4.log(t197$2, {isError: t198$0});
          } else {
            t196$5 = get_main.Get;
            t197$3 = "\"" + newKey + "\" deleted from memory";
            t196$5.log(t197$3);
          }
          return true;
        }
      }
    }
    deleteAll(opts) {
      let force = opts && 'force' in opts ? opts.force : false;
      let keys = get_instance.GetInstance._singl[$keys][$toList]();
      for (let key of keys) {
        this.delete(dart.dynamic, {key: key, force: force});
      }
    }
    reloadAll(opts) {
      let force = opts && 'force' in opts ? opts.force : false;
      get_instance.GetInstance._singl[$forEach](dart.fn((key, value) => {
        let t197, t196, t197$, t196$;
        if (value.permanent && !force) {
          t196 = get_main.Get;
          t197 = "Instance \"" + key + "\" is permanent. Skipping reload";
          t196.log(t197);
        } else {
          value.dependency = null;
          value.isInit = false;
          t196$ = get_main.Get;
          t197$ = "Instance \"" + key + "\" was reloaded.";
          t196$.log(t197$);
        }
      }, T$.StringAnd_InstanceBuilderFactoryTovoid()));
    }
    reload(S, opts) {
      let t196, t198, t197, t196$, t197$, t196$0, t197$0, t196$1;
      let tag = opts && 'tag' in opts ? opts.tag : null;
      let key = opts && 'key' in opts ? opts.key : null;
      let force = opts && 'force' in opts ? opts.force : false;
      let newKey = (t196 = key, t196 == null ? this[_getKey](dart.wrapType(S), tag) : t196);
      let builder = this[_getDependency](S, {tag: tag, key: newKey});
      if (builder == null) return;
      if (builder.permanent && !force) {
        t196$ = get_main.Get;
        t197 = "Instance \"" + newKey + "\" is permanent. Use [force = true] to force the restart.";
        t198 = true;
        t196$.log(t197, {isError: t198});
        return;
      }
      let i = builder.dependency;
      if (lifecycle.GetxServiceMixin.is(i) && !force) {
        return;
      }
      if (lifecycle.GetLifeCycleBase.is(i)) {
        i.onDelete.call();
        t196$0 = get_main.Get;
        t197$ = "\"" + newKey + "\" onDelete() called";
        t196$0.log(t197$);
      }
      builder.dependency = null;
      builder.isInit = false;
      t196$1 = get_main.Get;
      t197$0 = "Instance \"" + newKey + "\" was restarted.";
      t196$1.log(t197$0);
    }
    isRegistered(S, opts) {
      let tag = opts && 'tag' in opts ? opts.tag : null;
      return get_instance.GetInstance._singl[$containsKey](this[_getKey](dart.wrapType(S), tag));
    }
    isPrepared(S, opts) {
      let tag = opts && 'tag' in opts ? opts.tag : null;
      let newKey = this[_getKey](dart.wrapType(S), tag);
      let builder = this[_getDependency](S, {tag: tag, key: newKey});
      if (builder == null) {
        return false;
      }
      if (!builder.isInit) {
        return true;
      }
      return false;
    }
  };
  (get_instance.GetInstance.__ = function() {
    ;
  }).prototype = get_instance.GetInstance.prototype;
  dart.addTypeTests(get_instance.GetInstance);
  dart.addTypeCaches(get_instance.GetInstance);
  dart.setMethodSignature(get_instance.GetInstance, () => ({
    __proto__: dart.getMethods(get_instance.GetInstance.__proto__),
    call: dart.gFnType(T => [T, []], T => [dart.nullable(core.Object)]),
    injector: dart.gFnType(S => [dart.void, [dart.fnType(S, [get_instance.GetInstance])], {fenix: core.bool, tag: dart.nullable(core.String)}, {}], S => [dart.nullable(core.Object)]),
    putAsync: dart.gFnType(S => [async.Future$(S), [dart.fnType(async.Future$(S), [])], {permanent: core.bool, tag: dart.nullable(core.String)}, {}], S => [dart.nullable(core.Object)]),
    put: dart.gFnType(S => [S, [S], {builder: dart.nullable(dart.fnType(S, [])), permanent: core.bool, tag: dart.nullable(core.String)}, {}], S => [dart.nullable(core.Object)]),
    lazyPut: dart.gFnType(S => [dart.void, [dart.fnType(S, [])], {fenix: dart.nullable(core.bool), permanent: core.bool, tag: dart.nullable(core.String)}, {}], S => [dart.nullable(core.Object)]),
    create: dart.gFnType(S => [dart.void, [dart.fnType(S, [])], {permanent: core.bool, tag: dart.nullable(core.String)}, {}], S => [dart.nullable(core.Object)]),
    [_insert]: dart.gFnType(S => [dart.void, [], {fenix: core.bool, isSingleton: dart.nullable(core.bool), name: dart.nullable(core.String), permanent: core.bool}, {builder: dart.fnType(S, [])}], S => [dart.nullable(core.Object)]),
    [_initDependencies]: dart.gFnType(S => [dart.nullable(S), [], {name: dart.nullable(core.String)}, {}], S => [dart.nullable(core.Object)]),
    getInstanceInfo: dart.gFnType(S => [get_instance.InstanceInfo, [], {tag: dart.nullable(core.String)}, {}], S => [dart.nullable(core.Object)]),
    [_getDependency]: dart.gFnType(S => [dart.nullable(get_instance._InstanceBuilderFactory), [], {key: dart.nullable(core.String), tag: dart.nullable(core.String)}, {}], S => [dart.nullable(core.Object)]),
    markAsDirty: dart.gFnType(S => [dart.void, [], {key: dart.nullable(core.String), tag: dart.nullable(core.String)}, {}], S => [dart.nullable(core.Object)]),
    [_startController]: dart.gFnType(S => [S, [], {tag: dart.nullable(core.String)}, {}], S => [dart.nullable(core.Object)]),
    putOrFind: dart.gFnType(S => [S, [dart.fnType(S, [])], {tag: dart.nullable(core.String)}, {}], S => [dart.nullable(core.Object)]),
    find: dart.gFnType(S => [S, [], {tag: dart.nullable(core.String)}, {}], S => [dart.nullable(core.Object)]),
    [_getKey]: dart.fnType(core.String, [core.Type, dart.nullable(core.String)]),
    resetInstance: dart.fnType(core.bool, [], {clearFactory: core.bool, clearRouteBindings: core.bool}, {}),
    delete: dart.gFnType(S => [core.bool, [], {force: core.bool, key: dart.nullable(core.String), tag: dart.nullable(core.String)}, {}], S => [dart.nullable(core.Object)]),
    deleteAll: dart.fnType(dart.void, [], {force: core.bool}, {}),
    reloadAll: dart.fnType(dart.void, [], {force: core.bool}, {}),
    reload: dart.gFnType(S => [dart.void, [], {force: core.bool, key: dart.nullable(core.String), tag: dart.nullable(core.String)}, {}], S => [dart.nullable(core.Object)]),
    isRegistered: dart.gFnType(S => [core.bool, [], {tag: dart.nullable(core.String)}, {}], S => [dart.nullable(core.Object)]),
    isPrepared: dart.gFnType(S => [core.bool, [], {tag: dart.nullable(core.String)}, {}], S => [dart.nullable(core.Object)])
  }));
  dart.setStaticMethodSignature(get_instance.GetInstance, () => ['new']);
  dart.setLibraryUri(get_instance.GetInstance, I[35]);
  dart.setStaticFieldSignature(get_instance.GetInstance, () => ['_getInstance', '_singl']);
  dart.defineLazy(get_instance.GetInstance, {
    /*get_instance.GetInstance._getInstance*/get _getInstance() {
      return null;
    },
    set _getInstance(_) {},
    /*get_instance.GetInstance._singl*/get _singl() {
      return new (T$.IdentityMapOfString$_InstanceBuilderFactory()).new();
    }
  }, false);
  var dependency = dart.privateName(get_instance, "_InstanceBuilderFactory.dependency");
  var builderFunc$ = dart.privateName(get_instance, "_InstanceBuilderFactory.builderFunc");
  var lateRemove$ = dart.privateName(get_instance, "_InstanceBuilderFactory.lateRemove");
  var _showInitLog = dart.privateName(get_instance, "_showInitLog");
  const _is__InstanceBuilderFactory_default = Symbol('_is__InstanceBuilderFactory_default');
  get_instance._InstanceBuilderFactory$ = dart.generic(S => {
    var __t$SN = () => (__t$SN = dart.constFn(dart.nullable(S)))();
    var __t$VoidToS = () => (__t$VoidToS = dart.constFn(dart.fnType(S, [])))();
    var __t$_InstanceBuilderFactoryOfS = () => (__t$_InstanceBuilderFactoryOfS = dart.constFn(get_instance._InstanceBuilderFactory$(S)))();
    var __t$_InstanceBuilderFactoryNOfS = () => (__t$_InstanceBuilderFactoryNOfS = dart.constFn(dart.nullable(__t$_InstanceBuilderFactoryOfS())))();
    class _InstanceBuilderFactory extends core.Object {
      get dependency() {
        return this[dependency];
      }
      set dependency(value) {
        this[dependency] = __t$SN().as(value);
      }
      get builderFunc() {
        return this[builderFunc$];
      }
      set builderFunc(value) {
        this[builderFunc$] = __t$VoidToS().as(value);
      }
      get lateRemove() {
        return this[lateRemove$];
      }
      set lateRemove(value) {
        this[lateRemove$] = __t$_InstanceBuilderFactoryNOfS().as(value);
      }
      static ['_#new#tearOff'](S, isSingleton, builderFunc, permanent, isInit, fenix, tag, opts) {
        let lateRemove = opts && 'lateRemove' in opts ? opts.lateRemove : null;
        return new (get_instance._InstanceBuilderFactory$(S)).new(isSingleton, builderFunc, permanent, isInit, fenix, tag, {lateRemove: lateRemove});
      }
      [_showInitLog]() {
        let t197, t196, t197$, t196$;
        if (this.tag == null) {
          t196 = get_main.Get;
          t197 = "Instance \"" + dart.str(dart.wrapType(S)) + "\" has been created";
          t196.log(t197);
        } else {
          t196$ = get_main.Get;
          t197$ = "Instance \"" + dart.str(dart.wrapType(S)) + "\" has been created with tag \"" + dart.str(this.tag) + "\"";
          t196$.log(t197$);
        }
      }
      getDependency() {
        if (dart.nullCheck(this.isSingleton)) {
          if (this.dependency == null) {
            this[_showInitLog]();
            this.dependency = this.builderFunc();
          }
          return dart.nullCheck(this.dependency);
        } else {
          return this.builderFunc();
        }
      }
    }
    (_InstanceBuilderFactory.new = function(isSingleton, builderFunc, permanent, isInit, fenix, tag, opts) {
      let lateRemove = opts && 'lateRemove' in opts ? opts.lateRemove : null;
      this[dependency] = null;
      this.permanent = false;
      this.isInit = false;
      this.isDirty = false;
      this.isSingleton = isSingleton;
      this[builderFunc$] = builderFunc;
      this.permanent = permanent;
      this.isInit = isInit;
      this.fenix = fenix;
      this.tag = tag;
      this[lateRemove$] = lateRemove;
      ;
    }).prototype = _InstanceBuilderFactory.prototype;
    dart.addTypeTests(_InstanceBuilderFactory);
    _InstanceBuilderFactory.prototype[_is__InstanceBuilderFactory_default] = true;
    dart.addTypeCaches(_InstanceBuilderFactory);
    dart.setMethodSignature(_InstanceBuilderFactory, () => ({
      __proto__: dart.getMethods(_InstanceBuilderFactory.__proto__),
      [_showInitLog]: dart.fnType(dart.void, []),
      getDependency: dart.fnType(S, [])
    }));
    dart.setLibraryUri(_InstanceBuilderFactory, I[35]);
    dart.setFieldSignature(_InstanceBuilderFactory, () => ({
      __proto__: dart.getFields(_InstanceBuilderFactory.__proto__),
      isSingleton: dart.fieldType(dart.nullable(core.bool)),
      fenix: dart.fieldType(core.bool),
      dependency: dart.fieldType(dart.nullable(S)),
      builderFunc: dart.fieldType(dart.fnType(S, [])),
      permanent: dart.fieldType(core.bool),
      isInit: dart.fieldType(core.bool),
      lateRemove: dart.fieldType(dart.nullable(get_instance._InstanceBuilderFactory$(S))),
      isDirty: dart.fieldType(core.bool),
      tag: dart.fieldType(dart.nullable(core.String))
    }));
    return _InstanceBuilderFactory;
  });
  get_instance._InstanceBuilderFactory = get_instance._InstanceBuilderFactory$();
  dart.addTypeTests(get_instance._InstanceBuilderFactory, _is__InstanceBuilderFactory_default);
  bindings_interface.Bindings = class Bindings extends core.Object {};
  (bindings_interface.Bindings.new = function() {
    ;
  }).prototype = bindings_interface.Bindings.prototype;
  dart.addTypeTests(bindings_interface.Bindings);
  dart.addTypeCaches(bindings_interface.Bindings);
  dart.setLibraryUri(bindings_interface.Bindings, I[36]);
  var builder$8 = dart.privateName(bindings_interface, "BindingsBuilder.builder");
  const _is_BindingsBuilder_default = Symbol('_is_BindingsBuilder_default');
  bindings_interface.BindingsBuilder$ = dart.generic(T => {
    class BindingsBuilder extends bindings_interface.Bindings {
      get builder() {
        return this[builder$8];
      }
      set builder(value) {
        super.builder = value;
      }
      static put(builder, opts) {
        let tag = opts && 'tag' in opts ? opts.tag : null;
        let permanent = opts && 'permanent' in opts ? opts.permanent : false;
        return new (bindings_interface.BindingsBuilder$(T)).new(dart.fn(() => get_instance.GetInstance.new().put(T, builder(), {tag: tag, permanent: permanent}), T$.VoidTovoid()));
      }
      static ['_#put#tearOff'](T, builder, opts) {
        let tag = opts && 'tag' in opts ? opts.tag : null;
        let permanent = opts && 'permanent' in opts ? opts.permanent : false;
        return bindings_interface.BindingsBuilder$(T).put(builder, {tag: tag, permanent: permanent});
      }
      static ['_#new#tearOff'](T, builder) {
        return new (bindings_interface.BindingsBuilder$(T)).new(builder);
      }
      dependencies() {
        this.builder();
      }
    }
    (BindingsBuilder.new = function(builder) {
      this[builder$8] = builder;
      ;
    }).prototype = BindingsBuilder.prototype;
    dart.addTypeTests(BindingsBuilder);
    BindingsBuilder.prototype[_is_BindingsBuilder_default] = true;
    dart.addTypeCaches(BindingsBuilder);
    dart.setMethodSignature(BindingsBuilder, () => ({
      __proto__: dart.getMethods(BindingsBuilder.__proto__),
      dependencies: dart.fnType(dart.void, [])
    }));
    dart.setStaticMethodSignature(BindingsBuilder, () => ['put']);
    dart.setLibraryUri(BindingsBuilder, I[36]);
    dart.setFieldSignature(BindingsBuilder, () => ({
      __proto__: dart.getFields(BindingsBuilder.__proto__),
      builder: dart.finalFieldType(dart.fnType(dart.void, []))
    }));
    return BindingsBuilder;
  });
  bindings_interface.BindingsBuilder = bindings_interface.BindingsBuilder$();
  dart.addTypeTests(bindings_interface.BindingsBuilder, _is_BindingsBuilder_default);
  get_reset['GetResetExt|reset'] = function GetResetExt$124reset($this, opts) {
    let clearFactory = opts && 'clearFactory' in opts ? opts.clearFactory : true;
    let clearRouteBindings = opts && 'clearRouteBindings' in opts ? opts.clearRouteBindings : true;
    get_instance.GetInstance.new().resetInstance({clearRouteBindings: clearRouteBindings});
    extension_navigation['NavTwoExt|clearRouteTree'](get_main.Get);
    internacionalization['LocalesIntl|clearTranslations'](get_main.Get);
    extension_navigation['GetNavigation|resetRootNavigator'](get_main.Get);
  };
  get_reset['GetResetExt|get#reset'] = function GetResetExt$124get$35reset($this) {
    return dart.fn(opts => {
      let clearFactory = opts && 'clearFactory' in opts ? opts.clearFactory : true;
      let clearRouteBindings = opts && 'clearRouteBindings' in opts ? opts.clearRouteBindings : true;
      return get_reset['GetResetExt|reset']($this, {clearFactory: clearFactory, clearRouteBindings: clearRouteBindings});
    }, T$.__Tovoid$4());
  };
  dart.trackLibraries("packages/get/get_navigation/src/snackbar/snackbar_controller.dart", {
    "package:get/get_navigation/src/snackbar/snackbar_controller.dart": snackbar_controller,
    "package:get/get_navigation/src/snackbar/snackbar.dart": snackbar,
    "package:get/get_navigation/src/routes/route_middleware.dart": route_middleware,
    "package:get/get_navigation/src/routes/observers/route_observer.dart": route_observer,
    "package:get/get_navigation/src/routes/get_route.dart": get_route,
    "package:get/get_navigation/src/routes/get_transition_mixin.dart": get_transition_mixin,
    "package:get/get_navigation/src/routes/default_route.dart": default_route,
    "package:get/get_navigation/src/root/root_controller.dart": root_controller,
    "package:get/get_navigation/src/root/get_material_app.dart": get_material_app,
    "package:get/get_state_manager/src/simple/simple_builder.dart": simple_builder,
    "package:get/get_state_manager/src/simple/mixin_state.dart": mixin_state,
    "package:get/get_state_manager/src/simple/get_view.dart": get_view,
    "package:get/get_state_manager/src/simple/get_state.dart": get_state,
    "package:get/get_state_manager/src/simple/get_responsive.dart": get_responsive,
    "package:get/get_state_manager/src/simple/get_controllers.dart": get_controllers,
    "package:get/get_state_manager/src/rx_flutter/rx_ticket_provider_mixin.dart": rx_ticket_provider_mixin,
    "package:get/instance_manager.dart": instance_manager,
    "package:get/get_state_manager/src/rx_flutter/rx_notifier.dart": rx_notifier,
    "package:get/get_state_manager/src/rx_flutter/rx_getx_widget.dart": rx_getx_widget,
    "package:get/get_state_manager/src/rx_flutter/rx_disposable.dart": rx_disposable,
    "package:get/get_state_manager/get_state_manager.dart": get_state_manager,
    "package:get/get_navigation/src/root/get_cupertino_app.dart": get_cupertino_app,
    "package:get/get_navigation/src/nav2/router_outlet.dart": router_outlet,
    "package:get/get_navigation/src/nav2/get_router_delegate.dart": get_router_delegate,
    "package:get/get_navigation/src/nav2/get_nav_config.dart": get_nav_config,
    "package:get/get_navigation/src/nav2/get_information_parser.dart": get_information_parser,
    "package:get/get_navigation/src/root/parse_route.dart": parse_route,
    "package:get/get_navigation/src/dialog/dialog_route.dart": dialog_route,
    "package:get/get_navigation/src/extension_navigation.dart": extension_navigation,
    "package:get/get_navigation/src/bottomsheet/bottomsheet.dart": bottomsheet$,
    "package:get/get_navigation/get_navigation.dart": get_navigation,
    "package:get/route_manager.dart": route_manager,
    "package:get/get_instance/src/extension_instance.dart": extension_instance,
    "package:get/get_navigation/src/router_report.dart": router_report,
    "package:get/get_instance/src/get_instance.dart": get_instance,
    "package:get/get_instance/src/bindings_interface.dart": bindings_interface,
    "package:get/get_instance/get_instance.dart": get_instance$,
    "package:get/get_common/get_reset.dart": get_reset,
    "package:get/get.dart": get
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["snackbar_controller.dart","snackbar.dart","../routes/route_middleware.dart","../routes/observers/route_observer.dart","../routes/get_route.dart","../routes/get_transition_mixin.dart","../routes/default_route.dart","../../../get_state_manager/src/rx_flutter/rx_disposable.dart","../../../get_state_manager/src/simple/get_controllers.dart","../../../get_state_manager/src/rx_flutter/rx_notifier.dart","../root/root_controller.dart","../root/get_material_app.dart","../../../get_state_manager/src/simple/simple_builder.dart","../../../get_state_manager/src/simple/get_state.dart","../../../get_state_manager/src/simple/mixin_state.dart","../../../get_state_manager/src/simple/get_view.dart","../../../get_state_manager/src/simple/get_responsive.dart","../../../get_state_manager/src/rx_flutter/rx_ticket_provider_mixin.dart","../../../get_state_manager/src/rx_flutter/rx_getx_widget.dart","../root/get_cupertino_app.dart","../nav2/router_outlet.dart","../nav2/get_nav_config.dart","../nav2/get_router_delegate.dart","../nav2/get_information_parser.dart","../root/parse_route.dart","../dialog/dialog_route.dart","../extension_navigation.dart","../bottomsheet/bottomsheet.dart","../../../get_instance/src/extension_instance.dart","../router_report.dart","../../../get_instance/src/get_instance.dart","../../../get_instance/src/bindings_interface.dart","../../../get_common/get_reset.dart"],"names":[],"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Ob;;;;;;IAGG;;;;;;IAGG;;;;;;IAIA;;;;;;IAKJ;;;;;;IAKA;;;;;;IAGC;;;;;;IAKM;;;;;;IAOH;;;;;;IAIL;;;;;;IAIA;;;;;;IAGG;;;;;;IAKF;;;;;;IAKA;;;;;;IAKA;;;;;;IAID;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CW;IAAkB;;AAKvC,YAAW,wDAAJ,cAAiB;IAC1B;;;QA7CO;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;IAlCA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACF,wDAAW,GAAG;;EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAvQb;QACG;QACA;QACA;QACA;QACA;QACH;QACG;QACG;QACA;QACJ;QACA;QACA;QACD;QACC;QACU;QACP;QACF;QACD;QACG;QACL;QACa;QACb;QACgB;QACd;QACW;QACJ;QACH;QACL;QACA;QACG;QACF;QACA;QACD;QACA;QACkB;;AACrB,mDACQ,GAAG,SACD,KAAK,WACH,OAAO,aACL,SAAS,eACP,WAAW,QAClB,IAAI,mBACO,eAAe,YACtB,QAAQ,UACV,MAAM,WACL,OAAO,gBACF,YAAY,eACb,WAAW,eACX,WAAW,mBACP,eAAe,yBACT,qBAAqB,cAChC,UAAU,sBACF,kBAAkB,cAC1B,UAAU,SACf,KAAK,YACF,QAAQ,iBACH,aAAa,oBACV,gBAAgB,yBACX,qBAAqB,+BACf,2BAA2B,oCACtB,gCAAgC,+BACrC,2BAA2B,iBACzC,a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,6BAAI,OAAQ,qBACf,uBACA,oCACjB,AAAQ,wBACF,OAAN,KAAK,EAAL,eAAS,iGACH,AAAC,eAAR,cAAS,OAAO,GAAQ,QAAN,KAAK,EAAL,gBAAS;IAErC;cAEuC;AACrC,YAAO,AAA6D,kDAAtC,QAAQ,gBAAgB;IACxD;0BAEkD;AAChD,YAAO,yBACL,AAGE,iDAFU,uCAAoB,IAAI,kBACpB;IAGpB;;;QAxRO;QACA;QACA;QACA;QAC2C;QAE3C;QACA;QACA;QACA;QACA;QACwB;QAExB;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;IAtDA;IACA;IACA;IAC2C;IAE3C;IACA;IACA;IACA;IACA;IACwB;IAExB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACwB,kCAAE;IACJ,gCAAE;IACV,wBAAE;IACI,8BAAE;AACvB,mEAAW,GAAG;;EAAC;;;QAGd;QACA;QACA;QAC2B;QACR;QACnB;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;IAjDA;IACA;IAGA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;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,+CAAJ,6BAAI,OAAQ,qBACf,uBACA,oCACjB,AAAQ,wBACF,OAAN,KAAK,EAAL,eAAS,iGACH,AAAC,eAAR,cAAS,OAAO,GAAQ,QAAN,KAAK,EAAL,gBAAS;IAErC;cAEuC;AACrC,YAAO,AAA6D,kDAAtC,QAAQ,gBAAgB;IACxD;0BAEkD;AAChD,YAAO,yBACL,AAGE,iDAFU,uCAAoB,IAAI,kBACpB;IAGpB;;;QA9PO;QACA;QACA;QACA;QAC2C;QAE3C;QACA;QACA;QACA;QACwB;QAExB;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;IAjDA;IACA;IACA;IAC2C;IAE3C;IACA;IACA;IACA;IACwB;IAExB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACwB,mCAAE;IACJ,iCAAE;IACV,yBAAE;IACI,+BAAE;AACvB,qEAAW,GAAG;;EAAC;;;QAGd;QACA;QACA;QAC2B;QACR;QACnB;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;IA3CA;IACA;IAGA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA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pB,yBADoB,qBACd,cADc,UAAU,sBAAV,kBACjB,cADiB,UAAU,SAAV,KAAK,YAAL,QAAQ,iBAAR,aAAa,oBAAb,gBACnB,yBADmB,qBACd,+BADc,2BACR,oCADQ,gCACH,+BADG,2BACR,iBADQ,aAAa,cAAb,UAAU,yBAAV,qBACd,yBADc,qBACd,qBADc,iBAClB,kBADkB,cACrB,WADqB,OAAO,eAAP,WAAW,gBAAX,YAAY,iBAAZ,aAAa;;EAsFhC;6GAE4C;AACpC,qBAAa,+CAAmB,QAAQ;AAC7B,IAAjB,AAAW,UAAD;AACV,UAAO,WAAU;EACnB;;AAJmB,mBAAyB,0EAAzB,QAAQ;EAI3B;;AAEmB,oBACV,OACA;UACA;UACG;UAGL;UACU;UACP;UACA;UACA;UACF;UACE;UACI;UACA;UACJ;UACD;UACC;UACD;UACA;UACU;UACP;UACE;UACL;UACD;UACA;UACY;UACG;UACd;UACW;UACN;UACL;UACA;UACG;UACF;UACA;UACgB;UACjB;UACD;AAvCW,4EAAK,EAAL,OAAO,cAAP,SAAS,YAAT,QAAQ,eAAR,WACpB,iBADoB,aAClB,aADkB,SAAS,eAAT,WACpB,QADoB,IAAI,mBAAJ,eAChB,YADgB,QAAQ,UAAR,MAAM,WAAN,OAAO,gBAAP,YACnB,eADmB,WACpB,eADoB,WACpB,mBADoB,eAChB,yBADgB,qBACV,cADU,UACrB,sBADqB,kBACb,cADa,UACrB,SADqB,KAAK,iBAAL,aAClB,yBADkB,qBACV,oBADU,gBACf,+BADe,2BACJ,oCADI,gCAEjB,+BAFiB,2BACJ,cADI,UACrB,yBADqB,qBACV,yBADU,qBACV,qBADU,iBACd,WADc,OAAO,eAAP,WACpB,kBADoB,cACjB,gBADiB,YACnB,iBADmB,aAClB;;EAsGD;qGAtGS,OACA;;QACA;QACG;QAGL;QACU;QACP;QACA;QACA;QACF;QACE;QACI;QACA;QACJ;QACD;QACC;QACD;QACA;QACU;QACP;QACE;QACL;QACD;QACA;QACY;QACG;QACd;QACW;QACN;QACL;QACA;QACG;QACF;QACA;QACgB;QACjB;QACD;AAEA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","file":"../../../../../../../../../../../../../packages/get/get_navigation/src/snackbar/snackbar_controller.dart.lib.js"}');
  // Exports:
  return {
    get_navigation__src__snackbar__snackbar_controller: snackbar_controller,
    get_navigation__src__snackbar__snackbar: snackbar,
    get_navigation__src__routes__route_middleware: route_middleware,
    get_navigation__src__routes__observers__route_observer: route_observer,
    get_navigation__src__routes__get_route: get_route,
    get_navigation__src__routes__get_transition_mixin: get_transition_mixin,
    get_navigation__src__routes__default_route: default_route,
    get_navigation__src__root__root_controller: root_controller,
    get_navigation__src__root__get_material_app: get_material_app,
    get_state_manager__src__simple__simple_builder: simple_builder,
    get_state_manager__src__simple__mixin_state: mixin_state,
    get_state_manager__src__simple__get_view: get_view,
    get_state_manager__src__simple__get_state: get_state,
    get_state_manager__src__simple__get_responsive: get_responsive,
    get_state_manager__src__simple__get_controllers: get_controllers,
    get_state_manager__src__rx_flutter__rx_ticket_provider_mixin: rx_ticket_provider_mixin,
    instance_manager: instance_manager,
    get_state_manager__src__rx_flutter__rx_notifier: rx_notifier,
    get_state_manager__src__rx_flutter__rx_getx_widget: rx_getx_widget,
    get_state_manager__src__rx_flutter__rx_disposable: rx_disposable,
    get_state_manager__get_state_manager: get_state_manager,
    get_navigation__src__root__get_cupertino_app: get_cupertino_app,
    get_navigation__src__nav2__router_outlet: router_outlet,
    get_navigation__src__nav2__get_router_delegate: get_router_delegate,
    get_navigation__src__nav2__get_nav_config: get_nav_config,
    get_navigation__src__nav2__get_information_parser: get_information_parser,
    get_navigation__src__root__parse_route: parse_route,
    get_navigation__src__dialog__dialog_route: dialog_route,
    get_navigation__src__extension_navigation: extension_navigation,
    get_navigation__src__bottomsheet__bottomsheet: bottomsheet$,
    get_navigation__get_navigation: get_navigation,
    route_manager: route_manager,
    get_instance__src__extension_instance: extension_instance,
    get_navigation__src__router_report: router_report,
    get_instance__src__get_instance: get_instance,
    get_instance__src__bindings_interface: bindings_interface,
    get_instance__get_instance: get_instance$,
    get_common__get_reset: get_reset,
    get: get
  };
}));

//# sourceMappingURL=snackbar_controller.dart.lib.js.map
