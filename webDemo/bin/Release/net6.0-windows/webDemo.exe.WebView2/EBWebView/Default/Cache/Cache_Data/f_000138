define(['dart_sdk', 'packages/crypto/src/md5.dart', 'packages/jwt_decoder/jwt_decoder.dart', 'packages/device_info_plus/device_info_plus.dart', 'packages/cc_library/src/extension/logger.dart', 'packages/android_id/android_id.dart', 'packages/package_info_plus/package_info_plus.dart', 'packages/intl/src/intl/number_parser.dart', 'packages/get/get_rx/src/rx_types/rx_types.dart', 'packages/cc_library/src/gson/src/values.dart', 'packages/get/get_navigation/src/snackbar/snackbar_controller.dart', 'packages/get/get_core/src/get_main.dart', 'packages/rxdart/src/transformers/backpressure/throttle.dart'], (function load__packages__cc_library__util__base_utils_dart(dart_sdk, packages__crypto__src__md5$46dart, packages__jwt_decoder__jwt_decoder$46dart, packages__device_info_plus__device_info_plus$46dart, packages__cc_library__src__extension__logger$46dart, packages__android_id__android_id$46dart, packages__package_info_plus__package_info_plus$46dart, packages__intl__src__intl__number_parser$46dart, packages__get__get_rx__src__rx_types__rx_types$46dart, packages__cc_library__src__gson__src__values$46dart, packages__get__get_navigation__src__snackbar__snackbar_controller$46dart, packages__get__get_core__src__get_main$46dart, packages__rxdart__src__transformers__backpressure__throttle$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const convert = dart_sdk.convert;
  const io = dart_sdk.io;
  const async = dart_sdk.async;
  const _interceptors = dart_sdk._interceptors;
  const math = dart_sdk.math;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const md5 = packages__crypto__src__md5$46dart.src__md5;
  const jwt_decoder = packages__jwt_decoder__jwt_decoder$46dart.jwt_decoder;
  const device_info_plus = packages__device_info_plus__device_info_plus$46dart.device_info_plus;
  const logger = packages__cc_library__src__extension__logger$46dart.src__extension__logger;
  const android_id = packages__android_id__android_id$46dart.android_id;
  const package_info_plus = packages__package_info_plus__package_info_plus$46dart.package_info_plus;
  const number_format = packages__intl__src__intl__number_parser$46dart.src__intl__number_format;
  const rx_types = packages__get__get_rx__src__rx_types__rx_types$46dart.get_rx__src__rx_types__rx_types;
  const values = packages__cc_library__src__gson__src__values$46dart.src__gson__src__values;
  const extension_navigation = packages__get__get_navigation__src__snackbar__snackbar_controller$46dart.get_navigation__src__extension_navigation;
  const get_main = packages__get__get_core__src__get_main$46dart.get_core__src__get_main;
  const throttle = packages__rxdart__src__transformers__backpressure__throttle$46dart.src__transformers__backpressure__throttle;
  var base_utils = Object.create(dart.library);
  var $split = dartx.split;
  var $_get = dartx._get;
  var $remainder = dartx.remainder;
  var $toString = dartx.toString;
  var $isNotEmpty = dartx.isNotEmpty;
  var $length = dartx.length;
  var $round = dartx.round;
  var $substring = dartx.substring;
  var $contains = dartx.contains;
  var $replaceAll = dartx.replaceAll;
  var $toLowerCase = dartx.toLowerCase;
  var $toDouble = dartx.toDouble;
  var $isEmpty = dartx.isEmpty;
  var $toUpperCase = dartx.toUpperCase;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(false);
  var T = {
    JSArrayOfString: () => (T.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    ObjectN: () => (T.ObjectN = dart.constFn(dart.nullable(core.Object)))(),
    JSArrayOfObjectN: () => (T.JSArrayOfObjectN = dart.constFn(_interceptors.JSArray$(T.ObjectN())))(),
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    FutureOfvoid: () => (T.FutureOfvoid = dart.constFn(async.Future$(dart.void)))(),
    VoidToFutureOfvoid: () => (T.VoidToFutureOfvoid = dart.constFn(dart.fnType(T.FutureOfvoid(), [])))(),
    StreamOfVoidToFutureOfvoid: () => (T.StreamOfVoidToFutureOfvoid = dart.constFn(async.Stream$(T.VoidToFutureOfvoid())))(),
    JSArrayOfVoidToFutureOfvoid: () => (T.JSArrayOfVoidToFutureOfvoid = dart.constFn(_interceptors.JSArray$(T.VoidToFutureOfvoid())))(),
    FnTovoid: () => (T.FnTovoid = dart.constFn(dart.fnType(dart.void, [T.VoidToFutureOfvoid()])))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.const({
        __proto__: android_id.AndroidId.prototype
      });
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 700000
      });
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 2000000
      });
    }
  }, false);
  var C = Array(3).fill(void 0);
  var I = ["package:cc_library/util/base_utils.dart"];
  var Duration__duration = dart.privateName(core, "Duration._duration");
  base_utils.BaseUtils = class BaseUtils extends core.Object {
    static generateMd5(input) {
      return md5.md5.convert(convert.utf8.encode(input)).toString();
    }
    static getDecodedToken(t) {
      return jwt_decoder.JwtDecoder.decode(t);
    }
    static getDeviceId() {
      return async.async(core.String, function* getDeviceId() {
        let t0;
        let deviceInfo = new device_info_plus.DeviceInfoPlugin.new();
        if (io.Platform.isIOS || io.Platform.isMacOS) {
          let iosDeviceInfo = (yield deviceInfo.iosInfo);
          t0 = iosDeviceInfo.identifierForVendor;
          return t0 == null ? "" : t0;
        } else {
          let androidId = (yield base_utils.BaseUtils.getDeviceAndroidId());
          logger['TypeExtension|Log'](core.String, "getDeviceId() : androidId = " + androidId, "APP");
          return androidId;
        }
      });
    }
    static getDeviceAndroidId() {
      return async.async(core.String, function* getDeviceAndroidId() {
        let t0;
        let _androidIdPlugin = C[0] || CT.C0;
        let androidId = (yield _androidIdPlugin.getId());
        t0 = androidId;
        return t0 == null ? "" : t0;
      });
    }
    static getDeviceInfo() {
      return async.async(core.String, function* getDeviceInfo() {
        let deviceInfo = new device_info_plus.DeviceInfoPlugin.new();
        let uri = "";
        let osName = "";
        let packageInfo = (yield package_info_plus.PackageInfo.fromPlatform());
        if (io.Platform.isAndroid) {
          let androidInfo = (yield deviceInfo.androidInfo);
          let androidId = (yield base_utils.BaseUtils.getDeviceAndroidId());
          osName = "ANDROID";
          uri = "{\"DeviceName\":\"" + dart.nullCheck(androidInfo.device) + "\",\"DeviceID\":\"" + androidId + "\",\"OsName\":\"" + osName + "\",\"OsVersion\":\"" + dart.nullCheck(androidInfo.bootloader) + "\",\"AppName\":\"" + packageInfo.appName + "\",\"AppVersion\":\"" + packageInfo.version + "\",\"UserName\":\"\",\"LocationInfo\":\"\",\"Adv\":\"0\"}";
        } else if (io.Platform.isIOS) {
          let iosInfo = (yield deviceInfo.iosInfo);
          osName = "iOS";
          uri = "{\"DeviceName\":\"" + dart.nullCheck(iosInfo.name) + "\",\"DeviceID\":\"" + dart.nullCheck(iosInfo.identifierForVendor) + "\",\"OsName\":\"" + osName + "\",\"OsVersion\":\"" + dart.nullCheck(iosInfo.systemVersion) + "\",\"AppName\":\"" + packageInfo.appName + "\",\"AppVersion\":\"" + packageInfo.version + "\",\"UserName\":\"\",\"LocationInfo\":\"\",\"Adv\":\"0\"}";
        } else {
          osName = "other";
        }
        return uri;
      });
    }
    static getDeviceVersion() {
      return async.async(core.bool, function* getDeviceVersion() {
        let deviceInfo = new device_info_plus.DeviceInfoPlugin.new();
        try {
          if (io.Platform.isIOS) {
            let iosInfo = (yield deviceInfo.iosInfo);
            let version = core.double.parse(dart.nullCheck(iosInfo.utsname.machine)[$split]("iPhone")[$_get](1));
            return version > 10.5;
          } else {
            return false;
          }
        } catch (e) {
          let err = dart.getThrown(e);
          if (core.Object.is(err)) {
            return false;
          } else
            throw e;
        }
      });
    }
    static convertDurationToTimeString(d) {
      let h = "";
      let m = d.inMinutes[$remainder](60)[$toString]();
      let s = d.inSeconds[$remainder](60)[$toString]();
      if (d.inHours !== 0) {
        h = d.inHours[$toString]();
      }
      return h[$isNotEmpty] ? h + ":" + m + ":" + s : m + ":" + s;
    }
    static convertTimeStringToDuration(s) {
      let hours = 0;
      let minutes = 0;
      let micros = null;
      let parts = s[$split](":");
      if (parts[$length] > 2) {
        hours = core.int.parse(parts[$_get](parts[$length] - 3));
      }
      if (parts[$length] > 1) {
        minutes = core.int.parse(parts[$_get](parts[$length] - 2));
      }
      micros = (core.double.parse(parts[$_get](parts[$length] - 1)) * 1000000)[$round]();
      return new core.Duration.new({hours: hours, minutes: minutes, microseconds: core.int.as(micros)});
    }
    static getFormatCapacity(number) {
      let s = null;
      if (number[$toString]().length > 9) {
        s = base_utils.BaseUtils.getFormatListenViewCounter().format(number)[$substring](0, 2) + " Gb";
      } else if (number[$toString]().length > 6) {
        s = base_utils.BaseUtils.getFormatListenViewCounter().format(number)[$substring](0, 2) + " Mb";
      } else if (number[$toString]().length > 3) {
        s = base_utils.BaseUtils.getFormatListenViewCounter().format(number)[$substring](0, 2) + " Kb";
      } else {
        s = base_utils.BaseUtils.getFormatListenViewCounter().format(number)[$substring](0, 2) + " byte";
      }
      return s;
    }
    static getFormatListenViewCounter() {
      return number_format.NumberFormat.new("###,###,###,###.##", "en_US");
    }
    static getFormatPhoneNumber() {
      return number_format.NumberFormat.new("### #### ####", "en_US");
    }
    static getFormatIAPPackagePricesAtLocaleVN(defaultPrices) {
      let vnLocalePrice = rx_types['ListExtension|get#obs'](core.String, T.JSArrayOfString().of([]));
      for (let item of defaultPrices) {
        if (base_utils.BaseUtils.isLocaleVN() && item[$contains]("000")) {
          if (io.Platform.isIOS || io.Platform.isMacOS) {
            vnLocalePrice.add(item[$substring](1, item.length)[$replaceAll]("000", "k"));
          } else if (io.Platform.isAndroid) {
            vnLocalePrice.add(item[$substring](0, item.length - 1)[$replaceAll](".000", "k"));
          }
        } else {
          vnLocalePrice.add(item);
        }
      }
      return vnLocalePrice;
    }
    static getUTCLocal(opts) {
      let dtm = opts && 'dtm' in opts ? opts.dtm : null;
      let pattern = opts && 'pattern' in opts ? opts.pattern : "";
      return dtm.add(core.Duration.zero);
    }
    static getUtcNowInTimeStamp() {
      return new core.DateTime.now().microsecondsSinceEpoch;
    }
    static isBooleanValue(s) {
      if (typeof s == 'string') {
        return s[$toLowerCase]() === "true" || s[$toLowerCase]() === "1b";
      } else if (values.Byte.is(s)) {
        return s.value === 1;
      } else {
        return core.bool.as(s);
      }
    }
    static isNullOrEmpty(str) {
      return T.JSArrayOfObjectN().of(["", "null", "{}", null, false, 0])[$contains](str);
    }
    static isLocaleVN() {
      return io.Platform.localeName[$contains]("VN");
    }
    static isSmallerThan5InchDeviceType() {
      return extension_navigation['GetNavigation|get#width'](get_main.Get) < 390.0;
    }
    static isProMaxDeviceType() {
      return extension_navigation['GetNavigation|get#width'](get_main.Get) >= 400.0 && extension_navigation['GetNavigation|get#mediaQuery'](get_main.Get).padding.bottom > 20.0;
    }
    static preventClickSoFast(timer, $function) {
      if (dart.dload(timer, 'value') != null && dart.dtest(dart.dload(dart.dload(timer, 'value'), 'isActive'))) {
        dart.dsend(dart.dload(timer, 'value'), 'cancel', []);
        dart.dput(timer, 'value', null);
      }
      dart.dput(timer, 'value', async.Timer.new(C[1] || CT.C1, dart.fn(() => dart.dcall($function, []), T.VoidTovoid())));
    }
    randomInRange(min, max) {
      return (min + math.Random.new().nextInt(max - min))[$toDouble]();
    }
    static throttleTime($function) {
      return async.async(dart.dynamic, function* throttleTime() {
        return throttle['ThrottleExtensions|throttleTime'](T.VoidToFutureOfvoid(), T.StreamOfVoidToFutureOfvoid().fromIterable(T.JSArrayOfVoidToFutureOfvoid().of([$function])), C[2] || CT.C2).listen(dart.fn(event => {
          event();
        }, T.FnTovoid()));
      });
    }
    static upperCaseFirst(opts) {
      let pattern = opts && 'pattern' in opts ? opts.pattern : "";
      return pattern[$isEmpty] ? "" : pattern[$_get](0)[$toUpperCase]() + pattern[$substring](1);
    }
    static ['_#new#tearOff']() {
      return new base_utils.BaseUtils.new();
    }
  };
  (base_utils.BaseUtils.new = function() {
    ;
  }).prototype = base_utils.BaseUtils.prototype;
  dart.addTypeTests(base_utils.BaseUtils);
  dart.addTypeCaches(base_utils.BaseUtils);
  dart.setMethodSignature(base_utils.BaseUtils, () => ({
    __proto__: dart.getMethods(base_utils.BaseUtils.__proto__),
    randomInRange: dart.fnType(core.double, [core.int, core.int])
  }));
  dart.setStaticMethodSignature(base_utils.BaseUtils, () => ['generateMd5', 'getDecodedToken', 'getDeviceId', 'getDeviceAndroidId', 'getDeviceInfo', 'getDeviceVersion', 'convertDurationToTimeString', 'convertTimeStringToDuration', 'getFormatCapacity', 'getFormatListenViewCounter', 'getFormatPhoneNumber', 'getFormatIAPPackagePricesAtLocaleVN', 'getUTCLocal', 'getUtcNowInTimeStamp', 'isBooleanValue', 'isNullOrEmpty', 'isLocaleVN', 'isSmallerThan5InchDeviceType', 'isProMaxDeviceType', 'preventClickSoFast', 'throttleTime', 'upperCaseFirst']);
  dart.setLibraryUri(base_utils.BaseUtils, I[0]);
  dart.trackLibraries("packages/cc_library/util/base_utils.dart", {
    "package:cc_library/util/base_utils.dart": base_utils
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["base_utils.dart"],"names":[],"mappings":"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","file":"../../../../../../../../../../../../packages/cc_library/util/base_utils.dart.lib.js"}');
  // Exports:
  return {
    util__base_utils: base_utils
  };
}));

//# sourceMappingURL=base_utils.dart.lib.js.map
