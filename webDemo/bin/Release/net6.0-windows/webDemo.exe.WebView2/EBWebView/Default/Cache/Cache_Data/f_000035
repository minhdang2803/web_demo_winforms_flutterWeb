define(['dart_sdk', 'packages/flutter/src/painting/edge_insets.dart', 'packages/flutter/src/painting/alignment.dart', 'packages/flutter/src/widgets/title.dart', 'packages/flutter/src/painting/borders.dart', 'packages/flutter/src/rendering/box.dart', 'packages/flutter/src/widgets/icon_theme.dart', 'packages/flutter/src/widgets/icon_theme_data.dart', 'packages/flutter/src/services/mouse_cursor.dart', 'packages/flutter/src/foundation/debug.dart', 'packages/flutter/src/painting/colors.dart', 'packages/flutter/src/material/material_state.dart', 'packages/flutter/src/material/constants.dart', 'packages/flutter/src/material/colors.dart', 'packages/flutter/src/painting/stadium_border.dart', 'packages/flutter/src/painting/placeholder_span.dart', 'packages/flutter/src/material/icons.dart', 'packages/flutter/src/foundation/_platform_web.dart', 'packages/flutter/src/widgets/icon.dart', 'packages/flutter/src/widgets/icon_data.dart', 'packages/flutter/src/services/text_editing_delta.dart', 'packages/flutter/src/animation/animation_controller.dart', 'packages/flutter/src/animation/listener_helpers.dart', 'packages/flutter/src/rendering/layer.dart', 'packages/flutter/src/rendering/layout_helper.dart', 'packages/flutter/src/painting/matrix_utils.dart', 'packages/flutter/src/rendering/shifted_box.dart', 'packages/flutter/src/painting/rounded_rectangle_border.dart', 'packages/flutter/src/painting/border_radius.dart', 'packages/flutter/src/foundation/key.dart', 'packages/flutter/src/rendering/flex.dart', 'packages/flutter/src/widgets/dismissible.dart', 'packages/flutter/src/scheduler/ticker.dart', 'packages/flutter/src/animation/curves.dart', 'packages/flutter/src/widgets/safe_area.dart', 'packages/flutter/src/foundation/object.dart', 'packages/flutter/src/painting/circle_border.dart', 'packages/flutter/src/material/floating_action_button_theme.dart', 'packages/flutter/src/material/typography.dart', 'packages/flutter/src/widgets/layout_builder.dart', 'packages/flutter/src/foundation/math.dart', 'packages/vector_math/vector_math_64.dart', 'packages/flutter/src/widgets/preferred_size.dart', 'packages/flutter/src/painting/basic_types.dart', 'packages/flutter/src/painting/_network_image_web.dart', 'packages/flutter/src/foundation/collections.dart', 'packages/flutter/src/rendering/custom_paint.dart', 'packages/flutter/src/material/tab_controller.dart', 'packages/flutter/src/painting/decoration.dart', 'packages/flutter/src/gestures/recognizer.dart', 'packages/flutter/src/material/tab_indicator.dart', 'packages/flutter/src/widgets/single_child_scroll_view.dart', 'packages/flutter/src/widgets/page_view.dart', 'packages/flutter/src/painting/box_decoration.dart', 'packages/flutter/src/painting/box_border.dart', 'packages/flutter/src/painting/debug.dart', 'packages/flutter/src/widgets/dual_transition_builder.dart', 'packages/flutter/src/animation/tween_sequence.dart', 'packages/flutter/src/cupertino/route.dart', 'packages/flutter/src/painting/shape_decoration.dart', 'packages/flutter/src/rendering/custom_layout.dart', 'packages/flutter/src/widgets/status_transitions.dart', 'packages/flutter/src/foundation/change_notifier.dart', 'packages/flutter/src/material/input_border.dart', 'packages/flutter/src/widgets/slotted_render_object_widget.dart', 'packages/flutter/src/material/material_state_mixin.dart', 'packages/material_color_utilities/scheme/scheme.dart', 'packages/flutter/src/rendering/view.dart', 'packages/flutter/src/gestures/binding.dart', 'packages/flutter/src/material/tooltip_visibility.dart', 'packages/flutter/src/semantics/semantics_service.dart', 'packages/flutter/src/gestures/events.dart', 'packages/flutter/src/rendering/proxy_box.dart', 'packages/flutter/src/painting/geometry.dart', 'packages/flutter/src/widgets/bottom_navigation_bar_item.dart', 'packages/flutter/src/painting/notched_shapes.dart', 'packages/flutter/src/material/bottom_sheet_theme.dart', 'packages/flutter/src/cupertino/text_theme.dart', 'packages/flutter/src/semantics/semantics_event.dart', 'packages/flutter/src/services/system_sound.dart', 'packages/flutter/src/services/haptic_feedback.dart', 'packages/flutter/src/gestures/tap.dart', 'packages/flutter/src/foundation/observer_list.dart', 'packages/flutter/src/painting/decoration_image.dart', 'packages/flutter/src/gestures/drag_details.dart', 'packages/flutter/src/widgets/draggable_scrollable_sheet.dart', 'packages/flutter/src/widgets/overflow_bar.dart', 'packages/flutter/src/widgets/scroll_notification_observer.dart', 'packages/flutter/src/foundation/synchronous_future.dart', 'packages/flutter/src/services/system_chrome.dart', 'packages/flutter/src/widgets/navigation_toolbar.dart', 'packages/flutter/src/rendering/stack.dart', 'packages/flutter/src/semantics/semantics.dart', 'packages/flutter/src/widgets/annotated_region.dart', 'packages/flutter/src/widgets/sliver_persistent_header.dart', 'packages/flutter/src/rendering/sliver_persistent_header.dart'], (function load__packages__flutter__src__material__icon_button_dart(dart_sdk, packages__flutter__src__painting__edge_insets$46dart, packages__flutter__src__painting__alignment$46dart, packages__flutter__src__widgets__title$46dart, packages__flutter__src__painting__borders$46dart, packages__flutter__src__rendering__box$46dart, packages__flutter__src__widgets__icon_theme$46dart, packages__flutter__src__widgets__icon_theme_data$46dart, packages__flutter__src__services__mouse_cursor$46dart, packages__flutter__src__foundation__debug$46dart, packages__flutter__src__painting__colors$46dart, packages__flutter__src__material__material_state$46dart, packages__flutter__src__material__constants$46dart, packages__flutter__src__material__colors$46dart, packages__flutter__src__painting__stadium_border$46dart, packages__flutter__src__painting__placeholder_span$46dart, packages__flutter__src__material__icons$46dart, packages__flutter__src__foundation___platform_web$46dart, packages__flutter__src__widgets__icon$46dart, packages__flutter__src__widgets__icon_data$46dart, packages__flutter__src__services__text_editing_delta$46dart, packages__flutter__src__animation__animation_controller$46dart, packages__flutter__src__animation__listener_helpers$46dart, packages__flutter__src__rendering__layer$46dart, packages__flutter__src__rendering__layout_helper$46dart, packages__flutter__src__painting__matrix_utils$46dart, packages__flutter__src__rendering__shifted_box$46dart, packages__flutter__src__painting__rounded_rectangle_border$46dart, packages__flutter__src__painting__border_radius$46dart, packages__flutter__src__foundation__key$46dart, packages__flutter__src__rendering__flex$46dart, packages__flutter__src__widgets__dismissible$46dart, packages__flutter__src__scheduler__ticker$46dart, packages__flutter__src__animation__curves$46dart, packages__flutter__src__widgets__safe_area$46dart, packages__flutter__src__foundation__object$46dart, packages__flutter__src__painting__circle_border$46dart, packages__flutter__src__material__floating_action_button_theme$46dart, packages__flutter__src__material__typography$46dart, packages__flutter__src__widgets__layout_builder$46dart, packages__flutter__src__foundation__math$46dart, packages__vector_math__vector_math_64$46dart, packages__flutter__src__widgets__preferred_size$46dart, packages__flutter__src__painting__basic_types$46dart, packages__flutter__src__painting___network_image_web$46dart, packages__flutter__src__foundation__collections$46dart, packages__flutter__src__rendering__custom_paint$46dart, packages__flutter__src__material__tab_controller$46dart, packages__flutter__src__painting__decoration$46dart, packages__flutter__src__gestures__recognizer$46dart, packages__flutter__src__material__tab_indicator$46dart, packages__flutter__src__widgets__single_child_scroll_view$46dart, packages__flutter__src__widgets__page_view$46dart, packages__flutter__src__painting__box_decoration$46dart, packages__flutter__src__painting__box_border$46dart, packages__flutter__src__painting__debug$46dart, packages__flutter__src__widgets__dual_transition_builder$46dart, packages__flutter__src__animation__tween_sequence$46dart, packages__flutter__src__cupertino__route$46dart, packages__flutter__src__painting__shape_decoration$46dart, packages__flutter__src__rendering__custom_layout$46dart, packages__flutter__src__widgets__status_transitions$46dart, packages__flutter__src__foundation__change_notifier$46dart, packages__flutter__src__material__input_border$46dart, packages__flutter__src__widgets__slotted_render_object_widget$46dart, packages__flutter__src__material__material_state_mixin$46dart, packages__material_color_utilities__scheme__scheme$46dart, packages__flutter__src__rendering__view$46dart, packages__flutter__src__gestures__binding$46dart, packages__flutter__src__material__tooltip_visibility$46dart, packages__flutter__src__semantics__semantics_service$46dart, packages__flutter__src__gestures__events$46dart, packages__flutter__src__rendering__proxy_box$46dart, packages__flutter__src__painting__geometry$46dart, packages__flutter__src__widgets__bottom_navigation_bar_item$46dart, packages__flutter__src__painting__notched_shapes$46dart, packages__flutter__src__material__bottom_sheet_theme$46dart, packages__flutter__src__cupertino__text_theme$46dart, packages__flutter__src__semantics__semantics_event$46dart, packages__flutter__src__services__system_sound$46dart, packages__flutter__src__services__haptic_feedback$46dart, packages__flutter__src__gestures__tap$46dart, packages__flutter__src__foundation__observer_list$46dart, packages__flutter__src__painting__decoration_image$46dart, packages__flutter__src__gestures__drag_details$46dart, packages__flutter__src__widgets__draggable_scrollable_sheet$46dart, packages__flutter__src__widgets__overflow_bar$46dart, packages__flutter__src__widgets__scroll_notification_observer$46dart, packages__flutter__src__foundation__synchronous_future$46dart, packages__flutter__src__services__system_chrome$46dart, packages__flutter__src__widgets__navigation_toolbar$46dart, packages__flutter__src__rendering__stack$46dart, packages__flutter__src__semantics__semantics$46dart, packages__flutter__src__widgets__annotated_region$46dart, packages__flutter__src__widgets__sliver_persistent_header$46dart, packages__flutter__src__rendering__sliver_persistent_header$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const ui = dart_sdk.ui;
  const math = dart_sdk.math;
  const _internal = dart_sdk._internal;
  const collection = dart_sdk.collection;
  const _interceptors = dart_sdk._interceptors;
  const async = dart_sdk.async;
  const _js_helper = dart_sdk._js_helper;
  const _native_typed_data = dart_sdk._native_typed_data;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const edge_insets = packages__flutter__src__painting__edge_insets$46dart.src__painting__edge_insets;
  const alignment = packages__flutter__src__painting__alignment$46dart.src__painting__alignment;
  const widget_inspector = packages__flutter__src__widgets__title$46dart.src__widgets__widget_inspector;
  const basic = packages__flutter__src__widgets__title$46dart.src__widgets__basic;
  const framework = packages__flutter__src__widgets__title$46dart.src__widgets__framework;
  const focus_manager = packages__flutter__src__widgets__title$46dart.src__widgets__focus_manager;
  const navigator$ = packages__flutter__src__widgets__title$46dart.src__widgets__navigator;
  const debug = packages__flutter__src__widgets__title$46dart.src__widgets__debug;
  const media_query = packages__flutter__src__widgets__title$46dart.src__widgets__media_query;
  const restoration_properties = packages__flutter__src__widgets__title$46dart.src__widgets__restoration_properties;
  const ticker_provider = packages__flutter__src__widgets__title$46dart.src__widgets__ticker_provider;
  const text$ = packages__flutter__src__widgets__title$46dart.src__widgets__text;
  const container = packages__flutter__src__widgets__title$46dart.src__widgets__container;
  const transitions = packages__flutter__src__widgets__title$46dart.src__widgets__transitions;
  const heroes = packages__flutter__src__widgets__title$46dart.src__widgets__heroes;
  const inherited_theme = packages__flutter__src__widgets__title$46dart.src__widgets__inherited_theme;
  const default_selection_style = packages__flutter__src__widgets__title$46dart.src__widgets__default_selection_style;
  const scroll_position_with_single_context = packages__flutter__src__widgets__title$46dart.src__widgets__scroll_position_with_single_context;
  const scroll_controller = packages__flutter__src__widgets__title$46dart.src__widgets__scroll_controller;
  const scroll_physics = packages__flutter__src__widgets__title$46dart.src__widgets__scroll_physics;
  const binding = packages__flutter__src__widgets__title$46dart.src__widgets__binding;
  const scroll_notification = packages__flutter__src__widgets__title$46dart.src__widgets__scroll_notification;
  const notification_listener = packages__flutter__src__widgets__title$46dart.src__widgets__notification_listener;
  const pages = packages__flutter__src__widgets__title$46dart.src__widgets__pages;
  const implicit_animations = packages__flutter__src__widgets__title$46dart.src__widgets__implicit_animations;
  const overlay$ = packages__flutter__src__widgets__title$46dart.src__widgets__overlay;
  const gesture_detector = packages__flutter__src__widgets__title$46dart.src__widgets__gesture_detector;
  const scroll_configuration = packages__flutter__src__widgets__title$46dart.src__widgets__scroll_configuration;
  const actions = packages__flutter__src__widgets__title$46dart.src__widgets__actions;
  const focus_scope = packages__flutter__src__widgets__title$46dart.src__widgets__focus_scope;
  const automatic_keep_alive = packages__flutter__src__widgets__title$46dart.src__widgets__automatic_keep_alive;
  const image = packages__flutter__src__widgets__title$46dart.src__widgets__image;
  const routes = packages__flutter__src__widgets__title$46dart.src__widgets__routes;
  const display_feature_sub_screen = packages__flutter__src__widgets__title$46dart.src__widgets__display_feature_sub_screen;
  const primary_scroll_controller = packages__flutter__src__widgets__title$46dart.src__widgets__primary_scroll_controller;
  const modal_barrier = packages__flutter__src__widgets__title$46dart.src__widgets__modal_barrier;
  const restoration = packages__flutter__src__widgets__title$46dart.src__widgets__restoration;
  const localizations$ = packages__flutter__src__widgets__title$46dart.src__widgets__localizations;
  const borders = packages__flutter__src__painting__borders$46dart.src__painting__borders;
  const box$ = packages__flutter__src__rendering__box$46dart.src__rendering__box;
  const icon_theme = packages__flutter__src__widgets__icon_theme$46dart.src__widgets__icon_theme;
  const icon_theme_data = packages__flutter__src__widgets__icon_theme_data$46dart.src__widgets__icon_theme_data;
  const mouse_cursor = packages__flutter__src__services__mouse_cursor$46dart.src__services__mouse_cursor;
  const diagnostics = packages__flutter__src__foundation__debug$46dart.src__foundation__diagnostics;
  const assertions = packages__flutter__src__foundation__debug$46dart.src__foundation__assertions;
  const debug$ = packages__flutter__src__foundation__debug$46dart.src__foundation__debug;
  const colors = packages__flutter__src__painting__colors$46dart.src__painting__colors;
  const material_state = packages__flutter__src__material__material_state$46dart.src__material__material_state;
  const constants = packages__flutter__src__material__constants$46dart.src__material__constants;
  const colors$ = packages__flutter__src__material__colors$46dart.src__material__colors;
  const stadium_border = packages__flutter__src__painting__stadium_border$46dart.src__painting__stadium_border;
  const text_style = packages__flutter__src__painting__placeholder_span$46dart.src__painting__text_style;
  const text_painter = packages__flutter__src__painting__placeholder_span$46dart.src__painting__text_painter;
  const inline_span = packages__flutter__src__painting__placeholder_span$46dart.src__painting__inline_span;
  const text_span = packages__flutter__src__painting__placeholder_span$46dart.src__painting__text_span;
  const icons = packages__flutter__src__material__icons$46dart.src__material__icons;
  const platform$ = packages__flutter__src__foundation___platform_web$46dart.src__foundation__platform;
  const icon = packages__flutter__src__widgets__icon$46dart.src__widgets__icon;
  const icon_data = packages__flutter__src__widgets__icon_data$46dart.src__widgets__icon_data;
  const restoration$ = packages__flutter__src__services__text_editing_delta$46dart.src__services__restoration;
  const asset_bundle = packages__flutter__src__services__text_editing_delta$46dart.src__services__asset_bundle;
  const animation_controller = packages__flutter__src__animation__animation_controller$46dart.src__animation__animation_controller;
  const animation$ = packages__flutter__src__animation__listener_helpers$46dart.src__animation__animation;
  const animations = packages__flutter__src__animation__listener_helpers$46dart.src__animation__animations;
  const tween = packages__flutter__src__animation__listener_helpers$46dart.src__animation__tween;
  const object = packages__flutter__src__rendering__layer$46dart.src__rendering__object;
  const layer = packages__flutter__src__rendering__layer$46dart.src__rendering__layer;
  const layout_helper = packages__flutter__src__rendering__layout_helper$46dart.src__rendering__layout_helper;
  const matrix_utils = packages__flutter__src__painting__matrix_utils$46dart.src__painting__matrix_utils;
  const shifted_box = packages__flutter__src__rendering__shifted_box$46dart.src__rendering__shifted_box;
  const rounded_rectangle_border = packages__flutter__src__painting__rounded_rectangle_border$46dart.src__painting__rounded_rectangle_border;
  const border_radius = packages__flutter__src__painting__border_radius$46dart.src__painting__border_radius;
  const key = packages__flutter__src__foundation__key$46dart.src__foundation__key;
  const flex = packages__flutter__src__rendering__flex$46dart.src__rendering__flex;
  const dismissible = packages__flutter__src__widgets__dismissible$46dart.src__widgets__dismissible;
  const ticker = packages__flutter__src__scheduler__ticker$46dart.src__scheduler__ticker;
  const curves = packages__flutter__src__animation__curves$46dart.src__animation__curves;
  const safe_area = packages__flutter__src__widgets__safe_area$46dart.src__widgets__safe_area;
  const object$ = packages__flutter__src__foundation__object$46dart.src__foundation__object;
  const circle_border = packages__flutter__src__painting__circle_border$46dart.src__painting__circle_border;
  const floating_action_button_theme = packages__flutter__src__material__floating_action_button_theme$46dart.src__material__floating_action_button_theme;
  const text_theme = packages__flutter__src__material__typography$46dart.src__material__text_theme;
  const typography$ = packages__flutter__src__material__typography$46dart.src__material__typography;
  const layout_builder = packages__flutter__src__widgets__layout_builder$46dart.src__widgets__layout_builder;
  const math$ = packages__flutter__src__foundation__math$46dart.src__foundation__math;
  const vector_math_64 = packages__vector_math__vector_math_64$46dart.vector_math_64;
  const preferred_size = packages__flutter__src__widgets__preferred_size$46dart.src__widgets__preferred_size;
  const basic_types = packages__flutter__src__painting__basic_types$46dart.src__painting__basic_types;
  const image_provider = packages__flutter__src__painting___network_image_web$46dart.src__painting__image_provider;
  const collections = packages__flutter__src__foundation__collections$46dart.src__foundation__collections;
  const custom_paint = packages__flutter__src__rendering__custom_paint$46dart.src__rendering__custom_paint;
  const tab_controller = packages__flutter__src__material__tab_controller$46dart.src__material__tab_controller;
  const decoration = packages__flutter__src__painting__decoration$46dart.src__painting__decoration;
  const recognizer = packages__flutter__src__gestures__recognizer$46dart.src__gestures__recognizer;
  const tab_indicator = packages__flutter__src__material__tab_indicator$46dart.src__material__tab_indicator;
  const single_child_scroll_view = packages__flutter__src__widgets__single_child_scroll_view$46dart.src__widgets__single_child_scroll_view;
  const page_view = packages__flutter__src__widgets__page_view$46dart.src__widgets__page_view;
  const box_decoration = packages__flutter__src__painting__box_decoration$46dart.src__painting__box_decoration;
  const box_border = packages__flutter__src__painting__box_border$46dart.src__painting__box_border;
  const debug$0 = packages__flutter__src__painting__debug$46dart.src__painting__debug;
  const dual_transition_builder = packages__flutter__src__widgets__dual_transition_builder$46dart.src__widgets__dual_transition_builder;
  const tween_sequence = packages__flutter__src__animation__tween_sequence$46dart.src__animation__tween_sequence;
  const route$ = packages__flutter__src__cupertino__route$46dart.src__cupertino__route;
  const shape_decoration = packages__flutter__src__painting__shape_decoration$46dart.src__painting__shape_decoration;
  const custom_layout = packages__flutter__src__rendering__custom_layout$46dart.src__rendering__custom_layout;
  const status_transitions = packages__flutter__src__widgets__status_transitions$46dart.src__widgets__status_transitions;
  const change_notifier = packages__flutter__src__foundation__change_notifier$46dart.src__foundation__change_notifier;
  const input_border = packages__flutter__src__material__input_border$46dart.src__material__input_border;
  const slotted_render_object_widget = packages__flutter__src__widgets__slotted_render_object_widget$46dart.src__widgets__slotted_render_object_widget;
  const material_state_mixin = packages__flutter__src__material__material_state_mixin$46dart.src__material__material_state_mixin;
  const scheme$ = packages__material_color_utilities__scheme__scheme$46dart.scheme__scheme;
  const binding$ = packages__flutter__src__rendering__view$46dart.src__rendering__binding;
  const binding$0 = packages__flutter__src__gestures__binding$46dart.src__gestures__binding;
  const tooltip_visibility = packages__flutter__src__material__tooltip_visibility$46dart.src__material__tooltip_visibility;
  const semantics_service = packages__flutter__src__semantics__semantics_service$46dart.src__semantics__semantics_service;
  const events = packages__flutter__src__gestures__events$46dart.src__gestures__events;
  const proxy_box = packages__flutter__src__rendering__proxy_box$46dart.src__rendering__proxy_box;
  const geometry = packages__flutter__src__painting__geometry$46dart.src__painting__geometry;
  const bottom_navigation_bar_item = packages__flutter__src__widgets__bottom_navigation_bar_item$46dart.src__widgets__bottom_navigation_bar_item;
  const notched_shapes = packages__flutter__src__painting__notched_shapes$46dart.src__painting__notched_shapes;
  const bottom_sheet_theme = packages__flutter__src__material__bottom_sheet_theme$46dart.src__material__bottom_sheet_theme;
  const theme = packages__flutter__src__cupertino__text_theme$46dart.src__cupertino__theme;
  const colors$0 = packages__flutter__src__cupertino__text_theme$46dart.src__cupertino__colors;
  const text_theme$ = packages__flutter__src__cupertino__text_theme$46dart.src__cupertino__text_theme;
  const semantics_event = packages__flutter__src__semantics__semantics_event$46dart.src__semantics__semantics_event;
  const system_sound = packages__flutter__src__services__system_sound$46dart.src__services__system_sound;
  const haptic_feedback = packages__flutter__src__services__haptic_feedback$46dart.src__services__haptic_feedback;
  const tap = packages__flutter__src__gestures__tap$46dart.src__gestures__tap;
  const observer_list = packages__flutter__src__foundation__observer_list$46dart.src__foundation__observer_list;
  const decoration_image = packages__flutter__src__painting__decoration_image$46dart.src__painting__decoration_image;
  const drag_details = packages__flutter__src__gestures__drag_details$46dart.src__gestures__drag_details;
  const draggable_scrollable_sheet = packages__flutter__src__widgets__draggable_scrollable_sheet$46dart.src__widgets__draggable_scrollable_sheet;
  const overflow_bar = packages__flutter__src__widgets__overflow_bar$46dart.src__widgets__overflow_bar;
  const scroll_notification_observer = packages__flutter__src__widgets__scroll_notification_observer$46dart.src__widgets__scroll_notification_observer;
  const synchronous_future = packages__flutter__src__foundation__synchronous_future$46dart.src__foundation__synchronous_future;
  const system_chrome = packages__flutter__src__services__system_chrome$46dart.src__services__system_chrome;
  const navigation_toolbar = packages__flutter__src__widgets__navigation_toolbar$46dart.src__widgets__navigation_toolbar;
  const stack = packages__flutter__src__rendering__stack$46dart.src__rendering__stack;
  const semantics = packages__flutter__src__semantics__semantics$46dart.src__semantics__semantics;
  const annotated_region = packages__flutter__src__widgets__annotated_region$46dart.src__widgets__annotated_region;
  const sliver_persistent_header = packages__flutter__src__widgets__sliver_persistent_header$46dart.src__widgets__sliver_persistent_header;
  const sliver_persistent_header$ = packages__flutter__src__rendering__sliver_persistent_header$46dart.src__rendering__sliver_persistent_header;
  var icon_button = Object.create(dart.library);
  var back_button = Object.create(dart.library);
  var time$ = Object.create(dart.library);
  var button_style_button = Object.create(dart.library);
  var text_button = Object.create(dart.library);
  var snack_bar = Object.create(dart.library);
  var floating_action_button_location = Object.create(dart.library);
  var floating_action_button = Object.create(dart.library);
  var flexible_space_bar = Object.create(dart.library);
  var toggle_buttons_theme = Object.create(dart.library);
  var time_picker_theme = Object.create(dart.library);
  var text_selection_theme = Object.create(dart.library);
  var text_button_theme = Object.create(dart.library);
  var tabs$ = Object.create(dart.library);
  var tab_bar_theme = Object.create(dart.library);
  var switch_theme = Object.create(dart.library);
  var snack_bar_theme = Object.create(dart.library);
  var slider_theme = Object.create(dart.library);
  var scrollbar_theme = Object.create(dart.library);
  var radio_theme = Object.create(dart.library);
  var progress_indicator_theme = Object.create(dart.library);
  var popup_menu_theme = Object.create(dart.library);
  var page_transitions_theme = Object.create(dart.library);
  var outlined_button_theme = Object.create(dart.library);
  var navigation_rail = Object.create(dart.library);
  var navigation_rail_theme = Object.create(dart.library);
  var navigation_bar = Object.create(dart.library);
  var navigation_bar_theme = Object.create(dart.library);
  var input_decorator = Object.create(dart.library);
  var ink_splash = Object.create(dart.library);
  var ink_sparkle = Object.create(dart.library);
  var ink_ripple = Object.create(dart.library);
  var expansion_tile_theme = Object.create(dart.library);
  var button_style = Object.create(dart.library);
  var elevated_button_theme = Object.create(dart.library);
  var dialog_theme = Object.create(dart.library);
  var data_table_theme = Object.create(dart.library);
  var chip_theme = Object.create(dart.library);
  var checkbox_theme = Object.create(dart.library);
  var card_theme = Object.create(dart.library);
  var button = Object.create(dart.library);
  var material_button = Object.create(dart.library);
  var color_scheme = Object.create(dart.library);
  var button_theme = Object.create(dart.library);
  var button_bar_theme = Object.create(dart.library);
  var tooltip_theme = Object.create(dart.library);
  var tooltip = Object.create(dart.library);
  var bottom_navigation_bar = Object.create(dart.library);
  var bottom_navigation_bar_theme = Object.create(dart.library);
  var bottom_app_bar_theme = Object.create(dart.library);
  var theme_data = Object.create(dart.library);
  var list_tile_theme = Object.create(dart.library);
  var ink_highlight = Object.create(dart.library);
  var feedback = Object.create(dart.library);
  var ink_well = Object.create(dart.library);
  var ink_decoration = Object.create(dart.library);
  var list_tile = Object.create(dart.library);
  var drawer_theme = Object.create(dart.library);
  var drawer = Object.create(dart.library);
  var bottom_sheet = Object.create(dart.library);
  var divider_theme = Object.create(dart.library);
  var divider = Object.create(dart.library);
  var banner_theme = Object.create(dart.library);
  var banner = Object.create(dart.library);
  var scaffold$ = Object.create(dart.library);
  var elevation_overlay = Object.create(dart.library);
  var material = Object.create(dart.library);
  var debug$1 = Object.create(dart.library);
  var material_localizations = Object.create(dart.library);
  var theme$ = Object.create(dart.library);
  var app_bar_theme = Object.create(dart.library);
  var app_bar = Object.create(dart.library);
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(false);
  var T$ = {
    DiagnosticsPropertyOfWidget: () => (T$.DiagnosticsPropertyOfWidget = dart.constFn(diagnostics.DiagnosticsProperty$(framework.Widget)))(),
    VoidTovoid: () => (T$.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    ObjectFlagPropertyOfVoidTovoid: () => (T$.ObjectFlagPropertyOfVoidTovoid = dart.constFn(diagnostics.ObjectFlagProperty$(T$.VoidTovoid())))(),
    DiagnosticsPropertyOfEdgeInsetsGeometry: () => (T$.DiagnosticsPropertyOfEdgeInsetsGeometry = dart.constFn(diagnostics.DiagnosticsProperty$(edge_insets.EdgeInsetsGeometry)))(),
    DiagnosticsPropertyOfFocusNode: () => (T$.DiagnosticsPropertyOfFocusNode = dart.constFn(diagnostics.DiagnosticsProperty$(focus_manager.FocusNode)))(),
    LinkedHashSetOfMaterialState: () => (T$.LinkedHashSetOfMaterialState = dart.constFn(collection.LinkedHashSet$(material_state.MaterialState)))(),
    DiagnosticsPropertyOfButtonStyle: () => (T$.DiagnosticsPropertyOfButtonStyle = dart.constFn(diagnostics.DiagnosticsProperty$(button_style.ButtonStyle)))(),
    ColorN: () => (T$.ColorN = dart.constFn(dart.nullable(ui.Color)))(),
    SetOfMaterialState: () => (T$.SetOfMaterialState = dart.constFn(core.Set$(material_state.MaterialState)))(),
    SetOfMaterialStateToColor: () => (T$.SetOfMaterialStateToColor = dart.constFn(dart.fnType(ui.Color, [T$.SetOfMaterialState()])))(),
    SetOfMaterialStateToColorN: () => (T$.SetOfMaterialStateToColorN = dart.constFn(dart.fnType(T$.ColorN(), [T$.SetOfMaterialState()])))(),
    MouseCursorN: () => (T$.MouseCursorN = dart.constFn(dart.nullable(mouse_cursor.MouseCursor)))(),
    SetOfMaterialStateToSystemMouseCursor: () => (T$.SetOfMaterialStateToSystemMouseCursor = dart.constFn(dart.fnType(mouse_cursor.SystemMouseCursor, [T$.SetOfMaterialState()])))(),
    TextStyleN: () => (T$.TextStyleN = dart.constFn(dart.nullable(text_style.TextStyle)))(),
    MaterialStatePropertyOfTextStyleN: () => (T$.MaterialStatePropertyOfTextStyleN = dart.constFn(material_state.MaterialStateProperty$(T$.TextStyleN())))(),
    DiagnosticsPropertyOfMaterialStatePropertyOfTextStyleN: () => (T$.DiagnosticsPropertyOfMaterialStatePropertyOfTextStyleN = dart.constFn(diagnostics.DiagnosticsProperty$(T$.MaterialStatePropertyOfTextStyleN())))(),
    MaterialStatePropertyOfColorN: () => (T$.MaterialStatePropertyOfColorN = dart.constFn(material_state.MaterialStateProperty$(T$.ColorN())))(),
    DiagnosticsPropertyOfMaterialStatePropertyOfColorN: () => (T$.DiagnosticsPropertyOfMaterialStatePropertyOfColorN = dart.constFn(diagnostics.DiagnosticsProperty$(T$.MaterialStatePropertyOfColorN())))(),
    doubleN: () => (T$.doubleN = dart.constFn(dart.nullable(core.double)))(),
    MaterialStatePropertyOfdoubleN: () => (T$.MaterialStatePropertyOfdoubleN = dart.constFn(material_state.MaterialStateProperty$(T$.doubleN())))(),
    DiagnosticsPropertyOfMaterialStatePropertyOfdoubleN: () => (T$.DiagnosticsPropertyOfMaterialStatePropertyOfdoubleN = dart.constFn(diagnostics.DiagnosticsProperty$(T$.MaterialStatePropertyOfdoubleN())))(),
    EdgeInsetsGeometryN: () => (T$.EdgeInsetsGeometryN = dart.constFn(dart.nullable(edge_insets.EdgeInsetsGeometry)))(),
    MaterialStatePropertyOfEdgeInsetsGeometryN: () => (T$.MaterialStatePropertyOfEdgeInsetsGeometryN = dart.constFn(material_state.MaterialStateProperty$(T$.EdgeInsetsGeometryN())))(),
    DiagnosticsPropertyOfMaterialStatePropertyOfEdgeInsetsGeometryN: () => (T$.DiagnosticsPropertyOfMaterialStatePropertyOfEdgeInsetsGeometryN = dart.constFn(diagnostics.DiagnosticsProperty$(T$.MaterialStatePropertyOfEdgeInsetsGeometryN())))(),
    SizeN: () => (T$.SizeN = dart.constFn(dart.nullable(ui.Size)))(),
    MaterialStatePropertyOfSizeN: () => (T$.MaterialStatePropertyOfSizeN = dart.constFn(material_state.MaterialStateProperty$(T$.SizeN())))(),
    DiagnosticsPropertyOfMaterialStatePropertyOfSizeN: () => (T$.DiagnosticsPropertyOfMaterialStatePropertyOfSizeN = dart.constFn(diagnostics.DiagnosticsProperty$(T$.MaterialStatePropertyOfSizeN())))(),
    BorderSideN: () => (T$.BorderSideN = dart.constFn(dart.nullable(borders.BorderSide)))(),
    MaterialStatePropertyOfBorderSideN: () => (T$.MaterialStatePropertyOfBorderSideN = dart.constFn(material_state.MaterialStateProperty$(T$.BorderSideN())))(),
    DiagnosticsPropertyOfMaterialStatePropertyOfBorderSideN: () => (T$.DiagnosticsPropertyOfMaterialStatePropertyOfBorderSideN = dart.constFn(diagnostics.DiagnosticsProperty$(T$.MaterialStatePropertyOfBorderSideN())))(),
    OutlinedBorderN: () => (T$.OutlinedBorderN = dart.constFn(dart.nullable(borders.OutlinedBorder)))(),
    MaterialStatePropertyOfOutlinedBorderN: () => (T$.MaterialStatePropertyOfOutlinedBorderN = dart.constFn(material_state.MaterialStateProperty$(T$.OutlinedBorderN())))(),
    DiagnosticsPropertyOfMaterialStatePropertyOfOutlinedBorderN: () => (T$.DiagnosticsPropertyOfMaterialStatePropertyOfOutlinedBorderN = dart.constFn(diagnostics.DiagnosticsProperty$(T$.MaterialStatePropertyOfOutlinedBorderN())))(),
    MaterialStatePropertyOfMouseCursorN: () => (T$.MaterialStatePropertyOfMouseCursorN = dart.constFn(material_state.MaterialStateProperty$(T$.MouseCursorN())))(),
    DiagnosticsPropertyOfMaterialStatePropertyOfMouseCursorN: () => (T$.DiagnosticsPropertyOfMaterialStatePropertyOfMouseCursorN = dart.constFn(diagnostics.DiagnosticsProperty$(T$.MaterialStatePropertyOfMouseCursorN())))(),
    DiagnosticsPropertyOfVisualDensity: () => (T$.DiagnosticsPropertyOfVisualDensity = dart.constFn(diagnostics.DiagnosticsProperty$(theme_data.VisualDensity)))(),
    EnumPropertyOfMaterialTapTargetSize: () => (T$.EnumPropertyOfMaterialTapTargetSize = dart.constFn(diagnostics.EnumProperty$(theme_data.MaterialTapTargetSize)))(),
    DiagnosticsPropertyOfDuration: () => (T$.DiagnosticsPropertyOfDuration = dart.constFn(diagnostics.DiagnosticsProperty$(core.Duration)))(),
    DiagnosticsPropertyOfbool: () => (T$.DiagnosticsPropertyOfbool = dart.constFn(diagnostics.DiagnosticsProperty$(core.bool)))(),
    DiagnosticsPropertyOfAlignmentGeometry: () => (T$.DiagnosticsPropertyOfAlignmentGeometry = dart.constFn(diagnostics.DiagnosticsProperty$(alignment.AlignmentGeometry)))(),
    TextStyleNAndTextStyleNAnddoubleToTextStyleN: () => (T$.TextStyleNAndTextStyleNAnddoubleToTextStyleN = dart.constFn(dart.fnType(T$.TextStyleN(), [T$.TextStyleN(), T$.TextStyleN(), core.double])))(),
    ColorNAndColorNAnddoubleToColorN: () => (T$.ColorNAndColorNAnddoubleToColorN = dart.constFn(dart.fnType(T$.ColorN(), [T$.ColorN(), T$.ColorN(), core.double])))(),
    numN: () => (T$.numN = dart.constFn(dart.nullable(core.num)))(),
    numNAndnumNAnddoubleTodoubleN: () => (T$.numNAndnumNAnddoubleTodoubleN = dart.constFn(dart.fnType(T$.doubleN(), [T$.numN(), T$.numN(), core.double])))(),
    EdgeInsetsGeometryNAndEdgeInsetsGeometryNAnddoubleToEdgeInsetsGeometryN: () => (T$.EdgeInsetsGeometryNAndEdgeInsetsGeometryNAnddoubleToEdgeInsetsGeometryN = dart.constFn(dart.fnType(T$.EdgeInsetsGeometryN(), [T$.EdgeInsetsGeometryN(), T$.EdgeInsetsGeometryN(), core.double])))(),
    SizeNAndSizeNAnddoubleToSizeN: () => (T$.SizeNAndSizeNAnddoubleToSizeN = dart.constFn(dart.fnType(T$.SizeN(), [T$.SizeN(), T$.SizeN(), core.double])))(),
    OutlinedBorderNAndOutlinedBorderNAnddoubleToOutlinedBorderN: () => (T$.OutlinedBorderNAndOutlinedBorderNAnddoubleToOutlinedBorderN = dart.constFn(dart.fnType(T$.OutlinedBorderN(), [T$.OutlinedBorderN(), T$.OutlinedBorderN(), core.double])))(),
    ObjectN: () => (T$.ObjectN = dart.constFn(dart.nullable(core.Object)))(),
    intToString: () => (T$.intToString = dart.constFn(dart.fnType(core.String, [core.int])))(),
    TimeOfDayN: () => (T$.TimeOfDayN = dart.constFn(dart.nullable(time$.TimeOfDay)))(),
    ListOfObjectN: () => (T$.ListOfObjectN = dart.constFn(core.List$(T$.ObjectN())))(),
    JSArrayOfint: () => (T$.JSArrayOfint = dart.constFn(_interceptors.JSArray$(core.int)))(),
    ButtonStyleN: () => (T$.ButtonStyleN = dart.constFn(dart.nullable(button_style.ButtonStyle)))(),
    FnToTN: () => (T$.FnToTN = dart.constFn(dart.gFnType(T => [dart.nullable(T), [dart.fnType(dart.nullable(T), [T$.ButtonStyleN()])]], T => [T$.ObjectN()])))(),
    FnToTN$1: () => (T$.FnToTN$1 = dart.constFn(dart.gFnType(T => [dart.nullable(T), [dart.fnType(dart.nullable(material_state.MaterialStateProperty$(T)), [T$.ButtonStyleN()])]], T => [T$.ObjectN()])))(),
    MaterialStatePropertyNOfdoubleN: () => (T$.MaterialStatePropertyNOfdoubleN = dart.constFn(dart.nullable(T$.MaterialStatePropertyOfdoubleN())))(),
    ButtonStyleNToMaterialStatePropertyNOfdoubleN: () => (T$.ButtonStyleNToMaterialStatePropertyNOfdoubleN = dart.constFn(dart.fnType(T$.MaterialStatePropertyNOfdoubleN(), [T$.ButtonStyleN()])))(),
    MaterialStatePropertyNOfTextStyleN: () => (T$.MaterialStatePropertyNOfTextStyleN = dart.constFn(dart.nullable(T$.MaterialStatePropertyOfTextStyleN())))(),
    ButtonStyleNToMaterialStatePropertyNOfTextStyleN: () => (T$.ButtonStyleNToMaterialStatePropertyNOfTextStyleN = dart.constFn(dart.fnType(T$.MaterialStatePropertyNOfTextStyleN(), [T$.ButtonStyleN()])))(),
    MaterialStatePropertyNOfColorN: () => (T$.MaterialStatePropertyNOfColorN = dart.constFn(dart.nullable(T$.MaterialStatePropertyOfColorN())))(),
    ButtonStyleNToMaterialStatePropertyNOfColorN: () => (T$.ButtonStyleNToMaterialStatePropertyNOfColorN = dart.constFn(dart.fnType(T$.MaterialStatePropertyNOfColorN(), [T$.ButtonStyleN()])))(),
    MaterialStatePropertyNOfEdgeInsetsGeometryN: () => (T$.MaterialStatePropertyNOfEdgeInsetsGeometryN = dart.constFn(dart.nullable(T$.MaterialStatePropertyOfEdgeInsetsGeometryN())))(),
    ButtonStyleNToMaterialStatePropertyNOfEdgeInsetsGeometryN: () => (T$.ButtonStyleNToMaterialStatePropertyNOfEdgeInsetsGeometryN = dart.constFn(dart.fnType(T$.MaterialStatePropertyNOfEdgeInsetsGeometryN(), [T$.ButtonStyleN()])))(),
    MaterialStatePropertyNOfSizeN: () => (T$.MaterialStatePropertyNOfSizeN = dart.constFn(dart.nullable(T$.MaterialStatePropertyOfSizeN())))(),
    ButtonStyleNToMaterialStatePropertyNOfSizeN: () => (T$.ButtonStyleNToMaterialStatePropertyNOfSizeN = dart.constFn(dart.fnType(T$.MaterialStatePropertyNOfSizeN(), [T$.ButtonStyleN()])))(),
    MaterialStatePropertyNOfBorderSideN: () => (T$.MaterialStatePropertyNOfBorderSideN = dart.constFn(dart.nullable(T$.MaterialStatePropertyOfBorderSideN())))(),
    ButtonStyleNToMaterialStatePropertyNOfBorderSideN: () => (T$.ButtonStyleNToMaterialStatePropertyNOfBorderSideN = dart.constFn(dart.fnType(T$.MaterialStatePropertyNOfBorderSideN(), [T$.ButtonStyleN()])))(),
    MaterialStatePropertyNOfOutlinedBorderN: () => (T$.MaterialStatePropertyNOfOutlinedBorderN = dart.constFn(dart.nullable(T$.MaterialStatePropertyOfOutlinedBorderN())))(),
    ButtonStyleNToMaterialStatePropertyNOfOutlinedBorderN: () => (T$.ButtonStyleNToMaterialStatePropertyNOfOutlinedBorderN = dart.constFn(dart.fnType(T$.MaterialStatePropertyNOfOutlinedBorderN(), [T$.ButtonStyleN()])))(),
    ButtonStyleNToMouseCursorN: () => (T$.ButtonStyleNToMouseCursorN = dart.constFn(dart.fnType(T$.MouseCursorN(), [T$.ButtonStyleN()])))(),
    SetOfMaterialStateToMouseCursorN: () => (T$.SetOfMaterialStateToMouseCursorN = dart.constFn(dart.fnType(T$.MouseCursorN(), [T$.SetOfMaterialState()])))(),
    ButtonStyleNToColorN: () => (T$.ButtonStyleNToColorN = dart.constFn(dart.fnType(T$.ColorN(), [T$.ButtonStyleN()])))(),
    VisualDensityN: () => (T$.VisualDensityN = dart.constFn(dart.nullable(theme_data.VisualDensity)))(),
    ButtonStyleNToVisualDensityN: () => (T$.ButtonStyleNToVisualDensityN = dart.constFn(dart.fnType(T$.VisualDensityN(), [T$.ButtonStyleN()])))(),
    MaterialTapTargetSizeN: () => (T$.MaterialTapTargetSizeN = dart.constFn(dart.nullable(theme_data.MaterialTapTargetSize)))(),
    ButtonStyleNToMaterialTapTargetSizeN: () => (T$.ButtonStyleNToMaterialTapTargetSizeN = dart.constFn(dart.fnType(T$.MaterialTapTargetSizeN(), [T$.ButtonStyleN()])))(),
    DurationN: () => (T$.DurationN = dart.constFn(dart.nullable(core.Duration)))(),
    ButtonStyleNToDurationN: () => (T$.ButtonStyleNToDurationN = dart.constFn(dart.fnType(T$.DurationN(), [T$.ButtonStyleN()])))(),
    boolN: () => (T$.boolN = dart.constFn(dart.nullable(core.bool)))(),
    ButtonStyleNToboolN: () => (T$.ButtonStyleNToboolN = dart.constFn(dart.fnType(T$.boolN(), [T$.ButtonStyleN()])))(),
    AlignmentGeometryN: () => (T$.AlignmentGeometryN = dart.constFn(dart.nullable(alignment.AlignmentGeometry)))(),
    ButtonStyleNToAlignmentGeometryN: () => (T$.ButtonStyleNToAlignmentGeometryN = dart.constFn(dart.fnType(T$.AlignmentGeometryN(), [T$.ButtonStyleN()])))(),
    InteractiveInkFeatureFactoryN: () => (T$.InteractiveInkFeatureFactoryN = dart.constFn(dart.nullable(ink_well.InteractiveInkFeatureFactory)))(),
    ButtonStyleNToInteractiveInkFeatureFactoryN: () => (T$.ButtonStyleNToInteractiveInkFeatureFactoryN = dart.constFn(dart.fnType(T$.InteractiveInkFeatureFactoryN(), [T$.ButtonStyleN()])))(),
    AnimationStatusTovoid: () => (T$.AnimationStatusTovoid = dart.constFn(dart.fnType(dart.void, [animation$.AnimationStatus])))(),
    RenderBoxAndBoxConstraintsToSize: () => (T$.RenderBoxAndBoxConstraintsToSize = dart.constFn(dart.fnType(ui.Size, [box$.RenderBox, box$.BoxConstraints])))(),
    BoxHitTestResultAndOffsetTobool: () => (T$.BoxHitTestResultAndOffsetTobool = dart.constFn(dart.fnType(core.bool, [box$.BoxHitTestResult, ui.Offset])))(),
    MaterialStatePropertyAllOfEdgeInsetsGeometry: () => (T$.MaterialStatePropertyAllOfEdgeInsetsGeometry = dart.constFn(material_state.MaterialStatePropertyAll$(edge_insets.EdgeInsetsGeometry)))(),
    JSArrayOfWidget: () => (T$.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))(),
    MaterialStatePropertyAllOfTextStyleN: () => (T$.MaterialStatePropertyAllOfTextStyleN = dart.constFn(material_state.MaterialStatePropertyAll$(T$.TextStyleN())))(),
    StringToString: () => (T$.StringToString = dart.constFn(dart.fnType(core.String, [core.String])))(),
    VoidTobool: () => (T$.VoidTobool = dart.constFn(dart.fnType(core.bool, [])))(),
    ValueKeyOfString: () => (T$.ValueKeyOfString = dart.constFn(key.ValueKey$(core.String)))(),
    DismissDirectionTovoid: () => (T$.DismissDirectionTovoid = dart.constFn(dart.fnType(dart.void, [dismissible.DismissDirection])))(),
    WidgetN: () => (T$.WidgetN = dart.constFn(dart.nullable(framework.Widget)))(),
    BuildContextAndWidgetNToAlign: () => (T$.BuildContextAndWidgetNToAlign = dart.constFn(dart.fnType(basic.Align, [framework.BuildContext, T$.WidgetN()])))(),
    _AnimationSwapOfdouble: () => (T$._AnimationSwapOfdouble = dart.constFn(floating_action_button_location._AnimationSwap$(core.double)))(),
    TweenOfdouble: () => (T$.TweenOfdouble = dart.constFn(tween.Tween$(core.double)))(),
    ObjectFlagPropertyOfObject: () => (T$.ObjectFlagPropertyOfObject = dart.constFn(diagnostics.ObjectFlagProperty$(core.Object)))(),
    DiagnosticsPropertyOfShapeBorder: () => (T$.DiagnosticsPropertyOfShapeBorder = dart.constFn(diagnostics.DiagnosticsProperty$(borders.ShapeBorder)))(),
    DiagnosticsPropertyOfMaterialTapTargetSize: () => (T$.DiagnosticsPropertyOfMaterialTapTargetSize = dart.constFn(diagnostics.DiagnosticsProperty$(theme_data.MaterialTapTargetSize)))(),
    BuildContextAndBoxConstraintsToContainer: () => (T$.BuildContextAndBoxConstraintsToContainer = dart.constFn(dart.fnType(container.Container, [framework.BuildContext, box$.BoxConstraints])))(),
    BuildContextAndBoxConstraintsToClipRect: () => (T$.BuildContextAndBoxConstraintsToClipRect = dart.constFn(dart.fnType(basic.ClipRect, [framework.BuildContext, box$.BoxConstraints])))(),
    DiagnosticsPropertyOfBoxConstraints: () => (T$.DiagnosticsPropertyOfBoxConstraints = dart.constFn(diagnostics.DiagnosticsProperty$(box$.BoxConstraints)))(),
    DiagnosticsPropertyOfBorderRadius: () => (T$.DiagnosticsPropertyOfBorderRadius = dart.constFn(diagnostics.DiagnosticsProperty$(border_radius.BorderRadius)))(),
    DiagnosticsPropertyOfTextStyle: () => (T$.DiagnosticsPropertyOfTextStyle = dart.constFn(diagnostics.DiagnosticsProperty$(text_style.TextStyle)))(),
    DiagnosticsPropertyOfBorderSide: () => (T$.DiagnosticsPropertyOfBorderSide = dart.constFn(diagnostics.DiagnosticsProperty$(borders.BorderSide)))(),
    DiagnosticsPropertyOfInputDecorationTheme: () => (T$.DiagnosticsPropertyOfInputDecorationTheme = dart.constFn(diagnostics.DiagnosticsProperty$(input_decorator.InputDecorationTheme)))(),
    AnimationOfdouble: () => (T$.AnimationOfdouble = dart.constFn(animation$.Animation$(core.double)))(),
    JSArrayOfdouble: () => (T$.JSArrayOfdouble = dart.constFn(_interceptors.JSArray$(core.double)))(),
    StateOfStatefulWidget: () => (T$.StateOfStatefulWidget = dart.constFn(framework.State$(framework.StatefulWidget)))(),
    GlobalKeyOfStateOfStatefulWidget: () => (T$.GlobalKeyOfStateOfStatefulWidget = dart.constFn(framework.GlobalKey$(T$.StateOfStatefulWidget())))(),
    WidgetToGlobalKeyOfStateOfStatefulWidget: () => (T$.WidgetToGlobalKeyOfStateOfStatefulWidget = dart.constFn(dart.fnType(T$.GlobalKeyOfStateOfStatefulWidget(), [framework.Widget])))(),
    ListOfGlobalKeyOfStateOfStatefulWidget: () => (T$.ListOfGlobalKeyOfStateOfStatefulWidget = dart.constFn(core.List$(T$.GlobalKeyOfStateOfStatefulWidget())))(),
    intToGlobalKeyOfStateOfStatefulWidget: () => (T$.intToGlobalKeyOfStateOfStatefulWidget = dart.constFn(dart.fnType(T$.GlobalKeyOfStateOfStatefulWidget(), [core.int])))(),
    DurationTovoid: () => (T$.DurationTovoid = dart.constFn(dart.fnType(dart.void, [core.Duration])))(),
    ListOfWidget: () => (T$.ListOfWidget = dart.constFn(core.List$(framework.Widget)))(),
    intToCenter: () => (T$.intToCenter = dart.constFn(dart.fnType(basic.Center, [core.int])))(),
    FutureOfvoid: () => (T$.FutureOfvoid = dart.constFn(async.Future$(dart.void)))(),
    NotificationListenerOfScrollNotification: () => (T$.NotificationListenerOfScrollNotification = dart.constFn(notification_listener.NotificationListener$(scroll_notification.ScrollNotification)))(),
    intToWidget: () => (T$.intToWidget = dart.constFn(dart.fnType(framework.Widget, [core.int])))(),
    BuildContextAndWidgetNToSemantics: () => (T$.BuildContextAndWidgetNToSemantics = dart.constFn(dart.fnType(basic.Semantics, [framework.BuildContext, T$.WidgetN()])))(),
    DiagnosticsPropertyOfSnackBarBehavior: () => (T$.DiagnosticsPropertyOfSnackBarBehavior = dart.constFn(diagnostics.DiagnosticsProperty$(snack_bar_theme.SnackBarBehavior)))(),
    DiagnosticsPropertyOfSliderComponentShape: () => (T$.DiagnosticsPropertyOfSliderComponentShape = dart.constFn(diagnostics.DiagnosticsProperty$(slider_theme.SliderComponentShape)))(),
    DiagnosticsPropertyOfSliderTickMarkShape: () => (T$.DiagnosticsPropertyOfSliderTickMarkShape = dart.constFn(diagnostics.DiagnosticsProperty$(slider_theme.SliderTickMarkShape)))(),
    DiagnosticsPropertyOfSliderTrackShape: () => (T$.DiagnosticsPropertyOfSliderTrackShape = dart.constFn(diagnostics.DiagnosticsProperty$(slider_theme.SliderTrackShape)))(),
    DiagnosticsPropertyOfRangeSliderTickMarkShape: () => (T$.DiagnosticsPropertyOfRangeSliderTickMarkShape = dart.constFn(diagnostics.DiagnosticsProperty$(slider_theme.RangeSliderTickMarkShape)))(),
    DiagnosticsPropertyOfRangeSliderThumbShape: () => (T$.DiagnosticsPropertyOfRangeSliderThumbShape = dart.constFn(diagnostics.DiagnosticsProperty$(slider_theme.RangeSliderThumbShape)))(),
    DiagnosticsPropertyOfRangeSliderTrackShape: () => (T$.DiagnosticsPropertyOfRangeSliderTrackShape = dart.constFn(diagnostics.DiagnosticsProperty$(slider_theme.RangeSliderTrackShape)))(),
    DiagnosticsPropertyOfRangeSliderValueIndicatorShape: () => (T$.DiagnosticsPropertyOfRangeSliderValueIndicatorShape = dart.constFn(diagnostics.DiagnosticsProperty$(slider_theme.RangeSliderValueIndicatorShape)))(),
    EnumPropertyOfShowValueIndicator: () => (T$.EnumPropertyOfShowValueIndicator = dart.constFn(diagnostics.EnumProperty$(slider_theme.ShowValueIndicator)))(),
    ThumbN: () => (T$.ThumbN = dart.constFn(dart.nullable(slider_theme.Thumb)))(),
    TextDirectionAndRangeValuesAnddouble__ToThumbN: () => (T$.TextDirectionAndRangeValuesAnddouble__ToThumbN = dart.constFn(dart.fnType(T$.ThumbN(), [ui.TextDirection, slider_theme.RangeValues, core.double, ui.Size, ui.Size, core.double])))(),
    DiagnosticsPropertyOfTextDirectionAndRangeValuesAnddouble__ToThumbN: () => (T$.DiagnosticsPropertyOfTextDirectionAndRangeValuesAnddouble__ToThumbN = dart.constFn(diagnostics.DiagnosticsProperty$(T$.TextDirectionAndRangeValuesAnddouble__ToThumbN())))(),
    boolNAndboolNAnddoubleToboolN: () => (T$.boolNAndboolNAnddoubleToboolN = dart.constFn(dart.fnType(T$.boolN(), [T$.boolN(), T$.boolN(), core.double])))(),
    MaterialStatePropertyOfboolN: () => (T$.MaterialStatePropertyOfboolN = dart.constFn(material_state.MaterialStateProperty$(T$.boolN())))(),
    DiagnosticsPropertyOfMaterialStatePropertyOfboolN: () => (T$.DiagnosticsPropertyOfMaterialStatePropertyOfboolN = dart.constFn(diagnostics.DiagnosticsProperty$(T$.MaterialStatePropertyOfboolN())))(),
    DiagnosticsPropertyOfRadius: () => (T$.DiagnosticsPropertyOfRadius = dart.constFn(diagnostics.DiagnosticsProperty$(ui.Radius)))(),
    DiagnosticsPropertyOfdouble: () => (T$.DiagnosticsPropertyOfdouble = dart.constFn(diagnostics.DiagnosticsProperty$(core.double)))(),
    TweenOfOffset: () => (T$.TweenOfOffset = dart.constFn(tween.Tween$(ui.Offset)))(),
    BuildContextAndWidgetNToContainer: () => (T$.BuildContextAndWidgetNToContainer = dart.constFn(dart.fnType(container.Container, [framework.BuildContext, T$.WidgetN()])))(),
    BuildContextAndWidgetNToFractionalTranslation: () => (T$.BuildContextAndWidgetNToFractionalTranslation = dart.constFn(dart.fnType(basic.FractionalTranslation, [framework.BuildContext, T$.WidgetN()])))(),
    BuildContextAndBoxConstraintsToAnimatedBuilder: () => (T$.BuildContextAndBoxConstraintsToAnimatedBuilder = dart.constFn(dart.fnType(transitions.AnimatedBuilder, [framework.BuildContext, box$.BoxConstraints])))(),
    BuildContextAndAnimationOfdoubleAndWidgetNTo_ZoomEnterTransition: () => (T$.BuildContextAndAnimationOfdoubleAndWidgetNTo_ZoomEnterTransition = dart.constFn(dart.fnType(page_transitions_theme._ZoomEnterTransition, [framework.BuildContext, T$.AnimationOfdouble(), T$.WidgetN()])))(),
    BuildContextAndAnimationOfdoubleAndWidgetNTo_ZoomExitTransition: () => (T$.BuildContextAndAnimationOfdoubleAndWidgetNTo_ZoomExitTransition = dart.constFn(dart.fnType(page_transitions_theme._ZoomExitTransition, [framework.BuildContext, T$.AnimationOfdouble(), T$.WidgetN()])))(),
    TweenSequenceItemOfdouble: () => (T$.TweenSequenceItemOfdouble = dart.constFn(tween_sequence.TweenSequenceItem$(core.double)))(),
    JSArrayOfTweenSequenceItemOfdouble: () => (T$.JSArrayOfTweenSequenceItemOfdouble = dart.constFn(_interceptors.JSArray$(T$.TweenSequenceItemOfdouble())))(),
    TweenSequenceOfdouble: () => (T$.TweenSequenceOfdouble = dart.constFn(tween_sequence.TweenSequence$(core.double)))(),
    BuildContextAndWidgetNToColoredBox: () => (T$.BuildContextAndWidgetNToColoredBox = dart.constFn(dart.fnType(basic.ColoredBox, [framework.BuildContext, T$.WidgetN()])))(),
    TweenOfdoubleN: () => (T$.TweenOfdoubleN = dart.constFn(tween.Tween$(T$.doubleN())))(),
    PageTransitionsBuilderN: () => (T$.PageTransitionsBuilderN = dart.constFn(dart.nullable(page_transitions_theme.PageTransitionsBuilder)))(),
    TargetPlatformToPageTransitionsBuilderN: () => (T$.TargetPlatformToPageTransitionsBuilderN = dart.constFn(dart.fnType(T$.PageTransitionsBuilderN(), [platform$.TargetPlatform])))(),
    MapOfTargetPlatform$PageTransitionsBuilder: () => (T$.MapOfTargetPlatform$PageTransitionsBuilder = dart.constFn(core.Map$(platform$.TargetPlatform, page_transitions_theme.PageTransitionsBuilder)))(),
    DiagnosticsPropertyOfMapOfTargetPlatform$PageTransitionsBuilder: () => (T$.DiagnosticsPropertyOfMapOfTargetPlatform$PageTransitionsBuilder = dart.constFn(diagnostics.DiagnosticsProperty$(T$.MapOfTargetPlatform$PageTransitionsBuilder())))(),
    ListOfAnimationController: () => (T$.ListOfAnimationController = dart.constFn(core.List$(animation_controller.AnimationController)))(),
    intToAnimationController: () => (T$.intToAnimationController = dart.constFn(dart.fnType(animation_controller.AnimationController, [core.int])))(),
    AnimationControllerToAnimationOfdouble: () => (T$.AnimationControllerToAnimationOfdouble = dart.constFn(dart.fnType(T$.AnimationOfdouble(), [animation_controller.AnimationController])))(),
    boolTovoid: () => (T$.boolTovoid = dart.constFn(dart.fnType(dart.void, [core.bool])))(),
    VoidToWidget: () => (T$.VoidToWidget = dart.constFn(dart.fnType(framework.Widget, [])))(),
    WidgetTodynamic: () => (T$.WidgetTodynamic = dart.constFn(dart.fnType(dart.dynamic, [framework.Widget])))(),
    DiagnosticsPropertyOfIconThemeData: () => (T$.DiagnosticsPropertyOfIconThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(icon_theme_data.IconThemeData)))(),
    DiagnosticsPropertyOfNavigationRailLabelType: () => (T$.DiagnosticsPropertyOfNavigationRailLabelType = dart.constFn(diagnostics.DiagnosticsProperty$(navigation_rail.NavigationRailLabelType)))(),
    BuildContextAndAnimationOfdoubleTo_NavigationDestinationInfo: () => (T$.BuildContextAndAnimationOfdoubleTo_NavigationDestinationInfo = dart.constFn(dart.fnType(navigation_bar._NavigationDestinationInfo, [framework.BuildContext, T$.AnimationOfdouble()])))(),
    BuildContextAndWidgetNToWidget: () => (T$.BuildContextAndWidgetNToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, T$.WidgetN()])))(),
    BuildContextToStack: () => (T$.BuildContextToStack = dart.constFn(dart.fnType(basic.Stack, [framework.BuildContext])))(),
    BuildContextToPadding: () => (T$.BuildContextToPadding = dart.constFn(dart.fnType(basic.Padding, [framework.BuildContext])))(),
    BuildContextAndWidgetNToTransform: () => (T$.BuildContextAndWidgetNToTransform = dart.constFn(dart.fnType(basic.Transform, [framework.BuildContext, T$.WidgetN()])))(),
    BuildContextAndAnimationOfdoubleToFadeTransition: () => (T$.BuildContextAndAnimationOfdoubleToFadeTransition = dart.constFn(dart.fnType(transitions.FadeTransition, [framework.BuildContext, T$.AnimationOfdouble()])))(),
    BuildContextAndWidgetNTo_SelectableAnimatedBuilder: () => (T$.BuildContextAndWidgetNTo_SelectableAnimatedBuilder = dart.constFn(dart.fnType(navigation_bar._SelectableAnimatedBuilder, [framework.BuildContext, T$.WidgetN()])))(),
    BuildContextAndAnimationOfdoubleToCustomMultiChildLayout: () => (T$.BuildContextAndAnimationOfdoubleToCustomMultiChildLayout = dart.constFn(dart.fnType(basic.CustomMultiChildLayout, [framework.BuildContext, T$.AnimationOfdouble()])))(),
    BuildContextAndAnimationOfdoubleToWidget: () => (T$.BuildContextAndAnimationOfdoubleToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, T$.AnimationOfdouble()])))(),
    SizeTodouble: () => (T$.SizeTodouble = dart.constFn(dart.fnType(core.double, [ui.Size])))(),
    MaterialStatePropertyAllOfIconThemeData: () => (T$.MaterialStatePropertyAllOfIconThemeData = dart.constFn(material_state.MaterialStatePropertyAll$(icon_theme_data.IconThemeData)))(),
    IconThemeDataN: () => (T$.IconThemeDataN = dart.constFn(dart.nullable(icon_theme_data.IconThemeData)))(),
    IconThemeDataNAndIconThemeDataNAnddoubleToIconThemeData: () => (T$.IconThemeDataNAndIconThemeDataNAnddoubleToIconThemeData = dart.constFn(dart.fnType(icon_theme_data.IconThemeData, [T$.IconThemeDataN(), T$.IconThemeDataN(), core.double])))(),
    MaterialStatePropertyOfIconThemeDataN: () => (T$.MaterialStatePropertyOfIconThemeDataN = dart.constFn(material_state.MaterialStateProperty$(T$.IconThemeDataN())))(),
    DiagnosticsPropertyOfMaterialStatePropertyOfIconThemeDataN: () => (T$.DiagnosticsPropertyOfMaterialStatePropertyOfIconThemeDataN = dart.constFn(diagnostics.DiagnosticsProperty$(T$.MaterialStatePropertyOfIconThemeDataN())))(),
    DiagnosticsPropertyOfNavigationDestinationLabelBehavior: () => (T$.DiagnosticsPropertyOfNavigationDestinationLabelBehavior = dart.constFn(diagnostics.DiagnosticsProperty$(navigation_bar.NavigationDestinationLabelBehavior)))(),
    SetOfMaterialStateToIconThemeData: () => (T$.SetOfMaterialStateToIconThemeData = dart.constFn(dart.fnType(icon_theme_data.IconThemeData, [T$.SetOfMaterialState()])))(),
    SetOfMaterialStateToTextStyle: () => (T$.SetOfMaterialStateToTextStyle = dart.constFn(dart.fnType(text_style.TextStyle, [T$.SetOfMaterialState()])))(),
    JSArrayOfListenable: () => (T$.JSArrayOfListenable = dart.constFn(_interceptors.JSArray$(change_notifier.Listenable)))(),
    JSArrayOfRenderBox: () => (T$.JSArrayOfRenderBox = dart.constFn(_interceptors.JSArray$(box$.RenderBox)))(),
    JSArrayOfDiagnosticsNode: () => (T$.JSArrayOfDiagnosticsNode = dart.constFn(_interceptors.JSArray$(diagnostics.DiagnosticsNode)))(),
    RenderBoxN: () => (T$.RenderBoxN = dart.constFn(dart.nullable(box$.RenderBox)))(),
    LinkedMapOfRenderBoxN$double: () => (T$.LinkedMapOfRenderBoxN$double = dart.constFn(_js_helper.LinkedMap$(T$.RenderBoxN(), core.double)))(),
    JSArrayOfRenderBoxN: () => (T$.JSArrayOfRenderBoxN = dart.constFn(_interceptors.JSArray$(T$.RenderBoxN())))(),
    TAndTToT: () => (T$.TAndTToT = dart.constFn(dart.gFnType(T => [T, [T, T]], T => [core.num])))(),
    VoidTodouble: () => (T$.VoidTodouble = dart.constFn(dart.fnType(core.double, [])))(),
    doubleTodynamic: () => (T$.doubleTodynamic = dart.constFn(dart.fnType(dart.dynamic, [core.double])))(),
    RenderBoxAnddoubleTodouble: () => (T$.RenderBoxAnddoubleTodouble = dart.constFn(dart.fnType(core.double, [box$.RenderBox, core.double])))(),
    RenderBoxNTovoid: () => (T$.RenderBoxNTovoid = dart.constFn(dart.fnType(dart.void, [T$.RenderBoxN()])))(),
    TransformLayerN: () => (T$.TransformLayerN = dart.constFn(dart.nullable(layer.TransformLayer)))(),
    SlottedContainerRenderObjectMixinOf_DecorationSlot: () => (T$.SlottedContainerRenderObjectMixinOf_DecorationSlot = dart.constFn(slotted_render_object_widget.SlottedContainerRenderObjectMixin$(input_decorator._DecorationSlot)))(),
    DiagnosticsPropertyOfInputDecoration: () => (T$.DiagnosticsPropertyOfInputDecoration = dart.constFn(diagnostics.DiagnosticsProperty$(input_decorator.InputDecoration)))(),
    VoidToTextStyle: () => (T$.VoidToTextStyle = dart.constFn(dart.fnType(text_style.TextStyle, [])))(),
    InputBorderN: () => (T$.InputBorderN = dart.constFn(dart.nullable(input_border.InputBorder)))(),
    MaterialStatePropertyOfInputBorder: () => (T$.MaterialStatePropertyOfInputBorder = dart.constFn(material_state.MaterialStateProperty$(input_border.InputBorder)))(),
    JSArrayOfObjectN: () => (T$.JSArrayOfObjectN = dart.constFn(_interceptors.JSArray$(T$.ObjectN())))(),
    JSArrayOfString: () => (T$.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    DiagnosticsPropertyOfFloatingLabelBehavior: () => (T$.DiagnosticsPropertyOfFloatingLabelBehavior = dart.constFn(diagnostics.DiagnosticsProperty$(input_decorator.FloatingLabelBehavior)))(),
    DiagnosticsPropertyOfFloatingLabelAlignment: () => (T$.DiagnosticsPropertyOfFloatingLabelAlignment = dart.constFn(diagnostics.DiagnosticsProperty$(input_decorator.FloatingLabelAlignment)))(),
    DiagnosticsPropertyOfColor: () => (T$.DiagnosticsPropertyOfColor = dart.constFn(diagnostics.DiagnosticsProperty$(ui.Color)))(),
    DiagnosticsPropertyOfInputBorder: () => (T$.DiagnosticsPropertyOfInputBorder = dart.constFn(diagnostics.DiagnosticsProperty$(input_border.InputBorder)))(),
    JSArrayOfRenderObject: () => (T$.JSArrayOfRenderObject = dart.constFn(_interceptors.JSArray$(object.RenderObject)))(),
    VoidToRect: () => (T$.VoidToRect = dart.constFn(dart.fnType(ui.Rect, [])))(),
    ConstantTweenOfdouble: () => (T$.ConstantTweenOfdouble = dart.constFn(tween.ConstantTween$(core.double)))(),
    TweenOfVector2: () => (T$.TweenOfVector2 = dart.constFn(tween.Tween$(vector_math_64.Vector2)))(),
    FragmentShaderManagerToNull: () => (T$.FragmentShaderManagerToNull = dart.constFn(dart.fnType(core.Null, [ink_sparkle.FragmentShaderManager])))(),
    ListOfdouble: () => (T$.ListOfdouble = dart.constFn(core.List$(core.double)))(),
    DiagnosticsPropertyOfDecoration: () => (T$.DiagnosticsPropertyOfDecoration = dart.constFn(diagnostics.DiagnosticsProperty$(decoration.Decoration)))(),
    EnumPropertyOfBrightness: () => (T$.EnumPropertyOfBrightness = dart.constFn(diagnostics.EnumProperty$(ui.Brightness)))(),
    DiagnosticsPropertyOfOutlinedBorder: () => (T$.DiagnosticsPropertyOfOutlinedBorder = dart.constFn(diagnostics.DiagnosticsProperty$(borders.OutlinedBorder)))(),
    DiagnosticsPropertyOfClip: () => (T$.DiagnosticsPropertyOfClip = dart.constFn(diagnostics.DiagnosticsProperty$(ui.Clip)))(),
    ShapeBorderN: () => (T$.ShapeBorderN = dart.constFn(dart.nullable(borders.ShapeBorder)))(),
    DiagnosticsPropertyOfButtonTextTheme: () => (T$.DiagnosticsPropertyOfButtonTextTheme = dart.constFn(diagnostics.DiagnosticsProperty$(button_theme.ButtonTextTheme)))(),
    DiagnosticsPropertyOfBrightness: () => (T$.DiagnosticsPropertyOfBrightness = dart.constFn(diagnostics.DiagnosticsProperty$(ui.Brightness)))(),
    EnumPropertyOfButtonTextTheme: () => (T$.EnumPropertyOfButtonTextTheme = dart.constFn(diagnostics.EnumProperty$(button_theme.ButtonTextTheme)))(),
    DiagnosticsPropertyOfColorScheme: () => (T$.DiagnosticsPropertyOfColorScheme = dart.constFn(diagnostics.DiagnosticsProperty$(color_scheme.ColorScheme)))(),
    DiagnosticsPropertyOfMainAxisAlignment: () => (T$.DiagnosticsPropertyOfMainAxisAlignment = dart.constFn(diagnostics.DiagnosticsProperty$(flex.MainAxisAlignment)))(),
    DiagnosticsPropertyOfMainAxisSize: () => (T$.DiagnosticsPropertyOfMainAxisSize = dart.constFn(diagnostics.DiagnosticsProperty$(flex.MainAxisSize)))(),
    DiagnosticsPropertyOfButtonBarLayoutBehavior: () => (T$.DiagnosticsPropertyOfButtonBarLayoutBehavior = dart.constFn(diagnostics.DiagnosticsProperty$(button_theme.ButtonBarLayoutBehavior)))(),
    DiagnosticsPropertyOfVerticalDirection: () => (T$.DiagnosticsPropertyOfVerticalDirection = dart.constFn(diagnostics.DiagnosticsProperty$(basic_types.VerticalDirection)))(),
    DiagnosticsPropertyOfTextAlign: () => (T$.DiagnosticsPropertyOfTextAlign = dart.constFn(diagnostics.DiagnosticsProperty$(ui.TextAlign)))(),
    DiagnosticsPropertyOfTooltipTriggerMode: () => (T$.DiagnosticsPropertyOfTooltipTriggerMode = dart.constFn(diagnostics.DiagnosticsProperty$(tooltip_theme.TooltipTriggerMode)))(),
    JSArrayOfTooltipState: () => (T$.JSArrayOfTooltipState = dart.constFn(_interceptors.JSArray$(tooltip.TooltipState)))(),
    PointerEnterEventTovoid: () => (T$.PointerEnterEventTovoid = dart.constFn(dart.fnType(dart.void, [events.PointerEnterEvent])))(),
    PointerExitEventTovoid: () => (T$.PointerExitEventTovoid = dart.constFn(dart.fnType(dart.void, [events.PointerExitEvent])))(),
    BuildContextToWidget: () => (T$.BuildContextToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext])))(),
    LinkedHashSetOfTooltipState: () => (T$.LinkedHashSetOfTooltipState = dart.constFn(collection.LinkedHashSet$(tooltip.TooltipState)))(),
    BottomNavigationBarItemTobool: () => (T$.BottomNavigationBarItemTobool = dart.constFn(dart.fnType(core.bool, [bottom_navigation_bar_item.BottomNavigationBarItem])))(),
    JSArrayOfAnimationController: () => (T$.JSArrayOfAnimationController = dart.constFn(_interceptors.JSArray$(animation_controller.AnimationController)))(),
    ListQueueOf_Circle: () => (T$.ListQueueOf_Circle = dart.constFn(collection.ListQueue$(bottom_navigation_bar._Circle)))(),
    ListOfCurvedAnimation: () => (T$.ListOfCurvedAnimation = dart.constFn(core.List$(animations.CurvedAnimation)))(),
    intToCurvedAnimation: () => (T$.intToCurvedAnimation = dart.constFn(dart.fnType(animations.CurvedAnimation, [core.int])))(),
    doubleAnddoubleTodouble: () => (T$.doubleAnddoubleTodouble = dart.constFn(dart.fnType(core.double, [core.double, core.double])))(),
    IterableOfAnimationOfdouble: () => (T$.IterableOfAnimationOfdouble = dart.constFn(core.Iterable$(T$.AnimationOfdouble())))(),
    IterableOfAnimationOfdoubleTodouble: () => (T$.IterableOfAnimationOfdoubleTodouble = dart.constFn(dart.fnType(core.double, [T$.IterableOfAnimationOfdouble()])))(),
    DiagnosticsPropertyOfBottomNavigationBarType: () => (T$.DiagnosticsPropertyOfBottomNavigationBarType = dart.constFn(diagnostics.DiagnosticsProperty$(bottom_navigation_bar.BottomNavigationBarType)))(),
    DiagnosticsPropertyOfBottomNavigationBarLandscapeLayout: () => (T$.DiagnosticsPropertyOfBottomNavigationBarLandscapeLayout = dart.constFn(diagnostics.DiagnosticsProperty$(bottom_navigation_bar.BottomNavigationBarLandscapeLayout)))(),
    DiagnosticsPropertyOfNotchedShape: () => (T$.DiagnosticsPropertyOfNotchedShape = dart.constFn(diagnostics.DiagnosticsProperty$(notched_shapes.NotchedShape)))(),
    ThemeExtensionOfThemeExtension: () => (T$.ThemeExtensionOfThemeExtension = dart.constFn(theme_data.ThemeExtension$(theme_data.ThemeExtension)))(),
    JSArrayOfThemeExtensionOfThemeExtension: () => (T$.JSArrayOfThemeExtensionOfThemeExtension = dart.constFn(_interceptors.JSArray$(T$.ThemeExtensionOfThemeExtension())))(),
    VoidToThemeData: () => (T$.VoidToThemeData = dart.constFn(dart.fnType(theme_data.ThemeData, [])))(),
    MapEntryOfObject$ThemeExtension: () => (T$.MapEntryOfObject$ThemeExtension = dart.constFn(core.MapEntry$(core.Object, theme_data.ThemeExtension)))(),
    ObjectAndThemeExtensionToMapEntryOfObject$ThemeExtension: () => (T$.ObjectAndThemeExtensionToMapEntryOfObject$ThemeExtension = dart.constFn(dart.fnType(T$.MapEntryOfObject$ThemeExtension(), [core.Object, theme_data.ThemeExtension])))(),
    MapEntryOfObject$ThemeExtensionTobool: () => (T$.MapEntryOfObject$ThemeExtensionTobool = dart.constFn(dart.fnType(core.bool, [T$.MapEntryOfObject$ThemeExtension()])))(),
    MapOfObject$ThemeExtension: () => (T$.MapOfObject$ThemeExtension = dart.constFn(core.Map$(core.Object, theme_data.ThemeExtension)))(),
    LinkedMapOfObject$ThemeExtensionOfThemeExtension: () => (T$.LinkedMapOfObject$ThemeExtensionOfThemeExtension = dart.constFn(_js_helper.LinkedMap$(core.Object, T$.ThemeExtensionOfThemeExtension())))(),
    DiagnosticsPropertyOfNoDefaultCupertinoThemeData: () => (T$.DiagnosticsPropertyOfNoDefaultCupertinoThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(theme.NoDefaultCupertinoThemeData)))(),
    IterablePropertyOfThemeExtension: () => (T$.IterablePropertyOfThemeExtension = dart.constFn(diagnostics.IterableProperty$(theme_data.ThemeExtension)))(),
    DiagnosticsPropertyOfPageTransitionsTheme: () => (T$.DiagnosticsPropertyOfPageTransitionsTheme = dart.constFn(diagnostics.DiagnosticsProperty$(page_transitions_theme.PageTransitionsTheme)))(),
    EnumPropertyOfTargetPlatform: () => (T$.EnumPropertyOfTargetPlatform = dart.constFn(diagnostics.EnumProperty$(platform$.TargetPlatform)))(),
    DiagnosticsPropertyOfScrollbarThemeData: () => (T$.DiagnosticsPropertyOfScrollbarThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(scrollbar_theme.ScrollbarThemeData)))(),
    DiagnosticsPropertyOfInteractiveInkFeatureFactory: () => (T$.DiagnosticsPropertyOfInteractiveInkFeatureFactory = dart.constFn(diagnostics.DiagnosticsProperty$(ink_well.InteractiveInkFeatureFactory)))(),
    DiagnosticsPropertyOfTextTheme: () => (T$.DiagnosticsPropertyOfTextTheme = dart.constFn(diagnostics.DiagnosticsProperty$(text_theme.TextTheme)))(),
    DiagnosticsPropertyOfTypography: () => (T$.DiagnosticsPropertyOfTypography = dart.constFn(diagnostics.DiagnosticsProperty$(typography$.Typography)))(),
    DiagnosticsPropertyOfAppBarTheme: () => (T$.DiagnosticsPropertyOfAppBarTheme = dart.constFn(diagnostics.DiagnosticsProperty$(app_bar_theme.AppBarTheme)))(),
    DiagnosticsPropertyOfMaterialBannerThemeData: () => (T$.DiagnosticsPropertyOfMaterialBannerThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(banner_theme.MaterialBannerThemeData)))(),
    DiagnosticsPropertyOfBottomAppBarTheme: () => (T$.DiagnosticsPropertyOfBottomAppBarTheme = dart.constFn(diagnostics.DiagnosticsProperty$(bottom_app_bar_theme.BottomAppBarTheme)))(),
    DiagnosticsPropertyOfBottomNavigationBarThemeData: () => (T$.DiagnosticsPropertyOfBottomNavigationBarThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(bottom_navigation_bar_theme.BottomNavigationBarThemeData)))(),
    DiagnosticsPropertyOfBottomSheetThemeData: () => (T$.DiagnosticsPropertyOfBottomSheetThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(bottom_sheet_theme.BottomSheetThemeData)))(),
    DiagnosticsPropertyOfButtonBarThemeData: () => (T$.DiagnosticsPropertyOfButtonBarThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(button_bar_theme.ButtonBarThemeData)))(),
    DiagnosticsPropertyOfButtonThemeData: () => (T$.DiagnosticsPropertyOfButtonThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(button_theme.ButtonThemeData)))(),
    DiagnosticsPropertyOfCardTheme: () => (T$.DiagnosticsPropertyOfCardTheme = dart.constFn(diagnostics.DiagnosticsProperty$(card_theme.CardTheme)))(),
    DiagnosticsPropertyOfCheckboxThemeData: () => (T$.DiagnosticsPropertyOfCheckboxThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(checkbox_theme.CheckboxThemeData)))(),
    DiagnosticsPropertyOfChipThemeData: () => (T$.DiagnosticsPropertyOfChipThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(chip_theme.ChipThemeData)))(),
    DiagnosticsPropertyOfDataTableThemeData: () => (T$.DiagnosticsPropertyOfDataTableThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(data_table_theme.DataTableThemeData)))(),
    DiagnosticsPropertyOfDialogTheme: () => (T$.DiagnosticsPropertyOfDialogTheme = dart.constFn(diagnostics.DiagnosticsProperty$(dialog_theme.DialogTheme)))(),
    DiagnosticsPropertyOfDividerThemeData: () => (T$.DiagnosticsPropertyOfDividerThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(divider_theme.DividerThemeData)))(),
    DiagnosticsPropertyOfDrawerThemeData: () => (T$.DiagnosticsPropertyOfDrawerThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(drawer_theme.DrawerThemeData)))(),
    DiagnosticsPropertyOfElevatedButtonThemeData: () => (T$.DiagnosticsPropertyOfElevatedButtonThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(elevated_button_theme.ElevatedButtonThemeData)))(),
    DiagnosticsPropertyOfExpansionTileThemeData: () => (T$.DiagnosticsPropertyOfExpansionTileThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(expansion_tile_theme.ExpansionTileThemeData)))(),
    DiagnosticsPropertyOfFloatingActionButtonThemeData: () => (T$.DiagnosticsPropertyOfFloatingActionButtonThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(floating_action_button_theme.FloatingActionButtonThemeData)))(),
    DiagnosticsPropertyOfListTileThemeData: () => (T$.DiagnosticsPropertyOfListTileThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(list_tile_theme.ListTileThemeData)))(),
    DiagnosticsPropertyOfNavigationBarThemeData: () => (T$.DiagnosticsPropertyOfNavigationBarThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(navigation_bar_theme.NavigationBarThemeData)))(),
    DiagnosticsPropertyOfNavigationRailThemeData: () => (T$.DiagnosticsPropertyOfNavigationRailThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(navigation_rail_theme.NavigationRailThemeData)))(),
    DiagnosticsPropertyOfOutlinedButtonThemeData: () => (T$.DiagnosticsPropertyOfOutlinedButtonThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(outlined_button_theme.OutlinedButtonThemeData)))(),
    DiagnosticsPropertyOfPopupMenuThemeData: () => (T$.DiagnosticsPropertyOfPopupMenuThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(popup_menu_theme.PopupMenuThemeData)))(),
    DiagnosticsPropertyOfProgressIndicatorThemeData: () => (T$.DiagnosticsPropertyOfProgressIndicatorThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(progress_indicator_theme.ProgressIndicatorThemeData)))(),
    DiagnosticsPropertyOfRadioThemeData: () => (T$.DiagnosticsPropertyOfRadioThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(radio_theme.RadioThemeData)))(),
    DiagnosticsPropertyOfSliderThemeData: () => (T$.DiagnosticsPropertyOfSliderThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(slider_theme.SliderThemeData)))(),
    DiagnosticsPropertyOfSnackBarThemeData: () => (T$.DiagnosticsPropertyOfSnackBarThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(snack_bar_theme.SnackBarThemeData)))(),
    DiagnosticsPropertyOfSwitchThemeData: () => (T$.DiagnosticsPropertyOfSwitchThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(switch_theme.SwitchThemeData)))(),
    DiagnosticsPropertyOfTabBarTheme: () => (T$.DiagnosticsPropertyOfTabBarTheme = dart.constFn(diagnostics.DiagnosticsProperty$(tab_bar_theme.TabBarTheme)))(),
    DiagnosticsPropertyOfTextButtonThemeData: () => (T$.DiagnosticsPropertyOfTextButtonThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(text_button_theme.TextButtonThemeData)))(),
    DiagnosticsPropertyOfTextSelectionThemeData: () => (T$.DiagnosticsPropertyOfTextSelectionThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(text_selection_theme.TextSelectionThemeData)))(),
    DiagnosticsPropertyOfTimePickerThemeData: () => (T$.DiagnosticsPropertyOfTimePickerThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(time_picker_theme.TimePickerThemeData)))(),
    DiagnosticsPropertyOfToggleButtonsThemeData: () => (T$.DiagnosticsPropertyOfToggleButtonsThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(toggle_buttons_theme.ToggleButtonsThemeData)))(),
    DiagnosticsPropertyOfTooltipThemeData: () => (T$.DiagnosticsPropertyOfTooltipThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(tooltip_theme.TooltipThemeData)))(),
    EnumPropertyOfAndroidOverscrollIndicator: () => (T$.EnumPropertyOfAndroidOverscrollIndicator = dart.constFn(diagnostics.EnumProperty$(scroll_configuration.AndroidOverscrollIndicator)))(),
    _FifoCacheOf_IdentityThemeDataCacheKey$ThemeData: () => (T$._FifoCacheOf_IdentityThemeDataCacheKey$ThemeData = dart.constFn(theme_data._FifoCache$(theme_data._IdentityThemeDataCacheKey, theme_data.ThemeData)))(),
    EnumPropertyOfListTileStyle: () => (T$.EnumPropertyOfListTileStyle = dart.constFn(diagnostics.EnumProperty$(list_tile.ListTileStyle)))(),
    BuildContextToListTileTheme: () => (T$.BuildContextToListTileTheme = dart.constFn(dart.fnType(list_tile_theme.ListTileTheme, [framework.BuildContext])))(),
    IterablePropertyOfString: () => (T$.IterablePropertyOfString = dart.constFn(diagnostics.IterableProperty$(core.String)))(),
    DiagnosticsPropertyOfMouseCursor: () => (T$.DiagnosticsPropertyOfMouseCursor = dart.constFn(diagnostics.DiagnosticsProperty$(mouse_cursor.MouseCursor)))(),
    DiagnosticsPropertyOfBoxShape: () => (T$.DiagnosticsPropertyOfBoxShape = dart.constFn(diagnostics.DiagnosticsProperty$(box_border.BoxShape)))(),
    InkHighlightN: () => (T$.InkHighlightN = dart.constFn(dart.nullable(ink_highlight.InkHighlight)))(),
    LinkedMapOf_HighlightType$InkHighlightN: () => (T$.LinkedMapOf_HighlightType$InkHighlightN = dart.constFn(_js_helper.LinkedMap$(ink_well._HighlightType, T$.InkHighlightN())))(),
    ObserverListOf_ParentInkResponseState: () => (T$.ObserverListOf_ParentInkResponseState = dart.constFn(observer_list.ObserverList$(ink_well._ParentInkResponseState)))(),
    CallbackActionOfActivateIntent: () => (T$.CallbackActionOfActivateIntent = dart.constFn(actions.CallbackAction$(actions.ActivateIntent)))(),
    CallbackActionOfButtonActivateIntent: () => (T$.CallbackActionOfButtonActivateIntent = dart.constFn(actions.CallbackAction$(actions.ButtonActivateIntent)))(),
    ActionOfIntent: () => (T$.ActionOfIntent = dart.constFn(actions.Action$(actions.Intent)))(),
    LinkedMapOfType$ActionOfIntent: () => (T$.LinkedMapOfType$ActionOfIntent = dart.constFn(_js_helper.LinkedMap$(core.Type, T$.ActionOfIntent())))(),
    InkHighlightNTobool: () => (T$.InkHighlightNTobool = dart.constFn(dart.fnType(core.bool, [T$.InkHighlightN()])))(),
    _HashSetOfInteractiveInkFeature: () => (T$._HashSetOfInteractiveInkFeature = dart.constFn(collection._HashSet$(ink_well.InteractiveInkFeature)))(),
    WidgetToWidget: () => (T$.WidgetToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.Widget])))(),
    DiagnosticsPropertyOfListTileStyle: () => (T$.DiagnosticsPropertyOfListTileStyle = dart.constFn(diagnostics.DiagnosticsProperty$(list_tile.ListTileStyle)))(),
    DiagnosticsPropertyOfFunction: () => (T$.DiagnosticsPropertyOfFunction = dart.constFn(diagnostics.DiagnosticsProperty$(core.Function)))(),
    SlottedContainerRenderObjectMixinOf_ListTileSlot: () => (T$.SlottedContainerRenderObjectMixinOf_ListTileSlot = dart.constFn(slotted_render_object_widget.SlottedContainerRenderObjectMixin$(list_tile._ListTileSlot)))(),
    NotificationListenerOfDraggableScrollableNotification: () => (T$.NotificationListenerOfDraggableScrollableNotification = dart.constFn(notification_listener.NotificationListener$(draggable_scrollable_sheet.DraggableScrollableNotification)))(),
    _HashSetOfScaffoldState: () => (T$._HashSetOfScaffoldState = dart.constFn(collection._HashSet$(scaffold$.ScaffoldState)))(),
    ScaffoldFeatureControllerOfMaterialBanner$MaterialBannerClosedReason: () => (T$.ScaffoldFeatureControllerOfMaterialBanner$MaterialBannerClosedReason = dart.constFn(scaffold$.ScaffoldFeatureController$(banner.MaterialBanner, banner.MaterialBannerClosedReason)))(),
    ListQueueOfScaffoldFeatureControllerOfMaterialBanner$MaterialBannerClosedReason: () => (T$.ListQueueOfScaffoldFeatureControllerOfMaterialBanner$MaterialBannerClosedReason = dart.constFn(collection.ListQueue$(T$.ScaffoldFeatureControllerOfMaterialBanner$MaterialBannerClosedReason())))(),
    ScaffoldFeatureControllerOfSnackBar$SnackBarClosedReason: () => (T$.ScaffoldFeatureControllerOfSnackBar$SnackBarClosedReason = dart.constFn(scaffold$.ScaffoldFeatureController$(snack_bar.SnackBar, snack_bar.SnackBarClosedReason)))(),
    ListQueueOfScaffoldFeatureControllerOfSnackBar$SnackBarClosedReason: () => (T$.ListQueueOfScaffoldFeatureControllerOfSnackBar$SnackBarClosedReason = dart.constFn(collection.ListQueue$(T$.ScaffoldFeatureControllerOfSnackBar$SnackBarClosedReason())))(),
    VoidToScaffoldFeatureControllerOfSnackBar$SnackBarClosedReason: () => (T$.VoidToScaffoldFeatureControllerOfSnackBar$SnackBarClosedReason = dart.constFn(dart.fnType(T$.ScaffoldFeatureControllerOfSnackBar$SnackBarClosedReason(), [])))(),
    ScaffoldFeatureControllerOfSnackBar$SnackBarClosedReasonTodynamic: () => (T$.ScaffoldFeatureControllerOfSnackBar$SnackBarClosedReasonTodynamic = dart.constFn(dart.fnType(dart.dynamic, [T$.ScaffoldFeatureControllerOfSnackBar$SnackBarClosedReason()])))(),
    CompleterOfSnackBarClosedReason: () => (T$.CompleterOfSnackBarClosedReason = dart.constFn(async.Completer$(snack_bar.SnackBarClosedReason)))(),
    voidToNull: () => (T$.voidToNull = dart.constFn(dart.fnType(core.Null, [dart.void])))(),
    VoidToScaffoldFeatureControllerOfMaterialBanner$MaterialBannerClosedReason: () => (T$.VoidToScaffoldFeatureControllerOfMaterialBanner$MaterialBannerClosedReason = dart.constFn(dart.fnType(T$.ScaffoldFeatureControllerOfMaterialBanner$MaterialBannerClosedReason(), [])))(),
    ScaffoldFeatureControllerOfMaterialBanner$MaterialBannerClosedReasonTodynamic: () => (T$.ScaffoldFeatureControllerOfMaterialBanner$MaterialBannerClosedReasonTodynamic = dart.constFn(dart.fnType(dart.dynamic, [T$.ScaffoldFeatureControllerOfMaterialBanner$MaterialBannerClosedReason()])))(),
    CompleterOfMaterialBannerClosedReason: () => (T$.CompleterOfMaterialBannerClosedReason = dart.constFn(async.Completer$(banner.MaterialBannerClosedReason)))(),
    BuildContextAndBoxConstraintsToMediaQuery: () => (T$.BuildContextAndBoxConstraintsToMediaQuery = dart.constFn(dart.fnType(media_query.MediaQuery, [framework.BuildContext, box$.BoxConstraints])))(),
    RectTodynamic: () => (T$.RectTodynamic = dart.constFn(dart.fnType(dart.dynamic, [ui.Rect])))(),
    AnimationMinOfdouble: () => (T$.AnimationMinOfdouble = dart.constFn(animations.AnimationMin$(core.double)))(),
    GlobalKeyOfDrawerControllerState: () => (T$.GlobalKeyOfDrawerControllerState = dart.constFn(framework.GlobalKey$(drawer.DrawerControllerState)))(),
    JSArrayOf_StandardBottomSheet: () => (T$.JSArrayOf_StandardBottomSheet = dart.constFn(_interceptors.JSArray$(scaffold$._StandardBottomSheet)))(),
    DraggableScrollableNotificationTobool: () => (T$.DraggableScrollableNotificationTobool = dart.constFn(dart.fnType(core.bool, [draggable_scrollable_sheet.DraggableScrollableNotification])))(),
    ListOf_StandardBottomSheet: () => (T$.ListOf_StandardBottomSheet = dart.constFn(core.List$(scaffold$._StandardBottomSheet)))(),
    FnTovoid: () => (T$.FnTovoid = dart.constFn(dart.fnType(dart.void, [T$.VoidTovoid()])))(),
    BuildContextAndFnToWidget: () => (T$.BuildContextAndFnToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, T$.FnTovoid()])))(),
    BuildContextToNotificationListenerOfDraggableScrollableNotification: () => (T$.BuildContextToNotificationListenerOfDraggableScrollableNotification = dart.constFn(dart.fnType(T$.NotificationListenerOfDraggableScrollableNotification(), [framework.BuildContext])))(),
    VoidToNull: () => (T$.VoidToNull = dart.constFn(dart.fnType(core.Null, [])))(),
    GlobalKeyOf_StandardBottomSheetState: () => (T$.GlobalKeyOf_StandardBottomSheetState = dart.constFn(framework.GlobalKey$(scaffold$._StandardBottomSheetState)))(),
    VoidTo_StandardBottomSheet: () => (T$.VoidTo_StandardBottomSheet = dart.constFn(dart.fnType(scaffold$._StandardBottomSheet, [])))(),
    _StandardBottomSheetTodynamic: () => (T$._StandardBottomSheetTodynamic = dart.constFn(dart.fnType(dart.dynamic, [scaffold$._StandardBottomSheet])))(),
    JSArrayOfLayoutId: () => (T$.JSArrayOfLayoutId = dart.constFn(_interceptors.JSArray$(basic.LayoutId)))(),
    BuildContextAndWidgetNToActions: () => (T$.BuildContextAndWidgetNToActions = dart.constFn(dart.fnType(actions.Actions, [framework.BuildContext, T$.WidgetN()])))(),
    EnumPropertyOfMaterialType: () => (T$.EnumPropertyOfMaterialType = dart.constFn(diagnostics.EnumProperty$(material.MaterialType)))(),
    DiagnosticsPropertyOfBorderRadiusGeometry: () => (T$.DiagnosticsPropertyOfBorderRadiusGeometry = dart.constFn(diagnostics.DiagnosticsProperty$(border_radius.BorderRadiusGeometry)))(),
    NotificationListenerOfLayoutChangedNotification: () => (T$.NotificationListenerOfLayoutChangedNotification = dart.constFn(notification_listener.NotificationListener$(notification_listener.LayoutChangedNotification)))(),
    LayoutChangedNotificationTobool: () => (T$.LayoutChangedNotificationTobool = dart.constFn(dart.fnType(core.bool, [notification_listener.LayoutChangedNotification])))(),
    JSArrayOfInkFeature: () => (T$.JSArrayOfInkFeature = dart.constFn(_interceptors.JSArray$(material.InkFeature)))(),
    dynamicToTweenOfdouble: () => (T$.dynamicToTweenOfdouble = dart.constFn(dart.fnType(T$.TweenOfdouble(), [dart.dynamic])))(),
    TweenNOfdouble: () => (T$.TweenNOfdouble = dart.constFn(dart.nullable(T$.TweenOfdouble())))(),
    dynamicToColorTween: () => (T$.dynamicToColorTween = dart.constFn(dart.fnType(tween.ColorTween, [dart.dynamic])))(),
    ColorTweenN: () => (T$.ColorTweenN = dart.constFn(dart.nullable(tween.ColorTween)))(),
    dynamicToShapeBorderTween: () => (T$.dynamicToShapeBorderTween = dart.constFn(dart.fnType(material.ShapeBorderTween, [dart.dynamic])))(),
    ShapeBorderTweenN: () => (T$.ShapeBorderTweenN = dart.constFn(dart.nullable(material.ShapeBorderTween)))(),
    BorderRadiusN: () => (T$.BorderRadiusN = dart.constFn(dart.nullable(border_radius.BorderRadius)))(),
    SynchronousFutureOfMaterialLocalizations: () => (T$.SynchronousFutureOfMaterialLocalizations = dart.constFn(synchronous_future.SynchronousFuture$(material_localizations.MaterialLocalizations)))(),
    DiagnosticsPropertyOfThemeData: () => (T$.DiagnosticsPropertyOfThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(theme_data.ThemeData)))(),
    dynamicToThemeDataTween: () => (T$.dynamicToThemeDataTween = dart.constFn(dart.fnType(theme$.ThemeDataTween, [dart.dynamic])))(),
    DiagnosticsPropertyOfThemeDataTween: () => (T$.DiagnosticsPropertyOfThemeDataTween = dart.constFn(diagnostics.DiagnosticsProperty$(theme$.ThemeDataTween)))(),
    ScrollNotificationTobool: () => (T$.ScrollNotificationTobool = dart.constFn(dart.fnType(core.bool, [scroll_notification.ScrollNotification])))(),
    AnnotatedRegionOfSystemUiOverlayStyle: () => (T$.AnnotatedRegionOfSystemUiOverlayStyle = dart.constFn(annotated_region.AnnotatedRegion$(system_chrome.SystemUiOverlayStyle)))(),
    VoidToWidgetN: () => (T$.VoidToWidgetN = dart.constFn(dart.fnType(T$.WidgetN(), [])))(),
    WidgetNTodynamic: () => (T$.WidgetNTodynamic = dart.constFn(dart.fnType(dart.dynamic, [T$.WidgetN()])))(),
    boolTodynamic: () => (T$.boolTodynamic = dart.constFn(dart.fnType(dart.dynamic, [core.bool])))()
  };
  var S = {
    iconSize: dart.privateName(icon_button, "IconButton.iconSize"),
    visualDensity: dart.privateName(icon_button, "IconButton.visualDensity"),
    padding: dart.privateName(icon_button, "IconButton.padding"),
    alignment: dart.privateName(icon_button, "IconButton.alignment"),
    splashRadius: dart.privateName(icon_button, "IconButton.splashRadius"),
    icon: dart.privateName(icon_button, "IconButton.icon"),
    focusColor: dart.privateName(icon_button, "IconButton.focusColor"),
    hoverColor: dart.privateName(icon_button, "IconButton.hoverColor"),
    color: dart.privateName(icon_button, "IconButton.color"),
    splashColor: dart.privateName(icon_button, "IconButton.splashColor"),
    highlightColor: dart.privateName(icon_button, "IconButton.highlightColor"),
    disabledColor: dart.privateName(icon_button, "IconButton.disabledColor"),
    onPressed: dart.privateName(icon_button, "IconButton.onPressed"),
    mouseCursor: dart.privateName(icon_button, "IconButton.mouseCursor"),
    focusNode: dart.privateName(icon_button, "IconButton.focusNode"),
    autofocus: dart.privateName(icon_button, "IconButton.autofocus"),
    tooltip: dart.privateName(icon_button, "IconButton.tooltip"),
    enableFeedback: dart.privateName(icon_button, "IconButton.enableFeedback"),
    constraints: dart.privateName(icon_button, "IconButton.constraints"),
    style: dart.privateName(icon_button, "IconButton.style"),
    isSelected: dart.privateName(icon_button, "IconButton.isSelected"),
    selectedIcon: dart.privateName(icon_button, "IconButton.selectedIcon"),
    EdgeInsets_bottom: dart.privateName(edge_insets, "EdgeInsets.bottom"),
    EdgeInsets_right: dart.privateName(edge_insets, "EdgeInsets.right"),
    EdgeInsets_top: dart.privateName(edge_insets, "EdgeInsets.top"),
    EdgeInsets_left: dart.privateName(edge_insets, "EdgeInsets.left"),
    Alignment_y: dart.privateName(alignment, "Alignment.y"),
    Alignment_x: dart.privateName(alignment, "Alignment.x"),
    _Location_name: dart.privateName(widget_inspector, "_Location.name"),
    _Location_column: dart.privateName(widget_inspector, "_Location.column"),
    _Location_line: dart.privateName(widget_inspector, "_Location.line"),
    _Location_file: dart.privateName(widget_inspector, "_Location.file"),
    BoxConstraints_maxHeight: dart.privateName(box$, "BoxConstraints.maxHeight"),
    BoxConstraints_minHeight: dart.privateName(box$, "BoxConstraints.minHeight"),
    BoxConstraints_maxWidth: dart.privateName(box$, "BoxConstraints.maxWidth"),
    BoxConstraints_minWidth: dart.privateName(box$, "BoxConstraints.minWidth"),
    isSelected$1: dart.privateName(icon_button, "_SelectableIconButton.isSelected"),
    style$1: dart.privateName(icon_button, "_SelectableIconButton.style"),
    focusNode$1: dart.privateName(icon_button, "_SelectableIconButton.focusNode"),
    autofocus$1: dart.privateName(icon_button, "_SelectableIconButton.autofocus"),
    onPressed$1: dart.privateName(icon_button, "_SelectableIconButton.onPressed"),
    child: dart.privateName(icon_button, "_SelectableIconButton.child"),
    ___SelectableIconButtonState_statesController: dart.privateName(icon_button, "_#_SelectableIconButtonState#statesController"),
    onPressed$2: dart.privateName(button_style_button, "ButtonStyleButton.onPressed"),
    onLongPress: dart.privateName(button_style_button, "ButtonStyleButton.onLongPress"),
    onHover: dart.privateName(button_style_button, "ButtonStyleButton.onHover"),
    onFocusChange: dart.privateName(button_style_button, "ButtonStyleButton.onFocusChange"),
    style$2: dart.privateName(button_style_button, "ButtonStyleButton.style"),
    clipBehavior: dart.privateName(button_style_button, "ButtonStyleButton.clipBehavior"),
    focusNode$2: dart.privateName(button_style_button, "ButtonStyleButton.focusNode"),
    autofocus$2: dart.privateName(button_style_button, "ButtonStyleButton.autofocus"),
    statesController: dart.privateName(button_style_button, "ButtonStyleButton.statesController"),
    child$1: dart.privateName(button_style_button, "ButtonStyleButton.child"),
    ___IconButtonDefaultsM3__colors: dart.privateName(icon_button, "_#_IconButtonDefaultsM3#_colors"),
    _colors: dart.privateName(icon_button, "_colors"),
    OffsetBase__dy: dart.privateName(ui, "OffsetBase._dy"),
    OffsetBase__dx: dart.privateName(ui, "OffsetBase._dx"),
    _Enum__name: dart.privateName(core, "_Enum._name"),
    _Enum_index: dart.privateName(core, "_Enum.index"),
    BorderSide_strokeAlign: dart.privateName(borders, "BorderSide.strokeAlign"),
    BorderSide_style: dart.privateName(borders, "BorderSide.style"),
    BorderSide_width: dart.privateName(borders, "BorderSide.width"),
    Color_value: dart.privateName(ui, "Color.value"),
    BorderSide_color: dart.privateName(borders, "BorderSide.color"),
    OutlinedBorder_side: dart.privateName(borders, "OutlinedBorder.side"),
    textStyle: dart.privateName(button_style, "ButtonStyle.textStyle"),
    backgroundColor: dart.privateName(button_style, "ButtonStyle.backgroundColor"),
    foregroundColor: dart.privateName(button_style, "ButtonStyle.foregroundColor"),
    overlayColor: dart.privateName(button_style, "ButtonStyle.overlayColor"),
    shadowColor: dart.privateName(button_style, "ButtonStyle.shadowColor"),
    surfaceTintColor: dart.privateName(button_style, "ButtonStyle.surfaceTintColor"),
    elevation: dart.privateName(button_style, "ButtonStyle.elevation"),
    padding$1: dart.privateName(button_style, "ButtonStyle.padding"),
    minimumSize: dart.privateName(button_style, "ButtonStyle.minimumSize"),
    fixedSize: dart.privateName(button_style, "ButtonStyle.fixedSize"),
    maximumSize: dart.privateName(button_style, "ButtonStyle.maximumSize"),
    side: dart.privateName(button_style, "ButtonStyle.side"),
    shape: dart.privateName(button_style, "ButtonStyle.shape"),
    mouseCursor$1: dart.privateName(button_style, "ButtonStyle.mouseCursor"),
    visualDensity$1: dart.privateName(button_style, "ButtonStyle.visualDensity"),
    tapTargetSize: dart.privateName(button_style, "ButtonStyle.tapTargetSize"),
    animationDuration: dart.privateName(button_style, "ButtonStyle.animationDuration"),
    enableFeedback$1: dart.privateName(button_style, "ButtonStyle.enableFeedback"),
    alignment$1: dart.privateName(button_style, "ButtonStyle.alignment"),
    splashFactory: dart.privateName(button_style, "ButtonStyle.splashFactory"),
    $runtimeType: dartx.runtimeType,
    color$1: dart.privateName(back_button, "BackButton.color"),
    onPressed$3: dart.privateName(back_button, "BackButton.onPressed"),
    Widget__location: dart.privateName(framework, "Widget._location"),
    Widget_key: dart.privateName(framework, "Widget.key"),
    color$2: dart.privateName(back_button, "CloseButton.color"),
    onPressed$4: dart.privateName(back_button, "CloseButton.onPressed"),
    Icon_shadows: dart.privateName(icon, "Icon.shadows"),
    Icon_textDirection: dart.privateName(icon, "Icon.textDirection"),
    Icon_semanticLabel: dart.privateName(icon, "Icon.semanticLabel"),
    Icon_color: dart.privateName(icon, "Icon.color"),
    Icon_size: dart.privateName(icon, "Icon.size"),
    IconData_matchTextDirection: dart.privateName(icon_data, "IconData.matchTextDirection"),
    IconData_fontPackage: dart.privateName(icon_data, "IconData.fontPackage"),
    IconData_fontFamily: dart.privateName(icon_data, "IconData.fontFamily"),
    IconData_codePoint: dart.privateName(icon_data, "IconData.codePoint"),
    Icon_icon: dart.privateName(icon, "Icon.icon"),
    _name: dart.privateName(core, "_name"),
    hour: dart.privateName(time$, "TimeOfDay.hour"),
    minute: dart.privateName(time$, "TimeOfDay.minute"),
    $toString: dartx.toString,
    _defaultValue: dart.privateName(time$, "_defaultValue"),
    $_get: dartx._get,
    $isFinite: dartx.isFinite,
    resolveCallback: dart.privateName(button_style_button, "_MouseCursor.resolveCallback"),
    minSize: dart.privateName(button_style_button, "_InputPadding.minSize"),
    _minSize: dart.privateName(button_style_button, "_minSize"),
    _computeSize: dart.privateName(button_style_button, "_computeSize"),
    Radius_y: dart.privateName(ui, "Radius.y"),
    Radius_x: dart.privateName(ui, "Radius.x"),
    BorderRadius_bottomRight: dart.privateName(border_radius, "BorderRadius.bottomRight"),
    BorderRadius_bottomLeft: dart.privateName(border_radius, "BorderRadius.bottomLeft"),
    BorderRadius_topRight: dart.privateName(border_radius, "BorderRadius.topRight"),
    BorderRadius_topLeft: dart.privateName(border_radius, "BorderRadius.topLeft"),
    RoundedRectangleBorder_borderRadius: dart.privateName(rounded_rectangle_border, "RoundedRectangleBorder.borderRadius"),
    label: dart.privateName(text_button, "_TextButtonWithIconChild.label"),
    icon$1: dart.privateName(text_button, "_TextButtonWithIconChild.icon"),
    ___TextButtonDefaultsM3__colors: dart.privateName(text_button, "_#_TextButtonDefaultsM3#_colors"),
    _colors$1: dart.privateName(text_button, "_colors"),
    textColor: dart.privateName(snack_bar, "SnackBarAction.textColor"),
    disabledTextColor: dart.privateName(snack_bar, "SnackBarAction.disabledTextColor"),
    label$1: dart.privateName(snack_bar, "SnackBarAction.label"),
    onPressed$5: dart.privateName(snack_bar, "SnackBarAction.onPressed"),
    _haveTriggeredAction: dart.privateName(snack_bar, "_haveTriggeredAction"),
    _handlePressed: dart.privateName(snack_bar, "_handlePressed"),
    content: dart.privateName(snack_bar, "SnackBar.content"),
    backgroundColor$1: dart.privateName(snack_bar, "SnackBar.backgroundColor"),
    elevation$1: dart.privateName(snack_bar, "SnackBar.elevation"),
    margin: dart.privateName(snack_bar, "SnackBar.margin"),
    padding$2: dart.privateName(snack_bar, "SnackBar.padding"),
    width: dart.privateName(snack_bar, "SnackBar.width"),
    shape$1: dart.privateName(snack_bar, "SnackBar.shape"),
    behavior: dart.privateName(snack_bar, "SnackBar.behavior"),
    action: dart.privateName(snack_bar, "SnackBar.action"),
    duration: dart.privateName(snack_bar, "SnackBar.duration"),
    animation: dart.privateName(snack_bar, "SnackBar.animation"),
    onVisible: dart.privateName(snack_bar, "SnackBar.onVisible"),
    dismissDirection: dart.privateName(snack_bar, "SnackBar.dismissDirection"),
    clipBehavior$1: dart.privateName(snack_bar, "SnackBar.clipBehavior"),
    Duration__duration: dart.privateName(core, "Duration._duration"),
    _wasVisible: dart.privateName(snack_bar, "_wasVisible"),
    _onAnimationStatusChanged: dart.privateName(snack_bar, "_onAnimationStatusChanged"),
    Threshold_threshold: dart.privateName(curves, "Threshold.threshold"),
    ValueKey_value: dart.privateName(key, "ValueKey.value"),
    Cubic_d: dart.privateName(curves, "Cubic.d"),
    Cubic_c: dart.privateName(curves, "Cubic.c"),
    Cubic_b: dart.privateName(curves, "Cubic.b"),
    Cubic_a: dart.privateName(curves, "Cubic.a"),
    Interval_curve: dart.privateName(curves, "Interval.curve"),
    Interval_end: dart.privateName(curves, "Interval.end"),
    Interval_begin: dart.privateName(curves, "Interval.begin"),
    child$2: dart.privateName(floating_action_button, "FloatingActionButton.child"),
    tooltip$1: dart.privateName(floating_action_button, "FloatingActionButton.tooltip"),
    foregroundColor$1: dart.privateName(floating_action_button, "FloatingActionButton.foregroundColor"),
    backgroundColor$2: dart.privateName(floating_action_button, "FloatingActionButton.backgroundColor"),
    focusColor$1: dart.privateName(floating_action_button, "FloatingActionButton.focusColor"),
    hoverColor$1: dart.privateName(floating_action_button, "FloatingActionButton.hoverColor"),
    splashColor$1: dart.privateName(floating_action_button, "FloatingActionButton.splashColor"),
    heroTag: dart.privateName(floating_action_button, "FloatingActionButton.heroTag"),
    onPressed$6: dart.privateName(floating_action_button, "FloatingActionButton.onPressed"),
    mouseCursor$2: dart.privateName(floating_action_button, "FloatingActionButton.mouseCursor"),
    elevation$2: dart.privateName(floating_action_button, "FloatingActionButton.elevation"),
    focusElevation: dart.privateName(floating_action_button, "FloatingActionButton.focusElevation"),
    hoverElevation: dart.privateName(floating_action_button, "FloatingActionButton.hoverElevation"),
    highlightElevation: dart.privateName(floating_action_button, "FloatingActionButton.highlightElevation"),
    disabledElevation: dart.privateName(floating_action_button, "FloatingActionButton.disabledElevation"),
    mini: dart.privateName(floating_action_button, "FloatingActionButton.mini"),
    shape$2: dart.privateName(floating_action_button, "FloatingActionButton.shape"),
    clipBehavior$2: dart.privateName(floating_action_button, "FloatingActionButton.clipBehavior"),
    isExtended: dart.privateName(floating_action_button, "FloatingActionButton.isExtended"),
    focusNode$3: dart.privateName(floating_action_button, "FloatingActionButton.focusNode"),
    autofocus$3: dart.privateName(floating_action_button, "FloatingActionButton.autofocus"),
    materialTapTargetSize: dart.privateName(floating_action_button, "FloatingActionButton.materialTapTargetSize"),
    enableFeedback$2: dart.privateName(floating_action_button, "FloatingActionButton.enableFeedback"),
    extendedIconLabelSpacing: dart.privateName(floating_action_button, "FloatingActionButton.extendedIconLabelSpacing"),
    extendedPadding: dart.privateName(floating_action_button, "FloatingActionButton.extendedPadding"),
    extendedTextStyle: dart.privateName(floating_action_button, "FloatingActionButton.extendedTextStyle"),
    _floatingActionButtonType: dart.privateName(floating_action_button, "FloatingActionButton._floatingActionButtonType"),
    _extendedLabel: dart.privateName(floating_action_button, "FloatingActionButton._extendedLabel"),
    SystemMouseCursor_kind: dart.privateName(mouse_cursor, "SystemMouseCursor.kind"),
    _floatingActionButtonType$1: dart.privateName(floating_action_button, "_floatingActionButtonType"),
    _extendedLabel$1: dart.privateName(floating_action_button, "_extendedLabel"),
    _theme: dart.privateName(floating_action_button, "_theme"),
    _colors$2: dart.privateName(floating_action_button, "_colors"),
    _isExtended: dart.privateName(floating_action_button, "_isExtended"),
    _isLarge: dart.privateName(floating_action_button, "_isLarge"),
    ___FABDefaultsM3__colors: dart.privateName(floating_action_button, "_#_FABDefaultsM3#_colors"),
    ___FABDefaultsM3__textTheme: dart.privateName(floating_action_button, "_#_FABDefaultsM3#_textTheme"),
    _textTheme: dart.privateName(floating_action_button, "_textTheme"),
    title: dart.privateName(flexible_space_bar, "FlexibleSpaceBar.title"),
    background: dart.privateName(flexible_space_bar, "FlexibleSpaceBar.background"),
    centerTitle: dart.privateName(flexible_space_bar, "FlexibleSpaceBar.centerTitle"),
    collapseMode: dart.privateName(flexible_space_bar, "FlexibleSpaceBar.collapseMode"),
    stretchModes: dart.privateName(flexible_space_bar, "FlexibleSpaceBar.stretchModes"),
    titlePadding: dart.privateName(flexible_space_bar, "FlexibleSpaceBar.titlePadding"),
    expandedTitleScale: dart.privateName(flexible_space_bar, "FlexibleSpaceBar.expandedTitleScale"),
    _getEffectiveCenterTitle: dart.privateName(flexible_space_bar, "_getEffectiveCenterTitle"),
    _getTitleAlignment: dart.privateName(flexible_space_bar, "_getTitleAlignment"),
    _getCollapsePadding: dart.privateName(flexible_space_bar, "_getCollapsePadding"),
    $contains: dartx.contains,
    $add: dartx.add,
    toolbarOpacity: dart.privateName(flexible_space_bar, "FlexibleSpaceBarSettings.toolbarOpacity"),
    minExtent: dart.privateName(flexible_space_bar, "FlexibleSpaceBarSettings.minExtent"),
    maxExtent: dart.privateName(flexible_space_bar, "FlexibleSpaceBarSettings.maxExtent"),
    currentExtent: dart.privateName(flexible_space_bar, "FlexibleSpaceBarSettings.currentExtent"),
    isScrolledUnder: dart.privateName(flexible_space_bar, "FlexibleSpaceBarSettings.isScrolledUnder"),
    textStyle$1: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.textStyle"),
    constraints$1: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.constraints"),
    color$3: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.color"),
    selectedColor: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.selectedColor"),
    disabledColor$1: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.disabledColor"),
    fillColor: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.fillColor"),
    focusColor$2: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.focusColor"),
    highlightColor$1: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.highlightColor"),
    splashColor$2: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.splashColor"),
    hoverColor$2: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.hoverColor"),
    borderColor: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.borderColor"),
    selectedBorderColor: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.selectedBorderColor"),
    disabledBorderColor: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.disabledBorderColor"),
    borderWidth: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.borderWidth"),
    borderRadius: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.borderRadius"),
    data: dart.privateName(toggle_buttons_theme, "ToggleButtonsTheme.data"),
    backgroundColor$3: dart.privateName(time_picker_theme, "TimePickerThemeData.backgroundColor"),
    hourMinuteTextColor: dart.privateName(time_picker_theme, "TimePickerThemeData.hourMinuteTextColor"),
    hourMinuteColor: dart.privateName(time_picker_theme, "TimePickerThemeData.hourMinuteColor"),
    dayPeriodTextColor: dart.privateName(time_picker_theme, "TimePickerThemeData.dayPeriodTextColor"),
    dayPeriodColor: dart.privateName(time_picker_theme, "TimePickerThemeData.dayPeriodColor"),
    dialHandColor: dart.privateName(time_picker_theme, "TimePickerThemeData.dialHandColor"),
    dialBackgroundColor: dart.privateName(time_picker_theme, "TimePickerThemeData.dialBackgroundColor"),
    dialTextColor: dart.privateName(time_picker_theme, "TimePickerThemeData.dialTextColor"),
    entryModeIconColor: dart.privateName(time_picker_theme, "TimePickerThemeData.entryModeIconColor"),
    hourMinuteTextStyle: dart.privateName(time_picker_theme, "TimePickerThemeData.hourMinuteTextStyle"),
    dayPeriodTextStyle: dart.privateName(time_picker_theme, "TimePickerThemeData.dayPeriodTextStyle"),
    helpTextStyle: dart.privateName(time_picker_theme, "TimePickerThemeData.helpTextStyle"),
    shape$3: dart.privateName(time_picker_theme, "TimePickerThemeData.shape"),
    hourMinuteShape: dart.privateName(time_picker_theme, "TimePickerThemeData.hourMinuteShape"),
    dayPeriodShape: dart.privateName(time_picker_theme, "TimePickerThemeData.dayPeriodShape"),
    dayPeriodBorderSide: dart.privateName(time_picker_theme, "TimePickerThemeData.dayPeriodBorderSide"),
    inputDecorationTheme: dart.privateName(time_picker_theme, "TimePickerThemeData.inputDecorationTheme"),
    data$1: dart.privateName(time_picker_theme, "TimePickerTheme.data"),
    cursorColor: dart.privateName(text_selection_theme, "TextSelectionThemeData.cursorColor"),
    selectionColor: dart.privateName(text_selection_theme, "TextSelectionThemeData.selectionColor"),
    selectionHandleColor: dart.privateName(text_selection_theme, "TextSelectionThemeData.selectionHandleColor"),
    data$2: dart.privateName(text_selection_theme, "TextSelectionTheme.data"),
    _child: dart.privateName(text_selection_theme, "TextSelectionTheme._child"),
    _child$1: dart.privateName(text_selection_theme, "_child"),
    style$3: dart.privateName(text_button_theme, "TextButtonThemeData.style"),
    $hashCode: dartx.hashCode,
    data$3: dart.privateName(text_button_theme, "TextButtonTheme.data"),
    text: dart.privateName(tabs$, "Tab.text"),
    child$3: dart.privateName(tabs$, "Tab.child"),
    icon$2: dart.privateName(tabs$, "Tab.icon"),
    iconMargin: dart.privateName(tabs$, "Tab.iconMargin"),
    height: dart.privateName(tabs$, "Tab.height"),
    _buildLabelText: dart.privateName(tabs$, "_buildLabelText"),
    labelStyle: dart.privateName(tabs$, "_TabStyle.labelStyle"),
    unselectedLabelStyle: dart.privateName(tabs$, "_TabStyle.unselectedLabelStyle"),
    selected: dart.privateName(tabs$, "_TabStyle.selected"),
    labelColor: dart.privateName(tabs$, "_TabStyle.labelColor"),
    unselectedLabelColor: dart.privateName(tabs$, "_TabStyle.unselectedLabelColor"),
    child$4: dart.privateName(tabs$, "_TabStyle.child"),
    $insert: dartx.insert,
    _currentTabOffsets: dart.privateName(tabs$, "_currentTabOffsets"),
    _currentTextDirection: dart.privateName(tabs$, "_currentTextDirection"),
    _currentRect: dart.privateName(tabs$, "_currentRect"),
    _painter: dart.privateName(tabs$, "_painter"),
    _needsPaint: dart.privateName(tabs$, "_needsPaint"),
    $length: dartx.length,
    $isNotEmpty: dartx.isNotEmpty,
    $toDouble: dartx.toDouble,
    $floor: dartx.floor,
    $ceil: dartx.ceil,
    $clamp: dartx.clamp,
    $abs: dartx.abs,
    $_equals: dartx._equals,
    _initialViewportDimensionWasZero: dart.privateName(tabs$, "_initialViewportDimensionWasZero"),
    _initialScrollOffset: dart.privateName(tabs$, "_initialScrollOffset"),
    tabs: dart.privateName(tabs$, "TabBar.tabs"),
    controller: dart.privateName(tabs$, "TabBar.controller"),
    isScrollable: dart.privateName(tabs$, "TabBar.isScrollable"),
    padding$3: dart.privateName(tabs$, "TabBar.padding"),
    indicatorColor: dart.privateName(tabs$, "TabBar.indicatorColor"),
    indicatorWeight: dart.privateName(tabs$, "TabBar.indicatorWeight"),
    indicatorPadding: dart.privateName(tabs$, "TabBar.indicatorPadding"),
    indicator: dart.privateName(tabs$, "TabBar.indicator"),
    automaticIndicatorColorAdjustment: dart.privateName(tabs$, "TabBar.automaticIndicatorColorAdjustment"),
    indicatorSize: dart.privateName(tabs$, "TabBar.indicatorSize"),
    labelColor$1: dart.privateName(tabs$, "TabBar.labelColor"),
    unselectedLabelColor$1: dart.privateName(tabs$, "TabBar.unselectedLabelColor"),
    labelStyle$1: dart.privateName(tabs$, "TabBar.labelStyle"),
    labelPadding: dart.privateName(tabs$, "TabBar.labelPadding"),
    unselectedLabelStyle$1: dart.privateName(tabs$, "TabBar.unselectedLabelStyle"),
    overlayColor$1: dart.privateName(tabs$, "TabBar.overlayColor"),
    dragStartBehavior: dart.privateName(tabs$, "TabBar.dragStartBehavior"),
    mouseCursor$3: dart.privateName(tabs$, "TabBar.mouseCursor"),
    enableFeedback$3: dart.privateName(tabs$, "TabBar.enableFeedback"),
    onTap: dart.privateName(tabs$, "TabBar.onTap"),
    physics: dart.privateName(tabs$, "TabBar.physics"),
    splashFactory$1: dart.privateName(tabs$, "TabBar.splashFactory"),
    splashBorderRadius: dart.privateName(tabs$, "TabBar.splashBorderRadius"),
    _scrollController: dart.privateName(tabs$, "_scrollController"),
    _controller: dart.privateName(tabs$, "_controller"),
    _indicatorPainter: dart.privateName(tabs$, "_indicatorPainter"),
    _currentIndex: dart.privateName(tabs$, "_currentIndex"),
    ___TabBarState__tabStripWidth: dart.privateName(tabs$, "_#_TabBarState#_tabStripWidth"),
    ___TabBarState__tabKeys: dart.privateName(tabs$, "_#_TabBarState#_tabKeys"),
    _debugHasScheduledValidTabsCountCheck: dart.privateName(tabs$, "_debugHasScheduledValidTabsCountCheck"),
    _tabStripWidth: dart.privateName(tabs$, "_tabStripWidth"),
    _tabKeys: dart.privateName(tabs$, "_tabKeys"),
    $map: dartx.map,
    $toList: dartx.toList,
    _indicator: dart.privateName(tabs$, "_indicator"),
    _controllerIsValid: dart.privateName(tabs$, "_controllerIsValid"),
    _handleTabControllerAnimationTick: dart.privateName(tabs$, "_handleTabControllerAnimationTick"),
    _handleTabControllerTick: dart.privateName(tabs$, "_handleTabControllerTick"),
    _updateTabController: dart.privateName(tabs$, "_updateTabController"),
    _initIndicatorPainter: dart.privateName(tabs$, "_initIndicatorPainter"),
    $addAll: dartx.addAll,
    $removeRange: dartx.removeRange,
    _tabScrollOffset: dart.privateName(tabs$, "_tabScrollOffset"),
    _tabCenteredScrollOffset: dart.privateName(tabs$, "_tabCenteredScrollOffset"),
    _scrollToCurrentIndex: dart.privateName(tabs$, "_scrollToCurrentIndex"),
    _scrollToControllerValue: dart.privateName(tabs$, "_scrollToControllerValue"),
    _saveTabOffsets: dart.privateName(tabs$, "_saveTabOffsets"),
    _handleTap: dart.privateName(tabs$, "_handleTap"),
    _buildStyledTab: dart.privateName(tabs$, "_buildStyledTab"),
    _debugScheduleCheckHasValidTabsCount: dart.privateName(tabs$, "_debugScheduleCheckHasValidTabsCount"),
    $_set: dartx._set,
    controller$1: dart.privateName(tabs$, "TabBarView.controller"),
    children: dart.privateName(tabs$, "TabBarView.children"),
    physics$1: dart.privateName(tabs$, "TabBarView.physics"),
    dragStartBehavior$1: dart.privateName(tabs$, "TabBarView.dragStartBehavior"),
    viewportFraction: dart.privateName(tabs$, "TabBarView.viewportFraction"),
    clipBehavior$3: dart.privateName(tabs$, "TabBarView.clipBehavior"),
    ___TabBarViewState__pageController: dart.privateName(tabs$, "_#_TabBarViewState#_pageController"),
    ___TabBarViewState__children: dart.privateName(tabs$, "_#_TabBarViewState#_children"),
    ___TabBarViewState__childrenWithKey: dart.privateName(tabs$, "_#_TabBarViewState#_childrenWithKey"),
    _warpUnderwayCount: dart.privateName(tabs$, "_warpUnderwayCount"),
    _debugHasScheduledValidChildrenCountCheck: dart.privateName(tabs$, "_debugHasScheduledValidChildrenCountCheck"),
    _pageController: dart.privateName(tabs$, "_pageController"),
    _children: dart.privateName(tabs$, "_children"),
    _childrenWithKey: dart.privateName(tabs$, "_childrenWithKey"),
    _updateChildren: dart.privateName(tabs$, "_updateChildren"),
    _warpToCurrentIndex: dart.privateName(tabs$, "_warpToCurrentIndex"),
    $round: dartx.round,
    _handleScrollNotification: dart.privateName(tabs$, "_handleScrollNotification"),
    _debugScheduleCheckHasValidChildrenCount: dart.privateName(tabs$, "_debugScheduleCheckHasValidChildrenCount"),
    ScrollPhysics_parent: dart.privateName(scroll_physics, "ScrollPhysics.parent"),
    backgroundColor$4: dart.privateName(tabs$, "TabPageSelectorIndicator.backgroundColor"),
    borderColor$1: dart.privateName(tabs$, "TabPageSelectorIndicator.borderColor"),
    size: dart.privateName(tabs$, "TabPageSelectorIndicator.size"),
    borderStyle: dart.privateName(tabs$, "TabPageSelectorIndicator.borderStyle"),
    controller$2: dart.privateName(tabs$, "TabPageSelector.controller"),
    indicatorSize$1: dart.privateName(tabs$, "TabPageSelector.indicatorSize"),
    color$4: dart.privateName(tabs$, "TabPageSelector.color"),
    selectedColor$1: dart.privateName(tabs$, "TabPageSelector.selectedColor"),
    borderStyle$1: dart.privateName(tabs$, "TabPageSelector.borderStyle"),
    _buildTabIndicator: dart.privateName(tabs$, "_buildTabIndicator"),
    indicator$1: dart.privateName(tab_bar_theme, "TabBarTheme.indicator"),
    indicatorSize$2: dart.privateName(tab_bar_theme, "TabBarTheme.indicatorSize"),
    labelColor$2: dart.privateName(tab_bar_theme, "TabBarTheme.labelColor"),
    labelPadding$1: dart.privateName(tab_bar_theme, "TabBarTheme.labelPadding"),
    labelStyle$2: dart.privateName(tab_bar_theme, "TabBarTheme.labelStyle"),
    unselectedLabelColor$2: dart.privateName(tab_bar_theme, "TabBarTheme.unselectedLabelColor"),
    unselectedLabelStyle$2: dart.privateName(tab_bar_theme, "TabBarTheme.unselectedLabelStyle"),
    overlayColor$2: dart.privateName(tab_bar_theme, "TabBarTheme.overlayColor"),
    splashFactory$2: dart.privateName(tab_bar_theme, "TabBarTheme.splashFactory"),
    mouseCursor$4: dart.privateName(tab_bar_theme, "TabBarTheme.mouseCursor"),
    a: dart.privateName(tab_bar_theme, "_LerpColors.a"),
    b: dart.privateName(tab_bar_theme, "_LerpColors.b"),
    t: dart.privateName(tab_bar_theme, "_LerpColors.t"),
    thumbColor: dart.privateName(switch_theme, "SwitchThemeData.thumbColor"),
    trackColor: dart.privateName(switch_theme, "SwitchThemeData.trackColor"),
    materialTapTargetSize$1: dart.privateName(switch_theme, "SwitchThemeData.materialTapTargetSize"),
    mouseCursor$5: dart.privateName(switch_theme, "SwitchThemeData.mouseCursor"),
    overlayColor$3: dart.privateName(switch_theme, "SwitchThemeData.overlayColor"),
    splashRadius$1: dart.privateName(switch_theme, "SwitchThemeData.splashRadius"),
    data$4: dart.privateName(switch_theme, "SwitchTheme.data"),
    backgroundColor$5: dart.privateName(snack_bar_theme, "SnackBarThemeData.backgroundColor"),
    actionTextColor: dart.privateName(snack_bar_theme, "SnackBarThemeData.actionTextColor"),
    disabledActionTextColor: dart.privateName(snack_bar_theme, "SnackBarThemeData.disabledActionTextColor"),
    contentTextStyle: dart.privateName(snack_bar_theme, "SnackBarThemeData.contentTextStyle"),
    elevation$3: dart.privateName(snack_bar_theme, "SnackBarThemeData.elevation"),
    shape$4: dart.privateName(snack_bar_theme, "SnackBarThemeData.shape"),
    behavior$1: dart.privateName(snack_bar_theme, "SnackBarThemeData.behavior"),
    data$5: dart.privateName(slider_theme, "SliderTheme.data"),
    trackHeight: dart.privateName(slider_theme, "SliderThemeData.trackHeight"),
    activeTrackColor: dart.privateName(slider_theme, "SliderThemeData.activeTrackColor"),
    inactiveTrackColor: dart.privateName(slider_theme, "SliderThemeData.inactiveTrackColor"),
    disabledActiveTrackColor: dart.privateName(slider_theme, "SliderThemeData.disabledActiveTrackColor"),
    disabledInactiveTrackColor: dart.privateName(slider_theme, "SliderThemeData.disabledInactiveTrackColor"),
    activeTickMarkColor: dart.privateName(slider_theme, "SliderThemeData.activeTickMarkColor"),
    inactiveTickMarkColor: dart.privateName(slider_theme, "SliderThemeData.inactiveTickMarkColor"),
    disabledActiveTickMarkColor: dart.privateName(slider_theme, "SliderThemeData.disabledActiveTickMarkColor"),
    disabledInactiveTickMarkColor: dart.privateName(slider_theme, "SliderThemeData.disabledInactiveTickMarkColor"),
    thumbColor$1: dart.privateName(slider_theme, "SliderThemeData.thumbColor"),
    overlappingShapeStrokeColor: dart.privateName(slider_theme, "SliderThemeData.overlappingShapeStrokeColor"),
    disabledThumbColor: dart.privateName(slider_theme, "SliderThemeData.disabledThumbColor"),
    overlayColor$4: dart.privateName(slider_theme, "SliderThemeData.overlayColor"),
    valueIndicatorColor: dart.privateName(slider_theme, "SliderThemeData.valueIndicatorColor"),
    overlayShape: dart.privateName(slider_theme, "SliderThemeData.overlayShape"),
    tickMarkShape: dart.privateName(slider_theme, "SliderThemeData.tickMarkShape"),
    thumbShape: dart.privateName(slider_theme, "SliderThemeData.thumbShape"),
    trackShape: dart.privateName(slider_theme, "SliderThemeData.trackShape"),
    valueIndicatorShape: dart.privateName(slider_theme, "SliderThemeData.valueIndicatorShape"),
    rangeTickMarkShape: dart.privateName(slider_theme, "SliderThemeData.rangeTickMarkShape"),
    rangeThumbShape: dart.privateName(slider_theme, "SliderThemeData.rangeThumbShape"),
    rangeTrackShape: dart.privateName(slider_theme, "SliderThemeData.rangeTrackShape"),
    rangeValueIndicatorShape: dart.privateName(slider_theme, "SliderThemeData.rangeValueIndicatorShape"),
    showValueIndicator: dart.privateName(slider_theme, "SliderThemeData.showValueIndicator"),
    valueIndicatorTextStyle: dart.privateName(slider_theme, "SliderThemeData.valueIndicatorTextStyle"),
    minThumbSeparation: dart.privateName(slider_theme, "SliderThemeData.minThumbSeparation"),
    thumbSelector: dart.privateName(slider_theme, "SliderThemeData.thumbSelector"),
    mouseCursor$6: dart.privateName(slider_theme, "SliderThemeData.mouseCursor"),
    RoundSliderOverlayShape_overlayRadius: dart.privateName(slider_theme, "RoundSliderOverlayShape.overlayRadius"),
    RoundSliderTickMarkShape_tickMarkRadius: dart.privateName(slider_theme, "RoundSliderTickMarkShape.tickMarkRadius"),
    RoundSliderThumbShape_pressedElevation: dart.privateName(slider_theme, "RoundSliderThumbShape.pressedElevation"),
    RoundSliderThumbShape_elevation: dart.privateName(slider_theme, "RoundSliderThumbShape.elevation"),
    RoundSliderThumbShape_disabledThumbRadius: dart.privateName(slider_theme, "RoundSliderThumbShape.disabledThumbRadius"),
    RoundSliderThumbShape_enabledThumbRadius: dart.privateName(slider_theme, "RoundSliderThumbShape.enabledThumbRadius"),
    RoundRangeSliderTickMarkShape_tickMarkRadius: dart.privateName(slider_theme, "RoundRangeSliderTickMarkShape.tickMarkRadius"),
    RoundRangeSliderThumbShape_pressedElevation: dart.privateName(slider_theme, "RoundRangeSliderThumbShape.pressedElevation"),
    RoundRangeSliderThumbShape_elevation: dart.privateName(slider_theme, "RoundRangeSliderThumbShape.elevation"),
    RoundRangeSliderThumbShape_disabledThumbRadius: dart.privateName(slider_theme, "RoundRangeSliderThumbShape.disabledThumbRadius"),
    RoundRangeSliderThumbShape_enabledThumbRadius: dart.privateName(slider_theme, "RoundRangeSliderThumbShape.enabledThumbRadius"),
    tickMarkRadius: dart.privateName(slider_theme, "RoundSliderTickMarkShape.tickMarkRadius"),
    tickMarkRadius$1: dart.privateName(slider_theme, "RoundRangeSliderTickMarkShape.tickMarkRadius"),
    enabledThumbRadius: dart.privateName(slider_theme, "RoundSliderThumbShape.enabledThumbRadius"),
    disabledThumbRadius: dart.privateName(slider_theme, "RoundSliderThumbShape.disabledThumbRadius"),
    elevation$4: dart.privateName(slider_theme, "RoundSliderThumbShape.elevation"),
    pressedElevation: dart.privateName(slider_theme, "RoundSliderThumbShape.pressedElevation"),
    _disabledThumbRadius: dart.privateName(slider_theme, "_disabledThumbRadius"),
    enabledThumbRadius$1: dart.privateName(slider_theme, "RoundRangeSliderThumbShape.enabledThumbRadius"),
    disabledThumbRadius$1: dart.privateName(slider_theme, "RoundRangeSliderThumbShape.disabledThumbRadius"),
    elevation$5: dart.privateName(slider_theme, "RoundRangeSliderThumbShape.elevation"),
    pressedElevation$1: dart.privateName(slider_theme, "RoundRangeSliderThumbShape.pressedElevation"),
    overlayRadius: dart.privateName(slider_theme, "RoundSliderOverlayShape.overlayRadius"),
    _upperRectangleWidth: dart.privateName(slider_theme, "_upperRectangleWidth"),
    _getIdealOffset: dart.privateName(slider_theme, "_getIdealOffset"),
    start: dart.privateName(slider_theme, "RangeValues.start"),
    end: dart.privateName(slider_theme, "RangeValues.end"),
    start$1: dart.privateName(slider_theme, "RangeLabels.start"),
    end$1: dart.privateName(slider_theme, "RangeLabels.end"),
    thumbVisibility: dart.privateName(scrollbar_theme, "ScrollbarThemeData.thumbVisibility"),
    thickness: dart.privateName(scrollbar_theme, "ScrollbarThemeData.thickness"),
    trackVisibility: dart.privateName(scrollbar_theme, "ScrollbarThemeData.trackVisibility"),
    showTrackOnHover: dart.privateName(scrollbar_theme, "ScrollbarThemeData.showTrackOnHover"),
    isAlwaysShown: dart.privateName(scrollbar_theme, "ScrollbarThemeData.isAlwaysShown"),
    interactive: dart.privateName(scrollbar_theme, "ScrollbarThemeData.interactive"),
    radius: dart.privateName(scrollbar_theme, "ScrollbarThemeData.radius"),
    thumbColor$2: dart.privateName(scrollbar_theme, "ScrollbarThemeData.thumbColor"),
    trackColor$1: dart.privateName(scrollbar_theme, "ScrollbarThemeData.trackColor"),
    trackBorderColor: dart.privateName(scrollbar_theme, "ScrollbarThemeData.trackBorderColor"),
    crossAxisMargin: dart.privateName(scrollbar_theme, "ScrollbarThemeData.crossAxisMargin"),
    mainAxisMargin: dart.privateName(scrollbar_theme, "ScrollbarThemeData.mainAxisMargin"),
    minThumbLength: dart.privateName(scrollbar_theme, "ScrollbarThemeData.minThumbLength"),
    data$6: dart.privateName(scrollbar_theme, "ScrollbarTheme.data"),
    mouseCursor$7: dart.privateName(radio_theme, "RadioThemeData.mouseCursor"),
    fillColor$1: dart.privateName(radio_theme, "RadioThemeData.fillColor"),
    overlayColor$5: dart.privateName(radio_theme, "RadioThemeData.overlayColor"),
    splashRadius$2: dart.privateName(radio_theme, "RadioThemeData.splashRadius"),
    materialTapTargetSize$2: dart.privateName(radio_theme, "RadioThemeData.materialTapTargetSize"),
    visualDensity$2: dart.privateName(radio_theme, "RadioThemeData.visualDensity"),
    data$7: dart.privateName(radio_theme, "RadioTheme.data"),
    color$5: dart.privateName(progress_indicator_theme, "ProgressIndicatorThemeData.color"),
    linearTrackColor: dart.privateName(progress_indicator_theme, "ProgressIndicatorThemeData.linearTrackColor"),
    linearMinHeight: dart.privateName(progress_indicator_theme, "ProgressIndicatorThemeData.linearMinHeight"),
    circularTrackColor: dart.privateName(progress_indicator_theme, "ProgressIndicatorThemeData.circularTrackColor"),
    refreshBackgroundColor: dart.privateName(progress_indicator_theme, "ProgressIndicatorThemeData.refreshBackgroundColor"),
    data$8: dart.privateName(progress_indicator_theme, "ProgressIndicatorTheme.data"),
    color$6: dart.privateName(popup_menu_theme, "PopupMenuThemeData.color"),
    shape$5: dart.privateName(popup_menu_theme, "PopupMenuThemeData.shape"),
    elevation$6: dart.privateName(popup_menu_theme, "PopupMenuThemeData.elevation"),
    textStyle$2: dart.privateName(popup_menu_theme, "PopupMenuThemeData.textStyle"),
    enableFeedback$4: dart.privateName(popup_menu_theme, "PopupMenuThemeData.enableFeedback"),
    mouseCursor$8: dart.privateName(popup_menu_theme, "PopupMenuThemeData.mouseCursor"),
    data$9: dart.privateName(popup_menu_theme, "PopupMenuTheme.data"),
    _positionAnimation: dart.privateName(page_transitions_theme, "_positionAnimation"),
    _opacityAnimation: dart.privateName(page_transitions_theme, "_opacityAnimation"),
    animation$1: dart.privateName(page_transitions_theme, "_OpenUpwardsPageTransition.animation"),
    secondaryAnimation: dart.privateName(page_transitions_theme, "_OpenUpwardsPageTransition.secondaryAnimation"),
    child$5: dart.privateName(page_transitions_theme, "_OpenUpwardsPageTransition.child"),
    animation$2: dart.privateName(page_transitions_theme, "_ZoomPageTransition.animation"),
    secondaryAnimation$1: dart.privateName(page_transitions_theme, "_ZoomPageTransition.secondaryAnimation"),
    child$6: dart.privateName(page_transitions_theme, "_ZoomPageTransition.child"),
    animation$3: dart.privateName(page_transitions_theme, "_ZoomEnterTransition.animation"),
    child$7: dart.privateName(page_transitions_theme, "_ZoomEnterTransition.child"),
    reverse: dart.privateName(page_transitions_theme, "_ZoomEnterTransition.reverse"),
    animation$4: dart.privateName(page_transitions_theme, "_ZoomExitTransition.animation"),
    reverse$1: dart.privateName(page_transitions_theme, "_ZoomExitTransition.reverse"),
    child$8: dart.privateName(page_transitions_theme, "_ZoomExitTransition.child"),
    _builders: dart.privateName(page_transitions_theme, "PageTransitionsTheme._builders"),
    _builders$1: dart.privateName(page_transitions_theme, "_builders"),
    _all: dart.privateName(page_transitions_theme, "_all"),
    style$4: dart.privateName(outlined_button_theme, "OutlinedButtonThemeData.style")
  };
  var S$ = {
    data$10: dart.privateName(outlined_button_theme, "OutlinedButtonTheme.data"),
    backgroundColor$6: dart.privateName(navigation_rail, "NavigationRail.backgroundColor"),
    extended: dart.privateName(navigation_rail, "NavigationRail.extended"),
    leading: dart.privateName(navigation_rail, "NavigationRail.leading"),
    trailing: dart.privateName(navigation_rail, "NavigationRail.trailing"),
    destinations: dart.privateName(navigation_rail, "NavigationRail.destinations"),
    selectedIndex: dart.privateName(navigation_rail, "NavigationRail.selectedIndex"),
    onDestinationSelected: dart.privateName(navigation_rail, "NavigationRail.onDestinationSelected"),
    elevation$7: dart.privateName(navigation_rail, "NavigationRail.elevation"),
    groupAlignment: dart.privateName(navigation_rail, "NavigationRail.groupAlignment"),
    labelType: dart.privateName(navigation_rail, "NavigationRail.labelType"),
    unselectedLabelTextStyle: dart.privateName(navigation_rail, "NavigationRail.unselectedLabelTextStyle"),
    selectedLabelTextStyle: dart.privateName(navigation_rail, "NavigationRail.selectedLabelTextStyle"),
    unselectedIconTheme: dart.privateName(navigation_rail, "NavigationRail.unselectedIconTheme"),
    selectedIconTheme: dart.privateName(navigation_rail, "NavigationRail.selectedIconTheme"),
    minWidth: dart.privateName(navigation_rail, "NavigationRail.minWidth"),
    minExtendedWidth: dart.privateName(navigation_rail, "NavigationRail.minExtendedWidth"),
    useIndicator: dart.privateName(navigation_rail, "NavigationRail.useIndicator"),
    indicatorColor$1: dart.privateName(navigation_rail, "NavigationRail.indicatorColor"),
    ___NavigationRailState__destinationControllers: dart.privateName(navigation_rail, "_#_NavigationRailState#_destinationControllers"),
    ___NavigationRailState__destinationAnimations: dart.privateName(navigation_rail, "_#_NavigationRailState#_destinationAnimations"),
    ___NavigationRailState__extendedController: dart.privateName(navigation_rail, "_#_NavigationRailState#_extendedController"),
    ___NavigationRailState__extendedAnimation: dart.privateName(navigation_rail, "_#_NavigationRailState#_extendedAnimation"),
    _destinationControllers: dart.privateName(navigation_rail, "_destinationControllers"),
    _destinationAnimations: dart.privateName(navigation_rail, "_destinationAnimations"),
    _extendedController: dart.privateName(navigation_rail, "_extendedController"),
    _extendedAnimation: dart.privateName(navigation_rail, "_extendedAnimation"),
    _initControllers: dart.privateName(navigation_rail, "_initControllers"),
    _disposeControllers: dart.privateName(navigation_rail, "_disposeControllers"),
    _resetState: dart.privateName(navigation_rail, "_resetState"),
    _rebuild: dart.privateName(navigation_rail, "_rebuild"),
    _positionAnimation$1: dart.privateName(navigation_rail, "_positionAnimation"),
    SingleChildRenderObjectWidget_child: dart.privateName(framework, "SingleChildRenderObjectWidget.child"),
    SizedBox_height: dart.privateName(basic, "SizedBox.height"),
    SizedBox_width: dart.privateName(basic, "SizedBox.width"),
    addIndicator: dart.privateName(navigation_rail, "_AddIndicator.addIndicator"),
    isCircular: dart.privateName(navigation_rail, "_AddIndicator.isCircular"),
    indicatorColor$2: dart.privateName(navigation_rail, "_AddIndicator.indicatorColor"),
    indicatorAnimation: dart.privateName(navigation_rail, "_AddIndicator.indicatorAnimation"),
    child$9: dart.privateName(navigation_rail, "_AddIndicator.child"),
    icon$3: dart.privateName(navigation_rail, "NavigationRailDestination.icon"),
    selectedIcon$1: dart.privateName(navigation_rail, "NavigationRailDestination.selectedIcon"),
    label$2: dart.privateName(navigation_rail, "NavigationRailDestination.label"),
    padding$4: dart.privateName(navigation_rail, "NavigationRailDestination.padding"),
    animation$5: dart.privateName(navigation_rail, "_ExtendedNavigationRailAnimation.animation"),
    _theme$1: dart.privateName(navigation_rail, "_theme"),
    _colors$3: dart.privateName(navigation_rail, "_colors"),
    backgroundColor$7: dart.privateName(navigation_rail_theme, "NavigationRailThemeData.backgroundColor"),
    elevation$8: dart.privateName(navigation_rail_theme, "NavigationRailThemeData.elevation"),
    unselectedLabelTextStyle$1: dart.privateName(navigation_rail_theme, "NavigationRailThemeData.unselectedLabelTextStyle"),
    selectedLabelTextStyle$1: dart.privateName(navigation_rail_theme, "NavigationRailThemeData.selectedLabelTextStyle"),
    unselectedIconTheme$1: dart.privateName(navigation_rail_theme, "NavigationRailThemeData.unselectedIconTheme"),
    selectedIconTheme$1: dart.privateName(navigation_rail_theme, "NavigationRailThemeData.selectedIconTheme"),
    groupAlignment$1: dart.privateName(navigation_rail_theme, "NavigationRailThemeData.groupAlignment"),
    labelType$1: dart.privateName(navigation_rail_theme, "NavigationRailThemeData.labelType"),
    useIndicator$1: dart.privateName(navigation_rail_theme, "NavigationRailThemeData.useIndicator"),
    indicatorColor$3: dart.privateName(navigation_rail_theme, "NavigationRailThemeData.indicatorColor"),
    minWidth$1: dart.privateName(navigation_rail_theme, "NavigationRailThemeData.minWidth"),
    minExtendedWidth$1: dart.privateName(navigation_rail_theme, "NavigationRailThemeData.minExtendedWidth"),
    ___NavigationRailDefaultsM3__colors: dart.privateName(navigation_rail, "_#_NavigationRailDefaultsM3#_colors"),
    ___NavigationRailDefaultsM3__textTheme: dart.privateName(navigation_rail, "_#_NavigationRailDefaultsM3#_textTheme"),
    _textTheme$1: dart.privateName(navigation_rail, "_textTheme"),
    data$11: dart.privateName(navigation_rail_theme, "NavigationRailTheme.data"),
    animationDuration$1: dart.privateName(navigation_bar, "NavigationBar.animationDuration"),
    selectedIndex$1: dart.privateName(navigation_bar, "NavigationBar.selectedIndex"),
    destinations$1: dart.privateName(navigation_bar, "NavigationBar.destinations"),
    onDestinationSelected$1: dart.privateName(navigation_bar, "NavigationBar.onDestinationSelected"),
    backgroundColor$8: dart.privateName(navigation_bar, "NavigationBar.backgroundColor"),
    surfaceTintColor$1: dart.privateName(navigation_bar, "NavigationBar.surfaceTintColor"),
    elevation$9: dart.privateName(navigation_bar, "NavigationBar.elevation"),
    height$1: dart.privateName(navigation_bar, "NavigationBar.height"),
    labelBehavior: dart.privateName(navigation_bar, "NavigationBar.labelBehavior"),
    _handleTap$1: dart.privateName(navigation_bar, "_handleTap"),
    icon$4: dart.privateName(navigation_bar, "NavigationDestination.icon"),
    selectedIcon$2: dart.privateName(navigation_bar, "NavigationDestination.selectedIcon"),
    label$3: dart.privateName(navigation_bar, "NavigationDestination.label"),
    tooltip$2: dart.privateName(navigation_bar, "NavigationDestination.tooltip"),
    buildIcon: dart.privateName(navigation_bar, "_NavigationDestinationBuilder.buildIcon"),
    buildLabel: dart.privateName(navigation_bar, "_NavigationDestinationBuilder.buildLabel"),
    label$4: dart.privateName(navigation_bar, "_NavigationDestinationBuilder.label"),
    tooltip$3: dart.privateName(navigation_bar, "_NavigationDestinationBuilder.tooltip"),
    index: dart.privateName(navigation_bar, "_NavigationDestinationInfo.index"),
    totalNumberOfDestinations: dart.privateName(navigation_bar, "_NavigationDestinationInfo.totalNumberOfDestinations"),
    selectedAnimation: dart.privateName(navigation_bar, "_NavigationDestinationInfo.selectedAnimation"),
    labelBehavior$1: dart.privateName(navigation_bar, "_NavigationDestinationInfo.labelBehavior"),
    onTap$1: dart.privateName(navigation_bar, "_NavigationDestinationInfo.onTap"),
    animation$6: dart.privateName(navigation_bar, "NavigationIndicator.animation"),
    color$7: dart.privateName(navigation_bar, "NavigationIndicator.color"),
    width$1: dart.privateName(navigation_bar, "NavigationIndicator.width"),
    height$2: dart.privateName(navigation_bar, "NavigationIndicator.height"),
    borderRadius$1: dart.privateName(navigation_bar, "NavigationIndicator.borderRadius"),
    shape$6: dart.privateName(navigation_bar, "NavigationIndicator.shape"),
    icon$5: dart.privateName(navigation_bar, "_NavigationBarDestinationLayout.icon"),
    label$5: dart.privateName(navigation_bar, "_NavigationBarDestinationLayout.label"),
    builder: dart.privateName(navigation_bar, "_DestinationLayoutAnimationBuilder.builder"),
    child$10: dart.privateName(navigation_bar, "_NavigationBarDestinationSemantics.child"),
    message: dart.privateName(navigation_bar, "_NavigationBarDestinationTooltip.message"),
    child$11: dart.privateName(navigation_bar, "_NavigationBarDestinationTooltip.child"),
    upperLimit: dart.privateName(navigation_bar, "_ClampTextScaleFactor.upperLimit"),
    child$12: dart.privateName(navigation_bar, "_ClampTextScaleFactor.child"),
    builder$1: dart.privateName(navigation_bar, "_StatusTransitionWidgetBuilder.builder"),
    child$13: dart.privateName(navigation_bar, "_StatusTransitionWidgetBuilder.child"),
    isSelected$2: dart.privateName(navigation_bar, "_SelectableAnimatedBuilder.isSelected"),
    duration$1: dart.privateName(navigation_bar, "_SelectableAnimatedBuilder.duration"),
    alwaysDoFullAnimation: dart.privateName(navigation_bar, "_SelectableAnimatedBuilder.alwaysDoFullAnimation"),
    builder$2: dart.privateName(navigation_bar, "_SelectableAnimatedBuilder.builder"),
    ___SelectableAnimatedBuilderState__controller: dart.privateName(navigation_bar, "_#_SelectableAnimatedBuilderState#_controller"),
    _controller$1: dart.privateName(navigation_bar, "_controller"),
    animation$7: dart.privateName(navigation_bar, "_CurvedAnimationBuilder.animation"),
    curve: dart.privateName(navigation_bar, "_CurvedAnimationBuilder.curve"),
    reverseCurve: dart.privateName(navigation_bar, "_CurvedAnimationBuilder.reverseCurve"),
    builder$3: dart.privateName(navigation_bar, "_CurvedAnimationBuilder.builder"),
    ___CurvedAnimationBuilderState__animationDirection: dart.privateName(navigation_bar, "_#_CurvedAnimationBuilderState#_animationDirection"),
    _preservedDirection: dart.privateName(navigation_bar, "_preservedDirection"),
    _animationDirection: dart.privateName(navigation_bar, "_animationDirection"),
    _updateStatus: dart.privateName(navigation_bar, "_updateStatus"),
    _theme$2: dart.privateName(navigation_bar, "_theme"),
    _colors$4: dart.privateName(navigation_bar, "_colors"),
    height$3: dart.privateName(navigation_bar_theme, "NavigationBarThemeData.height"),
    backgroundColor$9: dart.privateName(navigation_bar_theme, "NavigationBarThemeData.backgroundColor"),
    surfaceTintColor$2: dart.privateName(navigation_bar_theme, "NavigationBarThemeData.surfaceTintColor"),
    elevation$10: dart.privateName(navigation_bar_theme, "NavigationBarThemeData.elevation"),
    indicatorColor$4: dart.privateName(navigation_bar_theme, "NavigationBarThemeData.indicatorColor"),
    indicatorShape: dart.privateName(navigation_bar_theme, "NavigationBarThemeData.indicatorShape"),
    labelTextStyle: dart.privateName(navigation_bar_theme, "NavigationBarThemeData.labelTextStyle"),
    iconTheme: dart.privateName(navigation_bar_theme, "NavigationBarThemeData.iconTheme"),
    labelBehavior$2: dart.privateName(navigation_bar_theme, "NavigationBarThemeData.labelBehavior"),
    ___NavigationBarDefaultsM3__colors: dart.privateName(navigation_bar, "_#_NavigationBarDefaultsM3#_colors"),
    ___NavigationBarDefaultsM3__textTheme: dart.privateName(navigation_bar, "_#_NavigationBarDefaultsM3#_textTheme"),
    _textTheme$2: dart.privateName(navigation_bar, "_textTheme"),
    data$12: dart.privateName(navigation_bar_theme, "NavigationBarTheme.data"),
    _start: dart.privateName(input_decorator, "_start"),
    _extent: dart.privateName(input_decorator, "_extent"),
    border: dart.privateName(input_decorator, "_BorderContainer.border"),
    gap: dart.privateName(input_decorator, "_BorderContainer.gap"),
    gapAnimation: dart.privateName(input_decorator, "_BorderContainer.gapAnimation"),
    fillColor$2: dart.privateName(input_decorator, "_BorderContainer.fillColor"),
    hoverColor$3: dart.privateName(input_decorator, "_BorderContainer.hoverColor"),
    isHovering: dart.privateName(input_decorator, "_BorderContainer.isHovering"),
    ___BorderContainerState__controller: dart.privateName(input_decorator, "_#_BorderContainerState#_controller"),
    ___BorderContainerState__hoverColorController: dart.privateName(input_decorator, "_#_BorderContainerState#_hoverColorController"),
    ___BorderContainerState__borderAnimation: dart.privateName(input_decorator, "_#_BorderContainerState#_borderAnimation"),
    ___BorderContainerState__border: dart.privateName(input_decorator, "_#_BorderContainerState#_border"),
    ___BorderContainerState__hoverAnimation: dart.privateName(input_decorator, "_#_BorderContainerState#_hoverAnimation"),
    ___BorderContainerState__hoverColorTween: dart.privateName(input_decorator, "_#_BorderContainerState#_hoverColorTween"),
    _controller$2: dart.privateName(input_decorator, "_controller"),
    _hoverColorController: dart.privateName(input_decorator, "_hoverColorController"),
    _borderAnimation: dart.privateName(input_decorator, "_borderAnimation"),
    _border: dart.privateName(input_decorator, "_border"),
    _hoverAnimation: dart.privateName(input_decorator, "_hoverAnimation"),
    _hoverColorTween: dart.privateName(input_decorator, "_hoverColorTween"),
    child$14: dart.privateName(input_decorator, "_Shaker.child"),
    textAlign: dart.privateName(input_decorator, "_HelperError.textAlign"),
    helperText: dart.privateName(input_decorator, "_HelperError.helperText"),
    helperStyle: dart.privateName(input_decorator, "_HelperError.helperStyle"),
    helperMaxLines: dart.privateName(input_decorator, "_HelperError.helperMaxLines"),
    errorText: dart.privateName(input_decorator, "_HelperError.errorText"),
    errorStyle: dart.privateName(input_decorator, "_HelperError.errorStyle"),
    errorMaxLines: dart.privateName(input_decorator, "_HelperError.errorMaxLines"),
    ___HelperErrorState__controller: dart.privateName(input_decorator, "_#_HelperErrorState#_controller"),
    _helper: dart.privateName(input_decorator, "_helper"),
    _error: dart.privateName(input_decorator, "_error"),
    _buildError: dart.privateName(input_decorator, "_buildError"),
    _buildHelper: dart.privateName(input_decorator, "_buildHelper"),
    _handleChange: dart.privateName(input_decorator, "_handleChange"),
    _x: dart.privateName(input_decorator, "FloatingLabelAlignment._x"),
    _x$1: dart.privateName(input_decorator, "_x"),
    $toStringAsFixed: dartx.toStringAsFixed,
    contentPadding: dart.privateName(input_decorator, "_Decoration.contentPadding"),
    isCollapsed: dart.privateName(input_decorator, "_Decoration.isCollapsed"),
    floatingLabelHeight: dart.privateName(input_decorator, "_Decoration.floatingLabelHeight"),
    floatingLabelProgress: dart.privateName(input_decorator, "_Decoration.floatingLabelProgress"),
    floatingLabelAlignment: dart.privateName(input_decorator, "_Decoration.floatingLabelAlignment"),
    border$1: dart.privateName(input_decorator, "_Decoration.border"),
    borderGap: dart.privateName(input_decorator, "_Decoration.borderGap"),
    alignLabelWithHint: dart.privateName(input_decorator, "_Decoration.alignLabelWithHint"),
    isDense: dart.privateName(input_decorator, "_Decoration.isDense"),
    visualDensity$3: dart.privateName(input_decorator, "_Decoration.visualDensity"),
    icon$6: dart.privateName(input_decorator, "_Decoration.icon"),
    input: dart.privateName(input_decorator, "_Decoration.input"),
    label$6: dart.privateName(input_decorator, "_Decoration.label"),
    hint: dart.privateName(input_decorator, "_Decoration.hint"),
    prefix: dart.privateName(input_decorator, "_Decoration.prefix"),
    suffix: dart.privateName(input_decorator, "_Decoration.suffix"),
    prefixIcon: dart.privateName(input_decorator, "_Decoration.prefixIcon"),
    suffixIcon: dart.privateName(input_decorator, "_Decoration.suffixIcon"),
    helperError: dart.privateName(input_decorator, "_Decoration.helperError"),
    counter: dart.privateName(input_decorator, "_Decoration.counter"),
    container: dart.privateName(input_decorator, "_Decoration.container"),
    boxToBaseline: dart.privateName(input_decorator, "_RenderDecorationLayout.boxToBaseline"),
    inputBaseline: dart.privateName(input_decorator, "_RenderDecorationLayout.inputBaseline"),
    outlineBaseline: dart.privateName(input_decorator, "_RenderDecorationLayout.outlineBaseline"),
    subtextBaseline: dart.privateName(input_decorator, "_RenderDecorationLayout.subtextBaseline"),
    containerHeight: dart.privateName(input_decorator, "_RenderDecorationLayout.containerHeight"),
    subtextHeight: dart.privateName(input_decorator, "_RenderDecorationLayout.subtextHeight"),
    _expands: dart.privateName(input_decorator, "_expands"),
    _labelTransform: dart.privateName(input_decorator, "_labelTransform"),
    _decoration: dart.privateName(input_decorator, "_decoration"),
    _textDirection: dart.privateName(input_decorator, "_textDirection"),
    _textBaseline: dart.privateName(input_decorator, "_textBaseline"),
    _textAlignVertical: dart.privateName(input_decorator, "_textAlignVertical"),
    _isFocused: dart.privateName(input_decorator, "_isFocused"),
    _isOutlineAligned: dart.privateName(input_decorator, "_isOutlineAligned"),
    _defaultTextAlignVertical: dart.privateName(input_decorator, "_defaultTextAlignVertical"),
    _layoutLineBox: dart.privateName(input_decorator, "_layoutLineBox"),
    _interpolateThree: dart.privateName(input_decorator, "_interpolateThree"),
    _layout: dart.privateName(input_decorator, "_layout"),
    _lineHeight: dart.privateName(input_decorator, "_lineHeight"),
    $reduce: dartx.reduce,
    _paintLabel: dart.privateName(input_decorator, "_paintLabel"),
    decoration: dart.privateName(input_decorator, "_Decorator.decoration"),
    textDirection: dart.privateName(input_decorator, "_Decorator.textDirection"),
    textBaseline: dart.privateName(input_decorator, "_Decorator.textBaseline"),
    textAlignVertical: dart.privateName(input_decorator, "_Decorator.textAlignVertical"),
    isFocused: dart.privateName(input_decorator, "_Decorator.isFocused"),
    expands: dart.privateName(input_decorator, "_Decorator.expands"),
    labelIsFloating: dart.privateName(input_decorator, "_AffixText.labelIsFloating"),
    text$1: dart.privateName(input_decorator, "_AffixText.text"),
    style$5: dart.privateName(input_decorator, "_AffixText.style"),
    child$15: dart.privateName(input_decorator, "_AffixText.child"),
    decoration$1: dart.privateName(input_decorator, "InputDecorator.decoration"),
    baseStyle: dart.privateName(input_decorator, "InputDecorator.baseStyle"),
    textAlign$1: dart.privateName(input_decorator, "InputDecorator.textAlign"),
    textAlignVertical$1: dart.privateName(input_decorator, "InputDecorator.textAlignVertical"),
    isFocused$1: dart.privateName(input_decorator, "InputDecorator.isFocused"),
    isHovering$1: dart.privateName(input_decorator, "InputDecorator.isHovering"),
    expands$1: dart.privateName(input_decorator, "InputDecorator.expands"),
    isEmpty: dart.privateName(input_decorator, "InputDecorator.isEmpty"),
    child$16: dart.privateName(input_decorator, "InputDecorator.child"),
    _labelShouldWithdraw: dart.privateName(input_decorator, "_labelShouldWithdraw"),
    ___InputDecoratorState__floatingLabelController: dart.privateName(input_decorator, "_#_InputDecoratorState#_floatingLabelController"),
    ___InputDecoratorState__shakingLabelController: dart.privateName(input_decorator, "_#_InputDecoratorState#_shakingLabelController"),
    _borderGap: dart.privateName(input_decorator, "_borderGap"),
    _effectiveDecoration: dart.privateName(input_decorator, "_effectiveDecoration"),
    _floatingLabelController: dart.privateName(input_decorator, "_floatingLabelController"),
    _shakingLabelController: dart.privateName(input_decorator, "_shakingLabelController"),
    _floatingLabelEnabled: dart.privateName(input_decorator, "_floatingLabelEnabled"),
    _getActiveColor: dart.privateName(input_decorator, "_getActiveColor"),
    _getDefaultBorderColor: dart.privateName(input_decorator, "_getDefaultBorderColor"),
    _getFillColor: dart.privateName(input_decorator, "_getFillColor"),
    _getHoverColor: dart.privateName(input_decorator, "_getHoverColor"),
    _getIconColor: dart.privateName(input_decorator, "_getIconColor"),
    _getPrefixIconColor: dart.privateName(input_decorator, "_getPrefixIconColor"),
    _getSuffixIconColor: dart.privateName(input_decorator, "_getSuffixIconColor"),
    _hasInlineLabel: dart.privateName(input_decorator, "_hasInlineLabel"),
    _shouldShowLabel: dart.privateName(input_decorator, "_shouldShowLabel"),
    _getInlineLabelStyle: dart.privateName(input_decorator, "_getInlineLabelStyle"),
    _getInlineHintStyle: dart.privateName(input_decorator, "_getInlineHintStyle"),
    _getFloatingLabelStyle: dart.privateName(input_decorator, "_getFloatingLabelStyle"),
    _getHelperStyle: dart.privateName(input_decorator, "_getHelperStyle"),
    _getErrorStyle: dart.privateName(input_decorator, "_getErrorStyle"),
    InputBorder_borderSide: dart.privateName(input_border, "InputBorder.borderSide"),
    UnderlineInputBorder_borderRadius: dart.privateName(input_border, "UnderlineInputBorder.borderRadius"),
    _getDefaultBorder: dart.privateName(input_decorator, "_getDefaultBorder"),
    EdgeInsetsDirectional_bottom: dart.privateName(edge_insets, "EdgeInsetsDirectional.bottom"),
    EdgeInsetsDirectional_end: dart.privateName(edge_insets, "EdgeInsetsDirectional.end"),
    EdgeInsetsDirectional_top: dart.privateName(edge_insets, "EdgeInsetsDirectional.top"),
    EdgeInsetsDirectional_start: dart.privateName(edge_insets, "EdgeInsetsDirectional.start"),
    icon$7: dart.privateName(input_decorator, "InputDecoration.icon"),
    iconColor: dart.privateName(input_decorator, "InputDecoration.iconColor"),
    label$7: dart.privateName(input_decorator, "InputDecoration.label"),
    labelText: dart.privateName(input_decorator, "InputDecoration.labelText"),
    labelStyle$3: dart.privateName(input_decorator, "InputDecoration.labelStyle"),
    floatingLabelStyle: dart.privateName(input_decorator, "InputDecoration.floatingLabelStyle"),
    helperText$1: dart.privateName(input_decorator, "InputDecoration.helperText"),
    helperStyle$1: dart.privateName(input_decorator, "InputDecoration.helperStyle"),
    helperMaxLines$1: dart.privateName(input_decorator, "InputDecoration.helperMaxLines"),
    hintText: dart.privateName(input_decorator, "InputDecoration.hintText"),
    hintStyle: dart.privateName(input_decorator, "InputDecoration.hintStyle"),
    hintTextDirection: dart.privateName(input_decorator, "InputDecoration.hintTextDirection"),
    hintMaxLines: dart.privateName(input_decorator, "InputDecoration.hintMaxLines"),
    errorText$1: dart.privateName(input_decorator, "InputDecoration.errorText"),
    errorStyle$1: dart.privateName(input_decorator, "InputDecoration.errorStyle"),
    errorMaxLines$1: dart.privateName(input_decorator, "InputDecoration.errorMaxLines"),
    floatingLabelBehavior: dart.privateName(input_decorator, "InputDecoration.floatingLabelBehavior"),
    floatingLabelAlignment$1: dart.privateName(input_decorator, "InputDecoration.floatingLabelAlignment"),
    isDense$1: dart.privateName(input_decorator, "InputDecoration.isDense"),
    contentPadding$1: dart.privateName(input_decorator, "InputDecoration.contentPadding"),
    isCollapsed$1: dart.privateName(input_decorator, "InputDecoration.isCollapsed"),
    prefixIcon$1: dart.privateName(input_decorator, "InputDecoration.prefixIcon"),
    prefixIconConstraints: dart.privateName(input_decorator, "InputDecoration.prefixIconConstraints"),
    prefix$1: dart.privateName(input_decorator, "InputDecoration.prefix"),
    prefixText: dart.privateName(input_decorator, "InputDecoration.prefixText"),
    prefixStyle: dart.privateName(input_decorator, "InputDecoration.prefixStyle"),
    prefixIconColor: dart.privateName(input_decorator, "InputDecoration.prefixIconColor"),
    suffixIcon$1: dart.privateName(input_decorator, "InputDecoration.suffixIcon"),
    suffix$1: dart.privateName(input_decorator, "InputDecoration.suffix"),
    suffixText: dart.privateName(input_decorator, "InputDecoration.suffixText"),
    suffixStyle: dart.privateName(input_decorator, "InputDecoration.suffixStyle"),
    suffixIconColor: dart.privateName(input_decorator, "InputDecoration.suffixIconColor"),
    suffixIconConstraints: dart.privateName(input_decorator, "InputDecoration.suffixIconConstraints"),
    counterText: dart.privateName(input_decorator, "InputDecoration.counterText"),
    counter$1: dart.privateName(input_decorator, "InputDecoration.counter"),
    counterStyle: dart.privateName(input_decorator, "InputDecoration.counterStyle"),
    filled: dart.privateName(input_decorator, "InputDecoration.filled"),
    fillColor$3: dart.privateName(input_decorator, "InputDecoration.fillColor"),
    focusColor$3: dart.privateName(input_decorator, "InputDecoration.focusColor"),
    hoverColor$4: dart.privateName(input_decorator, "InputDecoration.hoverColor"),
    errorBorder: dart.privateName(input_decorator, "InputDecoration.errorBorder"),
    focusedBorder: dart.privateName(input_decorator, "InputDecoration.focusedBorder"),
    focusedErrorBorder: dart.privateName(input_decorator, "InputDecoration.focusedErrorBorder"),
    disabledBorder: dart.privateName(input_decorator, "InputDecoration.disabledBorder"),
    enabledBorder: dart.privateName(input_decorator, "InputDecoration.enabledBorder"),
    border$2: dart.privateName(input_decorator, "InputDecoration.border"),
    enabled: dart.privateName(input_decorator, "InputDecoration.enabled"),
    semanticCounterText: dart.privateName(input_decorator, "InputDecoration.semanticCounterText"),
    alignLabelWithHint$1: dart.privateName(input_decorator, "InputDecoration.alignLabelWithHint"),
    constraints$2: dart.privateName(input_decorator, "InputDecoration.constraints"),
    $join: dartx.join,
    labelStyle$4: dart.privateName(input_decorator, "InputDecorationTheme.labelStyle"),
    floatingLabelStyle$1: dart.privateName(input_decorator, "InputDecorationTheme.floatingLabelStyle"),
    helperStyle$2: dart.privateName(input_decorator, "InputDecorationTheme.helperStyle"),
    helperMaxLines$2: dart.privateName(input_decorator, "InputDecorationTheme.helperMaxLines"),
    hintStyle$1: dart.privateName(input_decorator, "InputDecorationTheme.hintStyle"),
    errorStyle$2: dart.privateName(input_decorator, "InputDecorationTheme.errorStyle"),
    errorMaxLines$2: dart.privateName(input_decorator, "InputDecorationTheme.errorMaxLines"),
    floatingLabelBehavior$1: dart.privateName(input_decorator, "InputDecorationTheme.floatingLabelBehavior"),
    floatingLabelAlignment$2: dart.privateName(input_decorator, "InputDecorationTheme.floatingLabelAlignment"),
    isDense$2: dart.privateName(input_decorator, "InputDecorationTheme.isDense"),
    contentPadding$2: dart.privateName(input_decorator, "InputDecorationTheme.contentPadding"),
    isCollapsed$2: dart.privateName(input_decorator, "InputDecorationTheme.isCollapsed"),
    iconColor$1: dart.privateName(input_decorator, "InputDecorationTheme.iconColor"),
    prefixStyle$1: dart.privateName(input_decorator, "InputDecorationTheme.prefixStyle"),
    prefixIconColor$1: dart.privateName(input_decorator, "InputDecorationTheme.prefixIconColor"),
    suffixStyle$1: dart.privateName(input_decorator, "InputDecorationTheme.suffixStyle"),
    suffixIconColor$1: dart.privateName(input_decorator, "InputDecorationTheme.suffixIconColor"),
    counterStyle$1: dart.privateName(input_decorator, "InputDecorationTheme.counterStyle"),
    filled$1: dart.privateName(input_decorator, "InputDecorationTheme.filled"),
    fillColor$4: dart.privateName(input_decorator, "InputDecorationTheme.fillColor"),
    focusColor$4: dart.privateName(input_decorator, "InputDecorationTheme.focusColor"),
    hoverColor$5: dart.privateName(input_decorator, "InputDecorationTheme.hoverColor"),
    errorBorder$1: dart.privateName(input_decorator, "InputDecorationTheme.errorBorder"),
    focusedBorder$1: dart.privateName(input_decorator, "InputDecorationTheme.focusedBorder"),
    focusedErrorBorder$1: dart.privateName(input_decorator, "InputDecorationTheme.focusedErrorBorder"),
    disabledBorder$1: dart.privateName(input_decorator, "InputDecorationTheme.disabledBorder"),
    enabledBorder$1: dart.privateName(input_decorator, "InputDecorationTheme.enabledBorder"),
    border$3: dart.privateName(input_decorator, "InputDecorationTheme.border"),
    alignLabelWithHint$2: dart.privateName(input_decorator, "InputDecorationTheme.alignLabelWithHint"),
    constraints$3: dart.privateName(input_decorator, "InputDecorationTheme.constraints"),
    __InkSplash__radius: dart.privateName(ink_splash, "_#InkSplash#_radius"),
    __InkSplash__radiusController: dart.privateName(ink_splash, "_#InkSplash#_radiusController"),
    __InkSplash__alpha: dart.privateName(ink_splash, "_#InkSplash#_alpha"),
    _alphaController: dart.privateName(ink_splash, "_alphaController"),
    _position: dart.privateName(ink_splash, "_position"),
    _borderRadius: dart.privateName(ink_splash, "_borderRadius"),
    _customBorder: dart.privateName(ink_splash, "_customBorder"),
    _targetRadius: dart.privateName(ink_splash, "_targetRadius"),
    _clipCallback: dart.privateName(ink_splash, "_clipCallback"),
    _repositionToReferenceBox: dart.privateName(ink_splash, "_repositionToReferenceBox"),
    _textDirection$1: dart.privateName(ink_splash, "_textDirection"),
    _radiusController: dart.privateName(ink_splash, "_radiusController"),
    _radius: dart.privateName(ink_splash, "_radius"),
    _handleAlphaStatusChanged: dart.privateName(ink_splash, "_handleAlphaStatusChanged"),
    _alpha: dart.privateName(ink_splash, "_alpha"),
    _color: dart.privateName(ink_well, "_color"),
    referenceBox: dart.privateName(material, "InkFeature.referenceBox"),
    onRemoved: dart.privateName(material, "InkFeature.onRemoved"),
    _debugDisposed: dart.privateName(material, "_debugDisposed"),
    _controller$3: dart.privateName(material, "_controller"),
    _removeFeature: dart.privateName(material, "_removeFeature"),
    _paint: dart.privateName(material, "_paint"),
    $ceilToDouble: dartx.ceilToDouble,
    __InkSparkle__animationController: dart.privateName(ink_sparkle, "_#InkSparkle#_animationController"),
    __InkSparkle__center: dart.privateName(ink_sparkle, "_#InkSparkle#_center"),
    __InkSparkle__radiusScale: dart.privateName(ink_sparkle, "_#InkSparkle#_radiusScale"),
    __InkSparkle__alpha: dart.privateName(ink_sparkle, "_#InkSparkle#_alpha"),
    __InkSparkle__sparkleAlpha: dart.privateName(ink_sparkle, "_#InkSparkle#_sparkleAlpha"),
    __InkSparkle__turbulenceSeed: dart.privateName(ink_sparkle, "_#InkSparkle#_turbulenceSeed"),
    _color$1: dart.privateName(ink_sparkle, "_color"),
    _position$1: dart.privateName(ink_sparkle, "_position"),
    _borderRadius$1: dart.privateName(ink_sparkle, "_borderRadius"),
    _customBorder$1: dart.privateName(ink_sparkle, "_customBorder"),
    _textDirection$2: dart.privateName(ink_sparkle, "_textDirection"),
    _targetRadius$1: dart.privateName(ink_sparkle, "_targetRadius"),
    _clipCallback$1: dart.privateName(ink_sparkle, "_clipCallback"),
    _animationController: dart.privateName(ink_sparkle, "_animationController"),
    _handleStatusChanged: dart.privateName(ink_sparkle, "_handleStatusChanged"),
    _radiusScale: dart.privateName(ink_sparkle, "_radiusScale"),
    _center: dart.privateName(ink_sparkle, "_center"),
    _alpha$1: dart.privateName(ink_sparkle, "_alpha"),
    _sparkleAlpha: dart.privateName(ink_sparkle, "_sparkleAlpha"),
    _turbulenceSeed: dart.privateName(ink_sparkle, "_turbulenceSeed"),
    _transformCanvas: dart.privateName(ink_sparkle, "_transformCanvas"),
    _clipCanvas: dart.privateName(ink_sparkle, "_clipCanvas"),
    _createRippleShader: dart.privateName(ink_sparkle, "_createRippleShader"),
    _width: dart.privateName(ink_sparkle, "_width"),
    _height: dart.privateName(ink_sparkle, "_height"),
    _colorToVector4: dart.privateName(ink_sparkle, "_colorToVector4"),
    _InkSparkleFactory_turbulenceSeed: dart.privateName(ink_sparkle, "_InkSparkleFactory.turbulenceSeed"),
    turbulenceSeed: dart.privateName(ink_sparkle, "_InkSparkleFactory.turbulenceSeed"),
    _compile: dart.privateName(ink_sparkle, "_compile"),
    $buffer: dartx.buffer,
    __InkRipple__radius: dart.privateName(ink_ripple, "_#InkRipple#_radius"),
    __InkRipple__radiusController: dart.privateName(ink_ripple, "_#InkRipple#_radiusController"),
    __InkRipple__fadeIn: dart.privateName(ink_ripple, "_#InkRipple#_fadeIn"),
    __InkRipple__fadeInController: dart.privateName(ink_ripple, "_#InkRipple#_fadeInController"),
    __InkRipple__fadeOut: dart.privateName(ink_ripple, "_#InkRipple#_fadeOut"),
    __InkRipple__fadeOutController: dart.privateName(ink_ripple, "_#InkRipple#_fadeOutController"),
    _position$2: dart.privateName(ink_ripple, "_position"),
    _borderRadius$2: dart.privateName(ink_ripple, "_borderRadius"),
    _customBorder$2: dart.privateName(ink_ripple, "_customBorder"),
    _textDirection$3: dart.privateName(ink_ripple, "_textDirection"),
    _targetRadius$2: dart.privateName(ink_ripple, "_targetRadius"),
    _clipCallback$2: dart.privateName(ink_ripple, "_clipCallback"),
    _fadeInController: dart.privateName(ink_ripple, "_fadeInController"),
    _fadeIn: dart.privateName(ink_ripple, "_fadeIn"),
    _radiusController$1: dart.privateName(ink_ripple, "_radiusController"),
    _radius$1: dart.privateName(ink_ripple, "_radius"),
    _fadeOutController: dart.privateName(ink_ripple, "_fadeOutController"),
    _handleAlphaStatusChanged$1: dart.privateName(ink_ripple, "_handleAlphaStatusChanged"),
    _fadeOut: dart.privateName(ink_ripple, "_fadeOut"),
    backgroundColor$10: dart.privateName(expansion_tile_theme, "ExpansionTileThemeData.backgroundColor"),
    collapsedBackgroundColor: dart.privateName(expansion_tile_theme, "ExpansionTileThemeData.collapsedBackgroundColor"),
    tilePadding: dart.privateName(expansion_tile_theme, "ExpansionTileThemeData.tilePadding"),
    expandedAlignment: dart.privateName(expansion_tile_theme, "ExpansionTileThemeData.expandedAlignment"),
    childrenPadding: dart.privateName(expansion_tile_theme, "ExpansionTileThemeData.childrenPadding"),
    iconColor$2: dart.privateName(expansion_tile_theme, "ExpansionTileThemeData.iconColor"),
    collapsedIconColor: dart.privateName(expansion_tile_theme, "ExpansionTileThemeData.collapsedIconColor"),
    textColor$1: dart.privateName(expansion_tile_theme, "ExpansionTileThemeData.textColor"),
    collapsedTextColor: dart.privateName(expansion_tile_theme, "ExpansionTileThemeData.collapsedTextColor"),
    data$13: dart.privateName(expansion_tile_theme, "ExpansionTileTheme.data"),
    a$1: dart.privateName(button_style, "_LerpProperties.a"),
    b$1: dart.privateName(button_style, "_LerpProperties.b"),
    t$1: dart.privateName(button_style, "_LerpProperties.t"),
    lerpFunction: dart.privateName(button_style, "_LerpProperties.lerpFunction"),
    a$2: dart.privateName(button_style, "_LerpSides.a"),
    b$2: dart.privateName(button_style, "_LerpSides.b"),
    t$2: dart.privateName(button_style, "_LerpSides.t"),
    style$6: dart.privateName(elevated_button_theme, "ElevatedButtonThemeData.style"),
    data$14: dart.privateName(elevated_button_theme, "ElevatedButtonTheme.data"),
    backgroundColor$11: dart.privateName(dialog_theme, "DialogTheme.backgroundColor"),
    elevation$11: dart.privateName(dialog_theme, "DialogTheme.elevation"),
    shape$7: dart.privateName(dialog_theme, "DialogTheme.shape"),
    alignment$2: dart.privateName(dialog_theme, "DialogTheme.alignment"),
    titleTextStyle: dart.privateName(dialog_theme, "DialogTheme.titleTextStyle"),
    contentTextStyle$1: dart.privateName(dialog_theme, "DialogTheme.contentTextStyle"),
    actionsPadding: dart.privateName(dialog_theme, "DialogTheme.actionsPadding"),
    iconColor$3: dart.privateName(dialog_theme, "DialogTheme.iconColor"),
    decoration$2: dart.privateName(data_table_theme, "DataTableThemeData.decoration"),
    dataRowColor: dart.privateName(data_table_theme, "DataTableThemeData.dataRowColor"),
    dataRowHeight: dart.privateName(data_table_theme, "DataTableThemeData.dataRowHeight"),
    dataTextStyle: dart.privateName(data_table_theme, "DataTableThemeData.dataTextStyle"),
    headingRowColor: dart.privateName(data_table_theme, "DataTableThemeData.headingRowColor"),
    headingRowHeight: dart.privateName(data_table_theme, "DataTableThemeData.headingRowHeight"),
    headingTextStyle: dart.privateName(data_table_theme, "DataTableThemeData.headingTextStyle"),
    horizontalMargin: dart.privateName(data_table_theme, "DataTableThemeData.horizontalMargin"),
    columnSpacing: dart.privateName(data_table_theme, "DataTableThemeData.columnSpacing"),
    dividerThickness: dart.privateName(data_table_theme, "DataTableThemeData.dividerThickness"),
    checkboxHorizontalMargin: dart.privateName(data_table_theme, "DataTableThemeData.checkboxHorizontalMargin"),
    data$15: dart.privateName(data_table_theme, "DataTableTheme.data"),
    data$16: dart.privateName(chip_theme, "ChipTheme.data"),
    backgroundColor$12: dart.privateName(chip_theme, "ChipThemeData.backgroundColor"),
    deleteIconColor: dart.privateName(chip_theme, "ChipThemeData.deleteIconColor"),
    disabledColor$2: dart.privateName(chip_theme, "ChipThemeData.disabledColor"),
    selectedColor$2: dart.privateName(chip_theme, "ChipThemeData.selectedColor"),
    secondarySelectedColor: dart.privateName(chip_theme, "ChipThemeData.secondarySelectedColor"),
    shadowColor$1: dart.privateName(chip_theme, "ChipThemeData.shadowColor"),
    surfaceTintColor$3: dart.privateName(chip_theme, "ChipThemeData.surfaceTintColor"),
    selectedShadowColor: dart.privateName(chip_theme, "ChipThemeData.selectedShadowColor"),
    showCheckmark: dart.privateName(chip_theme, "ChipThemeData.showCheckmark"),
    checkmarkColor: dart.privateName(chip_theme, "ChipThemeData.checkmarkColor"),
    labelPadding$2: dart.privateName(chip_theme, "ChipThemeData.labelPadding"),
    padding$5: dart.privateName(chip_theme, "ChipThemeData.padding"),
    side$1: dart.privateName(chip_theme, "ChipThemeData.side"),
    shape$8: dart.privateName(chip_theme, "ChipThemeData.shape"),
    labelStyle$5: dart.privateName(chip_theme, "ChipThemeData.labelStyle"),
    secondaryLabelStyle: dart.privateName(chip_theme, "ChipThemeData.secondaryLabelStyle"),
    brightness: dart.privateName(chip_theme, "ChipThemeData.brightness"),
    elevation$12: dart.privateName(chip_theme, "ChipThemeData.elevation"),
    pressElevation: dart.privateName(chip_theme, "ChipThemeData.pressElevation"),
    iconTheme$1: dart.privateName(chip_theme, "ChipThemeData.iconTheme"),
    mouseCursor$9: dart.privateName(checkbox_theme, "CheckboxThemeData.mouseCursor"),
    fillColor$5: dart.privateName(checkbox_theme, "CheckboxThemeData.fillColor"),
    checkColor: dart.privateName(checkbox_theme, "CheckboxThemeData.checkColor"),
    overlayColor$6: dart.privateName(checkbox_theme, "CheckboxThemeData.overlayColor"),
    splashRadius$3: dart.privateName(checkbox_theme, "CheckboxThemeData.splashRadius"),
    materialTapTargetSize$3: dart.privateName(checkbox_theme, "CheckboxThemeData.materialTapTargetSize"),
    visualDensity$4: dart.privateName(checkbox_theme, "CheckboxThemeData.visualDensity"),
    shape$9: dart.privateName(checkbox_theme, "CheckboxThemeData.shape"),
    side$2: dart.privateName(checkbox_theme, "CheckboxThemeData.side"),
    data$17: dart.privateName(checkbox_theme, "CheckboxTheme.data"),
    clipBehavior$4: dart.privateName(card_theme, "CardTheme.clipBehavior"),
    color$8: dart.privateName(card_theme, "CardTheme.color"),
    shadowColor$2: dart.privateName(card_theme, "CardTheme.shadowColor"),
    surfaceTintColor$4: dart.privateName(card_theme, "CardTheme.surfaceTintColor"),
    elevation$13: dart.privateName(card_theme, "CardTheme.elevation"),
    margin$1: dart.privateName(card_theme, "CardTheme.margin"),
    shape$10: dart.privateName(card_theme, "CardTheme.shape"),
    onPressed$7: dart.privateName(button, "RawMaterialButton.onPressed"),
    onLongPress$1: dart.privateName(button, "RawMaterialButton.onLongPress"),
    onHighlightChanged: dart.privateName(button, "RawMaterialButton.onHighlightChanged"),
    mouseCursor$10: dart.privateName(button, "RawMaterialButton.mouseCursor"),
    textStyle$3: dart.privateName(button, "RawMaterialButton.textStyle"),
    fillColor$6: dart.privateName(button, "RawMaterialButton.fillColor"),
    focusColor$5: dart.privateName(button, "RawMaterialButton.focusColor"),
    hoverColor$6: dart.privateName(button, "RawMaterialButton.hoverColor"),
    highlightColor$2: dart.privateName(button, "RawMaterialButton.highlightColor"),
    splashColor$3: dart.privateName(button, "RawMaterialButton.splashColor"),
    elevation$14: dart.privateName(button, "RawMaterialButton.elevation"),
    hoverElevation$1: dart.privateName(button, "RawMaterialButton.hoverElevation")
  };
  var S$0 = {
    focusElevation$1: dart.privateName(button, "RawMaterialButton.focusElevation"),
    highlightElevation$1: dart.privateName(button, "RawMaterialButton.highlightElevation"),
    disabledElevation$1: dart.privateName(button, "RawMaterialButton.disabledElevation"),
    padding$6: dart.privateName(button, "RawMaterialButton.padding"),
    visualDensity$5: dart.privateName(button, "RawMaterialButton.visualDensity"),
    constraints$4: dart.privateName(button, "RawMaterialButton.constraints"),
    shape$11: dart.privateName(button, "RawMaterialButton.shape"),
    animationDuration$2: dart.privateName(button, "RawMaterialButton.animationDuration"),
    child$17: dart.privateName(button, "RawMaterialButton.child"),
    materialTapTargetSize$4: dart.privateName(button, "RawMaterialButton.materialTapTargetSize"),
    focusNode$4: dart.privateName(button, "RawMaterialButton.focusNode"),
    autofocus$4: dart.privateName(button, "RawMaterialButton.autofocus"),
    clipBehavior$5: dart.privateName(button, "RawMaterialButton.clipBehavior"),
    enableFeedback$5: dart.privateName(button, "RawMaterialButton.enableFeedback"),
    VisualDensity_vertical: dart.privateName(theme_data, "VisualDensity.vertical"),
    VisualDensity_horizontal: dart.privateName(theme_data, "VisualDensity.horizontal"),
    _effectiveElevation: dart.privateName(button, "_effectiveElevation"),
    minSize$1: dart.privateName(button, "_InputPadding.minSize"),
    _minSize$1: dart.privateName(button, "_minSize"),
    _computeSize$1: dart.privateName(button, "_computeSize"),
    onPressed$8: dart.privateName(material_button, "MaterialButton.onPressed"),
    onLongPress$2: dart.privateName(material_button, "MaterialButton.onLongPress"),
    onHighlightChanged$1: dart.privateName(material_button, "MaterialButton.onHighlightChanged"),
    mouseCursor$11: dart.privateName(material_button, "MaterialButton.mouseCursor"),
    textTheme: dart.privateName(material_button, "MaterialButton.textTheme"),
    textColor$2: dart.privateName(material_button, "MaterialButton.textColor"),
    disabledTextColor$1: dart.privateName(material_button, "MaterialButton.disabledTextColor"),
    color$9: dart.privateName(material_button, "MaterialButton.color"),
    disabledColor$3: dart.privateName(material_button, "MaterialButton.disabledColor"),
    splashColor$4: dart.privateName(material_button, "MaterialButton.splashColor"),
    focusColor$6: dart.privateName(material_button, "MaterialButton.focusColor"),
    hoverColor$7: dart.privateName(material_button, "MaterialButton.hoverColor"),
    highlightColor$3: dart.privateName(material_button, "MaterialButton.highlightColor"),
    elevation$15: dart.privateName(material_button, "MaterialButton.elevation"),
    hoverElevation$2: dart.privateName(material_button, "MaterialButton.hoverElevation"),
    focusElevation$2: dart.privateName(material_button, "MaterialButton.focusElevation"),
    highlightElevation$2: dart.privateName(material_button, "MaterialButton.highlightElevation"),
    disabledElevation$2: dart.privateName(material_button, "MaterialButton.disabledElevation"),
    colorBrightness: dart.privateName(material_button, "MaterialButton.colorBrightness"),
    child$18: dart.privateName(material_button, "MaterialButton.child"),
    padding$7: dart.privateName(material_button, "MaterialButton.padding"),
    visualDensity$6: dart.privateName(material_button, "MaterialButton.visualDensity"),
    shape$12: dart.privateName(material_button, "MaterialButton.shape"),
    clipBehavior$6: dart.privateName(material_button, "MaterialButton.clipBehavior"),
    focusNode$5: dart.privateName(material_button, "MaterialButton.focusNode"),
    autofocus$5: dart.privateName(material_button, "MaterialButton.autofocus"),
    animationDuration$3: dart.privateName(material_button, "MaterialButton.animationDuration"),
    materialTapTargetSize$5: dart.privateName(material_button, "MaterialButton.materialTapTargetSize"),
    minWidth$2: dart.privateName(material_button, "MaterialButton.minWidth"),
    height$4: dart.privateName(material_button, "MaterialButton.height"),
    enableFeedback$6: dart.privateName(material_button, "MaterialButton.enableFeedback"),
    brightness$1: dart.privateName(color_scheme, "ColorScheme.brightness"),
    primary: dart.privateName(color_scheme, "ColorScheme.primary"),
    onPrimary: dart.privateName(color_scheme, "ColorScheme.onPrimary"),
    _primaryContainer: dart.privateName(color_scheme, "ColorScheme._primaryContainer"),
    _onPrimaryContainer: dart.privateName(color_scheme, "ColorScheme._onPrimaryContainer"),
    secondary: dart.privateName(color_scheme, "ColorScheme.secondary"),
    onSecondary: dart.privateName(color_scheme, "ColorScheme.onSecondary"),
    _secondaryContainer: dart.privateName(color_scheme, "ColorScheme._secondaryContainer"),
    _onSecondaryContainer: dart.privateName(color_scheme, "ColorScheme._onSecondaryContainer"),
    _tertiary: dart.privateName(color_scheme, "ColorScheme._tertiary"),
    _onTertiary: dart.privateName(color_scheme, "ColorScheme._onTertiary"),
    _tertiaryContainer: dart.privateName(color_scheme, "ColorScheme._tertiaryContainer"),
    _onTertiaryContainer: dart.privateName(color_scheme, "ColorScheme._onTertiaryContainer"),
    error: dart.privateName(color_scheme, "ColorScheme.error"),
    onError: dart.privateName(color_scheme, "ColorScheme.onError"),
    _errorContainer: dart.privateName(color_scheme, "ColorScheme._errorContainer"),
    _onErrorContainer: dart.privateName(color_scheme, "ColorScheme._onErrorContainer"),
    background$1: dart.privateName(color_scheme, "ColorScheme.background"),
    onBackground: dart.privateName(color_scheme, "ColorScheme.onBackground"),
    surface: dart.privateName(color_scheme, "ColorScheme.surface"),
    onSurface: dart.privateName(color_scheme, "ColorScheme.onSurface"),
    _surfaceVariant: dart.privateName(color_scheme, "ColorScheme._surfaceVariant"),
    _onSurfaceVariant: dart.privateName(color_scheme, "ColorScheme._onSurfaceVariant"),
    _outline: dart.privateName(color_scheme, "ColorScheme._outline"),
    _shadow: dart.privateName(color_scheme, "ColorScheme._shadow"),
    _inverseSurface: dart.privateName(color_scheme, "ColorScheme._inverseSurface"),
    _onInverseSurface: dart.privateName(color_scheme, "ColorScheme._onInverseSurface"),
    _inversePrimary: dart.privateName(color_scheme, "ColorScheme._inversePrimary"),
    _surfaceTint: dart.privateName(color_scheme, "ColorScheme._surfaceTint"),
    _primaryVariant: dart.privateName(color_scheme, "ColorScheme._primaryVariant"),
    _secondaryVariant: dart.privateName(color_scheme, "ColorScheme._secondaryVariant"),
    _primaryContainer$1: dart.privateName(color_scheme, "_primaryContainer"),
    _onPrimaryContainer$1: dart.privateName(color_scheme, "_onPrimaryContainer"),
    _secondaryContainer$1: dart.privateName(color_scheme, "_secondaryContainer"),
    _onSecondaryContainer$1: dart.privateName(color_scheme, "_onSecondaryContainer"),
    _tertiary$1: dart.privateName(color_scheme, "_tertiary"),
    _onTertiary$1: dart.privateName(color_scheme, "_onTertiary"),
    _tertiaryContainer$1: dart.privateName(color_scheme, "_tertiaryContainer"),
    _onTertiaryContainer$1: dart.privateName(color_scheme, "_onTertiaryContainer"),
    _errorContainer$1: dart.privateName(color_scheme, "_errorContainer"),
    _onErrorContainer$1: dart.privateName(color_scheme, "_onErrorContainer"),
    _surfaceVariant$1: dart.privateName(color_scheme, "_surfaceVariant"),
    _onSurfaceVariant$1: dart.privateName(color_scheme, "_onSurfaceVariant"),
    _outline$1: dart.privateName(color_scheme, "_outline"),
    _shadow$1: dart.privateName(color_scheme, "_shadow"),
    _inverseSurface$1: dart.privateName(color_scheme, "_inverseSurface"),
    _onInverseSurface$1: dart.privateName(color_scheme, "_onInverseSurface"),
    _inversePrimary$1: dart.privateName(color_scheme, "_inversePrimary"),
    _surfaceTint$1: dart.privateName(color_scheme, "_surfaceTint"),
    _primaryVariant$1: dart.privateName(color_scheme, "_primaryVariant"),
    _secondaryVariant$1: dart.privateName(color_scheme, "_secondaryVariant"),
    ColorSwatch__swatch: dart.privateName(colors, "ColorSwatch._swatch"),
    data$18: dart.privateName(button_theme, "ButtonTheme.data"),
    minWidth$3: dart.privateName(button_theme, "ButtonThemeData.minWidth"),
    height$5: dart.privateName(button_theme, "ButtonThemeData.height"),
    textTheme$1: dart.privateName(button_theme, "ButtonThemeData.textTheme"),
    layoutBehavior: dart.privateName(button_theme, "ButtonThemeData.layoutBehavior"),
    _padding: dart.privateName(button_theme, "ButtonThemeData._padding"),
    _shape: dart.privateName(button_theme, "ButtonThemeData._shape"),
    alignedDropdown: dart.privateName(button_theme, "ButtonThemeData.alignedDropdown"),
    _buttonColor: dart.privateName(button_theme, "ButtonThemeData._buttonColor"),
    _disabledColor: dart.privateName(button_theme, "ButtonThemeData._disabledColor"),
    _focusColor: dart.privateName(button_theme, "ButtonThemeData._focusColor"),
    _hoverColor: dart.privateName(button_theme, "ButtonThemeData._hoverColor"),
    _highlightColor: dart.privateName(button_theme, "ButtonThemeData._highlightColor"),
    _splashColor: dart.privateName(button_theme, "ButtonThemeData._splashColor"),
    colorScheme: dart.privateName(button_theme, "ButtonThemeData.colorScheme"),
    _materialTapTargetSize: dart.privateName(button_theme, "ButtonThemeData._materialTapTargetSize"),
    _padding$1: dart.privateName(button_theme, "_padding"),
    _shape$1: dart.privateName(button_theme, "_shape"),
    _buttonColor$1: dart.privateName(button_theme, "_buttonColor"),
    _disabledColor$1: dart.privateName(button_theme, "_disabledColor"),
    _focusColor$1: dart.privateName(button_theme, "_focusColor"),
    _hoverColor$1: dart.privateName(button_theme, "_hoverColor"),
    _highlightColor$1: dart.privateName(button_theme, "_highlightColor"),
    _splashColor$1: dart.privateName(button_theme, "_splashColor"),
    _materialTapTargetSize$1: dart.privateName(button_theme, "_materialTapTargetSize"),
    alignment$3: dart.privateName(button_bar_theme, "ButtonBarThemeData.alignment"),
    mainAxisSize: dart.privateName(button_bar_theme, "ButtonBarThemeData.mainAxisSize"),
    buttonTextTheme: dart.privateName(button_bar_theme, "ButtonBarThemeData.buttonTextTheme"),
    buttonMinWidth: dart.privateName(button_bar_theme, "ButtonBarThemeData.buttonMinWidth"),
    buttonHeight: dart.privateName(button_bar_theme, "ButtonBarThemeData.buttonHeight"),
    buttonPadding: dart.privateName(button_bar_theme, "ButtonBarThemeData.buttonPadding"),
    buttonAlignedDropdown: dart.privateName(button_bar_theme, "ButtonBarThemeData.buttonAlignedDropdown"),
    layoutBehavior$1: dart.privateName(button_bar_theme, "ButtonBarThemeData.layoutBehavior"),
    overflowDirection: dart.privateName(button_bar_theme, "ButtonBarThemeData.overflowDirection"),
    data$19: dart.privateName(button_bar_theme, "ButtonBarTheme.data"),
    height$6: dart.privateName(tooltip_theme, "TooltipThemeData.height"),
    padding$8: dart.privateName(tooltip_theme, "TooltipThemeData.padding"),
    margin$2: dart.privateName(tooltip_theme, "TooltipThemeData.margin"),
    verticalOffset: dart.privateName(tooltip_theme, "TooltipThemeData.verticalOffset"),
    preferBelow: dart.privateName(tooltip_theme, "TooltipThemeData.preferBelow"),
    excludeFromSemantics: dart.privateName(tooltip_theme, "TooltipThemeData.excludeFromSemantics"),
    decoration$3: dart.privateName(tooltip_theme, "TooltipThemeData.decoration"),
    textStyle$4: dart.privateName(tooltip_theme, "TooltipThemeData.textStyle"),
    textAlign$2: dart.privateName(tooltip_theme, "TooltipThemeData.textAlign"),
    waitDuration: dart.privateName(tooltip_theme, "TooltipThemeData.waitDuration"),
    showDuration: dart.privateName(tooltip_theme, "TooltipThemeData.showDuration"),
    triggerMode: dart.privateName(tooltip_theme, "TooltipThemeData.triggerMode"),
    enableFeedback$7: dart.privateName(tooltip_theme, "TooltipThemeData.enableFeedback"),
    data$20: dart.privateName(tooltip_theme, "TooltipTheme.data"),
    message$1: dart.privateName(tooltip, "Tooltip.message"),
    richMessage: dart.privateName(tooltip, "Tooltip.richMessage"),
    height$7: dart.privateName(tooltip, "Tooltip.height"),
    padding$9: dart.privateName(tooltip, "Tooltip.padding"),
    margin$3: dart.privateName(tooltip, "Tooltip.margin"),
    verticalOffset$1: dart.privateName(tooltip, "Tooltip.verticalOffset"),
    preferBelow$1: dart.privateName(tooltip, "Tooltip.preferBelow"),
    excludeFromSemantics$1: dart.privateName(tooltip, "Tooltip.excludeFromSemantics"),
    child$19: dart.privateName(tooltip, "Tooltip.child"),
    decoration$4: dart.privateName(tooltip, "Tooltip.decoration"),
    textStyle$5: dart.privateName(tooltip, "Tooltip.textStyle"),
    textAlign$3: dart.privateName(tooltip, "Tooltip.textAlign"),
    waitDuration$1: dart.privateName(tooltip, "Tooltip.waitDuration"),
    showDuration$1: dart.privateName(tooltip, "Tooltip.showDuration"),
    triggerMode$1: dart.privateName(tooltip, "Tooltip.triggerMode"),
    enableFeedback$8: dart.privateName(tooltip, "Tooltip.enableFeedback"),
    onTriggered: dart.privateName(tooltip, "Tooltip.onTriggered"),
    _concealTooltip: dart.privateName(tooltip, "_concealTooltip"),
    $last: dartx.last,
    _revealTooltip: dart.privateName(tooltip, "_revealTooltip"),
    _dismissTooltip: dart.privateName(tooltip, "_dismissTooltip"),
    __TooltipState__height: dart.privateName(tooltip, "_#TooltipState#_height"),
    __TooltipState__padding: dart.privateName(tooltip, "_#TooltipState#_padding"),
    __TooltipState__margin: dart.privateName(tooltip, "_#TooltipState#_margin"),
    __TooltipState__decoration: dart.privateName(tooltip, "_#TooltipState#_decoration"),
    __TooltipState__textStyle: dart.privateName(tooltip, "_#TooltipState#_textStyle"),
    __TooltipState__textAlign: dart.privateName(tooltip, "_#TooltipState#_textAlign"),
    __TooltipState__verticalOffset: dart.privateName(tooltip, "_#TooltipState#_verticalOffset"),
    __TooltipState__preferBelow: dart.privateName(tooltip, "_#TooltipState#_preferBelow"),
    __TooltipState__excludeFromSemantics: dart.privateName(tooltip, "_#TooltipState#_excludeFromSemantics"),
    __TooltipState__controller: dart.privateName(tooltip, "_#TooltipState#_controller"),
    _entry: dart.privateName(tooltip, "_entry"),
    _dismissTimer: dart.privateName(tooltip, "_dismissTimer"),
    _showTimer: dart.privateName(tooltip, "_showTimer"),
    __TooltipState__showDuration: dart.privateName(tooltip, "_#TooltipState#_showDuration"),
    __TooltipState__hoverShowDuration: dart.privateName(tooltip, "_#TooltipState#_hoverShowDuration"),
    __TooltipState__waitDuration: dart.privateName(tooltip, "_#TooltipState#_waitDuration"),
    __TooltipState__mouseIsConnected: dart.privateName(tooltip, "_#TooltipState#_mouseIsConnected"),
    _pressActivated: dart.privateName(tooltip, "_pressActivated"),
    __TooltipState__triggerMode: dart.privateName(tooltip, "_#TooltipState#_triggerMode"),
    __TooltipState__enableFeedback: dart.privateName(tooltip, "_#TooltipState#_enableFeedback"),
    __TooltipState__isConcealed: dart.privateName(tooltip, "_#TooltipState#_isConcealed"),
    __TooltipState__forceRemoval: dart.privateName(tooltip, "_#TooltipState#_forceRemoval"),
    __TooltipState__visible: dart.privateName(tooltip, "_#TooltipState#_visible"),
    _height$1: dart.privateName(tooltip, "_height"),
    _padding$2: dart.privateName(tooltip, "_padding"),
    _margin: dart.privateName(tooltip, "_margin"),
    _decoration$1: dart.privateName(tooltip, "_decoration"),
    _textStyle: dart.privateName(tooltip, "_textStyle"),
    _textAlign: dart.privateName(tooltip, "_textAlign"),
    _verticalOffset: dart.privateName(tooltip, "_verticalOffset"),
    _preferBelow: dart.privateName(tooltip, "_preferBelow"),
    _excludeFromSemantics: dart.privateName(tooltip, "_excludeFromSemantics"),
    _controller$4: dart.privateName(tooltip, "_controller"),
    _showDuration: dart.privateName(tooltip, "_showDuration"),
    _hoverShowDuration: dart.privateName(tooltip, "_hoverShowDuration"),
    _waitDuration: dart.privateName(tooltip, "_waitDuration"),
    _mouseIsConnected: dart.privateName(tooltip, "_mouseIsConnected"),
    _triggerMode: dart.privateName(tooltip, "_triggerMode"),
    _enableFeedback: dart.privateName(tooltip, "_enableFeedback"),
    _isConcealed: dart.privateName(tooltip, "_isConcealed"),
    _forceRemoval: dart.privateName(tooltip, "_forceRemoval"),
    _visible: dart.privateName(tooltip, "_visible"),
    _tooltipMessage: dart.privateName(tooltip, "_tooltipMessage"),
    _handleStatusChanged$1: dart.privateName(tooltip, "_handleStatusChanged"),
    _handleMouseTrackerChange: dart.privateName(tooltip, "_handleMouseTrackerChange"),
    _handlePointerEvent: dart.privateName(tooltip, "_handlePointerEvent"),
    _getDefaultTooltipHeight: dart.privateName(tooltip, "_getDefaultTooltipHeight"),
    _getDefaultPadding: dart.privateName(tooltip, "_getDefaultPadding"),
    _getDefaultFontSize: dart.privateName(tooltip, "_getDefaultFontSize"),
    _removeEntry: dart.privateName(tooltip, "_removeEntry"),
    _showTooltip: dart.privateName(tooltip, "_showTooltip"),
    _createNewEntry: dart.privateName(tooltip, "_createNewEntry"),
    _handleMouseEnter: dart.privateName(tooltip, "_handleMouseEnter"),
    _handleMouseExit: dart.privateName(tooltip, "_handleMouseExit"),
    $remove: dartx.remove,
    _handlePress: dart.privateName(tooltip, "_handlePress"),
    _handleTap$2: dart.privateName(tooltip, "_handleTap"),
    $isEmpty: dartx.isEmpty,
    richMessage$1: dart.privateName(tooltip, "_TooltipOverlay.richMessage"),
    height$8: dart.privateName(tooltip, "_TooltipOverlay.height"),
    padding$10: dart.privateName(tooltip, "_TooltipOverlay.padding"),
    margin$4: dart.privateName(tooltip, "_TooltipOverlay.margin"),
    decoration$5: dart.privateName(tooltip, "_TooltipOverlay.decoration"),
    textStyle$6: dart.privateName(tooltip, "_TooltipOverlay.textStyle"),
    textAlign$4: dart.privateName(tooltip, "_TooltipOverlay.textAlign"),
    animation$8: dart.privateName(tooltip, "_TooltipOverlay.animation"),
    target: dart.privateName(tooltip, "_TooltipOverlay.target"),
    verticalOffset$2: dart.privateName(tooltip, "_TooltipOverlay.verticalOffset"),
    preferBelow$2: dart.privateName(tooltip, "_TooltipOverlay.preferBelow"),
    onEnter: dart.privateName(tooltip, "_TooltipOverlay.onEnter"),
    onExit: dart.privateName(tooltip, "_TooltipOverlay.onExit"),
    items: dart.privateName(bottom_navigation_bar, "BottomNavigationBar.items"),
    onTap$2: dart.privateName(bottom_navigation_bar, "BottomNavigationBar.onTap"),
    currentIndex: dart.privateName(bottom_navigation_bar, "BottomNavigationBar.currentIndex"),
    elevation$16: dart.privateName(bottom_navigation_bar, "BottomNavigationBar.elevation"),
    type: dart.privateName(bottom_navigation_bar, "BottomNavigationBar.type"),
    backgroundColor$13: dart.privateName(bottom_navigation_bar, "BottomNavigationBar.backgroundColor"),
    iconSize$1: dart.privateName(bottom_navigation_bar, "BottomNavigationBar.iconSize"),
    selectedItemColor: dart.privateName(bottom_navigation_bar, "BottomNavigationBar.selectedItemColor"),
    unselectedItemColor: dart.privateName(bottom_navigation_bar, "BottomNavigationBar.unselectedItemColor"),
    selectedIconTheme$2: dart.privateName(bottom_navigation_bar, "BottomNavigationBar.selectedIconTheme"),
    unselectedIconTheme$2: dart.privateName(bottom_navigation_bar, "BottomNavigationBar.unselectedIconTheme"),
    selectedLabelStyle: dart.privateName(bottom_navigation_bar, "BottomNavigationBar.selectedLabelStyle"),
    unselectedLabelStyle$3: dart.privateName(bottom_navigation_bar, "BottomNavigationBar.unselectedLabelStyle"),
    selectedFontSize: dart.privateName(bottom_navigation_bar, "BottomNavigationBar.selectedFontSize"),
    unselectedFontSize: dart.privateName(bottom_navigation_bar, "BottomNavigationBar.unselectedFontSize"),
    showUnselectedLabels: dart.privateName(bottom_navigation_bar, "BottomNavigationBar.showUnselectedLabels"),
    showSelectedLabels: dart.privateName(bottom_navigation_bar, "BottomNavigationBar.showSelectedLabels"),
    mouseCursor$12: dart.privateName(bottom_navigation_bar, "BottomNavigationBar.mouseCursor"),
    enableFeedback$9: dart.privateName(bottom_navigation_bar, "BottomNavigationBar.enableFeedback"),
    landscapeLayout: dart.privateName(bottom_navigation_bar, "BottomNavigationBar.landscapeLayout"),
    $every: dartx.every,
    type$1: dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.type"),
    item: dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.item"),
    animation$9: dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.animation"),
    iconSize$2: dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.iconSize"),
    onTap$3: dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.onTap"),
    colorTween: dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.colorTween"),
    flex: dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.flex"),
    selected$1: dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.selected"),
    selectedIconTheme$3: dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.selectedIconTheme"),
    unselectedIconTheme$3: dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.unselectedIconTheme"),
    selectedLabelStyle$1: dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.selectedLabelStyle"),
    unselectedLabelStyle$4: dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.unselectedLabelStyle"),
    indexLabel: dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.indexLabel"),
    showSelectedLabels$1: dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.showSelectedLabels"),
    showUnselectedLabels$1: dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.showUnselectedLabels"),
    mouseCursor$13: dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.mouseCursor"),
    enableFeedback$10: dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.enableFeedback"),
    layout: dart.privateName(bottom_navigation_bar, "_BottomNavigationTile.layout"),
    layout$1: dart.privateName(bottom_navigation_bar, "_Tile.layout"),
    icon$8: dart.privateName(bottom_navigation_bar, "_Tile.icon"),
    label$8: dart.privateName(bottom_navigation_bar, "_Tile.label"),
    colorTween$1: dart.privateName(bottom_navigation_bar, "_TileIcon.colorTween"),
    animation$10: dart.privateName(bottom_navigation_bar, "_TileIcon.animation"),
    iconSize$3: dart.privateName(bottom_navigation_bar, "_TileIcon.iconSize"),
    selected$2: dart.privateName(bottom_navigation_bar, "_TileIcon.selected"),
    item$1: dart.privateName(bottom_navigation_bar, "_TileIcon.item"),
    selectedIconTheme$4: dart.privateName(bottom_navigation_bar, "_TileIcon.selectedIconTheme"),
    unselectedIconTheme$4: dart.privateName(bottom_navigation_bar, "_TileIcon.unselectedIconTheme"),
    colorTween$2: dart.privateName(bottom_navigation_bar, "_Label.colorTween"),
    animation$11: dart.privateName(bottom_navigation_bar, "_Label.animation"),
    item$2: dart.privateName(bottom_navigation_bar, "_Label.item"),
    selectedLabelStyle$2: dart.privateName(bottom_navigation_bar, "_Label.selectedLabelStyle"),
    unselectedLabelStyle$5: dart.privateName(bottom_navigation_bar, "_Label.unselectedLabelStyle"),
    showSelectedLabels$2: dart.privateName(bottom_navigation_bar, "_Label.showSelectedLabels"),
    showUnselectedLabels$2: dart.privateName(bottom_navigation_bar, "_Label.showUnselectedLabels"),
    _controllers: dart.privateName(bottom_navigation_bar, "_controllers"),
    ___BottomNavigationBarState__animations: dart.privateName(bottom_navigation_bar, "_#_BottomNavigationBarState#_animations"),
    _circles: dart.privateName(bottom_navigation_bar, "_circles"),
    _backgroundColor: dart.privateName(bottom_navigation_bar, "_backgroundColor"),
    _animations: dart.privateName(bottom_navigation_bar, "_animations"),
    _rebuild$1: dart.privateName(bottom_navigation_bar, "_rebuild"),
    _resetState$1: dart.privateName(bottom_navigation_bar, "_resetState"),
    _effectiveType: dart.privateName(bottom_navigation_bar, "_effectiveType"),
    _defaultShowUnselected: dart.privateName(bottom_navigation_bar, "_defaultShowUnselected"),
    _evaluateFlex: dart.privateName(bottom_navigation_bar, "_evaluateFlex"),
    _pushCircle: dart.privateName(bottom_navigation_bar, "_pushCircle"),
    TextStyle_overflow: dart.privateName(text_style, "TextStyle.overflow"),
    TextStyle_fontVariations: dart.privateName(text_style, "TextStyle.fontVariations"),
    TextStyle_fontFeatures: dart.privateName(text_style, "TextStyle.fontFeatures"),
    TextStyle_shadows: dart.privateName(text_style, "TextStyle.shadows"),
    TextStyle_debugLabel: dart.privateName(text_style, "TextStyle.debugLabel"),
    TextStyle_decorationThickness: dart.privateName(text_style, "TextStyle.decorationThickness"),
    TextStyle_decorationStyle: dart.privateName(text_style, "TextStyle.decorationStyle"),
    TextStyle_decorationColor: dart.privateName(text_style, "TextStyle.decorationColor"),
    TextStyle_decoration: dart.privateName(text_style, "TextStyle.decoration"),
    TextStyle_background: dart.privateName(text_style, "TextStyle.background"),
    TextStyle_foreground: dart.privateName(text_style, "TextStyle.foreground"),
    TextStyle_locale: dart.privateName(text_style, "TextStyle.locale"),
    TextStyle_leadingDistribution: dart.privateName(text_style, "TextStyle.leadingDistribution"),
    TextStyle_height: dart.privateName(text_style, "TextStyle.height"),
    TextStyle_textBaseline: dart.privateName(text_style, "TextStyle.textBaseline"),
    TextStyle_wordSpacing: dart.privateName(text_style, "TextStyle.wordSpacing"),
    TextStyle_letterSpacing: dart.privateName(text_style, "TextStyle.letterSpacing"),
    TextStyle_fontStyle: dart.privateName(text_style, "TextStyle.fontStyle"),
    TextStyle_fontWeight: dart.privateName(text_style, "TextStyle.fontWeight"),
    TextStyle_fontSize: dart.privateName(text_style, "TextStyle.fontSize"),
    TextStyle__package: dart.privateName(text_style, "TextStyle._package"),
    TextStyle__fontFamilyFallback: dart.privateName(text_style, "TextStyle._fontFamilyFallback"),
    TextStyle_fontFamily: dart.privateName(text_style, "TextStyle.fontFamily"),
    TextStyle_backgroundColor: dart.privateName(text_style, "TextStyle.backgroundColor"),
    TextStyle_color: dart.privateName(text_style, "TextStyle.color"),
    TextStyle_inherit: dart.privateName(text_style, "TextStyle.inherit"),
    _createTiles: dart.privateName(bottom_navigation_bar, "_createTiles"),
    child$20: dart.privateName(bottom_navigation_bar, "_Bar.child"),
    layout$2: dart.privateName(bottom_navigation_bar, "_Bar.layout"),
    elevation$17: dart.privateName(bottom_navigation_bar, "_Bar.elevation"),
    color$10: dart.privateName(bottom_navigation_bar, "_Bar.color"),
    ___Circle_controller: dart.privateName(bottom_navigation_bar, "_#_Circle#controller"),
    ___Circle_animation: dart.privateName(bottom_navigation_bar, "_#_Circle#animation"),
    $fold: dartx.fold,
    $sublist: dartx.sublist,
    backgroundColor$14: dart.privateName(bottom_navigation_bar_theme, "BottomNavigationBarThemeData.backgroundColor"),
    elevation$18: dart.privateName(bottom_navigation_bar_theme, "BottomNavigationBarThemeData.elevation"),
    selectedIconTheme$5: dart.privateName(bottom_navigation_bar_theme, "BottomNavigationBarThemeData.selectedIconTheme"),
    unselectedIconTheme$5: dart.privateName(bottom_navigation_bar_theme, "BottomNavigationBarThemeData.unselectedIconTheme"),
    selectedItemColor$1: dart.privateName(bottom_navigation_bar_theme, "BottomNavigationBarThemeData.selectedItemColor"),
    unselectedItemColor$1: dart.privateName(bottom_navigation_bar_theme, "BottomNavigationBarThemeData.unselectedItemColor"),
    selectedLabelStyle$3: dart.privateName(bottom_navigation_bar_theme, "BottomNavigationBarThemeData.selectedLabelStyle"),
    unselectedLabelStyle$6: dart.privateName(bottom_navigation_bar_theme, "BottomNavigationBarThemeData.unselectedLabelStyle"),
    showSelectedLabels$3: dart.privateName(bottom_navigation_bar_theme, "BottomNavigationBarThemeData.showSelectedLabels"),
    showUnselectedLabels$3: dart.privateName(bottom_navigation_bar_theme, "BottomNavigationBarThemeData.showUnselectedLabels"),
    type$2: dart.privateName(bottom_navigation_bar_theme, "BottomNavigationBarThemeData.type"),
    enableFeedback$11: dart.privateName(bottom_navigation_bar_theme, "BottomNavigationBarThemeData.enableFeedback"),
    landscapeLayout$1: dart.privateName(bottom_navigation_bar_theme, "BottomNavigationBarThemeData.landscapeLayout"),
    mouseCursor$14: dart.privateName(bottom_navigation_bar_theme, "BottomNavigationBarThemeData.mouseCursor"),
    data$21: dart.privateName(bottom_navigation_bar_theme, "BottomNavigationBarTheme.data"),
    color$11: dart.privateName(bottom_app_bar_theme, "BottomAppBarTheme.color"),
    elevation$19: dart.privateName(bottom_app_bar_theme, "BottomAppBarTheme.elevation"),
    shape$13: dart.privateName(bottom_app_bar_theme, "BottomAppBarTheme.shape"),
    applyElevationOverlayColor: dart.privateName(theme_data, "ThemeData.applyElevationOverlayColor"),
    cupertinoOverrideTheme: dart.privateName(theme_data, "ThemeData.cupertinoOverrideTheme"),
    extensions: dart.privateName(theme_data, "ThemeData.extensions"),
    inputDecorationTheme$1: dart.privateName(theme_data, "ThemeData.inputDecorationTheme"),
    materialTapTargetSize$6: dart.privateName(theme_data, "ThemeData.materialTapTargetSize"),
    pageTransitionsTheme: dart.privateName(theme_data, "ThemeData.pageTransitionsTheme"),
    platform: dart.privateName(theme_data, "ThemeData.platform"),
    scrollbarTheme: dart.privateName(theme_data, "ThemeData.scrollbarTheme"),
    splashFactory$3: dart.privateName(theme_data, "ThemeData.splashFactory"),
    useMaterial3: dart.privateName(theme_data, "ThemeData.useMaterial3"),
    visualDensity$7: dart.privateName(theme_data, "ThemeData.visualDensity"),
    backgroundColor$15: dart.privateName(theme_data, "ThemeData.backgroundColor"),
    bottomAppBarColor: dart.privateName(theme_data, "ThemeData.bottomAppBarColor"),
    canvasColor: dart.privateName(theme_data, "ThemeData.canvasColor"),
    cardColor: dart.privateName(theme_data, "ThemeData.cardColor"),
    colorScheme$1: dart.privateName(theme_data, "ThemeData.colorScheme"),
    dialogBackgroundColor: dart.privateName(theme_data, "ThemeData.dialogBackgroundColor"),
    disabledColor$4: dart.privateName(theme_data, "ThemeData.disabledColor"),
    dividerColor: dart.privateName(theme_data, "ThemeData.dividerColor"),
    errorColor: dart.privateName(theme_data, "ThemeData.errorColor"),
    focusColor$7: dart.privateName(theme_data, "ThemeData.focusColor"),
    highlightColor$4: dart.privateName(theme_data, "ThemeData.highlightColor"),
    hintColor: dart.privateName(theme_data, "ThemeData.hintColor"),
    hoverColor$8: dart.privateName(theme_data, "ThemeData.hoverColor"),
    indicatorColor$5: dart.privateName(theme_data, "ThemeData.indicatorColor"),
    primaryColor: dart.privateName(theme_data, "ThemeData.primaryColor"),
    primaryColorDark: dart.privateName(theme_data, "ThemeData.primaryColorDark"),
    primaryColorLight: dart.privateName(theme_data, "ThemeData.primaryColorLight"),
    scaffoldBackgroundColor: dart.privateName(theme_data, "ThemeData.scaffoldBackgroundColor"),
    secondaryHeaderColor: dart.privateName(theme_data, "ThemeData.secondaryHeaderColor"),
    selectedRowColor: dart.privateName(theme_data, "ThemeData.selectedRowColor"),
    shadowColor$3: dart.privateName(theme_data, "ThemeData.shadowColor"),
    splashColor$5: dart.privateName(theme_data, "ThemeData.splashColor"),
    toggleableActiveColor: dart.privateName(theme_data, "ThemeData.toggleableActiveColor"),
    unselectedWidgetColor: dart.privateName(theme_data, "ThemeData.unselectedWidgetColor"),
    iconTheme$2: dart.privateName(theme_data, "ThemeData.iconTheme"),
    primaryIconTheme: dart.privateName(theme_data, "ThemeData.primaryIconTheme"),
    primaryTextTheme: dart.privateName(theme_data, "ThemeData.primaryTextTheme"),
    textTheme$2: dart.privateName(theme_data, "ThemeData.textTheme"),
    typography: dart.privateName(theme_data, "ThemeData.typography"),
    appBarTheme: dart.privateName(theme_data, "ThemeData.appBarTheme"),
    bannerTheme: dart.privateName(theme_data, "ThemeData.bannerTheme"),
    bottomAppBarTheme: dart.privateName(theme_data, "ThemeData.bottomAppBarTheme"),
    bottomNavigationBarTheme: dart.privateName(theme_data, "ThemeData.bottomNavigationBarTheme"),
    bottomSheetTheme: dart.privateName(theme_data, "ThemeData.bottomSheetTheme"),
    buttonBarTheme: dart.privateName(theme_data, "ThemeData.buttonBarTheme"),
    buttonTheme: dart.privateName(theme_data, "ThemeData.buttonTheme"),
    cardTheme: dart.privateName(theme_data, "ThemeData.cardTheme"),
    checkboxTheme: dart.privateName(theme_data, "ThemeData.checkboxTheme"),
    chipTheme: dart.privateName(theme_data, "ThemeData.chipTheme"),
    dataTableTheme: dart.privateName(theme_data, "ThemeData.dataTableTheme"),
    dialogTheme: dart.privateName(theme_data, "ThemeData.dialogTheme"),
    dividerTheme: dart.privateName(theme_data, "ThemeData.dividerTheme"),
    drawerTheme: dart.privateName(theme_data, "ThemeData.drawerTheme"),
    elevatedButtonTheme: dart.privateName(theme_data, "ThemeData.elevatedButtonTheme"),
    expansionTileTheme: dart.privateName(theme_data, "ThemeData.expansionTileTheme"),
    floatingActionButtonTheme: dart.privateName(theme_data, "ThemeData.floatingActionButtonTheme"),
    listTileTheme: dart.privateName(theme_data, "ThemeData.listTileTheme"),
    navigationBarTheme: dart.privateName(theme_data, "ThemeData.navigationBarTheme"),
    navigationRailTheme: dart.privateName(theme_data, "ThemeData.navigationRailTheme"),
    outlinedButtonTheme: dart.privateName(theme_data, "ThemeData.outlinedButtonTheme"),
    popupMenuTheme: dart.privateName(theme_data, "ThemeData.popupMenuTheme"),
    progressIndicatorTheme: dart.privateName(theme_data, "ThemeData.progressIndicatorTheme"),
    radioTheme: dart.privateName(theme_data, "ThemeData.radioTheme"),
    sliderTheme: dart.privateName(theme_data, "ThemeData.sliderTheme"),
    snackBarTheme: dart.privateName(theme_data, "ThemeData.snackBarTheme"),
    switchTheme: dart.privateName(theme_data, "ThemeData.switchTheme"),
    tabBarTheme: dart.privateName(theme_data, "ThemeData.tabBarTheme"),
    textButtonTheme: dart.privateName(theme_data, "ThemeData.textButtonTheme"),
    textSelectionTheme: dart.privateName(theme_data, "ThemeData.textSelectionTheme"),
    timePickerTheme: dart.privateName(theme_data, "ThemeData.timePickerTheme"),
    toggleButtonsTheme: dart.privateName(theme_data, "ThemeData.toggleButtonsTheme"),
    tooltipTheme: dart.privateName(theme_data, "ThemeData.tooltipTheme"),
    _accentColor: dart.privateName(theme_data, "ThemeData._accentColor"),
    _accentColorBrightness: dart.privateName(theme_data, "ThemeData._accentColorBrightness"),
    _accentTextTheme: dart.privateName(theme_data, "ThemeData._accentTextTheme"),
    _accentIconTheme: dart.privateName(theme_data, "ThemeData._accentIconTheme"),
    _buttonColor$2: dart.privateName(theme_data, "ThemeData._buttonColor"),
    _fixTextFieldOutlineLabel: dart.privateName(theme_data, "ThemeData._fixTextFieldOutlineLabel"),
    _primaryColorBrightness: dart.privateName(theme_data, "ThemeData._primaryColorBrightness"),
    androidOverscrollIndicator: dart.privateName(theme_data, "ThemeData.androidOverscrollIndicator"),
    _accentColor$1: dart.privateName(theme_data, "_accentColor"),
    _accentColorBrightness$1: dart.privateName(theme_data, "_accentColorBrightness"),
    _accentTextTheme$1: dart.privateName(theme_data, "_accentTextTheme"),
    _accentIconTheme$1: dart.privateName(theme_data, "_accentIconTheme"),
    _buttonColor$3: dart.privateName(theme_data, "_buttonColor"),
    _fixTextFieldOutlineLabel$1: dart.privateName(theme_data, "_fixTextFieldOutlineLabel"),
    _primaryColorBrightness$1: dart.privateName(theme_data, "_primaryColorBrightness"),
    IconThemeData_shadows: dart.privateName(icon_theme_data, "IconThemeData.shadows"),
    IconThemeData_size: dart.privateName(icon_theme_data, "IconThemeData.size"),
    IconThemeData__opacity: dart.privateName(icon_theme_data, "IconThemeData._opacity"),
    IconThemeData_color: dart.privateName(icon_theme_data, "IconThemeData.color"),
    AppBarTheme_backwardsCompatibility: dart.privateName(app_bar_theme, "AppBarTheme.backwardsCompatibility"),
    AppBarTheme_systemOverlayStyle: dart.privateName(app_bar_theme, "AppBarTheme.systemOverlayStyle"),
    AppBarTheme_titleTextStyle: dart.privateName(app_bar_theme, "AppBarTheme.titleTextStyle"),
    AppBarTheme_toolbarTextStyle: dart.privateName(app_bar_theme, "AppBarTheme.toolbarTextStyle"),
    AppBarTheme_toolbarHeight: dart.privateName(app_bar_theme, "AppBarTheme.toolbarHeight"),
    AppBarTheme_titleSpacing: dart.privateName(app_bar_theme, "AppBarTheme.titleSpacing"),
    AppBarTheme_centerTitle: dart.privateName(app_bar_theme, "AppBarTheme.centerTitle"),
    AppBarTheme_textTheme: dart.privateName(app_bar_theme, "AppBarTheme.textTheme"),
    AppBarTheme_actionsIconTheme: dart.privateName(app_bar_theme, "AppBarTheme.actionsIconTheme"),
    AppBarTheme_iconTheme: dart.privateName(app_bar_theme, "AppBarTheme.iconTheme"),
    AppBarTheme_shape: dart.privateName(app_bar_theme, "AppBarTheme.shape"),
    AppBarTheme_surfaceTintColor: dart.privateName(app_bar_theme, "AppBarTheme.surfaceTintColor"),
    AppBarTheme_shadowColor: dart.privateName(app_bar_theme, "AppBarTheme.shadowColor"),
    AppBarTheme_scrolledUnderElevation: dart.privateName(app_bar_theme, "AppBarTheme.scrolledUnderElevation"),
    AppBarTheme_elevation: dart.privateName(app_bar_theme, "AppBarTheme.elevation"),
    AppBarTheme_foregroundColor: dart.privateName(app_bar_theme, "AppBarTheme.foregroundColor"),
    AppBarTheme_backgroundColor: dart.privateName(app_bar_theme, "AppBarTheme.backgroundColor"),
    AppBarTheme_brightness: dart.privateName(app_bar_theme, "AppBarTheme.brightness"),
    MaterialBannerThemeData_leadingPadding: dart.privateName(banner_theme, "MaterialBannerThemeData.leadingPadding"),
    MaterialBannerThemeData_padding: dart.privateName(banner_theme, "MaterialBannerThemeData.padding"),
    MaterialBannerThemeData_elevation: dart.privateName(banner_theme, "MaterialBannerThemeData.elevation"),
    MaterialBannerThemeData_contentTextStyle: dart.privateName(banner_theme, "MaterialBannerThemeData.contentTextStyle"),
    MaterialBannerThemeData_backgroundColor: dart.privateName(banner_theme, "MaterialBannerThemeData.backgroundColor"),
    BottomSheetThemeData_constraints: dart.privateName(bottom_sheet_theme, "BottomSheetThemeData.constraints"),
    BottomSheetThemeData_clipBehavior: dart.privateName(bottom_sheet_theme, "BottomSheetThemeData.clipBehavior"),
    BottomSheetThemeData_shape: dart.privateName(bottom_sheet_theme, "BottomSheetThemeData.shape"),
    BottomSheetThemeData_modalElevation: dart.privateName(bottom_sheet_theme, "BottomSheetThemeData.modalElevation"),
    BottomSheetThemeData_modalBackgroundColor: dart.privateName(bottom_sheet_theme, "BottomSheetThemeData.modalBackgroundColor"),
    BottomSheetThemeData_elevation: dart.privateName(bottom_sheet_theme, "BottomSheetThemeData.elevation"),
    BottomSheetThemeData_backgroundColor: dart.privateName(bottom_sheet_theme, "BottomSheetThemeData.backgroundColor"),
    DividerThemeData_endIndent: dart.privateName(divider_theme, "DividerThemeData.endIndent"),
    DividerThemeData_indent: dart.privateName(divider_theme, "DividerThemeData.indent"),
    DividerThemeData_thickness: dart.privateName(divider_theme, "DividerThemeData.thickness"),
    DividerThemeData_space: dart.privateName(divider_theme, "DividerThemeData.space"),
    DividerThemeData_color: dart.privateName(divider_theme, "DividerThemeData.color"),
    DrawerThemeData_width: dart.privateName(drawer_theme, "DrawerThemeData.width"),
    DrawerThemeData_shape: dart.privateName(drawer_theme, "DrawerThemeData.shape"),
    DrawerThemeData_elevation: dart.privateName(drawer_theme, "DrawerThemeData.elevation"),
    DrawerThemeData_scrimColor: dart.privateName(drawer_theme, "DrawerThemeData.scrimColor"),
    DrawerThemeData_backgroundColor: dart.privateName(drawer_theme, "DrawerThemeData.backgroundColor"),
    FloatingActionButtonThemeData_extendedTextStyle: dart.privateName(floating_action_button_theme, "FloatingActionButtonThemeData.extendedTextStyle"),
    FloatingActionButtonThemeData_extendedPadding: dart.privateName(floating_action_button_theme, "FloatingActionButtonThemeData.extendedPadding"),
    FloatingActionButtonThemeData_extendedIconLabelSpacing: dart.privateName(floating_action_button_theme, "FloatingActionButtonThemeData.extendedIconLabelSpacing"),
    FloatingActionButtonThemeData_extendedSizeConstraints: dart.privateName(floating_action_button_theme, "FloatingActionButtonThemeData.extendedSizeConstraints")
  };
  var S$1 = {
    FloatingActionButtonThemeData_largeSizeConstraints: dart.privateName(floating_action_button_theme, "FloatingActionButtonThemeData.largeSizeConstraints"),
    FloatingActionButtonThemeData_smallSizeConstraints: dart.privateName(floating_action_button_theme, "FloatingActionButtonThemeData.smallSizeConstraints"),
    FloatingActionButtonThemeData_sizeConstraints: dart.privateName(floating_action_button_theme, "FloatingActionButtonThemeData.sizeConstraints"),
    FloatingActionButtonThemeData_iconSize: dart.privateName(floating_action_button_theme, "FloatingActionButtonThemeData.iconSize"),
    FloatingActionButtonThemeData_enableFeedback: dart.privateName(floating_action_button_theme, "FloatingActionButtonThemeData.enableFeedback"),
    FloatingActionButtonThemeData_shape: dart.privateName(floating_action_button_theme, "FloatingActionButtonThemeData.shape"),
    FloatingActionButtonThemeData_highlightElevation: dart.privateName(floating_action_button_theme, "FloatingActionButtonThemeData.highlightElevation"),
    FloatingActionButtonThemeData_disabledElevation: dart.privateName(floating_action_button_theme, "FloatingActionButtonThemeData.disabledElevation"),
    FloatingActionButtonThemeData_hoverElevation: dart.privateName(floating_action_button_theme, "FloatingActionButtonThemeData.hoverElevation"),
    FloatingActionButtonThemeData_focusElevation: dart.privateName(floating_action_button_theme, "FloatingActionButtonThemeData.focusElevation"),
    FloatingActionButtonThemeData_elevation: dart.privateName(floating_action_button_theme, "FloatingActionButtonThemeData.elevation"),
    FloatingActionButtonThemeData_splashColor: dart.privateName(floating_action_button_theme, "FloatingActionButtonThemeData.splashColor"),
    FloatingActionButtonThemeData_hoverColor: dart.privateName(floating_action_button_theme, "FloatingActionButtonThemeData.hoverColor"),
    FloatingActionButtonThemeData_focusColor: dart.privateName(floating_action_button_theme, "FloatingActionButtonThemeData.focusColor"),
    FloatingActionButtonThemeData_backgroundColor: dart.privateName(floating_action_button_theme, "FloatingActionButtonThemeData.backgroundColor"),
    FloatingActionButtonThemeData_foregroundColor: dart.privateName(floating_action_button_theme, "FloatingActionButtonThemeData.foregroundColor"),
    ListTileThemeData_visualDensity: dart.privateName(list_tile_theme, "ListTileThemeData.visualDensity"),
    ListTileThemeData_mouseCursor: dart.privateName(list_tile_theme, "ListTileThemeData.mouseCursor"),
    ListTileThemeData_enableFeedback: dart.privateName(list_tile_theme, "ListTileThemeData.enableFeedback"),
    ListTileThemeData_minLeadingWidth: dart.privateName(list_tile_theme, "ListTileThemeData.minLeadingWidth"),
    ListTileThemeData_minVerticalPadding: dart.privateName(list_tile_theme, "ListTileThemeData.minVerticalPadding"),
    ListTileThemeData_horizontalTitleGap: dart.privateName(list_tile_theme, "ListTileThemeData.horizontalTitleGap"),
    ListTileThemeData_selectedTileColor: dart.privateName(list_tile_theme, "ListTileThemeData.selectedTileColor"),
    ListTileThemeData_tileColor: dart.privateName(list_tile_theme, "ListTileThemeData.tileColor"),
    ListTileThemeData_contentPadding: dart.privateName(list_tile_theme, "ListTileThemeData.contentPadding"),
    ListTileThemeData_textColor: dart.privateName(list_tile_theme, "ListTileThemeData.textColor"),
    ListTileThemeData_iconColor: dart.privateName(list_tile_theme, "ListTileThemeData.iconColor"),
    ListTileThemeData_selectedColor: dart.privateName(list_tile_theme, "ListTileThemeData.selectedColor"),
    ListTileThemeData_style: dart.privateName(list_tile_theme, "ListTileThemeData.style"),
    ListTileThemeData_shape: dart.privateName(list_tile_theme, "ListTileThemeData.shape"),
    ListTileThemeData_dense: dart.privateName(list_tile_theme, "ListTileThemeData.dense"),
    $entries: dartx.entries,
    $containsKey: dartx.containsKey,
    $where: dartx.where,
    $addEntries: dartx.addEntries,
    $keys: dartx.keys,
    $values: dartx.values,
    NoDefaultCupertinoThemeData_scaffoldBackgroundColor: dart.privateName(theme, "NoDefaultCupertinoThemeData.scaffoldBackgroundColor"),
    NoDefaultCupertinoThemeData_barBackgroundColor: dart.privateName(theme, "NoDefaultCupertinoThemeData.barBackgroundColor"),
    NoDefaultCupertinoThemeData_textTheme: dart.privateName(theme, "NoDefaultCupertinoThemeData.textTheme"),
    NoDefaultCupertinoThemeData_primaryContrastingColor: dart.privateName(theme, "NoDefaultCupertinoThemeData.primaryContrastingColor"),
    NoDefaultCupertinoThemeData_primaryColor: dart.privateName(theme, "NoDefaultCupertinoThemeData.primaryColor"),
    NoDefaultCupertinoThemeData_brightness: dart.privateName(theme, "NoDefaultCupertinoThemeData.brightness"),
    CupertinoDynamicColor_darkHighContrastElevatedColor: dart.privateName(colors$0, "CupertinoDynamicColor.darkHighContrastElevatedColor"),
    CupertinoDynamicColor_highContrastElevatedColor: dart.privateName(colors$0, "CupertinoDynamicColor.highContrastElevatedColor"),
    CupertinoDynamicColor_darkElevatedColor: dart.privateName(colors$0, "CupertinoDynamicColor.darkElevatedColor"),
    CupertinoDynamicColor_elevatedColor: dart.privateName(colors$0, "CupertinoDynamicColor.elevatedColor"),
    CupertinoDynamicColor_darkHighContrastColor: dart.privateName(colors$0, "CupertinoDynamicColor.darkHighContrastColor"),
    CupertinoDynamicColor_highContrastColor: dart.privateName(colors$0, "CupertinoDynamicColor.highContrastColor"),
    CupertinoDynamicColor_darkColor: dart.privateName(colors$0, "CupertinoDynamicColor.darkColor"),
    CupertinoDynamicColor_color: dart.privateName(colors$0, "CupertinoDynamicColor.color"),
    CupertinoDynamicColor__debugResolveContext: dart.privateName(colors$0, "CupertinoDynamicColor._debugResolveContext"),
    CupertinoDynamicColor__debugLabel: dart.privateName(colors$0, "CupertinoDynamicColor._debugLabel"),
    CupertinoDynamicColor__effectiveColor: dart.privateName(colors$0, "CupertinoDynamicColor._effectiveColor"),
    _CupertinoTextThemeDefaults_inactiveGray: dart.privateName(theme, "_CupertinoTextThemeDefaults.inactiveGray"),
    _CupertinoTextThemeDefaults_labelColor: dart.privateName(theme, "_CupertinoTextThemeDefaults.labelColor"),
    _CupertinoThemeDefaults_textThemeDefaults: dart.privateName(theme, "_CupertinoThemeDefaults.textThemeDefaults"),
    _CupertinoThemeDefaults_scaffoldBackgroundColor: dart.privateName(theme, "_CupertinoThemeDefaults.scaffoldBackgroundColor"),
    _CupertinoThemeDefaults_barBackgroundColor: dart.privateName(theme, "_CupertinoThemeDefaults.barBackgroundColor"),
    _CupertinoThemeDefaults_primaryContrastingColor: dart.privateName(theme, "_CupertinoThemeDefaults.primaryContrastingColor"),
    _CupertinoThemeDefaults_primaryColor: dart.privateName(theme, "_CupertinoThemeDefaults.primaryColor"),
    _CupertinoThemeDefaults_brightness: dart.privateName(theme, "_CupertinoThemeDefaults.brightness"),
    CupertinoThemeData__defaults: dart.privateName(theme, "CupertinoThemeData._defaults"),
    _materialTheme: dart.privateName(theme_data, "_materialTheme"),
    _cupertinoOverrideTheme: dart.privateName(theme_data, "_cupertinoOverrideTheme"),
    baseTheme: dart.privateName(theme_data, "_IdentityThemeDataCacheKey.baseTheme"),
    localTextGeometry: dart.privateName(theme_data, "_IdentityThemeDataCacheKey.localTextGeometry"),
    _cache: dart.privateName(theme_data, "_cache"),
    _maximumSize: dart.privateName(theme_data, "_maximumSize"),
    $first: dartx.first,
    horizontal: dart.privateName(theme_data, "VisualDensity.horizontal"),
    vertical: dart.privateName(theme_data, "VisualDensity.vertical"),
    dense: dart.privateName(list_tile_theme, "ListTileThemeData.dense"),
    shape$14: dart.privateName(list_tile_theme, "ListTileThemeData.shape"),
    style$7: dart.privateName(list_tile_theme, "ListTileThemeData.style"),
    selectedColor$3: dart.privateName(list_tile_theme, "ListTileThemeData.selectedColor"),
    iconColor$4: dart.privateName(list_tile_theme, "ListTileThemeData.iconColor"),
    textColor$3: dart.privateName(list_tile_theme, "ListTileThemeData.textColor"),
    contentPadding$3: dart.privateName(list_tile_theme, "ListTileThemeData.contentPadding"),
    tileColor: dart.privateName(list_tile_theme, "ListTileThemeData.tileColor"),
    selectedTileColor: dart.privateName(list_tile_theme, "ListTileThemeData.selectedTileColor"),
    horizontalTitleGap: dart.privateName(list_tile_theme, "ListTileThemeData.horizontalTitleGap"),
    minVerticalPadding: dart.privateName(list_tile_theme, "ListTileThemeData.minVerticalPadding"),
    minLeadingWidth: dart.privateName(list_tile_theme, "ListTileThemeData.minLeadingWidth"),
    enableFeedback$12: dart.privateName(list_tile_theme, "ListTileThemeData.enableFeedback"),
    mouseCursor$15: dart.privateName(list_tile_theme, "ListTileThemeData.mouseCursor"),
    visualDensity$8: dart.privateName(list_tile_theme, "ListTileThemeData.visualDensity"),
    _data: dart.privateName(list_tile_theme, "ListTileTheme._data"),
    _dense: dart.privateName(list_tile_theme, "ListTileTheme._dense"),
    _shape$2: dart.privateName(list_tile_theme, "ListTileTheme._shape"),
    _style: dart.privateName(list_tile_theme, "ListTileTheme._style"),
    _selectedColor: dart.privateName(list_tile_theme, "ListTileTheme._selectedColor"),
    _iconColor: dart.privateName(list_tile_theme, "ListTileTheme._iconColor"),
    _textColor: dart.privateName(list_tile_theme, "ListTileTheme._textColor"),
    _contentPadding: dart.privateName(list_tile_theme, "ListTileTheme._contentPadding"),
    _tileColor: dart.privateName(list_tile_theme, "ListTileTheme._tileColor"),
    _selectedTileColor: dart.privateName(list_tile_theme, "ListTileTheme._selectedTileColor"),
    _horizontalTitleGap: dart.privateName(list_tile_theme, "ListTileTheme._horizontalTitleGap"),
    _minVerticalPadding: dart.privateName(list_tile_theme, "ListTileTheme._minVerticalPadding"),
    _minLeadingWidth: dart.privateName(list_tile_theme, "ListTileTheme._minLeadingWidth"),
    _enableFeedback$1: dart.privateName(list_tile_theme, "ListTileTheme._enableFeedback"),
    _mouseCursor: dart.privateName(list_tile_theme, "ListTileTheme._mouseCursor"),
    _data$1: dart.privateName(list_tile_theme, "_data"),
    _dense$1: dart.privateName(list_tile_theme, "_dense"),
    _shape$3: dart.privateName(list_tile_theme, "_shape"),
    _style$1: dart.privateName(list_tile_theme, "_style"),
    _selectedColor$1: dart.privateName(list_tile_theme, "_selectedColor"),
    _iconColor$1: dart.privateName(list_tile_theme, "_iconColor"),
    _textColor$1: dart.privateName(list_tile_theme, "_textColor"),
    _contentPadding$1: dart.privateName(list_tile_theme, "_contentPadding"),
    _tileColor$1: dart.privateName(list_tile_theme, "_tileColor"),
    _selectedTileColor$1: dart.privateName(list_tile_theme, "_selectedTileColor"),
    _horizontalTitleGap$1: dart.privateName(list_tile_theme, "_horizontalTitleGap"),
    _minVerticalPadding$1: dart.privateName(list_tile_theme, "_minVerticalPadding"),
    _minLeadingWidth$1: dart.privateName(list_tile_theme, "_minLeadingWidth"),
    _enableFeedback$2: dart.privateName(list_tile_theme, "_enableFeedback"),
    _mouseCursor$1: dart.privateName(list_tile_theme, "_mouseCursor"),
    __InkHighlight__alpha: dart.privateName(ink_highlight, "_#InkHighlight#_alpha"),
    __InkHighlight__alphaController: dart.privateName(ink_highlight, "_#InkHighlight#_alphaController"),
    _active: dart.privateName(ink_highlight, "_active"),
    _shape$4: dart.privateName(ink_highlight, "_shape"),
    _radius$2: dart.privateName(ink_highlight, "_radius"),
    _borderRadius$3: dart.privateName(ink_highlight, "_borderRadius"),
    _customBorder$3: dart.privateName(ink_highlight, "_customBorder"),
    _textDirection$4: dart.privateName(ink_highlight, "_textDirection"),
    _rectCallback: dart.privateName(ink_highlight, "_rectCallback"),
    _alphaController$1: dart.privateName(ink_highlight, "_alphaController"),
    _handleAlphaStatusChanged$2: dart.privateName(ink_highlight, "_handleAlphaStatusChanged"),
    _alpha$2: dart.privateName(ink_highlight, "_alpha"),
    _paintHighlight: dart.privateName(ink_highlight, "_paintHighlight"),
    SemanticsEvent_type: dart.privateName(semantics_event, "SemanticsEvent.type"),
    state: dart.privateName(ink_well, "_ParentInkResponseProvider.state"),
    child$21: dart.privateName(ink_well, "InkResponse.child"),
    onTap$4: dart.privateName(ink_well, "InkResponse.onTap"),
    onTapDown: dart.privateName(ink_well, "InkResponse.onTapDown"),
    onTapUp: dart.privateName(ink_well, "InkResponse.onTapUp"),
    onTapCancel: dart.privateName(ink_well, "InkResponse.onTapCancel"),
    onDoubleTap: dart.privateName(ink_well, "InkResponse.onDoubleTap"),
    onLongPress$3: dart.privateName(ink_well, "InkResponse.onLongPress"),
    onHighlightChanged$2: dart.privateName(ink_well, "InkResponse.onHighlightChanged"),
    onHover$1: dart.privateName(ink_well, "InkResponse.onHover"),
    mouseCursor$16: dart.privateName(ink_well, "InkResponse.mouseCursor"),
    containedInkWell: dart.privateName(ink_well, "InkResponse.containedInkWell"),
    highlightShape: dart.privateName(ink_well, "InkResponse.highlightShape"),
    radius$1: dart.privateName(ink_well, "InkResponse.radius"),
    borderRadius$2: dart.privateName(ink_well, "InkResponse.borderRadius"),
    customBorder: dart.privateName(ink_well, "InkResponse.customBorder"),
    focusColor$8: dart.privateName(ink_well, "InkResponse.focusColor"),
    hoverColor$9: dart.privateName(ink_well, "InkResponse.hoverColor"),
    highlightColor$5: dart.privateName(ink_well, "InkResponse.highlightColor"),
    overlayColor$7: dart.privateName(ink_well, "InkResponse.overlayColor"),
    splashColor$6: dart.privateName(ink_well, "InkResponse.splashColor"),
    splashFactory$4: dart.privateName(ink_well, "InkResponse.splashFactory"),
    enableFeedback$13: dart.privateName(ink_well, "InkResponse.enableFeedback"),
    excludeFromSemantics$2: dart.privateName(ink_well, "InkResponse.excludeFromSemantics"),
    onFocusChange$1: dart.privateName(ink_well, "InkResponse.onFocusChange"),
    autofocus$6: dart.privateName(ink_well, "InkResponse.autofocus"),
    focusNode$6: dart.privateName(ink_well, "InkResponse.focusNode"),
    canRequestFocus: dart.privateName(ink_well, "InkResponse.canRequestFocus"),
    statesController$1: dart.privateName(ink_well, "InkResponse.statesController"),
    child$22: dart.privateName(ink_well, "_InkResponseStateWidget.child"),
    onTap$5: dart.privateName(ink_well, "_InkResponseStateWidget.onTap"),
    onTapDown$1: dart.privateName(ink_well, "_InkResponseStateWidget.onTapDown"),
    onTapUp$1: dart.privateName(ink_well, "_InkResponseStateWidget.onTapUp"),
    onTapCancel$1: dart.privateName(ink_well, "_InkResponseStateWidget.onTapCancel"),
    onDoubleTap$1: dart.privateName(ink_well, "_InkResponseStateWidget.onDoubleTap"),
    onLongPress$4: dart.privateName(ink_well, "_InkResponseStateWidget.onLongPress"),
    onHighlightChanged$3: dart.privateName(ink_well, "_InkResponseStateWidget.onHighlightChanged"),
    onHover$2: dart.privateName(ink_well, "_InkResponseStateWidget.onHover"),
    mouseCursor$17: dart.privateName(ink_well, "_InkResponseStateWidget.mouseCursor"),
    containedInkWell$1: dart.privateName(ink_well, "_InkResponseStateWidget.containedInkWell"),
    highlightShape$1: dart.privateName(ink_well, "_InkResponseStateWidget.highlightShape"),
    radius$2: dart.privateName(ink_well, "_InkResponseStateWidget.radius"),
    borderRadius$3: dart.privateName(ink_well, "_InkResponseStateWidget.borderRadius"),
    customBorder$1: dart.privateName(ink_well, "_InkResponseStateWidget.customBorder"),
    focusColor$9: dart.privateName(ink_well, "_InkResponseStateWidget.focusColor"),
    hoverColor$10: dart.privateName(ink_well, "_InkResponseStateWidget.hoverColor"),
    highlightColor$6: dart.privateName(ink_well, "_InkResponseStateWidget.highlightColor"),
    overlayColor$8: dart.privateName(ink_well, "_InkResponseStateWidget.overlayColor"),
    splashColor$7: dart.privateName(ink_well, "_InkResponseStateWidget.splashColor"),
    splashFactory$5: dart.privateName(ink_well, "_InkResponseStateWidget.splashFactory"),
    enableFeedback$14: dart.privateName(ink_well, "_InkResponseStateWidget.enableFeedback"),
    excludeFromSemantics$3: dart.privateName(ink_well, "_InkResponseStateWidget.excludeFromSemantics"),
    onFocusChange$2: dart.privateName(ink_well, "_InkResponseStateWidget.onFocusChange"),
    autofocus$7: dart.privateName(ink_well, "_InkResponseStateWidget.autofocus"),
    focusNode$7: dart.privateName(ink_well, "_InkResponseStateWidget.focusNode"),
    canRequestFocus$1: dart.privateName(ink_well, "_InkResponseStateWidget.canRequestFocus"),
    parentState: dart.privateName(ink_well, "_InkResponseStateWidget.parentState"),
    getRectCallback: dart.privateName(ink_well, "_InkResponseStateWidget.getRectCallback"),
    debugCheckContext: dart.privateName(ink_well, "_InkResponseStateWidget.debugCheckContext"),
    statesController$2: dart.privateName(ink_well, "_InkResponseStateWidget.statesController"),
    _splashes: dart.privateName(ink_well, "_splashes"),
    _currentSplash: dart.privateName(ink_well, "_currentSplash"),
    _hovering: dart.privateName(ink_well, "_hovering"),
    _highlights: dart.privateName(ink_well, "_highlights"),
    ___InkResponseState__actionMap: dart.privateName(ink_well, "_#_InkResponseState#_actionMap"),
    _activeChildren: dart.privateName(ink_well, "_activeChildren"),
    _hasFocus: dart.privateName(ink_well, "_hasFocus"),
    _actionMap: dart.privateName(ink_well, "_actionMap"),
    _anyChildInkResponsePressed: dart.privateName(ink_well, "_anyChildInkResponsePressed"),
    _startNewSplash: dart.privateName(ink_well, "_startNewSplash"),
    _createInkFeature: dart.privateName(ink_well, "_createInkFeature"),
    _shouldShowFocus: dart.privateName(ink_well, "_shouldShowFocus"),
    _canRequestFocus: dart.privateName(ink_well, "_canRequestFocus"),
    child$23: dart.privateName(ink_decoration, "Ink.child"),
    padding$11: dart.privateName(ink_decoration, "Ink.padding"),
    decoration$6: dart.privateName(ink_decoration, "Ink.decoration"),
    width$2: dart.privateName(ink_decoration, "Ink.width"),
    height$9: dart.privateName(ink_decoration, "Ink.height"),
    _paddingIncludingDecoration: dart.privateName(ink_decoration, "_paddingIncludingDecoration"),
    _boxKey: dart.privateName(ink_decoration, "_boxKey"),
    _ink: dart.privateName(ink_decoration, "_ink"),
    _handleRemoved: dart.privateName(ink_decoration, "_handleRemoved"),
    _build: dart.privateName(ink_decoration, "_build"),
    _painter$1: dart.privateName(ink_decoration, "_painter"),
    _decoration$2: dart.privateName(ink_decoration, "_decoration"),
    _configuration: dart.privateName(ink_decoration, "_configuration"),
    _handleChanged: dart.privateName(ink_decoration, "_handleChanged"),
    leading$1: dart.privateName(list_tile, "ListTile.leading"),
    title$1: dart.privateName(list_tile, "ListTile.title"),
    subtitle: dart.privateName(list_tile, "ListTile.subtitle"),
    trailing$1: dart.privateName(list_tile, "ListTile.trailing"),
    isThreeLine: dart.privateName(list_tile, "ListTile.isThreeLine"),
    dense$1: dart.privateName(list_tile, "ListTile.dense"),
    visualDensity$9: dart.privateName(list_tile, "ListTile.visualDensity"),
    shape$15: dart.privateName(list_tile, "ListTile.shape"),
    selectedColor$4: dart.privateName(list_tile, "ListTile.selectedColor"),
    iconColor$5: dart.privateName(list_tile, "ListTile.iconColor"),
    textColor$4: dart.privateName(list_tile, "ListTile.textColor"),
    style$8: dart.privateName(list_tile, "ListTile.style"),
    contentPadding$4: dart.privateName(list_tile, "ListTile.contentPadding"),
    enabled$1: dart.privateName(list_tile, "ListTile.enabled"),
    onTap$6: dart.privateName(list_tile, "ListTile.onTap"),
    onLongPress$5: dart.privateName(list_tile, "ListTile.onLongPress"),
    mouseCursor$18: dart.privateName(list_tile, "ListTile.mouseCursor"),
    selected$3: dart.privateName(list_tile, "ListTile.selected"),
    focusColor$10: dart.privateName(list_tile, "ListTile.focusColor"),
    hoverColor$11: dart.privateName(list_tile, "ListTile.hoverColor"),
    focusNode$8: dart.privateName(list_tile, "ListTile.focusNode"),
    autofocus$8: dart.privateName(list_tile, "ListTile.autofocus"),
    tileColor$1: dart.privateName(list_tile, "ListTile.tileColor"),
    selectedTileColor$1: dart.privateName(list_tile, "ListTile.selectedTileColor"),
    enableFeedback$15: dart.privateName(list_tile, "ListTile.enableFeedback"),
    horizontalTitleGap$1: dart.privateName(list_tile, "ListTile.horizontalTitleGap"),
    minVerticalPadding$1: dart.privateName(list_tile, "ListTile.minVerticalPadding"),
    minLeadingWidth$1: dart.privateName(list_tile, "ListTile.minLeadingWidth"),
    $take: dartx.take,
    _iconColor$2: dart.privateName(list_tile, "_iconColor"),
    _textColor$2: dart.privateName(list_tile, "_textColor"),
    _isDenseLayout: dart.privateName(list_tile, "_isDenseLayout"),
    _titleTextStyle: dart.privateName(list_tile, "_titleTextStyle"),
    _subtitleTextStyle: dart.privateName(list_tile, "_subtitleTextStyle"),
    _trailingAndLeadingTextStyle: dart.privateName(list_tile, "_trailingAndLeadingTextStyle"),
    _tileBackgroundColor: dart.privateName(list_tile, "_tileBackgroundColor"),
    Border_left: dart.privateName(box_border, "Border.left"),
    Border_bottom: dart.privateName(box_border, "Border.bottom"),
    Border_right: dart.privateName(box_border, "Border.right"),
    Border_top: dart.privateName(box_border, "Border.top"),
    leading$2: dart.privateName(list_tile, "_ListTile.leading"),
    title$2: dart.privateName(list_tile, "_ListTile.title"),
    subtitle$1: dart.privateName(list_tile, "_ListTile.subtitle"),
    trailing$2: dart.privateName(list_tile, "_ListTile.trailing"),
    isThreeLine$1: dart.privateName(list_tile, "_ListTile.isThreeLine"),
    isDense$3: dart.privateName(list_tile, "_ListTile.isDense"),
    visualDensity$10: dart.privateName(list_tile, "_ListTile.visualDensity"),
    textDirection$1: dart.privateName(list_tile, "_ListTile.textDirection"),
    titleBaselineType: dart.privateName(list_tile, "_ListTile.titleBaselineType"),
    subtitleBaselineType: dart.privateName(list_tile, "_ListTile.subtitleBaselineType"),
    horizontalTitleGap$2: dart.privateName(list_tile, "_ListTile.horizontalTitleGap"),
    minVerticalPadding$2: dart.privateName(list_tile, "_ListTile.minVerticalPadding"),
    minLeadingWidth$2: dart.privateName(list_tile, "_ListTile.minLeadingWidth"),
    _isDense: dart.privateName(list_tile, "_isDense"),
    _visualDensity: dart.privateName(list_tile, "_visualDensity"),
    _isThreeLine: dart.privateName(list_tile, "_isThreeLine"),
    _textDirection$5: dart.privateName(list_tile, "_textDirection"),
    _titleBaselineType: dart.privateName(list_tile, "_titleBaselineType"),
    _subtitleBaselineType: dart.privateName(list_tile, "_subtitleBaselineType"),
    _horizontalTitleGap$2: dart.privateName(list_tile, "_horizontalTitleGap"),
    _minVerticalPadding$2: dart.privateName(list_tile, "_minVerticalPadding"),
    _minLeadingWidth$2: dart.privateName(list_tile, "_minLeadingWidth"),
    _effectiveHorizontalTitleGap: dart.privateName(list_tile, "_effectiveHorizontalTitleGap"),
    _defaultTileHeight: dart.privateName(list_tile, "_defaultTileHeight"),
    backgroundColor$16: dart.privateName(drawer_theme, "DrawerThemeData.backgroundColor"),
    scrimColor: dart.privateName(drawer_theme, "DrawerThemeData.scrimColor"),
    elevation$20: dart.privateName(drawer_theme, "DrawerThemeData.elevation"),
    shape$16: dart.privateName(drawer_theme, "DrawerThemeData.shape"),
    width$3: dart.privateName(drawer_theme, "DrawerThemeData.width"),
    data$22: dart.privateName(drawer_theme, "DrawerTheme.data"),
    backgroundColor$17: dart.privateName(drawer, "Drawer.backgroundColor"),
    elevation$21: dart.privateName(drawer, "Drawer.elevation"),
    shape$17: dart.privateName(drawer, "Drawer.shape"),
    width$4: dart.privateName(drawer, "Drawer.width"),
    child$24: dart.privateName(drawer, "Drawer.child"),
    semanticLabel: dart.privateName(drawer, "Drawer.semanticLabel"),
    child$25: dart.privateName(drawer, "DrawerController.child"),
    alignment$4: dart.privateName(drawer, "DrawerController.alignment"),
    drawerCallback: dart.privateName(drawer, "DrawerController.drawerCallback"),
    dragStartBehavior$2: dart.privateName(drawer, "DrawerController.dragStartBehavior"),
    scrimColor$1: dart.privateName(drawer, "DrawerController.scrimColor"),
    enableOpenDragGesture: dart.privateName(drawer, "DrawerController.enableOpenDragGesture"),
    edgeDragWidth: dart.privateName(drawer, "DrawerController.edgeDragWidth"),
    isDrawerOpen: dart.privateName(drawer, "DrawerController.isDrawerOpen"),
    _historyEntry: dart.privateName(drawer, "_historyEntry"),
    _focusScopeNode: dart.privateName(drawer, "_focusScopeNode"),
    __DrawerControllerState__controller: dart.privateName(drawer, "_#DrawerControllerState#_controller"),
    _drawerKey: dart.privateName(drawer, "_drawerKey"),
    _previouslyOpened: dart.privateName(drawer, "_previouslyOpened"),
    __DrawerControllerState__scrimColorTween: dart.privateName(drawer, "_#DrawerControllerState#_scrimColorTween"),
    _gestureDetectorKey: dart.privateName(drawer, "_gestureDetectorKey"),
    _controller$5: dart.privateName(drawer, "_controller"),
    _animationChanged: dart.privateName(drawer, "_animationChanged"),
    _animationStatusChanged: dart.privateName(drawer, "_animationStatusChanged"),
    _scrimColorTween: dart.privateName(drawer, "_scrimColorTween"),
    _buildScrimColorTween: dart.privateName(drawer, "_buildScrimColorTween"),
    _handleHistoryEntryRemoved: dart.privateName(drawer, "_handleHistoryEntryRemoved"),
    _ensureHistoryEntry: dart.privateName(drawer, "_ensureHistoryEntry"),
    _handleDragDown: dart.privateName(drawer, "_handleDragDown"),
    _handleDragCancel: dart.privateName(drawer, "_handleDragCancel"),
    _width$1: dart.privateName(drawer, "_width"),
    _move: dart.privateName(drawer, "_move"),
    _settle: dart.privateName(drawer, "_settle"),
    _drawerOuterAlignment: dart.privateName(drawer, "_drawerOuterAlignment"),
    _drawerInnerAlignment: dart.privateName(drawer, "_drawerInnerAlignment"),
    _buildDrawer: dart.privateName(drawer, "_buildDrawer"),
    animationController: dart.privateName(bottom_sheet, "BottomSheet.animationController"),
    onClosing: dart.privateName(bottom_sheet, "BottomSheet.onClosing"),
    builder$4: dart.privateName(bottom_sheet, "BottomSheet.builder"),
    enableDrag: dart.privateName(bottom_sheet, "BottomSheet.enableDrag"),
    onDragStart: dart.privateName(bottom_sheet, "BottomSheet.onDragStart"),
    onDragEnd: dart.privateName(bottom_sheet, "BottomSheet.onDragEnd"),
    backgroundColor$18: dart.privateName(bottom_sheet, "BottomSheet.backgroundColor"),
    elevation$22: dart.privateName(bottom_sheet, "BottomSheet.elevation"),
    shape$18: dart.privateName(bottom_sheet, "BottomSheet.shape"),
    clipBehavior$7: dart.privateName(bottom_sheet, "BottomSheet.clipBehavior"),
    constraints$5: dart.privateName(bottom_sheet, "BottomSheet.constraints"),
    _childKey: dart.privateName(bottom_sheet, "_childKey"),
    _childHeight: dart.privateName(bottom_sheet, "_childHeight"),
    _dismissUnderway: dart.privateName(bottom_sheet, "_dismissUnderway"),
    _handleDragStart: dart.privateName(bottom_sheet, "_handleDragStart"),
    _handleDragUpdate: dart.privateName(bottom_sheet, "_handleDragUpdate"),
    _handleDragEnd: dart.privateName(bottom_sheet, "_handleDragEnd"),
    route: dart.privateName(bottom_sheet, "_ModalBottomSheet.route"),
    isScrollControlled: dart.privateName(bottom_sheet, "_ModalBottomSheet.isScrollControlled"),
    backgroundColor$19: dart.privateName(bottom_sheet, "_ModalBottomSheet.backgroundColor"),
    elevation$23: dart.privateName(bottom_sheet, "_ModalBottomSheet.elevation"),
    shape$19: dart.privateName(bottom_sheet, "_ModalBottomSheet.shape"),
    clipBehavior$8: dart.privateName(bottom_sheet, "_ModalBottomSheet.clipBehavior"),
    constraints$6: dart.privateName(bottom_sheet, "_ModalBottomSheet.constraints"),
    enableDrag$1: dart.privateName(bottom_sheet, "_ModalBottomSheet.enableDrag"),
    _getRouteLabel: dart.privateName(bottom_sheet, "_getRouteLabel"),
    _animationController$1: dart.privateName(bottom_sheet, "_animationController"),
    barrierLabel: dart.privateName(bottom_sheet, "_ModalBottomSheetRoute.barrierLabel"),
    startingPoint: dart.privateName(bottom_sheet, "_BottomSheetSuspendedCurve.startingPoint"),
    curve$1: dart.privateName(bottom_sheet, "_BottomSheetSuspendedCurve.curve"),
    color$12: dart.privateName(divider_theme, "DividerThemeData.color"),
    space: dart.privateName(divider_theme, "DividerThemeData.space"),
    thickness$1: dart.privateName(divider_theme, "DividerThemeData.thickness"),
    indent: dart.privateName(divider_theme, "DividerThemeData.indent"),
    endIndent: dart.privateName(divider_theme, "DividerThemeData.endIndent"),
    data$23: dart.privateName(divider_theme, "DividerTheme.data"),
    height$10: dart.privateName(divider, "Divider.height"),
    thickness$2: dart.privateName(divider, "Divider.thickness"),
    indent$1: dart.privateName(divider, "Divider.indent"),
    endIndent$1: dart.privateName(divider, "Divider.endIndent"),
    color$13: dart.privateName(divider, "Divider.color"),
    width$5: dart.privateName(divider, "VerticalDivider.width"),
    thickness$3: dart.privateName(divider, "VerticalDivider.thickness"),
    indent$2: dart.privateName(divider, "VerticalDivider.indent"),
    endIndent$2: dart.privateName(divider, "VerticalDivider.endIndent"),
    color$14: dart.privateName(divider, "VerticalDivider.color"),
    backgroundColor$20: dart.privateName(banner_theme, "MaterialBannerThemeData.backgroundColor"),
    contentTextStyle$2: dart.privateName(banner_theme, "MaterialBannerThemeData.contentTextStyle"),
    elevation$24: dart.privateName(banner_theme, "MaterialBannerThemeData.elevation"),
    padding$12: dart.privateName(banner_theme, "MaterialBannerThemeData.padding"),
    leadingPadding: dart.privateName(banner_theme, "MaterialBannerThemeData.leadingPadding"),
    data$24: dart.privateName(banner_theme, "MaterialBannerTheme.data"),
    content$1: dart.privateName(banner, "MaterialBanner.content"),
    contentTextStyle$3: dart.privateName(banner, "MaterialBanner.contentTextStyle"),
    actions: dart.privateName(banner, "MaterialBanner.actions"),
    elevation$25: dart.privateName(banner, "MaterialBanner.elevation"),
    leading$3: dart.privateName(banner, "MaterialBanner.leading"),
    backgroundColor$21: dart.privateName(banner, "MaterialBanner.backgroundColor"),
    padding$13: dart.privateName(banner, "MaterialBanner.padding"),
    leadingPadding$1: dart.privateName(banner, "MaterialBanner.leadingPadding"),
    forceActionsBelow: dart.privateName(banner, "MaterialBanner.forceActionsBelow"),
    overflowAlignment: dart.privateName(banner, "MaterialBanner.overflowAlignment"),
    animation$12: dart.privateName(banner, "MaterialBanner.animation"),
    onVisible$1: dart.privateName(banner, "MaterialBanner.onVisible"),
    _wasVisible$1: dart.privateName(banner, "_wasVisible"),
    _onAnimationStatusChanged$1: dart.privateName(banner, "_onAnimationStatusChanged"),
    child$26: dart.privateName(scaffold$, "ScaffoldMessenger.child"),
    _scaffoldMessengerState: dart.privateName(scaffold$, "_scaffoldMessengerState"),
    _scaffolds: dart.privateName(scaffold$, "_scaffolds"),
    _materialBanners: dart.privateName(scaffold$, "_materialBanners"),
    _materialBannerController: dart.privateName(scaffold$, "_materialBannerController"),
    _snackBars: dart.privateName(scaffold$, "_snackBars"),
    _snackBarController: dart.privateName(scaffold$, "_snackBarController"),
    _snackBarTimer: dart.privateName(scaffold$, "_snackBarTimer"),
    _accessibleNavigation: dart.privateName(scaffold$, "_accessibleNavigation"),
    _isRoot: dart.privateName(scaffold$, "_isRoot"),
    _updateSnackBar: dart.privateName(scaffold$, "_updateSnackBar"),
    _updateMaterialBanner: dart.privateName(scaffold$, "_updateMaterialBanner"),
    _register: dart.privateName(scaffold$, "_register"),
    _unregister: dart.privateName(scaffold$, "_unregister"),
    _updateScaffolds: dart.privateName(scaffold$, "_updateScaffolds"),
    _handleSnackBarStatusChanged: dart.privateName(scaffold$, "_handleSnackBarStatusChanged"),
    _completer: dart.privateName(scaffold$, "_completer"),
    _handleMaterialBannerStatusChanged: dart.privateName(scaffold$, "_handleMaterialBannerStatusChanged"),
    _widget: dart.privateName(scaffold$, "_widget"),
    _scaffoldMessengerState$1: dart.privateName(scaffold$, "_ScaffoldMessengerScope._scaffoldMessengerState"),
    floatingActionButtonSize: dart.privateName(scaffold$, "ScaffoldPrelayoutGeometry.floatingActionButtonSize"),
    bottomSheetSize: dart.privateName(scaffold$, "ScaffoldPrelayoutGeometry.bottomSheetSize"),
    contentBottom: dart.privateName(scaffold$, "ScaffoldPrelayoutGeometry.contentBottom"),
    contentTop: dart.privateName(scaffold$, "ScaffoldPrelayoutGeometry.contentTop"),
    minInsets: dart.privateName(scaffold$, "ScaffoldPrelayoutGeometry.minInsets"),
    minViewPadding: dart.privateName(scaffold$, "ScaffoldPrelayoutGeometry.minViewPadding"),
    scaffoldSize: dart.privateName(scaffold$, "ScaffoldPrelayoutGeometry.scaffoldSize"),
    snackBarSize: dart.privateName(scaffold$, "ScaffoldPrelayoutGeometry.snackBarSize"),
    materialBannerSize: dart.privateName(scaffold$, "ScaffoldPrelayoutGeometry.materialBannerSize"),
    textDirection$2: dart.privateName(scaffold$, "ScaffoldPrelayoutGeometry.textDirection"),
    begin: dart.privateName(scaffold$, "_TransitionSnapshotFabLocation.begin"),
    end$2: dart.privateName(scaffold$, "_TransitionSnapshotFabLocation.end"),
    animator: dart.privateName(scaffold$, "_TransitionSnapshotFabLocation.animator"),
    progress: dart.privateName(scaffold$, "_TransitionSnapshotFabLocation.progress"),
    bottomNavigationBarTop: dart.privateName(scaffold$, "ScaffoldGeometry.bottomNavigationBarTop"),
    floatingActionButtonArea: dart.privateName(scaffold$, "ScaffoldGeometry.floatingActionButtonArea"),
    _scaleFloatingActionButton: dart.privateName(scaffold$, "_scaleFloatingActionButton"),
    _updateWith: dart.privateName(scaffold$, "_updateWith"),
    bottomWidgetsHeight: dart.privateName(scaffold$, "_BodyBoxConstraints.bottomWidgetsHeight"),
    appBarHeight: dart.privateName(scaffold$, "_BodyBoxConstraints.appBarHeight"),
    materialBannerHeight: dart.privateName(scaffold$, "_BodyBoxConstraints.materialBannerHeight"),
    body: dart.privateName(scaffold$, "_BodyBuilder.body"),
    extendBody: dart.privateName(scaffold$, "_BodyBuilder.extendBody"),
    extendBodyBehindAppBar: dart.privateName(scaffold$, "_BodyBuilder.extendBodyBehindAppBar"),
    child$27: dart.privateName(scaffold$, "_FloatingActionButtonTransition.child"),
    fabMoveAnimation: dart.privateName(scaffold$, "_FloatingActionButtonTransition.fabMoveAnimation"),
    fabMotionAnimator: dart.privateName(scaffold$, "_FloatingActionButtonTransition.fabMotionAnimator"),
    geometryNotifier: dart.privateName(scaffold$, "_FloatingActionButtonTransition.geometryNotifier"),
    currentController: dart.privateName(scaffold$, "_FloatingActionButtonTransition.currentController"),
    ___FloatingActionButtonTransitionState__previousController: dart.privateName(scaffold$, "_#_FloatingActionButtonTransitionState#_previousController"),
    ___FloatingActionButtonTransitionState__previousScaleAnimation: dart.privateName(scaffold$, "_#_FloatingActionButtonTransitionState#_previousScaleAnimation"),
    ___FloatingActionButtonTransitionState__previousRotationAnimation: dart.privateName(scaffold$, "_#_FloatingActionButtonTransitionState#_previousRotationAnimation"),
    ___FloatingActionButtonTransitionState__currentScaleAnimation: dart.privateName(scaffold$, "_#_FloatingActionButtonTransitionState#_currentScaleAnimation"),
    ___FloatingActionButtonTransitionState__extendedCurrentScaleAnimation: dart.privateName(scaffold$, "_#_FloatingActionButtonTransitionState#_extendedCurrentScaleAnimation"),
    ___FloatingActionButtonTransitionState__currentRotationAnimation: dart.privateName(scaffold$, "_#_FloatingActionButtonTransitionState#_currentRotationAnimation"),
    _previousChild: dart.privateName(scaffold$, "_previousChild"),
    _previousController: dart.privateName(scaffold$, "_previousController"),
    _previousScaleAnimation: dart.privateName(scaffold$, "_previousScaleAnimation"),
    _previousRotationAnimation: dart.privateName(scaffold$, "_previousRotationAnimation"),
    _currentScaleAnimation: dart.privateName(scaffold$, "_currentScaleAnimation"),
    _extendedCurrentScaleAnimation: dart.privateName(scaffold$, "_extendedCurrentScaleAnimation"),
    _currentRotationAnimation: dart.privateName(scaffold$, "_currentRotationAnimation"),
    _handlePreviousAnimationStatusChanged: dart.privateName(scaffold$, "_handlePreviousAnimationStatusChanged"),
    _updateAnimations: dart.privateName(scaffold$, "_updateAnimations"),
    _updateGeometryScale: dart.privateName(scaffold$, "_updateGeometryScale"),
    _onProgressChanged: dart.privateName(scaffold$, "_onProgressChanged"),
    _isExtendedFloatingActionButton: dart.privateName(scaffold$, "_isExtendedFloatingActionButton"),
    extendBody$1: dart.privateName(scaffold$, "Scaffold.extendBody"),
    extendBodyBehindAppBar$1: dart.privateName(scaffold$, "Scaffold.extendBodyBehindAppBar"),
    appBar: dart.privateName(scaffold$, "Scaffold.appBar"),
    body$1: dart.privateName(scaffold$, "Scaffold.body"),
    floatingActionButton: dart.privateName(scaffold$, "Scaffold.floatingActionButton"),
    floatingActionButtonLocation: dart.privateName(scaffold$, "Scaffold.floatingActionButtonLocation"),
    floatingActionButtonAnimator: dart.privateName(scaffold$, "Scaffold.floatingActionButtonAnimator"),
    persistentFooterButtons: dart.privateName(scaffold$, "Scaffold.persistentFooterButtons"),
    persistentFooterAlignment: dart.privateName(scaffold$, "Scaffold.persistentFooterAlignment"),
    drawer: dart.privateName(scaffold$, "Scaffold.drawer"),
    onDrawerChanged: dart.privateName(scaffold$, "Scaffold.onDrawerChanged"),
    endDrawer: dart.privateName(scaffold$, "Scaffold.endDrawer"),
    onEndDrawerChanged: dart.privateName(scaffold$, "Scaffold.onEndDrawerChanged"),
    drawerScrimColor: dart.privateName(scaffold$, "Scaffold.drawerScrimColor"),
    backgroundColor$22: dart.privateName(scaffold$, "Scaffold.backgroundColor"),
    bottomNavigationBar: dart.privateName(scaffold$, "Scaffold.bottomNavigationBar"),
    bottomSheet: dart.privateName(scaffold$, "Scaffold.bottomSheet"),
    resizeToAvoidBottomInset: dart.privateName(scaffold$, "Scaffold.resizeToAvoidBottomInset"),
    primary$1: dart.privateName(scaffold$, "Scaffold.primary"),
    drawerDragStartBehavior: dart.privateName(scaffold$, "Scaffold.drawerDragStartBehavior"),
    drawerEdgeDragWidth: dart.privateName(scaffold$, "Scaffold.drawerEdgeDragWidth"),
    drawerEnableOpenDragGesture: dart.privateName(scaffold$, "Scaffold.drawerEnableOpenDragGesture"),
    endDrawerEnableOpenDragGesture: dart.privateName(scaffold$, "Scaffold.endDrawerEnableOpenDragGesture"),
    restorationId: dart.privateName(scaffold$, "Scaffold.restorationId"),
    AlignmentDirectional_y: dart.privateName(alignment, "AlignmentDirectional.y"),
    AlignmentDirectional_start: dart.privateName(alignment, "AlignmentDirectional.start"),
    _drawerKey$1: dart.privateName(scaffold$, "_drawerKey"),
    _endDrawerKey: dart.privateName(scaffold$, "_endDrawerKey"),
    _bodyKey: dart.privateName(scaffold$, "_bodyKey"),
    _appBarMaxHeight: dart.privateName(scaffold$, "_appBarMaxHeight"),
    _drawerOpened: dart.privateName(scaffold$, "_drawerOpened"),
    _endDrawerOpened: dart.privateName(scaffold$, "_endDrawerOpened"),
    _scaffoldMessenger: dart.privateName(scaffold$, "_scaffoldMessenger"),
    _messengerSnackBar: dart.privateName(scaffold$, "_messengerSnackBar"),
    _messengerMaterialBanner: dart.privateName(scaffold$, "_messengerMaterialBanner"),
    _dismissedBottomSheets: dart.privateName(scaffold$, "_dismissedBottomSheets"),
    _currentBottomSheet: dart.privateName(scaffold$, "_currentBottomSheet"),
    _currentBottomSheetKey: dart.privateName(scaffold$, "_currentBottomSheetKey"),
    __ScaffoldState__floatingActionButtonMoveController: dart.privateName(scaffold$, "_#ScaffoldState#_floatingActionButtonMoveController"),
    __ScaffoldState__floatingActionButtonAnimator: dart.privateName(scaffold$, "_#ScaffoldState#_floatingActionButtonAnimator"),
    _previousFloatingActionButtonLocation: dart.privateName(scaffold$, "_previousFloatingActionButtonLocation"),
    _floatingActionButtonLocation: dart.privateName(scaffold$, "_floatingActionButtonLocation"),
    __ScaffoldState__floatingActionButtonVisibilityController: dart.privateName(scaffold$, "_#ScaffoldState#_floatingActionButtonVisibilityController")
  };
  var S$2 = {
    __ScaffoldState__geometryNotifier: dart.privateName(scaffold$, "_#ScaffoldState#_geometryNotifier"),
    _showBodyScrim: dart.privateName(scaffold$, "_showBodyScrim"),
    _bodyScrimColor: dart.privateName(scaffold$, "_bodyScrimColor"),
    _drawerOpenedCallback: dart.privateName(scaffold$, "_drawerOpenedCallback"),
    _endDrawerOpenedCallback: dart.privateName(scaffold$, "_endDrawerOpenedCallback"),
    _floatingActionButtonVisibilityValue: dart.privateName(scaffold$, "_floatingActionButtonVisibilityValue"),
    _buildBottomSheet: dart.privateName(scaffold$, "_buildBottomSheet"),
    _maybeBuildPersistentBottomSheet: dart.privateName(scaffold$, "_maybeBuildPersistentBottomSheet"),
    _isLocalHistoryEntry: dart.privateName(scaffold$, "_isLocalHistoryEntry"),
    _closeCurrentBottomSheet: dart.privateName(scaffold$, "_closeCurrentBottomSheet"),
    _updatePersistentBottomSheet: dart.privateName(scaffold$, "_updatePersistentBottomSheet"),
    _showFloatingActionButton: dart.privateName(scaffold$, "_showFloatingActionButton"),
    _floatingActionButtonMoveController: dart.privateName(scaffold$, "_floatingActionButtonMoveController"),
    _floatingActionButtonAnimator: dart.privateName(scaffold$, "_floatingActionButtonAnimator"),
    _floatingActionButtonVisibilityController: dart.privateName(scaffold$, "_floatingActionButtonVisibilityController"),
    _moveFloatingActionButton: dart.privateName(scaffold$, "_moveFloatingActionButton"),
    _handleStatusBarTap: dart.privateName(scaffold$, "_handleStatusBarTap"),
    _geometryNotifier: dart.privateName(scaffold$, "_geometryNotifier"),
    _resizeToAvoidBottomInset: dart.privateName(scaffold$, "_resizeToAvoidBottomInset"),
    _addIfNonNull: dart.privateName(scaffold$, "_addIfNonNull"),
    _buildEndDrawer: dart.privateName(scaffold$, "_buildEndDrawer"),
    _buildDrawer$1: dart.privateName(scaffold$, "_buildDrawer"),
    _widget$1: dart.privateName(scaffold$, "ScaffoldFeatureController._widget"),
    _completer$1: dart.privateName(scaffold$, "ScaffoldFeatureController._completer"),
    close: dart.privateName(scaffold$, "ScaffoldFeatureController.close"),
    setState: dart.privateName(scaffold$, "ScaffoldFeatureController.setState"),
    startingPoint$1: dart.privateName(scaffold$, "_BottomSheetSuspendedCurve.startingPoint"),
    curve$2: dart.privateName(scaffold$, "_BottomSheetSuspendedCurve.curve"),
    animationController$1: dart.privateName(scaffold$, "_StandardBottomSheet.animationController"),
    enableDrag$2: dart.privateName(scaffold$, "_StandardBottomSheet.enableDrag"),
    onClosing$1: dart.privateName(scaffold$, "_StandardBottomSheet.onClosing"),
    onDismissed: dart.privateName(scaffold$, "_StandardBottomSheet.onDismissed"),
    onDispose: dart.privateName(scaffold$, "_StandardBottomSheet.onDispose"),
    builder$5: dart.privateName(scaffold$, "_StandardBottomSheet.builder"),
    isPersistent: dart.privateName(scaffold$, "_StandardBottomSheet.isPersistent"),
    backgroundColor$23: dart.privateName(scaffold$, "_StandardBottomSheet.backgroundColor"),
    elevation$26: dart.privateName(scaffold$, "_StandardBottomSheet.elevation"),
    shape$20: dart.privateName(scaffold$, "_StandardBottomSheet.shape"),
    clipBehavior$9: dart.privateName(scaffold$, "_StandardBottomSheet.clipBehavior"),
    constraints$7: dart.privateName(scaffold$, "_StandardBottomSheet.constraints"),
    _handleStatusChange: dart.privateName(scaffold$, "_handleStatusChange"),
    _handleDragStart$1: dart.privateName(scaffold$, "_handleDragStart"),
    _handleDragEnd$1: dart.privateName(scaffold$, "_handleDragEnd"),
    _isLocalHistoryEntry$1: dart.privateName(scaffold$, "PersistentBottomSheetController._isLocalHistoryEntry"),
    hasDrawer: dart.privateName(scaffold$, "_ScaffoldScope.hasDrawer"),
    geometryNotifier$1: dart.privateName(scaffold$, "_ScaffoldScope.geometryNotifier"),
    elevation$27: dart.privateName(elevation_overlay, "_ElevationOpacity.elevation"),
    opacity: dart.privateName(elevation_overlay, "_ElevationOpacity.opacity"),
    child$28: dart.privateName(material, "Material.child"),
    type$3: dart.privateName(material, "Material.type"),
    elevation$28: dart.privateName(material, "Material.elevation"),
    color$15: dart.privateName(material, "Material.color"),
    shadowColor$4: dart.privateName(material, "Material.shadowColor"),
    surfaceTintColor$5: dart.privateName(material, "Material.surfaceTintColor"),
    textStyle$7: dart.privateName(material, "Material.textStyle"),
    shape$21: dart.privateName(material, "Material.shape"),
    borderOnForeground: dart.privateName(material, "Material.borderOnForeground"),
    clipBehavior$10: dart.privateName(material, "Material.clipBehavior"),
    animationDuration$4: dart.privateName(material, "Material.animationDuration"),
    borderRadius$4: dart.privateName(material, "Material.borderRadius"),
    _inkFeatureRenderer: dart.privateName(material, "_inkFeatureRenderer"),
    _getBackgroundColor: dart.privateName(material, "_getBackgroundColor"),
    _didChangeLayout: dart.privateName(material, "_didChangeLayout"),
    _getShape: dart.privateName(material, "_getShape"),
    _inkFeatures: dart.privateName(material, "_inkFeatures"),
    color$16: dart.privateName(material, "_InkFeatures.color"),
    vsync: dart.privateName(material, "_InkFeatures.vsync"),
    absorbHitTest: dart.privateName(material, "_InkFeatures.absorbHitTest"),
    child$29: dart.privateName(material, "_MaterialInterior.child"),
    shape$22: dart.privateName(material, "_MaterialInterior.shape"),
    borderOnForeground$1: dart.privateName(material, "_MaterialInterior.borderOnForeground"),
    clipBehavior$11: dart.privateName(material, "_MaterialInterior.clipBehavior"),
    elevation$29: dart.privateName(material, "_MaterialInterior.elevation"),
    color$17: dart.privateName(material, "_MaterialInterior.color"),
    shadowColor$5: dart.privateName(material, "_MaterialInterior.shadowColor"),
    surfaceTintColor$6: dart.privateName(material, "_MaterialInterior.surfaceTintColor"),
    _elevation: dart.privateName(material, "_elevation"),
    _surfaceTintColor: dart.privateName(material, "_surfaceTintColor"),
    _shadowColor: dart.privateName(material, "_shadowColor"),
    _border$1: dart.privateName(material, "_border"),
    child$30: dart.privateName(material, "_ShapeBorderPaint.child"),
    shape$23: dart.privateName(material, "_ShapeBorderPaint.shape"),
    borderOnForeground$2: dart.privateName(material, "_ShapeBorderPaint.borderOnForeground"),
    $modulo: dartx['%'],
    _getDaysInMonth: dart.privateName(material_localizations, "_getDaysInMonth"),
    _formatTwoDigitZeroPad: dart.privateName(material_localizations, "_formatTwoDigitZeroPad"),
    $padLeft: dartx.padLeft,
    $split: dartx.split,
    _formatDayPeriod: dart.privateName(material_localizations, "_formatDayPeriod"),
    data$25: dart.privateName(theme$, "Theme.data"),
    child$31: dart.privateName(theme$, "Theme.child"),
    _wrapsWidgetThemes: dart.privateName(theme$, "_wrapsWidgetThemes"),
    theme: dart.privateName(theme$, "_InheritedTheme.theme"),
    data$26: dart.privateName(theme$, "AnimatedTheme.data"),
    child$32: dart.privateName(theme$, "AnimatedTheme.child"),
    _data$2: dart.privateName(theme$, "_data"),
    brightness$2: dart.privateName(app_bar_theme, "AppBarTheme.brightness"),
    backgroundColor$24: dart.privateName(app_bar_theme, "AppBarTheme.backgroundColor"),
    foregroundColor$2: dart.privateName(app_bar_theme, "AppBarTheme.foregroundColor"),
    elevation$30: dart.privateName(app_bar_theme, "AppBarTheme.elevation"),
    scrolledUnderElevation: dart.privateName(app_bar_theme, "AppBarTheme.scrolledUnderElevation"),
    shadowColor$6: dart.privateName(app_bar_theme, "AppBarTheme.shadowColor"),
    surfaceTintColor$7: dart.privateName(app_bar_theme, "AppBarTheme.surfaceTintColor"),
    shape$24: dart.privateName(app_bar_theme, "AppBarTheme.shape"),
    iconTheme$3: dart.privateName(app_bar_theme, "AppBarTheme.iconTheme"),
    actionsIconTheme: dart.privateName(app_bar_theme, "AppBarTheme.actionsIconTheme"),
    textTheme$3: dart.privateName(app_bar_theme, "AppBarTheme.textTheme"),
    centerTitle$1: dart.privateName(app_bar_theme, "AppBarTheme.centerTitle"),
    titleSpacing: dart.privateName(app_bar_theme, "AppBarTheme.titleSpacing"),
    toolbarHeight: dart.privateName(app_bar_theme, "AppBarTheme.toolbarHeight"),
    toolbarTextStyle: dart.privateName(app_bar_theme, "AppBarTheme.toolbarTextStyle"),
    titleTextStyle$1: dart.privateName(app_bar_theme, "AppBarTheme.titleTextStyle"),
    systemOverlayStyle: dart.privateName(app_bar_theme, "AppBarTheme.systemOverlayStyle"),
    backwardsCompatibility: dart.privateName(app_bar_theme, "AppBarTheme.backwardsCompatibility"),
    toolbarHeight$1: dart.privateName(app_bar, "_ToolbarContainerLayout.toolbarHeight"),
    leading$4: dart.privateName(app_bar, "AppBar.leading"),
    automaticallyImplyLeading: dart.privateName(app_bar, "AppBar.automaticallyImplyLeading"),
    title$3: dart.privateName(app_bar, "AppBar.title"),
    actions$1: dart.privateName(app_bar, "AppBar.actions"),
    flexibleSpace: dart.privateName(app_bar, "AppBar.flexibleSpace"),
    bottom: dart.privateName(app_bar, "AppBar.bottom"),
    elevation$31: dart.privateName(app_bar, "AppBar.elevation"),
    scrolledUnderElevation$1: dart.privateName(app_bar, "AppBar.scrolledUnderElevation"),
    notificationPredicate: dart.privateName(app_bar, "AppBar.notificationPredicate"),
    shadowColor$7: dart.privateName(app_bar, "AppBar.shadowColor"),
    surfaceTintColor$8: dart.privateName(app_bar, "AppBar.surfaceTintColor"),
    shape$25: dart.privateName(app_bar, "AppBar.shape"),
    backgroundColor$25: dart.privateName(app_bar, "AppBar.backgroundColor"),
    foregroundColor$3: dart.privateName(app_bar, "AppBar.foregroundColor"),
    brightness$3: dart.privateName(app_bar, "AppBar.brightness"),
    iconTheme$4: dart.privateName(app_bar, "AppBar.iconTheme"),
    actionsIconTheme$1: dart.privateName(app_bar, "AppBar.actionsIconTheme"),
    textTheme$4: dart.privateName(app_bar, "AppBar.textTheme"),
    primary$2: dart.privateName(app_bar, "AppBar.primary"),
    centerTitle$2: dart.privateName(app_bar, "AppBar.centerTitle"),
    excludeHeaderSemantics: dart.privateName(app_bar, "AppBar.excludeHeaderSemantics"),
    titleSpacing$1: dart.privateName(app_bar, "AppBar.titleSpacing"),
    toolbarOpacity$1: dart.privateName(app_bar, "AppBar.toolbarOpacity"),
    bottomOpacity: dart.privateName(app_bar, "AppBar.bottomOpacity"),
    preferredSize: dart.privateName(app_bar, "AppBar.preferredSize"),
    toolbarHeight$2: dart.privateName(app_bar, "AppBar.toolbarHeight"),
    leadingWidth: dart.privateName(app_bar, "AppBar.leadingWidth"),
    backwardsCompatibility$1: dart.privateName(app_bar, "AppBar.backwardsCompatibility"),
    toolbarTextStyle$1: dart.privateName(app_bar, "AppBar.toolbarTextStyle"),
    titleTextStyle$2: dart.privateName(app_bar, "AppBar.titleTextStyle"),
    systemOverlayStyle$1: dart.privateName(app_bar, "AppBar.systemOverlayStyle"),
    _getEffectiveCenterTitle$1: dart.privateName(app_bar, "_getEffectiveCenterTitle"),
    _scrollNotificationObserver: dart.privateName(app_bar, "_scrollNotificationObserver"),
    _scrolledUnder: dart.privateName(app_bar, "_scrolledUnder"),
    _handleScrollNotification$1: dart.privateName(app_bar, "_handleScrollNotification"),
    _handleDrawerButton: dart.privateName(app_bar, "_handleDrawerButton"),
    _handleDrawerButtonEnd: dart.privateName(app_bar, "_handleDrawerButtonEnd"),
    _resolveColor: dart.privateName(app_bar, "_resolveColor"),
    _systemOverlayStyleForBrightness: dart.privateName(app_bar, "_systemOverlayStyleForBrightness"),
    SemanticsSortKey_name: dart.privateName(semantics, "SemanticsSortKey.name"),
    OrdinalSortKey_order: dart.privateName(semantics, "OrdinalSortKey.order"),
    vsync$1: dart.privateName(app_bar, "_SliverAppBarDelegate.vsync"),
    snapConfiguration: dart.privateName(app_bar, "_SliverAppBarDelegate.snapConfiguration"),
    stretchConfiguration: dart.privateName(app_bar, "_SliverAppBarDelegate.stretchConfiguration"),
    showOnScreenConfiguration: dart.privateName(app_bar, "_SliverAppBarDelegate.showOnScreenConfiguration"),
    _bottomHeight: dart.privateName(app_bar, "_bottomHeight"),
    leading$5: dart.privateName(app_bar, "SliverAppBar.leading"),
    automaticallyImplyLeading$1: dart.privateName(app_bar, "SliverAppBar.automaticallyImplyLeading"),
    title$4: dart.privateName(app_bar, "SliverAppBar.title"),
    actions$2: dart.privateName(app_bar, "SliverAppBar.actions"),
    flexibleSpace$1: dart.privateName(app_bar, "SliverAppBar.flexibleSpace"),
    bottom$1: dart.privateName(app_bar, "SliverAppBar.bottom"),
    elevation$32: dart.privateName(app_bar, "SliverAppBar.elevation"),
    scrolledUnderElevation$2: dart.privateName(app_bar, "SliverAppBar.scrolledUnderElevation"),
    shadowColor$8: dart.privateName(app_bar, "SliverAppBar.shadowColor"),
    surfaceTintColor$9: dart.privateName(app_bar, "SliverAppBar.surfaceTintColor"),
    forceElevated: dart.privateName(app_bar, "SliverAppBar.forceElevated"),
    backgroundColor$26: dart.privateName(app_bar, "SliverAppBar.backgroundColor"),
    foregroundColor$4: dart.privateName(app_bar, "SliverAppBar.foregroundColor"),
    brightness$4: dart.privateName(app_bar, "SliverAppBar.brightness"),
    iconTheme$5: dart.privateName(app_bar, "SliverAppBar.iconTheme"),
    actionsIconTheme$2: dart.privateName(app_bar, "SliverAppBar.actionsIconTheme"),
    textTheme$5: dart.privateName(app_bar, "SliverAppBar.textTheme"),
    primary$3: dart.privateName(app_bar, "SliverAppBar.primary"),
    centerTitle$3: dart.privateName(app_bar, "SliverAppBar.centerTitle"),
    excludeHeaderSemantics$1: dart.privateName(app_bar, "SliverAppBar.excludeHeaderSemantics"),
    titleSpacing$2: dart.privateName(app_bar, "SliverAppBar.titleSpacing"),
    collapsedHeight: dart.privateName(app_bar, "SliverAppBar.collapsedHeight"),
    expandedHeight: dart.privateName(app_bar, "SliverAppBar.expandedHeight"),
    floating: dart.privateName(app_bar, "SliverAppBar.floating"),
    pinned: dart.privateName(app_bar, "SliverAppBar.pinned"),
    shape$26: dart.privateName(app_bar, "SliverAppBar.shape"),
    snap: dart.privateName(app_bar, "SliverAppBar.snap"),
    stretch: dart.privateName(app_bar, "SliverAppBar.stretch"),
    stretchTriggerOffset: dart.privateName(app_bar, "SliverAppBar.stretchTriggerOffset"),
    onStretchTrigger: dart.privateName(app_bar, "SliverAppBar.onStretchTrigger"),
    toolbarHeight$3: dart.privateName(app_bar, "SliverAppBar.toolbarHeight"),
    leadingWidth$1: dart.privateName(app_bar, "SliverAppBar.leadingWidth"),
    backwardsCompatibility$2: dart.privateName(app_bar, "SliverAppBar.backwardsCompatibility"),
    toolbarTextStyle$2: dart.privateName(app_bar, "SliverAppBar.toolbarTextStyle"),
    titleTextStyle$3: dart.privateName(app_bar, "SliverAppBar.titleTextStyle"),
    systemOverlayStyle$2: dart.privateName(app_bar, "SliverAppBar.systemOverlayStyle"),
    _snapConfiguration: dart.privateName(app_bar, "_snapConfiguration"),
    _stretchConfiguration: dart.privateName(app_bar, "_stretchConfiguration"),
    _showOnScreenConfiguration: dart.privateName(app_bar, "_showOnScreenConfiguration"),
    PersistentHeaderShowOnScreenConfiguration_maxShowOnScreenExtent: dart.privateName(sliver_persistent_header$, "PersistentHeaderShowOnScreenConfiguration.maxShowOnScreenExtent"),
    PersistentHeaderShowOnScreenConfiguration_minShowOnScreenExtent: dart.privateName(sliver_persistent_header$, "PersistentHeaderShowOnScreenConfiguration.minShowOnScreenExtent"),
    _updateSnapConfiguration: dart.privateName(app_bar, "_updateSnapConfiguration"),
    _updateStretchConfiguration: dart.privateName(app_bar, "_updateStretchConfiguration"),
    title$5: dart.privateName(app_bar, "_ScrollUnderFlexibleSpace.title"),
    variant: dart.privateName(app_bar, "_ScrollUnderFlexibleSpace.variant"),
    centerCollapsedTitle: dart.privateName(app_bar, "_ScrollUnderFlexibleSpace.centerCollapsedTitle"),
    primary$4: dart.privateName(app_bar, "_ScrollUnderFlexibleSpace.primary"),
    ___AppBarDefaultsM2__theme: dart.privateName(app_bar, "_#_AppBarDefaultsM2#_theme"),
    ___AppBarDefaultsM2__colors: dart.privateName(app_bar, "_#_AppBarDefaultsM2#_colors"),
    _theme$3: dart.privateName(app_bar, "_theme"),
    _colors$5: dart.privateName(app_bar, "_colors"),
    ___AppBarDefaultsM3__theme: dart.privateName(app_bar, "_#_AppBarDefaultsM3#_theme"),
    ___AppBarDefaultsM3__colors: dart.privateName(app_bar, "_#_AppBarDefaultsM3#_colors"),
    ___AppBarDefaultsM3__textTheme: dart.privateName(app_bar, "_#_AppBarDefaultsM3#_textTheme"),
    _textTheme$3: dart.privateName(app_bar, "_textTheme"),
    ___MediumScrollUnderFlexibleConfig__theme: dart.privateName(app_bar, "_#_MediumScrollUnderFlexibleConfig#_theme"),
    ___MediumScrollUnderFlexibleConfig__colors: dart.privateName(app_bar, "_#_MediumScrollUnderFlexibleConfig#_colors"),
    ___MediumScrollUnderFlexibleConfig__textTheme: dart.privateName(app_bar, "_#_MediumScrollUnderFlexibleConfig#_textTheme"),
    ___LargeScrollUnderFlexibleConfig__theme: dart.privateName(app_bar, "_#_LargeScrollUnderFlexibleConfig#_theme"),
    ___LargeScrollUnderFlexibleConfig__colors: dart.privateName(app_bar, "_#_LargeScrollUnderFlexibleConfig#_colors"),
    ___LargeScrollUnderFlexibleConfig__textTheme: dart.privateName(app_bar, "_#_LargeScrollUnderFlexibleConfig#_textTheme")
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 8,
        [S.EdgeInsets_right]: 8,
        [S.EdgeInsets_top]: 8,
        [S.EdgeInsets_left]: 8
      });
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: alignment.Alignment.prototype,
        [S.Alignment_y]: 0,
        [S.Alignment_x]: 0
      });
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "IconButton",
        [S._Location_column]: 9,
        [S._Location_line]: 149,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/icon_button.dart"
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: box$.BoxConstraints.prototype,
        [S.BoxConstraints_maxHeight]: 1 / 0,
        [S.BoxConstraints_minHeight]: 48,
        [S.BoxConstraints_maxWidth]: 1 / 0,
        [S.BoxConstraints_minWidth]: 48
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Tooltip",
        [S._Location_column]: 22,
        [S._Location_line]: 578,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/icon_button.dart"
      });
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_SelectableIconButton",
        [S._Location_column]: 14,
        [S._Location_line]: 584,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/icon_button.dart"
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Align",
        [S._Location_column]: 18,
        [S._Location_line]: 601,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/icon_button.dart"
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SizedBox",
        [S._Location_column]: 16,
        [S._Location_line]: 598,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/icon_button.dart"
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Padding",
        [S._Location_column]: 14,
        [S._Location_line]: 596,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/icon_button.dart"
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ConstrainedBox",
        [S._Location_column]: 21,
        [S._Location_line]: 594,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/icon_button.dart"
      });
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Tooltip",
        [S._Location_column]: 16,
        [S._Location_line]: 616,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/icon_button.dart"
      });
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "InkResponse",
        [S._Location_column]: 14,
        [S._Location_line]: 625,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/icon_button.dart"
      });
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 12,
        [S._Location_line]: 622,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/icon_button.dart"
      });
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_SelectableIconButton",
        [S._Location_column]: 9,
        [S._Location_line]: 664,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/icon_button.dart"
      });
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_IconButtonM3",
        [S._Location_column]: 12,
        [S._Location_line]: 715,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/icon_button.dart"
      });
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_IconButtonM3",
        [S._Location_column]: 9,
        [S._Location_line]: 727,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/icon_button.dart"
      });
    },
    get C16() {
      return C[16] = dart.const({
        __proto__: ui.Size.prototype,
        [S.OffsetBase__dy]: 40,
        [S.OffsetBase__dx]: 40
      });
    },
    get C19() {
      return C[19] = dart.const({
        __proto__: borders.StrokeAlign.prototype,
        [S._Enum__name]: "inside",
        [S._Enum_index]: 0
      });
    },
    get C20() {
      return C[20] = dart.const({
        __proto__: borders.BorderStyle.prototype,
        [S._Enum__name]: "none",
        [S._Enum_index]: 0
      });
    },
    get C21() {
      return C[21] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4278190080.0
      });
    },
    get C18() {
      return C[18] = dart.const({
        __proto__: borders.BorderSide.prototype,
        [S.BorderSide_strokeAlign]: C[19] || CT.C19,
        [S.BorderSide_style]: C[20] || CT.C20,
        [S.BorderSide_width]: 0,
        [S.BorderSide_color]: C[21] || CT.C21
      });
    },
    get C17() {
      return C[17] = dart.const({
        __proto__: stadium_border.StadiumBorder.prototype,
        [S.OutlinedBorder_side]: C[18] || CT.C18
      });
    },
    get C22() {
      return C[22] = dart.fn(text_style.TextStyle.lerp, T$.TextStyleNAndTextStyleNAnddoubleToTextStyleN());
    },
    get C23() {
      return C[23] = dart.fn(ui.Color.lerp, T$.ColorNAndColorNAnddoubleToColorN());
    },
    get C24() {
      return C[24] = dart.fn(ui.lerpDouble, T$.numNAndnumNAnddoubleTodoubleN());
    },
    get C25() {
      return C[25] = dart.fn(edge_insets.EdgeInsetsGeometry.lerp, T$.EdgeInsetsGeometryNAndEdgeInsetsGeometryNAnddoubleToEdgeInsetsGeometryN());
    },
    get C26() {
      return C[26] = dart.fn(ui.Size.lerp, T$.SizeNAndSizeNAnddoubleToSizeN());
    },
    get C27() {
      return C[27] = dart.fn(borders.OutlinedBorder.lerp, T$.OutlinedBorderNAndOutlinedBorderNAnddoubleToOutlinedBorderN());
    },
    get C28() {
      return C[28] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "BackButtonIcon",
        [S._Location_column]: 9,
        [S._Location_line]: 28,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/back_button.dart"
      });
    },
    get C29() {
      return C[29] = dart.const({
        __proto__: platform$.TargetPlatform.prototype,
        [S._Enum__name]: "android",
        [S._Enum_index]: 0
      });
    },
    get C30() {
      return C[30] = dart.const({
        __proto__: platform$.TargetPlatform.prototype,
        [S._Enum__name]: "fuchsia",
        [S._Enum_index]: 1
      });
    },
    get C31() {
      return C[31] = dart.const({
        __proto__: platform$.TargetPlatform.prototype,
        [S._Enum__name]: "linux",
        [S._Enum_index]: 3
      });
    },
    get C32() {
      return C[32] = dart.const({
        __proto__: platform$.TargetPlatform.prototype,
        [S._Enum__name]: "windows",
        [S._Enum_index]: 5
      });
    },
    get C33() {
      return C[33] = dart.const({
        __proto__: platform$.TargetPlatform.prototype,
        [S._Enum__name]: "iOS",
        [S._Enum_index]: 2
      });
    },
    get C34() {
      return C[34] = dart.const({
        __proto__: platform$.TargetPlatform.prototype,
        [S._Enum__name]: "macOS",
        [S._Enum_index]: 4
      });
    },
    get C35() {
      return C[35] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Icon",
        [S._Location_column]: 41,
        [S._Location_line]: 45,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/back_button.dart"
      });
    },
    get C36() {
      return C[36] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "BackButton",
        [S._Location_column]: 9,
        [S._Location_line]: 77,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/back_button.dart"
      });
    },
    get C38() {
      return C[38] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "BackButtonIcon",
        [S._Location_column]: 19,
        [S._Location_line]: 99,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/back_button.dart"
      });
    },
    get C37() {
      return C[37] = dart.const({
        __proto__: back_button.BackButtonIcon.prototype,
        [S.Widget__location]: C[38] || CT.C38,
        [S.Widget_key]: null
      });
    },
    get C39() {
      return C[39] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "IconButton",
        [S._Location_column]: 12,
        [S._Location_line]: 98,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/back_button.dart"
      });
    },
    get C40() {
      return C[40] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "CloseButton",
        [S._Location_column]: 9,
        [S._Location_line]: 131,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/back_button.dart"
      });
    },
    get C42() {
      return C[42] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Icon",
        [S._Location_column]: 19,
        [S._Location_line]: 153,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/back_button.dart"
      });
    },
    get C43() {
      return C[43] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [S.IconData_matchTextDirection]: false,
        [S.IconData_fontPackage]: null,
        [S.IconData_fontFamily]: "MaterialIcons",
        [S.IconData_codePoint]: 57706
      });
    },
    get C41() {
      return C[41] = dart.const({
        __proto__: icon.Icon.prototype,
        [S.Widget__location]: C[42] || CT.C42,
        [S.Widget_key]: null,
        [S.Icon_shadows]: null,
        [S.Icon_textDirection]: null,
        [S.Icon_semanticLabel]: null,
        [S.Icon_color]: null,
        [S.Icon_size]: null,
        [S.Icon_icon]: C[43] || CT.C43
      });
    },
    get C44() {
      return C[44] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "IconButton",
        [S._Location_column]: 12,
        [S._Location_line]: 152,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/back_button.dart"
      });
    },
    get C46() {
      return C[46] = dart.const({
        __proto__: time$.DayPeriod.prototype,
        [S._Enum__name]: "am",
        [S._Enum_index]: 0
      });
    },
    get C47() {
      return C[47] = dart.const({
        __proto__: time$.DayPeriod.prototype,
        [S._Enum__name]: "pm",
        [S._Enum_index]: 1
      });
    },
    get C45() {
      return C[45] = dart.constList([C[46] || CT.C46, C[47] || CT.C47], time$.DayPeriod);
    },
    get C49() {
      return C[49] = dart.const({
        __proto__: time$.TimeOfDayFormat.prototype,
        [S._Enum__name]: "HH_colon_mm",
        [S._Enum_index]: 0
      });
    },
    get C50() {
      return C[50] = dart.const({
        __proto__: time$.TimeOfDayFormat.prototype,
        [S._Enum__name]: "HH_dot_mm",
        [S._Enum_index]: 1
      });
    },
    get C51() {
      return C[51] = dart.const({
        __proto__: time$.TimeOfDayFormat.prototype,
        [S._Enum__name]: "frenchCanadian",
        [S._Enum_index]: 2
      });
    },
    get C52() {
      return C[52] = dart.const({
        __proto__: time$.TimeOfDayFormat.prototype,
        [S._Enum__name]: "H_colon_mm",
        [S._Enum_index]: 3
      });
    },
    get C53() {
      return C[53] = dart.const({
        __proto__: time$.TimeOfDayFormat.prototype,
        [S._Enum__name]: "h_colon_mm_space_a",
        [S._Enum_index]: 4
      });
    },
    get C54() {
      return C[54] = dart.const({
        __proto__: time$.TimeOfDayFormat.prototype,
        [S._Enum__name]: "a_space_h_colon_mm",
        [S._Enum_index]: 5
      });
    },
    get C48() {
      return C[48] = dart.constList([C[49] || CT.C49, C[50] || CT.C50, C[51] || CT.C51, C[52] || CT.C52, C[53] || CT.C53, C[54] || CT.C54], time$.TimeOfDayFormat);
    },
    get C56() {
      return C[56] = dart.const({
        __proto__: time$.HourFormat.prototype,
        [S._Enum__name]: "HH",
        [S._Enum_index]: 0
      });
    },
    get C57() {
      return C[57] = dart.const({
        __proto__: time$.HourFormat.prototype,
        [S._Enum__name]: "H",
        [S._Enum_index]: 1
      });
    },
    get C58() {
      return C[58] = dart.const({
        __proto__: time$.HourFormat.prototype,
        [S._Enum__name]: "h",
        [S._Enum_index]: 2
      });
    },
    get C55() {
      return C[55] = dart.constList([C[56] || CT.C56, C[57] || CT.C57, C[58] || CT.C58], time$.HourFormat);
    },
    get C59() {
      return C[59] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Align",
        [S._Location_column]: 22,
        [S._Location_line]: 399,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/button_style_button.dart"
      });
    },
    get C60() {
      return C[60] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Padding",
        [S._Location_column]: 20,
        [S._Location_line]: 397,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/button_style_button.dart"
      });
    },
    get C61() {
      return C[61] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "InkWell",
        [S._Location_column]: 16,
        [S._Location_line]: 380,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/button_style_button.dart"
      });
    },
    get C62() {
      return C[62] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Material",
        [S._Location_column]: 14,
        [S._Location_line]: 370,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/button_style_button.dart"
      });
    },
    get C63() {
      return C[63] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ConstrainedBox",
        [S._Location_column]: 27,
        [S._Location_line]: 368,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/button_style_button.dart"
      });
    },
    get C64() {
      return C[64] = dart.const({
        __proto__: theme_data.MaterialTapTargetSize.prototype,
        [S._Enum__name]: "padded",
        [S._Enum_index]: 0
      });
    },
    get C65() {
      return C[65] = dart.const({
        __proto__: theme_data.MaterialTapTargetSize.prototype,
        [S._Enum__name]: "shrinkWrap",
        [S._Enum_index]: 1
      });
    },
    get C66() {
      return C[66] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_InputPadding",
        [S._Location_column]: 14,
        [S._Location_line]: 430,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/button_style_button.dart"
      });
    },
    get C67() {
      return C[67] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 12,
        [S._Location_line]: 426,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/button_style_button.dart"
      });
    },
    get C68() {
      return C[68] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_InputPadding",
        [S._Location_column]: 9,
        [S._Location_line]: 456,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/button_style_button.dart"
      });
    },
    get C69() {
      return C[69] = dart.fn(layout_helper.ChildLayoutHelper.dryLayoutChild, T$.RenderBoxAndBoxConstraintsToSize());
    },
    get C70() {
      return C[70] = dart.fn(layout_helper.ChildLayoutHelper.layoutChild, T$.RenderBoxAndBoxConstraintsToSize());
    },
    get C71() {
      return C[71] = dart.const({
        __proto__: ui.Clip.prototype,
        [S._Enum__name]: "none",
        [S._Enum_index]: 0
      });
    },
    get C72() {
      return C[72] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "TextButton",
        [S._Location_column]: 9,
        [S._Location_line]: 77,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/text_button.dart"
      });
    },
    get C73() {
      return C[73] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_TextButtonWithIcon",
        [S._Location_column]: 11,
        [S._Location_line]: 98,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/text_button.dart"
      });
    },
    get C74() {
      return C[74] = dart.const({
        __proto__: ui.Size.prototype,
        [S.OffsetBase__dy]: 36,
        [S.OffsetBase__dx]: 64
      });
    },
    get C77() {
      return C[77] = dart.const({
        __proto__: ui.Radius.prototype,
        [S.Radius_y]: 4,
        [S.Radius_x]: 4
      });
    },
    get C76() {
      return C[76] = dart.const({
        __proto__: border_radius.BorderRadius.prototype,
        [S.BorderRadius_bottomRight]: C[77] || CT.C77,
        [S.BorderRadius_bottomLeft]: C[77] || CT.C77,
        [S.BorderRadius_topRight]: C[77] || CT.C77,
        [S.BorderRadius_topLeft]: C[77] || CT.C77
      });
    },
    get C75() {
      return C[75] = dart.const({
        __proto__: rounded_rectangle_border.RoundedRectangleBorder.prototype,
        [S.OutlinedBorder_side]: C[18] || CT.C18,
        [S.RoundedRectangleBorder_borderRadius]: C[76] || CT.C76
      });
    },
    get C78() {
      return C[78] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_TextButtonWithIconChild",
        [S._Location_column]: 17,
        [S._Location_line]: 449,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/text_button.dart"
      });
    },
    get C79() {
      return C[79] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_TextButtonWithIcon",
        [S._Location_column]: 3,
        [S._Location_line]: 432,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/text_button.dart"
      });
    },
    get C80() {
      return C[80] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 0,
        [S.EdgeInsets_right]: 4,
        [S.EdgeInsets_top]: 0,
        [S.EdgeInsets_left]: 4
      });
    },
    get C81() {
      return C[81] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_TextButtonWithIconChild",
        [S._Location_column]: 9,
        [S._Location_line]: 467,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/text_button.dart"
      });
    },
    get C82() {
      return C[82] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SizedBox",
        [S._Location_column]: 32,
        [S._Location_line]: 481,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/text_button.dart"
      });
    },
    get C83() {
      return C[83] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Flexible",
        [S._Location_column]: 54,
        [S._Location_line]: 481,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/text_button.dart"
      });
    },
    get C84() {
      return C[84] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Row",
        [S._Location_column]: 12,
        [S._Location_line]: 479,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/text_button.dart"
      });
    },
    get C85() {
      return C[85] = dart.const({
        __proto__: ui.Size.prototype,
        [S.OffsetBase__dy]: 40,
        [S.OffsetBase__dx]: 64
      });
    },
    get C86() {
      return C[86] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 0,
        [S.EdgeInsets_right]: 8,
        [S.EdgeInsets_top]: 0,
        [S.EdgeInsets_left]: 8
      });
    },
    get C88() {
      return C[88] = dart.const({
        __proto__: snack_bar.SnackBarClosedReason.prototype,
        [S._Enum__name]: "action",
        [S._Enum_index]: 0
      });
    },
    get C89() {
      return C[89] = dart.const({
        __proto__: snack_bar.SnackBarClosedReason.prototype,
        [S._Enum__name]: "dismiss",
        [S._Enum_index]: 1
      });
    },
    get C90() {
      return C[90] = dart.const({
        __proto__: snack_bar.SnackBarClosedReason.prototype,
        [S._Enum__name]: "swipe",
        [S._Enum_index]: 2
      });
    },
    get C91() {
      return C[91] = dart.const({
        __proto__: snack_bar.SnackBarClosedReason.prototype,
        [S._Enum__name]: "hide",
        [S._Enum_index]: 3
      });
    },
    get C92() {
      return C[92] = dart.const({
        __proto__: snack_bar.SnackBarClosedReason.prototype,
        [S._Enum__name]: "remove",
        [S._Enum_index]: 4
      });
    },
    get C93() {
      return C[93] = dart.const({
        __proto__: snack_bar.SnackBarClosedReason.prototype,
        [S._Enum__name]: "timeout",
        [S._Enum_index]: 5
      });
    },
    get C87() {
      return C[87] = dart.constList([C[88] || CT.C88, C[89] || CT.C89, C[90] || CT.C90, C[91] || CT.C91, C[92] || CT.C92, C[93] || CT.C93], snack_bar.SnackBarClosedReason);
    },
    get C94() {
      return C[94] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SnackBarAction",
        [S._Location_column]: 9,
        [S._Location_line]: 84,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C95() {
      return C[95] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Text",
        [S._Location_column]: 14,
        [S._Location_line]: 143,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C96() {
      return C[96] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "TextButton",
        [S._Location_column]: 12,
        [S._Location_line]: 138,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C97() {
      return C[97] = dart.const({
        __proto__: core.Duration.prototype,
        [S.Duration__duration]: 4000000
      });
    },
    get C98() {
      return C[98] = dart.const({
        __proto__: dismissible.DismissDirection.prototype,
        [S._Enum__name]: "down",
        [S._Enum_index]: 5
      });
    },
    get C99() {
      return C[99] = dart.const({
        __proto__: ui.Clip.prototype,
        [S._Enum__name]: "hardEdge",
        [S._Enum_index]: 1
      });
    },
    get C100() {
      return C[100] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SnackBar",
        [S._Location_column]: 9,
        [S._Location_line]: 193,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C101() {
      return C[101] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SnackBar",
        [S._Location_column]: 12,
        [S._Location_line]: 362,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C102() {
      return C[102] = dart.const({
        __proto__: animation$.AnimationStatus.prototype,
        [S._Enum__name]: "dismissed",
        [S._Enum_index]: 0
      });
    },
    get C103() {
      return C[103] = dart.const({
        __proto__: animation$.AnimationStatus.prototype,
        [S._Enum__name]: "forward",
        [S._Enum_index]: 1
      });
    },
    get C104() {
      return C[104] = dart.const({
        __proto__: animation$.AnimationStatus.prototype,
        [S._Enum__name]: "reverse",
        [S._Enum_index]: 2
      });
    },
    get C105() {
      return C[105] = dart.const({
        __proto__: animation$.AnimationStatus.prototype,
        [S._Enum__name]: "completed",
        [S._Enum_index]: 3
      });
    },
    get C106() {
      return C[106] = dart.const({
        __proto__: curves.Threshold.prototype,
        [S.Threshold_threshold]: 0
      });
    },
    get C107() {
      return C[107] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 14,
        [S.EdgeInsets_right]: 0,
        [S.EdgeInsets_top]: 14,
        [S.EdgeInsets_left]: 0
      });
    },
    get C108() {
      return C[108] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "DefaultTextStyle",
        [S._Location_column]: 22,
        [S._Location_line]: 502,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C109() {
      return C[109] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Container",
        [S._Location_column]: 20,
        [S._Location_line]: 500,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C110() {
      return C[110] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Expanded",
        [S._Location_column]: 11,
        [S._Location_line]: 499,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C111() {
      return C[111] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "TextButtonTheme",
        [S._Location_column]: 22,
        [S._Location_line]: 511,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C112() {
      return C[112] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Padding",
        [S._Location_column]: 13,
        [S._Location_line]: 509,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C113() {
      return C[113] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Row",
        [S._Location_column]: 14,
        [S._Location_line]: 497,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C114() {
      return C[114] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Padding",
        [S._Location_column]: 23,
        [S._Location_line]: 495,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C115() {
      return C[115] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SafeArea",
        [S._Location_column]: 18,
        [S._Location_line]: 526,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C116() {
      return C[116] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "FadeTransition",
        [S._Location_column]: 15,
        [S._Location_line]: 546,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C117() {
      return C[117] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Theme",
        [S._Location_column]: 14,
        [S._Location_line]: 542,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C118() {
      return C[118] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Material",
        [S._Location_column]: 16,
        [S._Location_line]: 538,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C119() {
      return C[119] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 10,
        [S.EdgeInsets_right]: 0,
        [S.EdgeInsets_top]: 5,
        [S.EdgeInsets_left]: 0
      });
    },
    get C120() {
      return C[120] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Container",
        [S._Location_column]: 20,
        [S._Location_line]: 558,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C121() {
      return C[121] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 10,
        [S.EdgeInsets_right]: 15,
        [S.EdgeInsets_top]: 5,
        [S.EdgeInsets_left]: 15
      });
    },
    get C122() {
      return C[122] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Padding",
        [S._Location_column]: 20,
        [S._Location_line]: 565,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C123() {
      return C[123] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SafeArea",
        [S._Location_column]: 18,
        [S._Location_line]: 575,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C124() {
      return C[124] = dart.const({
        __proto__: T$.ValueKeyOfString().prototype,
        [S.ValueKey_value]: "dismissible"
      });
    },
    get C125() {
      return C[125] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Dismissible",
        [S._Location_column]: 14,
        [S._Location_line]: 588,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C126() {
      return C[126] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 16,
        [S._Location_line]: 582,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C127() {
      return C[127] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "FadeTransition",
        [S._Location_column]: 28,
        [S._Location_line]: 603,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C128() {
      return C[128] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Align",
        [S._Location_column]: 18,
        [S._Location_line]: 611,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C129() {
      return C[129] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "AnimatedBuilder",
        [S._Location_column]: 28,
        [S._Location_line]: 608,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C130() {
      return C[130] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ClipRect",
        [S._Location_column]: 14,
        [S._Location_line]: 623,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C131() {
      return C[131] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Hero",
        [S._Location_column]: 12,
        [S._Location_line]: 621,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/snack_bar.dart"
      });
    },
    get C132() {
      return C[132] = dart.const({
        __proto__: core.Duration.prototype,
        [S.Duration__duration]: 250000
      });
    },
    get C133() {
      return C[133] = dart.const({
        __proto__: curves.Cubic.prototype,
        [S.Cubic_d]: 1,
        [S.Cubic_c]: 0.2,
        [S.Cubic_b]: 0,
        [S.Cubic_a]: 0.4
      });
    },
    get C134() {
      return C[134] = dart.const({
        __proto__: curves.Interval.prototype,
        [S.Interval_curve]: C[133] || CT.C133,
        [S.Interval_end]: 1,
        [S.Interval_begin]: 0.45
      });
    },
    get C135() {
      return C[135] = dart.const({
        __proto__: curves.Interval.prototype,
        [S.Interval_curve]: C[133] || CT.C133,
        [S.Interval_end]: 1,
        [S.Interval_begin]: 0.72
      });
    },
    get C136() {
      return C[136] = dart.const({
        __proto__: floating_action_button_location._StartTopFabLocation.prototype
      });
    },
    get C137() {
      return C[137] = dart.const({
        __proto__: floating_action_button_location._MiniStartTopFabLocation.prototype
      });
    },
    get C138() {
      return C[138] = dart.const({
        __proto__: floating_action_button_location._CenterTopFabLocation.prototype
      });
    },
    get C139() {
      return C[139] = dart.const({
        __proto__: floating_action_button_location._MiniCenterTopFabLocation.prototype
      });
    },
    get C140() {
      return C[140] = dart.const({
        __proto__: floating_action_button_location._EndTopFabLocation.prototype
      });
    },
    get C141() {
      return C[141] = dart.const({
        __proto__: floating_action_button_location._MiniEndTopFabLocation.prototype
      });
    },
    get C142() {
      return C[142] = dart.const({
        __proto__: floating_action_button_location._StartFloatFabLocation.prototype
      });
    },
    get C143() {
      return C[143] = dart.const({
        __proto__: floating_action_button_location._MiniStartFloatFabLocation.prototype
      });
    },
    get C144() {
      return C[144] = dart.const({
        __proto__: floating_action_button_location._CenterFloatFabLocation.prototype
      });
    },
    get C145() {
      return C[145] = dart.const({
        __proto__: floating_action_button_location._MiniCenterFloatFabLocation.prototype
      });
    },
    get C146() {
      return C[146] = dart.const({
        __proto__: floating_action_button_location._EndFloatFabLocation.prototype
      });
    },
    get C147() {
      return C[147] = dart.const({
        __proto__: floating_action_button_location._MiniEndFloatFabLocation.prototype
      });
    },
    get C148() {
      return C[148] = dart.const({
        __proto__: floating_action_button_location._StartDockedFabLocation.prototype
      });
    },
    get C149() {
      return C[149] = dart.const({
        __proto__: floating_action_button_location._MiniStartDockedFabLocation.prototype
      });
    },
    get C150() {
      return C[150] = dart.const({
        __proto__: floating_action_button_location._CenterDockedFabLocation.prototype
      });
    },
    get C151() {
      return C[151] = dart.const({
        __proto__: floating_action_button_location._MiniCenterDockedFabLocation.prototype
      });
    },
    get C152() {
      return C[152] = dart.const({
        __proto__: floating_action_button_location._EndDockedFabLocation.prototype
      });
    },
    get C153() {
      return C[153] = dart.const({
        __proto__: floating_action_button_location._MiniEndDockedFabLocation.prototype
      });
    },
    get C154() {
      return C[154] = dart.const({
        __proto__: ui.TextDirection.prototype,
        [S._Enum__name]: "rtl",
        [S._Enum_index]: 0
      });
    },
    get C155() {
      return C[155] = dart.const({
        __proto__: ui.TextDirection.prototype,
        [S._Enum__name]: "ltr",
        [S._Enum_index]: 1
      });
    },
    get C156() {
      return C[156] = dart.const({
        __proto__: floating_action_button_location._ScalingFabMotionAnimator.prototype
      });
    },
    get C158() {
      return C[158] = dart.const({
        __proto__: curves.Cubic.prototype,
        [S.Cubic_d]: 1,
        [S.Cubic_c]: 0.25,
        [S.Cubic_b]: 0.1,
        [S.Cubic_a]: 0.25
      });
    },
    get C157() {
      return C[157] = dart.const({
        __proto__: curves.Interval.prototype,
        [S.Interval_curve]: C[158] || CT.C158,
        [S.Interval_end]: 1,
        [S.Interval_begin]: 0.5
      });
    },
    get C159() {
      return C[159] = dart.const({
        __proto__: curves.Threshold.prototype,
        [S.Threshold_threshold]: 0.5
      });
    },
    get C160() {
      return C[160] = dart.const({
        __proto__: core.Duration.prototype,
        [S.Duration__duration]: 200000
      });
    },
    get C162() {
      return C[162] = dart.const({
        __proto__: floating_action_button._FloatingActionButtonType.prototype,
        [S._Enum__name]: "regular",
        [S._Enum_index]: 0
      });
    },
    get C163() {
      return C[163] = dart.const({
        __proto__: floating_action_button._FloatingActionButtonType.prototype,
        [S._Enum__name]: "small",
        [S._Enum_index]: 1
      });
    },
    get C164() {
      return C[164] = dart.const({
        __proto__: floating_action_button._FloatingActionButtonType.prototype,
        [S._Enum__name]: "large",
        [S._Enum_index]: 2
      });
    },
    get C165() {
      return C[165] = dart.const({
        __proto__: floating_action_button._FloatingActionButtonType.prototype,
        [S._Enum__name]: "extended",
        [S._Enum_index]: 3
      });
    },
    get C161() {
      return C[161] = dart.constList([C[162] || CT.C162, C[163] || CT.C163, C[164] || CT.C164, C[165] || CT.C165], floating_action_button._FloatingActionButtonType);
    },
    get C166() {
      return C[166] = dart.const({
        __proto__: floating_action_button._DefaultHeroTag.prototype
      });
    },
    get C167() {
      return C[167] = dart.const({
        __proto__: mouse_cursor.SystemMouseCursor.prototype,
        [S.SystemMouseCursor_kind]: "click"
      });
    },
    get C168() {
      return C[168] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "FloatingActionButton",
        [S._Location_column]: 9,
        [S._Location_line]: 99,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/floating_action_button.dart"
      });
    },
    get C169() {
      return C[169] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "FloatingActionButton",
        [S._Location_column]: 9,
        [S._Location_line]: 148,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/floating_action_button.dart"
      });
    },
    get C170() {
      return C[170] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "FloatingActionButton",
        [S._Location_column]: 9,
        [S._Location_line]: 195,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/floating_action_button.dart"
      });
    },
    get C171() {
      return C[171] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "FloatingActionButton",
        [S._Location_column]: 9,
        [S._Location_line]: 242,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/floating_action_button.dart"
      });
    },
    get C172() {
      return C[172] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SizedBox",
        [S._Location_column]: 21,
        [S._Location_line]: 594,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/floating_action_button.dart"
      });
    },
    get C173() {
      return C[173] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Row",
        [S._Location_column]: 20,
        [S._Location_line]: 588,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/floating_action_button.dart"
      });
    },
    get C174() {
      return C[174] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Padding",
        [S._Location_column]: 18,
        [S._Location_line]: 586,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/floating_action_button.dart"
      });
    },
    get C175() {
      return C[175] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_ChildOverflowBox",
        [S._Location_column]: 25,
        [S._Location_line]: 585,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/floating_action_button.dart"
      });
    },
    get C176() {
      return C[176] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "RawMaterialButton",
        [S._Location_column]: 21,
        [S._Location_line]: 604,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/floating_action_button.dart"
      });
    },
    get C177() {
      return C[177] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Tooltip",
        [S._Location_column]: 16,
        [S._Location_line]: 628,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/floating_action_button.dart"
      });
    },
    get C178() {
      return C[178] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Hero",
        [S._Location_column]: 16,
        [S._Location_line]: 635,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/floating_action_button.dart"
      });
    },
    get C179() {
      return C[179] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "MergeSemantics",
        [S._Location_column]: 12,
        [S._Location_line]: 641,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/floating_action_button.dart"
      });
    },
    get C180() {
      return C[180] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_ChildOverflowBox",
        [S._Location_column]: 9,
        [S._Location_line]: 673,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/floating_action_button.dart"
      });
    },
    get C181() {
      return C[181] = dart.const({
        __proto__: box$.BoxConstraints.prototype,
        [S.BoxConstraints_maxHeight]: 1 / 0,
        [S.BoxConstraints_minHeight]: 0,
        [S.BoxConstraints_maxWidth]: 1 / 0,
        [S.BoxConstraints_minWidth]: 0
      });
    },
    get C182() {
      return C[182] = dart.const({
        __proto__: box$.BoxConstraints.prototype,
        [S.BoxConstraints_maxHeight]: 56,
        [S.BoxConstraints_minHeight]: 56,
        [S.BoxConstraints_maxWidth]: 56,
        [S.BoxConstraints_minWidth]: 56
      });
    },
    get C183() {
      return C[183] = dart.const({
        __proto__: box$.BoxConstraints.prototype,
        [S.BoxConstraints_maxHeight]: 40,
        [S.BoxConstraints_minHeight]: 40,
        [S.BoxConstraints_maxWidth]: 40,
        [S.BoxConstraints_minWidth]: 40
      });
    },
    get C184() {
      return C[184] = dart.const({
        __proto__: box$.BoxConstraints.prototype,
        [S.BoxConstraints_maxHeight]: 96,
        [S.BoxConstraints_minHeight]: 96,
        [S.BoxConstraints_maxWidth]: 96,
        [S.BoxConstraints_minWidth]: 96
      });
    },
    get C185() {
      return C[185] = dart.const({
        __proto__: box$.BoxConstraints.prototype,
        [S.BoxConstraints_maxHeight]: 48,
        [S.BoxConstraints_minHeight]: 48,
        [S.BoxConstraints_maxWidth]: 1 / 0,
        [S.BoxConstraints_minWidth]: 0
      });
    },
    get C186() {
      return C[186] = dart.const({
        __proto__: circle_border.CircleBorder.prototype,
        [S.OutlinedBorder_side]: C[18] || CT.C18
      });
    },
    get C187() {
      return C[187] = dart.const({
        __proto__: box$.BoxConstraints.prototype,
        [S.BoxConstraints_maxHeight]: 56,
        [S.BoxConstraints_minHeight]: 56,
        [S.BoxConstraints_maxWidth]: 1 / 0,
        [S.BoxConstraints_minWidth]: 0
      });
    },
    get C190() {
      return C[190] = dart.const({
        __proto__: ui.Radius.prototype,
        [S.Radius_y]: 16,
        [S.Radius_x]: 16
      });
    },
    get C189() {
      return C[189] = dart.const({
        __proto__: border_radius.BorderRadius.prototype,
        [S.BorderRadius_bottomRight]: C[190] || CT.C190,
        [S.BorderRadius_bottomLeft]: C[190] || CT.C190,
        [S.BorderRadius_topRight]: C[190] || CT.C190,
        [S.BorderRadius_topLeft]: C[190] || CT.C190
      });
    },
    get C188() {
      return C[188] = dart.const({
        __proto__: rounded_rectangle_border.RoundedRectangleBorder.prototype,
        [S.OutlinedBorder_side]: C[18] || CT.C18,
        [S.RoundedRectangleBorder_borderRadius]: C[189] || CT.C189
      });
    },
    get C193() {
      return C[193] = dart.const({
        __proto__: ui.Radius.prototype,
        [S.Radius_y]: 12,
        [S.Radius_x]: 12
      });
    },
    get C192() {
      return C[192] = dart.const({
        __proto__: border_radius.BorderRadius.prototype,
        [S.BorderRadius_bottomRight]: C[193] || CT.C193,
        [S.BorderRadius_bottomLeft]: C[193] || CT.C193,
        [S.BorderRadius_topRight]: C[193] || CT.C193,
        [S.BorderRadius_topLeft]: C[193] || CT.C193
      });
    },
    get C191() {
      return C[191] = dart.const({
        __proto__: rounded_rectangle_border.RoundedRectangleBorder.prototype,
        [S.OutlinedBorder_side]: C[18] || CT.C18,
        [S.RoundedRectangleBorder_borderRadius]: C[192] || CT.C192
      });
    },
    get C196() {
      return C[196] = dart.const({
        __proto__: ui.Radius.prototype,
        [S.Radius_y]: 28,
        [S.Radius_x]: 28
      });
    },
    get C195() {
      return C[195] = dart.const({
        __proto__: border_radius.BorderRadius.prototype,
        [S.BorderRadius_bottomRight]: C[196] || CT.C196,
        [S.BorderRadius_bottomLeft]: C[196] || CT.C196,
        [S.BorderRadius_topRight]: C[196] || CT.C196,
        [S.BorderRadius_topLeft]: C[196] || CT.C196
      });
    },
    get C194() {
      return C[194] = dart.const({
        __proto__: rounded_rectangle_border.RoundedRectangleBorder.prototype,
        [S.OutlinedBorder_side]: C[18] || CT.C18,
        [S.RoundedRectangleBorder_borderRadius]: C[195] || CT.C195
      });
    },
    get C198() {
      return C[198] = dart.const({
        __proto__: flexible_space_bar.CollapseMode.prototype,
        [S._Enum__name]: "parallax",
        [S._Enum_index]: 0
      });
    },
    get C199() {
      return C[199] = dart.const({
        __proto__: flexible_space_bar.CollapseMode.prototype,
        [S._Enum__name]: "pin",
        [S._Enum_index]: 1
      });
    },
    get C200() {
      return C[200] = dart.const({
        __proto__: flexible_space_bar.CollapseMode.prototype,
        [S._Enum__name]: "none",
        [S._Enum_index]: 2
      });
    },
    get C197() {
      return C[197] = dart.constList([C[198] || CT.C198, C[199] || CT.C199, C[200] || CT.C200], flexible_space_bar.CollapseMode);
    },
    get C202() {
      return C[202] = dart.const({
        __proto__: flexible_space_bar.StretchMode.prototype,
        [S._Enum__name]: "zoomBackground",
        [S._Enum_index]: 0
      });
    },
    get C203() {
      return C[203] = dart.const({
        __proto__: flexible_space_bar.StretchMode.prototype,
        [S._Enum__name]: "blurBackground",
        [S._Enum_index]: 1
      });
    },
    get C204() {
      return C[204] = dart.const({
        __proto__: flexible_space_bar.StretchMode.prototype,
        [S._Enum__name]: "fadeTitle",
        [S._Enum_index]: 2
      });
    },
    get C201() {
      return C[201] = dart.constList([C[202] || CT.C202, C[203] || CT.C203, C[204] || CT.C204], flexible_space_bar.StretchMode);
    },
    get C205() {
      return C[205] = dart.constList([C[202] || CT.C202], flexible_space_bar.StretchMode);
    },
    get C206() {
      return C[206] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "FlexibleSpaceBar",
        [S._Location_column]: 9,
        [S._Location_line]: 78,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C207() {
      return C[207] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "FlexibleSpaceBarSettings",
        [S._Location_column]: 12,
        [S._Location_line]: 163,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C208() {
      return C[208] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Opacity",
        [S._Location_column]: 20,
        [S._Location_line]: 261,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C209() {
      return C[209] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Positioned",
        [S._Location_column]: 24,
        [S._Location_line]: 256,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C210() {
      return C[210] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Container",
        [S._Location_column]: 24,
        [S._Location_line]: 280,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C211() {
      return C[211] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "BackdropFilter",
        [S._Location_column]: 22,
        [S._Location_line]: 275,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C212() {
      return C[212] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Positioned",
        [S._Location_column]: 37,
        [S._Location_line]: 274,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C213() {
      return C[213] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 23,
        [S._Location_line]: 302,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C214() {
      return C[214] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Opacity",
        [S._Location_column]: 21,
        [S._Location_line]: 317,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C215() {
      return C[215] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Container",
        [S._Location_column]: 32,
        [S._Location_line]: 350,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C216() {
      return C[216] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "LayoutBuilder",
        [S._Location_column]: 28,
        [S._Location_line]: 348,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C217() {
      return C[217] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "DefaultTextStyle",
        [S._Location_column]: 26,
        [S._Location_line]: 346,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C218() {
      return C[218] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Align",
        [S._Location_column]: 24,
        [S._Location_line]: 344,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C219() {
      return C[219] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Transform",
        [S._Location_column]: 22,
        [S._Location_line]: 341,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C220() {
      return C[220] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Container",
        [S._Location_column]: 26,
        [S._Location_line]: 339,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C221() {
      return C[221] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Stack",
        [S._Location_column]: 32,
        [S._Location_line]: 364,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C222() {
      return C[222] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ClipRect",
        [S._Location_column]: 16,
        [S._Location_line]: 364,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C223() {
      return C[223] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "LayoutBuilder",
        [S._Location_column]: 12,
        [S._Location_line]: 223,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C224() {
      return C[224] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "FlexibleSpaceBarSettings",
        [S._Location_column]: 9,
        [S._Location_line]: 383,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart"
      });
    },
    get C225() {
      return C[225] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ToggleButtonsTheme",
        [S._Location_column]: 9,
        [S._Location_line]: 249,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/toggle_buttons_theme.dart"
      });
    },
    get C226() {
      return C[226] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ToggleButtonsTheme",
        [S._Location_column]: 12,
        [S._Location_line]: 275,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/toggle_buttons_theme.dart"
      });
    },
    get C227() {
      return C[227] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "TimePickerTheme",
        [S._Location_column]: 9,
        [S._Location_line]: 361,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/time_picker_theme.dart"
      });
    },
    get C228() {
      return C[228] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "TimePickerTheme",
        [S._Location_column]: 12,
        [S._Location_line]: 387,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/time_picker_theme.dart"
      });
    },
    get C230() {
      return C[230] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_NullWidget",
        [S._Location_column]: 27,
        [S._Location_line]: 150,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/text_selection_theme.dart"
      });
    },
    get C229() {
      return C[229] = dart.const({
        __proto__: text_selection_theme._NullWidget.prototype,
        [S.Widget__location]: C[230] || CT.C230,
        [S.Widget_key]: null
      });
    },
    get C231() {
      return C[231] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "TextSelectionTheme",
        [S._Location_column]: 9,
        [S._Location_line]: 143,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/text_selection_theme.dart"
      });
    },
    get C232() {
      return C[232] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "DefaultSelectionStyle",
        [S._Location_column]: 12,
        [S._Location_line]: 161,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/text_selection_theme.dart"
      });
    },
    get C233() {
      return C[233] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "TextSelectionTheme",
        [S._Location_column]: 12,
        [S._Location_line]: 185,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/text_selection_theme.dart"
      });
    },
    get C234() {
      return C[234] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_NullWidget",
        [S._Location_column]: 9,
        [S._Location_line]: 193,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/text_selection_theme.dart"
      });
    },
    get C235() {
      return C[235] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "TextButtonTheme",
        [S._Location_column]: 9,
        [S._Location_line]: 94,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/text_button_theme.dart"
      });
    },
    get C236() {
      return C[236] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "TextButtonTheme",
        [S._Location_column]: 12,
        [S._Location_line]: 120,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/text_button_theme.dart"
      });
    },
    get C238() {
      return C[238] = dart.const({
        __proto__: tabs$.TabBarIndicatorSize.prototype,
        [S._Enum__name]: "tab",
        [S._Enum_index]: 0
      });
    },
    get C239() {
      return C[239] = dart.const({
        __proto__: tabs$.TabBarIndicatorSize.prototype,
        [S._Enum__name]: "label",
        [S._Enum_index]: 1
      });
    },
    get C237() {
      return C[237] = dart.constList([C[238] || CT.C238, C[239] || CT.C239], tabs$.TabBarIndicatorSize);
    },
    get C240() {
      return C[240] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 10,
        [S.EdgeInsets_right]: 0,
        [S.EdgeInsets_top]: 0,
        [S.EdgeInsets_left]: 0
      });
    },
    get C241() {
      return C[241] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Tab",
        [S._Location_column]: 9,
        [S._Location_line]: 68,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C242() {
      return C[242] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Text",
        [S._Location_column]: 21,
        [S._Location_line]: 107,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C243() {
      return C[243] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Container",
        [S._Location_column]: 11,
        [S._Location_line]: 127,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C244() {
      return C[244] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Column",
        [S._Location_column]: 15,
        [S._Location_line]: 124,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C245() {
      return C[245] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Center",
        [S._Location_column]: 14,
        [S._Location_line]: 138,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C246() {
      return C[246] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SizedBox",
        [S._Location_column]: 12,
        [S._Location_line]: 136,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C247() {
      return C[247] = dart.const({
        __proto__: ui.Size.prototype,
        [S.OffsetBase__dy]: 72,
        [S.OffsetBase__dx]: 1 / 0
      });
    },
    get C248() {
      return C[248] = dart.const({
        __proto__: ui.Size.prototype,
        [S.OffsetBase__dy]: 46,
        [S.OffsetBase__dx]: 1 / 0
      });
    },
    get C249() {
      return C[249] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_TabStyle",
        [S._Location_column]: 9,
        [S._Location_line]: 165,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C250() {
      return C[250] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "DefaultTextStyle",
        [S._Location_column]: 12,
        [S._Location_line]: 213,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C251() {
      return C[251] = dart.constList([], framework.Widget);
    },
    get C252() {
      return C[252] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_TabLabelBar",
        [S._Location_column]: 3,
        [S._Location_line]: 274,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C253() {
      return C[253] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 0,
        [S.EdgeInsets_right]: 0,
        [S.EdgeInsets_top]: 0,
        [S.EdgeInsets_left]: 0
      });
    },
    get C254() {
      return C[254] = dart.const({
        __proto__: recognizer.DragStartBehavior.prototype,
        [S._Enum__name]: "start",
        [S._Enum_index]: 1
      });
    },
    get C255() {
      return C[255] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "TabBar",
        [S._Location_column]: 9,
        [S._Location_line]: 612,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C256() {
      return C[256] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_TabStyle",
        [S._Location_column]: 12,
        [S._Location_line]: 1140,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C257() {
      return C[257] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Container",
        [S._Location_column]: 14,
        [S._Location_line]: 1181,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C258() {
      return C[258] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 13,
        [S.EdgeInsets_right]: 0,
        [S.EdgeInsets_top]: 13,
        [S.EdgeInsets_left]: 0
      });
    },
    get C259() {
      return C[259] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 13,
        [S.EdgeInsets_right]: 16,
        [S.EdgeInsets_top]: 13,
        [S.EdgeInsets_left]: 16
      });
    },
    get C260() {
      return C[260] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "KeyedSubtree",
        [S._Location_column]: 18,
        [S._Location_line]: 1208,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C261() {
      return C[261] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Padding",
        [S._Location_column]: 16,
        [S._Location_line]: 1206,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C262() {
      return C[262] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Center",
        [S._Location_column]: 14,
        [S._Location_line]: 1204,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C263() {
      return C[263] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 15,
        [S._Location_line]: 1271,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C264() {
      return C[264] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Stack",
        [S._Location_column]: 18,
        [S._Location_line]: 1268,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C265() {
      return C[265] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Padding",
        [S._Location_column]: 16,
        [S._Location_line]: 1266,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C266() {
      return C[266] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "InkWell",
        [S._Location_column]: 28,
        [S._Location_line]: 1259,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C267() {
      return C[267] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Expanded",
        [S._Location_column]: 30,
        [S._Location_line]: 1280,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C268() {
      return C[268] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_TabLabelBar",
        [S._Location_column]: 16,
        [S._Location_line]: 1293,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C269() {
      return C[269] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_TabStyle",
        [S._Location_column]: 14,
        [S._Location_line]: 1286,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C270() {
      return C[270] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "CustomPaint",
        [S._Location_column]: 21,
        [S._Location_line]: 1284,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C271() {
      return C[271] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SingleChildScrollView",
        [S._Location_column]: 16,
        [S._Location_line]: 1302,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C272() {
      return C[272] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Padding",
        [S._Location_column]: 16,
        [S._Location_line]: 1311,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C273() {
      return C[273] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "TabBarView",
        [S._Location_column]: 9,
        [S._Location_line]: 1339,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C274() {
      return C[274] = dart.const({
        __proto__: page_view.PageScrollPhysics.prototype,
        [S.ScrollPhysics_parent]: null
      });
    },
    get C275() {
      return C[275] = dart.const({
        __proto__: scroll_physics.ClampingScrollPhysics.prototype,
        [S.ScrollPhysics_parent]: null
      });
    },
    get C276() {
      return C[276] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "PageView",
        [S._Location_column]: 14,
        [S._Location_line]: 1603,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C277() {
      return C[277] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "NotificationListener",
        [S._Location_column]: 12,
        [S._Location_line]: 1601,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C278() {
      return C[278] = dart.const({
        __proto__: borders.BorderStyle.prototype,
        [S._Enum__name]: "solid",
        [S._Enum_index]: 1
      });
    },
    get C279() {
      return C[279] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "TabPageSelectorIndicator",
        [S._Location_column]: 9,
        [S._Location_line]: 1624,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C280() {
      return C[280] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 4,
        [S.EdgeInsets_right]: 4,
        [S.EdgeInsets_top]: 4,
        [S.EdgeInsets_left]: 4
      });
    },
    get C281() {
      return C[281] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Container",
        [S._Location_column]: 12,
        [S._Location_line]: 1650,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C282() {
      return C[282] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "TabPageSelector",
        [S._Location_column]: 9,
        [S._Location_line]: 1675,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C283() {
      return C[283] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "TabPageSelectorIndicator",
        [S._Location_column]: 12,
        [S._Location_line]: 1741,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C284() {
      return C[284] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Row",
        [S._Location_column]: 18,
        [S._Location_line]: 1778,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C285() {
      return C[285] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 16,
        [S._Location_line]: 1776,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C286() {
      return C[286] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "AnimatedBuilder",
        [S._Location_column]: 12,
        [S._Location_line]: 1773,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/tabs.dart"
      });
    },
    get C287() {
      return C[287] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SwitchTheme",
        [S._Location_column]: 9,
        [S._Location_line]: 164,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/switch_theme.dart"
      });
    },
    get C289() {
      return C[289] = dart.const({
        __proto__: snack_bar_theme.SnackBarBehavior.prototype,
        [S._Enum__name]: "fixed",
        [S._Enum_index]: 0
      });
    },
    get C290() {
      return C[290] = dart.const({
        __proto__: snack_bar_theme.SnackBarBehavior.prototype,
        [S._Enum__name]: "floating",
        [S._Enum_index]: 1
      });
    },
    get C288() {
      return C[288] = dart.constList([C[289] || CT.C289, C[290] || CT.C290], snack_bar_theme.SnackBarBehavior);
    },
    get C291() {
      return C[291] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SliderTheme",
        [S._Location_column]: 9,
        [S._Location_line]: 53,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/slider_theme.dart"
      });
    },
    get C292() {
      return C[292] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SliderTheme",
        [S._Location_column]: 12,
        [S._Location_line]: 107,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/slider_theme.dart"
      });
    },
    get C294() {
      return C[294] = dart.const({
        __proto__: slider_theme.ShowValueIndicator.prototype,
        [S._Enum__name]: "onlyForDiscrete",
        [S._Enum_index]: 0
      });
    },
    get C295() {
      return C[295] = dart.const({
        __proto__: slider_theme.ShowValueIndicator.prototype,
        [S._Enum__name]: "onlyForContinuous",
        [S._Enum_index]: 1
      });
    },
    get C296() {
      return C[296] = dart.const({
        __proto__: slider_theme.ShowValueIndicator.prototype,
        [S._Enum__name]: "always",
        [S._Enum_index]: 2
      });
    },
    get C297() {
      return C[297] = dart.const({
        __proto__: slider_theme.ShowValueIndicator.prototype,
        [S._Enum__name]: "never",
        [S._Enum_index]: 3
      });
    },
    get C293() {
      return C[293] = dart.constList([C[294] || CT.C294, C[295] || CT.C295, C[296] || CT.C296, C[297] || CT.C297], slider_theme.ShowValueIndicator);
    },
    get C299() {
      return C[299] = dart.const({
        __proto__: slider_theme.Thumb.prototype,
        [S._Enum__name]: "start",
        [S._Enum_index]: 0
      });
    },
    get C300() {
      return C[300] = dart.const({
        __proto__: slider_theme.Thumb.prototype,
        [S._Enum__name]: "end",
        [S._Enum_index]: 1
      });
    },
    get C298() {
      return C[298] = dart.constList([C[299] || CT.C299, C[300] || CT.C300], slider_theme.Thumb);
    },
    get C301() {
      return C[301] = dart.const({
        __proto__: slider_theme.RoundSliderOverlayShape.prototype,
        [S.RoundSliderOverlayShape_overlayRadius]: 24
      });
    },
    get C302() {
      return C[302] = dart.const({
        __proto__: slider_theme.RoundSliderTickMarkShape.prototype,
        [S.RoundSliderTickMarkShape_tickMarkRadius]: null
      });
    },
    get C303() {
      return C[303] = dart.const({
        __proto__: slider_theme.RoundSliderThumbShape.prototype,
        [S.RoundSliderThumbShape_pressedElevation]: 6,
        [S.RoundSliderThumbShape_elevation]: 1,
        [S.RoundSliderThumbShape_disabledThumbRadius]: null,
        [S.RoundSliderThumbShape_enabledThumbRadius]: 10
      });
    },
    get C304() {
      return C[304] = dart.const({
        __proto__: slider_theme.RoundedRectSliderTrackShape.prototype
      });
    },
    get C305() {
      return C[305] = dart.const({
        __proto__: slider_theme.PaddleSliderValueIndicatorShape.prototype
      });
    },
    get C306() {
      return C[306] = dart.const({
        __proto__: slider_theme.RoundRangeSliderTickMarkShape.prototype,
        [S.RoundRangeSliderTickMarkShape_tickMarkRadius]: null
      });
    },
    get C307() {
      return C[307] = dart.const({
        __proto__: slider_theme.RoundRangeSliderThumbShape.prototype,
        [S.RoundRangeSliderThumbShape_pressedElevation]: 6,
        [S.RoundRangeSliderThumbShape_elevation]: 1,
        [S.RoundRangeSliderThumbShape_disabledThumbRadius]: null,
        [S.RoundRangeSliderThumbShape_enabledThumbRadius]: 10
      });
    },
    get C308() {
      return C[308] = dart.const({
        __proto__: slider_theme.RoundedRectRangeSliderTrackShape.prototype
      });
    },
    get C309() {
      return C[309] = dart.const({
        __proto__: slider_theme.PaddleRangeSliderValueIndicatorShape.prototype
      });
    },
    get C310() {
      return C[310] = dart.const({
        __proto__: slider_theme.SliderThemeData.prototype,
        [S.mouseCursor$6]: null,
        [S.thumbSelector]: null,
        [S.minThumbSeparation]: null,
        [S.valueIndicatorTextStyle]: null,
        [S.showValueIndicator]: null,
        [S.rangeValueIndicatorShape]: null,
        [S.rangeTrackShape]: null,
        [S.rangeThumbShape]: null,
        [S.rangeTickMarkShape]: null,
        [S.valueIndicatorShape]: null,
        [S.trackShape]: null,
        [S.thumbShape]: null,
        [S.tickMarkShape]: null,
        [S.overlayShape]: null,
        [S.valueIndicatorColor]: null,
        [S.overlayColor$4]: null,
        [S.disabledThumbColor]: null,
        [S.overlappingShapeStrokeColor]: null,
        [S.thumbColor$1]: null,
        [S.disabledInactiveTickMarkColor]: null,
        [S.disabledActiveTickMarkColor]: null,
        [S.inactiveTickMarkColor]: null,
        [S.activeTickMarkColor]: null,
        [S.disabledInactiveTrackColor]: null,
        [S.disabledActiveTrackColor]: null,
        [S.inactiveTrackColor]: null,
        [S.activeTrackColor]: null,
        [S.trackHeight]: null
      });
    },
    get C311() {
      return C[311] = dart.const({
        __proto__: ui.Offset.prototype,
        [S.OffsetBase__dy]: 0,
        [S.OffsetBase__dx]: 0
      });
    },
    get C312() {
      return C[312] = dart.const({
        __proto__: slider_theme._RectangularSliderValueIndicatorPathPainter.prototype
      });
    },
    get C313() {
      return C[313] = dart.const({
        __proto__: slider_theme._PaddleSliderValueIndicatorPathPainter.prototype
      });
    },
    get C314() {
      return C[314] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4294901760.0
      });
    },
    get C315() {
      return C[315] = dart.const({
        __proto__: ui.Offset.prototype,
        [S.OffsetBase__dy]: -40,
        [S.OffsetBase__dx]: 0
      });
    },
    get C316() {
      return C[316] = dart.fn(scrollbar_theme._lerpBool, T$.boolNAndboolNAnddoubleToboolN());
    },
    get C317() {
      return C[317] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ScrollbarTheme",
        [S._Location_column]: 9,
        [S._Location_line]: 295,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/scrollbar_theme.dart"
      });
    },
    get C318() {
      return C[318] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "RadioTheme",
        [S._Location_column]: 9,
        [S._Location_line]: 176,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/radio_theme.dart"
      });
    },
    get C319() {
      return C[319] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ProgressIndicatorTheme",
        [S._Location_column]: 9,
        [S._Location_line]: 156,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/progress_indicator_theme.dart"
      });
    },
    get C320() {
      return C[320] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ProgressIndicatorTheme",
        [S._Location_column]: 12,
        [S._Location_line]: 180,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/progress_indicator_theme.dart"
      });
    },
    get C321() {
      return C[321] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "PopupMenuTheme",
        [S._Location_column]: 9,
        [S._Location_line]: 156,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/popup_menu_theme.dart"
      });
    },
    get C322() {
      return C[322] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "PopupMenuTheme",
        [S._Location_column]: 12,
        [S._Location_line]: 181,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/popup_menu_theme.dart"
      });
    },
    get C323() {
      return C[323] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_FadeUpwardsPageTransition",
        [S._Location_column]: 3,
        [S._Location_line]: 15,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C324() {
      return C[324] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "FadeTransition",
        [S._Location_column]: 14,
        [S._Location_line]: 38,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C325() {
      return C[325] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SlideTransition",
        [S._Location_column]: 12,
        [S._Location_line]: 35,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C326() {
      return C[326] = dart.const({
        __proto__: ui.Offset.prototype,
        [S.OffsetBase__dy]: 0.25,
        [S.OffsetBase__dx]: 0
      });
    },
    get C327() {
      return C[327] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_OpenUpwardsPageTransition",
        [S._Location_column]: 9,
        [S._Location_line]: 48,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C328() {
      return C[328] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "OverflowBox",
        [S._Location_column]: 26,
        [S._Location_line]: 118,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C329() {
      return C[329] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SizedBox",
        [S._Location_column]: 24,
        [S._Location_line]: 116,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C330() {
      return C[330] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ClipRect",
        [S._Location_column]: 22,
        [S._Location_line]: 115,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C331() {
      return C[331] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Container",
        [S._Location_column]: 20,
        [S._Location_line]: 112,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C332() {
      return C[332] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "FractionalTranslation",
        [S._Location_column]: 20,
        [S._Location_line]: 129,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C333() {
      return C[333] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "FractionalTranslation",
        [S._Location_column]: 22,
        [S._Location_line]: 134,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C334() {
      return C[334] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "AnimatedBuilder",
        [S._Location_column]: 18,
        [S._Location_line]: 127,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C335() {
      return C[335] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "AnimatedBuilder",
        [S._Location_column]: 16,
        [S._Location_line]: 109,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C336() {
      return C[336] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "LayoutBuilder",
        [S._Location_column]: 12,
        [S._Location_line]: 82,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C337() {
      return C[337] = dart.const({
        __proto__: ui.Offset.prototype,
        [S.OffsetBase__dy]: 0.05,
        [S.OffsetBase__dx]: 0
      });
    },
    get C338() {
      return C[338] = dart.const({
        __proto__: ui.Offset.prototype,
        [S.OffsetBase__dy]: -0.025,
        [S.OffsetBase__dx]: 0
      });
    },
    get C339() {
      return C[339] = dart.const({
        __proto__: curves.Cubic.prototype,
        [S.Cubic_d]: 1,
        [S.Cubic_c]: 0,
        [S.Cubic_b]: 0,
        [S.Cubic_a]: 0.2
      });
    },
    get C340() {
      return C[340] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_ZoomPageTransition",
        [S._Location_column]: 9,
        [S._Location_line]: 153,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C341() {
      return C[341] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_ZoomEnterTransition",
        [S._Location_column]: 16,
        [S._Location_line]: 208,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C342() {
      return C[342] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_ZoomExitTransition",
        [S._Location_column]: 16,
        [S._Location_line]: 218,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C343() {
      return C[343] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_ZoomEnterTransition",
        [S._Location_column]: 18,
        [S._Location_line]: 231,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C344() {
      return C[344] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_ZoomExitTransition",
        [S._Location_column]: 18,
        [S._Location_line]: 242,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C345() {
      return C[345] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "DualTransitionBuilder",
        [S._Location_column]: 14,
        [S._Location_line]: 224,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C346() {
      return C[346] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "DualTransitionBuilder",
        [S._Location_column]: 12,
        [S._Location_line]: 201,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C347() {
      return C[347] = dart.const({
        __proto__: curves.Cubic.prototype,
        [S.Cubic_d]: 0.06,
        [S.Cubic_c]: 0.133333,
        [S.Cubic_b]: 0,
        [S.Cubic_a]: 0.05
      });
    },
    get C348() {
      return C[348] = dart.const({
        __proto__: curves.Cubic.prototype,
        [S.Cubic_d]: 1,
        [S.Cubic_c]: 0.25,
        [S.Cubic_b]: 0.82,
        [S.Cubic_a]: 0.208333
      });
    },
    get C349() {
      return C[349] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_ZoomEnterTransition",
        [S._Location_column]: 9,
        [S._Location_line]: 254,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C350() {
      return C[350] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ColoredBox",
        [S._Location_column]: 16,
        [S._Location_line]: 314,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C351() {
      return C[351] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ScaleTransition",
        [S._Location_column]: 16,
        [S._Location_line]: 321,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C352() {
      return C[352] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "FadeTransition",
        [S._Location_column]: 14,
        [S._Location_line]: 319,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C353() {
      return C[353] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "AnimatedBuilder",
        [S._Location_column]: 12,
        [S._Location_line]: 311,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C355() {
      return C[355] = dart.const({
        __proto__: curves._Linear.prototype
      });
    },
    get C354() {
      return C[354] = dart.const({
        __proto__: curves.Interval.prototype,
        [S.Interval_curve]: C[355] || CT.C355,
        [S.Interval_end]: 0.25,
        [S.Interval_begin]: 0.125
      });
    },
    get C356() {
      return C[356] = dart.const({
        __proto__: curves.Interval.prototype,
        [S.Interval_curve]: C[355] || CT.C355,
        [S.Interval_end]: 0.4175,
        [S.Interval_begin]: 0.2075
      });
    },
    get C357() {
      return C[357] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_ZoomExitTransition",
        [S._Location_column]: 9,
        [S._Location_line]: 328,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C358() {
      return C[358] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ScaleTransition",
        [S._Location_column]: 14,
        [S._Location_line]: 366,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C359() {
      return C[359] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "FadeTransition",
        [S._Location_column]: 12,
        [S._Location_line]: 364,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C360() {
      return C[360] = dart.const({
        __proto__: curves.Interval.prototype,
        [S.Interval_curve]: C[355] || CT.C355,
        [S.Interval_end]: 0.2075,
        [S.Interval_begin]: 0.0825
      });
    },
    get C361() {
      return C[361] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_FadeUpwardsPageTransition",
        [S._Location_column]: 12,
        [S._Location_line]: 436,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C362() {
      return C[362] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_OpenUpwardsPageTransition",
        [S._Location_column]: 12,
        [S._Location_line]: 465,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C363() {
      return C[363] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_ZoomPageTransition",
        [S._Location_column]: 12,
        [S._Location_line]: 498,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart"
      });
    },
    get C365() {
      return C[365] = dart.const({
        __proto__: page_transitions_theme.ZoomPageTransitionsBuilder.prototype
      });
    },
    get C366() {
      return C[366] = dart.const({
        __proto__: page_transitions_theme.CupertinoPageTransitionsBuilder.prototype
      });
    },
    get C364() {
      return C[364] = dart.constMap(platform$.TargetPlatform, page_transitions_theme.PageTransitionsBuilder, [C[29] || CT.C29, C[365] || CT.C365, C[33] || CT.C33, C[366] || CT.C366, C[34] || CT.C34, C[366] || CT.C366]);
    },
    get C367() {
      return C[367] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "OutlinedButtonTheme",
        [S._Location_column]: 9,
        [S._Location_line]: 94,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/outlined_button_theme.dart"
      });
    },
    get C368() {
      return C[368] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "OutlinedButtonTheme",
        [S._Location_column]: 12,
        [S._Location_line]: 120,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/outlined_button_theme.dart"
      });
    },
    get C369() {
      return C[369] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "NavigationRail",
        [S._Location_column]: 9,
        [S._Location_line]: 91,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C370() {
      return C[370] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_RailDestination",
        [S._Location_column]: 25,
        [S._Location_line]: 427,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C371() {
      return C[371] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Column",
        [S._Location_column]: 26,
        [S._Location_line]: 423,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C372() {
      return C[372] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Align",
        [S._Location_column]: 24,
        [S._Location_line]: 421,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C373() {
      return C[373] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Expanded",
        [S._Location_column]: 15,
        [S._Location_line]: 420,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C374() {
      return C[374] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Column",
        [S._Location_column]: 18,
        [S._Location_line]: 412,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C375() {
      return C[375] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Material",
        [S._Location_column]: 16,
        [S._Location_line]: 409,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C376() {
      return C[376] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 14,
        [S._Location_line]: 407,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C377() {
      return C[377] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_ExtendedNavigationRailAnimation",
        [S._Location_column]: 12,
        [S._Location_line]: 405,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C378() {
      return C[378] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_RailDestination",
        [S._Location_column]: 3,
        [S._Location_line]: 510,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C379() {
      return C[379] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "IconTheme",
        [S._Location_column]: 31,
        [S._Location_line]: 571,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C380() {
      return C[380] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "DefaultTextStyle",
        [S._Location_column]: 32,
        [S._Location_line]: 575,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C382() {
      return C[382] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SizedBox",
        [S._Location_column]: 51,
        [S._Location_line]: 585,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C381() {
      return C[381] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [S.Widget__location]: C[382] || CT.C382,
        [S.Widget_key]: null,
        [S$.SingleChildRenderObjectWidget_child]: null,
        [S$.SizedBox_height]: 6,
        [S$.SizedBox_width]: null
      });
    },
    get C383() {
      return C[383] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_AddIndicator",
        [S._Location_column]: 24,
        [S._Location_line]: 594,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C384() {
      return C[384] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Center",
        [S._Location_column]: 22,
        [S._Location_line]: 593,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C385() {
      return C[385] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SizedBox",
        [S._Location_column]: 13,
        [S._Location_line]: 590,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C386() {
      return C[386] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Column",
        [S._Location_column]: 33,
        [S._Location_line]: 587,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C387() {
      return C[387] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Opacity",
        [S._Location_column]: 26,
        [S._Location_line]: 616,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C388() {
      return C[388] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SizedBox",
        [S._Location_column]: 17,
        [S._Location_line]: 613,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C389() {
      return C[389] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Stack",
        [S._Location_column]: 20,
        [S._Location_line]: 609,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C390() {
      return C[390] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Padding",
        [S._Location_column]: 21,
        [S._Location_line]: 607,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C391() {
      return C[391] = dart.const({
        __proto__: curves.Interval.prototype,
        [S.Interval_curve]: C[355] || CT.C355,
        [S.Interval_end]: 0.25,
        [S.Interval_begin]: 0
      });
    },
    get C392() {
      return C[392] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "FadeTransition",
        [S._Location_column]: 30,
        [S._Location_line]: 641,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C393() {
      return C[393] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Align",
        [S._Location_column]: 21,
        [S._Location_line]: 637,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C394() {
      return C[394] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SizedBox",
        [S._Location_column]: 21,
        [S._Location_line]: 647,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C395() {
      return C[395] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Row",
        [S._Location_column]: 24,
        [S._Location_line]: 634,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C396() {
      return C[396] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ClipRect",
        [S._Location_column]: 22,
        [S._Location_line]: 633,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C397() {
      return C[397] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ConstrainedBox",
        [S._Location_column]: 20,
        [S._Location_line]: 629,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C398() {
      return C[398] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Padding",
        [S._Location_column]: 21,
        [S._Location_line]: 627,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C399() {
      return C[399] = dart.const({
        __proto__: navigation_rail.NavigationRailLabelType.prototype,
        [S._Enum__name]: "none",
        [S._Enum_index]: 0
      });
    },
    get C400() {
      return C[400] = dart.const({
        __proto__: curves.Interval.prototype,
        [S.Interval_curve]: C[355] || CT.C355,
        [S.Interval_end]: 0.75,
        [S.Interval_begin]: 0.25
      });
    },
    get C401() {
      return C[401] = dart.const({
        __proto__: curves.Interval.prototype,
        [S.Interval_curve]: C[355] || CT.C355,
        [S.Interval_end]: 1,
        [S.Interval_begin]: 0.75
      });
    },
    get C402() {
      return C[402] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SizedBox",
        [S._Location_column]: 35,
        [S._Location_line]: 661,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C403() {
      return C[403] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SizedBox",
        [S._Location_column]: 37,
        [S._Location_line]: 662,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C404() {
      return C[404] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SizedBox",
        [S._Location_column]: 38,
        [S._Location_line]: 663,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C405() {
      return C[405] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_AddIndicator",
        [S._Location_column]: 17,
        [S._Location_line]: 677,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C406() {
      return C[406] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "FadeTransition",
        [S._Location_column]: 26,
        [S._Location_line]: 689,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C407() {
      return C[407] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Align",
        [S._Location_column]: 17,
        [S._Location_line]: 685,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C408() {
      return C[408] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Column",
        [S._Location_column]: 20,
        [S._Location_line]: 672,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C409() {
      return C[409] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ClipRect",
        [S._Location_column]: 18,
        [S._Location_line]: 671,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C410() {
      return C[410] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Container",
        [S._Location_column]: 19,
        [S._Location_line]: 665,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C411() {
      return C[411] = dart.const({
        __proto__: navigation_rail.NavigationRailLabelType.prototype,
        [S._Enum__name]: "selected",
        [S._Enum_index]: 1
      });
    },
    get C412() {
      return C[412] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SizedBox",
        [S._Location_column]: 35,
        [S._Location_line]: 703,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C413() {
      return C[413] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SizedBox",
        [S._Location_column]: 37,
        [S._Location_line]: 704,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C414() {
      return C[414] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SizedBox",
        [S._Location_column]: 38,
        [S._Location_line]: 705,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C415() {
      return C[415] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_AddIndicator",
        [S._Location_column]: 15,
        [S._Location_line]: 715,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C416() {
      return C[416] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Column",
        [S._Location_column]: 18,
        [S._Location_line]: 712,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C417() {
      return C[417] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Container",
        [S._Location_column]: 19,
        [S._Location_line]: 706,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C418() {
      return C[418] = dart.const({
        __proto__: navigation_rail.NavigationRailLabelType.prototype,
        [S._Enum__name]: "all",
        [S._Enum_index]: 2
      });
    },
    get C419() {
      return C[419] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "InkResponse",
        [S._Location_column]: 20,
        [S._Location_line]: 739,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C420() {
      return C[420] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Material",
        [S._Location_column]: 11,
        [S._Location_line]: 737,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C421() {
      return C[421] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 11,
        [S._Location_line]: 750,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C422() {
      return C[422] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Stack",
        [S._Location_column]: 14,
        [S._Location_line]: 735,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C423() {
      return C[423] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 12,
        [S._Location_line]: 732,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C424() {
      return C[424] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_AddIndicator",
        [S._Location_column]: 9,
        [S._Location_line]: 765,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C425() {
      return C[425] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "NavigationIndicator",
        [S._Location_column]: 19,
        [S._Location_line]: 787,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C426() {
      return C[426] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "NavigationIndicator",
        [S._Location_column]: 19,
        [S._Location_line]: 795,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C427() {
      return C[427] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Stack",
        [S._Location_column]: 12,
        [S._Location_line]: 803,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C428() {
      return C[428] = dart.constList([C[399] || CT.C399, C[411] || CT.C411, C[418] || CT.C418], navigation_rail.NavigationRailLabelType);
    },
    get C429() {
      return C[429] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_ExtendedNavigationRailAnimation",
        [S._Location_column]: 9,
        [S._Location_line]: 893,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C430() {
      return C[430] = dart.const({
        __proto__: navigation_rail_theme.NavigationRailThemeData.prototype,
        [S$.minExtendedWidth$1]: null,
        [S$.minWidth$1]: null,
        [S$.indicatorColor$3]: null,
        [S$.useIndicator$1]: null,
        [S$.labelType$1]: null,
        [S$.groupAlignment$1]: null,
        [S$.selectedIconTheme$1]: null,
        [S$.unselectedIconTheme$1]: null,
        [S$.selectedLabelTextStyle$1]: null,
        [S$.unselectedLabelTextStyle$1]: null,
        [S$.elevation$8]: null,
        [S$.backgroundColor$7]: null
      });
    },
    get C432() {
      return C[432] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SizedBox",
        [S._Location_column]: 32,
        [S._Location_line]: 909,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_rail.dart"
      });
    },
    get C431() {
      return C[431] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [S.Widget__location]: C[432] || CT.C432,
        [S.Widget_key]: null,
        [S$.SingleChildRenderObjectWidget_child]: null,
        [S$.SizedBox_height]: 8,
        [S$.SizedBox_width]: null
      });
    },
    get C433() {
      return C[433] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "NavigationRailTheme",
        [S._Location_column]: 9,
        [S._Location_line]: 227,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_rail_theme.dart"
      });
    },
    get C434() {
      return C[434] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "NavigationRailTheme",
        [S._Location_column]: 12,
        [S._Location_line]: 255,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_rail_theme.dart"
      });
    },
    get C435() {
      return C[435] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "NavigationBar",
        [S._Location_column]: 9,
        [S._Location_line]: 57,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_bar.dart"
      });
    },
    get C436() {
      return C[436] = dart.const({
        __proto__: core.Duration.prototype,
        [S.Duration__duration]: 500000
      });
    },
    get C437() {
      return C[437] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_NavigationDestinationInfo",
        [S._Location_column]: 30,
        [S._Location_line]: 181,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_bar.dart"
      });
    },
    get C438() {
      return C[438] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_SelectableAnimatedBuilder",
        [S._Location_column]: 26,
        [S._Location_line]: 177,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_bar.dart"
      });
    },
    get C439() {
      return C[439] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Expanded",
        [S._Location_column]: 17,
        [S._Location_line]: 176,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_bar.dart"
      });
    },
    get C440() {
      return C[440] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Row",
        [S._Location_column]: 18,
        [S._Location_line]: 173,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_bar.dart"
      });
    },
    get C441() {
      return C[441] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SizedBox",
        [S._Location_column]: 16,
        [S._Location_line]: 171,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_bar.dart"
      });
    },
    get C442() {
      return C[442] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SafeArea",
        [S._Location_column]: 14,
        [S._Location_line]: 170,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_bar.dart"
      });
    },
    get C443() {
      return C[443] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Material",
        [S._Location_column]: 12,
        [S._Location_line]: 164,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_bar.dart"
      });
    },
    get C445() {
      return C[445] = dart.const({
        __proto__: navigation_bar.NavigationDestinationLabelBehavior.prototype,
        [S._Enum__name]: "alwaysShow",
        [S._Enum_index]: 0
      });
    },
    get C446() {
      return C[446] = dart.const({
        __proto__: navigation_bar.NavigationDestinationLabelBehavior.prototype,
        [S._Enum__name]: "alwaysHide",
        [S._Enum_index]: 1
      });
    },
    get C447() {
      return C[447] = dart.const({
        __proto__: navigation_bar.NavigationDestinationLabelBehavior.prototype,
        [S._Enum__name]: "onlyShowSelected",
        [S._Enum_index]: 2
      });
    },
    get C444() {
      return C[444] = dart.constList([C[445] || CT.C445, C[446] || CT.C446, C[447] || CT.C447], navigation_bar.NavigationDestinationLabelBehavior);
    },
    get C448() {
      return C[448] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "NavigationDestination",
        [S._Location_column]: 9,
        [S._Location_line]: 232,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_bar.dart"
      });
    },
    get C450() {
      return C[450] = dart.const({
        __proto__: material_state.MaterialState.prototype,
        [S._Enum__name]: "selected",
        [S._Enum_index]: 4
      });
    },
    get C449() {
      return C[449] = dart.constSet(material_state.MaterialState, [C[450] || CT.C450]);
    },
    get C451() {
      return C[451] = dart.constSet(material_state.MaterialState, []);
    },
    get C452() {
      return C[452] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "NavigationIndicator",
        [S._Location_column]: 13,
        [S._Location_line]: 303,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_bar.dart"
      });
    },
    get C453() {
      return C[453] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_StatusTransitionWidgetBuilder",
        [S._Location_column]: 13,
        [S._Location_line]: 308,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_bar.dart"
      });
    },
    get C454() {
      return C[454] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Stack",
        [S._Location_column]: 16,
        [S._Location_line]: 300,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_bar.dart"
      });
    },
    get C455() {
      return C[455] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 0,
        [S.EdgeInsets_right]: 0,
        [S.EdgeInsets_top]: 4,
        [S.EdgeInsets_left]: 0
      });
    },
    get C456() {
      return C[456] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Text",
        [S._Location_column]: 20,
        [S._Location_line]: 330,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_bar.dart"
      });
    },
    get C457() {
      return C[457] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_ClampTextScaleFactor",
        [S._Location_column]: 18,
        [S._Location_line]: 326,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_bar.dart"
      });
    },
    get C458() {
      return C[458] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Padding",
        [S._Location_column]: 16,
        [S._Location_line]: 324,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_bar.dart"
      });
    },
    get C459() {
      return C[459] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_NavigationDestinationBuilder",
        [S._Location_column]: 12,
        [S._Location_line]: 285,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_bar.dart"
      });
    },
    get C460() {
      return C[460] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_NavigationDestinationBuilder",
        [S._Location_column]: 9,
        [S._Location_line]: 357,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_bar.dart"
      });
    },
    get C461() {
      return C[461] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_NavigationBarDestinationLayout",
        [S._Location_column]: 24,
        [S._Location_line]: 412,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_bar.dart"
      });
    },
    get C462() {
      return C[462] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Expanded",
        [S._Location_column]: 15,
        [S._Location_line]: 411,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_bar.dart"
      });
    },
    get C463() {
      return C[463] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Row",
        [S._Location_column]: 18,
        [S._Location_line]: 409,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_bar.dart"
      });
    },
    get C464() {
      return C[464] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "InkWell",
        [S._Location_column]: 16,
        [S._Location_line]: 406,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_bar.dart"
      });
    },
    get C465() {
      return C[465] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_NavigationBarDestinationTooltip",
        [S._Location_column]: 14,
        [S._Location_line]: 404,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_bar.dart"
      });
    },
    get C466() {
      return C[466] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_NavigationBarDestinationSemantics",
        [S._Location_column]: 12,
        [S._Location_line]: 403,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_bar.dart"
      });
    },
    get C467() {
      return C[467] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_NavigationDestinationInfo",
        [S._Location_column]: 9,
        [S._Location_line]: 433,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_bar.dart"
      });
    },
    get C468() {
      return C[468] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "NavigationIndicator",
        [S._Location_column]: 9,
        [S._Location_line]: 519,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_bar.dart"
      });
    },
    get C469() {
      return C[469] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Transform",
        [S._Location_column]: 16,
        [S._Location_line]: 578,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_bar.dart"
      });
    },
    get C470() {
      return C[470] = dart.const({
        __proto__: core.Duration.prototype,
        [S.Duration__duration]: 100000
      });
    },
    get C471() {
      return C[471] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Container",
        [S._Location_column]: 24,
        [S._Location_line]: 601,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_bar.dart"
      });
    },
    get C472() {
      return C[472] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "FadeTransition",
        [S._Location_column]: 22,
        [S._Location_line]: 599,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_bar.dart"
      });
    },
    get C473() {
      return C[473] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_SelectableAnimatedBuilder",
        [S._Location_column]: 18,
        [S._Location_line]: 594,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_bar.dart"
      });
    },
    get C474() {
      return C[474] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_StatusTransitionWidgetBuilder",
        [S._Location_column]: 14,
        [S._Location_line]: 591,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_bar.dart"
      });
    },
    get C475() {
      return C[475] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "AnimatedBuilder",
        [S._Location_column]: 12,
        [S._Location_line]: 567,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_bar.dart"
      });
    },
    get C476() {
      return C[476] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_NavigationBarDestinationLayout",
        [S._Location_column]: 9,
        [S._Location_line]: 627,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_bar.dart"
      });
    },
    get C477() {
      return C[477] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "RepaintBoundary",
        [S._Location_column]: 22,
        [S._Location_line]: 659,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_bar.dart"
      });
    },
    get C478() {
      return C[478] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "LayoutId",
        [S._Location_column]: 13,
        [S._Location_line]: 657,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_bar.dart"
      });
    },
    get C479() {
      return C[479] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "RepaintBoundary",
        [S._Location_column]: 24,
        [S._Location_line]: 669,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_bar.dart"
      });
    },
    get C480() {
      return C[480] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "FadeTransition",
        [S._Location_column]: 22,
        [S._Location_line]: 666,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_bar.dart"
      });
    },
    get C481() {
      return C[481] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "LayoutId",
        [S._Location_column]: 13,
        [S._Location_line]: 664,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_bar.dart"
      });
    },
    get C482() {
      return C[482] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "CustomMultiChildLayout",
        [S._Location_column]: 16,
        [S._Location_line]: 652,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_bar.dart"
      });
    },
    get C483() {
      return C[483] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_DestinationLayoutAnimationBuilder",
        [S._Location_column]: 12,
        [S._Location_line]: 650,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_bar.dart"
      });
    },
    get C484() {
      return C[484] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_DestinationLayoutAnimationBuilder",
        [S._Location_column]: 9,
        [S._Location_line]: 693,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_bar.dart"
      });
    },
    get C485() {
      return C[485] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_CurvedAnimationBuilder",
        [S._Location_column]: 16,
        [S._Location_line]: 711,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_bar.dart"
      });
    },
    get C486() {
      return C[486] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_NavigationBarDestinationSemantics",
        [S._Location_column]: 9,
        [S._Location_line]: 735,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_bar.dart"
      });
    },
    get C487() {
      return C[487] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 16,
        [S._Location_line]: 751,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_bar.dart"
      });
    },
    get C488() {
      return C[488] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 11,
        [S._Location_line]: 761,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_bar.dart"
      });
    },
    get C489() {
      return C[489] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Stack",
        [S._Location_column]: 14,
        [S._Location_line]: 757,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_bar.dart"
      });
    },
    get C490() {
      return C[490] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_StatusTransitionWidgetBuilder",
        [S._Location_column]: 12,
        [S._Location_line]: 748,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_bar.dart"
      });
    },
    get C491() {
      return C[491] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_NavigationBarDestinationTooltip",
        [S._Location_column]: 9,
        [S._Location_line]: 779,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_bar.dart"
      });
    },
    get C492() {
      return C[492] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Tooltip",
        [S._Location_column]: 12,
        [S._Location_line]: 795,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_bar.dart"
      });
    },
    get C493() {
      return C[493] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_ClampTextScaleFactor",
        [S._Location_column]: 9,
        [S._Location_line]: 903,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_bar.dart"
      });
    },
    get C494() {
      return C[494] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "MediaQuery",
        [S._Location_column]: 12,
        [S._Location_line]: 921,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_bar.dart"
      });
    },
    get C495() {
      return C[495] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_StatusTransitionWidgetBuilder",
        [S._Location_column]: 9,
        [S._Location_line]: 941,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_bar.dart"
      });
    },
    get C496() {
      return C[496] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_SelectableAnimatedBuilder",
        [S._Location_column]: 9,
        [S._Location_line]: 999,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_bar.dart"
      });
    },
    get C497() {
      return C[497] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_CurvedAnimationBuilder",
        [S._Location_column]: 9,
        [S._Location_line]: 1097,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_bar.dart"
      });
    },
    get C498() {
      return C[498] = dart.fn(icon_theme_data.IconThemeData.lerp, T$.IconThemeDataNAndIconThemeDataNAnddoubleToIconThemeData());
    },
    get C499() {
      return C[499] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "NavigationBarTheme",
        [S._Location_column]: 9,
        [S._Location_line]: 199,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_bar_theme.dart"
      });
    },
    get C500() {
      return C[500] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "NavigationBarTheme",
        [S._Location_column]: 12,
        [S._Location_line]: 226,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_bar_theme.dart"
      });
    },
    get C501() {
      return C[501] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_BorderContainer",
        [S._Location_column]: 9,
        [S._Location_line]: 142,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C502() {
      return C[502] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "CustomPaint",
        [S._Location_column]: 12,
        [S._Location_line]: 234,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C503() {
      return C[503] = dart.const({
        __proto__: core.Duration.prototype,
        [S.Duration__duration]: 15000
      });
    },
    get C504() {
      return C[504] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_Shaker",
        [S._Location_column]: 9,
        [S._Location_line]: 257,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C505() {
      return C[505] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Transform",
        [S._Location_column]: 12,
        [S._Location_line]: 280,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C506() {
      return C[506] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_HelperError",
        [S._Location_column]: 9,
        [S._Location_line]: 291,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C507() {
      return C[507] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Text",
        [S._Location_column]: 16,
        [S._Location_line]: 381,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C508() {
      return C[508] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "FadeTransition",
        [S._Location_column]: 14,
        [S._Location_line]: 379,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C509() {
      return C[509] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 12,
        [S._Location_line]: 377,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C510() {
      return C[510] = dart.const({
        __proto__: ui.Offset.prototype,
        [S.OffsetBase__dy]: -0.25,
        [S.OffsetBase__dx]: 0
      });
    },
    get C511() {
      return C[511] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Text",
        [S._Location_column]: 18,
        [S._Location_line]: 404,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C512() {
      return C[512] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "FractionalTranslation",
        [S._Location_column]: 16,
        [S._Location_line]: 399,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C513() {
      return C[513] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "FadeTransition",
        [S._Location_column]: 14,
        [S._Location_line]: 397,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C514() {
      return C[514] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 12,
        [S._Location_line]: 394,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C515() {
      return C[515] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "FadeTransition",
        [S._Location_column]: 11,
        [S._Location_line]: 449,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C516() {
      return C[516] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Stack",
        [S._Location_column]: 14,
        [S._Location_line]: 447,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C517() {
      return C[517] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "FadeTransition",
        [S._Location_column]: 11,
        [S._Location_line]: 462,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C518() {
      return C[518] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Stack",
        [S._Location_column]: 14,
        [S._Location_line]: 459,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C520() {
      return C[520] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SizedBox",
        [S._Location_column]: 31,
        [S._Location_line]: 316,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C519() {
      return C[519] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [S.Widget__location]: C[520] || CT.C520,
        [S.Widget_key]: null,
        [S$.SingleChildRenderObjectWidget_child]: null,
        [S$.SizedBox_height]: null,
        [S$.SizedBox_width]: null
      });
    },
    get C522() {
      return C[522] = dart.const({
        __proto__: input_decorator.FloatingLabelBehavior.prototype,
        [S._Enum__name]: "never",
        [S._Enum_index]: 0
      });
    },
    get C523() {
      return C[523] = dart.const({
        __proto__: input_decorator.FloatingLabelBehavior.prototype,
        [S._Enum__name]: "auto",
        [S._Enum_index]: 1
      });
    },
    get C524() {
      return C[524] = dart.const({
        __proto__: input_decorator.FloatingLabelBehavior.prototype,
        [S._Enum__name]: "always",
        [S._Enum_index]: 2
      });
    },
    get C521() {
      return C[521] = dart.constList([C[522] || CT.C522, C[523] || CT.C523, C[524] || CT.C524], input_decorator.FloatingLabelBehavior);
    },
    get C525() {
      return C[525] = dart.const({
        __proto__: input_decorator.FloatingLabelAlignment.prototype,
        [S$._x]: -1
      });
    },
    get C526() {
      return C[526] = dart.const({
        __proto__: input_decorator.FloatingLabelAlignment.prototype,
        [S$._x]: 0
      });
    },
    get C528() {
      return C[528] = dart.const({
        __proto__: input_decorator._DecorationSlot.prototype,
        [S._Enum__name]: "icon",
        [S._Enum_index]: 0
      });
    },
    get C529() {
      return C[529] = dart.const({
        __proto__: input_decorator._DecorationSlot.prototype,
        [S._Enum__name]: "input",
        [S._Enum_index]: 1
      });
    },
    get C530() {
      return C[530] = dart.const({
        __proto__: input_decorator._DecorationSlot.prototype,
        [S._Enum__name]: "label",
        [S._Enum_index]: 2
      });
    },
    get C531() {
      return C[531] = dart.const({
        __proto__: input_decorator._DecorationSlot.prototype,
        [S._Enum__name]: "hint",
        [S._Enum_index]: 3
      });
    },
    get C532() {
      return C[532] = dart.const({
        __proto__: input_decorator._DecorationSlot.prototype,
        [S._Enum__name]: "prefix",
        [S._Enum_index]: 4
      });
    },
    get C533() {
      return C[533] = dart.const({
        __proto__: input_decorator._DecorationSlot.prototype,
        [S._Enum__name]: "suffix",
        [S._Enum_index]: 5
      });
    },
    get C534() {
      return C[534] = dart.const({
        __proto__: input_decorator._DecorationSlot.prototype,
        [S._Enum__name]: "prefixIcon",
        [S._Enum_index]: 6
      });
    },
    get C535() {
      return C[535] = dart.const({
        __proto__: input_decorator._DecorationSlot.prototype,
        [S._Enum__name]: "suffixIcon",
        [S._Enum_index]: 7
      });
    },
    get C536() {
      return C[536] = dart.const({
        __proto__: input_decorator._DecorationSlot.prototype,
        [S._Enum__name]: "helperError",
        [S._Enum_index]: 8
      });
    },
    get C537() {
      return C[537] = dart.const({
        __proto__: input_decorator._DecorationSlot.prototype,
        [S._Enum__name]: "counter",
        [S._Enum_index]: 9
      });
    },
    get C538() {
      return C[538] = dart.const({
        __proto__: input_decorator._DecorationSlot.prototype,
        [S._Enum__name]: "container",
        [S._Enum_index]: 10
      });
    },
    get C527() {
      return C[527] = dart.constList([C[528] || CT.C528, C[529] || CT.C529, C[530] || CT.C530, C[531] || CT.C531, C[532] || CT.C532, C[533] || CT.C533, C[534] || CT.C534, C[535] || CT.C535, C[536] || CT.C536, C[537] || CT.C537, C[538] || CT.C538], input_decorator._DecorationSlot);
    },
    get C540() {
      return C[540] = dart.fn(math.max, T$.TAndTToT());
    },
    get C539() {
      return C[539] = dart.const(dart.gbind(C[540] || CT.C540, core.double));
    },
    get C541() {
      return C[541] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_Decorator",
        [S._Location_column]: 9,
        [S._Location_line]: 1601,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C542() {
      return C[542] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_AffixText",
        [S._Location_column]: 9,
        [S._Location_line]: 1676,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C543() {
      return C[543] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Text",
        [S._Location_column]: 48,
        [S._Location_line]: 1696,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C544() {
      return C[544] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "AnimatedOpacity",
        [S._Location_column]: 14,
        [S._Location_line]: 1692,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C545() {
      return C[545] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "InputDecorator",
        [S._Location_column]: 9,
        [S._Location_line]: 1730,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C546() {
      return C[546] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 452984831
      });
    },
    get C547() {
      return C[547] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 234881023
      });
    },
    get C548() {
      return C[548] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 167772160
      });
    },
    get C549() {
      return C[549] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 83886080
      });
    },
    get C550() {
      return C[550] = dart.const({
        __proto__: ui.Brightness.prototype,
        [S._Enum__name]: "dark",
        [S._Enum_index]: 0
      });
    },
    get C551() {
      return C[551] = dart.const({
        __proto__: ui.Brightness.prototype,
        [S._Enum__name]: "light",
        [S._Enum_index]: 1
      });
    },
    get C553() {
      return C[553] = dart.const({
        __proto__: borders.BorderSide.prototype,
        [S.BorderSide_strokeAlign]: C[19] || CT.C19,
        [S.BorderSide_style]: C[278] || CT.C278,
        [S.BorderSide_width]: 1,
        [S.BorderSide_color]: C[21] || CT.C21
      });
    },
    get C555() {
      return C[555] = dart.const({
        __proto__: ui.Radius.prototype,
        [S.Radius_y]: 0,
        [S.Radius_x]: 0
      });
    },
    get C554() {
      return C[554] = dart.const({
        __proto__: border_radius.BorderRadius.prototype,
        [S.BorderRadius_bottomRight]: C[555] || CT.C555,
        [S.BorderRadius_bottomLeft]: C[555] || CT.C555,
        [S.BorderRadius_topRight]: C[77] || CT.C77,
        [S.BorderRadius_topLeft]: C[77] || CT.C77
      });
    },
    get C552() {
      return C[552] = dart.const({
        __proto__: input_border.UnderlineInputBorder.prototype,
        [S$.InputBorder_borderSide]: C[553] || CT.C553,
        [S$.UnderlineInputBorder_borderRadius]: C[554] || CT.C554
      });
    },
    get C556() {
      return C[556] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Text",
        [S._Location_column]: 14,
        [S._Location_line]: 2161,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C557() {
      return C[557] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "AnimatedOpacity",
        [S._Location_column]: 52,
        [S._Location_line]: 2156,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C558() {
      return C[558] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_BorderContainer",
        [S._Location_column]: 30,
        [S._Location_line]: 2182,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C559() {
      return C[559] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Text",
        [S._Location_column]: 38,
        [S._Location_line]: 2203,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C560() {
      return C[560] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "AnimatedDefaultTextStyle",
        [S._Location_column]: 16,
        [S._Location_line]: 2197,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C561() {
      return C[561] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "AnimatedOpacity",
        [S._Location_column]: 14,
        [S._Location_line]: 2193,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C562() {
      return C[562] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_Shaker",
        [S._Location_column]: 93,
        [S._Location_line]: 2191,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C563() {
      return C[563] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_AffixText",
        [S._Location_column]: 7,
        [S._Location_line]: 2213,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C564() {
      return C[564] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_AffixText",
        [S._Location_column]: 7,
        [S._Location_line]: 2221,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C565() {
      return C[565] = dart.const({
        __proto__: edge_insets.EdgeInsetsDirectional.prototype,
        [S$.EdgeInsetsDirectional_bottom]: 0,
        [S$.EdgeInsetsDirectional_end]: 16,
        [S$.EdgeInsetsDirectional_top]: 0,
        [S$.EdgeInsetsDirectional_start]: 0
      });
    },
    get C566() {
      return C[566] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Padding",
        [S._Location_column]: 7,
        [S._Location_line]: 2233,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C567() {
      return C[567] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ConstrainedBox",
        [S._Location_column]: 16,
        [S._Location_line]: 2248,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C568() {
      return C[568] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Center",
        [S._Location_column]: 7,
        [S._Location_line]: 2245,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C569() {
      return C[569] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ConstrainedBox",
        [S._Location_column]: 16,
        [S._Location_line]: 2269,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C570() {
      return C[570] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Center",
        [S._Location_column]: 7,
        [S._Location_line]: 2266,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C571() {
      return C[571] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_HelperError",
        [S._Location_column]: 32,
        [S._Location_line]: 2286,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C572() {
      return C[572] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Text",
        [S._Location_column]: 16,
        [S._Location_line]: 2303,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C573() {
      return C[573] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 17,
        [S._Location_line]: 2300,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C574() {
      return C[574] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 8,
        [S.EdgeInsets_right]: 12,
        [S.EdgeInsets_top]: 8,
        [S.EdgeInsets_left]: 12
      });
    },
    get C575() {
      return C[575] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 12,
        [S.EdgeInsets_right]: 12,
        [S.EdgeInsets_top]: 12,
        [S.EdgeInsets_left]: 12
      });
    },
    get C576() {
      return C[576] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 8,
        [S.EdgeInsets_right]: 0,
        [S.EdgeInsets_top]: 8,
        [S.EdgeInsets_left]: 0
      });
    },
    get C577() {
      return C[577] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 12,
        [S.EdgeInsets_right]: 0,
        [S.EdgeInsets_top]: 12,
        [S.EdgeInsets_left]: 0
      });
    },
    get C578() {
      return C[578] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 12,
        [S.EdgeInsets_right]: 12,
        [S.EdgeInsets_top]: 20,
        [S.EdgeInsets_left]: 12
      });
    },
    get C579() {
      return C[579] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 16,
        [S.EdgeInsets_right]: 12,
        [S.EdgeInsets_top]: 24,
        [S.EdgeInsets_left]: 12
      });
    },
    get C580() {
      return C[580] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_Decorator",
        [S._Location_column]: 34,
        [S._Location_line]: 2344,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C581() {
      return C[581] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ConstrainedBox",
        [S._Location_column]: 14,
        [S._Location_line]: 2377,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/input_decorator.dart"
      });
    },
    get C582() {
      return C[582] = dart.const({
        __proto__: input_border._NoInputBorder.prototype,
        [S$.InputBorder_borderSide]: C[18] || CT.C18
      });
    },
    get C583() {
      return C[583] = dart.const({
        __proto__: input_decorator.InputDecorationTheme.prototype,
        [S$.constraints$3]: null,
        [S$.alignLabelWithHint$2]: false,
        [S$.border$3]: null,
        [S$.enabledBorder$1]: null,
        [S$.disabledBorder$1]: null,
        [S$.focusedErrorBorder$1]: null,
        [S$.focusedBorder$1]: null,
        [S$.errorBorder$1]: null,
        [S$.hoverColor$5]: null,
        [S$.focusColor$4]: null,
        [S$.fillColor$4]: null,
        [S$.filled$1]: false,
        [S$.counterStyle$1]: null,
        [S$.suffixIconColor$1]: null,
        [S$.suffixStyle$1]: null,
        [S$.prefixIconColor$1]: null,
        [S$.prefixStyle$1]: null,
        [S$.iconColor$1]: null,
        [S$.isCollapsed$2]: false,
        [S$.contentPadding$2]: null,
        [S$.isDense$2]: false,
        [S$.floatingLabelAlignment$2]: C[525] || CT.C525,
        [S$.floatingLabelBehavior$1]: C[523] || CT.C523,
        [S$.errorMaxLines$2]: null,
        [S$.errorStyle$2]: null,
        [S$.hintStyle$1]: null,
        [S$.helperMaxLines$2]: null,
        [S$.helperStyle$2]: null,
        [S$.floatingLabelStyle$1]: null,
        [S$.labelStyle$4]: null
      });
    },
    get C584() {
      return C[584] = dart.const({
        __proto__: border_radius.BorderRadius.prototype,
        [S.BorderRadius_bottomRight]: C[555] || CT.C555,
        [S.BorderRadius_bottomLeft]: C[555] || CT.C555,
        [S.BorderRadius_topRight]: C[555] || CT.C555,
        [S.BorderRadius_topLeft]: C[555] || CT.C555
      });
    },
    get C585() {
      return C[585] = dart.const({
        __proto__: ink_splash._InkSplashFactory.prototype
      });
    },
    get C586() {
      return C[586] = dart.const({
        __proto__: core.Duration.prototype,
        [S.Duration__duration]: 1000000
      });
    },
    get C587() {
      return C[587] = dart.const({
        __proto__: core.Duration.prototype,
        [S.Duration__duration]: 617000
      });
    },
    get C588() {
      return C[588] = dart.const({
        __proto__: ink_sparkle._InkSparkleFactory.prototype,
        [S$._InkSparkleFactory_turbulenceSeed]: null
      });
    },
    get C589() {
      return C[589] = dart.const({
        __proto__: ink_sparkle._InkSparkleFactory.prototype,
        [S$._InkSparkleFactory_turbulenceSeed]: 1337
      });
    },
    get C590() {
      return C[590] = dart.const({
        __proto__: ink_ripple._InkRippleFactory.prototype
      });
    },
    get C591() {
      return C[591] = dart.const({
        __proto__: curves.Interval.prototype,
        [S.Interval_curve]: C[355] || CT.C355,
        [S.Interval_end]: 1,
        [S.Interval_begin]: 0.6
      });
    },
    get C592() {
      return C[592] = dart.const({
        __proto__: core.Duration.prototype,
        [S.Duration__duration]: 75000
      });
    },
    get C593() {
      return C[593] = dart.const({
        __proto__: core.Duration.prototype,
        [S.Duration__duration]: 225000
      });
    },
    get C594() {
      return C[594] = dart.const({
        __proto__: core.Duration.prototype,
        [S.Duration__duration]: 375000
      });
    },
    get C595() {
      return C[595] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ExpansionTileTheme",
        [S._Location_column]: 9,
        [S._Location_line]: 185,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/expansion_tile_theme.dart"
      });
    },
    get C596() {
      return C[596] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ExpansionTileTheme",
        [S._Location_column]: 12,
        [S._Location_line]: 213,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/expansion_tile_theme.dart"
      });
    },
    get C597() {
      return C[597] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ElevatedButtonTheme",
        [S._Location_column]: 9,
        [S._Location_line]: 94,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/elevated_button_theme.dart"
      });
    },
    get C598() {
      return C[598] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ElevatedButtonTheme",
        [S._Location_column]: 12,
        [S._Location_line]: 120,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/elevated_button_theme.dart"
      });
    },
    get C599() {
      return C[599] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "DataTableTheme",
        [S._Location_column]: 9,
        [S._Location_line]: 210,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/data_table_theme.dart"
      });
    },
    get C600() {
      return C[600] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ChipTheme",
        [S._Location_column]: 9,
        [S._Location_line]: 46,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/chip_theme.dart"
      });
    },
    get C601() {
      return C[601] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ChipTheme",
        [S._Location_column]: 12,
        [S._Location_line]: 94,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/chip_theme.dart"
      });
    },
    get C602() {
      return C[602] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "CheckboxTheme",
        [S._Location_column]: 9,
        [S._Location_line]: 215,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/checkbox_theme.dart"
      });
    },
    get C603() {
      return C[603] = dart.const({
        __proto__: theme_data.VisualDensity.prototype,
        [S$0.VisualDensity_vertical]: 0,
        [S$0.VisualDensity_horizontal]: 0
      });
    },
    get C604() {
      return C[604] = dart.const({
        __proto__: box$.BoxConstraints.prototype,
        [S.BoxConstraints_maxHeight]: 1 / 0,
        [S.BoxConstraints_minHeight]: 36,
        [S.BoxConstraints_maxWidth]: 1 / 0,
        [S.BoxConstraints_minWidth]: 88
      });
    },
    get C605() {
      return C[605] = dart.const({
        __proto__: rounded_rectangle_border.RoundedRectangleBorder.prototype,
        [S.OutlinedBorder_side]: C[18] || CT.C18,
        [S.RoundedRectangleBorder_borderRadius]: C[584] || CT.C584
      });
    },
    get C606() {
      return C[606] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "RawMaterialButton",
        [S._Location_column]: 9,
        [S._Location_line]: 46,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/button.dart"
      });
    },
    get C607() {
      return C[607] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Center",
        [S._Location_column]: 22,
        [S._Location_line]: 403,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/button.dart"
      });
    },
    get C608() {
      return C[608] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Container",
        [S._Location_column]: 20,
        [S._Location_line]: 401,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/button.dart"
      });
    },
    get C609() {
      return C[609] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "InkWell",
        [S._Location_column]: 16,
        [S._Location_line]: 383,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/button.dart"
      });
    },
    get C610() {
      return C[610] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Material",
        [S._Location_column]: 14,
        [S._Location_line]: 373,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/button.dart"
      });
    },
    get C611() {
      return C[611] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ConstrainedBox",
        [S._Location_column]: 27,
        [S._Location_line]: 371,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/button.dart"
      });
    },
    get C612() {
      return C[612] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_InputPadding",
        [S._Location_column]: 14,
        [S._Location_line]: 432,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/button.dart"
      });
    },
    get C613() {
      return C[613] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 12,
        [S._Location_line]: 428,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/button.dart"
      });
    },
    get C614() {
      return C[614] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_InputPadding",
        [S._Location_column]: 9,
        [S._Location_line]: 446,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/button.dart"
      });
    },
    get C615() {
      return C[615] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "MaterialButton",
        [S._Location_column]: 9,
        [S._Location_line]: 52,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/material_button.dart"
      });
    },
    get C616() {
      return C[616] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "RawMaterialButton",
        [S._Location_column]: 12,
        [S._Location_line]: 391,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/material_button.dart"
      });
    },
    get C617() {
      return C[617] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4284612846.0
      });
    },
    get C618() {
      return C[618] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4294967295.0
      });
    },
    get C619() {
      return C[619] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4278442694.0
      });
    },
    get C620() {
      return C[620] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4289724448.0
      });
    },
    get C621() {
      return C[621] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4281794739.0
      });
    },
    get C622() {
      return C[622] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4278290310.0
      });
    },
    get C623() {
      return C[623] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4290479868.0
      });
    },
    get C624() {
      return C[624] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4291782265.0
      });
    },
    get C625() {
      return C[625] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4279374354.0
      });
    },
    get C626() {
      return C[626] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4278190266.0
      });
    },
    get C627() {
      return C[627] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4284940281.0
      });
    },
    get C628() {
      return C[628] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4286119936.0
      });
    },
    get C629() {
      return C[629] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4278190216.0
      });
    },
    get C630() {
      return C[630] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4293900287.0
      });
    },
    get C631() {
      return C[631] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4288362317.0
      });
    },
    get C632() {
      return C[632] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4290682623.0
      });
    },
    get C635() {
      return C[635] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4293128957.0
      });
    },
    get C636() {
      return C[636] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4290502395.0
      });
    },
    get C637() {
      return C[637] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4287679225.0
      });
    },
    get C638() {
      return C[638] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4284790262.0
      });
    },
    get C639() {
      return C[639] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4282557941.0
      });
    },
    get C640() {
      return C[640] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4280391411.0
      });
    },
    get C641() {
      return C[641] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4280191205.0
      });
    },
    get C642() {
      return C[642] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4279858898.0
      });
    },
    get C643() {
      return C[643] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4279592384.0
      });
    },
    get C644() {
      return C[644] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4279060385.0
      });
    },
    get C634() {
      return C[634] = dart.constMap(core.int, ui.Color, [50, C[635] || CT.C635, 100, C[636] || CT.C636, 200, C[637] || CT.C637, 300, C[638] || CT.C638, 400, C[639] || CT.C639, 500, C[640] || CT.C640, 600, C[641] || CT.C641, 700, C[642] || CT.C642, 800, C[643] || CT.C643, 900, C[644] || CT.C644]);
    },
    get C633() {
      return C[633] = dart.const({
        __proto__: colors$.MaterialColor.prototype,
        [S.Color_value]: 4280391411.0,
        [S$0.ColorSwatch__swatch]: C[634] || CT.C634
      });
    },
    get C645() {
      return C[645] = dart.const({
        __proto__: color_scheme.ColorScheme.prototype,
        [S$0._secondaryVariant]: C[622] || CT.C622,
        [S$0._primaryVariant]: C[621] || CT.C621,
        [S$0._surfaceTint]: null,
        [S$0._inversePrimary]: null,
        [S$0._onInverseSurface]: null,
        [S$0._inverseSurface]: null,
        [S$0._shadow]: null,
        [S$0._outline]: null,
        [S$0._onSurfaceVariant]: null,
        [S$0._surfaceVariant]: null,
        [S$0.onSurface]: C[21] || CT.C21,
        [S$0.surface]: C[618] || CT.C618,
        [S$0.onBackground]: C[21] || CT.C21,
        [S$0.background$1]: C[618] || CT.C618,
        [S$0._onErrorContainer]: null,
        [S$0._errorContainer]: null,
        [S$0.onError]: C[618] || CT.C618,
        [S$0.error]: C[620] || CT.C620,
        [S$0._onTertiaryContainer]: null,
        [S$0._tertiaryContainer]: null,
        [S$0._onTertiary]: null,
        [S$0._tertiary]: null,
        [S$0._onSecondaryContainer]: null,
        [S$0._secondaryContainer]: null,
        [S$0.onSecondary]: C[21] || CT.C21,
        [S$0.secondary]: C[619] || CT.C619,
        [S$0._onPrimaryContainer]: null,
        [S$0._primaryContainer]: null,
        [S$0.onPrimary]: C[618] || CT.C618,
        [S$0.primary]: C[617] || CT.C617,
        [S$0.brightness$1]: C[551] || CT.C551
      });
    },
    get C647() {
      return C[647] = dart.const({
        __proto__: button_theme.ButtonTextTheme.prototype,
        [S._Enum__name]: "normal",
        [S._Enum_index]: 0
      });
    },
    get C648() {
      return C[648] = dart.const({
        __proto__: button_theme.ButtonTextTheme.prototype,
        [S._Enum__name]: "accent",
        [S._Enum_index]: 1
      });
    },
    get C649() {
      return C[649] = dart.const({
        __proto__: button_theme.ButtonTextTheme.prototype,
        [S._Enum__name]: "primary",
        [S._Enum_index]: 2
      });
    },
    get C646() {
      return C[646] = dart.constList([C[647] || CT.C647, C[648] || CT.C648, C[649] || CT.C649], button_theme.ButtonTextTheme);
    },
    get C651() {
      return C[651] = dart.const({
        __proto__: button_theme.ButtonBarLayoutBehavior.prototype,
        [S._Enum__name]: "constrained",
        [S._Enum_index]: 0
      });
    },
    get C652() {
      return C[652] = dart.const({
        __proto__: button_theme.ButtonBarLayoutBehavior.prototype,
        [S._Enum__name]: "padded",
        [S._Enum_index]: 1
      });
    },
    get C650() {
      return C[650] = dart.constList([C[651] || CT.C651, C[652] || CT.C652], button_theme.ButtonBarLayoutBehavior);
    },
    get C653() {
      return C[653] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ButtonTheme",
        [S._Location_column]: 3,
        [S._Location_line]: 68,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/button_theme.dart"
      });
    },
    get C654() {
      return C[654] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ButtonTheme",
        [S._Location_column]: 9,
        [S._Location_line]: 112,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/button_theme.dart"
      });
    },
    get C655() {
      return C[655] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ButtonTheme",
        [S._Location_column]: 24,
        [S._Location_line]: 146,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/button_theme.dart"
      });
    },
    get C656() {
      return C[656] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 0,
        [S.EdgeInsets_right]: 16,
        [S.EdgeInsets_top]: 0,
        [S.EdgeInsets_left]: 16
      });
    },
    get C657() {
      return C[657] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 0,
        [S.EdgeInsets_right]: 24,
        [S.EdgeInsets_top]: 0,
        [S.EdgeInsets_left]: 24
      });
    },
    get C660() {
      return C[660] = dart.const({
        __proto__: ui.Radius.prototype,
        [S.Radius_y]: 2,
        [S.Radius_x]: 2
      });
    },
    get C659() {
      return C[659] = dart.const({
        __proto__: border_radius.BorderRadius.prototype,
        [S.BorderRadius_bottomRight]: C[660] || CT.C660,
        [S.BorderRadius_bottomLeft]: C[660] || CT.C660,
        [S.BorderRadius_topRight]: C[660] || CT.C660,
        [S.BorderRadius_topLeft]: C[660] || CT.C660
      });
    },
    get C658() {
      return C[658] = dart.const({
        __proto__: rounded_rectangle_border.RoundedRectangleBorder.prototype,
        [S.OutlinedBorder_side]: C[18] || CT.C18,
        [S.RoundedRectangleBorder_borderRadius]: C[659] || CT.C659
      });
    },
    get C661() {
      return C[661] = dart.const({
        __proto__: edge_insets.EdgeInsetsDirectional.prototype,
        [S$.EdgeInsetsDirectional_bottom]: 0,
        [S$.EdgeInsetsDirectional_end]: 16,
        [S$.EdgeInsetsDirectional_top]: 0,
        [S$.EdgeInsetsDirectional_start]: 12
      });
    },
    get C662() {
      return C[662] = dart.const({
        __proto__: button_theme.ButtonThemeData.prototype,
        [S$0._materialTapTargetSize]: null,
        [S$0.colorScheme]: null,
        [S$0._splashColor]: null,
        [S$0._highlightColor]: null,
        [S$0._hoverColor]: null,
        [S$0._focusColor]: null,
        [S$0._disabledColor]: null,
        [S$0._buttonColor]: null,
        [S$0.alignedDropdown]: false,
        [S$0._shape]: null,
        [S$0._padding]: null,
        [S$0.layoutBehavior]: C[652] || CT.C652,
        [S$0.textTheme$1]: C[647] || CT.C647,
        [S$0.height$5]: 36,
        [S$0.minWidth$3]: 88
      });
    },
    get C663() {
      return C[663] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ButtonBarTheme",
        [S._Location_column]: 9,
        [S._Location_line]: 236,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/button_bar_theme.dart"
      });
    },
    get C664() {
      return C[664] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "TooltipTheme",
        [S._Location_column]: 9,
        [S._Location_line]: 265,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/tooltip_theme.dart"
      });
    },
    get C665() {
      return C[665] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "TooltipTheme",
        [S._Location_column]: 12,
        [S._Location_line]: 290,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/tooltip_theme.dart"
      });
    },
    get C667() {
      return C[667] = dart.const({
        __proto__: tooltip_theme.TooltipTriggerMode.prototype,
        [S._Enum__name]: "manual",
        [S._Enum_index]: 0
      });
    },
    get C668() {
      return C[668] = dart.const({
        __proto__: tooltip_theme.TooltipTriggerMode.prototype,
        [S._Enum__name]: "longPress",
        [S._Enum_index]: 1
      });
    },
    get C669() {
      return C[669] = dart.const({
        __proto__: tooltip_theme.TooltipTriggerMode.prototype,
        [S._Enum__name]: "tap",
        [S._Enum_index]: 2
      });
    },
    get C666() {
      return C[666] = dart.constList([C[667] || CT.C667, C[668] || CT.C668, C[669] || CT.C669], tooltip_theme.TooltipTriggerMode);
    },
    get C670() {
      return C[670] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Tooltip",
        [S._Location_column]: 9,
        [S._Location_line]: 97,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C671() {
      return C[671] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 4,
        [S.EdgeInsets_right]: 8,
        [S.EdgeInsets_top]: 4,
        [S.EdgeInsets_left]: 8
      });
    },
    get C672() {
      return C[672] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 4,
        [S.EdgeInsets_right]: 16,
        [S.EdgeInsets_top]: 4,
        [S.EdgeInsets_left]: 16
      });
    },
    get C673() {
      return C[673] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_TooltipOverlay",
        [S._Location_column]: 14,
        [S._Location_line]: 589,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C674() {
      return C[674] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Directionality",
        [S._Location_column]: 28,
        [S._Location_line]: 587,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C676() {
      return C[676] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SizedBox",
        [S._Location_column]: 36,
        [S._Location_line]: 699,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C675() {
      return C[675] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [S.Widget__location]: C[676] || CT.C676,
        [S.Widget_key]: null,
        [S$.SingleChildRenderObjectWidget_child]: null,
        [S$.SizedBox_height]: null,
        [S$.SizedBox_width]: null
      });
    },
    get C677() {
      return C[677] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 21,
        [S._Location_line]: 741,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C678() {
      return C[678] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "GestureDetector",
        [S._Location_column]: 16,
        [S._Location_line]: 750,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C679() {
      return C[679] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "MouseRegion",
        [S._Location_column]: 18,
        [S._Location_line]: 759,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C680() {
      return C[680] = dart.const({
        __proto__: core.Duration.prototype,
        [S.Duration__duration]: 150000
      });
    },
    get C681() {
      return C[681] = dart.const({
        __proto__: core.Duration.prototype,
        [S.Duration__duration]: 1500000
      });
    },
    get C682() {
      return C[682] = dart.const({
        __proto__: core.Duration.prototype,
        [S.Duration__duration]: 0
      });
    },
    get C683() {
      return C[683] = dart.const({
        __proto__: ui.TextAlign.prototype,
        [S._Enum__name]: "start",
        [S._Enum_index]: 4
      });
    },
    get C684() {
      return C[684] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_TooltipOverlay",
        [S._Location_column]: 9,
        [S._Location_line]: 822,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C685() {
      return C[685] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Text",
        [S._Location_column]: 29,
        [S._Location_line]: 868,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C686() {
      return C[686] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Center",
        [S._Location_column]: 22,
        [S._Location_line]: 865,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C687() {
      return C[687] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Container",
        [S._Location_column]: 20,
        [S._Location_line]: 861,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C688() {
      return C[688] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "DefaultTextStyle",
        [S._Location_column]: 18,
        [S._Location_line]: 859,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C689() {
      return C[689] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ConstrainedBox",
        [S._Location_column]: 16,
        [S._Location_line]: 857,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C690() {
      return C[690] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "FadeTransition",
        [S._Location_column]: 14,
        [S._Location_line]: 855,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C691() {
      return C[691] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "IgnorePointer",
        [S._Location_column]: 21,
        [S._Location_line]: 854,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C692() {
      return C[692] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "MouseRegion",
        [S._Location_column]: 16,
        [S._Location_line]: 880,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C693() {
      return C[693] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "CustomSingleChildLayout",
        [S._Location_column]: 14,
        [S._Location_line]: 888,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C694() {
      return C[694] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Positioned",
        [S._Location_column]: 23,
        [S._Location_line]: 886,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/tooltip.dart"
      });
    },
    get C696() {
      return C[696] = dart.const({
        __proto__: bottom_navigation_bar.BottomNavigationBarType.prototype,
        [S._Enum__name]: "fixed",
        [S._Enum_index]: 0
      });
    },
    get C697() {
      return C[697] = dart.const({
        __proto__: bottom_navigation_bar.BottomNavigationBarType.prototype,
        [S._Enum__name]: "shifting",
        [S._Enum_index]: 1
      });
    },
    get C695() {
      return C[695] = dart.constList([C[696] || CT.C696, C[697] || CT.C697], bottom_navigation_bar.BottomNavigationBarType);
    },
    get C699() {
      return C[699] = dart.const({
        __proto__: bottom_navigation_bar.BottomNavigationBarLandscapeLayout.prototype,
        [S._Enum__name]: "spread",
        [S._Enum_index]: 0
      });
    },
    get C700() {
      return C[700] = dart.const({
        __proto__: bottom_navigation_bar.BottomNavigationBarLandscapeLayout.prototype,
        [S._Enum__name]: "centered",
        [S._Enum_index]: 1
      });
    },
    get C701() {
      return C[701] = dart.const({
        __proto__: bottom_navigation_bar.BottomNavigationBarLandscapeLayout.prototype,
        [S._Enum__name]: "linear",
        [S._Enum_index]: 2
      });
    },
    get C698() {
      return C[698] = dart.constList([C[699] || CT.C699, C[700] || CT.C700, C[701] || CT.C701], bottom_navigation_bar.BottomNavigationBarLandscapeLayout);
    },
    get C702() {
      return C[702] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "BottomNavigationBar",
        [S._Location_column]: 3,
        [S._Location_line]: 173,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C703() {
      return C[703] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_BottomNavigationTile",
        [S._Location_column]: 9,
        [S._Location_line]: 391,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C704() {
      return C[704] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_TileIcon",
        [S._Location_column]: 17,
        [S._Location_line]: 525,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C705() {
      return C[705] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_Label",
        [S._Location_column]: 18,
        [S._Location_line]: 534,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C706() {
      return C[706] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_Tile",
        [S._Location_column]: 16,
        [S._Location_line]: 523,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C707() {
      return C[707] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Padding",
        [S._Location_column]: 14,
        [S._Location_line]: 521,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C708() {
      return C[708] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "InkResponse",
        [S._Location_column]: 21,
        [S._Location_line]: 517,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C709() {
      return C[709] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Tooltip",
        [S._Location_column]: 16,
        [S._Location_line]: 548,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C710() {
      return C[710] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 11,
        [S._Location_line]: 563,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C711() {
      return C[711] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Stack",
        [S._Location_column]: 14,
        [S._Location_line]: 560,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C712() {
      return C[712] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 14,
        [S._Location_line]: 557,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C713() {
      return C[713] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Expanded",
        [S._Location_column]: 12,
        [S._Location_line]: 570,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C714() {
      return C[714] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_Tile",
        [S._Location_column]: 9,
        [S._Location_line]: 583,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C716() {
      return C[716] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SizedBox",
        [S._Location_column]: 42,
        [S._Location_line]: 601,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C715() {
      return C[715] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [S.Widget__location]: C[716] || CT.C716,
        [S.Widget_key]: null,
        [S$.SingleChildRenderObjectWidget_child]: null,
        [S$.SizedBox_height]: null,
        [S$.SizedBox_width]: 8
      });
    },
    get C717() {
      return C[717] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Row",
        [S._Location_column]: 16,
        [S._Location_line]: 599,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C718() {
      return C[718] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Align",
        [S._Location_column]: 14,
        [S._Location_line]: 597,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C719() {
      return C[719] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Column",
        [S._Location_column]: 12,
        [S._Location_line]: 605,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C720() {
      return C[720] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_TileIcon",
        [S._Location_column]: 9,
        [S._Location_line]: 614,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C721() {
      return C[721] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "IconTheme",
        [S._Location_column]: 14,
        [S._Location_line]: 649,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C722() {
      return C[722] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Align",
        [S._Location_column]: 12,
        [S._Location_line]: 646,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C723() {
      return C[723] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_Label",
        [S._Location_column]: 9,
        [S._Location_line]: 658,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C724() {
      return C[724] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Text",
        [S._Location_column]: 16,
        [S._Location_line]: 710,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C725() {
      return C[725] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Transform",
        [S._Location_column]: 14,
        [S._Location_line]: 700,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C726() {
      return C[726] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Opacity",
        [S._Location_column]: 14,
        [S._Location_line]: 716,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C727() {
      return C[727] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "FadeTransition",
        [S._Location_column]: 14,
        [S._Location_line]: 723,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C728() {
      return C[728] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "FadeTransition",
        [S._Location_column]: 14,
        [S._Location_line]: 730,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C729() {
      return C[729] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Container",
        [S._Location_column]: 14,
        [S._Location_line]: 740,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C730() {
      return C[730] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Align",
        [S._Location_column]: 12,
        [S._Location_line]: 737,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C731() {
      return C[731] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "MediaQuery",
        [S._Location_column]: 14,
        [S._Location_line]: 747,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C732() {
      return C[732] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [S$0.TextStyle_overflow]: null,
        [S$0.TextStyle_fontVariations]: null,
        [S$0.TextStyle_fontFeatures]: null,
        [S$0.TextStyle_shadows]: null,
        [S$0.TextStyle_debugLabel]: null,
        [S$0.TextStyle_decorationThickness]: null,
        [S$0.TextStyle_decorationStyle]: null,
        [S$0.TextStyle_decorationColor]: null,
        [S$0.TextStyle_decoration]: null,
        [S$0.TextStyle_background]: null,
        [S$0.TextStyle_foreground]: null,
        [S$0.TextStyle_locale]: null,
        [S$0.TextStyle_leadingDistribution]: null,
        [S$0.TextStyle_height]: null,
        [S$0.TextStyle_textBaseline]: null,
        [S$0.TextStyle_wordSpacing]: null,
        [S$0.TextStyle_letterSpacing]: null,
        [S$0.TextStyle_fontStyle]: null,
        [S$0.TextStyle_fontWeight]: null,
        [S$0.TextStyle_fontSize]: null,
        [S$0.TextStyle__package]: null,
        [S$0.TextStyle__fontFamilyFallback]: null,
        [S$0.TextStyle_fontFamily]: null,
        [S$0.TextStyle_backgroundColor]: null,
        [S$0.TextStyle_color]: null,
        [S$0.TextStyle_inherit]: true
      });
    },
    get C733() {
      return C[733] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_BottomNavigationTile",
        [S._Location_column]: 17,
        [S._Location_line]: 976,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C734() {
      return C[734] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Row",
        [S._Location_column]: 29,
        [S._Location_line]: 1047,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C735() {
      return C[735] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "MediaQuery",
        [S._Location_column]: 35,
        [S._Location_line]: 1042,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C736() {
      return C[736] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Padding",
        [S._Location_column]: 22,
        [S._Location_line]: 1040,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C737() {
      return C[737] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Material",
        [S._Location_column]: 20,
        [S._Location_line]: 1038,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C738() {
      return C[738] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "CustomPaint",
        [S._Location_column]: 18,
        [S._Location_line]: 1033,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C739() {
      return C[739] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ConstrainedBox",
        [S._Location_column]: 16,
        [S._Location_line]: 1031,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C740() {
      return C[740] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_Bar",
        [S._Location_column]: 14,
        [S._Location_line]: 1027,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C741() {
      return C[741] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 12,
        [S._Location_line]: 1025,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C742() {
      return C[742] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_Bar",
        [S._Location_column]: 9,
        [S._Location_line]: 1065,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C743() {
      return C[743] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SizedBox",
        [S._Location_column]: 16,
        [S._Location_line]: 1085,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C744() {
      return C[744] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Align",
        [S._Location_column]: 22,
        [S._Location_line]: 1082,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C745() {
      return C[745] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Material",
        [S._Location_column]: 12,
        [S._Location_line]: 1091,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart"
      });
    },
    get C746() {
      return C[746] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "BottomNavigationBarTheme",
        [S._Location_column]: 9,
        [S._Location_line]: 276,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_navigation_bar_theme.dart"
      });
    },
    get C747() {
      return C[747] = dart.constList([C[64] || CT.C64, C[65] || CT.C65], theme_data.MaterialTapTargetSize);
    },
    get C748() {
      return C[748] = dart.const({
        __proto__: page_transitions_theme.PageTransitionsTheme.prototype,
        [S._builders]: C[364] || CT.C364
      });
    },
    get C749() {
      return C[749] = dart.const({
        __proto__: scrollbar_theme.ScrollbarThemeData.prototype,
        [S.minThumbLength]: null,
        [S.mainAxisMargin]: null,
        [S.crossAxisMargin]: null,
        [S.trackBorderColor]: null,
        [S.trackColor$1]: null,
        [S.thumbColor$2]: null,
        [S.radius]: null,
        [S.interactive]: null,
        [S.isAlwaysShown]: null,
        [S.showTrackOnHover]: null,
        [S.trackVisibility]: null,
        [S.thickness]: null,
        [S.thumbVisibility]: null
      });
    },
    get C750() {
      return C[750] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 536870911
      });
    },
    get C751() {
      return C[751] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 520093696
      });
    },
    get C752() {
      return C[752] = dart.const({
        __proto__: icon_theme_data.IconThemeData.prototype,
        [S$0.IconThemeData_shadows]: null,
        [S$0.IconThemeData_size]: null,
        [S$0.IconThemeData__opacity]: null,
        [S$0.IconThemeData_color]: C[618] || CT.C618
      });
    },
    get C754() {
      return C[754] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 3707764736.0
      });
    },
    get C753() {
      return C[753] = dart.const({
        __proto__: icon_theme_data.IconThemeData.prototype,
        [S$0.IconThemeData_shadows]: null,
        [S$0.IconThemeData_size]: null,
        [S$0.IconThemeData__opacity]: null,
        [S$0.IconThemeData_color]: C[754] || CT.C754
      });
    },
    get C755() {
      return C[755] = dart.const({
        __proto__: icon_theme_data.IconThemeData.prototype,
        [S$0.IconThemeData_shadows]: null,
        [S$0.IconThemeData_size]: null,
        [S$0.IconThemeData__opacity]: null,
        [S$0.IconThemeData_color]: C[21] || CT.C21
      });
    },
    get C756() {
      return C[756] = dart.const({
        __proto__: app_bar_theme.AppBarTheme.prototype,
        [S$0.AppBarTheme_backwardsCompatibility]: null,
        [S$0.AppBarTheme_systemOverlayStyle]: null,
        [S$0.AppBarTheme_titleTextStyle]: null,
        [S$0.AppBarTheme_toolbarTextStyle]: null,
        [S$0.AppBarTheme_toolbarHeight]: null,
        [S$0.AppBarTheme_titleSpacing]: null,
        [S$0.AppBarTheme_centerTitle]: null,
        [S$0.AppBarTheme_textTheme]: null,
        [S$0.AppBarTheme_actionsIconTheme]: null,
        [S$0.AppBarTheme_iconTheme]: null,
        [S$0.AppBarTheme_shape]: null,
        [S$0.AppBarTheme_surfaceTintColor]: null,
        [S$0.AppBarTheme_shadowColor]: null,
        [S$0.AppBarTheme_scrolledUnderElevation]: null,
        [S$0.AppBarTheme_elevation]: null,
        [S$0.AppBarTheme_foregroundColor]: null,
        [S$0.AppBarTheme_backgroundColor]: null,
        [S$0.AppBarTheme_brightness]: null
      });
    },
    get C757() {
      return C[757] = dart.const({
        __proto__: banner_theme.MaterialBannerThemeData.prototype,
        [S$0.MaterialBannerThemeData_leadingPadding]: null,
        [S$0.MaterialBannerThemeData_padding]: null,
        [S$0.MaterialBannerThemeData_elevation]: null,
        [S$0.MaterialBannerThemeData_contentTextStyle]: null,
        [S$0.MaterialBannerThemeData_backgroundColor]: null
      });
    },
    get C758() {
      return C[758] = dart.const({
        __proto__: bottom_app_bar_theme.BottomAppBarTheme.prototype,
        [S$0.shape$13]: null,
        [S$0.elevation$19]: null,
        [S$0.color$11]: null
      });
    },
    get C759() {
      return C[759] = dart.const({
        __proto__: bottom_navigation_bar_theme.BottomNavigationBarThemeData.prototype,
        [S$0.mouseCursor$14]: null,
        [S$0.landscapeLayout$1]: null,
        [S$0.enableFeedback$11]: null,
        [S$0.type$2]: null,
        [S$0.showUnselectedLabels$3]: null,
        [S$0.showSelectedLabels$3]: null,
        [S$0.unselectedLabelStyle$6]: null,
        [S$0.selectedLabelStyle$3]: null,
        [S$0.unselectedItemColor$1]: null,
        [S$0.selectedItemColor$1]: null,
        [S$0.unselectedIconTheme$5]: null,
        [S$0.selectedIconTheme$5]: null,
        [S$0.elevation$18]: null,
        [S$0.backgroundColor$14]: null
      });
    },
    get C760() {
      return C[760] = dart.const({
        __proto__: bottom_sheet_theme.BottomSheetThemeData.prototype,
        [S$0.BottomSheetThemeData_constraints]: null,
        [S$0.BottomSheetThemeData_clipBehavior]: null,
        [S$0.BottomSheetThemeData_shape]: null,
        [S$0.BottomSheetThemeData_modalElevation]: null,
        [S$0.BottomSheetThemeData_modalBackgroundColor]: null,
        [S$0.BottomSheetThemeData_elevation]: null,
        [S$0.BottomSheetThemeData_backgroundColor]: null
      });
    },
    get C761() {
      return C[761] = dart.const({
        __proto__: button_bar_theme.ButtonBarThemeData.prototype,
        [S$0.overflowDirection]: null,
        [S$0.layoutBehavior$1]: null,
        [S$0.buttonAlignedDropdown]: null,
        [S$0.buttonPadding]: null,
        [S$0.buttonHeight]: null,
        [S$0.buttonMinWidth]: null,
        [S$0.buttonTextTheme]: null,
        [S$0.mainAxisSize]: null,
        [S$0.alignment$3]: null
      });
    },
    get C762() {
      return C[762] = dart.const({
        __proto__: card_theme.CardTheme.prototype,
        [S$.shape$10]: null,
        [S$.margin$1]: null,
        [S$.elevation$13]: null,
        [S$.surfaceTintColor$4]: null,
        [S$.shadowColor$2]: null,
        [S$.color$8]: null,
        [S$.clipBehavior$4]: null
      });
    },
    get C763() {
      return C[763] = dart.const({
        __proto__: chip_theme.ChipThemeData.prototype,
        [S$.iconTheme$1]: null,
        [S$.pressElevation]: null,
        [S$.elevation$12]: null,
        [S$.brightness]: null,
        [S$.secondaryLabelStyle]: null,
        [S$.labelStyle$5]: null,
        [S$.shape$8]: null,
        [S$.side$1]: null,
        [S$.padding$5]: null,
        [S$.labelPadding$2]: null,
        [S$.checkmarkColor]: null,
        [S$.showCheckmark]: null,
        [S$.selectedShadowColor]: null,
        [S$.surfaceTintColor$3]: null,
        [S$.shadowColor$1]: null,
        [S$.secondarySelectedColor]: null,
        [S$.selectedColor$2]: null,
        [S$.disabledColor$2]: null,
        [S$.deleteIconColor]: null,
        [S$.backgroundColor$12]: null
      });
    },
    get C764() {
      return C[764] = dart.const({
        __proto__: checkbox_theme.CheckboxThemeData.prototype,
        [S$.side$2]: null,
        [S$.shape$9]: null,
        [S$.visualDensity$4]: null,
        [S$.materialTapTargetSize$3]: null,
        [S$.splashRadius$3]: null,
        [S$.overlayColor$6]: null,
        [S$.checkColor]: null,
        [S$.fillColor$5]: null,
        [S$.mouseCursor$9]: null
      });
    },
    get C765() {
      return C[765] = dart.const({
        __proto__: data_table_theme.DataTableThemeData.prototype,
        [S$.checkboxHorizontalMargin]: null,
        [S$.dividerThickness]: null,
        [S$.columnSpacing]: null,
        [S$.horizontalMargin]: null,
        [S$.headingTextStyle]: null,
        [S$.headingRowHeight]: null,
        [S$.headingRowColor]: null,
        [S$.dataTextStyle]: null,
        [S$.dataRowHeight]: null,
        [S$.dataRowColor]: null,
        [S$.decoration$2]: null
      });
    },
    get C766() {
      return C[766] = dart.const({
        __proto__: dialog_theme.DialogTheme.prototype,
        [S$.iconColor$3]: null,
        [S$.actionsPadding]: null,
        [S$.contentTextStyle$1]: null,
        [S$.titleTextStyle]: null,
        [S$.alignment$2]: null,
        [S$.shape$7]: null,
        [S$.elevation$11]: null,
        [S$.backgroundColor$11]: null
      });
    },
    get C767() {
      return C[767] = dart.const({
        __proto__: divider_theme.DividerThemeData.prototype,
        [S$0.DividerThemeData_endIndent]: null,
        [S$0.DividerThemeData_indent]: null,
        [S$0.DividerThemeData_thickness]: null,
        [S$0.DividerThemeData_space]: null,
        [S$0.DividerThemeData_color]: null
      });
    },
    get C768() {
      return C[768] = dart.const({
        __proto__: drawer_theme.DrawerThemeData.prototype,
        [S$0.DrawerThemeData_width]: null,
        [S$0.DrawerThemeData_shape]: null,
        [S$0.DrawerThemeData_elevation]: null,
        [S$0.DrawerThemeData_scrimColor]: null,
        [S$0.DrawerThemeData_backgroundColor]: null
      });
    },
    get C769() {
      return C[769] = dart.const({
        __proto__: elevated_button_theme.ElevatedButtonThemeData.prototype,
        [S$.style$6]: null
      });
    },
    get C770() {
      return C[770] = dart.const({
        __proto__: floating_action_button_theme.FloatingActionButtonThemeData.prototype,
        [S$0.FloatingActionButtonThemeData_extendedTextStyle]: null,
        [S$0.FloatingActionButtonThemeData_extendedPadding]: null,
        [S$0.FloatingActionButtonThemeData_extendedIconLabelSpacing]: null,
        [S$0.FloatingActionButtonThemeData_extendedSizeConstraints]: null,
        [S$1.FloatingActionButtonThemeData_largeSizeConstraints]: null,
        [S$1.FloatingActionButtonThemeData_smallSizeConstraints]: null,
        [S$1.FloatingActionButtonThemeData_sizeConstraints]: null,
        [S$1.FloatingActionButtonThemeData_iconSize]: null,
        [S$1.FloatingActionButtonThemeData_enableFeedback]: null,
        [S$1.FloatingActionButtonThemeData_shape]: null,
        [S$1.FloatingActionButtonThemeData_highlightElevation]: null,
        [S$1.FloatingActionButtonThemeData_disabledElevation]: null,
        [S$1.FloatingActionButtonThemeData_hoverElevation]: null,
        [S$1.FloatingActionButtonThemeData_focusElevation]: null,
        [S$1.FloatingActionButtonThemeData_elevation]: null,
        [S$1.FloatingActionButtonThemeData_splashColor]: null,
        [S$1.FloatingActionButtonThemeData_hoverColor]: null,
        [S$1.FloatingActionButtonThemeData_focusColor]: null,
        [S$1.FloatingActionButtonThemeData_backgroundColor]: null,
        [S$1.FloatingActionButtonThemeData_foregroundColor]: null
      });
    },
    get C771() {
      return C[771] = dart.const({
        __proto__: list_tile_theme.ListTileThemeData.prototype,
        [S$1.ListTileThemeData_visualDensity]: null,
        [S$1.ListTileThemeData_mouseCursor]: null,
        [S$1.ListTileThemeData_enableFeedback]: null,
        [S$1.ListTileThemeData_minLeadingWidth]: null,
        [S$1.ListTileThemeData_minVerticalPadding]: null,
        [S$1.ListTileThemeData_horizontalTitleGap]: null,
        [S$1.ListTileThemeData_selectedTileColor]: null,
        [S$1.ListTileThemeData_tileColor]: null,
        [S$1.ListTileThemeData_contentPadding]: null,
        [S$1.ListTileThemeData_textColor]: null,
        [S$1.ListTileThemeData_iconColor]: null,
        [S$1.ListTileThemeData_selectedColor]: null,
        [S$1.ListTileThemeData_style]: null,
        [S$1.ListTileThemeData_shape]: null,
        [S$1.ListTileThemeData_dense]: null
      });
    },
    get C772() {
      return C[772] = dart.const({
        __proto__: navigation_bar_theme.NavigationBarThemeData.prototype,
        [S$.labelBehavior$2]: null,
        [S$.iconTheme]: null,
        [S$.labelTextStyle]: null,
        [S$.indicatorShape]: null,
        [S$.indicatorColor$4]: null,
        [S$.elevation$10]: null,
        [S$.surfaceTintColor$2]: null,
        [S$.backgroundColor$9]: null,
        [S$.height$3]: null
      });
    },
    get C773() {
      return C[773] = dart.const({
        __proto__: outlined_button_theme.OutlinedButtonThemeData.prototype,
        [S.style$4]: null
      });
    },
    get C774() {
      return C[774] = dart.const({
        __proto__: popup_menu_theme.PopupMenuThemeData.prototype,
        [S.mouseCursor$8]: null,
        [S.enableFeedback$4]: null,
        [S.textStyle$2]: null,
        [S.elevation$6]: null,
        [S.shape$5]: null,
        [S.color$6]: null
      });
    },
    get C775() {
      return C[775] = dart.const({
        __proto__: progress_indicator_theme.ProgressIndicatorThemeData.prototype,
        [S.refreshBackgroundColor]: null,
        [S.circularTrackColor]: null,
        [S.linearMinHeight]: null,
        [S.linearTrackColor]: null,
        [S.color$5]: null
      });
    },
    get C776() {
      return C[776] = dart.const({
        __proto__: radio_theme.RadioThemeData.prototype,
        [S.visualDensity$2]: null,
        [S.materialTapTargetSize$2]: null,
        [S.splashRadius$2]: null,
        [S.overlayColor$5]: null,
        [S.fillColor$1]: null,
        [S.mouseCursor$7]: null
      });
    },
    get C777() {
      return C[777] = dart.const({
        __proto__: snack_bar_theme.SnackBarThemeData.prototype,
        [S.behavior$1]: null,
        [S.shape$4]: null,
        [S.elevation$3]: null,
        [S.contentTextStyle]: null,
        [S.disabledActionTextColor]: null,
        [S.actionTextColor]: null,
        [S.backgroundColor$5]: null
      });
    },
    get C778() {
      return C[778] = dart.const({
        __proto__: switch_theme.SwitchThemeData.prototype,
        [S.splashRadius$1]: null,
        [S.overlayColor$3]: null,
        [S.mouseCursor$5]: null,
        [S.materialTapTargetSize$1]: null,
        [S.trackColor]: null,
        [S.thumbColor]: null
      });
    },
    get C779() {
      return C[779] = dart.const({
        __proto__: tab_bar_theme.TabBarTheme.prototype,
        [S.mouseCursor$4]: null,
        [S.splashFactory$2]: null,
        [S.overlayColor$2]: null,
        [S.unselectedLabelStyle$2]: null,
        [S.unselectedLabelColor$2]: null,
        [S.labelStyle$2]: null,
        [S.labelPadding$1]: null,
        [S.labelColor$2]: null,
        [S.indicatorSize$2]: null,
        [S.indicator$1]: null
      });
    },
    get C780() {
      return C[780] = dart.const({
        __proto__: text_button_theme.TextButtonThemeData.prototype,
        [S.style$3]: null
      });
    },
    get C781() {
      return C[781] = dart.const({
        __proto__: text_selection_theme.TextSelectionThemeData.prototype,
        [S.selectionHandleColor]: null,
        [S.selectionColor]: null,
        [S.cursorColor]: null
      });
    },
    get C782() {
      return C[782] = dart.const({
        __proto__: time_picker_theme.TimePickerThemeData.prototype,
        [S.inputDecorationTheme]: null,
        [S.dayPeriodBorderSide]: null,
        [S.dayPeriodShape]: null,
        [S.hourMinuteShape]: null,
        [S.shape$3]: null,
        [S.helpTextStyle]: null,
        [S.dayPeriodTextStyle]: null,
        [S.hourMinuteTextStyle]: null,
        [S.entryModeIconColor]: null,
        [S.dialTextColor]: null,
        [S.dialBackgroundColor]: null,
        [S.dialHandColor]: null,
        [S.dayPeriodColor]: null,
        [S.dayPeriodTextColor]: null,
        [S.hourMinuteColor]: null,
        [S.hourMinuteTextColor]: null,
        [S.backgroundColor$3]: null
      });
    },
    get C783() {
      return C[783] = dart.const({
        __proto__: toggle_buttons_theme.ToggleButtonsThemeData.prototype,
        [S.borderRadius]: null,
        [S.borderWidth]: null,
        [S.disabledBorderColor]: null,
        [S.selectedBorderColor]: null,
        [S.borderColor]: null,
        [S.hoverColor$2]: null,
        [S.splashColor$2]: null,
        [S.highlightColor$1]: null,
        [S.focusColor$2]: null,
        [S.fillColor]: null,
        [S.disabledColor$1]: null,
        [S.selectedColor]: null,
        [S.color$3]: null,
        [S.constraints$1]: null,
        [S.textStyle$1]: null
      });
    },
    get C784() {
      return C[784] = dart.const({
        __proto__: tooltip_theme.TooltipThemeData.prototype,
        [S$0.enableFeedback$7]: null,
        [S$0.triggerMode]: null,
        [S$0.showDuration]: null,
        [S$0.waitDuration]: null,
        [S$0.textAlign$2]: null,
        [S$0.textStyle$4]: null,
        [S$0.decoration$3]: null,
        [S$0.excludeFromSemantics]: null,
        [S$0.preferBelow]: null,
        [S$0.verticalOffset]: null,
        [S$0.margin$2]: null,
        [S$0.padding$8]: null,
        [S$0.height$6]: null
      });
    },
    get C785() {
      return C[785] = dart.const({
        __proto__: expansion_tile_theme.ExpansionTileThemeData.prototype,
        [S$.collapsedTextColor]: null,
        [S$.textColor$1]: null,
        [S$.collapsedIconColor]: null,
        [S$.iconColor$2]: null,
        [S$.childrenPadding]: null,
        [S$.expandedAlignment]: null,
        [S$.tilePadding]: null,
        [S$.collapsedBackgroundColor]: null,
        [S$.backgroundColor$10]: null
      });
    },
    get C790() {
      return C[790] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4285887861.0
      });
    },
    get C791() {
      return C[791] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4288256409.0
      });
    },
    get C789() {
      return C[789] = dart.const({
        __proto__: colors$0.CupertinoDynamicColor.prototype,
        [S.Color_value]: 0,
        [S$1.CupertinoDynamicColor_darkHighContrastElevatedColor]: C[790] || CT.C790,
        [S$1.CupertinoDynamicColor_highContrastElevatedColor]: C[791] || CT.C791,
        [S$1.CupertinoDynamicColor_darkElevatedColor]: C[790] || CT.C790,
        [S$1.CupertinoDynamicColor_elevatedColor]: C[791] || CT.C791,
        [S$1.CupertinoDynamicColor_darkHighContrastColor]: C[790] || CT.C790,
        [S$1.CupertinoDynamicColor_highContrastColor]: C[791] || CT.C791,
        [S$1.CupertinoDynamicColor_darkColor]: C[790] || CT.C790,
        [S$1.CupertinoDynamicColor_color]: C[791] || CT.C791,
        [S$1.CupertinoDynamicColor__debugResolveContext]: null,
        [S$1.CupertinoDynamicColor__debugLabel]: "inactiveGray",
        [S$1.CupertinoDynamicColor__effectiveColor]: C[791] || CT.C791
      });
    },
    get C792() {
      return C[792] = dart.const({
        __proto__: colors$0.CupertinoDynamicColor.prototype,
        [S.Color_value]: 0,
        [S$1.CupertinoDynamicColor_darkHighContrastElevatedColor]: C[618] || CT.C618,
        [S$1.CupertinoDynamicColor_highContrastElevatedColor]: C[21] || CT.C21,
        [S$1.CupertinoDynamicColor_darkElevatedColor]: C[618] || CT.C618,
        [S$1.CupertinoDynamicColor_elevatedColor]: C[21] || CT.C21,
        [S$1.CupertinoDynamicColor_darkHighContrastColor]: C[618] || CT.C618,
        [S$1.CupertinoDynamicColor_highContrastColor]: C[21] || CT.C21,
        [S$1.CupertinoDynamicColor_darkColor]: C[618] || CT.C618,
        [S$1.CupertinoDynamicColor_color]: C[21] || CT.C21,
        [S$1.CupertinoDynamicColor__debugResolveContext]: null,
        [S$1.CupertinoDynamicColor__debugLabel]: "label",
        [S$1.CupertinoDynamicColor__effectiveColor]: C[21] || CT.C21
      });
    },
    get C788() {
      return C[788] = dart.const({
        __proto__: theme._CupertinoTextThemeDefaults.prototype,
        [S$1._CupertinoTextThemeDefaults_inactiveGray]: C[789] || CT.C789,
        [S$1._CupertinoTextThemeDefaults_labelColor]: C[792] || CT.C792
      });
    },
    get C794() {
      return C[794] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4280558630.0
      });
    },
    get C795() {
      return C[795] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4280032286.0
      });
    },
    get C793() {
      return C[793] = dart.const({
        __proto__: colors$0.CupertinoDynamicColor.prototype,
        [S.Color_value]: 0,
        [S$1.CupertinoDynamicColor_darkHighContrastElevatedColor]: C[794] || CT.C794,
        [S$1.CupertinoDynamicColor_highContrastElevatedColor]: C[618] || CT.C618,
        [S$1.CupertinoDynamicColor_darkElevatedColor]: C[795] || CT.C795,
        [S$1.CupertinoDynamicColor_elevatedColor]: C[618] || CT.C618,
        [S$1.CupertinoDynamicColor_darkHighContrastColor]: C[21] || CT.C21,
        [S$1.CupertinoDynamicColor_highContrastColor]: C[618] || CT.C618,
        [S$1.CupertinoDynamicColor_darkColor]: C[21] || CT.C21,
        [S$1.CupertinoDynamicColor_color]: C[618] || CT.C618,
        [S$1.CupertinoDynamicColor__debugResolveContext]: null,
        [S$1.CupertinoDynamicColor__debugLabel]: "systemBackground",
        [S$1.CupertinoDynamicColor__effectiveColor]: C[618] || CT.C618
      });
    },
    get C797() {
      return C[797] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4028439837.0
      });
    },
    get C798() {
      return C[798] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4042914297.0
      });
    },
    get C796() {
      return C[796] = dart.const({
        __proto__: colors$0.CupertinoDynamicColor.prototype,
        [S.Color_value]: 0,
        [S$1.CupertinoDynamicColor_darkHighContrastElevatedColor]: C[797] || CT.C797,
        [S$1.CupertinoDynamicColor_highContrastElevatedColor]: C[798] || CT.C798,
        [S$1.CupertinoDynamicColor_darkElevatedColor]: C[797] || CT.C797,
        [S$1.CupertinoDynamicColor_elevatedColor]: C[798] || CT.C798,
        [S$1.CupertinoDynamicColor_darkHighContrastColor]: C[797] || CT.C797,
        [S$1.CupertinoDynamicColor_highContrastColor]: C[798] || CT.C798,
        [S$1.CupertinoDynamicColor_darkColor]: C[797] || CT.C797,
        [S$1.CupertinoDynamicColor_color]: C[798] || CT.C798,
        [S$1.CupertinoDynamicColor__debugResolveContext]: null,
        [S$1.CupertinoDynamicColor__debugLabel]: null,
        [S$1.CupertinoDynamicColor__effectiveColor]: C[798] || CT.C798
      });
    },
    get C800() {
      return C[800] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4282424575.0
      });
    },
    get C801() {
      return C[801] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4278206685.0
      });
    },
    get C802() {
      return C[802] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4278879487.0
      });
    },
    get C803() {
      return C[803] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 4278221567.0
      });
    },
    get C799() {
      return C[799] = dart.const({
        __proto__: colors$0.CupertinoDynamicColor.prototype,
        [S.Color_value]: 0,
        [S$1.CupertinoDynamicColor_darkHighContrastElevatedColor]: C[800] || CT.C800,
        [S$1.CupertinoDynamicColor_highContrastElevatedColor]: C[801] || CT.C801,
        [S$1.CupertinoDynamicColor_darkElevatedColor]: C[802] || CT.C802,
        [S$1.CupertinoDynamicColor_elevatedColor]: C[803] || CT.C803,
        [S$1.CupertinoDynamicColor_darkHighContrastColor]: C[800] || CT.C800,
        [S$1.CupertinoDynamicColor_highContrastColor]: C[801] || CT.C801,
        [S$1.CupertinoDynamicColor_darkColor]: C[802] || CT.C802,
        [S$1.CupertinoDynamicColor_color]: C[803] || CT.C803,
        [S$1.CupertinoDynamicColor__debugResolveContext]: null,
        [S$1.CupertinoDynamicColor__debugLabel]: "systemBlue",
        [S$1.CupertinoDynamicColor__effectiveColor]: C[803] || CT.C803
      });
    },
    get C787() {
      return C[787] = dart.const({
        __proto__: theme._CupertinoThemeDefaults.prototype,
        [S$1._CupertinoThemeDefaults_textThemeDefaults]: C[788] || CT.C788,
        [S$1._CupertinoThemeDefaults_scaffoldBackgroundColor]: C[793] || CT.C793,
        [S$1._CupertinoThemeDefaults_barBackgroundColor]: C[796] || CT.C796,
        [S$1._CupertinoThemeDefaults_primaryContrastingColor]: C[793] || CT.C793,
        [S$1._CupertinoThemeDefaults_primaryColor]: C[799] || CT.C799,
        [S$1._CupertinoThemeDefaults_brightness]: null
      });
    },
    get C786() {
      return C[786] = dart.const({
        __proto__: theme.CupertinoThemeData.prototype,
        [S$1.NoDefaultCupertinoThemeData_scaffoldBackgroundColor]: null,
        [S$1.NoDefaultCupertinoThemeData_barBackgroundColor]: null,
        [S$1.NoDefaultCupertinoThemeData_textTheme]: null,
        [S$1.NoDefaultCupertinoThemeData_primaryContrastingColor]: null,
        [S$1.NoDefaultCupertinoThemeData_primaryColor]: null,
        [S$1.NoDefaultCupertinoThemeData_brightness]: null,
        [S$1.CupertinoThemeData__defaults]: C[787] || CT.C787
      });
    },
    get C804() {
      return C[804] = dart.const({
        __proto__: theme_data.VisualDensity.prototype,
        [S$0.VisualDensity_vertical]: -1,
        [S$0.VisualDensity_horizontal]: -1
      });
    },
    get C805() {
      return C[805] = dart.const({
        __proto__: theme_data.VisualDensity.prototype,
        [S$0.VisualDensity_vertical]: -2,
        [S$0.VisualDensity_horizontal]: -2
      });
    },
    get C806() {
      return C[806] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 1723645116
      });
    },
    get C807() {
      return C[807] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 1724434632
      });
    },
    get C808() {
      return C[808] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 1087163596
      });
    },
    get C809() {
      return C[809] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ListTileTheme",
        [S._Location_column]: 9,
        [S._Location_line]: 251,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/list_tile_theme.dart"
      });
    },
    get C810() {
      return C[810] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ListTileTheme",
        [S._Location_column]: 16,
        [S._Location_line]: 454,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/list_tile_theme.dart"
      });
    },
    get C811() {
      return C[811] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Builder",
        [S._Location_column]: 12,
        [S._Location_line]: 451,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/list_tile_theme.dart"
      });
    },
    get C812() {
      return C[812] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ListTileTheme",
        [S._Location_column]: 12,
        [S._Location_line]: 479,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/list_tile_theme.dart"
      });
    },
    get C813() {
      return C[813] = dart.const({
        __proto__: box_border.BoxShape.prototype,
        [S._Enum__name]: "rectangle",
        [S._Enum_index]: 0
      });
    },
    get C814() {
      return C[814] = dart.const({
        __proto__: box_border.BoxShape.prototype,
        [S._Enum__name]: "circle",
        [S._Enum_index]: 1
      });
    },
    get C815() {
      return C[815] = dart.const({
        __proto__: semantics_event.TapSemanticEvent.prototype,
        [S$1.SemanticsEvent_type]: "tap"
      });
    },
    get C816() {
      return C[816] = dart.const({
        __proto__: semantics_event.LongPressSemanticsEvent.prototype,
        [S$1.SemanticsEvent_type]: "longPress"
      });
    },
    get C817() {
      return C[817] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_ParentInkResponseProvider",
        [S._Location_column]: 9,
        [S._Location_line]: 187,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/ink_well.dart"
      });
    },
    get C818() {
      return C[818] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "InkResponse",
        [S._Location_column]: 9,
        [S._Location_line]: 293,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/ink_well.dart"
      });
    },
    get C819() {
      return C[819] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_InkResponseStateWidget",
        [S._Location_column]: 12,
        [S._Location_line]: 601,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/ink_well.dart"
      });
    },
    get C820() {
      return C[820] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_InkResponseStateWidget",
        [S._Location_column]: 9,
        [S._Location_line]: 652,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/ink_well.dart"
      });
    },
    get C822() {
      return C[822] = dart.const({
        __proto__: ink_well._HighlightType.prototype,
        [S._Enum__name]: "pressed",
        [S._Enum_index]: 0
      });
    },
    get C823() {
      return C[823] = dart.const({
        __proto__: ink_well._HighlightType.prototype,
        [S._Enum__name]: "hover",
        [S._Enum_index]: 1
      });
    },
    get C824() {
      return C[824] = dart.const({
        __proto__: ink_well._HighlightType.prototype,
        [S._Enum__name]: "focus",
        [S._Enum_index]: 2
      });
    },
    get C821() {
      return C[821] = dart.constList([C[822] || CT.C822, C[823] || CT.C823, C[824] || CT.C824], ink_well._HighlightType);
    },
    get C825() {
      return C[825] = dart.const({
        __proto__: core.Duration.prototype,
        [S.Duration__duration]: 50000
      });
    },
    get C826() {
      return C[826] = dart.const({
        __proto__: media_query.NavigationMode.prototype,
        [S._Enum__name]: "traditional",
        [S._Enum_index]: 0
      });
    },
    get C827() {
      return C[827] = dart.const({
        __proto__: media_query.NavigationMode.prototype,
        [S._Enum__name]: "directional",
        [S._Enum_index]: 1
      });
    },
    get C828() {
      return C[828] = dart.const({
        __proto__: focus_manager.FocusHighlightMode.prototype,
        [S._Enum__name]: "touch",
        [S._Enum_index]: 0
      });
    },
    get C829() {
      return C[829] = dart.const({
        __proto__: focus_manager.FocusHighlightMode.prototype,
        [S._Enum__name]: "traditional",
        [S._Enum_index]: 1
      });
    },
    get C830() {
      return C[830] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "GestureDetector",
        [S._Location_column]: 22,
        [S._Location_line]: 1185,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/ink_well.dart"
      });
    },
    get C831() {
      return C[831] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 20,
        [S._Location_line]: 1182,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/ink_well.dart"
      });
    },
    get C832() {
      return C[832] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "MouseRegion",
        [S._Location_column]: 18,
        [S._Location_line]: 1178,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/ink_well.dart"
      });
    },
    get C833() {
      return C[833] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Focus",
        [S._Location_column]: 16,
        [S._Location_line]: 1173,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/ink_well.dart"
      });
    },
    get C834() {
      return C[834] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Actions",
        [S._Location_column]: 14,
        [S._Location_line]: 1171,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/ink_well.dart"
      });
    },
    get C835() {
      return C[835] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_ParentInkResponseProvider",
        [S._Location_column]: 12,
        [S._Location_line]: 1169,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/ink_well.dart"
      });
    },
    get C836() {
      return C[836] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "InkWell",
        [S._Location_column]: 9,
        [S._Location_line]: 1289,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/ink_well.dart"
      });
    },
    get C837() {
      return C[837] = dart.const({
        __proto__: decoration_image.ImageRepeat.prototype,
        [S._Enum__name]: "noRepeat",
        [S._Enum_index]: 3
      });
    },
    get C838() {
      return C[838] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Ink",
        [S._Location_column]: 3,
        [S._Location_line]: 148,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/ink_decoration.dart"
      });
    },
    get C839() {
      return C[839] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Ink",
        [S._Location_column]: 3,
        [S._Location_line]: 181,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/ink_decoration.dart"
      });
    },
    get C840() {
      return C[840] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Container",
        [S._Location_column]: 28,
        [S._Location_line]: 295,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/ink_decoration.dart"
      });
    },
    get C841() {
      return C[841] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Builder",
        [S._Location_column]: 14,
        [S._Location_line]: 304,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/ink_decoration.dart"
      });
    },
    get C842() {
      return C[842] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Padding",
        [S._Location_column]: 21,
        [S._Location_line]: 301,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/ink_decoration.dart"
      });
    },
    get C843() {
      return C[843] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SizedBox",
        [S._Location_column]: 16,
        [S._Location_line]: 307,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/ink_decoration.dart"
      });
    },
    get C845() {
      return C[845] = dart.const({
        __proto__: list_tile.ListTileStyle.prototype,
        [S._Enum__name]: "list",
        [S._Enum_index]: 0
      });
    },
    get C846() {
      return C[846] = dart.const({
        __proto__: list_tile.ListTileStyle.prototype,
        [S._Enum__name]: "drawer",
        [S._Enum_index]: 1
      });
    },
    get C844() {
      return C[844] = dart.constList([C[845] || CT.C845, C[846] || CT.C846], list_tile.ListTileStyle);
    },
    get C848() {
      return C[848] = dart.const({
        __proto__: list_tile.ListTileControlAffinity.prototype,
        [S._Enum__name]: "leading",
        [S._Enum_index]: 0
      });
    },
    get C849() {
      return C[849] = dart.const({
        __proto__: list_tile.ListTileControlAffinity.prototype,
        [S._Enum__name]: "trailing",
        [S._Enum_index]: 1
      });
    },
    get C850() {
      return C[850] = dart.const({
        __proto__: list_tile.ListTileControlAffinity.prototype,
        [S._Enum__name]: "platform",
        [S._Enum_index]: 2
      });
    },
    get C847() {
      return C[847] = dart.constList([C[848] || CT.C848, C[849] || CT.C849, C[850] || CT.C850], list_tile.ListTileControlAffinity);
    },
    get C851() {
      return C[851] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ListTile",
        [S._Location_column]: 9,
        [S._Location_line]: 301,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/list_tile.dart"
      });
    },
    get C852() {
      return C[852] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "DecoratedBox",
        [S._Location_column]: 14,
        [S._Location_line]: 600,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/list_tile.dart"
      });
    },
    get C853() {
      return C[853] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "AnimatedDefaultTextStyle",
        [S._Location_column]: 21,
        [S._Location_line]: 712,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/list_tile.dart"
      });
    },
    get C855() {
      return C[855] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SizedBox",
        [S._Location_column]: 29,
        [S._Location_line]: 723,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/list_tile.dart"
      });
    },
    get C854() {
      return C[854] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [S.Widget__location]: C[855] || CT.C855,
        [S.Widget_key]: null,
        [S$.SingleChildRenderObjectWidget_child]: null,
        [S$.SizedBox_height]: null,
        [S$.SizedBox_width]: null
      });
    },
    get C856() {
      return C[856] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "AnimatedDefaultTextStyle",
        [S._Location_column]: 30,
        [S._Location_line]: 720,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/list_tile.dart"
      });
    },
    get C857() {
      return C[857] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "AnimatedDefaultTextStyle",
        [S._Location_column]: 22,
        [S._Location_line]: 730,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/list_tile.dart"
      });
    },
    get C858() {
      return C[858] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "AnimatedDefaultTextStyle",
        [S._Location_column]: 22,
        [S._Location_line]: 739,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/list_tile.dart"
      });
    },
    get C859() {
      return C[859] = dart.const({
        __proto__: box_border.Border.prototype,
        [S$1.Border_left]: C[18] || CT.C18,
        [S$1.Border_bottom]: C[18] || CT.C18,
        [S$1.Border_right]: C[18] || CT.C18,
        [S$1.Border_top]: C[18] || CT.C18
      });
    },
    get C860() {
      return C[860] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_ListTile",
        [S._Location_column]: 22,
        [S._Location_line]: 786,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/list_tile.dart"
      });
    },
    get C861() {
      return C[861] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SafeArea",
        [S._Location_column]: 18,
        [S._Location_line]: 780,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/list_tile.dart"
      });
    },
    get C862() {
      return C[862] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Ink",
        [S._Location_column]: 16,
        [S._Location_line]: 775,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/list_tile.dart"
      });
    },
    get C863() {
      return C[863] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 14,
        [S._Location_line]: 772,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/list_tile.dart"
      });
    },
    get C864() {
      return C[864] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "InkWell",
        [S._Location_column]: 12,
        [S._Location_line]: 761,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/list_tile.dart"
      });
    },
    get C866() {
      return C[866] = dart.const({
        __proto__: list_tile._ListTileSlot.prototype,
        [S._Enum__name]: "leading",
        [S._Enum_index]: 0
      });
    },
    get C867() {
      return C[867] = dart.const({
        __proto__: list_tile._ListTileSlot.prototype,
        [S._Enum__name]: "title",
        [S._Enum_index]: 1
      });
    },
    get C868() {
      return C[868] = dart.const({
        __proto__: list_tile._ListTileSlot.prototype,
        [S._Enum__name]: "subtitle",
        [S._Enum_index]: 2
      });
    },
    get C869() {
      return C[869] = dart.const({
        __proto__: list_tile._ListTileSlot.prototype,
        [S._Enum__name]: "trailing",
        [S._Enum_index]: 3
      });
    },
    get C865() {
      return C[865] = dart.constList([C[866] || CT.C866, C[867] || CT.C867, C[868] || CT.C868, C[869] || CT.C869], list_tile._ListTileSlot);
    },
    get C870() {
      return C[870] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_ListTile",
        [S._Location_column]: 9,
        [S._Location_line]: 851,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/list_tile.dart"
      });
    },
    get C871() {
      return C[871] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "DrawerTheme",
        [S._Location_column]: 9,
        [S._Location_line]: 140,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/drawer_theme.dart"
      });
    },
    get C872() {
      return C[872] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "DrawerTheme",
        [S._Location_column]: 12,
        [S._Location_line]: 167,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/drawer_theme.dart"
      });
    },
    get C874() {
      return C[874] = dart.const({
        __proto__: drawer.DrawerAlignment.prototype,
        [S._Enum__name]: "start",
        [S._Enum_index]: 0
      });
    },
    get C875() {
      return C[875] = dart.const({
        __proto__: drawer.DrawerAlignment.prototype,
        [S._Enum__name]: "end",
        [S._Enum_index]: 1
      });
    },
    get C873() {
      return C[873] = dart.constList([C[874] || CT.C874, C[875] || CT.C875], drawer.DrawerAlignment);
    },
    get C876() {
      return C[876] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Drawer",
        [S._Location_column]: 9,
        [S._Location_line]: 143,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C877() {
      return C[877] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Material",
        [S._Location_column]: 16,
        [S._Location_line]: 223,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C878() {
      return C[878] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ConstrainedBox",
        [S._Location_column]: 14,
        [S._Location_line]: 221,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C879() {
      return C[879] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 12,
        [S._Location_line]: 216,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C880() {
      return C[880] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "DrawerController",
        [S._Location_column]: 9,
        [S._Location_line]: 258,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C881() {
      return C[881] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Container",
        [S._Location_column]: 20,
        [S._Location_line]: 608,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C882() {
      return C[882] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "GestureDetector",
        [S._Location_column]: 18,
        [S._Location_line]: 601,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C883() {
      return C[883] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Align",
        [S._Location_column]: 16,
        [S._Location_line]: 599,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C885() {
      return C[885] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SizedBox",
        [S._Location_column]: 22,
        [S._Location_line]: 612,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C884() {
      return C[884] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [S.Widget__location]: C[885] || CT.C885,
        [S.Widget_key]: null,
        [S$.SingleChildRenderObjectWidget_child]: null,
        [S$.SizedBox_height]: 0,
        [S$.SizedBox_width]: 0
      });
    },
    get C886() {
      return C[886] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Container",
        [S._Location_column]: 28,
        [S._Location_line]: 641,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C887() {
      return C[887] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 26,
        [S._Location_line]: 639,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C888() {
      return C[888] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "GestureDetector",
        [S._Location_column]: 24,
        [S._Location_line]: 637,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C889() {
      return C[889] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ExcludeSemantics",
        [S._Location_column]: 22,
        [S._Location_line]: 634,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C890() {
      return C[890] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "BlockSemantics",
        [S._Location_column]: 13,
        [S._Location_line]: 633,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C891() {
      return C[891] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "FocusScope",
        [S._Location_column]: 26,
        [S._Location_line]: 654,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C892() {
      return C[892] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "RepaintBoundary",
        [S._Location_column]: 24,
        [S._Location_line]: 653,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C893() {
      return C[893] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Align",
        [S._Location_column]: 22,
        [S._Location_line]: 650,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C894() {
      return C[894] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Align",
        [S._Location_column]: 13,
        [S._Location_line]: 648,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C895() {
      return C[895] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Stack",
        [S._Location_column]: 16,
        [S._Location_line]: 631,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C896() {
      return C[896] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "RepaintBoundary",
        [S._Location_column]: 29,
        [S._Location_line]: 630,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C897() {
      return C[897] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "GestureDetector",
        [S._Location_column]: 14,
        [S._Location_line]: 670,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/drawer.dart"
      });
    },
    get C898() {
      return C[898] = dart.const({
        __proto__: core.Duration.prototype,
        [S.Duration__duration]: 246000
      });
    },
    get C899() {
      return C[899] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "BottomSheet",
        [S._Location_column]: 9,
        [S._Location_line]: 73,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_sheet.dart"
      });
    },
    get C900() {
      return C[900] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "NotificationListener",
        [S._Location_column]: 14,
        [S._Location_line]: 289,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_sheet.dart"
      });
    },
    get C901() {
      return C[901] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Material",
        [S._Location_column]: 26,
        [S._Location_line]: 283,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_sheet.dart"
      });
    },
    get C902() {
      return C[902] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ConstrainedBox",
        [S._Location_column]: 16,
        [S._Location_line]: 299,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_sheet.dart"
      });
    },
    get C903() {
      return C[903] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Align",
        [S._Location_column]: 21,
        [S._Location_line]: 296,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_sheet.dart"
      });
    },
    get C904() {
      return C[904] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "GestureDetector",
        [S._Location_column]: 47,
        [S._Location_line]: 306,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_sheet.dart"
      });
    },
    get C905() {
      return C[905] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_ModalBottomSheet",
        [S._Location_column]: 9,
        [S._Location_line]: 351,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_sheet.dart"
      });
    },
    get C906() {
      return C[906] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "BottomSheet",
        [S._Location_column]: 14,
        [S._Location_line]: 416,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_sheet.dart"
      });
    },
    get C907() {
      return C[907] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "CustomSingleChildLayout",
        [S._Location_column]: 20,
        [S._Location_line]: 445,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_sheet.dart"
      });
    },
    get C908() {
      return C[908] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ClipRect",
        [S._Location_column]: 18,
        [S._Location_line]: 444,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_sheet.dart"
      });
    },
    get C909() {
      return C[909] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 16,
        [S._Location_line]: 439,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_sheet.dart"
      });
    },
    get C910() {
      return C[910] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "AnimatedBuilder",
        [S._Location_column]: 12,
        [S._Location_line]: 414,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_sheet.dart"
      });
    },
    get C911() {
      return C[911] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_ModalBottomSheet",
        [S._Location_column]: 20,
        [S._Location_line]: 532,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_sheet.dart"
      });
    },
    get C912() {
      return C[912] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Builder",
        [S._Location_column]: 16,
        [S._Location_line]: 529,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_sheet.dart"
      });
    },
    get C913() {
      return C[913] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "DisplayFeatureSubScreen",
        [S._Location_column]: 14,
        [S._Location_line]: 527,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_sheet.dart"
      });
    },
    get C914() {
      return C[914] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "MediaQuery",
        [S._Location_column]: 43,
        [S._Location_line]: 524,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_sheet.dart"
      });
    },
    get C915() {
      return C[915] = dart.const({
        __proto__: curves.Cubic.prototype,
        [S.Cubic_d]: 1,
        [S.Cubic_c]: 0.355,
        [S.Cubic_b]: 0.61,
        [S.Cubic_a]: 0.215
      });
    },
    get C916() {
      return C[916] = dart.const({
        __proto__: curves.Cubic.prototype,
        [S.Cubic_d]: 1,
        [S.Cubic_c]: 0.2,
        [S.Cubic_b]: 0,
        [S.Cubic_a]: 0
      });
    },
    get C917() {
      return C[917] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "DividerTheme",
        [S._Location_column]: 9,
        [S._Location_line]: 140,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/divider_theme.dart"
      });
    },
    get C918() {
      return C[918] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "DividerTheme",
        [S._Location_column]: 12,
        [S._Location_line]: 168,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/divider_theme.dart"
      });
    },
    get C919() {
      return C[919] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Divider",
        [S._Location_column]: 9,
        [S._Location_line]: 48,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/divider.dart"
      });
    },
    get C920() {
      return C[920] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Container",
        [S._Location_column]: 16,
        [S._Location_line]: 166,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/divider.dart"
      });
    },
    get C921() {
      return C[921] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Center",
        [S._Location_column]: 14,
        [S._Location_line]: 165,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/divider.dart"
      });
    },
    get C922() {
      return C[922] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SizedBox",
        [S._Location_column]: 12,
        [S._Location_line]: 163,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/divider.dart"
      });
    },
    get C923() {
      return C[923] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "VerticalDivider",
        [S._Location_column]: 9,
        [S._Location_line]: 208,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/divider.dart"
      });
    },
    get C924() {
      return C[924] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Container",
        [S._Location_column]: 16,
        [S._Location_line]: 276,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/divider.dart"
      });
    },
    get C925() {
      return C[925] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Center",
        [S._Location_column]: 14,
        [S._Location_line]: 275,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/divider.dart"
      });
    },
    get C926() {
      return C[926] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SizedBox",
        [S._Location_column]: 12,
        [S._Location_line]: 273,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/divider.dart"
      });
    },
    get C927() {
      return C[927] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "MaterialBannerTheme",
        [S._Location_column]: 9,
        [S._Location_line]: 137,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/banner_theme.dart"
      });
    },
    get C928() {
      return C[928] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "MaterialBannerTheme",
        [S._Location_column]: 12,
        [S._Location_line]: 164,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/banner_theme.dart"
      });
    },
    get C930() {
      return C[930] = dart.const({
        __proto__: banner.MaterialBannerClosedReason.prototype,
        [S._Enum__name]: "dismiss",
        [S._Enum_index]: 0
      });
    },
    get C931() {
      return C[931] = dart.const({
        __proto__: banner.MaterialBannerClosedReason.prototype,
        [S._Enum__name]: "swipe",
        [S._Enum_index]: 1
      });
    },
    get C932() {
      return C[932] = dart.const({
        __proto__: banner.MaterialBannerClosedReason.prototype,
        [S._Enum__name]: "hide",
        [S._Enum_index]: 2
      });
    },
    get C933() {
      return C[933] = dart.const({
        __proto__: banner.MaterialBannerClosedReason.prototype,
        [S._Enum__name]: "remove",
        [S._Enum_index]: 3
      });
    },
    get C929() {
      return C[929] = dart.constList([C[930] || CT.C930, C[931] || CT.C931, C[932] || CT.C932, C[933] || CT.C933], banner.MaterialBannerClosedReason);
    },
    get C934() {
      return C[934] = dart.const({
        __proto__: overflow_bar.OverflowBarAlignment.prototype,
        [S._Enum__name]: "end",
        [S._Enum_index]: 1
      });
    },
    get C935() {
      return C[935] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "MaterialBanner",
        [S._Location_column]: 9,
        [S._Location_line]: 89,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/banner.dart"
      });
    },
    get C936() {
      return C[936] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "MaterialBanner",
        [S._Location_column]: 12,
        [S._Location_line]: 200,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/banner.dart"
      });
    },
    get C937() {
      return C[937] = dart.const({
        __proto__: edge_insets.EdgeInsetsDirectional.prototype,
        [S$.EdgeInsetsDirectional_bottom]: 0,
        [S$.EdgeInsetsDirectional_end]: 0,
        [S$.EdgeInsetsDirectional_top]: 2,
        [S$.EdgeInsetsDirectional_start]: 16
      });
    },
    get C938() {
      return C[938] = dart.const({
        __proto__: edge_insets.EdgeInsetsDirectional.prototype,
        [S$.EdgeInsetsDirectional_bottom]: 4,
        [S$.EdgeInsetsDirectional_end]: 16,
        [S$.EdgeInsetsDirectional_top]: 24,
        [S$.EdgeInsetsDirectional_start]: 16
      });
    },
    get C939() {
      return C[939] = dart.const({
        __proto__: box$.BoxConstraints.prototype,
        [S.BoxConstraints_maxHeight]: 1 / 0,
        [S.BoxConstraints_minHeight]: 52,
        [S.BoxConstraints_maxWidth]: 1 / 0,
        [S.BoxConstraints_minWidth]: 0
      });
    },
    get C940() {
      return C[940] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "OverflowBar",
        [S._Location_column]: 14,
        [S._Location_line]: 281,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/banner.dart"
      });
    },
    get C941() {
      return C[941] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Container",
        [S._Location_column]: 30,
        [S._Location_line]: 277,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/banner.dart"
      });
    },
    get C942() {
      return C[942] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Padding",
        [S._Location_column]: 21,
        [S._Location_line]: 309,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/banner.dart"
      });
    },
    get C943() {
      return C[943] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "DefaultTextStyle",
        [S._Location_column]: 28,
        [S._Location_line]: 314,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/banner.dart"
      });
    },
    get C944() {
      return C[944] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Expanded",
        [S._Location_column]: 19,
        [S._Location_line]: 313,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/banner.dart"
      });
    },
    get C945() {
      return C[945] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Row",
        [S._Location_column]: 22,
        [S._Location_line]: 306,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/banner.dart"
      });
    },
    get C946() {
      return C[946] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Padding",
        [S._Location_column]: 13,
        [S._Location_line]: 304,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/banner.dart"
      });
    },
    get C948() {
      return C[948] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Divider",
        [S._Location_column]: 21,
        [S._Location_line]: 328,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/banner.dart"
      });
    },
    get C947() {
      return C[947] = dart.const({
        __proto__: divider.Divider.prototype,
        [S.Widget__location]: C[948] || CT.C948,
        [S.Widget_key]: null,
        [S$1.color$13]: null,
        [S$1.endIndent$1]: null,
        [S$1.indent$1]: null,
        [S$1.thickness$2]: null,
        [S$1.height$10]: 0
      });
    },
    get C949() {
      return C[949] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Column",
        [S._Location_column]: 16,
        [S._Location_line]: 301,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/banner.dart"
      });
    },
    get C950() {
      return C[950] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Material",
        [S._Location_column]: 14,
        [S._Location_line]: 298,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/banner.dart"
      });
    },
    get C951() {
      return C[951] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Container",
        [S._Location_column]: 29,
        [S._Location_line]: 296,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/banner.dart"
      });
    },
    get C952() {
      return C[952] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SafeArea",
        [S._Location_column]: 22,
        [S._Location_line]: 339,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/banner.dart"
      });
    },
    get C953() {
      return C[953] = dart.const({
        __proto__: ui.Offset.prototype,
        [S.OffsetBase__dy]: -1,
        [S.OffsetBase__dx]: 0
      });
    },
    get C954() {
      return C[954] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SlideTransition",
        [S._Location_column]: 13,
        [S._Location_line]: 360,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/banner.dart"
      });
    },
    get C955() {
      return C[955] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 22,
        [S._Location_line]: 352,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/banner.dart"
      });
    },
    get C956() {
      return C[956] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Align",
        [S._Location_column]: 18,
        [S._Location_line]: 373,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/banner.dart"
      });
    },
    get C957() {
      return C[957] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "AnimatedBuilder",
        [S._Location_column]: 34,
        [S._Location_line]: 370,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/banner.dart"
      });
    },
    get C958() {
      return C[958] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ClipRect",
        [S._Location_column]: 14,
        [S._Location_line]: 385,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/banner.dart"
      });
    },
    get C959() {
      return C[959] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Hero",
        [S._Location_column]: 12,
        [S._Location_line]: 383,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/banner.dart"
      });
    },
    get C961() {
      return C[961] = dart.const({
        __proto__: scaffold$._ScaffoldSlot.prototype,
        [S._Enum__name]: "body",
        [S._Enum_index]: 0
      });
    },
    get C962() {
      return C[962] = dart.const({
        __proto__: scaffold$._ScaffoldSlot.prototype,
        [S._Enum__name]: "appBar",
        [S._Enum_index]: 1
      });
    },
    get C963() {
      return C[963] = dart.const({
        __proto__: scaffold$._ScaffoldSlot.prototype,
        [S._Enum__name]: "bodyScrim",
        [S._Enum_index]: 2
      });
    },
    get C964() {
      return C[964] = dart.const({
        __proto__: scaffold$._ScaffoldSlot.prototype,
        [S._Enum__name]: "bottomSheet",
        [S._Enum_index]: 3
      });
    },
    get C965() {
      return C[965] = dart.const({
        __proto__: scaffold$._ScaffoldSlot.prototype,
        [S._Enum__name]: "snackBar",
        [S._Enum_index]: 4
      });
    },
    get C966() {
      return C[966] = dart.const({
        __proto__: scaffold$._ScaffoldSlot.prototype,
        [S._Enum__name]: "materialBanner",
        [S._Enum_index]: 5
      });
    },
    get C967() {
      return C[967] = dart.const({
        __proto__: scaffold$._ScaffoldSlot.prototype,
        [S._Enum__name]: "persistentFooter",
        [S._Enum_index]: 6
      });
    },
    get C968() {
      return C[968] = dart.const({
        __proto__: scaffold$._ScaffoldSlot.prototype,
        [S._Enum__name]: "bottomNavigationBar",
        [S._Enum_index]: 7
      });
    },
    get C969() {
      return C[969] = dart.const({
        __proto__: scaffold$._ScaffoldSlot.prototype,
        [S._Enum__name]: "floatingActionButton",
        [S._Enum_index]: 8
      });
    },
    get C970() {
      return C[970] = dart.const({
        __proto__: scaffold$._ScaffoldSlot.prototype,
        [S._Enum__name]: "drawer",
        [S._Enum_index]: 9
      });
    },
    get C971() {
      return C[971] = dart.const({
        __proto__: scaffold$._ScaffoldSlot.prototype,
        [S._Enum__name]: "endDrawer",
        [S._Enum_index]: 10
      });
    },
    get C972() {
      return C[972] = dart.const({
        __proto__: scaffold$._ScaffoldSlot.prototype,
        [S._Enum__name]: "statusBar",
        [S._Enum_index]: 11
      });
    },
    get C960() {
      return C[960] = dart.constList([C[961] || CT.C961, C[962] || CT.C962, C[963] || CT.C963, C[964] || CT.C964, C[965] || CT.C965, C[966] || CT.C966, C[967] || CT.C967, C[968] || CT.C968, C[969] || CT.C969, C[970] || CT.C970, C[971] || CT.C971, C[972] || CT.C972], scaffold$._ScaffoldSlot);
    },
    get C973() {
      return C[973] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ScaffoldMessenger",
        [S._Location_column]: 9,
        [S._Location_line]: 98,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C974() {
      return C[974] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_ScaffoldMessengerScope",
        [S._Location_column]: 12,
        [S._Location_line]: 570,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C975() {
      return C[975] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_ScaffoldMessengerScope",
        [S._Location_column]: 9,
        [S._Location_line]: 586,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C976() {
      return C[976] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_BodyBuilder",
        [S._Location_column]: 9,
        [S._Location_line]: 897,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C977() {
      return C[977] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "MediaQuery",
        [S._Location_column]: 16,
        [S._Location_line]: 929,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C978() {
      return C[978] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "LayoutBuilder",
        [S._Location_column]: 12,
        [S._Location_line]: 915,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C979() {
      return C[979] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_FloatingActionButtonTransition",
        [S._Location_column]: 9,
        [S._Location_line]: 1199,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C980() {
      return C[980] = dart.const({
        __proto__: curves.Interval.prototype,
        [S.Interval_curve]: C[355] || CT.C355,
        [S.Interval_end]: 0.1,
        [S.Interval_begin]: 0
      });
    },
    get C981() {
      return C[981] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "FadeTransition",
        [S._Location_column]: 13,
        [S._Location_line]: 1357,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C982() {
      return C[982] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "RotationTransition",
        [S._Location_column]: 22,
        [S._Location_line]: 1364,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C983() {
      return C[983] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ScaleTransition",
        [S._Location_column]: 13,
        [S._Location_line]: 1362,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C984() {
      return C[984] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "FadeTransition",
        [S._Location_column]: 20,
        [S._Location_line]: 1372,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C985() {
      return C[985] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ScaleTransition",
        [S._Location_column]: 11,
        [S._Location_line]: 1370,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C986() {
      return C[986] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "RotationTransition",
        [S._Location_column]: 20,
        [S._Location_line]: 1380,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C987() {
      return C[987] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ScaleTransition",
        [S._Location_column]: 11,
        [S._Location_line]: 1378,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C988() {
      return C[988] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Stack",
        [S._Location_column]: 12,
        [S._Location_line]: 1352,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C989() {
      return C[989] = dart.const({
        __proto__: alignment.AlignmentDirectional.prototype,
        [S$1.AlignmentDirectional_y]: 0,
        [S$1.AlignmentDirectional_start]: 1
      });
    },
    get C990() {
      return C[990] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Scaffold",
        [S._Location_column]: 9,
        [S._Location_line]: 1522,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C991() {
      return C[991] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "StatefulBuilder",
        [S._Location_column]: 22,
        [S._Location_line]: 2178,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C992() {
      return C[992] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "DraggableScrollableActuator",
        [S._Location_column]: 20,
        [S._Location_line]: 2177,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C993() {
      return C[993] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "NotificationListener",
        [S._Location_column]: 18,
        [S._Location_line]: 2175,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C994() {
      return C[994] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_StandardBottomSheet",
        [S._Location_column]: 19,
        [S._Location_line]: 2292,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C995() {
      return C[995] = dart.const({
        __proto__: scaffold$.ScaffoldGeometry.prototype,
        [S$1.floatingActionButtonArea]: null,
        [S$1.bottomNavigationBarTop]: null
      });
    },
    get C996() {
      return C[996] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "MediaQuery",
        [S._Location_column]: 18,
        [S._Location_line]: 2615,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C997() {
      return C[997] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "LayoutId",
        [S._Location_column]: 9,
        [S._Location_line]: 2613,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C998() {
      return C[998] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "DrawerController",
        [S._Location_column]: 9,
        [S._Location_line]: 2626,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C999() {
      return C[999] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "DrawerController",
        [S._Location_column]: 9,
        [S._Location_line]: 2652,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C1000() {
      return C[1000] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "KeyedSubtree",
        [S._Location_column]: 15,
        [S._Location_line]: 2704,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C1001() {
      return C[1001] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_BodyBuilder",
        [S._Location_column]: 36,
        [S._Location_line]: 2701,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C1002() {
      return C[1002] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ModalBarrier",
        [S._Location_column]: 9,
        [S._Location_line]: 2716,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C1003() {
      return C[1003] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ConstrainedBox",
        [S._Location_column]: 9,
        [S._Location_line]: 2734,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C1004() {
      return C[1004] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Stack",
        [S._Location_column]: 28,
        [S._Location_line]: 2753,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C1005() {
      return C[1005] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "OverflowBar",
        [S._Location_column]: 24,
        [S._Location_line]: 2825,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C1006() {
      return C[1006] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Container",
        [S._Location_column]: 22,
        [S._Location_line]: 2822,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C1007() {
      return C[1007] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "IntrinsicHeight",
        [S._Location_column]: 20,
        [S._Location_line]: 2821,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C1008() {
      return C[1008] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SafeArea",
        [S._Location_column]: 18,
        [S._Location_line]: 2819,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C1009() {
      return C[1009] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Container",
        [S._Location_column]: 9,
        [S._Location_line]: 2813,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C1010() {
      return C[1010] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_FloatingActionButtonTransition",
        [S._Location_column]: 7,
        [S._Location_line]: 2858,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C1011() {
      return C[1011] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "GestureDetector",
        [S._Location_column]: 11,
        [S._Location_line]: 2877,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C1012() {
      return C[1012] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "CustomMultiChildLayout",
        [S._Location_column]: 22,
        [S._Location_line]: 2930,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C1013() {
      return C[1013] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Actions",
        [S._Location_column]: 20,
        [S._Location_line]: 2926,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C1014() {
      return C[1014] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "AnimatedBuilder",
        [S._Location_column]: 18,
        [S._Location_line]: 2925,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C1015() {
      return C[1015] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Material",
        [S._Location_column]: 16,
        [S._Location_line]: 2923,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C1016() {
      return C[1016] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ScrollNotificationObserver",
        [S._Location_column]: 14,
        [S._Location_line]: 2922,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C1017() {
      return C[1017] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_ScaffoldScope",
        [S._Location_column]: 12,
        [S._Location_line]: 2919,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C1018() {
      return C[1018] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_StandardBottomSheet",
        [S._Location_column]: 9,
        [S._Location_line]: 3051,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C1019() {
      return C[1019] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Align",
        [S._Location_column]: 16,
        [S._Location_line]: 3160,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C1020() {
      return C[1020] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "BottomSheet",
        [S._Location_column]: 18,
        [S._Location_line]: 3171,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C1021() {
      return C[1021] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "NotificationListener",
        [S._Location_column]: 17,
        [S._Location_line]: 3169,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C1022() {
      return C[1022] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 14,
        [S._Location_line]: 3166,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C1023() {
      return C[1023] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "AnimatedBuilder",
        [S._Location_column]: 12,
        [S._Location_line]: 3157,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C1024() {
      return C[1024] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_ScaffoldScope",
        [S._Location_column]: 9,
        [S._Location_line]: 3211,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/scaffold.dart"
      });
    },
    get C1026() {
      return C[1026] = dart.const({
        __proto__: elevation_overlay._ElevationOpacity.prototype,
        [S$2.opacity]: 0,
        [S$2.elevation$27]: 0
      });
    },
    get C1027() {
      return C[1027] = dart.const({
        __proto__: elevation_overlay._ElevationOpacity.prototype,
        [S$2.opacity]: 0.05,
        [S$2.elevation$27]: 1
      });
    },
    get C1028() {
      return C[1028] = dart.const({
        __proto__: elevation_overlay._ElevationOpacity.prototype,
        [S$2.opacity]: 0.08,
        [S$2.elevation$27]: 3
      });
    },
    get C1029() {
      return C[1029] = dart.const({
        __proto__: elevation_overlay._ElevationOpacity.prototype,
        [S$2.opacity]: 0.11,
        [S$2.elevation$27]: 6
      });
    },
    get C1030() {
      return C[1030] = dart.const({
        __proto__: elevation_overlay._ElevationOpacity.prototype,
        [S$2.opacity]: 0.12,
        [S$2.elevation$27]: 8
      });
    },
    get C1031() {
      return C[1031] = dart.const({
        __proto__: elevation_overlay._ElevationOpacity.prototype,
        [S$2.opacity]: 0.14,
        [S$2.elevation$27]: 12
      });
    },
    get C1025() {
      return C[1025] = dart.constList([C[1026] || CT.C1026, C[1027] || CT.C1027, C[1028] || CT.C1028, C[1029] || CT.C1029, C[1030] || CT.C1030, C[1031] || CT.C1031], elevation_overlay._ElevationOpacity);
    },
    get C1033() {
      return C[1033] = dart.const({
        __proto__: material.MaterialType.prototype,
        [S._Enum__name]: "canvas",
        [S._Enum_index]: 0
      });
    },
    get C1034() {
      return C[1034] = dart.const({
        __proto__: material.MaterialType.prototype,
        [S._Enum__name]: "card",
        [S._Enum_index]: 1
      });
    },
    get C1035() {
      return C[1035] = dart.const({
        __proto__: material.MaterialType.prototype,
        [S._Enum__name]: "circle",
        [S._Enum_index]: 2
      });
    },
    get C1036() {
      return C[1036] = dart.const({
        __proto__: material.MaterialType.prototype,
        [S._Enum__name]: "button",
        [S._Enum_index]: 3
      });
    },
    get C1037() {
      return C[1037] = dart.const({
        __proto__: material.MaterialType.prototype,
        [S._Enum__name]: "transparency",
        [S._Enum_index]: 4
      });
    },
    get C1032() {
      return C[1032] = dart.constList([C[1033] || CT.C1033, C[1034] || CT.C1034, C[1035] || CT.C1035, C[1036] || CT.C1036, C[1037] || CT.C1037], material.MaterialType);
    },
    get C1038() {
      return C[1038] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Material",
        [S._Location_column]: 9,
        [S._Location_line]: 180,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/material.dart"
      });
    },
    get C1039() {
      return C[1039] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "AnimatedDefaultTextStyle",
        [S._Location_column]: 18,
        [S._Location_line]: 416,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/material.dart"
      });
    },
    get C1040() {
      return C[1040] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_InkFeatures",
        [S._Location_column]: 14,
        [S._Location_line]: 428,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/material.dart"
      });
    },
    get C1041() {
      return C[1041] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "NotificationListener",
        [S._Location_column]: 16,
        [S._Location_line]: 422,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/material.dart"
      });
    },
    get C1042() {
      return C[1042] = dart.const({
        __proto__: ui.Color.prototype,
        [S.Color_value]: 0
      });
    },
    get C1043() {
      return C[1043] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "AnimatedPhysicalModel",
        [S._Location_column]: 14,
        [S._Location_line]: 451,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/material.dart"
      });
    },
    get C1044() {
      return C[1044] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_MaterialInterior",
        [S._Location_column]: 12,
        [S._Location_line]: 475,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/material.dart"
      });
    },
    get C1045() {
      return C[1045] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_ShapeBorderPaint",
        [S._Location_column]: 37,
        [S._Location_line]: 495,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/material.dart"
      });
    },
    get C1046() {
      return C[1046] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ClipPath",
        [S._Location_column]: 12,
        [S._Location_line]: 499,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/material.dart"
      });
    },
    get C1047() {
      return C[1047] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_InkFeatures",
        [S._Location_column]: 9,
        [S._Location_line]: 614,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/material.dart"
      });
    },
    get C1048() {
      return C[1048] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_MaterialInterior",
        [S._Location_column]: 9,
        [S._Location_line]: 755,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/material.dart"
      });
    },
    get C1049() {
      return C[1049] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_ShapeBorderPaint",
        [S._Location_column]: 14,
        [S._Location_line]: 875,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/material.dart"
      });
    },
    get C1050() {
      return C[1050] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "PhysicalShape",
        [S._Location_column]: 12,
        [S._Location_line]: 866,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/material.dart"
      });
    },
    get C1051() {
      return C[1051] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_ShapeBorderPaint",
        [S._Location_column]: 9,
        [S._Location_line]: 885,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/material.dart"
      });
    },
    get C1052() {
      return C[1052] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "CustomPaint",
        [S._Location_column]: 12,
        [S._Location_line]: 897,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/material.dart"
      });
    },
    get C1053() {
      return C[1053] = dart.constMap(material.MaterialType, T$.BorderRadiusN(), [C[1033] || CT.C1033, null, C[1034] || CT.C1034, C[659] || CT.C659, C[1035] || CT.C1035, null, C[1036] || CT.C1036, C[659] || CT.C659, C[1037] || CT.C1037, null]);
    },
    get C1054() {
      return C[1054] = dart.constList([31, -1, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], core.int);
    },
    get C1055() {
      return C[1055] = dart.const({
        __proto__: material_localizations.DefaultMaterialLocalizations.prototype
      });
    },
    get C1056() {
      return C[1056] = dart.constList(["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"], core.String);
    },
    get C1057() {
      return C[1057] = dart.constList(["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"], core.String);
    },
    get C1058() {
      return C[1058] = dart.constList(["S", "M", "T", "W", "T", "F", "S"], core.String);
    },
    get C1059() {
      return C[1059] = dart.constList(["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], core.String);
    },
    get C1060() {
      return C[1060] = dart.constList(["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], core.String);
    },
    get C1061() {
      return C[1061] = dart.const({
        __proto__: material_localizations._MaterialLocalizationsDelegate.prototype
      });
    },
    get C1062() {
      return C[1062] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Theme",
        [S._Location_column]: 9,
        [S._Location_line]: 41,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/theme.dart"
      });
    },
    get C1063() {
      return C[1063] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "DefaultSelectionStyle",
        [S._Location_column]: 14,
        [S._Location_line]: 122,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/theme.dart"
      });
    },
    get C1064() {
      return C[1064] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "IconTheme",
        [S._Location_column]: 12,
        [S._Location_line]: 120,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/theme.dart"
      });
    },
    get C1065() {
      return C[1065] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "CupertinoTheme",
        [S._Location_column]: 14,
        [S._Location_line]: 134,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/theme.dart"
      });
    },
    get C1066() {
      return C[1066] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_InheritedTheme",
        [S._Location_column]: 12,
        [S._Location_line]: 132,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/theme.dart"
      });
    },
    get C1067() {
      return C[1067] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_InheritedTheme",
        [S._Location_column]: 9,
        [S._Location_line]: 154,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/theme.dart"
      });
    },
    get C1068() {
      return C[1068] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Theme",
        [S._Location_column]: 12,
        [S._Location_line]: 163,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/theme.dart"
      });
    },
    get C1069() {
      return C[1069] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "AnimatedTheme",
        [S._Location_column]: 9,
        [S._Location_line]: 207,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/theme.dart"
      });
    },
    get C1070() {
      return C[1070] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Theme",
        [S._Location_column]: 12,
        [S._Location_line]: 239,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/theme.dart"
      });
    },
    get C1071() {
      return C[1071] = dart.fn(scroll_notification.defaultScrollNotificationPredicate, T$.ScrollNotificationTobool());
    },
    get C1072() {
      return C[1072] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "AppBar",
        [S._Location_column]: 3,
        [S._Location_line]: 166,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C1073() {
      return C[1073] = dart.const({
        __proto__: basic_types.AxisDirection.prototype,
        [S._Enum__name]: "up",
        [S._Enum_index]: 0
      });
    },
    get C1074() {
      return C[1074] = dart.const({
        __proto__: basic_types.AxisDirection.prototype,
        [S._Enum__name]: "down",
        [S._Enum_index]: 2
      });
    },
    get C1075() {
      return C[1075] = dart.const({
        __proto__: basic_types.AxisDirection.prototype,
        [S._Enum__name]: "right",
        [S._Enum_index]: 1
      });
    },
    get C1076() {
      return C[1076] = dart.const({
        __proto__: basic_types.AxisDirection.prototype,
        [S._Enum__name]: "left",
        [S._Enum_index]: 3
      });
    },
    get C1077() {
      return C[1077] = dart.const({
        __proto__: curves.Interval.prototype,
        [S.Interval_curve]: C[133] || CT.C133,
        [S.Interval_end]: 1,
        [S.Interval_begin]: 0.25
      });
    },
    get C1079() {
      return C[1079] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Icon",
        [S._Location_column]: 23,
        [S._Location_line]: 973,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C1080() {
      return C[1080] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [S.IconData_matchTextDirection]: false,
        [S.IconData_fontPackage]: null,
        [S.IconData_fontFamily]: "MaterialIcons",
        [S.IconData_codePoint]: 58332
      });
    },
    get C1078() {
      return C[1078] = dart.const({
        __proto__: icon.Icon.prototype,
        [S.Widget__location]: C[1079] || CT.C1079,
        [S.Widget_key]: null,
        [S.Icon_shadows]: null,
        [S.Icon_textDirection]: null,
        [S.Icon_semanticLabel]: null,
        [S.Icon_color]: null,
        [S.Icon_size]: null,
        [S.Icon_icon]: C[1080] || CT.C1080
      });
    },
    get C1081() {
      return C[1081] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "IconButton",
        [S._Location_column]: 19,
        [S._Location_line]: 972,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C1083() {
      return C[1083] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "CloseButton",
        [S._Location_column]: 42,
        [S._Location_line]: 982,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C1082() {
      return C[1082] = dart.const({
        __proto__: back_button.CloseButton.prototype,
        [S.Widget__location]: C[1083] || CT.C1083,
        [S.Widget_key]: null,
        [S.onPressed$4]: null,
        [S.color$2]: null
      });
    },
    get C1085() {
      return C[1085] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "BackButton",
        [S._Location_column]: 64,
        [S._Location_line]: 982,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C1084() {
      return C[1084] = dart.const({
        __proto__: back_button.BackButton.prototype,
        [S.Widget__location]: C[1085] || CT.C1085,
        [S.Widget_key]: null,
        [S.onPressed$3]: null,
        [S.color$1]: null
      });
    },
    get C1086() {
      return C[1086] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ConstrainedBox",
        [S._Location_column]: 17,
        [S._Location_line]: 986,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C1087() {
      return C[1087] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_AppBarTitleBox",
        [S._Location_column]: 15,
        [S._Location_line]: 1007,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C1088() {
      return C[1088] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 17,
        [S._Location_line]: 1009,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C1089() {
      return C[1089] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "DefaultTextStyle",
        [S._Location_column]: 15,
        [S._Location_line]: 1016,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C1090() {
      return C[1090] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "MediaQuery",
        [S._Location_column]: 15,
        [S._Location_line]: 1029,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C1091() {
      return C[1091] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Row",
        [S._Location_column]: 17,
        [S._Location_line]: 1042,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C1093() {
      return C[1093] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Icon",
        [S._Location_column]: 21,
        [S._Location_line]: 1049,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C1092() {
      return C[1092] = dart.const({
        __proto__: icon.Icon.prototype,
        [S.Widget__location]: C[1093] || CT.C1093,
        [S.Widget_key]: null,
        [S.Icon_shadows]: null,
        [S.Icon_textDirection]: null,
        [S.Icon_semanticLabel]: null,
        [S.Icon_color]: null,
        [S.Icon_size]: null,
        [S.Icon_icon]: C[1080] || CT.C1080
      });
    },
    get C1094() {
      return C[1094] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "IconButton",
        [S._Location_column]: 17,
        [S._Location_line]: 1048,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C1095() {
      return C[1095] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "NavigationToolbar",
        [S._Location_column]: 28,
        [S._Location_line]: 1064,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C1096() {
      return C[1096] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "DefaultTextStyle",
        [S._Location_column]: 18,
        [S._Location_line]: 1079,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C1097() {
      return C[1097] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "CustomSingleChildLayout",
        [S._Location_column]: 14,
        [S._Location_line]: 1075,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C1098() {
      return C[1098] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ClipRect",
        [S._Location_column]: 21,
        [S._Location_line]: 1074,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C1099() {
      return C[1099] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ConstrainedBox",
        [S._Location_column]: 20,
        [S._Location_line]: 1091,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C1100() {
      return C[1100] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Flexible",
        [S._Location_column]: 11,
        [S._Location_line]: 1090,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C1101() {
      return C[1101] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Opacity",
        [S._Location_column]: 13,
        [S._Location_line]: 1099,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C1102() {
      return C[1102] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Column",
        [S._Location_column]: 16,
        [S._Location_line]: 1087,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C1103() {
      return C[1103] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SafeArea",
        [S._Location_column]: 16,
        [S._Location_line]: 1109,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C1104() {
      return C[1104] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Align",
        [S._Location_column]: 14,
        [S._Location_line]: 1115,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C1105() {
      return C[1105] = dart.const({
        __proto__: semantics.OrdinalSortKey.prototype,
        [S$2.SemanticsSortKey_name]: null,
        [S$2.OrdinalSortKey_order]: 1
      });
    },
    get C1106() {
      return C[1106] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 11,
        [S._Location_line]: 1124,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C1107() {
      return C[1107] = dart.const({
        __proto__: semantics.OrdinalSortKey.prototype,
        [S$2.SemanticsSortKey_name]: null,
        [S$2.OrdinalSortKey_order]: 0
      });
    },
    get C1108() {
      return C[1108] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Material",
        [S._Location_column]: 20,
        [S._Location_line]: 1134,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C1109() {
      return C[1109] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 11,
        [S._Location_line]: 1129,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C1110() {
      return C[1110] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Stack",
        [S._Location_column]: 16,
        [S._Location_line]: 1121,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C1111() {
      return C[1111] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 18,
        [S._Location_line]: 1173,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C1112() {
      return C[1112] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Material",
        [S._Location_column]: 16,
        [S._Location_line]: 1163,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C1113() {
      return C[1113] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "AnnotatedRegion",
        [S._Location_column]: 14,
        [S._Location_line]: 1161,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C1114() {
      return C[1114] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 12,
        [S._Location_line]: 1159,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C1115() {
      return C[1115] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Semantics",
        [S._Location_column]: 13,
        [S._Location_line]: 1306,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C1116() {
      return C[1116] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "AppBar",
        [S._Location_column]: 14,
        [S._Location_line]: 1300,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C1117() {
      return C[1117] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SliverAppBar",
        [S._Location_column]: 9,
        [S._Location_line]: 1473,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C1118() {
      return C[1118] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_ScrollUnderFlexibleSpace",
        [S._Location_column]: 39,
        [S._Location_line]: 1599,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C1119() {
      return C[1119] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SliverAppBar",
        [S._Location_column]: 11,
        [S._Location_line]: 1558,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C1120() {
      return C[1120] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_ScrollUnderFlexibleSpace",
        [S._Location_column]: 39,
        [S._Location_line]: 1700,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C1121() {
      return C[1121] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SliverAppBar",
        [S._Location_column]: 11,
        [S._Location_line]: 1659,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C1122() {
      return C[1122] = dart.const({
        __proto__: sliver_persistent_header$.PersistentHeaderShowOnScreenConfiguration.prototype,
        [S$2.PersistentHeaderShowOnScreenConfiguration_maxShowOnScreenExtent]: 1 / 0,
        [S$2.PersistentHeaderShowOnScreenConfiguration_minShowOnScreenExtent]: 1 / 0
      });
    },
    get C1123() {
      return C[1123] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "SliverPersistentHeader",
        [S._Location_column]: 14,
        [S._Location_line]: 2078,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C1124() {
      return C[1124] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "MediaQuery",
        [S._Location_column]: 23,
        [S._Location_line]: 2075,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C1125() {
      return C[1125] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_AppBarTitleBox",
        [S._Location_column]: 9,
        [S._Location_line]: 2129,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C1127() {
      return C[1127] = dart.const({
        __proto__: app_bar._ScrollUnderFlexibleVariant.prototype,
        [S._Enum__name]: "medium",
        [S._Enum_index]: 0
      });
    },
    get C1128() {
      return C[1128] = dart.const({
        __proto__: app_bar._ScrollUnderFlexibleVariant.prototype,
        [S._Enum__name]: "large",
        [S._Enum_index]: 1
      });
    },
    get C1126() {
      return C[1126] = dart.constList([C[1127] || CT.C1127, C[1128] || CT.C1128], app_bar._ScrollUnderFlexibleVariant);
    },
    get C1129() {
      return C[1129] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "_ScrollUnderFlexibleSpace",
        [S._Location_column]: 9,
        [S._Location_line]: 2168,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C1130() {
      return C[1130] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "DefaultTextStyle",
        [S._Location_column]: 11,
        [S._Location_line]: 2206,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C1131() {
      return C[1131] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "DefaultTextStyle",
        [S._Location_column]: 11,
        [S._Location_line]: 2212,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C1132() {
      return C[1132] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Align",
        [S._Location_column]: 22,
        [S._Location_line]: 2251,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C1133() {
      return C[1133] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "AnimatedOpacity",
        [S._Location_column]: 20,
        [S._Location_line]: 2247,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C1134() {
      return C[1134] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Container",
        [S._Location_column]: 18,
        [S._Location_line]: 2244,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C1135() {
      return C[1135] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Padding",
        [S._Location_column]: 9,
        [S._Location_line]: 2242,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C1136() {
      return C[1136] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Container",
        [S._Location_column]: 22,
        [S._Location_line]: 2266,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C1137() {
      return C[1137] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "OverflowBox",
        [S._Location_column]: 20,
        [S._Location_line]: 2262,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C1138() {
      return C[1138] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "ClipRect",
        [S._Location_column]: 18,
        [S._Location_line]: 2261,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C1139() {
      return C[1139] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Flexible",
        [S._Location_column]: 9,
        [S._Location_line]: 2260,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C1140() {
      return C[1140] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [S._Location_name]: "Column",
        [S._Location_column]: 12,
        [S._Location_line]: 2240,
        [S._Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/app_bar.dart"
      });
    },
    get C1141() {
      return C[1141] = dart.const({
        __proto__: edge_insets.EdgeInsetsDirectional.prototype,
        [S$.EdgeInsetsDirectional_bottom]: 0,
        [S$.EdgeInsetsDirectional_end]: 16,
        [S$.EdgeInsetsDirectional_top]: 0,
        [S$.EdgeInsetsDirectional_start]: 48
      });
    },
    get C1142() {
      return C[1142] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 20,
        [S.EdgeInsets_right]: 16,
        [S.EdgeInsets_top]: 0,
        [S.EdgeInsets_left]: 16
      });
    },
    get C1143() {
      return C[1143] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S.EdgeInsets_bottom]: 28,
        [S.EdgeInsets_right]: 16,
        [S.EdgeInsets_top]: 0,
        [S.EdgeInsets_left]: 16
      });
    }
  }, false);
  var C = Array(1144).fill(void 0);
  var I = [
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/icon_button.dart",
    "package:flutter/src/material/icon_button.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/button_style_button.dart",
    "package:flutter/src/material/button_style_button.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/button_style.dart",
    "package:flutter/src/material/button_style.dart",
    "package:flutter/src/material/back_button.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/back_button.dart",
    "package:flutter/src/material/time.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/time.dart",
    "package:flutter/src/material/text_button.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/text_button.dart",
    "package:flutter/src/material/snack_bar.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/snack_bar.dart",
    "package:flutter/src/material/floating_action_button_location.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/floating_action_button_location.dart",
    "package:flutter/src/material/floating_action_button.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/floating_action_button.dart",
    "package:flutter/src/material/flexible_space_bar.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/flexible_space_bar.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/toggle_buttons_theme.dart",
    "package:flutter/src/material/toggle_buttons_theme.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/time_picker_theme.dart",
    "package:flutter/src/material/time_picker_theme.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/text_selection_theme.dart",
    "package:flutter/src/material/text_selection_theme.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/text_button_theme.dart",
    "package:flutter/src/material/text_button_theme.dart",
    "package:flutter/src/material/tabs.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/tabs.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/tab_bar_theme.dart",
    "package:flutter/src/material/tab_bar_theme.dart",
    "package:flutter/src/material/switch_theme.dart",
    "package:flutter/src/material/snack_bar_theme.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/snack_bar_theme.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/slider_theme.dart",
    "package:flutter/src/material/slider_theme.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/scrollbar_theme.dart",
    "package:flutter/src/material/scrollbar_theme.dart",
    "package:flutter/src/material/radio_theme.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/progress_indicator_theme.dart",
    "package:flutter/src/material/progress_indicator_theme.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/popup_menu_theme.dart",
    "package:flutter/src/material/popup_menu_theme.dart",
    "package:flutter/src/material/page_transitions_theme.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/page_transitions_theme.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/outlined_button_theme.dart",
    "package:flutter/src/material/outlined_button_theme.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_rail.dart",
    "package:flutter/src/material/navigation_rail.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_rail_theme.dart",
    "package:flutter/src/material/navigation_rail_theme.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_bar.dart",
    "package:flutter/src/material/navigation_bar.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/navigation_bar_theme.dart",
    "package:flutter/src/material/navigation_bar_theme.dart",
    "package:flutter/src/material/input_decorator.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/input_decorator.dart",
    "package:flutter/src/material/ink_well.dart",
    "package:flutter/src/material/ink_splash.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/ink_splash.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/ink_well.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/material.dart",
    "package:flutter/src/material/material.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/ink_sparkle.dart",
    "package:flutter/src/material/ink_sparkle.dart",
    "package:flutter/src/material/ink_ripple.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/ink_ripple.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/expansion_tile_theme.dart",
    "package:flutter/src/material/expansion_tile_theme.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/elevated_button_theme.dart",
    "package:flutter/src/material/elevated_button_theme.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/dialog_theme.dart",
    "package:flutter/src/material/dialog_theme.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/data_table_theme.dart",
    "package:flutter/src/material/data_table_theme.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/chip_theme.dart",
    "package:flutter/src/material/chip_theme.dart",
    "package:flutter/src/material/checkbox_theme.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/card_theme.dart",
    "package:flutter/src/material/card_theme.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/button.dart",
    "package:flutter/src/material/button.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/material_button.dart",
    "package:flutter/src/material/material_button.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/color_scheme.dart",
    "package:flutter/src/material/color_scheme.dart",
    "package:flutter/src/material/button_theme.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/button_theme.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/button_bar_theme.dart",
    "package:flutter/src/material/button_bar_theme.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/tooltip_theme.dart",
    "package:flutter/src/material/tooltip_theme.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/tooltip.dart",
    "package:flutter/src/material/tooltip.dart",
    "package:flutter/src/material/bottom_navigation_bar.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_navigation_bar.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_navigation_bar_theme.dart",
    "package:flutter/src/material/bottom_navigation_bar_theme.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_app_bar_theme.dart",
    "package:flutter/src/material/bottom_app_bar_theme.dart",
    "package:flutter/src/material/theme_data.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/theme_data.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/list_tile_theme.dart",
    "package:flutter/src/material/list_tile_theme.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/ink_highlight.dart",
    "package:flutter/src/material/ink_highlight.dart",
    "package:flutter/src/material/feedback.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/ink_decoration.dart",
    "package:flutter/src/material/ink_decoration.dart",
    "package:flutter/src/material/list_tile.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/list_tile.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/drawer_theme.dart",
    "package:flutter/src/material/drawer_theme.dart",
    "package:flutter/src/material/drawer.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/drawer.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/bottom_sheet.dart",
    "package:flutter/src/material/bottom_sheet.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/divider_theme.dart",
    "package:flutter/src/material/divider_theme.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/divider.dart",
    "package:flutter/src/material/divider.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/banner_theme.dart",
    "package:flutter/src/material/banner_theme.dart",
    "package:flutter/src/material/banner.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/banner.dart",
    "package:flutter/src/material/scaffold.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/scaffold.dart",
    "package:flutter/src/material/elevation_overlay.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/debug.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/material_localizations.dart",
    "package:flutter/src/material/material_localizations.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/theme.dart",
    "package:flutter/src/material/theme.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/app_bar_theme.dart",
    "package:flutter/src/material/app_bar_theme.dart",
    "package:flutter/src/material/app_bar.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/app_bar.dart"
  ];
  icon_button.IconButton = class IconButton extends framework.StatelessWidget {
    get iconSize() {
      return this[S.iconSize];
    }
    set iconSize(value) {
      super.iconSize = value;
    }
    get visualDensity() {
      return this[S.visualDensity];
    }
    set visualDensity(value) {
      super.visualDensity = value;
    }
    get padding() {
      return this[S.padding];
    }
    set padding(value) {
      super.padding = value;
    }
    get alignment() {
      return this[S.alignment];
    }
    set alignment(value) {
      super.alignment = value;
    }
    get splashRadius() {
      return this[S.splashRadius];
    }
    set splashRadius(value) {
      super.splashRadius = value;
    }
    get icon() {
      return this[S.icon];
    }
    set icon(value) {
      super.icon = value;
    }
    get focusColor() {
      return this[S.focusColor];
    }
    set focusColor(value) {
      super.focusColor = value;
    }
    get hoverColor() {
      return this[S.hoverColor];
    }
    set hoverColor(value) {
      super.hoverColor = value;
    }
    get color() {
      return this[S.color];
    }
    set color(value) {
      super.color = value;
    }
    get splashColor() {
      return this[S.splashColor];
    }
    set splashColor(value) {
      super.splashColor = value;
    }
    get highlightColor() {
      return this[S.highlightColor];
    }
    set highlightColor(value) {
      super.highlightColor = value;
    }
    get disabledColor() {
      return this[S.disabledColor];
    }
    set disabledColor(value) {
      super.disabledColor = value;
    }
    get onPressed() {
      return this[S.onPressed];
    }
    set onPressed(value) {
      super.onPressed = value;
    }
    get mouseCursor() {
      return this[S.mouseCursor];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    get focusNode() {
      return this[S.focusNode];
    }
    set focusNode(value) {
      super.focusNode = value;
    }
    get autofocus() {
      return this[S.autofocus];
    }
    set autofocus(value) {
      super.autofocus = value;
    }
    get tooltip() {
      return this[S.tooltip];
    }
    set tooltip(value) {
      super.tooltip = value;
    }
    get enableFeedback() {
      return this[S.enableFeedback];
    }
    set enableFeedback(value) {
      super.enableFeedback = value;
    }
    get constraints() {
      return this[S.constraints];
    }
    set constraints(value) {
      super.constraints = value;
    }
    get style() {
      return this[S.style];
    }
    set style(value) {
      super.style = value;
    }
    get isSelected() {
      return this[S.isSelected];
    }
    set isSelected(value) {
      super.isSelected = value;
    }
    get selectedIcon() {
      return this[S.selectedIcon];
    }
    set selectedIcon(value) {
      super.selectedIcon = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let iconSize = opts && 'iconSize' in opts ? opts.iconSize : null;
      let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
      let padding = opts && 'padding' in opts ? opts.padding : C[0] || CT.C0;
      let alignment = opts && 'alignment' in opts ? opts.alignment : C[1] || CT.C1;
      let splashRadius = opts && 'splashRadius' in opts ? opts.splashRadius : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
      let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
      let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
      let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
      let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
      let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
      let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
      let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
      let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
      let tooltip = opts && 'tooltip' in opts ? opts.tooltip : null;
      let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : true;
      let constraints = opts && 'constraints' in opts ? opts.constraints : null;
      let style = opts && 'style' in opts ? opts.style : null;
      let isSelected = opts && 'isSelected' in opts ? opts.isSelected : null;
      let selectedIcon = opts && 'selectedIcon' in opts ? opts.selectedIcon : null;
      let icon = opts && 'icon' in opts ? opts.icon : null;
      return new icon_button.IconButton.new({key: key, iconSize: iconSize, visualDensity: visualDensity, padding: padding, alignment: alignment, splashRadius: splashRadius, color: color, focusColor: focusColor, hoverColor: hoverColor, highlightColor: highlightColor, splashColor: splashColor, disabledColor: disabledColor, onPressed: onPressed, mouseCursor: mouseCursor, focusNode: focusNode, autofocus: autofocus, tooltip: tooltip, enableFeedback: enableFeedback, constraints: constraints, style: style, isSelected: isSelected, selectedIcon: selectedIcon, icon: icon, $creationLocationd_0dea112b090073317d4: C[2] || CT.C2});
    }
    static styleFrom(opts) {
      let foregroundColor = opts && 'foregroundColor' in opts ? opts.foregroundColor : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let disabledForegroundColor = opts && 'disabledForegroundColor' in opts ? opts.disabledForegroundColor : null;
      let disabledBackgroundColor = opts && 'disabledBackgroundColor' in opts ? opts.disabledBackgroundColor : null;
      let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
      let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
      let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
      let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
      let surfaceTintColor = opts && 'surfaceTintColor' in opts ? opts.surfaceTintColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let minimumSize = opts && 'minimumSize' in opts ? opts.minimumSize : null;
      let fixedSize = opts && 'fixedSize' in opts ? opts.fixedSize : null;
      let maximumSize = opts && 'maximumSize' in opts ? opts.maximumSize : null;
      let side = opts && 'side' in opts ? opts.side : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let enabledMouseCursor = opts && 'enabledMouseCursor' in opts ? opts.enabledMouseCursor : null;
      let disabledMouseCursor = opts && 'disabledMouseCursor' in opts ? opts.disabledMouseCursor : null;
      let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
      let tapTargetSize = opts && 'tapTargetSize' in opts ? opts.tapTargetSize : null;
      let animationDuration = opts && 'animationDuration' in opts ? opts.animationDuration : null;
      let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
      let alignment = opts && 'alignment' in opts ? opts.alignment : null;
      let splashFactory = opts && 'splashFactory' in opts ? opts.splashFactory : null;
      let buttonBackgroundColor = backgroundColor == null && disabledBackgroundColor == null ? null : new icon_button._IconButtonDefaultBackground.new(backgroundColor, disabledBackgroundColor);
      let buttonForegroundColor = foregroundColor == null && disabledForegroundColor == null ? null : new icon_button._IconButtonDefaultForeground.new(foregroundColor, disabledForegroundColor);
      let overlayColor = foregroundColor == null && hoverColor == null && focusColor == null && highlightColor == null ? null : new icon_button._IconButtonDefaultOverlay.new(foregroundColor, focusColor, hoverColor, highlightColor);
      let mouseCursor = enabledMouseCursor == null && disabledMouseCursor == null ? null : new icon_button._IconButtonDefaultMouseCursor.new(dart.nullCheck(enabledMouseCursor), dart.nullCheck(disabledMouseCursor));
      return new button_style.ButtonStyle.new({backgroundColor: buttonBackgroundColor, foregroundColor: buttonForegroundColor, overlayColor: overlayColor, shadowColor: button_style_button.ButtonStyleButton.allOrNull(ui.Color, shadowColor), surfaceTintColor: button_style_button.ButtonStyleButton.allOrNull(ui.Color, surfaceTintColor), elevation: button_style_button.ButtonStyleButton.allOrNull(core.double, elevation), padding: button_style_button.ButtonStyleButton.allOrNull(edge_insets.EdgeInsetsGeometry, padding), minimumSize: button_style_button.ButtonStyleButton.allOrNull(ui.Size, minimumSize), fixedSize: button_style_button.ButtonStyleButton.allOrNull(ui.Size, fixedSize), maximumSize: button_style_button.ButtonStyleButton.allOrNull(ui.Size, maximumSize), side: button_style_button.ButtonStyleButton.allOrNull(borders.BorderSide, side), shape: button_style_button.ButtonStyleButton.allOrNull(borders.OutlinedBorder, shape), mouseCursor: mouseCursor, visualDensity: visualDensity, tapTargetSize: tapTargetSize, animationDuration: animationDuration, enableFeedback: enableFeedback, alignment: alignment, splashFactory: splashFactory});
    }
    build(context) {
      let t0, t0$, t0$0, t0$1, t0$2, t0$3, t0$4, t0$5, t0$6, t0$7, t0$8, t0$9;
      let theme = theme$.Theme.of(context);
      if (!theme.useMaterial3) {
        if (!debug$1.debugCheckHasMaterial(context)) dart.assertFailed(null, I[0], 520, 14, "debugCheckHasMaterial(context)");
      }
      let currentColor = null;
      if (this.onPressed != null) {
        currentColor = this.color;
      } else {
        currentColor = (t0 = this.disabledColor, t0 == null ? theme.disabledColor : t0);
      }
      let effectiveVisualDensity = (t0$ = this.visualDensity, t0$ == null ? theme.visualDensity : t0$);
      let unadjustedConstraints = (t0$0 = this.constraints, t0$0 == null ? C[3] || CT.C3 : t0$0);
      let adjustedConstraints = effectiveVisualDensity.effectiveConstraints(unadjustedConstraints);
      let effectiveIconSize = (t0$2 = (t0$1 = this.iconSize, t0$1 == null ? icon_theme.IconTheme.of(context).size : t0$1), t0$2 == null ? 24.0 : t0$2);
      if (theme.useMaterial3) {
        let minSize = this.constraints == null ? null : new ui.Size.new(dart.nullCheck(this.constraints).minWidth, dart.nullCheck(this.constraints).minHeight);
        let maxSize = this.constraints == null ? null : new ui.Size.new(dart.nullCheck(this.constraints).maxWidth, dart.nullCheck(this.constraints).maxHeight);
        let adjustedStyle = icon_button.IconButton.styleFrom({visualDensity: this.visualDensity, foregroundColor: this.color, disabledForegroundColor: this.disabledColor, focusColor: this.focusColor, hoverColor: this.hoverColor, highlightColor: this.highlightColor, padding: this.padding, minimumSize: minSize, maximumSize: maxSize, alignment: this.alignment, enabledMouseCursor: this.mouseCursor, disabledMouseCursor: this.mouseCursor, enableFeedback: this.enableFeedback});
        if (this.style != null) {
          adjustedStyle = dart.nullCheck(this.style).merge(adjustedStyle);
        }
        let effectiveIcon = this.icon;
        if (dart.test((t0$3 = this.isSelected, t0$3 == null ? false : t0$3)) && this.selectedIcon != null) {
          effectiveIcon = dart.nullCheck(this.selectedIcon);
        }
        let iconButton = icon_theme.IconTheme.merge({data: new icon_theme_data.IconThemeData.new({size: effectiveIconSize}), child: effectiveIcon});
        if (this.tooltip != null) {
          iconButton = new tooltip.Tooltip.new({message: this.tooltip, child: iconButton, $creationLocationd_0dea112b090073317d4: C[4] || CT.C4});
        }
        return new icon_button._SelectableIconButton.new({style: adjustedStyle, onPressed: this.onPressed, autofocus: this.autofocus, focusNode: this.focusNode, isSelected: this.isSelected, child: iconButton, $creationLocationd_0dea112b090073317d4: C[5] || CT.C5});
      }
      let result = new basic.ConstrainedBox.new({constraints: adjustedConstraints, child: new basic.Padding.new({padding: this.padding, child: new basic.SizedBox.new({height: effectiveIconSize, width: effectiveIconSize, child: new basic.Align.new({alignment: this.alignment, child: icon_theme.IconTheme.merge({data: new icon_theme_data.IconThemeData.new({size: effectiveIconSize, color: currentColor}), child: this.icon}), $creationLocationd_0dea112b090073317d4: C[6] || CT.C6}), $creationLocationd_0dea112b090073317d4: C[7] || CT.C7}), $creationLocationd_0dea112b090073317d4: C[8] || CT.C8}), $creationLocationd_0dea112b090073317d4: C[9] || CT.C9});
      if (this.tooltip != null) {
        result = new tooltip.Tooltip.new({message: this.tooltip, child: result, $creationLocationd_0dea112b090073317d4: C[10] || CT.C10});
      }
      return new basic.Semantics.new({button: true, enabled: this.onPressed != null, child: new ink_well.InkResponse.new({focusNode: this.focusNode, autofocus: this.autofocus, canRequestFocus: this.onPressed != null, onTap: this.onPressed, mouseCursor: (t0$4 = this.mouseCursor, t0$4 == null ? this.onPressed == null ? mouse_cursor.SystemMouseCursors.basic : mouse_cursor.SystemMouseCursors.click : t0$4), enableFeedback: this.enableFeedback, focusColor: (t0$5 = this.focusColor, t0$5 == null ? theme.focusColor : t0$5), hoverColor: (t0$6 = this.hoverColor, t0$6 == null ? theme.hoverColor : t0$6), highlightColor: (t0$7 = this.highlightColor, t0$7 == null ? theme.highlightColor : t0$7), splashColor: (t0$8 = this.splashColor, t0$8 == null ? theme.splashColor : t0$8), radius: (t0$9 = this.splashRadius, t0$9 == null ? math.max(core.double, 35, (effectiveIconSize + math.min(core.num, this.padding.horizontal, this.padding.vertical)) * 0.7) : t0$9), child: result, $creationLocationd_0dea112b090073317d4: C[11] || CT.C11}), $creationLocationd_0dea112b090073317d4: C[12] || CT.C12});
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfWidget()).new("icon", this.icon, {showName: false}));
      properties.add(new diagnostics.StringProperty.new("tooltip", this.tooltip, {defaultValue: null, quoted: false}));
      properties.add(new (T$.ObjectFlagPropertyOfVoidTovoid()).new("onPressed", this.onPressed, {ifNull: "disabled"}));
      properties.add(new colors.ColorProperty.new("color", this.color, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("disabledColor", this.disabledColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("focusColor", this.focusColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("hoverColor", this.hoverColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("highlightColor", this.highlightColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("splashColor", this.splashColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfEdgeInsetsGeometry()).new("padding", this.padding, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfFocusNode()).new("focusNode", this.focusNode, {defaultValue: null}));
    }
  };
  (icon_button.IconButton.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let iconSize = opts && 'iconSize' in opts ? opts.iconSize : null;
    let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
    let padding = opts && 'padding' in opts ? opts.padding : C[0] || CT.C0;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C[1] || CT.C1;
    let splashRadius = opts && 'splashRadius' in opts ? opts.splashRadius : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    let tooltip = opts && 'tooltip' in opts ? opts.tooltip : null;
    let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : true;
    let constraints = opts && 'constraints' in opts ? opts.constraints : null;
    let style = opts && 'style' in opts ? opts.style : null;
    let isSelected = opts && 'isSelected' in opts ? opts.isSelected : null;
    let selectedIcon = opts && 'selectedIcon' in opts ? opts.selectedIcon : null;
    let icon = opts && 'icon' in opts ? opts.icon : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.iconSize] = iconSize;
    this[S.visualDensity] = visualDensity;
    this[S.padding] = padding;
    this[S.alignment] = alignment;
    this[S.splashRadius] = splashRadius;
    this[S.color] = color;
    this[S.focusColor] = focusColor;
    this[S.hoverColor] = hoverColor;
    this[S.highlightColor] = highlightColor;
    this[S.splashColor] = splashColor;
    this[S.disabledColor] = disabledColor;
    this[S.onPressed] = onPressed;
    this[S.mouseCursor] = mouseCursor;
    this[S.focusNode] = focusNode;
    this[S.autofocus] = autofocus;
    this[S.tooltip] = tooltip;
    this[S.enableFeedback] = enableFeedback;
    this[S.constraints] = constraints;
    this[S.style] = style;
    this[S.isSelected] = isSelected;
    this[S.selectedIcon] = selectedIcon;
    this[S.icon] = icon;
    if (!(padding !== null)) dart.assertFailed(null, I[0], 173, 15, "padding != null");
    if (!(alignment !== null)) dart.assertFailed(null, I[0], 174, 15, "alignment != null");
    if (!(splashRadius == null || dart.notNull(splashRadius) > 0)) dart.assertFailed(null, I[0], 175, 15, "splashRadius == null || splashRadius > 0");
    if (!(autofocus !== null)) dart.assertFailed(null, I[0], 176, 15, "autofocus != null");
    if (!(icon !== null)) dart.assertFailed(null, I[0], 177, 15, "icon != null");
    icon_button.IconButton.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = icon_button.IconButton.prototype;
  dart.addTypeTests(icon_button.IconButton);
  dart.addTypeCaches(icon_button.IconButton);
  dart.setMethodSignature(icon_button.IconButton, () => ({
    __proto__: dart.getMethods(icon_button.IconButton.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setStaticMethodSignature(icon_button.IconButton, () => ['styleFrom']);
  dart.setLibraryUri(icon_button.IconButton, I[1]);
  dart.setFieldSignature(icon_button.IconButton, () => ({
    __proto__: dart.getFields(icon_button.IconButton.__proto__),
    iconSize: dart.finalFieldType(dart.nullable(core.double)),
    visualDensity: dart.finalFieldType(dart.nullable(theme_data.VisualDensity)),
    padding: dart.finalFieldType(edge_insets.EdgeInsetsGeometry),
    alignment: dart.finalFieldType(alignment.AlignmentGeometry),
    splashRadius: dart.finalFieldType(dart.nullable(core.double)),
    icon: dart.finalFieldType(framework.Widget),
    focusColor: dart.finalFieldType(dart.nullable(ui.Color)),
    hoverColor: dart.finalFieldType(dart.nullable(ui.Color)),
    color: dart.finalFieldType(dart.nullable(ui.Color)),
    splashColor: dart.finalFieldType(dart.nullable(ui.Color)),
    highlightColor: dart.finalFieldType(dart.nullable(ui.Color)),
    disabledColor: dart.finalFieldType(dart.nullable(ui.Color)),
    onPressed: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    mouseCursor: dart.finalFieldType(dart.nullable(mouse_cursor.MouseCursor)),
    focusNode: dart.finalFieldType(dart.nullable(focus_manager.FocusNode)),
    autofocus: dart.finalFieldType(core.bool),
    tooltip: dart.finalFieldType(dart.nullable(core.String)),
    enableFeedback: dart.finalFieldType(core.bool),
    constraints: dart.finalFieldType(dart.nullable(box$.BoxConstraints)),
    style: dart.finalFieldType(dart.nullable(button_style.ButtonStyle)),
    isSelected: dart.finalFieldType(dart.nullable(core.bool)),
    selectedIcon: dart.finalFieldType(dart.nullable(framework.Widget))
  }));
  icon_button._SelectableIconButton = class _SelectableIconButton extends framework.StatefulWidget {
    get isSelected() {
      return this[S.isSelected$1];
    }
    set isSelected(value) {
      super.isSelected = value;
    }
    get style() {
      return this[S.style$1];
    }
    set style(value) {
      super.style = value;
    }
    get focusNode() {
      return this[S.focusNode$1];
    }
    set focusNode(value) {
      super.focusNode = value;
    }
    get autofocus() {
      return this[S.autofocus$1];
    }
    set autofocus(value) {
      super.autofocus = value;
    }
    get onPressed() {
      return this[S.onPressed$1];
    }
    set onPressed(value) {
      super.onPressed = value;
    }
    get child() {
      return this[S.child];
    }
    set child(value) {
      super.child = value;
    }
    static ['_#new#tearOff'](opts) {
      let isSelected = opts && 'isSelected' in opts ? opts.isSelected : null;
      let style = opts && 'style' in opts ? opts.style : null;
      let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
      let autofocus = opts && 'autofocus' in opts ? opts.autofocus : null;
      let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new icon_button._SelectableIconButton.new({isSelected: isSelected, style: style, focusNode: focusNode, autofocus: autofocus, onPressed: onPressed, child: child, $creationLocationd_0dea112b090073317d4: C[13] || CT.C13});
    }
    createState() {
      return new icon_button._SelectableIconButtonState.new();
    }
  };
  (icon_button._SelectableIconButton.new = function(opts) {
    let isSelected = opts && 'isSelected' in opts ? opts.isSelected : null;
    let style = opts && 'style' in opts ? opts.style : null;
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.isSelected$1] = isSelected;
    this[S.style$1] = style;
    this[S.focusNode$1] = focusNode;
    this[S.autofocus$1] = autofocus;
    this[S.onPressed$1] = onPressed;
    this[S.child] = child;
    icon_button._SelectableIconButton.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = icon_button._SelectableIconButton.prototype;
  dart.addTypeTests(icon_button._SelectableIconButton);
  dart.addTypeCaches(icon_button._SelectableIconButton);
  dart.setMethodSignature(icon_button._SelectableIconButton, () => ({
    __proto__: dart.getMethods(icon_button._SelectableIconButton.__proto__),
    createState: dart.fnType(framework.State$(icon_button._SelectableIconButton), [])
  }));
  dart.setLibraryUri(icon_button._SelectableIconButton, I[1]);
  dart.setFieldSignature(icon_button._SelectableIconButton, () => ({
    __proto__: dart.getFields(icon_button._SelectableIconButton.__proto__),
    isSelected: dart.finalFieldType(dart.nullable(core.bool)),
    style: dart.finalFieldType(dart.nullable(button_style.ButtonStyle)),
    focusNode: dart.finalFieldType(dart.nullable(focus_manager.FocusNode)),
    autofocus: dart.finalFieldType(core.bool),
    onPressed: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    child: dart.finalFieldType(framework.Widget)
  }));
  icon_button._SelectableIconButtonState = class _SelectableIconButtonState extends framework.State$(icon_button._SelectableIconButton) {
    get statesController() {
      let t0;
      t0 = this[S.___SelectableIconButtonState_statesController];
      return t0 == null ? dart.throw(new _internal.LateError.fieldNI("statesController")) : t0;
    }
    set statesController(statesController$35param) {
      if (this[S.___SelectableIconButtonState_statesController] == null)
        this[S.___SelectableIconButtonState_statesController] = statesController$35param;
      else
        dart.throw(new _internal.LateError.fieldAI("statesController"));
    }
    initState() {
      super.initState();
      if (this.widget.isSelected == null) {
        this.statesController = new material_state.MaterialStatesController.new();
      } else {
        this.statesController = new material_state.MaterialStatesController.new((() => {
          let t0 = T$.LinkedHashSetOfMaterialState().new();
          if (dart.nullCheck(this.widget.isSelected)) t0.add(material_state.MaterialState.selected);
          return t0;
        })());
      }
    }
    didUpdateWidget(oldWidget) {
      icon_button._SelectableIconButton.as(oldWidget);
      super.didUpdateWidget(oldWidget);
      if (this.widget.isSelected == null) {
        if (this.statesController.value.contains(material_state.MaterialState.selected)) {
          this.statesController.update(material_state.MaterialState.selected, false);
        }
        return;
      }
      if (this.widget.isSelected != oldWidget.isSelected) {
        this.statesController.update(material_state.MaterialState.selected, dart.nullCheck(this.widget.isSelected));
      }
    }
    build(context) {
      return new icon_button._IconButtonM3.new({statesController: this.statesController, style: this.widget.style, autofocus: this.widget.autofocus, focusNode: this.widget.focusNode, onPressed: this.widget.onPressed, child: this.widget.child, $creationLocationd_0dea112b090073317d4: C[14] || CT.C14});
    }
    static ['_#new#tearOff']() {
      return new icon_button._SelectableIconButtonState.new();
    }
  };
  (icon_button._SelectableIconButtonState.new = function() {
    this[S.___SelectableIconButtonState_statesController] = null;
    icon_button._SelectableIconButtonState.__proto__.new.call(this);
    ;
  }).prototype = icon_button._SelectableIconButtonState.prototype;
  dart.addTypeTests(icon_button._SelectableIconButtonState);
  dart.addTypeCaches(icon_button._SelectableIconButtonState);
  dart.setMethodSignature(icon_button._SelectableIconButtonState, () => ({
    __proto__: dart.getMethods(icon_button._SelectableIconButtonState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(icon_button._SelectableIconButtonState, () => ({
    __proto__: dart.getGetters(icon_button._SelectableIconButtonState.__proto__),
    statesController: material_state.MaterialStatesController
  }));
  dart.setSetterSignature(icon_button._SelectableIconButtonState, () => ({
    __proto__: dart.getSetters(icon_button._SelectableIconButtonState.__proto__),
    statesController: material_state.MaterialStatesController
  }));
  dart.setLibraryUri(icon_button._SelectableIconButtonState, I[1]);
  dart.setFieldSignature(icon_button._SelectableIconButtonState, () => ({
    __proto__: dart.getFields(icon_button._SelectableIconButtonState.__proto__),
    [S.___SelectableIconButtonState_statesController]: dart.fieldType(dart.nullable(material_state.MaterialStatesController))
  }));
  button_style_button.ButtonStyleButton = class ButtonStyleButton extends framework.StatefulWidget {
    get onPressed() {
      return this[S.onPressed$2];
    }
    set onPressed(value) {
      super.onPressed = value;
    }
    get onLongPress() {
      return this[S.onLongPress];
    }
    set onLongPress(value) {
      super.onLongPress = value;
    }
    get onHover() {
      return this[S.onHover];
    }
    set onHover(value) {
      super.onHover = value;
    }
    get onFocusChange() {
      return this[S.onFocusChange];
    }
    set onFocusChange(value) {
      super.onFocusChange = value;
    }
    get style() {
      return this[S.style$2];
    }
    set style(value) {
      super.style = value;
    }
    get clipBehavior() {
      return this[S.clipBehavior];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    get focusNode() {
      return this[S.focusNode$2];
    }
    set focusNode(value) {
      super.focusNode = value;
    }
    get autofocus() {
      return this[S.autofocus$2];
    }
    set autofocus(value) {
      super.autofocus = value;
    }
    get statesController() {
      return this[S.statesController];
    }
    set statesController(value) {
      super.statesController = value;
    }
    get child() {
      return this[S.child$1];
    }
    set child(value) {
      super.child = value;
    }
    get enabled() {
      return this.onPressed != null || this.onLongPress != null;
    }
    createState() {
      return new button_style_button._ButtonStyleState.new();
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new diagnostics.FlagProperty.new("enabled", {value: this.enabled, ifFalse: "disabled"}));
      properties.add(new (T$.DiagnosticsPropertyOfButtonStyle()).new("style", this.style, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfFocusNode()).new("focusNode", this.focusNode, {defaultValue: null}));
    }
    static allOrNull(T, value) {
      return value == null ? null : new (material_state.MaterialStatePropertyAll$(T)).new(value);
    }
    static scaledPadding(geometry1x, geometry2x, geometry3x, textScaleFactor) {
      if (!(geometry1x !== null)) dart.assertFailed(null, I[2], 173, 12, "geometry1x != null");
      if (!(geometry2x !== null)) dart.assertFailed(null, I[2], 174, 12, "geometry2x != null");
      if (!(geometry3x !== null)) dart.assertFailed(null, I[2], 175, 12, "geometry3x != null");
      if (!(textScaleFactor !== null)) dart.assertFailed(null, I[2], 176, 12, "textScaleFactor != null");
      if (textScaleFactor <= 1) {
        return geometry1x;
      } else if (textScaleFactor >= 3) {
        return geometry3x;
      } else if (textScaleFactor <= 2) {
        return dart.nullCheck(edge_insets.EdgeInsetsGeometry.lerp(geometry1x, geometry2x, textScaleFactor - 1));
      }
      return dart.nullCheck(edge_insets.EdgeInsetsGeometry.lerp(geometry2x, geometry3x, textScaleFactor - 2));
    }
  };
  (button_style_button.ButtonStyleButton.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let onHover = opts && 'onHover' in opts ? opts.onHover : null;
    let onFocusChange = opts && 'onFocusChange' in opts ? opts.onFocusChange : null;
    let style = opts && 'style' in opts ? opts.style : null;
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
    let statesController = opts && 'statesController' in opts ? opts.statesController : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.onPressed$2] = onPressed;
    this[S.onLongPress] = onLongPress;
    this[S.onHover] = onHover;
    this[S.onFocusChange] = onFocusChange;
    this[S.style$2] = style;
    this[S.focusNode$2] = focusNode;
    this[S.autofocus$2] = autofocus;
    this[S.clipBehavior] = clipBehavior;
    this[S.statesController] = statesController;
    this[S.child$1] = child;
    if (!(autofocus !== null)) dart.assertFailed(null, I[2], 43, 15, "autofocus != null");
    if (!(clipBehavior !== null)) dart.assertFailed(null, I[2], 44, 15, "clipBehavior != null");
    button_style_button.ButtonStyleButton.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = button_style_button.ButtonStyleButton.prototype;
  dart.addTypeTests(button_style_button.ButtonStyleButton);
  dart.addTypeCaches(button_style_button.ButtonStyleButton);
  dart.setMethodSignature(button_style_button.ButtonStyleButton, () => ({
    __proto__: dart.getMethods(button_style_button.ButtonStyleButton.__proto__),
    createState: dart.fnType(framework.State$(button_style_button.ButtonStyleButton), [])
  }));
  dart.setStaticMethodSignature(button_style_button.ButtonStyleButton, () => ['allOrNull', 'scaledPadding']);
  dart.setGetterSignature(button_style_button.ButtonStyleButton, () => ({
    __proto__: dart.getGetters(button_style_button.ButtonStyleButton.__proto__),
    enabled: core.bool
  }));
  dart.setLibraryUri(button_style_button.ButtonStyleButton, I[3]);
  dart.setFieldSignature(button_style_button.ButtonStyleButton, () => ({
    __proto__: dart.getFields(button_style_button.ButtonStyleButton.__proto__),
    onPressed: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onLongPress: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onHover: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.bool]))),
    onFocusChange: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.bool]))),
    style: dart.finalFieldType(dart.nullable(button_style.ButtonStyle)),
    clipBehavior: dart.finalFieldType(ui.Clip),
    focusNode: dart.finalFieldType(dart.nullable(focus_manager.FocusNode)),
    autofocus: dart.finalFieldType(core.bool),
    statesController: dart.finalFieldType(dart.nullable(material_state.MaterialStatesController)),
    child: dart.finalFieldType(dart.nullable(framework.Widget))
  }));
  icon_button._IconButtonM3 = class _IconButtonM3 extends button_style_button.ButtonStyleButton {
    static ['_#new#tearOff'](opts) {
      let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
      let style = opts && 'style' in opts ? opts.style : null;
      let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
      let autofocus = opts && 'autofocus' in opts ? opts.autofocus : null;
      let statesController = opts && 'statesController' in opts ? opts.statesController : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new icon_button._IconButtonM3.new({onPressed: onPressed, style: style, focusNode: focusNode, autofocus: autofocus, statesController: statesController, child: child, $creationLocationd_0dea112b090073317d4: C[15] || CT.C15});
    }
    defaultStyleOf(context) {
      return new icon_button._IconButtonDefaultsM3.new(context);
    }
    themeStyleOf(context) {
      return null;
    }
  };
  (icon_button._IconButtonM3.new = function(opts) {
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let style = opts && 'style' in opts ? opts.style : null;
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    let statesController = opts && 'statesController' in opts ? opts.statesController : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    icon_button._IconButtonM3.__proto__.new.call(this, {onLongPress: null, onHover: null, onFocusChange: null, clipBehavior: ui.Clip.none, onPressed: onPressed, style: style, focusNode: focusNode, autofocus: autofocus, statesController: statesController, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = icon_button._IconButtonM3.prototype;
  dart.addTypeTests(icon_button._IconButtonM3);
  dart.addTypeCaches(icon_button._IconButtonM3);
  dart.setMethodSignature(icon_button._IconButtonM3, () => ({
    __proto__: dart.getMethods(icon_button._IconButtonM3.__proto__),
    defaultStyleOf: dart.fnType(button_style.ButtonStyle, [framework.BuildContext]),
    themeStyleOf: dart.fnType(dart.nullable(button_style.ButtonStyle), [framework.BuildContext])
  }));
  dart.setLibraryUri(icon_button._IconButtonM3, I[1]);
  icon_button._IconButtonDefaultBackground = class _IconButtonDefaultBackground extends material_state.MaterialStateProperty$(dart.nullable(ui.Color)) {
    static ['_#new#tearOff'](background, disabledBackground) {
      return new icon_button._IconButtonDefaultBackground.new(background, disabledBackground);
    }
    resolve(states) {
      if (states.contains(material_state.MaterialState.disabled)) {
        return this.disabledBackground;
      }
      return this.background;
    }
    toString() {
      return "{disabled: " + dart.str(this.disabledBackground) + ", otherwise: " + dart.str(this.background) + "}";
    }
  };
  (icon_button._IconButtonDefaultBackground.new = function(background, disabledBackground) {
    this.background = background;
    this.disabledBackground = disabledBackground;
    ;
  }).prototype = icon_button._IconButtonDefaultBackground.prototype;
  dart.addTypeTests(icon_button._IconButtonDefaultBackground);
  dart.addTypeCaches(icon_button._IconButtonDefaultBackground);
  dart.setMethodSignature(icon_button._IconButtonDefaultBackground, () => ({
    __proto__: dart.getMethods(icon_button._IconButtonDefaultBackground.__proto__),
    resolve: dart.fnType(dart.nullable(ui.Color), [core.Set$(material_state.MaterialState)])
  }));
  dart.setLibraryUri(icon_button._IconButtonDefaultBackground, I[1]);
  dart.setFieldSignature(icon_button._IconButtonDefaultBackground, () => ({
    __proto__: dart.getFields(icon_button._IconButtonDefaultBackground.__proto__),
    background: dart.finalFieldType(dart.nullable(ui.Color)),
    disabledBackground: dart.finalFieldType(dart.nullable(ui.Color))
  }));
  dart.defineExtensionMethods(icon_button._IconButtonDefaultBackground, ['toString']);
  icon_button._IconButtonDefaultForeground = class _IconButtonDefaultForeground extends material_state.MaterialStateProperty$(dart.nullable(ui.Color)) {
    static ['_#new#tearOff'](foregroundColor, disabledForegroundColor) {
      return new icon_button._IconButtonDefaultForeground.new(foregroundColor, disabledForegroundColor);
    }
    resolve(states) {
      if (states.contains(material_state.MaterialState.disabled)) {
        return this.disabledForegroundColor;
      }
      return this.foregroundColor;
    }
    toString() {
      return "{disabled: " + dart.str(this.disabledForegroundColor) + ", otherwise: " + dart.str(this.foregroundColor) + "}";
    }
  };
  (icon_button._IconButtonDefaultForeground.new = function(foregroundColor, disabledForegroundColor) {
    this.foregroundColor = foregroundColor;
    this.disabledForegroundColor = disabledForegroundColor;
    ;
  }).prototype = icon_button._IconButtonDefaultForeground.prototype;
  dart.addTypeTests(icon_button._IconButtonDefaultForeground);
  dart.addTypeCaches(icon_button._IconButtonDefaultForeground);
  dart.setMethodSignature(icon_button._IconButtonDefaultForeground, () => ({
    __proto__: dart.getMethods(icon_button._IconButtonDefaultForeground.__proto__),
    resolve: dart.fnType(dart.nullable(ui.Color), [core.Set$(material_state.MaterialState)])
  }));
  dart.setLibraryUri(icon_button._IconButtonDefaultForeground, I[1]);
  dart.setFieldSignature(icon_button._IconButtonDefaultForeground, () => ({
    __proto__: dart.getFields(icon_button._IconButtonDefaultForeground.__proto__),
    foregroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    disabledForegroundColor: dart.finalFieldType(dart.nullable(ui.Color))
  }));
  dart.defineExtensionMethods(icon_button._IconButtonDefaultForeground, ['toString']);
  icon_button._IconButtonDefaultOverlay = class _IconButtonDefaultOverlay extends material_state.MaterialStateProperty$(dart.nullable(ui.Color)) {
    static ['_#new#tearOff'](foregroundColor, focusColor, hoverColor, highlightColor) {
      return new icon_button._IconButtonDefaultOverlay.new(foregroundColor, focusColor, hoverColor, highlightColor);
    }
    resolve(states) {
      let t2, t1, t2$, t1$, t2$0, t1$0, t2$1, t1$1, t2$2, t1$2, t2$3, t1$3;
      if (states.contains(material_state.MaterialState.selected)) {
        if (states.contains(material_state.MaterialState.pressed)) {
          t1 = this.highlightColor;
          return t1 == null ? (t2 = this.foregroundColor, t2 == null ? null : t2.withOpacity(0.12)) : t1;
        }
        if (states.contains(material_state.MaterialState.hovered)) {
          t1$ = this.hoverColor;
          return t1$ == null ? (t2$ = this.foregroundColor, t2$ == null ? null : t2$.withOpacity(0.08)) : t1$;
        }
        if (states.contains(material_state.MaterialState.focused)) {
          t1$0 = this.focusColor;
          return t1$0 == null ? (t2$0 = this.foregroundColor, t2$0 == null ? null : t2$0.withOpacity(0.12)) : t1$0;
        }
      }
      if (states.contains(material_state.MaterialState.pressed)) {
        t1$1 = this.highlightColor;
        return t1$1 == null ? (t2$1 = this.foregroundColor, t2$1 == null ? null : t2$1.withOpacity(0.12)) : t1$1;
      }
      if (states.contains(material_state.MaterialState.hovered)) {
        t1$2 = this.hoverColor;
        return t1$2 == null ? (t2$2 = this.foregroundColor, t2$2 == null ? null : t2$2.withOpacity(0.08)) : t1$2;
      }
      if (states.contains(material_state.MaterialState.focused)) {
        t1$3 = this.focusColor;
        return t1$3 == null ? (t2$3 = this.foregroundColor, t2$3 == null ? null : t2$3.withOpacity(0.08)) : t1$3;
      }
      return null;
    }
    toString() {
      return "{hovered: " + dart.str(this.hoverColor) + ", focused: " + dart.str(this.focusColor) + ", pressed: " + dart.str(this.highlightColor) + ", otherwise: null}";
    }
  };
  (icon_button._IconButtonDefaultOverlay.new = function(foregroundColor, focusColor, hoverColor, highlightColor) {
    this.foregroundColor = foregroundColor;
    this.focusColor = focusColor;
    this.hoverColor = hoverColor;
    this.highlightColor = highlightColor;
    ;
  }).prototype = icon_button._IconButtonDefaultOverlay.prototype;
  dart.addTypeTests(icon_button._IconButtonDefaultOverlay);
  dart.addTypeCaches(icon_button._IconButtonDefaultOverlay);
  dart.setMethodSignature(icon_button._IconButtonDefaultOverlay, () => ({
    __proto__: dart.getMethods(icon_button._IconButtonDefaultOverlay.__proto__),
    resolve: dart.fnType(dart.nullable(ui.Color), [core.Set$(material_state.MaterialState)])
  }));
  dart.setLibraryUri(icon_button._IconButtonDefaultOverlay, I[1]);
  dart.setFieldSignature(icon_button._IconButtonDefaultOverlay, () => ({
    __proto__: dart.getFields(icon_button._IconButtonDefaultOverlay.__proto__),
    foregroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    focusColor: dart.finalFieldType(dart.nullable(ui.Color)),
    hoverColor: dart.finalFieldType(dart.nullable(ui.Color)),
    highlightColor: dart.finalFieldType(dart.nullable(ui.Color))
  }));
  dart.defineExtensionMethods(icon_button._IconButtonDefaultOverlay, ['toString']);
  const MaterialStateProperty_Diagnosticable$36 = class MaterialStateProperty_Diagnosticable extends material_state.MaterialStateProperty$(mouse_cursor.MouseCursor) {};
  (MaterialStateProperty_Diagnosticable$36.new = function() {
  }).prototype = MaterialStateProperty_Diagnosticable$36.prototype;
  dart.applyMixin(MaterialStateProperty_Diagnosticable$36, diagnostics.Diagnosticable);
  icon_button._IconButtonDefaultMouseCursor = class _IconButtonDefaultMouseCursor extends MaterialStateProperty_Diagnosticable$36 {
    static ['_#new#tearOff'](enabledCursor, disabledCursor) {
      return new icon_button._IconButtonDefaultMouseCursor.new(enabledCursor, disabledCursor);
    }
    resolve(states) {
      if (states.contains(material_state.MaterialState.disabled)) {
        return this.disabledCursor;
      }
      return this.enabledCursor;
    }
  };
  (icon_button._IconButtonDefaultMouseCursor.new = function(enabledCursor, disabledCursor) {
    this.enabledCursor = enabledCursor;
    this.disabledCursor = disabledCursor;
    ;
  }).prototype = icon_button._IconButtonDefaultMouseCursor.prototype;
  dart.addTypeTests(icon_button._IconButtonDefaultMouseCursor);
  dart.addTypeCaches(icon_button._IconButtonDefaultMouseCursor);
  dart.setMethodSignature(icon_button._IconButtonDefaultMouseCursor, () => ({
    __proto__: dart.getMethods(icon_button._IconButtonDefaultMouseCursor.__proto__),
    resolve: dart.fnType(mouse_cursor.MouseCursor, [core.Set$(material_state.MaterialState)])
  }));
  dart.setLibraryUri(icon_button._IconButtonDefaultMouseCursor, I[1]);
  dart.setFieldSignature(icon_button._IconButtonDefaultMouseCursor, () => ({
    __proto__: dart.getFields(icon_button._IconButtonDefaultMouseCursor.__proto__),
    enabledCursor: dart.finalFieldType(mouse_cursor.MouseCursor),
    disabledCursor: dart.finalFieldType(mouse_cursor.MouseCursor)
  }));
  const Object_Diagnosticable$36 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36.new = function() {
  }).prototype = Object_Diagnosticable$36.prototype;
  dart.applyMixin(Object_Diagnosticable$36, diagnostics.Diagnosticable);
  button_style.ButtonStyle = class ButtonStyle extends Object_Diagnosticable$36 {
    get textStyle() {
      return this[S.textStyle];
    }
    set textStyle(value) {
      super.textStyle = value;
    }
    get backgroundColor() {
      return this[S.backgroundColor];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get foregroundColor() {
      return this[S.foregroundColor];
    }
    set foregroundColor(value) {
      super.foregroundColor = value;
    }
    get overlayColor() {
      return this[S.overlayColor];
    }
    set overlayColor(value) {
      super.overlayColor = value;
    }
    get shadowColor() {
      return this[S.shadowColor];
    }
    set shadowColor(value) {
      super.shadowColor = value;
    }
    get surfaceTintColor() {
      return this[S.surfaceTintColor];
    }
    set surfaceTintColor(value) {
      super.surfaceTintColor = value;
    }
    get elevation() {
      return this[S.elevation];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get padding() {
      return this[S.padding$1];
    }
    set padding(value) {
      super.padding = value;
    }
    get minimumSize() {
      return this[S.minimumSize];
    }
    set minimumSize(value) {
      super.minimumSize = value;
    }
    get fixedSize() {
      return this[S.fixedSize];
    }
    set fixedSize(value) {
      super.fixedSize = value;
    }
    get maximumSize() {
      return this[S.maximumSize];
    }
    set maximumSize(value) {
      super.maximumSize = value;
    }
    get side() {
      return this[S.side];
    }
    set side(value) {
      super.side = value;
    }
    get shape() {
      return this[S.shape];
    }
    set shape(value) {
      super.shape = value;
    }
    get mouseCursor() {
      return this[S.mouseCursor$1];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    get visualDensity() {
      return this[S.visualDensity$1];
    }
    set visualDensity(value) {
      super.visualDensity = value;
    }
    get tapTargetSize() {
      return this[S.tapTargetSize];
    }
    set tapTargetSize(value) {
      super.tapTargetSize = value;
    }
    get animationDuration() {
      return this[S.animationDuration];
    }
    set animationDuration(value) {
      super.animationDuration = value;
    }
    get enableFeedback() {
      return this[S.enableFeedback$1];
    }
    set enableFeedback(value) {
      super.enableFeedback = value;
    }
    get alignment() {
      return this[S.alignment$1];
    }
    set alignment(value) {
      super.alignment = value;
    }
    get splashFactory() {
      return this[S.splashFactory];
    }
    set splashFactory(value) {
      super.splashFactory = value;
    }
    static ['_#new#tearOff'](opts) {
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let foregroundColor = opts && 'foregroundColor' in opts ? opts.foregroundColor : null;
      let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
      let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
      let surfaceTintColor = opts && 'surfaceTintColor' in opts ? opts.surfaceTintColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let minimumSize = opts && 'minimumSize' in opts ? opts.minimumSize : null;
      let fixedSize = opts && 'fixedSize' in opts ? opts.fixedSize : null;
      let maximumSize = opts && 'maximumSize' in opts ? opts.maximumSize : null;
      let side = opts && 'side' in opts ? opts.side : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
      let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
      let tapTargetSize = opts && 'tapTargetSize' in opts ? opts.tapTargetSize : null;
      let animationDuration = opts && 'animationDuration' in opts ? opts.animationDuration : null;
      let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
      let alignment = opts && 'alignment' in opts ? opts.alignment : null;
      let splashFactory = opts && 'splashFactory' in opts ? opts.splashFactory : null;
      return new button_style.ButtonStyle.new({textStyle: textStyle, backgroundColor: backgroundColor, foregroundColor: foregroundColor, overlayColor: overlayColor, shadowColor: shadowColor, surfaceTintColor: surfaceTintColor, elevation: elevation, padding: padding, minimumSize: minimumSize, fixedSize: fixedSize, maximumSize: maximumSize, side: side, shape: shape, mouseCursor: mouseCursor, visualDensity: visualDensity, tapTargetSize: tapTargetSize, animationDuration: animationDuration, enableFeedback: enableFeedback, alignment: alignment, splashFactory: splashFactory});
    }
    copyWith(opts) {
      let t1, t1$, t1$0, t1$1, t1$2, t1$3, t1$4, t1$5, t1$6, t1$7, t1$8, t1$9, t1$10, t1$11, t1$12, t1$13, t1$14, t1$15, t1$16, t1$17;
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let foregroundColor = opts && 'foregroundColor' in opts ? opts.foregroundColor : null;
      let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
      let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
      let surfaceTintColor = opts && 'surfaceTintColor' in opts ? opts.surfaceTintColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let minimumSize = opts && 'minimumSize' in opts ? opts.minimumSize : null;
      let fixedSize = opts && 'fixedSize' in opts ? opts.fixedSize : null;
      let maximumSize = opts && 'maximumSize' in opts ? opts.maximumSize : null;
      let side = opts && 'side' in opts ? opts.side : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
      let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
      let tapTargetSize = opts && 'tapTargetSize' in opts ? opts.tapTargetSize : null;
      let animationDuration = opts && 'animationDuration' in opts ? opts.animationDuration : null;
      let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
      let alignment = opts && 'alignment' in opts ? opts.alignment : null;
      let splashFactory = opts && 'splashFactory' in opts ? opts.splashFactory : null;
      return new button_style.ButtonStyle.new({textStyle: (t1 = textStyle, t1 == null ? this.textStyle : t1), backgroundColor: (t1$ = backgroundColor, t1$ == null ? this.backgroundColor : t1$), foregroundColor: (t1$0 = foregroundColor, t1$0 == null ? this.foregroundColor : t1$0), overlayColor: (t1$1 = overlayColor, t1$1 == null ? this.overlayColor : t1$1), shadowColor: (t1$2 = shadowColor, t1$2 == null ? this.shadowColor : t1$2), surfaceTintColor: (t1$3 = surfaceTintColor, t1$3 == null ? this.surfaceTintColor : t1$3), elevation: (t1$4 = elevation, t1$4 == null ? this.elevation : t1$4), padding: (t1$5 = padding, t1$5 == null ? this.padding : t1$5), minimumSize: (t1$6 = minimumSize, t1$6 == null ? this.minimumSize : t1$6), fixedSize: (t1$7 = fixedSize, t1$7 == null ? this.fixedSize : t1$7), maximumSize: (t1$8 = maximumSize, t1$8 == null ? this.maximumSize : t1$8), side: (t1$9 = side, t1$9 == null ? this.side : t1$9), shape: (t1$10 = shape, t1$10 == null ? this.shape : t1$10), mouseCursor: (t1$11 = mouseCursor, t1$11 == null ? this.mouseCursor : t1$11), visualDensity: (t1$12 = visualDensity, t1$12 == null ? this.visualDensity : t1$12), tapTargetSize: (t1$13 = tapTargetSize, t1$13 == null ? this.tapTargetSize : t1$13), animationDuration: (t1$14 = animationDuration, t1$14 == null ? this.animationDuration : t1$14), enableFeedback: (t1$15 = enableFeedback, t1$15 == null ? this.enableFeedback : t1$15), alignment: (t1$16 = alignment, t1$16 == null ? this.alignment : t1$16), splashFactory: (t1$17 = splashFactory, t1$17 == null ? this.splashFactory : t1$17)});
    }
    merge(style) {
      let t1, t1$, t1$0, t1$1, t1$2, t1$3, t1$4, t1$5, t1$6, t1$7, t1$8, t1$9, t1$10, t1$11, t1$12, t1$13, t1$14, t1$15, t1$16, t1$17;
      if (style == null) {
        return this;
      }
      return this.copyWith({textStyle: (t1 = this.textStyle, t1 == null ? style.textStyle : t1), backgroundColor: (t1$ = this.backgroundColor, t1$ == null ? style.backgroundColor : t1$), foregroundColor: (t1$0 = this.foregroundColor, t1$0 == null ? style.foregroundColor : t1$0), overlayColor: (t1$1 = this.overlayColor, t1$1 == null ? style.overlayColor : t1$1), shadowColor: (t1$2 = this.shadowColor, t1$2 == null ? style.shadowColor : t1$2), surfaceTintColor: (t1$3 = this.surfaceTintColor, t1$3 == null ? style.surfaceTintColor : t1$3), elevation: (t1$4 = this.elevation, t1$4 == null ? style.elevation : t1$4), padding: (t1$5 = this.padding, t1$5 == null ? style.padding : t1$5), minimumSize: (t1$6 = this.minimumSize, t1$6 == null ? style.minimumSize : t1$6), fixedSize: (t1$7 = this.fixedSize, t1$7 == null ? style.fixedSize : t1$7), maximumSize: (t1$8 = this.maximumSize, t1$8 == null ? style.maximumSize : t1$8), side: (t1$9 = this.side, t1$9 == null ? style.side : t1$9), shape: (t1$10 = this.shape, t1$10 == null ? style.shape : t1$10), mouseCursor: (t1$11 = this.mouseCursor, t1$11 == null ? style.mouseCursor : t1$11), visualDensity: (t1$12 = this.visualDensity, t1$12 == null ? style.visualDensity : t1$12), tapTargetSize: (t1$13 = this.tapTargetSize, t1$13 == null ? style.tapTargetSize : t1$13), animationDuration: (t1$14 = this.animationDuration, t1$14 == null ? style.animationDuration : t1$14), enableFeedback: (t1$15 = this.enableFeedback, t1$15 == null ? style.enableFeedback : t1$15), alignment: (t1$16 = this.alignment, t1$16 == null ? style.alignment : t1$16), splashFactory: (t1$17 = this.splashFactory, t1$17 == null ? style.splashFactory : t1$17)});
    }
    get hashCode() {
      return core.Object.hash(this.textStyle, this.backgroundColor, this.foregroundColor, this.overlayColor, this.shadowColor, this.surfaceTintColor, this.elevation, this.padding, this.minimumSize, this.fixedSize, this.maximumSize, this.side, this.shape, this.mouseCursor, this.visualDensity, this.tapTargetSize, this.animationDuration, this.enableFeedback, this.alignment, this.splashFactory);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      if (!other[S.$runtimeType]._equals(this[S.$runtimeType])) {
        return false;
      }
      return button_style.ButtonStyle.is(other) && dart.equals(other.textStyle, this.textStyle) && dart.equals(other.backgroundColor, this.backgroundColor) && dart.equals(other.foregroundColor, this.foregroundColor) && dart.equals(other.overlayColor, this.overlayColor) && dart.equals(other.shadowColor, this.shadowColor) && dart.equals(other.surfaceTintColor, this.surfaceTintColor) && dart.equals(other.elevation, this.elevation) && dart.equals(other.padding, this.padding) && dart.equals(other.minimumSize, this.minimumSize) && dart.equals(other.fixedSize, this.fixedSize) && dart.equals(other.maximumSize, this.maximumSize) && dart.equals(other.side, this.side) && dart.equals(other.shape, this.shape) && dart.equals(other.mouseCursor, this.mouseCursor) && dart.equals(other.visualDensity, this.visualDensity) && other.tapTargetSize == this.tapTargetSize && dart.equals(other.animationDuration, this.animationDuration) && other.enableFeedback == this.enableFeedback && dart.equals(other.alignment, this.alignment) && dart.equals(other.splashFactory, this.splashFactory);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfTextStyleN()).new("textStyle", this.textStyle, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfColorN()).new("backgroundColor", this.backgroundColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfColorN()).new("foregroundColor", this.foregroundColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfColorN()).new("overlayColor", this.overlayColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfColorN()).new("shadowColor", this.shadowColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfColorN()).new("surfaceTintColor", this.surfaceTintColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfdoubleN()).new("elevation", this.elevation, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfEdgeInsetsGeometryN()).new("padding", this.padding, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfSizeN()).new("minimumSize", this.minimumSize, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfSizeN()).new("fixedSize", this.fixedSize, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfSizeN()).new("maximumSize", this.maximumSize, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfBorderSideN()).new("side", this.side, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfOutlinedBorderN()).new("shape", this.shape, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfMouseCursorN()).new("mouseCursor", this.mouseCursor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfVisualDensity()).new("visualDensity", this.visualDensity, {defaultValue: null}));
      properties.add(new (T$.EnumPropertyOfMaterialTapTargetSize()).new("tapTargetSize", this.tapTargetSize, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfDuration()).new("animationDuration", this.animationDuration, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("enableFeedback", this.enableFeedback, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfAlignmentGeometry()).new("alignment", this.alignment, {defaultValue: null}));
    }
    static lerp(a, b, t) {
      let t1, t1$, t1$0, t1$1, t1$2, t1$3, t1$4, t1$5, t1$6, t1$7, t1$8, t1$9, t1$10, t1$11, t1$12, t1$13, t1$14, t1$15, t1$16, t1$17, t1$18, t1$19, t1$20, t1$21, t1$22, t1$23, t1$24, t1$25, t1$26, t1$27, t1$28, t1$29, t1$30, t1$31, t1$32, t1$33, t1$34, t1$35, t1$36, t1$37;
      if (!(t !== null)) dart.assertFailed(null, I[4], 451, 13, "t != null");
      if (a == null && b == null) {
        return null;
      }
      return new button_style.ButtonStyle.new({textStyle: button_style.ButtonStyle._lerpProperties(T$.TextStyleN(), (t1 = a, t1 == null ? null : t1.textStyle), (t1$ = b, t1$ == null ? null : t1$.textStyle), t, C[22] || CT.C22), backgroundColor: button_style.ButtonStyle._lerpProperties(T$.ColorN(), (t1$0 = a, t1$0 == null ? null : t1$0.backgroundColor), (t1$1 = b, t1$1 == null ? null : t1$1.backgroundColor), t, C[23] || CT.C23), foregroundColor: button_style.ButtonStyle._lerpProperties(T$.ColorN(), (t1$2 = a, t1$2 == null ? null : t1$2.foregroundColor), (t1$3 = b, t1$3 == null ? null : t1$3.foregroundColor), t, C[23] || CT.C23), overlayColor: button_style.ButtonStyle._lerpProperties(T$.ColorN(), (t1$4 = a, t1$4 == null ? null : t1$4.overlayColor), (t1$5 = b, t1$5 == null ? null : t1$5.overlayColor), t, C[23] || CT.C23), shadowColor: button_style.ButtonStyle._lerpProperties(T$.ColorN(), (t1$6 = a, t1$6 == null ? null : t1$6.shadowColor), (t1$7 = b, t1$7 == null ? null : t1$7.shadowColor), t, C[23] || CT.C23), surfaceTintColor: button_style.ButtonStyle._lerpProperties(T$.ColorN(), (t1$8 = a, t1$8 == null ? null : t1$8.surfaceTintColor), (t1$9 = b, t1$9 == null ? null : t1$9.surfaceTintColor), t, C[23] || CT.C23), elevation: button_style.ButtonStyle._lerpProperties(T$.doubleN(), (t1$10 = a, t1$10 == null ? null : t1$10.elevation), (t1$11 = b, t1$11 == null ? null : t1$11.elevation), t, C[24] || CT.C24), padding: button_style.ButtonStyle._lerpProperties(T$.EdgeInsetsGeometryN(), (t1$12 = a, t1$12 == null ? null : t1$12.padding), (t1$13 = b, t1$13 == null ? null : t1$13.padding), t, C[25] || CT.C25), minimumSize: button_style.ButtonStyle._lerpProperties(T$.SizeN(), (t1$14 = a, t1$14 == null ? null : t1$14.minimumSize), (t1$15 = b, t1$15 == null ? null : t1$15.minimumSize), t, C[26] || CT.C26), fixedSize: button_style.ButtonStyle._lerpProperties(T$.SizeN(), (t1$16 = a, t1$16 == null ? null : t1$16.fixedSize), (t1$17 = b, t1$17 == null ? null : t1$17.fixedSize), t, C[26] || CT.C26), maximumSize: button_style.ButtonStyle._lerpProperties(T$.SizeN(), (t1$18 = a, t1$18 == null ? null : t1$18.maximumSize), (t1$19 = b, t1$19 == null ? null : t1$19.maximumSize), t, C[26] || CT.C26), side: button_style.ButtonStyle._lerpSides((t1$20 = a, t1$20 == null ? null : t1$20.side), (t1$21 = b, t1$21 == null ? null : t1$21.side), t), shape: material_state.MaterialStateProperty.lerp(T$.OutlinedBorderN(), (t1$22 = a, t1$22 == null ? null : t1$22.shape), (t1$23 = b, t1$23 == null ? null : t1$23.shape), t, C[27] || CT.C27), mouseCursor: t < 0.5 ? (t1$24 = a, t1$24 == null ? null : t1$24.mouseCursor) : (t1$25 = b, t1$25 == null ? null : t1$25.mouseCursor), visualDensity: t < 0.5 ? (t1$26 = a, t1$26 == null ? null : t1$26.visualDensity) : (t1$27 = b, t1$27 == null ? null : t1$27.visualDensity), tapTargetSize: t < 0.5 ? (t1$28 = a, t1$28 == null ? null : t1$28.tapTargetSize) : (t1$29 = b, t1$29 == null ? null : t1$29.tapTargetSize), animationDuration: t < 0.5 ? (t1$30 = a, t1$30 == null ? null : t1$30.animationDuration) : (t1$31 = b, t1$31 == null ? null : t1$31.animationDuration), enableFeedback: t < 0.5 ? (t1$32 = a, t1$32 == null ? null : t1$32.enableFeedback) : (t1$33 = b, t1$33 == null ? null : t1$33.enableFeedback), alignment: alignment.AlignmentGeometry.lerp((t1$34 = a, t1$34 == null ? null : t1$34.alignment), (t1$35 = b, t1$35 == null ? null : t1$35.alignment), t), splashFactory: t < 0.5 ? (t1$36 = a, t1$36 == null ? null : t1$36.splashFactory) : (t1$37 = b, t1$37 == null ? null : t1$37.splashFactory)});
    }
    static _lerpProperties(T, a, b, t, lerpFunction) {
      if (a == null && b == null) {
        return null;
      }
      return new (button_style._LerpProperties$(T)).new(a, b, t, lerpFunction);
    }
    static _lerpSides(a, b, t) {
      if (a == null && b == null) {
        return null;
      }
      return new button_style._LerpSides.new(a, b, t);
    }
  };
  (button_style.ButtonStyle.new = function(opts) {
    let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let foregroundColor = opts && 'foregroundColor' in opts ? opts.foregroundColor : null;
    let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
    let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
    let surfaceTintColor = opts && 'surfaceTintColor' in opts ? opts.surfaceTintColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let minimumSize = opts && 'minimumSize' in opts ? opts.minimumSize : null;
    let fixedSize = opts && 'fixedSize' in opts ? opts.fixedSize : null;
    let maximumSize = opts && 'maximumSize' in opts ? opts.maximumSize : null;
    let side = opts && 'side' in opts ? opts.side : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
    let tapTargetSize = opts && 'tapTargetSize' in opts ? opts.tapTargetSize : null;
    let animationDuration = opts && 'animationDuration' in opts ? opts.animationDuration : null;
    let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : null;
    let splashFactory = opts && 'splashFactory' in opts ? opts.splashFactory : null;
    this[S.textStyle] = textStyle;
    this[S.backgroundColor] = backgroundColor;
    this[S.foregroundColor] = foregroundColor;
    this[S.overlayColor] = overlayColor;
    this[S.shadowColor] = shadowColor;
    this[S.surfaceTintColor] = surfaceTintColor;
    this[S.elevation] = elevation;
    this[S.padding$1] = padding;
    this[S.minimumSize] = minimumSize;
    this[S.fixedSize] = fixedSize;
    this[S.maximumSize] = maximumSize;
    this[S.side] = side;
    this[S.shape] = shape;
    this[S.mouseCursor$1] = mouseCursor;
    this[S.visualDensity$1] = visualDensity;
    this[S.tapTargetSize] = tapTargetSize;
    this[S.animationDuration] = animationDuration;
    this[S.enableFeedback$1] = enableFeedback;
    this[S.alignment$1] = alignment;
    this[S.splashFactory] = splashFactory;
    ;
  }).prototype = button_style.ButtonStyle.prototype;
  dart.addTypeTests(button_style.ButtonStyle);
  dart.addTypeCaches(button_style.ButtonStyle);
  dart.setMethodSignature(button_style.ButtonStyle, () => ({
    __proto__: dart.getMethods(button_style.ButtonStyle.__proto__),
    copyWith: dart.fnType(button_style.ButtonStyle, [], {alignment: dart.nullable(alignment.AlignmentGeometry), animationDuration: dart.nullable(core.Duration), backgroundColor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color))), elevation: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(core.double))), enableFeedback: dart.nullable(core.bool), fixedSize: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Size))), foregroundColor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color))), maximumSize: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Size))), minimumSize: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Size))), mouseCursor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(mouse_cursor.MouseCursor))), overlayColor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color))), padding: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(edge_insets.EdgeInsetsGeometry))), shadowColor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color))), shape: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(borders.OutlinedBorder))), side: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(borders.BorderSide))), splashFactory: dart.nullable(ink_well.InteractiveInkFeatureFactory), surfaceTintColor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color))), tapTargetSize: dart.nullable(theme_data.MaterialTapTargetSize), textStyle: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(text_style.TextStyle))), visualDensity: dart.nullable(theme_data.VisualDensity)}, {}),
    merge: dart.fnType(button_style.ButtonStyle, [dart.nullable(button_style.ButtonStyle)])
  }));
  dart.setStaticMethodSignature(button_style.ButtonStyle, () => ['lerp', '_lerpProperties', '_lerpSides']);
  dart.setLibraryUri(button_style.ButtonStyle, I[5]);
  dart.setFieldSignature(button_style.ButtonStyle, () => ({
    __proto__: dart.getFields(button_style.ButtonStyle.__proto__),
    textStyle: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(text_style.TextStyle)))),
    backgroundColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    foregroundColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    overlayColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    shadowColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    surfaceTintColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    elevation: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(core.double)))),
    padding: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(edge_insets.EdgeInsetsGeometry)))),
    minimumSize: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Size)))),
    fixedSize: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Size)))),
    maximumSize: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Size)))),
    side: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(borders.BorderSide)))),
    shape: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(borders.OutlinedBorder)))),
    mouseCursor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(mouse_cursor.MouseCursor)))),
    visualDensity: dart.finalFieldType(dart.nullable(theme_data.VisualDensity)),
    tapTargetSize: dart.finalFieldType(dart.nullable(theme_data.MaterialTapTargetSize)),
    animationDuration: dart.finalFieldType(dart.nullable(core.Duration)),
    enableFeedback: dart.finalFieldType(dart.nullable(core.bool)),
    alignment: dart.finalFieldType(dart.nullable(alignment.AlignmentGeometry)),
    splashFactory: dart.finalFieldType(dart.nullable(ink_well.InteractiveInkFeatureFactory))
  }));
  dart.defineExtensionMethods(button_style.ButtonStyle, ['_equals']);
  dart.defineExtensionAccessors(button_style.ButtonStyle, ['hashCode']);
  icon_button._IconButtonDefaultsM3 = class _IconButtonDefaultsM3 extends button_style.ButtonStyle {
    static ['_#new#tearOff'](context) {
      return new icon_button._IconButtonDefaultsM3.new(context);
    }
    get [S._colors]() {
      let t2, t1;
      t1 = this[S.___IconButtonDefaultsM3__colors];
      return t1 == null ? (t2 = theme$.Theme.of(this.context).colorScheme, this[S.___IconButtonDefaultsM3__colors] == null ? this[S.___IconButtonDefaultsM3__colors] = t2 : dart.throw(new _internal.LateError.fieldADI("_colors"))) : t1;
    }
    get backgroundColor() {
      return button_style_button.ButtonStyleButton.allOrNull(ui.Color, colors$.Colors.transparent);
    }
    get foregroundColor() {
      return material_state.MaterialStateProperty.resolveWith(T$.ColorN(), dart.fn(states => {
        if (states.contains(material_state.MaterialState.disabled)) {
          return this[S._colors].onSurface.withOpacity(0.38);
        }
        if (states.contains(material_state.MaterialState.selected)) {
          return this[S._colors].primary;
        }
        return this[S._colors].onSurfaceVariant;
      }, T$.SetOfMaterialStateToColor()));
    }
    get overlayColor() {
      return material_state.MaterialStateProperty.resolveWith(T$.ColorN(), dart.fn(states => {
        if (states.contains(material_state.MaterialState.selected)) {
          if (states.contains(material_state.MaterialState.hovered)) {
            return this[S._colors].primary.withOpacity(0.08);
          }
          if (states.contains(material_state.MaterialState.focused)) {
            return this[S._colors].primary.withOpacity(0.12);
          }
          if (states.contains(material_state.MaterialState.pressed)) {
            return this[S._colors].primary.withOpacity(0.12);
          }
        }
        if (states.contains(material_state.MaterialState.hovered)) {
          return this[S._colors].onSurfaceVariant.withOpacity(0.08);
        }
        if (states.contains(material_state.MaterialState.focused)) {
          return this[S._colors].onSurfaceVariant.withOpacity(0.08);
        }
        if (states.contains(material_state.MaterialState.pressed)) {
          return this[S._colors].onSurfaceVariant.withOpacity(0.12);
        }
        return null;
      }, T$.SetOfMaterialStateToColorN()));
    }
    get elevation() {
      return button_style_button.ButtonStyleButton.allOrNull(core.double, 0.0);
    }
    get padding() {
      return button_style_button.ButtonStyleButton.allOrNull(edge_insets.EdgeInsetsGeometry, C[0] || CT.C0);
    }
    get minimumSize() {
      return button_style_button.ButtonStyleButton.allOrNull(ui.Size, C[16] || CT.C16);
    }
    get maximumSize() {
      return button_style_button.ButtonStyleButton.allOrNull(ui.Size, ui.Size.infinite);
    }
    get shape() {
      return button_style_button.ButtonStyleButton.allOrNull(borders.OutlinedBorder, C[17] || CT.C17);
    }
    get mouseCursor() {
      return material_state.MaterialStateProperty.resolveWith(T$.MouseCursorN(), dart.fn(states => {
        if (states.contains(material_state.MaterialState.disabled)) {
          return mouse_cursor.SystemMouseCursors.basic;
        }
        return mouse_cursor.SystemMouseCursors.click;
      }, T$.SetOfMaterialStateToSystemMouseCursor()));
    }
    get visualDensity() {
      return theme$.Theme.of(this.context).visualDensity;
    }
    get tapTargetSize() {
      return theme$.Theme.of(this.context).materialTapTargetSize;
    }
    get splashFactory() {
      return theme$.Theme.of(this.context).splashFactory;
    }
  };
  (icon_button._IconButtonDefaultsM3.new = function(context) {
    this[S.___IconButtonDefaultsM3__colors] = null;
    this.context = context;
    icon_button._IconButtonDefaultsM3.__proto__.new.call(this, {animationDuration: constants.kThemeChangeDuration, enableFeedback: true, alignment: alignment.Alignment.center});
    ;
  }).prototype = icon_button._IconButtonDefaultsM3.prototype;
  dart.addTypeTests(icon_button._IconButtonDefaultsM3);
  dart.addTypeCaches(icon_button._IconButtonDefaultsM3);
  dart.setGetterSignature(icon_button._IconButtonDefaultsM3, () => ({
    __proto__: dart.getGetters(icon_button._IconButtonDefaultsM3.__proto__),
    [S._colors]: color_scheme.ColorScheme,
    backgroundColor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color))),
    foregroundColor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color))),
    overlayColor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color))),
    elevation: dart.nullable(material_state.MaterialStateProperty$(core.double)),
    padding: dart.nullable(material_state.MaterialStateProperty$(edge_insets.EdgeInsetsGeometry)),
    minimumSize: dart.nullable(material_state.MaterialStateProperty$(ui.Size)),
    maximumSize: dart.nullable(material_state.MaterialStateProperty$(ui.Size)),
    shape: dart.nullable(material_state.MaterialStateProperty$(borders.OutlinedBorder)),
    mouseCursor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(mouse_cursor.MouseCursor))),
    visualDensity: dart.nullable(theme_data.VisualDensity),
    tapTargetSize: dart.nullable(theme_data.MaterialTapTargetSize),
    splashFactory: dart.nullable(ink_well.InteractiveInkFeatureFactory)
  }));
  dart.setLibraryUri(icon_button._IconButtonDefaultsM3, I[1]);
  dart.setFieldSignature(icon_button._IconButtonDefaultsM3, () => ({
    __proto__: dart.getFields(icon_button._IconButtonDefaultsM3.__proto__),
    context: dart.finalFieldType(framework.BuildContext),
    [S.___IconButtonDefaultsM3__colors]: dart.fieldType(dart.nullable(color_scheme.ColorScheme))
  }));
  dart.defineLazy(icon_button, {
    /*icon_button._kMinButtonSize*/get _kMinButtonSize() {
      return 48;
    }
  }, false);
  back_button.BackButtonIcon = class BackButtonIcon extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new back_button.BackButtonIcon.new({key: key, $creationLocationd_0dea112b090073317d4: C[28] || CT.C28});
    }
    static _getIconData(platform) {
      switch (platform) {
        case C[29] || CT.C29:
        case C[30] || CT.C30:
        case C[31] || CT.C31:
        case C[32] || CT.C32:
          {
            return icons.Icons.arrow_back;
          }
        case C[33] || CT.C33:
        case C[34] || CT.C34:
          {
            return icons.Icons.arrow_back_ios;
          }
      }
    }
    build(context) {
      return new icon.Icon.new(back_button.BackButtonIcon._getIconData(theme$.Theme.of(context).platform), {$creationLocationd_0dea112b090073317d4: C[35] || CT.C35});
    }
  };
  (back_button.BackButtonIcon.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    back_button.BackButtonIcon.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = back_button.BackButtonIcon.prototype;
  dart.addTypeTests(back_button.BackButtonIcon);
  dart.addTypeCaches(back_button.BackButtonIcon);
  dart.setMethodSignature(back_button.BackButtonIcon, () => ({
    __proto__: dart.getMethods(back_button.BackButtonIcon.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setStaticMethodSignature(back_button.BackButtonIcon, () => ['_getIconData']);
  dart.setLibraryUri(back_button.BackButtonIcon, I[6]);
  back_button.BackButton = class BackButton extends framework.StatelessWidget {
    get color() {
      return this[S.color$1];
    }
    set color(value) {
      super.color = value;
    }
    get onPressed() {
      return this[S.onPressed$3];
    }
    set onPressed(value) {
      super.onPressed = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
      return new back_button.BackButton.new({key: key, color: color, onPressed: onPressed, $creationLocationd_0dea112b090073317d4: C[36] || CT.C36});
    }
    build(context) {
      if (!debug$1.debugCheckHasMaterialLocalizations(context)) dart.assertFailed(null, I[7], 97, 12, "debugCheckHasMaterialLocalizations(context)");
      return new icon_button.IconButton.new({icon: C[37] || CT.C37, color: this.color, tooltip: material_localizations.MaterialLocalizations.of(context).backButtonTooltip, onPressed: dart.fn(() => {
          if (this.onPressed != null) {
            dart.nullCheck(this.onPressed)();
          } else {
            navigator$.Navigator.maybePop(T$.ObjectN(), context);
          }
        }, T$.VoidTovoid()), $creationLocationd_0dea112b090073317d4: C[39] || CT.C39});
    }
  };
  (back_button.BackButton.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.color$1] = color;
    this[S.onPressed$3] = onPressed;
    back_button.BackButton.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = back_button.BackButton.prototype;
  dart.addTypeTests(back_button.BackButton);
  dart.addTypeCaches(back_button.BackButton);
  dart.setMethodSignature(back_button.BackButton, () => ({
    __proto__: dart.getMethods(back_button.BackButton.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(back_button.BackButton, I[6]);
  dart.setFieldSignature(back_button.BackButton, () => ({
    __proto__: dart.getFields(back_button.BackButton.__proto__),
    color: dart.finalFieldType(dart.nullable(ui.Color)),
    onPressed: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [])))
  }));
  back_button.CloseButton = class CloseButton extends framework.StatelessWidget {
    get color() {
      return this[S.color$2];
    }
    set color(value) {
      super.color = value;
    }
    get onPressed() {
      return this[S.onPressed$4];
    }
    set onPressed(value) {
      super.onPressed = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
      return new back_button.CloseButton.new({key: key, color: color, onPressed: onPressed, $creationLocationd_0dea112b090073317d4: C[40] || CT.C40});
    }
    build(context) {
      if (!debug$1.debugCheckHasMaterialLocalizations(context)) dart.assertFailed(null, I[7], 151, 12, "debugCheckHasMaterialLocalizations(context)");
      return new icon_button.IconButton.new({icon: C[41] || CT.C41, color: this.color, tooltip: material_localizations.MaterialLocalizations.of(context).closeButtonTooltip, onPressed: dart.fn(() => {
          if (this.onPressed != null) {
            dart.nullCheck(this.onPressed)();
          } else {
            navigator$.Navigator.maybePop(T$.ObjectN(), context);
          }
        }, T$.VoidTovoid()), $creationLocationd_0dea112b090073317d4: C[44] || CT.C44});
    }
  };
  (back_button.CloseButton.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.color$2] = color;
    this[S.onPressed$4] = onPressed;
    back_button.CloseButton.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = back_button.CloseButton.prototype;
  dart.addTypeTests(back_button.CloseButton);
  dart.addTypeCaches(back_button.CloseButton);
  dart.setMethodSignature(back_button.CloseButton, () => ({
    __proto__: dart.getMethods(back_button.CloseButton.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(back_button.CloseButton, I[6]);
  dart.setFieldSignature(back_button.CloseButton, () => ({
    __proto__: dart.getFields(back_button.CloseButton.__proto__),
    color: dart.finalFieldType(dart.nullable(ui.Color)),
    onPressed: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [])))
  }));
  time$.DayPeriod = class DayPeriod extends core._Enum {
    toString() {
      return "DayPeriod." + this[S._name];
    }
  };
  (time$.DayPeriod.new = function(index, name) {
    time$.DayPeriod.__proto__.new.call(this, index, name);
    ;
  }).prototype = time$.DayPeriod.prototype;
  dart.addTypeTests(time$.DayPeriod);
  dart.addTypeCaches(time$.DayPeriod);
  dart.setLibraryUri(time$.DayPeriod, I[8]);
  dart.setStaticFieldSignature(time$.DayPeriod, () => ['values', 'am', 'pm']);
  dart.defineExtensionMethods(time$.DayPeriod, ['toString']);
  dart.defineLazy(time$.DayPeriod, {
    /*time$.DayPeriod.values*/get values() {
      return C[45] || CT.C45;
    },
    /*time$.DayPeriod.am*/get am() {
      return C[46] || CT.C46;
    },
    /*time$.DayPeriod.pm*/get pm() {
      return C[47] || CT.C47;
    }
  }, false);
  time$.TimeOfDay = class TimeOfDay extends core.Object {
    get hour() {
      return this[S.hour];
    }
    set hour(value) {
      super.hour = value;
    }
    get minute() {
      return this[S.minute];
    }
    set minute(value) {
      super.minute = value;
    }
    static ['_#new#tearOff'](opts) {
      let hour = opts && 'hour' in opts ? opts.hour : null;
      let minute = opts && 'minute' in opts ? opts.minute : null;
      return new time$.TimeOfDay.new({hour: hour, minute: minute});
    }
    static ['_#fromDateTime#tearOff'](time) {
      return new time$.TimeOfDay.fromDateTime(time);
    }
    static now() {
      return new time$.TimeOfDay.fromDateTime(new core.DateTime.now());
    }
    static ['_#now#tearOff']() {
      return time$.TimeOfDay.now();
    }
    replacing(opts) {
      let t3, t3$;
      let hour = opts && 'hour' in opts ? opts.hour : null;
      let minute = opts && 'minute' in opts ? opts.minute : null;
      if (!(hour == null || dart.notNull(hour) >= 0 && dart.notNull(hour) < 24)) dart.assertFailed(null, I[9], 80, 12, "hour == null || (hour >= 0 && hour < hoursPerDay)");
      if (!(minute == null || dart.notNull(minute) >= 0 && dart.notNull(minute) < 60)) dart.assertFailed(null, I[9], 81, 12, "minute == null || (minute >= 0 && minute < minutesPerHour)");
      return new time$.TimeOfDay.new({hour: (t3 = hour, t3 == null ? this.hour : t3), minute: (t3$ = minute, t3$ == null ? this.minute : t3$)});
    }
    get period() {
      return this.hour < 12 ? time$.DayPeriod.am : time$.DayPeriod.pm;
    }
    get hourOfPeriod() {
      return this.hour === 0 || this.hour === 12 ? 12 : this.hour - this.periodOffset;
    }
    get periodOffset() {
      return this.period === time$.DayPeriod.am ? 0 : 12;
    }
    format(context) {
      if (!debug.debugCheckHasMediaQuery(context)) dart.assertFailed(null, I[9], 106, 12, "debugCheckHasMediaQuery(context)");
      if (!debug$1.debugCheckHasMaterialLocalizations(context)) dart.assertFailed(null, I[9], 107, 12, "debugCheckHasMaterialLocalizations(context)");
      let localizations = material_localizations.MaterialLocalizations.of(context);
      return localizations.formatTimeOfDay(this, {alwaysUse24HourFormat: media_query.MediaQuery.of(context).alwaysUse24HourFormat});
    }
    _equals(other) {
      if (other == null) return false;
      return time$.TimeOfDay.is(other) && other.hour === this.hour && other.minute === this.minute;
    }
    get hashCode() {
      return core.Object.hash(this.hour, this.minute);
    }
    toString() {
      function addLeadingZeroIfNeeded(value) {
        if (value < 10) {
          return "0" + dart.str(value);
        }
        return value[S.$toString]();
      }
      dart.fn(addLeadingZeroIfNeeded, T$.intToString());
      let hourLabel = addLeadingZeroIfNeeded(this.hour);
      let minuteLabel = addLeadingZeroIfNeeded(this.minute);
      return dart.str(dart.wrapType(time$.TimeOfDay)) + "(" + hourLabel + ":" + minuteLabel + ")";
    }
  };
  (time$.TimeOfDay.new = function(opts) {
    let hour = opts && 'hour' in opts ? opts.hour : null;
    let minute = opts && 'minute' in opts ? opts.minute : null;
    this[S.hour] = hour;
    this[S.minute] = minute;
    ;
  }).prototype = time$.TimeOfDay.prototype;
  (time$.TimeOfDay.fromDateTime = function(time) {
    this[S.hour] = time.hour;
    this[S.minute] = time.minute;
    ;
  }).prototype = time$.TimeOfDay.prototype;
  dart.addTypeTests(time$.TimeOfDay);
  dart.addTypeCaches(time$.TimeOfDay);
  dart.setMethodSignature(time$.TimeOfDay, () => ({
    __proto__: dart.getMethods(time$.TimeOfDay.__proto__),
    replacing: dart.fnType(time$.TimeOfDay, [], {hour: dart.nullable(core.int), minute: dart.nullable(core.int)}, {}),
    format: dart.fnType(core.String, [framework.BuildContext])
  }));
  dart.setStaticMethodSignature(time$.TimeOfDay, () => ['now']);
  dart.setGetterSignature(time$.TimeOfDay, () => ({
    __proto__: dart.getGetters(time$.TimeOfDay.__proto__),
    period: time$.DayPeriod,
    hourOfPeriod: core.int,
    periodOffset: core.int
  }));
  dart.setLibraryUri(time$.TimeOfDay, I[8]);
  dart.setFieldSignature(time$.TimeOfDay, () => ({
    __proto__: dart.getFields(time$.TimeOfDay.__proto__),
    hour: dart.finalFieldType(core.int),
    minute: dart.finalFieldType(core.int)
  }));
  dart.setStaticFieldSignature(time$.TimeOfDay, () => ['hoursPerDay', 'hoursPerPeriod', 'minutesPerHour']);
  dart.defineExtensionMethods(time$.TimeOfDay, ['_equals', 'toString']);
  dart.defineExtensionAccessors(time$.TimeOfDay, ['hashCode']);
  dart.defineLazy(time$.TimeOfDay, {
    /*time$.TimeOfDay.hoursPerDay*/get hoursPerDay() {
      return 24;
    },
    /*time$.TimeOfDay.hoursPerPeriod*/get hoursPerPeriod() {
      return 12;
    },
    /*time$.TimeOfDay.minutesPerHour*/get minutesPerHour() {
      return 60;
    }
  }, false);
  time$.RestorableTimeOfDay = class RestorableTimeOfDay extends restoration_properties.RestorableValue$(time$.TimeOfDay) {
    static ['_#new#tearOff'](defaultValue) {
      return new time$.RestorableTimeOfDay.new(defaultValue);
    }
    createDefaultValue() {
      return this[S._defaultValue];
    }
    didUpdateValue(oldValue) {
      T$.TimeOfDayN().as(oldValue);
      if (!restoration$.debugIsSerializableForRestoration(this.value.hour)) dart.assertFailed(null, I[9], 157, 12, "debugIsSerializableForRestoration(value.hour)");
      if (!restoration$.debugIsSerializableForRestoration(this.value.minute)) dart.assertFailed(null, I[9], 158, 12, "debugIsSerializableForRestoration(value.minute)");
      this.notifyListeners();
    }
    fromPrimitives(data) {
      let timeData = T$.ListOfObjectN().as(dart.nullCheck(data));
      return new time$.TimeOfDay.new({minute: core.int.as(dart.nullCheck(timeData[S.$_get](0))), hour: core.int.as(dart.nullCheck(timeData[S.$_get](1)))});
    }
    toPrimitives() {
      return T$.JSArrayOfint().of([this.value.minute, this.value.hour]);
    }
  };
  (time$.RestorableTimeOfDay.new = function(defaultValue) {
    this[S._defaultValue] = defaultValue;
    time$.RestorableTimeOfDay.__proto__.new.call(this);
    ;
  }).prototype = time$.RestorableTimeOfDay.prototype;
  dart.addTypeTests(time$.RestorableTimeOfDay);
  dart.addTypeCaches(time$.RestorableTimeOfDay);
  dart.setMethodSignature(time$.RestorableTimeOfDay, () => ({
    __proto__: dart.getMethods(time$.RestorableTimeOfDay.__proto__),
    createDefaultValue: dart.fnType(time$.TimeOfDay, []),
    didUpdateValue: dart.fnType(dart.void, [dart.nullable(core.Object)]),
    fromPrimitives: dart.fnType(time$.TimeOfDay, [dart.nullable(core.Object)]),
    toPrimitives: dart.fnType(dart.nullable(core.Object), [])
  }));
  dart.setLibraryUri(time$.RestorableTimeOfDay, I[8]);
  dart.setFieldSignature(time$.RestorableTimeOfDay, () => ({
    __proto__: dart.getFields(time$.RestorableTimeOfDay.__proto__),
    [S._defaultValue]: dart.finalFieldType(time$.TimeOfDay)
  }));
  time$.TimeOfDayFormat = class TimeOfDayFormat extends core._Enum {
    toString() {
      return "TimeOfDayFormat." + this[S._name];
    }
  };
  (time$.TimeOfDayFormat.new = function(index, name) {
    time$.TimeOfDayFormat.__proto__.new.call(this, index, name);
    ;
  }).prototype = time$.TimeOfDayFormat.prototype;
  dart.addTypeTests(time$.TimeOfDayFormat);
  dart.addTypeCaches(time$.TimeOfDayFormat);
  dart.setLibraryUri(time$.TimeOfDayFormat, I[8]);
  dart.setStaticFieldSignature(time$.TimeOfDayFormat, () => ['values', 'HH_colon_mm', 'HH_dot_mm', 'frenchCanadian', 'H_colon_mm', 'h_colon_mm_space_a', 'a_space_h_colon_mm']);
  dart.defineExtensionMethods(time$.TimeOfDayFormat, ['toString']);
  dart.defineLazy(time$.TimeOfDayFormat, {
    /*time$.TimeOfDayFormat.values*/get values() {
      return C[48] || CT.C48;
    },
    /*time$.TimeOfDayFormat.HH_colon_mm*/get HH_colon_mm() {
      return C[49] || CT.C49;
    },
    /*time$.TimeOfDayFormat.HH_dot_mm*/get HH_dot_mm() {
      return C[50] || CT.C50;
    },
    /*time$.TimeOfDayFormat.frenchCanadian*/get frenchCanadian() {
      return C[51] || CT.C51;
    },
    /*time$.TimeOfDayFormat.H_colon_mm*/get H_colon_mm() {
      return C[52] || CT.C52;
    },
    /*time$.TimeOfDayFormat.h_colon_mm_space_a*/get h_colon_mm_space_a() {
      return C[53] || CT.C53;
    },
    /*time$.TimeOfDayFormat.a_space_h_colon_mm*/get a_space_h_colon_mm() {
      return C[54] || CT.C54;
    }
  }, false);
  time$.HourFormat = class HourFormat extends core._Enum {
    toString() {
      return "HourFormat." + this[S._name];
    }
  };
  (time$.HourFormat.new = function(index, name) {
    time$.HourFormat.__proto__.new.call(this, index, name);
    ;
  }).prototype = time$.HourFormat.prototype;
  dart.addTypeTests(time$.HourFormat);
  dart.addTypeCaches(time$.HourFormat);
  dart.setLibraryUri(time$.HourFormat, I[8]);
  dart.setStaticFieldSignature(time$.HourFormat, () => ['values', 'HH', 'H', 'h']);
  dart.defineExtensionMethods(time$.HourFormat, ['toString']);
  dart.defineLazy(time$.HourFormat, {
    /*time$.HourFormat.values*/get values() {
      return C[55] || CT.C55;
    },
    /*time$.HourFormat.HH*/get HH() {
      return C[56] || CT.C56;
    },
    /*time$.HourFormat.H*/get H() {
      return C[57] || CT.C57;
    },
    /*time$.HourFormat.h*/get h() {
      return C[58] || CT.C58;
    }
  }, false);
  time$.hourFormat = function hourFormat(opts) {
    let of = opts && 'of' in opts ? opts.of : null;
    switch (of) {
      case C[53] || CT.C53:
      case C[54] || CT.C54:
        {
          return time$.HourFormat.h;
        }
      case C[52] || CT.C52:
        {
          return time$.HourFormat.H;
        }
      case C[50] || CT.C50:
      case C[49] || CT.C49:
      case C[51] || CT.C51:
        {
          return time$.HourFormat.HH;
        }
    }
  };
  const State_TickerProviderStateMixin$36 = class State_TickerProviderStateMixin extends framework.State$(button_style_button.ButtonStyleButton) {};
  (State_TickerProviderStateMixin$36.new = function() {
    ticker_provider.TickerProviderStateMixin$(button_style_button.ButtonStyleButton)[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36, ticker_provider.TickerProviderStateMixin$(button_style_button.ButtonStyleButton));
  button_style_button._ButtonStyleState = class _ButtonStyleState extends State_TickerProviderStateMixin$36 {
    handleStatesControllerChange() {
      this.setState(dart.fn(() => {
      }, T$.VoidTovoid()));
    }
    get statesController() {
      let t7;
      t7 = this.widget.statesController;
      return t7 == null ? dart.nullCheck(this.internalStatesController) : t7;
    }
    initStatesController() {
      if (this.widget.statesController == null) {
        this.internalStatesController = new material_state.MaterialStatesController.new();
      }
      this.statesController.update(material_state.MaterialState.disabled, !this.widget.enabled);
      this.statesController.addListener(dart.bind(this, 'handleStatesControllerChange'));
    }
    initState() {
      super.initState();
      this.initStatesController();
    }
    didUpdateWidget(oldWidget) {
      let t7, t7$;
      button_style_button.ButtonStyleButton.as(oldWidget);
      super.didUpdateWidget(oldWidget);
      if (!dart.equals(this.widget.statesController, oldWidget.statesController)) {
        t7 = oldWidget.statesController;
        t7 == null ? null : t7.removeListener(dart.bind(this, 'handleStatesControllerChange'));
        if (this.widget.statesController != null) {
          t7$ = this.internalStatesController;
          t7$ == null ? null : t7$.dispose();
          this.internalStatesController = null;
        }
        this.initStatesController();
      }
      if (this.widget.enabled !== oldWidget.enabled) {
        this.statesController.update(material_state.MaterialState.disabled, !this.widget.enabled);
        if (!this.widget.enabled) {
          this.statesController.update(material_state.MaterialState.pressed, false);
        }
      }
    }
    dispose() {
      let t7, t7$;
      this.statesController.removeListener(dart.bind(this, 'handleStatesControllerChange'));
      t7 = this.internalStatesController;
      t7 == null ? null : t7.dispose();
      t7$ = this.controller;
      t7$ == null ? null : t7$.dispose();
      super.dispose();
    }
    build(context) {
      let t7, t7$, t7$0, t7$1;
      let widgetStyle = this.widget.style;
      let themeStyle = this.widget.themeStyleOf(context);
      let defaultStyle = this.widget.defaultStyleOf(context);
      if (!(defaultStyle !== null)) dart.assertFailed(null, I[2], 257, 12, "defaultStyle != null");
      function effectiveValue(T, getProperty) {
        let t7, t7$;
        let widgetValue = getProperty(widgetStyle);
        let themeValue = getProperty(themeStyle);
        let defaultValue = getProperty(defaultStyle);
        t7$ = (t7 = widgetValue, t7 == null ? themeValue : t7);
        return t7$ == null ? defaultValue : t7$;
      }
      dart.fn(effectiveValue, T$.FnToTN());
      const resolve = (T, getProperty) => {
        return effectiveValue(T, dart.fn(style => {
          let t7;
          t7 = getProperty(style);
          return t7 == null ? null : t7.resolve(this.statesController.value);
        }, dart.fnType(dart.nullable(T), [T$.ButtonStyleN()])));
      };
      dart.fn(resolve, T$.FnToTN$1());
      let resolvedElevation = resolve(T$.doubleN(), dart.fn(style => {
        let t7;
        t7 = style;
        return t7 == null ? null : t7.elevation;
      }, T$.ButtonStyleNToMaterialStatePropertyNOfdoubleN()));
      let resolvedTextStyle = resolve(T$.TextStyleN(), dart.fn(style => {
        let t7;
        t7 = style;
        return t7 == null ? null : t7.textStyle;
      }, T$.ButtonStyleNToMaterialStatePropertyNOfTextStyleN()));
      let resolvedBackgroundColor = resolve(T$.ColorN(), dart.fn(style => {
        let t7;
        t7 = style;
        return t7 == null ? null : t7.backgroundColor;
      }, T$.ButtonStyleNToMaterialStatePropertyNOfColorN()));
      let resolvedForegroundColor = resolve(T$.ColorN(), dart.fn(style => {
        let t7;
        t7 = style;
        return t7 == null ? null : t7.foregroundColor;
      }, T$.ButtonStyleNToMaterialStatePropertyNOfColorN()));
      let resolvedShadowColor = resolve(T$.ColorN(), dart.fn(style => {
        let t7;
        t7 = style;
        return t7 == null ? null : t7.shadowColor;
      }, T$.ButtonStyleNToMaterialStatePropertyNOfColorN()));
      let resolvedSurfaceTintColor = resolve(T$.ColorN(), dart.fn(style => {
        let t7;
        t7 = style;
        return t7 == null ? null : t7.surfaceTintColor;
      }, T$.ButtonStyleNToMaterialStatePropertyNOfColorN()));
      let resolvedPadding = resolve(T$.EdgeInsetsGeometryN(), dart.fn(style => {
        let t7;
        t7 = style;
        return t7 == null ? null : t7.padding;
      }, T$.ButtonStyleNToMaterialStatePropertyNOfEdgeInsetsGeometryN()));
      let resolvedMinimumSize = resolve(T$.SizeN(), dart.fn(style => {
        let t7;
        t7 = style;
        return t7 == null ? null : t7.minimumSize;
      }, T$.ButtonStyleNToMaterialStatePropertyNOfSizeN()));
      let resolvedFixedSize = resolve(T$.SizeN(), dart.fn(style => {
        let t7;
        t7 = style;
        return t7 == null ? null : t7.fixedSize;
      }, T$.ButtonStyleNToMaterialStatePropertyNOfSizeN()));
      let resolvedMaximumSize = resolve(T$.SizeN(), dart.fn(style => {
        let t7;
        t7 = style;
        return t7 == null ? null : t7.maximumSize;
      }, T$.ButtonStyleNToMaterialStatePropertyNOfSizeN()));
      let resolvedSide = resolve(T$.BorderSideN(), dart.fn(style => {
        let t7;
        t7 = style;
        return t7 == null ? null : t7.side;
      }, T$.ButtonStyleNToMaterialStatePropertyNOfBorderSideN()));
      let resolvedShape = resolve(T$.OutlinedBorderN(), dart.fn(style => {
        let t7;
        t7 = style;
        return t7 == null ? null : t7.shape;
      }, T$.ButtonStyleNToMaterialStatePropertyNOfOutlinedBorderN()));
      let mouseCursor = new button_style_button._MouseCursor.new(dart.fn(states => effectiveValue(mouse_cursor.MouseCursor, dart.fn(style => {
        let t8, t7;
        t7 = style;
        return t7 == null ? null : (t8 = t7.mouseCursor, t8 == null ? null : t8.resolve(states));
      }, T$.ButtonStyleNToMouseCursorN())), T$.SetOfMaterialStateToMouseCursorN()));
      let overlayColor = material_state.MaterialStateProperty.resolveWith(T$.ColorN(), dart.fn(states => effectiveValue(ui.Color, dart.fn(style => {
        let t8, t7;
        t7 = style;
        return t7 == null ? null : (t8 = t7.overlayColor, t8 == null ? null : t8.resolve(states));
      }, T$.ButtonStyleNToColorN())), T$.SetOfMaterialStateToColorN()));
      let resolvedVisualDensity = effectiveValue(theme_data.VisualDensity, dart.fn(style => {
        let t7;
        t7 = style;
        return t7 == null ? null : t7.visualDensity;
      }, T$.ButtonStyleNToVisualDensityN()));
      let resolvedTapTargetSize = effectiveValue(theme_data.MaterialTapTargetSize, dart.fn(style => {
        let t7;
        t7 = style;
        return t7 == null ? null : t7.tapTargetSize;
      }, T$.ButtonStyleNToMaterialTapTargetSizeN()));
      let resolvedAnimationDuration = effectiveValue(core.Duration, dart.fn(style => {
        let t7;
        t7 = style;
        return t7 == null ? null : t7.animationDuration;
      }, T$.ButtonStyleNToDurationN()));
      let resolvedEnableFeedback = effectiveValue(core.bool, dart.fn(style => {
        let t7;
        t7 = style;
        return t7 == null ? null : t7.enableFeedback;
      }, T$.ButtonStyleNToboolN()));
      let resolvedAlignment = effectiveValue(alignment.AlignmentGeometry, dart.fn(style => {
        let t7;
        t7 = style;
        return t7 == null ? null : t7.alignment;
      }, T$.ButtonStyleNToAlignmentGeometryN()));
      let densityAdjustment = dart.nullCheck(resolvedVisualDensity).baseSizeAdjustment;
      let resolvedSplashFactory = effectiveValue(ink_well.InteractiveInkFeatureFactory, dart.fn(style => {
        let t7;
        t7 = style;
        return t7 == null ? null : t7.splashFactory;
      }, T$.ButtonStyleNToInteractiveInkFeatureFactoryN()));
      let effectiveConstraints = resolvedVisualDensity.effectiveConstraints(new box$.BoxConstraints.new({minWidth: dart.nullCheck(resolvedMinimumSize).width, minHeight: resolvedMinimumSize.height, maxWidth: dart.nullCheck(resolvedMaximumSize).width, maxHeight: resolvedMaximumSize.height}));
      if (resolvedFixedSize != null) {
        let size = effectiveConstraints.constrain(resolvedFixedSize);
        if (size.width[S.$isFinite]) {
          effectiveConstraints = effectiveConstraints.copyWith({minWidth: size.width, maxWidth: size.width});
        }
        if (size.height[S.$isFinite]) {
          effectiveConstraints = effectiveConstraints.copyWith({minHeight: size.height, maxHeight: size.height});
        }
      }
      let dy = densityAdjustment.dy;
      let dx = math.max(core.double, 0.0, densityAdjustment.dx);
      let padding = dart.nullCheck(resolvedPadding).add(new edge_insets.EdgeInsets.fromLTRB(dx, dy, dx, dy)).clamp(edge_insets.EdgeInsets.zero, edge_insets.EdgeInsetsGeometry.infinity);
      if (dart.nullCheck(resolvedAnimationDuration)['>'](core.Duration.zero) && this.elevation != null && this.backgroundColor != null && this.elevation != resolvedElevation && dart.nullCheck(this.backgroundColor).value !== dart.nullCheck(resolvedBackgroundColor).value && dart.nullCheck(this.backgroundColor).opacity === 1 && resolvedBackgroundColor.opacity < 1 && resolvedElevation === 0) {
        if (!dart.equals((t7 = this.controller, t7 == null ? null : t7.duration), resolvedAnimationDuration)) {
          t7$ = this.controller;
          t7$ == null ? null : t7$.dispose();
          this.controller = (t7$0 = new animation_controller.AnimationController.new({duration: resolvedAnimationDuration, vsync: this}), (() => {
            t7$0.addStatusListener(dart.fn(status => {
              if (status === animation$.AnimationStatus.completed) {
                this.setState(dart.fn(() => {
                }, T$.VoidTovoid()));
              }
            }, T$.AnimationStatusTovoid()));
            return t7$0;
          })());
        }
        resolvedBackgroundColor = this.backgroundColor;
        dart.nullCheck(this.controller).value = 0.0;
        dart.nullCheck(this.controller).forward();
      }
      this.elevation = resolvedElevation;
      this.backgroundColor = resolvedBackgroundColor;
      let result = new basic.ConstrainedBox.new({constraints: effectiveConstraints, child: new material.Material.new({elevation: dart.nullCheck(resolvedElevation), textStyle: (t7$1 = resolvedTextStyle, t7$1 == null ? null : t7$1.copyWith({color: resolvedForegroundColor})), shape: dart.nullCheck(resolvedShape).copyWith({side: resolvedSide}), color: resolvedBackgroundColor, shadowColor: resolvedShadowColor, surfaceTintColor: resolvedSurfaceTintColor, type: resolvedBackgroundColor == null ? material.MaterialType.transparency : material.MaterialType.button, animationDuration: resolvedAnimationDuration, clipBehavior: this.widget.clipBehavior, child: new ink_well.InkWell.new({onTap: this.widget.onPressed, onLongPress: this.widget.onLongPress, onHover: this.widget.onHover, mouseCursor: mouseCursor, enableFeedback: resolvedEnableFeedback, focusNode: this.widget.focusNode, canRequestFocus: this.widget.enabled, onFocusChange: this.widget.onFocusChange, autofocus: this.widget.autofocus, splashFactory: resolvedSplashFactory, overlayColor: overlayColor, highlightColor: colors$.Colors.transparent, customBorder: resolvedShape.copyWith({side: resolvedSide}), statesController: this.statesController, child: icon_theme.IconTheme.merge({data: new icon_theme_data.IconThemeData.new({color: resolvedForegroundColor}), child: new basic.Padding.new({padding: padding, child: new basic.Align.new({alignment: dart.nullCheck(resolvedAlignment), widthFactor: 1.0, heightFactor: 1.0, child: this.widget.child, $creationLocationd_0dea112b090073317d4: C[59] || CT.C59}), $creationLocationd_0dea112b090073317d4: C[60] || CT.C60})}), $creationLocationd_0dea112b090073317d4: C[61] || CT.C61}), $creationLocationd_0dea112b090073317d4: C[62] || CT.C62}), $creationLocationd_0dea112b090073317d4: C[63] || CT.C63});
      let minSize = null;
      switch (dart.nullCheck(resolvedTapTargetSize)) {
        case C[64] || CT.C64:
          {
            minSize = new ui.Size.new(48 + densityAdjustment.dx, 48 + densityAdjustment.dy);
            if (!(minSize.width >= 0.0)) dart.assertFailed(null, I[2], 418, 16, "minSize.width >= 0.0");
            if (!(minSize.height >= 0.0)) dart.assertFailed(null, I[2], 419, 16, "minSize.height >= 0.0");
            break;
          }
        case C[65] || CT.C65:
          {
            minSize = ui.Size.zero;
            break;
          }
      }
      return new basic.Semantics.new({container: true, button: true, enabled: this.widget.enabled, child: new button_style_button._InputPadding.new({minSize: minSize, child: result, $creationLocationd_0dea112b090073317d4: C[66] || CT.C66}), $creationLocationd_0dea112b090073317d4: C[67] || CT.C67});
    }
    static ['_#new#tearOff']() {
      return new button_style_button._ButtonStyleState.new();
    }
  };
  (button_style_button._ButtonStyleState.new = function() {
    this.controller = null;
    this.elevation = null;
    this.backgroundColor = null;
    this.internalStatesController = null;
    button_style_button._ButtonStyleState.__proto__.new.call(this);
    ;
  }).prototype = button_style_button._ButtonStyleState.prototype;
  dart.addTypeTests(button_style_button._ButtonStyleState);
  dart.addTypeCaches(button_style_button._ButtonStyleState);
  dart.setMethodSignature(button_style_button._ButtonStyleState, () => ({
    __proto__: dart.getMethods(button_style_button._ButtonStyleState.__proto__),
    handleStatesControllerChange: dart.fnType(dart.void, []),
    initStatesController: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(button_style_button._ButtonStyleState, () => ({
    __proto__: dart.getGetters(button_style_button._ButtonStyleState.__proto__),
    statesController: material_state.MaterialStatesController
  }));
  dart.setLibraryUri(button_style_button._ButtonStyleState, I[3]);
  dart.setFieldSignature(button_style_button._ButtonStyleState, () => ({
    __proto__: dart.getFields(button_style_button._ButtonStyleState.__proto__),
    controller: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    elevation: dart.fieldType(dart.nullable(core.double)),
    backgroundColor: dart.fieldType(dart.nullable(ui.Color)),
    internalStatesController: dart.fieldType(dart.nullable(material_state.MaterialStatesController))
  }));
  button_style_button._MouseCursor = class _MouseCursor extends material_state.MaterialStateMouseCursor {
    get resolveCallback() {
      return this[S.resolveCallback];
    }
    set resolveCallback(value) {
      super.resolveCallback = value;
    }
    static ['_#new#tearOff'](resolveCallback) {
      return new button_style_button._MouseCursor.new(resolveCallback);
    }
    resolve(states) {
      let t7;
      return dart.nullCheck((t7 = states, this.resolveCallback(t7)));
    }
    get debugDescription() {
      return "ButtonStyleButton_MouseCursor";
    }
  };
  (button_style_button._MouseCursor.new = function(resolveCallback) {
    this[S.resolveCallback] = resolveCallback;
    button_style_button._MouseCursor.__proto__.new.call(this);
    ;
  }).prototype = button_style_button._MouseCursor.prototype;
  dart.addTypeTests(button_style_button._MouseCursor);
  dart.addTypeCaches(button_style_button._MouseCursor);
  dart.setMethodSignature(button_style_button._MouseCursor, () => ({
    __proto__: dart.getMethods(button_style_button._MouseCursor.__proto__),
    resolve: dart.fnType(mouse_cursor.MouseCursor, [core.Set$(material_state.MaterialState)])
  }));
  dart.setGetterSignature(button_style_button._MouseCursor, () => ({
    __proto__: dart.getGetters(button_style_button._MouseCursor.__proto__),
    debugDescription: core.String
  }));
  dart.setLibraryUri(button_style_button._MouseCursor, I[3]);
  dart.setFieldSignature(button_style_button._MouseCursor, () => ({
    __proto__: dart.getFields(button_style_button._MouseCursor.__proto__),
    resolveCallback: dart.finalFieldType(dart.fnType(dart.nullable(mouse_cursor.MouseCursor), [core.Set$(material_state.MaterialState)]))
  }));
  button_style_button._InputPadding = class _InputPadding extends framework.SingleChildRenderObjectWidget {
    get minSize() {
      return this[S.minSize];
    }
    set minSize(value) {
      super.minSize = value;
    }
    static ['_#new#tearOff'](opts) {
      let child = opts && 'child' in opts ? opts.child : null;
      let minSize = opts && 'minSize' in opts ? opts.minSize : null;
      return new button_style_button._InputPadding.new({child: child, minSize: minSize, $creationLocationd_0dea112b090073317d4: C[68] || CT.C68});
    }
    createRenderObject(context) {
      return new button_style_button._RenderInputPadding.new(this.minSize);
    }
    updateRenderObject(context, renderObject) {
      button_style_button._RenderInputPadding.as(renderObject);
      renderObject.minSize = this.minSize;
    }
  };
  (button_style_button._InputPadding.new = function(opts) {
    let child = opts && 'child' in opts ? opts.child : null;
    let minSize = opts && 'minSize' in opts ? opts.minSize : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.minSize] = minSize;
    button_style_button._InputPadding.__proto__.new.call(this, {child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = button_style_button._InputPadding.prototype;
  dart.addTypeTests(button_style_button._InputPadding);
  dart.addTypeCaches(button_style_button._InputPadding);
  dart.setMethodSignature(button_style_button._InputPadding, () => ({
    __proto__: dart.getMethods(button_style_button._InputPadding.__proto__),
    createRenderObject: dart.fnType(object.RenderObject, [framework.BuildContext])
  }));
  dart.setLibraryUri(button_style_button._InputPadding, I[3]);
  dart.setFieldSignature(button_style_button._InputPadding, () => ({
    __proto__: dart.getFields(button_style_button._InputPadding.__proto__),
    minSize: dart.finalFieldType(ui.Size)
  }));
  button_style_button._RenderInputPadding = class _RenderInputPadding extends shifted_box.RenderShiftedBox {
    static ['_#new#tearOff'](_minSize, child = null) {
      return new button_style_button._RenderInputPadding.new(_minSize, child);
    }
    get minSize() {
      return this[S._minSize];
    }
    set minSize(value) {
      if (this[S._minSize]._equals(value)) {
        return;
      }
      this[S._minSize] = value;
      this.markNeedsLayout();
    }
    computeMinIntrinsicWidth(height) {
      if (this.child != null) {
        return math.max(core.double, dart.nullCheck(this.child).getMinIntrinsicWidth(height), this.minSize.width);
      }
      return 0.0;
    }
    computeMinIntrinsicHeight(width) {
      if (this.child != null) {
        return math.max(core.double, dart.nullCheck(this.child).getMinIntrinsicHeight(width), this.minSize.height);
      }
      return 0.0;
    }
    computeMaxIntrinsicWidth(height) {
      if (this.child != null) {
        return math.max(core.double, dart.nullCheck(this.child).getMaxIntrinsicWidth(height), this.minSize.width);
      }
      return 0.0;
    }
    computeMaxIntrinsicHeight(width) {
      if (this.child != null) {
        return math.max(core.double, dart.nullCheck(this.child).getMaxIntrinsicHeight(width), this.minSize.height);
      }
      return 0.0;
    }
    [S._computeSize](opts) {
      let constraints = opts && 'constraints' in opts ? opts.constraints : null;
      let layoutChild = opts && 'layoutChild' in opts ? opts.layoutChild : null;
      if (this.child != null) {
        let childSize = layoutChild(dart.nullCheck(this.child), constraints);
        let height = math.max(core.double, childSize.width, this.minSize.width);
        let width = math.max(core.double, childSize.height, this.minSize.height);
        return constraints.constrain(new ui.Size.new(height, width));
      }
      return ui.Size.zero;
    }
    computeDryLayout(constraints) {
      return this[S._computeSize]({constraints: constraints, layoutChild: C[69] || CT.C69});
    }
    performLayout() {
      this.size = this[S._computeSize]({constraints: this.constraints, layoutChild: C[70] || CT.C70});
      if (this.child != null) {
        let childParentData = box$.BoxParentData.as(dart.nullCheck(dart.nullCheck(this.child).parentData));
        childParentData.offset = alignment.Alignment.center.alongOffset(ui.Offset.as(this.size['-'](dart.nullCheck(this.child).size)));
      }
    }
    hitTest(result, opts) {
      let position = opts && 'position' in opts ? opts.position : null;
      if (super.hitTest(result, {position: position})) {
        return true;
      }
      let center = dart.nullCheck(this.child).size.center(ui.Offset.zero);
      return result.addWithRawTransform({transform: matrix_utils.MatrixUtils.forceToPoint(center), position: center, hitTest: dart.fn((result, position) => {
          if (!position._equals(center)) dart.assertFailed(null, I[2], 559, 16, "position == center");
          return dart.nullCheck(this.child).hitTest(result, {position: center});
        }, T$.BoxHitTestResultAndOffsetTobool())});
    }
  };
  (button_style_button._RenderInputPadding.new = function(_minSize, child = null) {
    this[S._minSize] = _minSize;
    button_style_button._RenderInputPadding.__proto__.new.call(this, child);
    ;
  }).prototype = button_style_button._RenderInputPadding.prototype;
  dart.addTypeTests(button_style_button._RenderInputPadding);
  dart.addTypeCaches(button_style_button._RenderInputPadding);
  dart.setMethodSignature(button_style_button._RenderInputPadding, () => ({
    __proto__: dart.getMethods(button_style_button._RenderInputPadding.__proto__),
    [S._computeSize]: dart.fnType(ui.Size, [], {}, {constraints: box$.BoxConstraints, layoutChild: dart.fnType(ui.Size, [box$.RenderBox, box$.BoxConstraints])})
  }));
  dart.setGetterSignature(button_style_button._RenderInputPadding, () => ({
    __proto__: dart.getGetters(button_style_button._RenderInputPadding.__proto__),
    minSize: ui.Size
  }));
  dart.setSetterSignature(button_style_button._RenderInputPadding, () => ({
    __proto__: dart.getSetters(button_style_button._RenderInputPadding.__proto__),
    minSize: ui.Size
  }));
  dart.setLibraryUri(button_style_button._RenderInputPadding, I[3]);
  dart.setFieldSignature(button_style_button._RenderInputPadding, () => ({
    __proto__: dart.getFields(button_style_button._RenderInputPadding.__proto__),
    [S._minSize]: dart.fieldType(ui.Size)
  }));
  text_button.TextButton = class TextButton extends button_style_button.ButtonStyleButton {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
      let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
      let onHover = opts && 'onHover' in opts ? opts.onHover : null;
      let onFocusChange = opts && 'onFocusChange' in opts ? opts.onFocusChange : null;
      let style = opts && 'style' in opts ? opts.style : null;
      let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
      let autofocus = opts && 'autofocus' in opts ? opts.autofocus : null;
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
      let statesController = opts && 'statesController' in opts ? opts.statesController : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new text_button.TextButton.new({key: key, onPressed: onPressed, onLongPress: onLongPress, onHover: onHover, onFocusChange: onFocusChange, style: style, focusNode: focusNode, autofocus: autofocus, clipBehavior: clipBehavior, statesController: statesController, child: child, $creationLocationd_0dea112b090073317d4: C[72] || CT.C72});
    }
    static ['_#icon#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
      let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
      let onHover = opts && 'onHover' in opts ? opts.onHover : null;
      let onFocusChange = opts && 'onFocusChange' in opts ? opts.onFocusChange : null;
      let style = opts && 'style' in opts ? opts.style : null;
      let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
      let autofocus = opts && 'autofocus' in opts ? opts.autofocus : null;
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
      let icon = opts && 'icon' in opts ? opts.icon : null;
      let label = opts && 'label' in opts ? opts.label : null;
      return new text_button._TextButtonWithIcon.new({key: key, onPressed: onPressed, onLongPress: onLongPress, onHover: onHover, onFocusChange: onFocusChange, style: style, focusNode: focusNode, autofocus: autofocus, clipBehavior: clipBehavior, icon: icon, label: label, $creationLocationd_0dea112b090073317d4: C[73] || CT.C73});
    }
    static styleFrom(opts) {
      let t7, t8, t7$;
      let foregroundColor = opts && 'foregroundColor' in opts ? opts.foregroundColor : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let disabledForegroundColor = opts && 'disabledForegroundColor' in opts ? opts.disabledForegroundColor : null;
      let disabledBackgroundColor = opts && 'disabledBackgroundColor' in opts ? opts.disabledBackgroundColor : null;
      let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
      let surfaceTintColor = opts && 'surfaceTintColor' in opts ? opts.surfaceTintColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let minimumSize = opts && 'minimumSize' in opts ? opts.minimumSize : null;
      let fixedSize = opts && 'fixedSize' in opts ? opts.fixedSize : null;
      let maximumSize = opts && 'maximumSize' in opts ? opts.maximumSize : null;
      let side = opts && 'side' in opts ? opts.side : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let enabledMouseCursor = opts && 'enabledMouseCursor' in opts ? opts.enabledMouseCursor : null;
      let disabledMouseCursor = opts && 'disabledMouseCursor' in opts ? opts.disabledMouseCursor : null;
      let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
      let tapTargetSize = opts && 'tapTargetSize' in opts ? opts.tapTargetSize : null;
      let animationDuration = opts && 'animationDuration' in opts ? opts.animationDuration : null;
      let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
      let alignment = opts && 'alignment' in opts ? opts.alignment : null;
      let splashFactory = opts && 'splashFactory' in opts ? opts.splashFactory : null;
      let primary = opts && 'primary' in opts ? opts.primary : null;
      let onSurface = opts && 'onSurface' in opts ? opts.onSurface : null;
      let foreground = (t7 = foregroundColor, t7 == null ? primary : t7);
      let disabledForeground = (t7$ = disabledForegroundColor, t7$ == null ? (t8 = onSurface, t8 == null ? null : t8.withOpacity(0.38)) : t7$);
      let foregroundColorProp = foreground == null && disabledForeground == null ? null : new text_button._TextButtonDefaultColor.new(foreground, disabledForeground);
      let backgroundColorProp = backgroundColor == null && disabledBackgroundColor == null ? null : disabledBackgroundColor == null ? button_style_button.ButtonStyleButton.allOrNull(T$.ColorN(), backgroundColor) : new text_button._TextButtonDefaultColor.new(backgroundColor, disabledBackgroundColor);
      let overlayColor = foreground == null ? null : new text_button._TextButtonDefaultOverlay.new(foreground);
      let mouseCursor = enabledMouseCursor == null && disabledMouseCursor == null ? null : new text_button._TextButtonDefaultMouseCursor.new(dart.nullCheck(enabledMouseCursor), dart.nullCheck(disabledMouseCursor));
      return new button_style.ButtonStyle.new({textStyle: button_style_button.ButtonStyleButton.allOrNull(text_style.TextStyle, textStyle), foregroundColor: foregroundColorProp, backgroundColor: backgroundColorProp, overlayColor: overlayColor, shadowColor: button_style_button.ButtonStyleButton.allOrNull(ui.Color, shadowColor), surfaceTintColor: button_style_button.ButtonStyleButton.allOrNull(ui.Color, surfaceTintColor), elevation: button_style_button.ButtonStyleButton.allOrNull(core.double, elevation), padding: button_style_button.ButtonStyleButton.allOrNull(edge_insets.EdgeInsetsGeometry, padding), minimumSize: button_style_button.ButtonStyleButton.allOrNull(ui.Size, minimumSize), fixedSize: button_style_button.ButtonStyleButton.allOrNull(ui.Size, fixedSize), maximumSize: button_style_button.ButtonStyleButton.allOrNull(ui.Size, maximumSize), side: button_style_button.ButtonStyleButton.allOrNull(borders.BorderSide, side), shape: button_style_button.ButtonStyleButton.allOrNull(borders.OutlinedBorder, shape), mouseCursor: mouseCursor, visualDensity: visualDensity, tapTargetSize: tapTargetSize, animationDuration: animationDuration, enableFeedback: enableFeedback, alignment: alignment, splashFactory: splashFactory});
    }
    defaultStyleOf(context) {
      let theme = theme$.Theme.of(context);
      let colorScheme = theme.colorScheme;
      return theme$.Theme.of(context).useMaterial3 ? new text_button._TextButtonDefaultsM3.new(context) : text_button.TextButton.styleFrom({foregroundColor: colorScheme.primary, disabledForegroundColor: colorScheme.onSurface.withOpacity(0.38), backgroundColor: colors$.Colors.transparent, disabledBackgroundColor: colors$.Colors.transparent, shadowColor: theme.shadowColor, elevation: 0.0, textStyle: theme.textTheme.button, padding: text_button._scaledPadding(context), minimumSize: C[74] || CT.C74, maximumSize: ui.Size.infinite, shape: C[75] || CT.C75, enabledMouseCursor: mouse_cursor.SystemMouseCursors.click, disabledMouseCursor: mouse_cursor.SystemMouseCursors.basic, visualDensity: theme.visualDensity, tapTargetSize: theme.materialTapTargetSize, animationDuration: constants.kThemeChangeDuration, enableFeedback: true, alignment: alignment.Alignment.center, splashFactory: ink_ripple.InkRipple.splashFactory});
    }
    themeStyleOf(context) {
      return text_button_theme.TextButtonTheme.of(context).style;
    }
  };
  (text_button.TextButton.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let onHover = opts && 'onHover' in opts ? opts.onHover : null;
    let onFocusChange = opts && 'onFocusChange' in opts ? opts.onFocusChange : null;
    let style = opts && 'style' in opts ? opts.style : null;
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[71] || CT.C71;
    let statesController = opts && 'statesController' in opts ? opts.statesController : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    text_button.TextButton.__proto__.new.call(this, {key: key, onPressed: onPressed, onLongPress: onLongPress, onHover: onHover, onFocusChange: onFocusChange, style: style, focusNode: focusNode, autofocus: autofocus, clipBehavior: clipBehavior, statesController: statesController, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = text_button.TextButton.prototype;
  dart.addTypeTests(text_button.TextButton);
  dart.addTypeCaches(text_button.TextButton);
  dart.setMethodSignature(text_button.TextButton, () => ({
    __proto__: dart.getMethods(text_button.TextButton.__proto__),
    defaultStyleOf: dart.fnType(button_style.ButtonStyle, [framework.BuildContext]),
    themeStyleOf: dart.fnType(dart.nullable(button_style.ButtonStyle), [framework.BuildContext])
  }));
  dart.setStaticMethodSignature(text_button.TextButton, () => ['icon', 'styleFrom']);
  dart.setLibraryUri(text_button.TextButton, I[10]);
  dart.setStaticFieldSignature(text_button.TextButton, () => ['_redirecting#']);
  text_button._TextButtonDefaultColor = class _TextButtonDefaultColor extends material_state.MaterialStateProperty$(dart.nullable(ui.Color)) {
    static ['_#new#tearOff'](color, disabled) {
      return new text_button._TextButtonDefaultColor.new(color, disabled);
    }
    resolve(states) {
      if (states.contains(material_state.MaterialState.disabled)) {
        return this.disabled;
      }
      return this.color;
    }
    toString() {
      return "{disabled: " + dart.str(this.disabled) + ", otherwise: " + dart.str(this.color) + "}";
    }
  };
  (text_button._TextButtonDefaultColor.new = function(color, disabled) {
    this.color = color;
    this.disabled = disabled;
    ;
  }).prototype = text_button._TextButtonDefaultColor.prototype;
  dart.addTypeTests(text_button._TextButtonDefaultColor);
  dart.addTypeCaches(text_button._TextButtonDefaultColor);
  dart.setMethodSignature(text_button._TextButtonDefaultColor, () => ({
    __proto__: dart.getMethods(text_button._TextButtonDefaultColor.__proto__),
    resolve: dart.fnType(dart.nullable(ui.Color), [core.Set$(material_state.MaterialState)])
  }));
  dart.setLibraryUri(text_button._TextButtonDefaultColor, I[10]);
  dart.setFieldSignature(text_button._TextButtonDefaultColor, () => ({
    __proto__: dart.getFields(text_button._TextButtonDefaultColor.__proto__),
    color: dart.finalFieldType(dart.nullable(ui.Color)),
    disabled: dart.finalFieldType(dart.nullable(ui.Color))
  }));
  dart.defineExtensionMethods(text_button._TextButtonDefaultColor, ['toString']);
  text_button._TextButtonDefaultOverlay = class _TextButtonDefaultOverlay extends material_state.MaterialStateProperty$(dart.nullable(ui.Color)) {
    static ['_#new#tearOff'](primary) {
      return new text_button._TextButtonDefaultOverlay.new(primary);
    }
    resolve(states) {
      if (states.contains(material_state.MaterialState.hovered)) {
        return this.primary.withOpacity(0.04);
      }
      if (states.contains(material_state.MaterialState.focused) || states.contains(material_state.MaterialState.pressed)) {
        return this.primary.withOpacity(0.12);
      }
      return null;
    }
    toString() {
      return "{hovered: " + dart.str(this.primary.withOpacity(0.04)) + ", focused,pressed: " + dart.str(this.primary.withOpacity(0.12)) + ", otherwise: null}";
    }
  };
  (text_button._TextButtonDefaultOverlay.new = function(primary) {
    this.primary = primary;
    ;
  }).prototype = text_button._TextButtonDefaultOverlay.prototype;
  dart.addTypeTests(text_button._TextButtonDefaultOverlay);
  dart.addTypeCaches(text_button._TextButtonDefaultOverlay);
  dart.setMethodSignature(text_button._TextButtonDefaultOverlay, () => ({
    __proto__: dart.getMethods(text_button._TextButtonDefaultOverlay.__proto__),
    resolve: dart.fnType(dart.nullable(ui.Color), [core.Set$(material_state.MaterialState)])
  }));
  dart.setLibraryUri(text_button._TextButtonDefaultOverlay, I[10]);
  dart.setFieldSignature(text_button._TextButtonDefaultOverlay, () => ({
    __proto__: dart.getFields(text_button._TextButtonDefaultOverlay.__proto__),
    primary: dart.finalFieldType(ui.Color)
  }));
  dart.defineExtensionMethods(text_button._TextButtonDefaultOverlay, ['toString']);
  const MaterialStateProperty_Diagnosticable$36$ = class MaterialStateProperty_Diagnosticable extends material_state.MaterialStateProperty$(mouse_cursor.MouseCursor) {};
  (MaterialStateProperty_Diagnosticable$36$.new = function() {
  }).prototype = MaterialStateProperty_Diagnosticable$36$.prototype;
  dart.applyMixin(MaterialStateProperty_Diagnosticable$36$, diagnostics.Diagnosticable);
  text_button._TextButtonDefaultMouseCursor = class _TextButtonDefaultMouseCursor extends MaterialStateProperty_Diagnosticable$36$ {
    static ['_#new#tearOff'](enabledCursor, disabledCursor) {
      return new text_button._TextButtonDefaultMouseCursor.new(enabledCursor, disabledCursor);
    }
    resolve(states) {
      if (states.contains(material_state.MaterialState.disabled)) {
        return this.disabledCursor;
      }
      return this.enabledCursor;
    }
  };
  (text_button._TextButtonDefaultMouseCursor.new = function(enabledCursor, disabledCursor) {
    this.enabledCursor = enabledCursor;
    this.disabledCursor = disabledCursor;
    ;
  }).prototype = text_button._TextButtonDefaultMouseCursor.prototype;
  dart.addTypeTests(text_button._TextButtonDefaultMouseCursor);
  dart.addTypeCaches(text_button._TextButtonDefaultMouseCursor);
  dart.setMethodSignature(text_button._TextButtonDefaultMouseCursor, () => ({
    __proto__: dart.getMethods(text_button._TextButtonDefaultMouseCursor.__proto__),
    resolve: dart.fnType(mouse_cursor.MouseCursor, [core.Set$(material_state.MaterialState)])
  }));
  dart.setLibraryUri(text_button._TextButtonDefaultMouseCursor, I[10]);
  dart.setFieldSignature(text_button._TextButtonDefaultMouseCursor, () => ({
    __proto__: dart.getFields(text_button._TextButtonDefaultMouseCursor.__proto__),
    enabledCursor: dart.finalFieldType(mouse_cursor.MouseCursor),
    disabledCursor: dart.finalFieldType(mouse_cursor.MouseCursor)
  }));
  text_button._TextButtonWithIcon = class _TextButtonWithIcon extends text_button.TextButton {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
      let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
      let onHover = opts && 'onHover' in opts ? opts.onHover : null;
      let onFocusChange = opts && 'onFocusChange' in opts ? opts.onFocusChange : null;
      let style = opts && 'style' in opts ? opts.style : null;
      let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
      let autofocus = opts && 'autofocus' in opts ? opts.autofocus : null;
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
      let icon = opts && 'icon' in opts ? opts.icon : null;
      let label = opts && 'label' in opts ? opts.label : null;
      return new text_button._TextButtonWithIcon.new({key: key, onPressed: onPressed, onLongPress: onLongPress, onHover: onHover, onFocusChange: onFocusChange, style: style, focusNode: focusNode, autofocus: autofocus, clipBehavior: clipBehavior, icon: icon, label: label, $creationLocationd_0dea112b090073317d4: C[79] || CT.C79});
    }
    defaultStyleOf(context) {
      let t7, t7$;
      let scaledPadding = button_style_button.ButtonStyleButton.scaledPadding(C[0] || CT.C0, C[80] || CT.C80, C[80] || CT.C80, (t7$ = (t7 = media_query.MediaQuery.maybeOf(context), t7 == null ? null : t7.textScaleFactor), t7$ == null ? 1.0 : t7$));
      return super.defaultStyleOf(context).copyWith({padding: new (T$.MaterialStatePropertyAllOfEdgeInsetsGeometry()).new(scaledPadding)});
    }
  };
  (text_button._TextButtonWithIcon.new = function(opts) {
    let t7, t7$;
    let key = opts && 'key' in opts ? opts.key : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let onHover = opts && 'onHover' in opts ? opts.onHover : null;
    let onFocusChange = opts && 'onFocusChange' in opts ? opts.onFocusChange : null;
    let style = opts && 'style' in opts ? opts.style : null;
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
    let icon = opts && 'icon' in opts ? opts.icon : null;
    let label = opts && 'label' in opts ? opts.label : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    if (!(icon !== null)) dart.assertFailed(null, I[11], 444, 15, "icon != null");
    if (!(label !== null)) dart.assertFailed(null, I[11], 445, 15, "label != null");
    text_button._TextButtonWithIcon.__proto__.new.call(this, {autofocus: (t7 = autofocus, t7 == null ? false : t7), clipBehavior: (t7$ = clipBehavior, t7$ == null ? ui.Clip.none : t7$), child: new text_button._TextButtonWithIconChild.new({icon: icon, label: label, $creationLocationd_0dea112b090073317d4: C[78] || CT.C78}), key: key, onPressed: onPressed, onLongPress: onLongPress, onHover: onHover, onFocusChange: onFocusChange, style: style, focusNode: focusNode, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = text_button._TextButtonWithIcon.prototype;
  dart.addTypeTests(text_button._TextButtonWithIcon);
  dart.addTypeCaches(text_button._TextButtonWithIcon);
  dart.setLibraryUri(text_button._TextButtonWithIcon, I[10]);
  text_button._TextButtonWithIconChild = class _TextButtonWithIconChild extends framework.StatelessWidget {
    get label() {
      return this[S.label];
    }
    set label(value) {
      super.label = value;
    }
    get icon() {
      return this[S.icon$1];
    }
    set icon(value) {
      super.icon = value;
    }
    static ['_#new#tearOff'](opts) {
      let label = opts && 'label' in opts ? opts.label : null;
      let icon = opts && 'icon' in opts ? opts.icon : null;
      return new text_button._TextButtonWithIconChild.new({label: label, icon: icon, $creationLocationd_0dea112b090073317d4: C[81] || CT.C81});
    }
    build(context) {
      let t7, t7$;
      let scale = (t7$ = (t7 = media_query.MediaQuery.maybeOf(context), t7 == null ? null : t7.textScaleFactor), t7$ == null ? 1.0 : t7$);
      let gap = scale <= 1 ? 8.0 : dart.nullCheck(ui.lerpDouble(8, 4, math.min(core.double, scale - 1, 1.0)));
      return new basic.Row.new({mainAxisSize: flex.MainAxisSize.min, children: T$.JSArrayOfWidget().of([this.icon, new basic.SizedBox.new({width: gap, $creationLocationd_0dea112b090073317d4: C[82] || CT.C82}), new basic.Flexible.new({child: this.label, $creationLocationd_0dea112b090073317d4: C[83] || CT.C83})]), $creationLocationd_0dea112b090073317d4: C[84] || CT.C84});
    }
  };
  (text_button._TextButtonWithIconChild.new = function(opts) {
    let label = opts && 'label' in opts ? opts.label : null;
    let icon = opts && 'icon' in opts ? opts.icon : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.label] = label;
    this[S.icon$1] = icon;
    text_button._TextButtonWithIconChild.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = text_button._TextButtonWithIconChild.prototype;
  dart.addTypeTests(text_button._TextButtonWithIconChild);
  dart.addTypeCaches(text_button._TextButtonWithIconChild);
  dart.setMethodSignature(text_button._TextButtonWithIconChild, () => ({
    __proto__: dart.getMethods(text_button._TextButtonWithIconChild.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(text_button._TextButtonWithIconChild, I[10]);
  dart.setFieldSignature(text_button._TextButtonWithIconChild, () => ({
    __proto__: dart.getFields(text_button._TextButtonWithIconChild.__proto__),
    label: dart.finalFieldType(framework.Widget),
    icon: dart.finalFieldType(framework.Widget)
  }));
  text_button._TextButtonDefaultsM3 = class _TextButtonDefaultsM3 extends button_style.ButtonStyle {
    static ['_#new#tearOff'](context) {
      return new text_button._TextButtonDefaultsM3.new(context);
    }
    get [S._colors$1]() {
      let t8, t7;
      t7 = this[S.___TextButtonDefaultsM3__colors];
      return t7 == null ? (t8 = theme$.Theme.of(this.context).colorScheme, this[S.___TextButtonDefaultsM3__colors] == null ? this[S.___TextButtonDefaultsM3__colors] = t8 : dart.throw(new _internal.LateError.fieldADI("_colors"))) : t7;
    }
    get textStyle() {
      return new (T$.MaterialStatePropertyAllOfTextStyleN()).new(theme$.Theme.of(this.context).textTheme.labelLarge);
    }
    get backgroundColor() {
      return button_style_button.ButtonStyleButton.allOrNull(ui.Color, colors$.Colors.transparent);
    }
    get foregroundColor() {
      return material_state.MaterialStateProperty.resolveWith(T$.ColorN(), dart.fn(states => {
        if (states.contains(material_state.MaterialState.disabled)) {
          return this[S._colors$1].onSurface.withOpacity(0.38);
        }
        return this[S._colors$1].primary;
      }, T$.SetOfMaterialStateToColor()));
    }
    get overlayColor() {
      return material_state.MaterialStateProperty.resolveWith(T$.ColorN(), dart.fn(states => {
        if (states.contains(material_state.MaterialState.hovered)) {
          return this[S._colors$1].primary.withOpacity(0.08);
        }
        if (states.contains(material_state.MaterialState.focused)) {
          return this[S._colors$1].primary.withOpacity(0.12);
        }
        if (states.contains(material_state.MaterialState.pressed)) {
          return this[S._colors$1].primary.withOpacity(0.12);
        }
        return null;
      }, T$.SetOfMaterialStateToColorN()));
    }
    get elevation() {
      return button_style_button.ButtonStyleButton.allOrNull(core.double, 0.0);
    }
    get padding() {
      return button_style_button.ButtonStyleButton.allOrNull(edge_insets.EdgeInsetsGeometry, text_button._scaledPadding(this.context));
    }
    get minimumSize() {
      return button_style_button.ButtonStyleButton.allOrNull(ui.Size, C[85] || CT.C85);
    }
    get maximumSize() {
      return button_style_button.ButtonStyleButton.allOrNull(ui.Size, ui.Size.infinite);
    }
    get shape() {
      return button_style_button.ButtonStyleButton.allOrNull(borders.OutlinedBorder, C[17] || CT.C17);
    }
    get mouseCursor() {
      return material_state.MaterialStateProperty.resolveWith(T$.MouseCursorN(), dart.fn(states => {
        if (states.contains(material_state.MaterialState.disabled)) {
          return mouse_cursor.SystemMouseCursors.basic;
        }
        return mouse_cursor.SystemMouseCursors.click;
      }, T$.SetOfMaterialStateToSystemMouseCursor()));
    }
    get visualDensity() {
      return theme$.Theme.of(this.context).visualDensity;
    }
    get tapTargetSize() {
      return theme$.Theme.of(this.context).materialTapTargetSize;
    }
    get splashFactory() {
      return theme$.Theme.of(this.context).splashFactory;
    }
  };
  (text_button._TextButtonDefaultsM3.new = function(context) {
    this[S.___TextButtonDefaultsM3__colors] = null;
    this.context = context;
    text_button._TextButtonDefaultsM3.__proto__.new.call(this, {animationDuration: constants.kThemeChangeDuration, enableFeedback: true, alignment: alignment.Alignment.center});
    ;
  }).prototype = text_button._TextButtonDefaultsM3.prototype;
  dart.addTypeTests(text_button._TextButtonDefaultsM3);
  dart.addTypeCaches(text_button._TextButtonDefaultsM3);
  dart.setGetterSignature(text_button._TextButtonDefaultsM3, () => ({
    __proto__: dart.getGetters(text_button._TextButtonDefaultsM3.__proto__),
    [S._colors$1]: color_scheme.ColorScheme,
    textStyle: material_state.MaterialStateProperty$(dart.nullable(text_style.TextStyle)),
    backgroundColor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color))),
    foregroundColor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color))),
    overlayColor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color))),
    elevation: dart.nullable(material_state.MaterialStateProperty$(core.double)),
    padding: dart.nullable(material_state.MaterialStateProperty$(edge_insets.EdgeInsetsGeometry)),
    minimumSize: dart.nullable(material_state.MaterialStateProperty$(ui.Size)),
    maximumSize: dart.nullable(material_state.MaterialStateProperty$(ui.Size)),
    shape: dart.nullable(material_state.MaterialStateProperty$(borders.OutlinedBorder)),
    mouseCursor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(mouse_cursor.MouseCursor))),
    visualDensity: dart.nullable(theme_data.VisualDensity),
    tapTargetSize: dart.nullable(theme_data.MaterialTapTargetSize),
    splashFactory: dart.nullable(ink_well.InteractiveInkFeatureFactory)
  }));
  dart.setLibraryUri(text_button._TextButtonDefaultsM3, I[10]);
  dart.setFieldSignature(text_button._TextButtonDefaultsM3, () => ({
    __proto__: dart.getFields(text_button._TextButtonDefaultsM3.__proto__),
    context: dart.finalFieldType(framework.BuildContext),
    [S.___TextButtonDefaultsM3__colors]: dart.fieldType(dart.nullable(color_scheme.ColorScheme))
  }));
  text_button._scaledPadding = function _scaledPadding(context) {
    let t7, t7$;
    return button_style_button.ButtonStyleButton.scaledPadding(C[0] || CT.C0, C[86] || CT.C86, C[80] || CT.C80, (t7$ = (t7 = media_query.MediaQuery.maybeOf(context), t7 == null ? null : t7.textScaleFactor), t7$ == null ? 1.0 : t7$));
  };
  snack_bar.SnackBarClosedReason = class SnackBarClosedReason extends core._Enum {
    toString() {
      return "SnackBarClosedReason." + this[S._name];
    }
  };
  (snack_bar.SnackBarClosedReason.new = function(index, name) {
    snack_bar.SnackBarClosedReason.__proto__.new.call(this, index, name);
    ;
  }).prototype = snack_bar.SnackBarClosedReason.prototype;
  dart.addTypeTests(snack_bar.SnackBarClosedReason);
  dart.addTypeCaches(snack_bar.SnackBarClosedReason);
  dart.setLibraryUri(snack_bar.SnackBarClosedReason, I[12]);
  dart.setStaticFieldSignature(snack_bar.SnackBarClosedReason, () => ['values', 'action', 'dismiss', 'swipe', 'hide', 'remove', 'timeout']);
  dart.defineExtensionMethods(snack_bar.SnackBarClosedReason, ['toString']);
  dart.defineLazy(snack_bar.SnackBarClosedReason, {
    /*snack_bar.SnackBarClosedReason.values*/get values() {
      return C[87] || CT.C87;
    },
    /*snack_bar.SnackBarClosedReason.action*/get action() {
      return C[88] || CT.C88;
    },
    /*snack_bar.SnackBarClosedReason.dismiss*/get dismiss() {
      return C[89] || CT.C89;
    },
    /*snack_bar.SnackBarClosedReason.swipe*/get swipe() {
      return C[90] || CT.C90;
    },
    /*snack_bar.SnackBarClosedReason.hide*/get hide() {
      return C[91] || CT.C91;
    },
    /*snack_bar.SnackBarClosedReason.remove*/get remove() {
      return C[92] || CT.C92;
    },
    /*snack_bar.SnackBarClosedReason.timeout*/get timeout() {
      return C[93] || CT.C93;
    }
  }, false);
  snack_bar.SnackBarAction = class SnackBarAction extends framework.StatefulWidget {
    get textColor() {
      return this[S.textColor];
    }
    set textColor(value) {
      super.textColor = value;
    }
    get disabledTextColor() {
      return this[S.disabledTextColor];
    }
    set disabledTextColor(value) {
      super.disabledTextColor = value;
    }
    get label() {
      return this[S.label$1];
    }
    set label(value) {
      super.label = value;
    }
    get onPressed() {
      return this[S.onPressed$5];
    }
    set onPressed(value) {
      super.onPressed = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let textColor = opts && 'textColor' in opts ? opts.textColor : null;
      let disabledTextColor = opts && 'disabledTextColor' in opts ? opts.disabledTextColor : null;
      let label = opts && 'label' in opts ? opts.label : null;
      let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
      return new snack_bar.SnackBarAction.new({key: key, textColor: textColor, disabledTextColor: disabledTextColor, label: label, onPressed: onPressed, $creationLocationd_0dea112b090073317d4: C[94] || CT.C94});
    }
    createState() {
      return new snack_bar._SnackBarActionState.new();
    }
  };
  (snack_bar.SnackBarAction.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let textColor = opts && 'textColor' in opts ? opts.textColor : null;
    let disabledTextColor = opts && 'disabledTextColor' in opts ? opts.disabledTextColor : null;
    let label = opts && 'label' in opts ? opts.label : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.textColor] = textColor;
    this[S.disabledTextColor] = disabledTextColor;
    this[S.label$1] = label;
    this[S.onPressed$5] = onPressed;
    if (!(label !== null)) dart.assertFailed(null, I[13], 90, 15, "label != null");
    if (!(onPressed !== null)) dart.assertFailed(null, I[13], 91, 15, "onPressed != null");
    snack_bar.SnackBarAction.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = snack_bar.SnackBarAction.prototype;
  dart.addTypeTests(snack_bar.SnackBarAction);
  dart.addTypeCaches(snack_bar.SnackBarAction);
  dart.setMethodSignature(snack_bar.SnackBarAction, () => ({
    __proto__: dart.getMethods(snack_bar.SnackBarAction.__proto__),
    createState: dart.fnType(framework.State$(snack_bar.SnackBarAction), [])
  }));
  dart.setLibraryUri(snack_bar.SnackBarAction, I[12]);
  dart.setFieldSignature(snack_bar.SnackBarAction, () => ({
    __proto__: dart.getFields(snack_bar.SnackBarAction.__proto__),
    textColor: dart.finalFieldType(dart.nullable(ui.Color)),
    disabledTextColor: dart.finalFieldType(dart.nullable(ui.Color)),
    label: dart.finalFieldType(core.String),
    onPressed: dart.finalFieldType(dart.fnType(dart.void, []))
  }));
  snack_bar._SnackBarActionState = class _SnackBarActionState extends framework.State$(snack_bar.SnackBarAction) {
    [S._handlePressed]() {
      if (this[S._haveTriggeredAction]) {
        return;
      }
      this.setState(dart.fn(() => {
        this[S._haveTriggeredAction] = true;
      }, T$.VoidTovoid()));
      this.widget.onPressed();
      scaffold$.ScaffoldMessenger.of(this.context).hideCurrentSnackBar({reason: snack_bar.SnackBarClosedReason.action});
    }
    build(context) {
      const resolveForegroundColor = states => {
        let t9, t9$;
        let snackBarTheme = theme$.Theme.of(context).snackBarTheme;
        if (states.contains(material_state.MaterialState.disabled)) {
          t9 = this.widget.disabledTextColor;
          return t9 == null ? snackBarTheme.disabledActionTextColor : t9;
        }
        t9$ = this.widget.textColor;
        return t9$ == null ? snackBarTheme.actionTextColor : t9$;
      };
      dart.fn(resolveForegroundColor, T$.SetOfMaterialStateToColorN());
      return new text_button.TextButton.new({style: new button_style.ButtonStyle.new({foregroundColor: material_state.MaterialStateProperty.resolveWith(T$.ColorN(), resolveForegroundColor)}), onPressed: this[S._haveTriggeredAction] ? null : dart.bind(this, S._handlePressed), child: new text$.Text.new(this.widget.label, {$creationLocationd_0dea112b090073317d4: C[95] || CT.C95}), $creationLocationd_0dea112b090073317d4: C[96] || CT.C96});
    }
    static ['_#new#tearOff']() {
      return new snack_bar._SnackBarActionState.new();
    }
  };
  (snack_bar._SnackBarActionState.new = function() {
    this[S._haveTriggeredAction] = false;
    snack_bar._SnackBarActionState.__proto__.new.call(this);
    ;
  }).prototype = snack_bar._SnackBarActionState.prototype;
  dart.addTypeTests(snack_bar._SnackBarActionState);
  dart.addTypeCaches(snack_bar._SnackBarActionState);
  dart.setMethodSignature(snack_bar._SnackBarActionState, () => ({
    __proto__: dart.getMethods(snack_bar._SnackBarActionState.__proto__),
    [S._handlePressed]: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(snack_bar._SnackBarActionState, I[12]);
  dart.setFieldSignature(snack_bar._SnackBarActionState, () => ({
    __proto__: dart.getFields(snack_bar._SnackBarActionState.__proto__),
    [S._haveTriggeredAction]: dart.fieldType(core.bool)
  }));
  snack_bar.SnackBar = class SnackBar extends framework.StatefulWidget {
    get content() {
      return this[S.content];
    }
    set content(value) {
      super.content = value;
    }
    get backgroundColor() {
      return this[S.backgroundColor$1];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get elevation() {
      return this[S.elevation$1];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get margin() {
      return this[S.margin];
    }
    set margin(value) {
      super.margin = value;
    }
    get padding() {
      return this[S.padding$2];
    }
    set padding(value) {
      super.padding = value;
    }
    get width() {
      return this[S.width];
    }
    set width(value) {
      super.width = value;
    }
    get shape() {
      return this[S.shape$1];
    }
    set shape(value) {
      super.shape = value;
    }
    get behavior() {
      return this[S.behavior];
    }
    set behavior(value) {
      super.behavior = value;
    }
    get action() {
      return this[S.action];
    }
    set action(value) {
      super.action = value;
    }
    get duration() {
      return this[S.duration];
    }
    set duration(value) {
      super.duration = value;
    }
    get animation() {
      return this[S.animation];
    }
    set animation(value) {
      super.animation = value;
    }
    get onVisible() {
      return this[S.onVisible];
    }
    set onVisible(value) {
      super.onVisible = value;
    }
    get dismissDirection() {
      return this[S.dismissDirection];
    }
    set dismissDirection(value) {
      super.dismissDirection = value;
    }
    get clipBehavior() {
      return this[S.clipBehavior$1];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let content = opts && 'content' in opts ? opts.content : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let margin = opts && 'margin' in opts ? opts.margin : null;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let width = opts && 'width' in opts ? opts.width : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let behavior = opts && 'behavior' in opts ? opts.behavior : null;
      let action = opts && 'action' in opts ? opts.action : null;
      let duration = opts && 'duration' in opts ? opts.duration : C[97] || CT.C97;
      let animation = opts && 'animation' in opts ? opts.animation : null;
      let onVisible = opts && 'onVisible' in opts ? opts.onVisible : null;
      let dismissDirection = opts && 'dismissDirection' in opts ? opts.dismissDirection : C[98] || CT.C98;
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[99] || CT.C99;
      return new snack_bar.SnackBar.new({key: key, content: content, backgroundColor: backgroundColor, elevation: elevation, margin: margin, padding: padding, width: width, shape: shape, behavior: behavior, action: action, duration: duration, animation: animation, onVisible: onVisible, dismissDirection: dismissDirection, clipBehavior: clipBehavior, $creationLocationd_0dea112b090073317d4: C[100] || CT.C100});
    }
    static createAnimationController(opts) {
      let vsync = opts && 'vsync' in opts ? opts.vsync : null;
      return new animation_controller.AnimationController.new({duration: snack_bar._snackBarTransitionDuration, debugLabel: "SnackBar", vsync: vsync});
    }
    withAnimation(newAnimation, opts) {
      let t9;
      let fallbackKey = opts && 'fallbackKey' in opts ? opts.fallbackKey : null;
      return new snack_bar.SnackBar.new({key: (t9 = this.key, t9 == null ? fallbackKey : t9), content: this.content, backgroundColor: this.backgroundColor, elevation: this.elevation, margin: this.margin, padding: this.padding, width: this.width, shape: this.shape, behavior: this.behavior, action: this.action, duration: this.duration, animation: newAnimation, onVisible: this.onVisible, dismissDirection: this.dismissDirection, clipBehavior: this.clipBehavior, $creationLocationd_0dea112b090073317d4: C[101] || CT.C101});
    }
    createState() {
      return new snack_bar._SnackBarState.new();
    }
  };
  (snack_bar.SnackBar.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let content = opts && 'content' in opts ? opts.content : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let margin = opts && 'margin' in opts ? opts.margin : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let width = opts && 'width' in opts ? opts.width : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let behavior = opts && 'behavior' in opts ? opts.behavior : null;
    let action = opts && 'action' in opts ? opts.action : null;
    let duration = opts && 'duration' in opts ? opts.duration : C[97] || CT.C97;
    let animation = opts && 'animation' in opts ? opts.animation : null;
    let onVisible = opts && 'onVisible' in opts ? opts.onVisible : null;
    let dismissDirection = opts && 'dismissDirection' in opts ? opts.dismissDirection : C[98] || CT.C98;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[99] || CT.C99;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.content] = content;
    this[S.backgroundColor$1] = backgroundColor;
    this[S.elevation$1] = elevation;
    this[S.margin] = margin;
    this[S.padding$2] = padding;
    this[S.width] = width;
    this[S.shape$1] = shape;
    this[S.behavior] = behavior;
    this[S.action] = action;
    this[S.duration] = duration;
    this[S.animation] = animation;
    this[S.onVisible] = onVisible;
    this[S.dismissDirection] = dismissDirection;
    this[S.clipBehavior$1] = clipBehavior;
    if (!(elevation == null || dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, I[13], 209, 15, "elevation == null || elevation >= 0.0");
    if (!(content !== null)) dart.assertFailed(null, I[13], 210, 15, "content != null");
    if (!(width == null || margin == null)) dart.assertFailed("Width and margin can not be used together", I[13], 212, 10, "width == null || margin == null");
    if (!(duration !== null)) dart.assertFailed(null, I[13], 215, 15, "duration != null");
    if (!(clipBehavior !== null)) dart.assertFailed(null, I[13], 216, 15, "clipBehavior != null");
    snack_bar.SnackBar.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = snack_bar.SnackBar.prototype;
  dart.addTypeTests(snack_bar.SnackBar);
  dart.addTypeCaches(snack_bar.SnackBar);
  dart.setMethodSignature(snack_bar.SnackBar, () => ({
    __proto__: dart.getMethods(snack_bar.SnackBar.__proto__),
    withAnimation: dart.fnType(snack_bar.SnackBar, [animation$.Animation$(core.double)], {fallbackKey: dart.nullable(key.Key)}, {}),
    createState: dart.fnType(framework.State$(snack_bar.SnackBar), [])
  }));
  dart.setStaticMethodSignature(snack_bar.SnackBar, () => ['createAnimationController']);
  dart.setLibraryUri(snack_bar.SnackBar, I[12]);
  dart.setFieldSignature(snack_bar.SnackBar, () => ({
    __proto__: dart.getFields(snack_bar.SnackBar.__proto__),
    content: dart.finalFieldType(framework.Widget),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    margin: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    padding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    width: dart.finalFieldType(dart.nullable(core.double)),
    shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    behavior: dart.finalFieldType(dart.nullable(snack_bar_theme.SnackBarBehavior)),
    action: dart.finalFieldType(dart.nullable(snack_bar.SnackBarAction)),
    duration: dart.finalFieldType(core.Duration),
    animation: dart.finalFieldType(dart.nullable(animation$.Animation$(core.double))),
    onVisible: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    dismissDirection: dart.finalFieldType(dismissible.DismissDirection),
    clipBehavior: dart.finalFieldType(ui.Clip)
  }));
  snack_bar._SnackBarState = class _SnackBarState extends framework.State$(snack_bar.SnackBar) {
    initState() {
      super.initState();
      dart.nullCheck(this.widget.animation).addStatusListener(dart.bind(this, S._onAnimationStatusChanged));
    }
    didUpdateWidget(oldWidget) {
      snack_bar.SnackBar.as(oldWidget);
      super.didUpdateWidget(oldWidget);
      if (!dart.equals(this.widget.animation, oldWidget.animation)) {
        dart.nullCheck(oldWidget.animation).removeStatusListener(dart.bind(this, S._onAnimationStatusChanged));
        dart.nullCheck(this.widget.animation).addStatusListener(dart.bind(this, S._onAnimationStatusChanged));
      }
    }
    dispose() {
      dart.nullCheck(this.widget.animation).removeStatusListener(dart.bind(this, S._onAnimationStatusChanged));
      super.dispose();
    }
    [S._onAnimationStatusChanged](animationStatus) {
      switch (animationStatus) {
        case C[102] || CT.C102:
        case C[103] || CT.C103:
        case C[104] || CT.C104:
          {
            break;
          }
        case C[105] || CT.C105:
          {
            if (this.widget.onVisible != null && !this[S._wasVisible]) {
              dart.nullCheck(this.widget.onVisible)();
            }
            this[S._wasVisible] = true;
          }
      }
    }
    build(context) {
      let t9, t9$, t9$0, t9$1, t9$2, t9$3, t10, t10$, t10$0, t10$1, t10$2, t10$3, t10$4;
      if (!debug.debugCheckHasMediaQuery(context)) dart.assertFailed(null, I[13], 425, 12, "debugCheckHasMediaQuery(context)");
      let mediaQueryData = media_query.MediaQuery.of(context);
      if (!(this.widget.animation != null)) dart.assertFailed(null, I[13], 427, 12, "widget.animation != null");
      let theme = theme$.Theme.of(context);
      let colorScheme = theme.colorScheme;
      let snackBarTheme = theme.snackBarTheme;
      let isThemeDark = theme.brightness === ui.Brightness.dark;
      let buttonColor = isThemeDark ? colorScheme.primary : colorScheme.secondary;
      let brightness = isThemeDark ? ui.Brightness.light : ui.Brightness.dark;
      let themeBackgroundColor = isThemeDark ? colorScheme.onSurface : ui.Color.alphaBlend(colorScheme.onSurface.withOpacity(0.8), colorScheme.surface);
      let inverseTheme = theme.copyWith({colorScheme: new color_scheme.ColorScheme.new({primary: colorScheme.onPrimary, primaryVariant: colorScheme.onPrimary, secondary: buttonColor, secondaryVariant: colorScheme.onSecondary, surface: colorScheme.onSurface, background: themeBackgroundColor, error: colorScheme.onError, onPrimary: colorScheme.primary, onSecondary: colorScheme.secondary, onSurface: colorScheme.surface, onBackground: colorScheme.background, onError: colorScheme.error, brightness: brightness})});
      let contentTextStyle = (t9 = snackBarTheme.contentTextStyle, t9 == null ? theme_data.ThemeData.new({brightness: brightness}).textTheme.subtitle1 : t9);
      let snackBarBehavior = (t9$0 = (t9$ = this.widget.behavior, t9$ == null ? snackBarTheme.behavior : t9$), t9$0 == null ? snack_bar_theme.SnackBarBehavior.fixed : t9$0);
      if (!dart.fn(() => {
        if (snackBarBehavior !== snack_bar_theme.SnackBarBehavior.floating) {
          const message = parameter => {
            let prefix = parameter + " can only be used with floating behavior.";
            if (this.widget.behavior != null) {
              return prefix + " SnackBarBehavior.fixed was set in the SnackBar constructor.";
            } else if (snackBarTheme.behavior != null) {
              return prefix + " SnackBarBehavior.fixed was set by the inherited SnackBarThemeData.";
            } else {
              return prefix + " SnackBarBehavior.fixed was set by default.";
            }
          };
          dart.fn(message, T$.StringToString());
          if (!(this.widget.margin == null)) dart.assertFailed(message("Margin"), I[13], 474, 16, "widget.margin == null");
          if (!(this.widget.width == null)) dart.assertFailed(message("Width"), I[13], 475, 16, "widget.width == null");
        }
        return true;
      }, T$.VoidTobool())()) dart.assertFailed(null, I[13], 460, 12, "(){\n      // Whether the behavior is set through the constructor or the theme,\n      // assert that our other properties are configured properly.\n      if (snackBarBehavior != SnackBarBehavior.floating) {\n        String message(String parameter) {\n          final String prefix = '$parameter can only be used with floating behavior.';\n          if (widget.behavior != null) {\n            return '$prefix SnackBarBehavior.fixed was set in the SnackBar constructor.';\n          } else if (snackBarTheme.behavior != null) {\n            return '$prefix SnackBarBehavior.fixed was set by the inherited SnackBarThemeData.';\n          } else {\n            return '$prefix SnackBarBehavior.fixed was set by default.';\n          }\n        }\n        assert(widget.margin == null, message('Margin'));\n        assert(widget.width == null, message('Width'));\n      }\n      return true;\n    }()");
      let isFloatingSnackBar = snackBarBehavior === snack_bar_theme.SnackBarBehavior.floating;
      let horizontalPadding = isFloatingSnackBar ? 16.0 : 24.0;
      let padding = (t9$1 = this.widget.padding, t9$1 == null ? new edge_insets.EdgeInsetsDirectional.only({start: horizontalPadding, end: this.widget.action != null ? 0.0 : horizontalPadding}) : t9$1);
      let actionHorizontalMargin = dart.notNull((t9$3 = (t9$2 = this.widget.padding, t9$2 == null ? null : t9$2.resolve(ui.TextDirection.ltr).right), t9$3 == null ? horizontalPadding : t9$3)) / 2;
      let heightAnimation = new animations.CurvedAnimation.new({parent: dart.nullCheck(this.widget.animation), curve: snack_bar._snackBarHeightCurve});
      let fadeInAnimation = new animations.CurvedAnimation.new({parent: dart.nullCheck(this.widget.animation), curve: snack_bar._snackBarFadeInCurve});
      let fadeOutAnimation = new animations.CurvedAnimation.new({parent: dart.nullCheck(this.widget.animation), curve: snack_bar._snackBarFadeOutCurve, reverseCurve: C[106] || CT.C106});
      let snackBar = new basic.Padding.new({padding: padding, child: new basic.Row.new({children: (() => {
            let t9 = T$.JSArrayOfWidget().of([new basic.Expanded.new({child: new container.Container.new({padding: this.widget.padding == null ? C[107] || CT.C107 : null, child: new text$.DefaultTextStyle.new({style: dart.nullCheck(contentTextStyle), child: this.widget.content, $creationLocationd_0dea112b090073317d4: C[108] || CT.C108}), $creationLocationd_0dea112b090073317d4: C[109] || CT.C109}), $creationLocationd_0dea112b090073317d4: C[110] || CT.C110})]);
            if (this.widget.action != null) t9.push(new basic.Padding.new({padding: new edge_insets.EdgeInsets.symmetric({horizontal: actionHorizontalMargin}), child: new text_button_theme.TextButtonTheme.new({data: new text_button_theme.TextButtonThemeData.new({style: text_button.TextButton.styleFrom({primary: buttonColor, padding: new edge_insets.EdgeInsets.symmetric({horizontal: horizontalPadding})})}), child: dart.nullCheck(this.widget.action), $creationLocationd_0dea112b090073317d4: C[111] || CT.C111}), $creationLocationd_0dea112b090073317d4: C[112] || CT.C112}));
            return t9;
          })(), $creationLocationd_0dea112b090073317d4: C[113] || CT.C113}), $creationLocationd_0dea112b090073317d4: C[114] || CT.C114});
      if (!isFloatingSnackBar) {
        snackBar = new safe_area.SafeArea.new({top: false, child: snackBar, $creationLocationd_0dea112b090073317d4: C[115] || CT.C115});
      }
      let elevation = (t10$ = (t10 = this.widget.elevation, t10 == null ? snackBarTheme.elevation : t10), t10$ == null ? 6.0 : t10$);
      let backgroundColor = (t10$1 = (t10$0 = this.widget.backgroundColor, t10$0 == null ? snackBarTheme.backgroundColor : t10$0), t10$1 == null ? inverseTheme.colorScheme.background : t10$1);
      let shape = (t10$3 = (t10$2 = this.widget.shape, t10$2 == null ? snackBarTheme.shape : t10$2), t10$3 == null ? isFloatingSnackBar ? C[75] || CT.C75 : null : t10$3);
      snackBar = new material.Material.new({shape: shape, elevation: elevation, color: backgroundColor, child: new theme$.Theme.new({data: inverseTheme, child: mediaQueryData.accessibleNavigation ? snackBar : new transitions.FadeTransition.new({opacity: fadeOutAnimation, child: snackBar, $creationLocationd_0dea112b090073317d4: C[116] || CT.C116}), $creationLocationd_0dea112b090073317d4: C[117] || CT.C117}), $creationLocationd_0dea112b090073317d4: C[118] || CT.C118});
      if (isFloatingSnackBar) {
        if (this.widget.width != null) {
          snackBar = new container.Container.new({margin: C[119] || CT.C119, width: this.widget.width, child: snackBar, $creationLocationd_0dea112b090073317d4: C[120] || CT.C120});
        } else {
          snackBar = new basic.Padding.new({padding: (t10$4 = this.widget.margin, t10$4 == null ? C[121] || CT.C121 : t10$4), child: snackBar, $creationLocationd_0dea112b090073317d4: C[122] || CT.C122});
        }
        snackBar = new safe_area.SafeArea.new({top: false, bottom: false, child: snackBar, $creationLocationd_0dea112b090073317d4: C[123] || CT.C123});
      }
      snackBar = new basic.Semantics.new({container: true, liveRegion: true, onDismiss: dart.fn(() => {
          scaffold$.ScaffoldMessenger.of(context).removeCurrentSnackBar({reason: snack_bar.SnackBarClosedReason.dismiss});
        }, T$.VoidTovoid()), child: new dismissible.Dismissible.new({key: C[124] || CT.C124, direction: this.widget.dismissDirection, resizeDuration: null, onDismissed: dart.fn(direction => {
            scaffold$.ScaffoldMessenger.of(context).removeCurrentSnackBar({reason: snack_bar.SnackBarClosedReason.swipe});
          }, T$.DismissDirectionTovoid()), child: snackBar, $creationLocationd_0dea112b090073317d4: C[125] || CT.C125}), $creationLocationd_0dea112b090073317d4: C[126] || CT.C126});
      let snackBarTransition = null;
      if (mediaQueryData.accessibleNavigation) {
        snackBarTransition = snackBar;
      } else if (isFloatingSnackBar) {
        snackBarTransition = new transitions.FadeTransition.new({opacity: fadeInAnimation, child: snackBar, $creationLocationd_0dea112b090073317d4: C[127] || CT.C127});
      } else {
        snackBarTransition = new transitions.AnimatedBuilder.new({animation: heightAnimation, builder: dart.fn((context, child) => new basic.Align.new({alignment: alignment.AlignmentDirectional.topStart, heightFactor: heightAnimation.value, child: child, $creationLocationd_0dea112b090073317d4: C[128] || CT.C128}), T$.BuildContextAndWidgetNToAlign()), child: snackBar, $creationLocationd_0dea112b090073317d4: C[129] || CT.C129});
      }
      return new heroes.Hero.new({tag: "<SnackBar Hero tag - " + dart.str(this.widget.content) + ">", child: new basic.ClipRect.new({clipBehavior: this.widget.clipBehavior, child: snackBarTransition, $creationLocationd_0dea112b090073317d4: C[130] || CT.C130}), $creationLocationd_0dea112b090073317d4: C[131] || CT.C131});
    }
    static ['_#new#tearOff']() {
      return new snack_bar._SnackBarState.new();
    }
  };
  (snack_bar._SnackBarState.new = function() {
    this[S._wasVisible] = false;
    snack_bar._SnackBarState.__proto__.new.call(this);
    ;
  }).prototype = snack_bar._SnackBarState.prototype;
  dart.addTypeTests(snack_bar._SnackBarState);
  dart.addTypeCaches(snack_bar._SnackBarState);
  dart.setMethodSignature(snack_bar._SnackBarState, () => ({
    __proto__: dart.getMethods(snack_bar._SnackBarState.__proto__),
    [S._onAnimationStatusChanged]: dart.fnType(dart.void, [animation$.AnimationStatus]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(snack_bar._SnackBarState, I[12]);
  dart.setFieldSignature(snack_bar._SnackBarState, () => ({
    __proto__: dart.getFields(snack_bar._SnackBarState.__proto__),
    [S._wasVisible]: dart.fieldType(core.bool)
  }));
  dart.defineLazy(snack_bar, {
    /*snack_bar._singleLineVerticalPadding*/get _singleLineVerticalPadding() {
      return 14;
    },
    /*snack_bar._snackBarTransitionDuration*/get _snackBarTransitionDuration() {
      return C[132] || CT.C132;
    },
    /*snack_bar._snackBarDisplayDuration*/get _snackBarDisplayDuration() {
      return C[97] || CT.C97;
    },
    /*snack_bar._snackBarHeightCurve*/get _snackBarHeightCurve() {
      return C[133] || CT.C133;
    },
    /*snack_bar._snackBarFadeInCurve*/get _snackBarFadeInCurve() {
      return C[134] || CT.C134;
    },
    /*snack_bar._snackBarFadeOutCurve*/get _snackBarFadeOutCurve() {
      return C[135] || CT.C135;
    }
  }, false);
  floating_action_button_location.FloatingActionButtonLocation = class FloatingActionButtonLocation extends core.Object {
    toString() {
      return object$.objectRuntimeType(this, "FloatingActionButtonLocation");
    }
  };
  (floating_action_button_location.FloatingActionButtonLocation.new = function() {
    ;
  }).prototype = floating_action_button_location.FloatingActionButtonLocation.prototype;
  dart.addTypeTests(floating_action_button_location.FloatingActionButtonLocation);
  dart.addTypeCaches(floating_action_button_location.FloatingActionButtonLocation);
  dart.setLibraryUri(floating_action_button_location.FloatingActionButtonLocation, I[14]);
  dart.setStaticFieldSignature(floating_action_button_location.FloatingActionButtonLocation, () => ['startTop', 'miniStartTop', 'centerTop', 'miniCenterTop', 'endTop', 'miniEndTop', 'startFloat', 'miniStartFloat', 'centerFloat', 'miniCenterFloat', 'endFloat', 'miniEndFloat', 'startDocked', 'miniStartDocked', 'centerDocked', 'miniCenterDocked', 'endDocked', 'miniEndDocked']);
  dart.defineExtensionMethods(floating_action_button_location.FloatingActionButtonLocation, ['toString']);
  dart.defineLazy(floating_action_button_location.FloatingActionButtonLocation, {
    /*floating_action_button_location.FloatingActionButtonLocation.startTop*/get startTop() {
      return C[136] || CT.C136;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.miniStartTop*/get miniStartTop() {
      return C[137] || CT.C137;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.centerTop*/get centerTop() {
      return C[138] || CT.C138;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.miniCenterTop*/get miniCenterTop() {
      return C[139] || CT.C139;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.endTop*/get endTop() {
      return C[140] || CT.C140;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.miniEndTop*/get miniEndTop() {
      return C[141] || CT.C141;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.startFloat*/get startFloat() {
      return C[142] || CT.C142;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.miniStartFloat*/get miniStartFloat() {
      return C[143] || CT.C143;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.centerFloat*/get centerFloat() {
      return C[144] || CT.C144;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.miniCenterFloat*/get miniCenterFloat() {
      return C[145] || CT.C145;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.endFloat*/get endFloat() {
      return C[146] || CT.C146;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.miniEndFloat*/get miniEndFloat() {
      return C[147] || CT.C147;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.startDocked*/get startDocked() {
      return C[148] || CT.C148;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.miniStartDocked*/get miniStartDocked() {
      return C[149] || CT.C149;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.centerDocked*/get centerDocked() {
      return C[150] || CT.C150;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.miniCenterDocked*/get miniCenterDocked() {
      return C[151] || CT.C151;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.endDocked*/get endDocked() {
      return C[152] || CT.C152;
    },
    /*floating_action_button_location.FloatingActionButtonLocation.miniEndDocked*/get miniEndDocked() {
      return C[153] || CT.C153;
    }
  }, false);
  floating_action_button_location.StandardFabLocation = class StandardFabLocation extends floating_action_button_location.FloatingActionButtonLocation {
    isMini() {
      return false;
    }
    getOffset(scaffoldGeometry) {
      let adjustment = this.isMini() ? 4 : 0.0;
      return new ui.Offset.new(this.getOffsetX(scaffoldGeometry, adjustment), this.getOffsetY(scaffoldGeometry, adjustment));
    }
    static _leftOffsetX(scaffoldGeometry, adjustment) {
      return 16 + scaffoldGeometry.minInsets.left - adjustment;
    }
    static _rightOffsetX(scaffoldGeometry, adjustment) {
      return scaffoldGeometry.scaffoldSize.width - 16 - scaffoldGeometry.minInsets.right - scaffoldGeometry.floatingActionButtonSize.width + adjustment;
    }
  };
  (floating_action_button_location.StandardFabLocation.new = function() {
    floating_action_button_location.StandardFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location.StandardFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location.StandardFabLocation);
  dart.addTypeCaches(floating_action_button_location.StandardFabLocation);
  dart.setMethodSignature(floating_action_button_location.StandardFabLocation, () => ({
    __proto__: dart.getMethods(floating_action_button_location.StandardFabLocation.__proto__),
    isMini: dart.fnType(core.bool, []),
    getOffset: dart.fnType(ui.Offset, [scaffold$.ScaffoldPrelayoutGeometry])
  }));
  dart.setStaticMethodSignature(floating_action_button_location.StandardFabLocation, () => ['_leftOffsetX', '_rightOffsetX']);
  dart.setLibraryUri(floating_action_button_location.StandardFabLocation, I[14]);
  floating_action_button_location.FabTopOffsetY = class FabTopOffsetY extends floating_action_button_location.StandardFabLocation {};
  floating_action_button_location.FabTopOffsetY[dart.mixinOn] = StandardFabLocation => class FabTopOffsetY extends StandardFabLocation {
    getOffsetY(scaffoldGeometry, adjustment) {
      if (scaffoldGeometry.contentTop > scaffoldGeometry.minViewPadding.top) {
        let fabHalfHeight = scaffoldGeometry.floatingActionButtonSize.height / 2.0;
        return scaffoldGeometry.contentTop - fabHalfHeight;
      }
      return scaffoldGeometry.minViewPadding.top;
    }
  };
  dart.addTypeTests(floating_action_button_location.FabTopOffsetY);
  dart.addTypeCaches(floating_action_button_location.FabTopOffsetY);
  floating_action_button_location.FabTopOffsetY[dart.implements] = () => [floating_action_button_location.StandardFabLocation];
  dart.setMethodSignature(floating_action_button_location.FabTopOffsetY, () => ({
    __proto__: dart.getMethods(floating_action_button_location.FabTopOffsetY.__proto__),
    getOffsetY: dart.fnType(core.double, [scaffold$.ScaffoldPrelayoutGeometry, core.double])
  }));
  dart.setLibraryUri(floating_action_button_location.FabTopOffsetY, I[14]);
  floating_action_button_location.FabFloatOffsetY = class FabFloatOffsetY extends floating_action_button_location.StandardFabLocation {};
  floating_action_button_location.FabFloatOffsetY[dart.mixinOn] = StandardFabLocation => class FabFloatOffsetY extends StandardFabLocation {
    getOffsetY(scaffoldGeometry, adjustment) {
      let contentBottom = scaffoldGeometry.contentBottom;
      let bottomContentHeight = scaffoldGeometry.scaffoldSize.height - contentBottom;
      let bottomSheetHeight = scaffoldGeometry.bottomSheetSize.height;
      let fabHeight = scaffoldGeometry.floatingActionButtonSize.height;
      let snackBarHeight = scaffoldGeometry.snackBarSize.height;
      let safeMargin = math.max(core.double, 16, scaffoldGeometry.minViewPadding.bottom - bottomContentHeight + 16);
      let fabY = contentBottom - fabHeight - safeMargin;
      if (snackBarHeight > 0.0) {
        fabY = math.min(core.double, fabY, contentBottom - snackBarHeight - fabHeight - 16);
      }
      if (bottomSheetHeight > 0.0) {
        fabY = math.min(core.double, fabY, contentBottom - bottomSheetHeight - fabHeight / 2.0);
      }
      return fabY + adjustment;
    }
  };
  dart.addTypeTests(floating_action_button_location.FabFloatOffsetY);
  dart.addTypeCaches(floating_action_button_location.FabFloatOffsetY);
  floating_action_button_location.FabFloatOffsetY[dart.implements] = () => [floating_action_button_location.StandardFabLocation];
  dart.setMethodSignature(floating_action_button_location.FabFloatOffsetY, () => ({
    __proto__: dart.getMethods(floating_action_button_location.FabFloatOffsetY.__proto__),
    getOffsetY: dart.fnType(core.double, [scaffold$.ScaffoldPrelayoutGeometry, core.double])
  }));
  dart.setLibraryUri(floating_action_button_location.FabFloatOffsetY, I[14]);
  floating_action_button_location.FabDockedOffsetY = class FabDockedOffsetY extends floating_action_button_location.StandardFabLocation {};
  floating_action_button_location.FabDockedOffsetY[dart.mixinOn] = StandardFabLocation => class FabDockedOffsetY extends StandardFabLocation {
    getOffsetY(scaffoldGeometry, adjustment) {
      let contentBottom = scaffoldGeometry.contentBottom;
      let contentMargin = scaffoldGeometry.scaffoldSize.height - contentBottom;
      let bottomViewPadding = scaffoldGeometry.minViewPadding.bottom;
      let bottomSheetHeight = scaffoldGeometry.bottomSheetSize.height;
      let fabHeight = scaffoldGeometry.floatingActionButtonSize.height;
      let snackBarHeight = scaffoldGeometry.snackBarSize.height;
      let bottomMinInset = scaffoldGeometry.minInsets.bottom;
      let safeMargin = null;
      if (contentMargin > bottomMinInset + fabHeight / 2.0) {
        safeMargin = 0.0;
      } else if (bottomMinInset === 0.0) {
        safeMargin = bottomViewPadding;
      } else {
        safeMargin = fabHeight / 2.0 + 16;
      }
      let fabY = contentBottom - fabHeight / 2.0 - safeMargin;
      if (snackBarHeight > 0.0) {
        fabY = math.min(core.double, fabY, contentBottom - snackBarHeight - fabHeight - 16);
      }
      if (bottomSheetHeight > 0.0) {
        fabY = math.min(core.double, fabY, contentBottom - bottomSheetHeight - fabHeight / 2.0);
      }
      let maxFabY = scaffoldGeometry.scaffoldSize.height - fabHeight - safeMargin;
      return math.min(core.double, maxFabY, fabY);
    }
  };
  dart.addTypeTests(floating_action_button_location.FabDockedOffsetY);
  dart.addTypeCaches(floating_action_button_location.FabDockedOffsetY);
  floating_action_button_location.FabDockedOffsetY[dart.implements] = () => [floating_action_button_location.StandardFabLocation];
  dart.setMethodSignature(floating_action_button_location.FabDockedOffsetY, () => ({
    __proto__: dart.getMethods(floating_action_button_location.FabDockedOffsetY.__proto__),
    getOffsetY: dart.fnType(core.double, [scaffold$.ScaffoldPrelayoutGeometry, core.double])
  }));
  dart.setLibraryUri(floating_action_button_location.FabDockedOffsetY, I[14]);
  floating_action_button_location.FabStartOffsetX = class FabStartOffsetX extends floating_action_button_location.StandardFabLocation {};
  floating_action_button_location.FabStartOffsetX[dart.mixinOn] = StandardFabLocation => class FabStartOffsetX extends StandardFabLocation {
    getOffsetX(scaffoldGeometry, adjustment) {
      if (!(scaffoldGeometry.textDirection !== null)) dart.assertFailed(null, I[15], 617, 12, "scaffoldGeometry.textDirection != null");
      switch (scaffoldGeometry.textDirection) {
        case C[154] || CT.C154:
          {
            return floating_action_button_location.StandardFabLocation._rightOffsetX(scaffoldGeometry, adjustment);
          }
        case C[155] || CT.C155:
          {
            return floating_action_button_location.StandardFabLocation._leftOffsetX(scaffoldGeometry, adjustment);
          }
      }
    }
  };
  dart.addTypeTests(floating_action_button_location.FabStartOffsetX);
  dart.addTypeCaches(floating_action_button_location.FabStartOffsetX);
  floating_action_button_location.FabStartOffsetX[dart.implements] = () => [floating_action_button_location.StandardFabLocation];
  dart.setMethodSignature(floating_action_button_location.FabStartOffsetX, () => ({
    __proto__: dart.getMethods(floating_action_button_location.FabStartOffsetX.__proto__),
    getOffsetX: dart.fnType(core.double, [scaffold$.ScaffoldPrelayoutGeometry, core.double])
  }));
  dart.setLibraryUri(floating_action_button_location.FabStartOffsetX, I[14]);
  floating_action_button_location.FabCenterOffsetX = class FabCenterOffsetX extends floating_action_button_location.StandardFabLocation {};
  floating_action_button_location.FabCenterOffsetX[dart.mixinOn] = StandardFabLocation => class FabCenterOffsetX extends StandardFabLocation {
    getOffsetX(scaffoldGeometry, adjustment) {
      return (scaffoldGeometry.scaffoldSize.width - scaffoldGeometry.floatingActionButtonSize.width) / 2.0;
    }
  };
  dart.addTypeTests(floating_action_button_location.FabCenterOffsetX);
  dart.addTypeCaches(floating_action_button_location.FabCenterOffsetX);
  floating_action_button_location.FabCenterOffsetX[dart.implements] = () => [floating_action_button_location.StandardFabLocation];
  dart.setMethodSignature(floating_action_button_location.FabCenterOffsetX, () => ({
    __proto__: dart.getMethods(floating_action_button_location.FabCenterOffsetX.__proto__),
    getOffsetX: dart.fnType(core.double, [scaffold$.ScaffoldPrelayoutGeometry, core.double])
  }));
  dart.setLibraryUri(floating_action_button_location.FabCenterOffsetX, I[14]);
  floating_action_button_location.FabEndOffsetX = class FabEndOffsetX extends floating_action_button_location.StandardFabLocation {};
  floating_action_button_location.FabEndOffsetX[dart.mixinOn] = StandardFabLocation => class FabEndOffsetX extends StandardFabLocation {
    getOffsetX(scaffoldGeometry, adjustment) {
      if (!(scaffoldGeometry.textDirection !== null)) dart.assertFailed(null, I[15], 641, 12, "scaffoldGeometry.textDirection != null");
      switch (scaffoldGeometry.textDirection) {
        case C[154] || CT.C154:
          {
            return floating_action_button_location.StandardFabLocation._leftOffsetX(scaffoldGeometry, adjustment);
          }
        case C[155] || CT.C155:
          {
            return floating_action_button_location.StandardFabLocation._rightOffsetX(scaffoldGeometry, adjustment);
          }
      }
    }
  };
  dart.addTypeTests(floating_action_button_location.FabEndOffsetX);
  dart.addTypeCaches(floating_action_button_location.FabEndOffsetX);
  floating_action_button_location.FabEndOffsetX[dart.implements] = () => [floating_action_button_location.StandardFabLocation];
  dart.setMethodSignature(floating_action_button_location.FabEndOffsetX, () => ({
    __proto__: dart.getMethods(floating_action_button_location.FabEndOffsetX.__proto__),
    getOffsetX: dart.fnType(core.double, [scaffold$.ScaffoldPrelayoutGeometry, core.double])
  }));
  dart.setLibraryUri(floating_action_button_location.FabEndOffsetX, I[14]);
  floating_action_button_location.FabMiniOffsetAdjustment = class FabMiniOffsetAdjustment extends floating_action_button_location.StandardFabLocation {};
  floating_action_button_location.FabMiniOffsetAdjustment[dart.mixinOn] = StandardFabLocation => class FabMiniOffsetAdjustment extends StandardFabLocation {
    isMini() {
      return true;
    }
  };
  dart.addTypeTests(floating_action_button_location.FabMiniOffsetAdjustment);
  dart.addTypeCaches(floating_action_button_location.FabMiniOffsetAdjustment);
  floating_action_button_location.FabMiniOffsetAdjustment[dart.implements] = () => [floating_action_button_location.StandardFabLocation];
  dart.setLibraryUri(floating_action_button_location.FabMiniOffsetAdjustment, I[14]);
  const StandardFabLocation_FabStartOffsetX$36 = class StandardFabLocation_FabStartOffsetX extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabStartOffsetX$36.new = function() {
    StandardFabLocation_FabStartOffsetX$36.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabStartOffsetX$36.prototype;
  dart.applyMixin(StandardFabLocation_FabStartOffsetX$36, floating_action_button_location.FabStartOffsetX);
  const StandardFabLocation_FabTopOffsetY$36 = class StandardFabLocation_FabTopOffsetY extends StandardFabLocation_FabStartOffsetX$36 {};
  (StandardFabLocation_FabTopOffsetY$36.new = function() {
    StandardFabLocation_FabTopOffsetY$36.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabTopOffsetY$36.prototype;
  dart.applyMixin(StandardFabLocation_FabTopOffsetY$36, floating_action_button_location.FabTopOffsetY);
  floating_action_button_location._StartTopFabLocation = class _StartTopFabLocation extends StandardFabLocation_FabTopOffsetY$36 {
    static ['_#new#tearOff']() {
      return new floating_action_button_location._StartTopFabLocation.new();
    }
    toString() {
      return "FloatingActionButtonLocation.startTop";
    }
  };
  (floating_action_button_location._StartTopFabLocation.new = function() {
    floating_action_button_location._StartTopFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._StartTopFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._StartTopFabLocation);
  dart.addTypeCaches(floating_action_button_location._StartTopFabLocation);
  dart.setLibraryUri(floating_action_button_location._StartTopFabLocation, I[14]);
  dart.defineExtensionMethods(floating_action_button_location._StartTopFabLocation, ['toString']);
  const StandardFabLocation_FabMiniOffsetAdjustment$36 = class StandardFabLocation_FabMiniOffsetAdjustment extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabMiniOffsetAdjustment$36.new = function() {
    StandardFabLocation_FabMiniOffsetAdjustment$36.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabMiniOffsetAdjustment$36.prototype;
  dart.applyMixin(StandardFabLocation_FabMiniOffsetAdjustment$36, floating_action_button_location.FabMiniOffsetAdjustment);
  const StandardFabLocation_FabStartOffsetX$36$ = class StandardFabLocation_FabStartOffsetX extends StandardFabLocation_FabMiniOffsetAdjustment$36 {};
  (StandardFabLocation_FabStartOffsetX$36$.new = function() {
    StandardFabLocation_FabStartOffsetX$36$.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabStartOffsetX$36$.prototype;
  dart.applyMixin(StandardFabLocation_FabStartOffsetX$36$, floating_action_button_location.FabStartOffsetX);
  const StandardFabLocation_FabTopOffsetY$36$ = class StandardFabLocation_FabTopOffsetY extends StandardFabLocation_FabStartOffsetX$36$ {};
  (StandardFabLocation_FabTopOffsetY$36$.new = function() {
    StandardFabLocation_FabTopOffsetY$36$.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabTopOffsetY$36$.prototype;
  dart.applyMixin(StandardFabLocation_FabTopOffsetY$36$, floating_action_button_location.FabTopOffsetY);
  floating_action_button_location._MiniStartTopFabLocation = class _MiniStartTopFabLocation extends StandardFabLocation_FabTopOffsetY$36$ {
    static ['_#new#tearOff']() {
      return new floating_action_button_location._MiniStartTopFabLocation.new();
    }
    toString() {
      return "FloatingActionButtonLocation.miniStartTop";
    }
  };
  (floating_action_button_location._MiniStartTopFabLocation.new = function() {
    floating_action_button_location._MiniStartTopFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._MiniStartTopFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._MiniStartTopFabLocation);
  dart.addTypeCaches(floating_action_button_location._MiniStartTopFabLocation);
  dart.setLibraryUri(floating_action_button_location._MiniStartTopFabLocation, I[14]);
  dart.defineExtensionMethods(floating_action_button_location._MiniStartTopFabLocation, ['toString']);
  const StandardFabLocation_FabCenterOffsetX$36 = class StandardFabLocation_FabCenterOffsetX extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabCenterOffsetX$36.new = function() {
    StandardFabLocation_FabCenterOffsetX$36.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabCenterOffsetX$36.prototype;
  dart.applyMixin(StandardFabLocation_FabCenterOffsetX$36, floating_action_button_location.FabCenterOffsetX);
  const StandardFabLocation_FabTopOffsetY$36$0 = class StandardFabLocation_FabTopOffsetY extends StandardFabLocation_FabCenterOffsetX$36 {};
  (StandardFabLocation_FabTopOffsetY$36$0.new = function() {
    StandardFabLocation_FabTopOffsetY$36$0.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabTopOffsetY$36$0.prototype;
  dart.applyMixin(StandardFabLocation_FabTopOffsetY$36$0, floating_action_button_location.FabTopOffsetY);
  floating_action_button_location._CenterTopFabLocation = class _CenterTopFabLocation extends StandardFabLocation_FabTopOffsetY$36$0 {
    static ['_#new#tearOff']() {
      return new floating_action_button_location._CenterTopFabLocation.new();
    }
    toString() {
      return "FloatingActionButtonLocation.centerTop";
    }
  };
  (floating_action_button_location._CenterTopFabLocation.new = function() {
    floating_action_button_location._CenterTopFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._CenterTopFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._CenterTopFabLocation);
  dart.addTypeCaches(floating_action_button_location._CenterTopFabLocation);
  dart.setLibraryUri(floating_action_button_location._CenterTopFabLocation, I[14]);
  dart.defineExtensionMethods(floating_action_button_location._CenterTopFabLocation, ['toString']);
  const StandardFabLocation_FabMiniOffsetAdjustment$36$ = class StandardFabLocation_FabMiniOffsetAdjustment extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabMiniOffsetAdjustment$36$.new = function() {
    StandardFabLocation_FabMiniOffsetAdjustment$36$.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabMiniOffsetAdjustment$36$.prototype;
  dart.applyMixin(StandardFabLocation_FabMiniOffsetAdjustment$36$, floating_action_button_location.FabMiniOffsetAdjustment);
  const StandardFabLocation_FabCenterOffsetX$36$ = class StandardFabLocation_FabCenterOffsetX extends StandardFabLocation_FabMiniOffsetAdjustment$36$ {};
  (StandardFabLocation_FabCenterOffsetX$36$.new = function() {
    StandardFabLocation_FabCenterOffsetX$36$.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabCenterOffsetX$36$.prototype;
  dart.applyMixin(StandardFabLocation_FabCenterOffsetX$36$, floating_action_button_location.FabCenterOffsetX);
  const StandardFabLocation_FabTopOffsetY$36$1 = class StandardFabLocation_FabTopOffsetY extends StandardFabLocation_FabCenterOffsetX$36$ {};
  (StandardFabLocation_FabTopOffsetY$36$1.new = function() {
    StandardFabLocation_FabTopOffsetY$36$1.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabTopOffsetY$36$1.prototype;
  dart.applyMixin(StandardFabLocation_FabTopOffsetY$36$1, floating_action_button_location.FabTopOffsetY);
  floating_action_button_location._MiniCenterTopFabLocation = class _MiniCenterTopFabLocation extends StandardFabLocation_FabTopOffsetY$36$1 {
    static ['_#new#tearOff']() {
      return new floating_action_button_location._MiniCenterTopFabLocation.new();
    }
    toString() {
      return "FloatingActionButtonLocation.miniCenterTop";
    }
  };
  (floating_action_button_location._MiniCenterTopFabLocation.new = function() {
    floating_action_button_location._MiniCenterTopFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._MiniCenterTopFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._MiniCenterTopFabLocation);
  dart.addTypeCaches(floating_action_button_location._MiniCenterTopFabLocation);
  dart.setLibraryUri(floating_action_button_location._MiniCenterTopFabLocation, I[14]);
  dart.defineExtensionMethods(floating_action_button_location._MiniCenterTopFabLocation, ['toString']);
  const StandardFabLocation_FabEndOffsetX$36 = class StandardFabLocation_FabEndOffsetX extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabEndOffsetX$36.new = function() {
    StandardFabLocation_FabEndOffsetX$36.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabEndOffsetX$36.prototype;
  dart.applyMixin(StandardFabLocation_FabEndOffsetX$36, floating_action_button_location.FabEndOffsetX);
  const StandardFabLocation_FabTopOffsetY$36$2 = class StandardFabLocation_FabTopOffsetY extends StandardFabLocation_FabEndOffsetX$36 {};
  (StandardFabLocation_FabTopOffsetY$36$2.new = function() {
    StandardFabLocation_FabTopOffsetY$36$2.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabTopOffsetY$36$2.prototype;
  dart.applyMixin(StandardFabLocation_FabTopOffsetY$36$2, floating_action_button_location.FabTopOffsetY);
  floating_action_button_location._EndTopFabLocation = class _EndTopFabLocation extends StandardFabLocation_FabTopOffsetY$36$2 {
    static ['_#new#tearOff']() {
      return new floating_action_button_location._EndTopFabLocation.new();
    }
    toString() {
      return "FloatingActionButtonLocation.endTop";
    }
  };
  (floating_action_button_location._EndTopFabLocation.new = function() {
    floating_action_button_location._EndTopFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._EndTopFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._EndTopFabLocation);
  dart.addTypeCaches(floating_action_button_location._EndTopFabLocation);
  dart.setLibraryUri(floating_action_button_location._EndTopFabLocation, I[14]);
  dart.defineExtensionMethods(floating_action_button_location._EndTopFabLocation, ['toString']);
  const StandardFabLocation_FabMiniOffsetAdjustment$36$0 = class StandardFabLocation_FabMiniOffsetAdjustment extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabMiniOffsetAdjustment$36$0.new = function() {
    StandardFabLocation_FabMiniOffsetAdjustment$36$0.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabMiniOffsetAdjustment$36$0.prototype;
  dart.applyMixin(StandardFabLocation_FabMiniOffsetAdjustment$36$0, floating_action_button_location.FabMiniOffsetAdjustment);
  const StandardFabLocation_FabEndOffsetX$36$ = class StandardFabLocation_FabEndOffsetX extends StandardFabLocation_FabMiniOffsetAdjustment$36$0 {};
  (StandardFabLocation_FabEndOffsetX$36$.new = function() {
    StandardFabLocation_FabEndOffsetX$36$.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabEndOffsetX$36$.prototype;
  dart.applyMixin(StandardFabLocation_FabEndOffsetX$36$, floating_action_button_location.FabEndOffsetX);
  const StandardFabLocation_FabTopOffsetY$36$3 = class StandardFabLocation_FabTopOffsetY extends StandardFabLocation_FabEndOffsetX$36$ {};
  (StandardFabLocation_FabTopOffsetY$36$3.new = function() {
    StandardFabLocation_FabTopOffsetY$36$3.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabTopOffsetY$36$3.prototype;
  dart.applyMixin(StandardFabLocation_FabTopOffsetY$36$3, floating_action_button_location.FabTopOffsetY);
  floating_action_button_location._MiniEndTopFabLocation = class _MiniEndTopFabLocation extends StandardFabLocation_FabTopOffsetY$36$3 {
    static ['_#new#tearOff']() {
      return new floating_action_button_location._MiniEndTopFabLocation.new();
    }
    toString() {
      return "FloatingActionButtonLocation.miniEndTop";
    }
  };
  (floating_action_button_location._MiniEndTopFabLocation.new = function() {
    floating_action_button_location._MiniEndTopFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._MiniEndTopFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._MiniEndTopFabLocation);
  dart.addTypeCaches(floating_action_button_location._MiniEndTopFabLocation);
  dart.setLibraryUri(floating_action_button_location._MiniEndTopFabLocation, I[14]);
  dart.defineExtensionMethods(floating_action_button_location._MiniEndTopFabLocation, ['toString']);
  const StandardFabLocation_FabStartOffsetX$36$0 = class StandardFabLocation_FabStartOffsetX extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabStartOffsetX$36$0.new = function() {
    StandardFabLocation_FabStartOffsetX$36$0.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabStartOffsetX$36$0.prototype;
  dart.applyMixin(StandardFabLocation_FabStartOffsetX$36$0, floating_action_button_location.FabStartOffsetX);
  const StandardFabLocation_FabFloatOffsetY$36 = class StandardFabLocation_FabFloatOffsetY extends StandardFabLocation_FabStartOffsetX$36$0 {};
  (StandardFabLocation_FabFloatOffsetY$36.new = function() {
    StandardFabLocation_FabFloatOffsetY$36.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabFloatOffsetY$36.prototype;
  dart.applyMixin(StandardFabLocation_FabFloatOffsetY$36, floating_action_button_location.FabFloatOffsetY);
  floating_action_button_location._StartFloatFabLocation = class _StartFloatFabLocation extends StandardFabLocation_FabFloatOffsetY$36 {
    static ['_#new#tearOff']() {
      return new floating_action_button_location._StartFloatFabLocation.new();
    }
    toString() {
      return "FloatingActionButtonLocation.startFloat";
    }
  };
  (floating_action_button_location._StartFloatFabLocation.new = function() {
    floating_action_button_location._StartFloatFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._StartFloatFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._StartFloatFabLocation);
  dart.addTypeCaches(floating_action_button_location._StartFloatFabLocation);
  dart.setLibraryUri(floating_action_button_location._StartFloatFabLocation, I[14]);
  dart.defineExtensionMethods(floating_action_button_location._StartFloatFabLocation, ['toString']);
  const StandardFabLocation_FabMiniOffsetAdjustment$36$1 = class StandardFabLocation_FabMiniOffsetAdjustment extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabMiniOffsetAdjustment$36$1.new = function() {
    StandardFabLocation_FabMiniOffsetAdjustment$36$1.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabMiniOffsetAdjustment$36$1.prototype;
  dart.applyMixin(StandardFabLocation_FabMiniOffsetAdjustment$36$1, floating_action_button_location.FabMiniOffsetAdjustment);
  const StandardFabLocation_FabStartOffsetX$36$1 = class StandardFabLocation_FabStartOffsetX extends StandardFabLocation_FabMiniOffsetAdjustment$36$1 {};
  (StandardFabLocation_FabStartOffsetX$36$1.new = function() {
    StandardFabLocation_FabStartOffsetX$36$1.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabStartOffsetX$36$1.prototype;
  dart.applyMixin(StandardFabLocation_FabStartOffsetX$36$1, floating_action_button_location.FabStartOffsetX);
  const StandardFabLocation_FabFloatOffsetY$36$ = class StandardFabLocation_FabFloatOffsetY extends StandardFabLocation_FabStartOffsetX$36$1 {};
  (StandardFabLocation_FabFloatOffsetY$36$.new = function() {
    StandardFabLocation_FabFloatOffsetY$36$.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabFloatOffsetY$36$.prototype;
  dart.applyMixin(StandardFabLocation_FabFloatOffsetY$36$, floating_action_button_location.FabFloatOffsetY);
  floating_action_button_location._MiniStartFloatFabLocation = class _MiniStartFloatFabLocation extends StandardFabLocation_FabFloatOffsetY$36$ {
    static ['_#new#tearOff']() {
      return new floating_action_button_location._MiniStartFloatFabLocation.new();
    }
    toString() {
      return "FloatingActionButtonLocation.miniStartFloat";
    }
  };
  (floating_action_button_location._MiniStartFloatFabLocation.new = function() {
    floating_action_button_location._MiniStartFloatFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._MiniStartFloatFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._MiniStartFloatFabLocation);
  dart.addTypeCaches(floating_action_button_location._MiniStartFloatFabLocation);
  dart.setLibraryUri(floating_action_button_location._MiniStartFloatFabLocation, I[14]);
  dart.defineExtensionMethods(floating_action_button_location._MiniStartFloatFabLocation, ['toString']);
  const StandardFabLocation_FabCenterOffsetX$36$0 = class StandardFabLocation_FabCenterOffsetX extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabCenterOffsetX$36$0.new = function() {
    StandardFabLocation_FabCenterOffsetX$36$0.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabCenterOffsetX$36$0.prototype;
  dart.applyMixin(StandardFabLocation_FabCenterOffsetX$36$0, floating_action_button_location.FabCenterOffsetX);
  const StandardFabLocation_FabFloatOffsetY$36$0 = class StandardFabLocation_FabFloatOffsetY extends StandardFabLocation_FabCenterOffsetX$36$0 {};
  (StandardFabLocation_FabFloatOffsetY$36$0.new = function() {
    StandardFabLocation_FabFloatOffsetY$36$0.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabFloatOffsetY$36$0.prototype;
  dart.applyMixin(StandardFabLocation_FabFloatOffsetY$36$0, floating_action_button_location.FabFloatOffsetY);
  floating_action_button_location._CenterFloatFabLocation = class _CenterFloatFabLocation extends StandardFabLocation_FabFloatOffsetY$36$0 {
    static ['_#new#tearOff']() {
      return new floating_action_button_location._CenterFloatFabLocation.new();
    }
    toString() {
      return "FloatingActionButtonLocation.centerFloat";
    }
  };
  (floating_action_button_location._CenterFloatFabLocation.new = function() {
    floating_action_button_location._CenterFloatFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._CenterFloatFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._CenterFloatFabLocation);
  dart.addTypeCaches(floating_action_button_location._CenterFloatFabLocation);
  dart.setLibraryUri(floating_action_button_location._CenterFloatFabLocation, I[14]);
  dart.defineExtensionMethods(floating_action_button_location._CenterFloatFabLocation, ['toString']);
  const StandardFabLocation_FabMiniOffsetAdjustment$36$2 = class StandardFabLocation_FabMiniOffsetAdjustment extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabMiniOffsetAdjustment$36$2.new = function() {
    StandardFabLocation_FabMiniOffsetAdjustment$36$2.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabMiniOffsetAdjustment$36$2.prototype;
  dart.applyMixin(StandardFabLocation_FabMiniOffsetAdjustment$36$2, floating_action_button_location.FabMiniOffsetAdjustment);
  const StandardFabLocation_FabCenterOffsetX$36$1 = class StandardFabLocation_FabCenterOffsetX extends StandardFabLocation_FabMiniOffsetAdjustment$36$2 {};
  (StandardFabLocation_FabCenterOffsetX$36$1.new = function() {
    StandardFabLocation_FabCenterOffsetX$36$1.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabCenterOffsetX$36$1.prototype;
  dart.applyMixin(StandardFabLocation_FabCenterOffsetX$36$1, floating_action_button_location.FabCenterOffsetX);
  const StandardFabLocation_FabFloatOffsetY$36$1 = class StandardFabLocation_FabFloatOffsetY extends StandardFabLocation_FabCenterOffsetX$36$1 {};
  (StandardFabLocation_FabFloatOffsetY$36$1.new = function() {
    StandardFabLocation_FabFloatOffsetY$36$1.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabFloatOffsetY$36$1.prototype;
  dart.applyMixin(StandardFabLocation_FabFloatOffsetY$36$1, floating_action_button_location.FabFloatOffsetY);
  floating_action_button_location._MiniCenterFloatFabLocation = class _MiniCenterFloatFabLocation extends StandardFabLocation_FabFloatOffsetY$36$1 {
    static ['_#new#tearOff']() {
      return new floating_action_button_location._MiniCenterFloatFabLocation.new();
    }
    toString() {
      return "FloatingActionButtonLocation.miniCenterFloat";
    }
  };
  (floating_action_button_location._MiniCenterFloatFabLocation.new = function() {
    floating_action_button_location._MiniCenterFloatFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._MiniCenterFloatFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._MiniCenterFloatFabLocation);
  dart.addTypeCaches(floating_action_button_location._MiniCenterFloatFabLocation);
  dart.setLibraryUri(floating_action_button_location._MiniCenterFloatFabLocation, I[14]);
  dart.defineExtensionMethods(floating_action_button_location._MiniCenterFloatFabLocation, ['toString']);
  const StandardFabLocation_FabEndOffsetX$36$0 = class StandardFabLocation_FabEndOffsetX extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabEndOffsetX$36$0.new = function() {
    StandardFabLocation_FabEndOffsetX$36$0.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabEndOffsetX$36$0.prototype;
  dart.applyMixin(StandardFabLocation_FabEndOffsetX$36$0, floating_action_button_location.FabEndOffsetX);
  const StandardFabLocation_FabFloatOffsetY$36$2 = class StandardFabLocation_FabFloatOffsetY extends StandardFabLocation_FabEndOffsetX$36$0 {};
  (StandardFabLocation_FabFloatOffsetY$36$2.new = function() {
    StandardFabLocation_FabFloatOffsetY$36$2.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabFloatOffsetY$36$2.prototype;
  dart.applyMixin(StandardFabLocation_FabFloatOffsetY$36$2, floating_action_button_location.FabFloatOffsetY);
  floating_action_button_location._EndFloatFabLocation = class _EndFloatFabLocation extends StandardFabLocation_FabFloatOffsetY$36$2 {
    static ['_#new#tearOff']() {
      return new floating_action_button_location._EndFloatFabLocation.new();
    }
    toString() {
      return "FloatingActionButtonLocation.endFloat";
    }
  };
  (floating_action_button_location._EndFloatFabLocation.new = function() {
    floating_action_button_location._EndFloatFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._EndFloatFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._EndFloatFabLocation);
  dart.addTypeCaches(floating_action_button_location._EndFloatFabLocation);
  dart.setLibraryUri(floating_action_button_location._EndFloatFabLocation, I[14]);
  dart.defineExtensionMethods(floating_action_button_location._EndFloatFabLocation, ['toString']);
  const StandardFabLocation_FabMiniOffsetAdjustment$36$3 = class StandardFabLocation_FabMiniOffsetAdjustment extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabMiniOffsetAdjustment$36$3.new = function() {
    StandardFabLocation_FabMiniOffsetAdjustment$36$3.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabMiniOffsetAdjustment$36$3.prototype;
  dart.applyMixin(StandardFabLocation_FabMiniOffsetAdjustment$36$3, floating_action_button_location.FabMiniOffsetAdjustment);
  const StandardFabLocation_FabEndOffsetX$36$1 = class StandardFabLocation_FabEndOffsetX extends StandardFabLocation_FabMiniOffsetAdjustment$36$3 {};
  (StandardFabLocation_FabEndOffsetX$36$1.new = function() {
    StandardFabLocation_FabEndOffsetX$36$1.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabEndOffsetX$36$1.prototype;
  dart.applyMixin(StandardFabLocation_FabEndOffsetX$36$1, floating_action_button_location.FabEndOffsetX);
  const StandardFabLocation_FabFloatOffsetY$36$3 = class StandardFabLocation_FabFloatOffsetY extends StandardFabLocation_FabEndOffsetX$36$1 {};
  (StandardFabLocation_FabFloatOffsetY$36$3.new = function() {
    StandardFabLocation_FabFloatOffsetY$36$3.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabFloatOffsetY$36$3.prototype;
  dart.applyMixin(StandardFabLocation_FabFloatOffsetY$36$3, floating_action_button_location.FabFloatOffsetY);
  floating_action_button_location._MiniEndFloatFabLocation = class _MiniEndFloatFabLocation extends StandardFabLocation_FabFloatOffsetY$36$3 {
    static ['_#new#tearOff']() {
      return new floating_action_button_location._MiniEndFloatFabLocation.new();
    }
    toString() {
      return "FloatingActionButtonLocation.miniEndFloat";
    }
  };
  (floating_action_button_location._MiniEndFloatFabLocation.new = function() {
    floating_action_button_location._MiniEndFloatFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._MiniEndFloatFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._MiniEndFloatFabLocation);
  dart.addTypeCaches(floating_action_button_location._MiniEndFloatFabLocation);
  dart.setLibraryUri(floating_action_button_location._MiniEndFloatFabLocation, I[14]);
  dart.defineExtensionMethods(floating_action_button_location._MiniEndFloatFabLocation, ['toString']);
  const StandardFabLocation_FabStartOffsetX$36$2 = class StandardFabLocation_FabStartOffsetX extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabStartOffsetX$36$2.new = function() {
    StandardFabLocation_FabStartOffsetX$36$2.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabStartOffsetX$36$2.prototype;
  dart.applyMixin(StandardFabLocation_FabStartOffsetX$36$2, floating_action_button_location.FabStartOffsetX);
  const StandardFabLocation_FabDockedOffsetY$36 = class StandardFabLocation_FabDockedOffsetY extends StandardFabLocation_FabStartOffsetX$36$2 {};
  (StandardFabLocation_FabDockedOffsetY$36.new = function() {
    StandardFabLocation_FabDockedOffsetY$36.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabDockedOffsetY$36.prototype;
  dart.applyMixin(StandardFabLocation_FabDockedOffsetY$36, floating_action_button_location.FabDockedOffsetY);
  floating_action_button_location._StartDockedFabLocation = class _StartDockedFabLocation extends StandardFabLocation_FabDockedOffsetY$36 {
    static ['_#new#tearOff']() {
      return new floating_action_button_location._StartDockedFabLocation.new();
    }
    toString() {
      return "FloatingActionButtonLocation.startDocked";
    }
  };
  (floating_action_button_location._StartDockedFabLocation.new = function() {
    floating_action_button_location._StartDockedFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._StartDockedFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._StartDockedFabLocation);
  dart.addTypeCaches(floating_action_button_location._StartDockedFabLocation);
  dart.setLibraryUri(floating_action_button_location._StartDockedFabLocation, I[14]);
  dart.defineExtensionMethods(floating_action_button_location._StartDockedFabLocation, ['toString']);
  const StandardFabLocation_FabMiniOffsetAdjustment$36$4 = class StandardFabLocation_FabMiniOffsetAdjustment extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabMiniOffsetAdjustment$36$4.new = function() {
    StandardFabLocation_FabMiniOffsetAdjustment$36$4.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabMiniOffsetAdjustment$36$4.prototype;
  dart.applyMixin(StandardFabLocation_FabMiniOffsetAdjustment$36$4, floating_action_button_location.FabMiniOffsetAdjustment);
  const StandardFabLocation_FabStartOffsetX$36$3 = class StandardFabLocation_FabStartOffsetX extends StandardFabLocation_FabMiniOffsetAdjustment$36$4 {};
  (StandardFabLocation_FabStartOffsetX$36$3.new = function() {
    StandardFabLocation_FabStartOffsetX$36$3.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabStartOffsetX$36$3.prototype;
  dart.applyMixin(StandardFabLocation_FabStartOffsetX$36$3, floating_action_button_location.FabStartOffsetX);
  const StandardFabLocation_FabDockedOffsetY$36$ = class StandardFabLocation_FabDockedOffsetY extends StandardFabLocation_FabStartOffsetX$36$3 {};
  (StandardFabLocation_FabDockedOffsetY$36$.new = function() {
    StandardFabLocation_FabDockedOffsetY$36$.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabDockedOffsetY$36$.prototype;
  dart.applyMixin(StandardFabLocation_FabDockedOffsetY$36$, floating_action_button_location.FabDockedOffsetY);
  floating_action_button_location._MiniStartDockedFabLocation = class _MiniStartDockedFabLocation extends StandardFabLocation_FabDockedOffsetY$36$ {
    static ['_#new#tearOff']() {
      return new floating_action_button_location._MiniStartDockedFabLocation.new();
    }
    toString() {
      return "FloatingActionButtonLocation.miniStartDocked";
    }
  };
  (floating_action_button_location._MiniStartDockedFabLocation.new = function() {
    floating_action_button_location._MiniStartDockedFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._MiniStartDockedFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._MiniStartDockedFabLocation);
  dart.addTypeCaches(floating_action_button_location._MiniStartDockedFabLocation);
  dart.setLibraryUri(floating_action_button_location._MiniStartDockedFabLocation, I[14]);
  dart.defineExtensionMethods(floating_action_button_location._MiniStartDockedFabLocation, ['toString']);
  const StandardFabLocation_FabCenterOffsetX$36$2 = class StandardFabLocation_FabCenterOffsetX extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabCenterOffsetX$36$2.new = function() {
    StandardFabLocation_FabCenterOffsetX$36$2.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabCenterOffsetX$36$2.prototype;
  dart.applyMixin(StandardFabLocation_FabCenterOffsetX$36$2, floating_action_button_location.FabCenterOffsetX);
  const StandardFabLocation_FabDockedOffsetY$36$0 = class StandardFabLocation_FabDockedOffsetY extends StandardFabLocation_FabCenterOffsetX$36$2 {};
  (StandardFabLocation_FabDockedOffsetY$36$0.new = function() {
    StandardFabLocation_FabDockedOffsetY$36$0.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabDockedOffsetY$36$0.prototype;
  dart.applyMixin(StandardFabLocation_FabDockedOffsetY$36$0, floating_action_button_location.FabDockedOffsetY);
  floating_action_button_location._CenterDockedFabLocation = class _CenterDockedFabLocation extends StandardFabLocation_FabDockedOffsetY$36$0 {
    static ['_#new#tearOff']() {
      return new floating_action_button_location._CenterDockedFabLocation.new();
    }
    toString() {
      return "FloatingActionButtonLocation.centerDocked";
    }
  };
  (floating_action_button_location._CenterDockedFabLocation.new = function() {
    floating_action_button_location._CenterDockedFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._CenterDockedFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._CenterDockedFabLocation);
  dart.addTypeCaches(floating_action_button_location._CenterDockedFabLocation);
  dart.setLibraryUri(floating_action_button_location._CenterDockedFabLocation, I[14]);
  dart.defineExtensionMethods(floating_action_button_location._CenterDockedFabLocation, ['toString']);
  const StandardFabLocation_FabMiniOffsetAdjustment$36$5 = class StandardFabLocation_FabMiniOffsetAdjustment extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabMiniOffsetAdjustment$36$5.new = function() {
    StandardFabLocation_FabMiniOffsetAdjustment$36$5.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabMiniOffsetAdjustment$36$5.prototype;
  dart.applyMixin(StandardFabLocation_FabMiniOffsetAdjustment$36$5, floating_action_button_location.FabMiniOffsetAdjustment);
  const StandardFabLocation_FabCenterOffsetX$36$3 = class StandardFabLocation_FabCenterOffsetX extends StandardFabLocation_FabMiniOffsetAdjustment$36$5 {};
  (StandardFabLocation_FabCenterOffsetX$36$3.new = function() {
    StandardFabLocation_FabCenterOffsetX$36$3.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabCenterOffsetX$36$3.prototype;
  dart.applyMixin(StandardFabLocation_FabCenterOffsetX$36$3, floating_action_button_location.FabCenterOffsetX);
  const StandardFabLocation_FabDockedOffsetY$36$1 = class StandardFabLocation_FabDockedOffsetY extends StandardFabLocation_FabCenterOffsetX$36$3 {};
  (StandardFabLocation_FabDockedOffsetY$36$1.new = function() {
    StandardFabLocation_FabDockedOffsetY$36$1.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabDockedOffsetY$36$1.prototype;
  dart.applyMixin(StandardFabLocation_FabDockedOffsetY$36$1, floating_action_button_location.FabDockedOffsetY);
  floating_action_button_location._MiniCenterDockedFabLocation = class _MiniCenterDockedFabLocation extends StandardFabLocation_FabDockedOffsetY$36$1 {
    static ['_#new#tearOff']() {
      return new floating_action_button_location._MiniCenterDockedFabLocation.new();
    }
    toString() {
      return "FloatingActionButtonLocation.miniCenterDocked";
    }
  };
  (floating_action_button_location._MiniCenterDockedFabLocation.new = function() {
    floating_action_button_location._MiniCenterDockedFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._MiniCenterDockedFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._MiniCenterDockedFabLocation);
  dart.addTypeCaches(floating_action_button_location._MiniCenterDockedFabLocation);
  dart.setLibraryUri(floating_action_button_location._MiniCenterDockedFabLocation, I[14]);
  dart.defineExtensionMethods(floating_action_button_location._MiniCenterDockedFabLocation, ['toString']);
  const StandardFabLocation_FabEndOffsetX$36$2 = class StandardFabLocation_FabEndOffsetX extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabEndOffsetX$36$2.new = function() {
    StandardFabLocation_FabEndOffsetX$36$2.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabEndOffsetX$36$2.prototype;
  dart.applyMixin(StandardFabLocation_FabEndOffsetX$36$2, floating_action_button_location.FabEndOffsetX);
  const StandardFabLocation_FabDockedOffsetY$36$2 = class StandardFabLocation_FabDockedOffsetY extends StandardFabLocation_FabEndOffsetX$36$2 {};
  (StandardFabLocation_FabDockedOffsetY$36$2.new = function() {
    StandardFabLocation_FabDockedOffsetY$36$2.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabDockedOffsetY$36$2.prototype;
  dart.applyMixin(StandardFabLocation_FabDockedOffsetY$36$2, floating_action_button_location.FabDockedOffsetY);
  floating_action_button_location._EndDockedFabLocation = class _EndDockedFabLocation extends StandardFabLocation_FabDockedOffsetY$36$2 {
    static ['_#new#tearOff']() {
      return new floating_action_button_location._EndDockedFabLocation.new();
    }
    toString() {
      return "FloatingActionButtonLocation.endDocked";
    }
  };
  (floating_action_button_location._EndDockedFabLocation.new = function() {
    floating_action_button_location._EndDockedFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._EndDockedFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._EndDockedFabLocation);
  dart.addTypeCaches(floating_action_button_location._EndDockedFabLocation);
  dart.setLibraryUri(floating_action_button_location._EndDockedFabLocation, I[14]);
  dart.defineExtensionMethods(floating_action_button_location._EndDockedFabLocation, ['toString']);
  const StandardFabLocation_FabMiniOffsetAdjustment$36$6 = class StandardFabLocation_FabMiniOffsetAdjustment extends floating_action_button_location.StandardFabLocation {};
  (StandardFabLocation_FabMiniOffsetAdjustment$36$6.new = function() {
    StandardFabLocation_FabMiniOffsetAdjustment$36$6.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabMiniOffsetAdjustment$36$6.prototype;
  dart.applyMixin(StandardFabLocation_FabMiniOffsetAdjustment$36$6, floating_action_button_location.FabMiniOffsetAdjustment);
  const StandardFabLocation_FabEndOffsetX$36$3 = class StandardFabLocation_FabEndOffsetX extends StandardFabLocation_FabMiniOffsetAdjustment$36$6 {};
  (StandardFabLocation_FabEndOffsetX$36$3.new = function() {
    StandardFabLocation_FabEndOffsetX$36$3.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabEndOffsetX$36$3.prototype;
  dart.applyMixin(StandardFabLocation_FabEndOffsetX$36$3, floating_action_button_location.FabEndOffsetX);
  const StandardFabLocation_FabDockedOffsetY$36$3 = class StandardFabLocation_FabDockedOffsetY extends StandardFabLocation_FabEndOffsetX$36$3 {};
  (StandardFabLocation_FabDockedOffsetY$36$3.new = function() {
    StandardFabLocation_FabDockedOffsetY$36$3.__proto__.new.call(this);
  }).prototype = StandardFabLocation_FabDockedOffsetY$36$3.prototype;
  dart.applyMixin(StandardFabLocation_FabDockedOffsetY$36$3, floating_action_button_location.FabDockedOffsetY);
  floating_action_button_location._MiniEndDockedFabLocation = class _MiniEndDockedFabLocation extends StandardFabLocation_FabDockedOffsetY$36$3 {
    static ['_#new#tearOff']() {
      return new floating_action_button_location._MiniEndDockedFabLocation.new();
    }
    toString() {
      return "FloatingActionButtonLocation.miniEndDocked";
    }
  };
  (floating_action_button_location._MiniEndDockedFabLocation.new = function() {
    floating_action_button_location._MiniEndDockedFabLocation.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._MiniEndDockedFabLocation.prototype;
  dart.addTypeTests(floating_action_button_location._MiniEndDockedFabLocation);
  dart.addTypeCaches(floating_action_button_location._MiniEndDockedFabLocation);
  dart.setLibraryUri(floating_action_button_location._MiniEndDockedFabLocation, I[14]);
  dart.defineExtensionMethods(floating_action_button_location._MiniEndDockedFabLocation, ['toString']);
  floating_action_button_location.FloatingActionButtonAnimator = class FloatingActionButtonAnimator extends core.Object {
    getAnimationRestart(previousValue) {
      return 0.0;
    }
    toString() {
      return object$.objectRuntimeType(this, "FloatingActionButtonAnimator");
    }
  };
  (floating_action_button_location.FloatingActionButtonAnimator.new = function() {
    ;
  }).prototype = floating_action_button_location.FloatingActionButtonAnimator.prototype;
  dart.addTypeTests(floating_action_button_location.FloatingActionButtonAnimator);
  dart.addTypeCaches(floating_action_button_location.FloatingActionButtonAnimator);
  dart.setMethodSignature(floating_action_button_location.FloatingActionButtonAnimator, () => ({
    __proto__: dart.getMethods(floating_action_button_location.FloatingActionButtonAnimator.__proto__),
    getAnimationRestart: dart.fnType(core.double, [core.double])
  }));
  dart.setLibraryUri(floating_action_button_location.FloatingActionButtonAnimator, I[14]);
  dart.setStaticFieldSignature(floating_action_button_location.FloatingActionButtonAnimator, () => ['scaling']);
  dart.defineExtensionMethods(floating_action_button_location.FloatingActionButtonAnimator, ['toString']);
  dart.defineLazy(floating_action_button_location.FloatingActionButtonAnimator, {
    /*floating_action_button_location.FloatingActionButtonAnimator.scaling*/get scaling() {
      return C[156] || CT.C156;
    }
  }, false);
  floating_action_button_location._ScalingFabMotionAnimator = class _ScalingFabMotionAnimator extends floating_action_button_location.FloatingActionButtonAnimator {
    static ['_#new#tearOff']() {
      return new floating_action_button_location._ScalingFabMotionAnimator.new();
    }
    getOffset(opts) {
      let begin = opts && 'begin' in opts ? opts.begin : null;
      let end = opts && 'end' in opts ? opts.end : null;
      let progress = opts && 'progress' in opts ? opts.progress : null;
      if (progress < 0.5) {
        return begin;
      } else {
        return end;
      }
    }
    getScaleAnimation(opts) {
      let parent = opts && 'parent' in opts ? opts.parent : null;
      let curve = C[157] || CT.C157;
      return new (T$._AnimationSwapOfdouble()).new(new animations.ReverseAnimation.new(parent.drive(core.double, new tween.CurveTween.new({curve: curve.flipped}))), parent.drive(core.double, new tween.CurveTween.new({curve: curve})), parent, 0.5);
    }
    getRotationAnimation(opts) {
      let parent = opts && 'parent' in opts ? opts.parent : null;
      return new (T$._AnimationSwapOfdouble()).new(parent.drive(core.double, floating_action_button_location._ScalingFabMotionAnimator._rotationTween), new animations.ReverseAnimation.new(parent.drive(core.double, floating_action_button_location._ScalingFabMotionAnimator._thresholdCenterTween)), parent, 0.5);
    }
    getAnimationRestart(previousValue) {
      return math.min(core.double, 1.0 - previousValue, previousValue);
    }
  };
  (floating_action_button_location._ScalingFabMotionAnimator.new = function() {
    floating_action_button_location._ScalingFabMotionAnimator.__proto__.new.call(this);
    ;
  }).prototype = floating_action_button_location._ScalingFabMotionAnimator.prototype;
  dart.addTypeTests(floating_action_button_location._ScalingFabMotionAnimator);
  dart.addTypeCaches(floating_action_button_location._ScalingFabMotionAnimator);
  dart.setMethodSignature(floating_action_button_location._ScalingFabMotionAnimator, () => ({
    __proto__: dart.getMethods(floating_action_button_location._ScalingFabMotionAnimator.__proto__),
    getOffset: dart.fnType(ui.Offset, [], {}, {begin: ui.Offset, end: ui.Offset, progress: core.double}),
    getScaleAnimation: dart.fnType(animation$.Animation$(core.double), [], {}, {parent: animation$.Animation$(core.double)}),
    getRotationAnimation: dart.fnType(animation$.Animation$(core.double), [], {}, {parent: animation$.Animation$(core.double)})
  }));
  dart.setLibraryUri(floating_action_button_location._ScalingFabMotionAnimator, I[14]);
  dart.setStaticFieldSignature(floating_action_button_location._ScalingFabMotionAnimator, () => ['_rotationTween', '_thresholdCenterTween']);
  dart.defineLazy(floating_action_button_location._ScalingFabMotionAnimator, {
    /*floating_action_button_location._ScalingFabMotionAnimator._rotationTween*/get _rotationTween() {
      return new (T$.TweenOfdouble()).new({begin: 1.0 - 0.125 * 2.0, end: 1.0});
    },
    /*floating_action_button_location._ScalingFabMotionAnimator._thresholdCenterTween*/get _thresholdCenterTween() {
      return new tween.CurveTween.new({curve: C[159] || CT.C159});
    }
  }, false);
  const _is__AnimationSwap_default = Symbol('_is__AnimationSwap_default');
  floating_action_button_location._AnimationSwap$ = dart.generic(T => {
    class _AnimationSwap extends animations.CompoundAnimation$(T) {
      static ['_#new#tearOff'](T, first, next, parent, swapThreshold) {
        return new (floating_action_button_location._AnimationSwap$(T)).new(first, next, parent, swapThreshold);
      }
      get value() {
        return this.parent.value < this.swapThreshold ? this.first.value : this.next.value;
      }
    }
    (_AnimationSwap.new = function(first, next, parent, swapThreshold) {
      this.parent = parent;
      this.swapThreshold = swapThreshold;
      _AnimationSwap.__proto__.new.call(this, {first: first, next: next});
      ;
    }).prototype = _AnimationSwap.prototype;
    dart.addTypeTests(_AnimationSwap);
    _AnimationSwap.prototype[_is__AnimationSwap_default] = true;
    dart.addTypeCaches(_AnimationSwap);
    dart.setGetterSignature(_AnimationSwap, () => ({
      __proto__: dart.getGetters(_AnimationSwap.__proto__),
      value: T
    }));
    dart.setLibraryUri(_AnimationSwap, I[14]);
    dart.setFieldSignature(_AnimationSwap, () => ({
      __proto__: dart.getFields(_AnimationSwap.__proto__),
      parent: dart.finalFieldType(animation$.Animation$(core.double)),
      swapThreshold: dart.finalFieldType(core.double)
    }));
    return _AnimationSwap;
  });
  floating_action_button_location._AnimationSwap = floating_action_button_location._AnimationSwap$();
  dart.addTypeTests(floating_action_button_location._AnimationSwap, _is__AnimationSwap_default);
  dart.defineLazy(floating_action_button_location, {
    /*floating_action_button_location.kFloatingActionButtonMargin*/get kFloatingActionButtonMargin() {
      return 16;
    },
    /*floating_action_button_location.kFloatingActionButtonSegue*/get kFloatingActionButtonSegue() {
      return C[160] || CT.C160;
    },
    /*floating_action_button_location.kFloatingActionButtonTurnInterval*/get kFloatingActionButtonTurnInterval() {
      return 0.125;
    },
    /*floating_action_button_location.kMiniButtonOffsetAdjustment*/get kMiniButtonOffsetAdjustment() {
      return 4;
    }
  }, false);
  floating_action_button._DefaultHeroTag = class _DefaultHeroTag extends core.Object {
    static ['_#new#tearOff']() {
      return new floating_action_button._DefaultHeroTag.new();
    }
    toString() {
      return "<default FloatingActionButton tag>";
    }
  };
  (floating_action_button._DefaultHeroTag.new = function() {
    ;
  }).prototype = floating_action_button._DefaultHeroTag.prototype;
  dart.addTypeTests(floating_action_button._DefaultHeroTag);
  dart.addTypeCaches(floating_action_button._DefaultHeroTag);
  dart.setLibraryUri(floating_action_button._DefaultHeroTag, I[16]);
  dart.defineExtensionMethods(floating_action_button._DefaultHeroTag, ['toString']);
  floating_action_button._FloatingActionButtonType = class _FloatingActionButtonType extends core._Enum {
    toString() {
      return "_FloatingActionButtonType." + this[S._name];
    }
  };
  (floating_action_button._FloatingActionButtonType.new = function(index, name) {
    floating_action_button._FloatingActionButtonType.__proto__.new.call(this, index, name);
    ;
  }).prototype = floating_action_button._FloatingActionButtonType.prototype;
  dart.addTypeTests(floating_action_button._FloatingActionButtonType);
  dart.addTypeCaches(floating_action_button._FloatingActionButtonType);
  dart.setLibraryUri(floating_action_button._FloatingActionButtonType, I[16]);
  dart.setStaticFieldSignature(floating_action_button._FloatingActionButtonType, () => ['values', 'regular', 'small', 'large', 'extended']);
  dart.defineExtensionMethods(floating_action_button._FloatingActionButtonType, ['toString']);
  dart.defineLazy(floating_action_button._FloatingActionButtonType, {
    /*floating_action_button._FloatingActionButtonType.values*/get values() {
      return C[161] || CT.C161;
    },
    /*floating_action_button._FloatingActionButtonType.regular*/get regular() {
      return C[162] || CT.C162;
    },
    /*floating_action_button._FloatingActionButtonType.small*/get small() {
      return C[163] || CT.C163;
    },
    /*floating_action_button._FloatingActionButtonType.large*/get large() {
      return C[164] || CT.C164;
    },
    /*floating_action_button._FloatingActionButtonType.extended*/get extended() {
      return C[165] || CT.C165;
    }
  }, false);
  floating_action_button.FloatingActionButton = class FloatingActionButton extends framework.StatelessWidget {
    get child() {
      return this[S.child$2];
    }
    set child(value) {
      super.child = value;
    }
    get tooltip() {
      return this[S.tooltip$1];
    }
    set tooltip(value) {
      super.tooltip = value;
    }
    get foregroundColor() {
      return this[S.foregroundColor$1];
    }
    set foregroundColor(value) {
      super.foregroundColor = value;
    }
    get backgroundColor() {
      return this[S.backgroundColor$2];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get focusColor() {
      return this[S.focusColor$1];
    }
    set focusColor(value) {
      super.focusColor = value;
    }
    get hoverColor() {
      return this[S.hoverColor$1];
    }
    set hoverColor(value) {
      super.hoverColor = value;
    }
    get splashColor() {
      return this[S.splashColor$1];
    }
    set splashColor(value) {
      super.splashColor = value;
    }
    get heroTag() {
      return this[S.heroTag];
    }
    set heroTag(value) {
      super.heroTag = value;
    }
    get onPressed() {
      return this[S.onPressed$6];
    }
    set onPressed(value) {
      super.onPressed = value;
    }
    get mouseCursor() {
      return this[S.mouseCursor$2];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    get elevation() {
      return this[S.elevation$2];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get focusElevation() {
      return this[S.focusElevation];
    }
    set focusElevation(value) {
      super.focusElevation = value;
    }
    get hoverElevation() {
      return this[S.hoverElevation];
    }
    set hoverElevation(value) {
      super.hoverElevation = value;
    }
    get highlightElevation() {
      return this[S.highlightElevation];
    }
    set highlightElevation(value) {
      super.highlightElevation = value;
    }
    get disabledElevation() {
      return this[S.disabledElevation];
    }
    set disabledElevation(value) {
      super.disabledElevation = value;
    }
    get mini() {
      return this[S.mini];
    }
    set mini(value) {
      super.mini = value;
    }
    get shape() {
      return this[S.shape$2];
    }
    set shape(value) {
      super.shape = value;
    }
    get clipBehavior() {
      return this[S.clipBehavior$2];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    get isExtended() {
      return this[S.isExtended];
    }
    set isExtended(value) {
      super.isExtended = value;
    }
    get focusNode() {
      return this[S.focusNode$3];
    }
    set focusNode(value) {
      super.focusNode = value;
    }
    get autofocus() {
      return this[S.autofocus$3];
    }
    set autofocus(value) {
      super.autofocus = value;
    }
    get materialTapTargetSize() {
      return this[S.materialTapTargetSize];
    }
    set materialTapTargetSize(value) {
      super.materialTapTargetSize = value;
    }
    get enableFeedback() {
      return this[S.enableFeedback$2];
    }
    set enableFeedback(value) {
      super.enableFeedback = value;
    }
    get extendedIconLabelSpacing() {
      return this[S.extendedIconLabelSpacing];
    }
    set extendedIconLabelSpacing(value) {
      super.extendedIconLabelSpacing = value;
    }
    get extendedPadding() {
      return this[S.extendedPadding];
    }
    set extendedPadding(value) {
      super.extendedPadding = value;
    }
    get extendedTextStyle() {
      return this[S.extendedTextStyle];
    }
    set extendedTextStyle(value) {
      super.extendedTextStyle = value;
    }
    get [S._floatingActionButtonType$1]() {
      return this[S._floatingActionButtonType];
    }
    set [S._floatingActionButtonType$1](value) {
      super[S._floatingActionButtonType$1] = value;
    }
    get [S._extendedLabel$1]() {
      return this[S._extendedLabel];
    }
    set [S._extendedLabel$1](value) {
      super[S._extendedLabel$1] = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let child = opts && 'child' in opts ? opts.child : null;
      let tooltip = opts && 'tooltip' in opts ? opts.tooltip : null;
      let foregroundColor = opts && 'foregroundColor' in opts ? opts.foregroundColor : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
      let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
      let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
      let heroTag = opts && 'heroTag' in opts ? opts.heroTag : C[166] || CT.C166;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let focusElevation = opts && 'focusElevation' in opts ? opts.focusElevation : null;
      let hoverElevation = opts && 'hoverElevation' in opts ? opts.hoverElevation : null;
      let highlightElevation = opts && 'highlightElevation' in opts ? opts.highlightElevation : null;
      let disabledElevation = opts && 'disabledElevation' in opts ? opts.disabledElevation : null;
      let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
      let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
      let mini = opts && 'mini' in opts ? opts.mini : false;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[71] || CT.C71;
      let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
      let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
      let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
      let isExtended = opts && 'isExtended' in opts ? opts.isExtended : false;
      let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
      return new floating_action_button.FloatingActionButton.new({key: key, child: child, tooltip: tooltip, foregroundColor: foregroundColor, backgroundColor: backgroundColor, focusColor: focusColor, hoverColor: hoverColor, splashColor: splashColor, heroTag: heroTag, elevation: elevation, focusElevation: focusElevation, hoverElevation: hoverElevation, highlightElevation: highlightElevation, disabledElevation: disabledElevation, onPressed: onPressed, mouseCursor: mouseCursor, mini: mini, shape: shape, clipBehavior: clipBehavior, focusNode: focusNode, autofocus: autofocus, materialTapTargetSize: materialTapTargetSize, isExtended: isExtended, enableFeedback: enableFeedback, $creationLocationd_0dea112b090073317d4: C[168] || CT.C168});
    }
    static ['_#small#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let child = opts && 'child' in opts ? opts.child : null;
      let tooltip = opts && 'tooltip' in opts ? opts.tooltip : null;
      let foregroundColor = opts && 'foregroundColor' in opts ? opts.foregroundColor : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
      let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
      let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
      let heroTag = opts && 'heroTag' in opts ? opts.heroTag : C[166] || CT.C166;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let focusElevation = opts && 'focusElevation' in opts ? opts.focusElevation : null;
      let hoverElevation = opts && 'hoverElevation' in opts ? opts.hoverElevation : null;
      let highlightElevation = opts && 'highlightElevation' in opts ? opts.highlightElevation : null;
      let disabledElevation = opts && 'disabledElevation' in opts ? opts.disabledElevation : null;
      let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
      let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[71] || CT.C71;
      let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
      let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
      let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
      let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
      return new floating_action_button.FloatingActionButton.small({key: key, child: child, tooltip: tooltip, foregroundColor: foregroundColor, backgroundColor: backgroundColor, focusColor: focusColor, hoverColor: hoverColor, splashColor: splashColor, heroTag: heroTag, elevation: elevation, focusElevation: focusElevation, hoverElevation: hoverElevation, highlightElevation: highlightElevation, disabledElevation: disabledElevation, onPressed: onPressed, mouseCursor: mouseCursor, shape: shape, clipBehavior: clipBehavior, focusNode: focusNode, autofocus: autofocus, materialTapTargetSize: materialTapTargetSize, enableFeedback: enableFeedback, $creationLocationd_0dea112b090073317d4: C[169] || CT.C169});
    }
    static ['_#large#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let child = opts && 'child' in opts ? opts.child : null;
      let tooltip = opts && 'tooltip' in opts ? opts.tooltip : null;
      let foregroundColor = opts && 'foregroundColor' in opts ? opts.foregroundColor : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
      let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
      let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
      let heroTag = opts && 'heroTag' in opts ? opts.heroTag : C[166] || CT.C166;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let focusElevation = opts && 'focusElevation' in opts ? opts.focusElevation : null;
      let hoverElevation = opts && 'hoverElevation' in opts ? opts.hoverElevation : null;
      let highlightElevation = opts && 'highlightElevation' in opts ? opts.highlightElevation : null;
      let disabledElevation = opts && 'disabledElevation' in opts ? opts.disabledElevation : null;
      let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
      let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[71] || CT.C71;
      let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
      let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
      let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
      let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
      return new floating_action_button.FloatingActionButton.large({key: key, child: child, tooltip: tooltip, foregroundColor: foregroundColor, backgroundColor: backgroundColor, focusColor: focusColor, hoverColor: hoverColor, splashColor: splashColor, heroTag: heroTag, elevation: elevation, focusElevation: focusElevation, hoverElevation: hoverElevation, highlightElevation: highlightElevation, disabledElevation: disabledElevation, onPressed: onPressed, mouseCursor: mouseCursor, shape: shape, clipBehavior: clipBehavior, focusNode: focusNode, autofocus: autofocus, materialTapTargetSize: materialTapTargetSize, enableFeedback: enableFeedback, $creationLocationd_0dea112b090073317d4: C[170] || CT.C170});
    }
    static ['_#extended#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let tooltip = opts && 'tooltip' in opts ? opts.tooltip : null;
      let foregroundColor = opts && 'foregroundColor' in opts ? opts.foregroundColor : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
      let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
      let heroTag = opts && 'heroTag' in opts ? opts.heroTag : C[166] || CT.C166;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let focusElevation = opts && 'focusElevation' in opts ? opts.focusElevation : null;
      let hoverElevation = opts && 'hoverElevation' in opts ? opts.hoverElevation : null;
      let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
      let highlightElevation = opts && 'highlightElevation' in opts ? opts.highlightElevation : null;
      let disabledElevation = opts && 'disabledElevation' in opts ? opts.disabledElevation : null;
      let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
      let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : C[167] || CT.C167;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let isExtended = opts && 'isExtended' in opts ? opts.isExtended : true;
      let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[71] || CT.C71;
      let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
      let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
      let extendedIconLabelSpacing = opts && 'extendedIconLabelSpacing' in opts ? opts.extendedIconLabelSpacing : null;
      let extendedPadding = opts && 'extendedPadding' in opts ? opts.extendedPadding : null;
      let extendedTextStyle = opts && 'extendedTextStyle' in opts ? opts.extendedTextStyle : null;
      let icon = opts && 'icon' in opts ? opts.icon : null;
      let label = opts && 'label' in opts ? opts.label : null;
      let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
      return new floating_action_button.FloatingActionButton.extended({key: key, tooltip: tooltip, foregroundColor: foregroundColor, backgroundColor: backgroundColor, focusColor: focusColor, hoverColor: hoverColor, heroTag: heroTag, elevation: elevation, focusElevation: focusElevation, hoverElevation: hoverElevation, splashColor: splashColor, highlightElevation: highlightElevation, disabledElevation: disabledElevation, onPressed: onPressed, mouseCursor: mouseCursor, shape: shape, isExtended: isExtended, materialTapTargetSize: materialTapTargetSize, clipBehavior: clipBehavior, focusNode: focusNode, autofocus: autofocus, extendedIconLabelSpacing: extendedIconLabelSpacing, extendedPadding: extendedPadding, extendedTextStyle: extendedTextStyle, icon: icon, label: label, enableFeedback: enableFeedback, $creationLocationd_0dea112b090073317d4: C[171] || CT.C171});
    }
    build(context) {
      let t12, t12$, t12$0, t12$1, t12$2, t12$3, t12$4, t12$5, t12$6, t12$7, t12$8, t12$9, t12$10, t12$11, t12$12, t12$13, t12$14, t12$15, t12$16, t12$17, t12$18, t12$19, t12$20, t12$21, t12$22, t12$23, t12$24, t12$25, t12$26, t12$27, t12$28, t12$29, t12$30, t12$31, t12$32, t12$33, t12$34;
      let theme = theme$.Theme.of(context);
      let floatingActionButtonTheme = theme.floatingActionButtonTheme;
      let defaults = theme.useMaterial3 ? new floating_action_button._FABDefaultsM3.new(context, this[S._floatingActionButtonType$1], this.child != null) : new floating_action_button._FABDefaultsM2.new(context, this[S._floatingActionButtonType$1], this.child != null);
      let foregroundColor = (t12$ = (t12 = this.foregroundColor, t12 == null ? floatingActionButtonTheme.foregroundColor : t12), t12$ == null ? dart.nullCheck(defaults.foregroundColor) : t12$);
      let backgroundColor = (t12$1 = (t12$0 = this.backgroundColor, t12$0 == null ? floatingActionButtonTheme.backgroundColor : t12$0), t12$1 == null ? dart.nullCheck(defaults.backgroundColor) : t12$1);
      let focusColor = (t12$3 = (t12$2 = this.focusColor, t12$2 == null ? floatingActionButtonTheme.focusColor : t12$2), t12$3 == null ? dart.nullCheck(defaults.focusColor) : t12$3);
      let hoverColor = (t12$5 = (t12$4 = this.hoverColor, t12$4 == null ? floatingActionButtonTheme.hoverColor : t12$4), t12$5 == null ? dart.nullCheck(defaults.hoverColor) : t12$5);
      let splashColor = (t12$7 = (t12$6 = this.splashColor, t12$6 == null ? floatingActionButtonTheme.splashColor : t12$6), t12$7 == null ? dart.nullCheck(defaults.splashColor) : t12$7);
      let elevation = (t12$9 = (t12$8 = this.elevation, t12$8 == null ? floatingActionButtonTheme.elevation : t12$8), t12$9 == null ? dart.nullCheck(defaults.elevation) : t12$9);
      let focusElevation = (t12$11 = (t12$10 = this.focusElevation, t12$10 == null ? floatingActionButtonTheme.focusElevation : t12$10), t12$11 == null ? dart.nullCheck(defaults.focusElevation) : t12$11);
      let hoverElevation = (t12$13 = (t12$12 = this.hoverElevation, t12$12 == null ? floatingActionButtonTheme.hoverElevation : t12$12), t12$13 == null ? dart.nullCheck(defaults.hoverElevation) : t12$13);
      let disabledElevation = (t12$16 = (t12$15 = (t12$14 = this.disabledElevation, t12$14 == null ? floatingActionButtonTheme.disabledElevation : t12$14), t12$15 == null ? defaults.disabledElevation : t12$15), t12$16 == null ? elevation : t12$16);
      let highlightElevation = (t12$18 = (t12$17 = this.highlightElevation, t12$17 == null ? floatingActionButtonTheme.highlightElevation : t12$17), t12$18 == null ? dart.nullCheck(defaults.highlightElevation) : t12$18);
      let materialTapTargetSize = (t12$19 = this.materialTapTargetSize, t12$19 == null ? theme.materialTapTargetSize : t12$19);
      let enableFeedback = (t12$21 = (t12$20 = this.enableFeedback, t12$20 == null ? floatingActionButtonTheme.enableFeedback : t12$20), t12$21 == null ? dart.nullCheck(defaults.enableFeedback) : t12$21);
      let iconSize = (t12$22 = floatingActionButtonTheme.iconSize, t12$22 == null ? dart.nullCheck(defaults.iconSize) : t12$22);
      let extendedTextStyle = (t12$24 = (t12$23 = this.extendedTextStyle, t12$23 == null ? floatingActionButtonTheme.extendedTextStyle : t12$23), t12$24 == null ? dart.nullCheck(defaults.extendedTextStyle) : t12$24).copyWith({color: foregroundColor});
      let shape = (t12$26 = (t12$25 = this.shape, t12$25 == null ? floatingActionButtonTheme.shape : t12$25), t12$26 == null ? dart.nullCheck(defaults.shape) : t12$26);
      let sizeConstraints = null;
      let resolvedChild = this.child != null ? icon_theme.IconTheme.merge({data: new icon_theme_data.IconThemeData.new({size: iconSize}), child: dart.nullCheck(this.child)}) : this.child;
      switch (this[S._floatingActionButtonType$1]) {
        case C[162] || CT.C162:
          {
            sizeConstraints = (t12$27 = floatingActionButtonTheme.sizeConstraints, t12$27 == null ? dart.nullCheck(defaults.sizeConstraints) : t12$27);
            break;
          }
        case C[163] || CT.C163:
          {
            sizeConstraints = (t12$28 = floatingActionButtonTheme.smallSizeConstraints, t12$28 == null ? dart.nullCheck(defaults.smallSizeConstraints) : t12$28);
            break;
          }
        case C[164] || CT.C164:
          {
            sizeConstraints = (t12$29 = floatingActionButtonTheme.largeSizeConstraints, t12$29 == null ? dart.nullCheck(defaults.largeSizeConstraints) : t12$29);
            break;
          }
        case C[165] || CT.C165:
          {
            sizeConstraints = (t12$30 = floatingActionButtonTheme.extendedSizeConstraints, t12$30 == null ? dart.nullCheck(defaults.extendedSizeConstraints) : t12$30);
            let iconLabelSpacing = (t12$32 = (t12$31 = this.extendedIconLabelSpacing, t12$31 == null ? floatingActionButtonTheme.extendedIconLabelSpacing : t12$31), t12$32 == null ? 8.0 : t12$32);
            let padding = (t12$34 = (t12$33 = this.extendedPadding, t12$33 == null ? floatingActionButtonTheme.extendedPadding : t12$33), t12$34 == null ? dart.nullCheck(defaults.extendedPadding) : t12$34);
            resolvedChild = new floating_action_button._ChildOverflowBox.new({child: new basic.Padding.new({padding: padding, child: new basic.Row.new({mainAxisSize: flex.MainAxisSize.min, children: (() => {
                    let t12 = T$.JSArrayOfWidget().of([]);
                    if (this.child != null) t12.push(dart.nullCheck(this.child));
                    if (this.child != null && this.isExtended) t12.push(new basic.SizedBox.new({width: iconLabelSpacing, $creationLocationd_0dea112b090073317d4: C[172] || CT.C172}));
                    if (this.isExtended) t12.push(dart.nullCheck(this[S._extendedLabel$1]));
                    return t12;
                  })(), $creationLocationd_0dea112b090073317d4: C[173] || CT.C173}), $creationLocationd_0dea112b090073317d4: C[174] || CT.C174}), $creationLocationd_0dea112b090073317d4: C[175] || CT.C175});
            break;
          }
      }
      let result = new button.RawMaterialButton.new({onPressed: this.onPressed, mouseCursor: this.mouseCursor, elevation: elevation, focusElevation: focusElevation, hoverElevation: hoverElevation, highlightElevation: highlightElevation, disabledElevation: disabledElevation, constraints: sizeConstraints, materialTapTargetSize: materialTapTargetSize, fillColor: backgroundColor, focusColor: focusColor, hoverColor: hoverColor, splashColor: splashColor, textStyle: extendedTextStyle, shape: shape, clipBehavior: this.clipBehavior, focusNode: this.focusNode, autofocus: this.autofocus, enableFeedback: enableFeedback, child: resolvedChild, $creationLocationd_0dea112b090073317d4: C[176] || CT.C176});
      if (this.tooltip != null) {
        result = new tooltip.Tooltip.new({message: this.tooltip, child: result, $creationLocationd_0dea112b090073317d4: C[177] || CT.C177});
      }
      if (this.heroTag != null) {
        result = new heroes.Hero.new({tag: dart.nullCheck(this.heroTag), child: result, $creationLocationd_0dea112b090073317d4: C[178] || CT.C178});
      }
      return new basic.MergeSemantics.new({child: result, $creationLocationd_0dea112b090073317d4: C[179] || CT.C179});
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (T$.ObjectFlagPropertyOfVoidTovoid()).new("onPressed", this.onPressed, {ifNull: "disabled"}));
      properties.add(new diagnostics.StringProperty.new("tooltip", this.tooltip, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("foregroundColor", this.foregroundColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("backgroundColor", this.backgroundColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("focusColor", this.focusColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("hoverColor", this.hoverColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("splashColor", this.splashColor, {defaultValue: null}));
      properties.add(new (T$.ObjectFlagPropertyOfObject()).new("heroTag", this.heroTag, {ifPresent: "hero"}));
      properties.add(new diagnostics.DoubleProperty.new("elevation", this.elevation, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("focusElevation", this.focusElevation, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("hoverElevation", this.hoverElevation, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("highlightElevation", this.highlightElevation, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("disabledElevation", this.disabledElevation, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfShapeBorder()).new("shape", this.shape, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfFocusNode()).new("focusNode", this.focusNode, {defaultValue: null}));
      properties.add(new diagnostics.FlagProperty.new("isExtended", {value: this.isExtended, ifTrue: "extended"}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialTapTargetSize()).new("materialTapTargetSize", this.materialTapTargetSize, {defaultValue: null}));
    }
  };
  (floating_action_button.FloatingActionButton.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let tooltip = opts && 'tooltip' in opts ? opts.tooltip : null;
    let foregroundColor = opts && 'foregroundColor' in opts ? opts.foregroundColor : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let heroTag = opts && 'heroTag' in opts ? opts.heroTag : C[166] || CT.C166;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let focusElevation = opts && 'focusElevation' in opts ? opts.focusElevation : null;
    let hoverElevation = opts && 'hoverElevation' in opts ? opts.hoverElevation : null;
    let highlightElevation = opts && 'highlightElevation' in opts ? opts.highlightElevation : null;
    let disabledElevation = opts && 'disabledElevation' in opts ? opts.disabledElevation : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let mini = opts && 'mini' in opts ? opts.mini : false;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[71] || CT.C71;
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    let isExtended = opts && 'isExtended' in opts ? opts.isExtended : false;
    let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.child$2] = child;
    this[S.tooltip$1] = tooltip;
    this[S.foregroundColor$1] = foregroundColor;
    this[S.backgroundColor$2] = backgroundColor;
    this[S.focusColor$1] = focusColor;
    this[S.hoverColor$1] = hoverColor;
    this[S.splashColor$1] = splashColor;
    this[S.heroTag] = heroTag;
    this[S.elevation$2] = elevation;
    this[S.focusElevation] = focusElevation;
    this[S.hoverElevation] = hoverElevation;
    this[S.highlightElevation] = highlightElevation;
    this[S.disabledElevation] = disabledElevation;
    this[S.onPressed$6] = onPressed;
    this[S.mouseCursor$2] = mouseCursor;
    this[S.mini] = mini;
    this[S.shape$2] = shape;
    this[S.clipBehavior$2] = clipBehavior;
    this[S.focusNode$3] = focusNode;
    this[S.autofocus$3] = autofocus;
    this[S.materialTapTargetSize] = materialTapTargetSize;
    this[S.isExtended] = isExtended;
    this[S.enableFeedback$2] = enableFeedback;
    if (!(elevation == null || dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, I[17], 124, 15, "elevation == null || elevation >= 0.0");
    if (!(focusElevation == null || dart.notNull(focusElevation) >= 0.0)) dart.assertFailed(null, I[17], 125, 15, "focusElevation == null || focusElevation >= 0.0");
    if (!(hoverElevation == null || dart.notNull(hoverElevation) >= 0.0)) dart.assertFailed(null, I[17], 126, 15, "hoverElevation == null || hoverElevation >= 0.0");
    if (!(highlightElevation == null || dart.notNull(highlightElevation) >= 0.0)) dart.assertFailed(null, I[17], 127, 15, "highlightElevation == null || highlightElevation >= 0.0");
    if (!(disabledElevation == null || dart.notNull(disabledElevation) >= 0.0)) dart.assertFailed(null, I[17], 128, 15, "disabledElevation == null || disabledElevation >= 0.0");
    if (!(mini !== null)) dart.assertFailed(null, I[17], 129, 15, "mini != null");
    if (!(clipBehavior !== null)) dart.assertFailed(null, I[17], 130, 15, "clipBehavior != null");
    if (!(isExtended !== null)) dart.assertFailed(null, I[17], 131, 15, "isExtended != null");
    if (!(autofocus !== null)) dart.assertFailed(null, I[17], 132, 15, "autofocus != null");
    this[S._floatingActionButtonType] = mini ? floating_action_button._FloatingActionButtonType.small : floating_action_button._FloatingActionButtonType.regular;
    this[S._extendedLabel] = null;
    this[S.extendedIconLabelSpacing] = null;
    this[S.extendedPadding] = null;
    this[S.extendedTextStyle] = null;
    floating_action_button.FloatingActionButton.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = floating_action_button.FloatingActionButton.prototype;
  (floating_action_button.FloatingActionButton.small = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let tooltip = opts && 'tooltip' in opts ? opts.tooltip : null;
    let foregroundColor = opts && 'foregroundColor' in opts ? opts.foregroundColor : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let heroTag = opts && 'heroTag' in opts ? opts.heroTag : C[166] || CT.C166;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let focusElevation = opts && 'focusElevation' in opts ? opts.focusElevation : null;
    let hoverElevation = opts && 'hoverElevation' in opts ? opts.hoverElevation : null;
    let highlightElevation = opts && 'highlightElevation' in opts ? opts.highlightElevation : null;
    let disabledElevation = opts && 'disabledElevation' in opts ? opts.disabledElevation : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[71] || CT.C71;
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.child$2] = child;
    this[S.tooltip$1] = tooltip;
    this[S.foregroundColor$1] = foregroundColor;
    this[S.backgroundColor$2] = backgroundColor;
    this[S.focusColor$1] = focusColor;
    this[S.hoverColor$1] = hoverColor;
    this[S.splashColor$1] = splashColor;
    this[S.heroTag] = heroTag;
    this[S.elevation$2] = elevation;
    this[S.focusElevation] = focusElevation;
    this[S.hoverElevation] = hoverElevation;
    this[S.highlightElevation] = highlightElevation;
    this[S.disabledElevation] = disabledElevation;
    this[S.onPressed$6] = onPressed;
    this[S.mouseCursor$2] = mouseCursor;
    this[S.shape$2] = shape;
    this[S.clipBehavior$2] = clipBehavior;
    this[S.focusNode$3] = focusNode;
    this[S.autofocus$3] = autofocus;
    this[S.materialTapTargetSize] = materialTapTargetSize;
    this[S.enableFeedback$2] = enableFeedback;
    if (!(elevation == null || dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, I[17], 171, 15, "elevation == null || elevation >= 0.0");
    if (!(focusElevation == null || dart.notNull(focusElevation) >= 0.0)) dart.assertFailed(null, I[17], 172, 15, "focusElevation == null || focusElevation >= 0.0");
    if (!(hoverElevation == null || dart.notNull(hoverElevation) >= 0.0)) dart.assertFailed(null, I[17], 173, 15, "hoverElevation == null || hoverElevation >= 0.0");
    if (!(highlightElevation == null || dart.notNull(highlightElevation) >= 0.0)) dart.assertFailed(null, I[17], 174, 15, "highlightElevation == null || highlightElevation >= 0.0");
    if (!(disabledElevation == null || dart.notNull(disabledElevation) >= 0.0)) dart.assertFailed(null, I[17], 175, 15, "disabledElevation == null || disabledElevation >= 0.0");
    if (!(clipBehavior !== null)) dart.assertFailed(null, I[17], 176, 15, "clipBehavior != null");
    if (!(autofocus !== null)) dart.assertFailed(null, I[17], 177, 15, "autofocus != null");
    this[S._floatingActionButtonType] = floating_action_button._FloatingActionButtonType.small;
    this[S.mini] = true;
    this[S.isExtended] = false;
    this[S._extendedLabel] = null;
    this[S.extendedIconLabelSpacing] = null;
    this[S.extendedPadding] = null;
    this[S.extendedTextStyle] = null;
    floating_action_button.FloatingActionButton.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = floating_action_button.FloatingActionButton.prototype;
  (floating_action_button.FloatingActionButton.large = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let tooltip = opts && 'tooltip' in opts ? opts.tooltip : null;
    let foregroundColor = opts && 'foregroundColor' in opts ? opts.foregroundColor : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let heroTag = opts && 'heroTag' in opts ? opts.heroTag : C[166] || CT.C166;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let focusElevation = opts && 'focusElevation' in opts ? opts.focusElevation : null;
    let hoverElevation = opts && 'hoverElevation' in opts ? opts.hoverElevation : null;
    let highlightElevation = opts && 'highlightElevation' in opts ? opts.highlightElevation : null;
    let disabledElevation = opts && 'disabledElevation' in opts ? opts.disabledElevation : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[71] || CT.C71;
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.child$2] = child;
    this[S.tooltip$1] = tooltip;
    this[S.foregroundColor$1] = foregroundColor;
    this[S.backgroundColor$2] = backgroundColor;
    this[S.focusColor$1] = focusColor;
    this[S.hoverColor$1] = hoverColor;
    this[S.splashColor$1] = splashColor;
    this[S.heroTag] = heroTag;
    this[S.elevation$2] = elevation;
    this[S.focusElevation] = focusElevation;
    this[S.hoverElevation] = hoverElevation;
    this[S.highlightElevation] = highlightElevation;
    this[S.disabledElevation] = disabledElevation;
    this[S.onPressed$6] = onPressed;
    this[S.mouseCursor$2] = mouseCursor;
    this[S.shape$2] = shape;
    this[S.clipBehavior$2] = clipBehavior;
    this[S.focusNode$3] = focusNode;
    this[S.autofocus$3] = autofocus;
    this[S.materialTapTargetSize] = materialTapTargetSize;
    this[S.enableFeedback$2] = enableFeedback;
    if (!(elevation == null || dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, I[17], 218, 15, "elevation == null || elevation >= 0.0");
    if (!(focusElevation == null || dart.notNull(focusElevation) >= 0.0)) dart.assertFailed(null, I[17], 219, 15, "focusElevation == null || focusElevation >= 0.0");
    if (!(hoverElevation == null || dart.notNull(hoverElevation) >= 0.0)) dart.assertFailed(null, I[17], 220, 15, "hoverElevation == null || hoverElevation >= 0.0");
    if (!(highlightElevation == null || dart.notNull(highlightElevation) >= 0.0)) dart.assertFailed(null, I[17], 221, 15, "highlightElevation == null || highlightElevation >= 0.0");
    if (!(disabledElevation == null || dart.notNull(disabledElevation) >= 0.0)) dart.assertFailed(null, I[17], 222, 15, "disabledElevation == null || disabledElevation >= 0.0");
    if (!(clipBehavior !== null)) dart.assertFailed(null, I[17], 223, 15, "clipBehavior != null");
    if (!(autofocus !== null)) dart.assertFailed(null, I[17], 224, 15, "autofocus != null");
    this[S._floatingActionButtonType] = floating_action_button._FloatingActionButtonType.large;
    this[S.mini] = false;
    this[S.isExtended] = false;
    this[S._extendedLabel] = null;
    this[S.extendedIconLabelSpacing] = null;
    this[S.extendedPadding] = null;
    this[S.extendedTextStyle] = null;
    floating_action_button.FloatingActionButton.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = floating_action_button.FloatingActionButton.prototype;
  (floating_action_button.FloatingActionButton.extended = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let tooltip = opts && 'tooltip' in opts ? opts.tooltip : null;
    let foregroundColor = opts && 'foregroundColor' in opts ? opts.foregroundColor : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let heroTag = opts && 'heroTag' in opts ? opts.heroTag : C[166] || CT.C166;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let focusElevation = opts && 'focusElevation' in opts ? opts.focusElevation : null;
    let hoverElevation = opts && 'hoverElevation' in opts ? opts.hoverElevation : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let highlightElevation = opts && 'highlightElevation' in opts ? opts.highlightElevation : null;
    let disabledElevation = opts && 'disabledElevation' in opts ? opts.disabledElevation : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : C[167] || CT.C167;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let isExtended = opts && 'isExtended' in opts ? opts.isExtended : true;
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[71] || CT.C71;
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    let extendedIconLabelSpacing = opts && 'extendedIconLabelSpacing' in opts ? opts.extendedIconLabelSpacing : null;
    let extendedPadding = opts && 'extendedPadding' in opts ? opts.extendedPadding : null;
    let extendedTextStyle = opts && 'extendedTextStyle' in opts ? opts.extendedTextStyle : null;
    let icon = opts && 'icon' in opts ? opts.icon : null;
    let label = opts && 'label' in opts ? opts.label : null;
    let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.tooltip$1] = tooltip;
    this[S.foregroundColor$1] = foregroundColor;
    this[S.backgroundColor$2] = backgroundColor;
    this[S.focusColor$1] = focusColor;
    this[S.hoverColor$1] = hoverColor;
    this[S.heroTag] = heroTag;
    this[S.elevation$2] = elevation;
    this[S.focusElevation] = focusElevation;
    this[S.hoverElevation] = hoverElevation;
    this[S.splashColor$1] = splashColor;
    this[S.highlightElevation] = highlightElevation;
    this[S.disabledElevation] = disabledElevation;
    this[S.onPressed$6] = onPressed;
    this[S.mouseCursor$2] = mouseCursor;
    this[S.shape$2] = shape;
    this[S.isExtended] = isExtended;
    this[S.materialTapTargetSize] = materialTapTargetSize;
    this[S.clipBehavior$2] = clipBehavior;
    this[S.focusNode$3] = focusNode;
    this[S.autofocus$3] = autofocus;
    this[S.extendedIconLabelSpacing] = extendedIconLabelSpacing;
    this[S.extendedPadding] = extendedPadding;
    this[S.extendedTextStyle] = extendedTextStyle;
    this[S.enableFeedback$2] = enableFeedback;
    if (!(elevation == null || dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, I[17], 270, 15, "elevation == null || elevation >= 0.0");
    if (!(focusElevation == null || dart.notNull(focusElevation) >= 0.0)) dart.assertFailed(null, I[17], 271, 15, "focusElevation == null || focusElevation >= 0.0");
    if (!(hoverElevation == null || dart.notNull(hoverElevation) >= 0.0)) dart.assertFailed(null, I[17], 272, 15, "hoverElevation == null || hoverElevation >= 0.0");
    if (!(highlightElevation == null || dart.notNull(highlightElevation) >= 0.0)) dart.assertFailed(null, I[17], 273, 15, "highlightElevation == null || highlightElevation >= 0.0");
    if (!(disabledElevation == null || dart.notNull(disabledElevation) >= 0.0)) dart.assertFailed(null, I[17], 274, 15, "disabledElevation == null || disabledElevation >= 0.0");
    if (!(isExtended !== null)) dart.assertFailed(null, I[17], 275, 15, "isExtended != null");
    if (!(clipBehavior !== null)) dart.assertFailed(null, I[17], 276, 15, "clipBehavior != null");
    if (!(autofocus !== null)) dart.assertFailed(null, I[17], 277, 15, "autofocus != null");
    this[S.mini] = false;
    this[S._floatingActionButtonType] = floating_action_button._FloatingActionButtonType.extended;
    this[S.child$2] = icon;
    this[S._extendedLabel] = label;
    floating_action_button.FloatingActionButton.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = floating_action_button.FloatingActionButton.prototype;
  dart.addTypeTests(floating_action_button.FloatingActionButton);
  dart.addTypeCaches(floating_action_button.FloatingActionButton);
  dart.setMethodSignature(floating_action_button.FloatingActionButton, () => ({
    __proto__: dart.getMethods(floating_action_button.FloatingActionButton.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(floating_action_button.FloatingActionButton, I[16]);
  dart.setFieldSignature(floating_action_button.FloatingActionButton, () => ({
    __proto__: dart.getFields(floating_action_button.FloatingActionButton.__proto__),
    child: dart.finalFieldType(dart.nullable(framework.Widget)),
    tooltip: dart.finalFieldType(dart.nullable(core.String)),
    foregroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    focusColor: dart.finalFieldType(dart.nullable(ui.Color)),
    hoverColor: dart.finalFieldType(dart.nullable(ui.Color)),
    splashColor: dart.finalFieldType(dart.nullable(ui.Color)),
    heroTag: dart.finalFieldType(dart.nullable(core.Object)),
    onPressed: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    mouseCursor: dart.finalFieldType(dart.nullable(mouse_cursor.MouseCursor)),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    focusElevation: dart.finalFieldType(dart.nullable(core.double)),
    hoverElevation: dart.finalFieldType(dart.nullable(core.double)),
    highlightElevation: dart.finalFieldType(dart.nullable(core.double)),
    disabledElevation: dart.finalFieldType(dart.nullable(core.double)),
    mini: dart.finalFieldType(core.bool),
    shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    clipBehavior: dart.finalFieldType(ui.Clip),
    isExtended: dart.finalFieldType(core.bool),
    focusNode: dart.finalFieldType(dart.nullable(focus_manager.FocusNode)),
    autofocus: dart.finalFieldType(core.bool),
    materialTapTargetSize: dart.finalFieldType(dart.nullable(theme_data.MaterialTapTargetSize)),
    enableFeedback: dart.finalFieldType(dart.nullable(core.bool)),
    extendedIconLabelSpacing: dart.finalFieldType(dart.nullable(core.double)),
    extendedPadding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    extendedTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    [S._floatingActionButtonType$1]: dart.finalFieldType(floating_action_button._FloatingActionButtonType),
    [S._extendedLabel$1]: dart.finalFieldType(dart.nullable(framework.Widget))
  }));
  floating_action_button._ChildOverflowBox = class _ChildOverflowBox extends framework.SingleChildRenderObjectWidget {
    static ['_#new#tearOff'](opts) {
      let child = opts && 'child' in opts ? opts.child : null;
      return new floating_action_button._ChildOverflowBox.new({child: child, $creationLocationd_0dea112b090073317d4: C[180] || CT.C180});
    }
    createRenderObject(context) {
      return new floating_action_button._RenderChildOverflowBox.new({textDirection: basic.Directionality.of(context)});
    }
    updateRenderObject(context, renderObject) {
      floating_action_button._RenderChildOverflowBox.as(renderObject);
      renderObject.textDirection = basic.Directionality.of(context);
    }
  };
  (floating_action_button._ChildOverflowBox.new = function(opts) {
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    floating_action_button._ChildOverflowBox.__proto__.new.call(this, {child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = floating_action_button._ChildOverflowBox.prototype;
  dart.addTypeTests(floating_action_button._ChildOverflowBox);
  dart.addTypeCaches(floating_action_button._ChildOverflowBox);
  dart.setMethodSignature(floating_action_button._ChildOverflowBox, () => ({
    __proto__: dart.getMethods(floating_action_button._ChildOverflowBox.__proto__),
    createRenderObject: dart.fnType(floating_action_button._RenderChildOverflowBox, [framework.BuildContext])
  }));
  dart.setLibraryUri(floating_action_button._ChildOverflowBox, I[16]);
  floating_action_button._RenderChildOverflowBox = class _RenderChildOverflowBox extends shifted_box.RenderAligningShiftedBox {
    static ['_#new#tearOff'](opts) {
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      return new floating_action_button._RenderChildOverflowBox.new({textDirection: textDirection});
    }
    computeMinIntrinsicWidth(height) {
      return 0.0;
    }
    computeMinIntrinsicHeight(width) {
      return 0.0;
    }
    computeDryLayout(constraints) {
      if (this.child != null) {
        let childSize = dart.nullCheck(this.child).getDryLayout(C[181] || CT.C181);
        return new ui.Size.new(math.max(core.double, constraints.minWidth, math.min(core.double, constraints.maxWidth, childSize.width)), math.max(core.double, constraints.minHeight, math.min(core.double, constraints.maxHeight, childSize.height)));
      } else {
        return constraints.biggest;
      }
    }
    performLayout() {
      let constraints = this.constraints;
      if (this.child != null) {
        dart.nullCheck(this.child).layout(C[181] || CT.C181, {parentUsesSize: true});
        this.size = new ui.Size.new(math.max(core.double, constraints.minWidth, math.min(core.double, constraints.maxWidth, dart.nullCheck(this.child).size.width)), math.max(core.double, constraints.minHeight, math.min(core.double, constraints.maxHeight, dart.nullCheck(this.child).size.height)));
        this.alignChild();
      } else {
        this.size = constraints.biggest;
      }
    }
  };
  (floating_action_button._RenderChildOverflowBox.new = function(opts) {
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    floating_action_button._RenderChildOverflowBox.__proto__.new.call(this, {alignment: alignment.Alignment.center, textDirection: textDirection});
    ;
  }).prototype = floating_action_button._RenderChildOverflowBox.prototype;
  dart.addTypeTests(floating_action_button._RenderChildOverflowBox);
  dart.addTypeCaches(floating_action_button._RenderChildOverflowBox);
  dart.setLibraryUri(floating_action_button._RenderChildOverflowBox, I[16]);
  floating_action_button._FABDefaultsM2 = class _FABDefaultsM2 extends floating_action_button_theme.FloatingActionButtonThemeData {
    static ['_#new#tearOff'](context, type, hasChild) {
      return new floating_action_button._FABDefaultsM2.new(context, type, hasChild);
    }
    get [S._isExtended]() {
      return this.type === floating_action_button._FloatingActionButtonType.extended;
    }
    get [S._isLarge]() {
      return this.type === floating_action_button._FloatingActionButtonType.large;
    }
    get foregroundColor() {
      return this[S._colors$2].onSecondary;
    }
    get backgroundColor() {
      return this[S._colors$2].secondary;
    }
    get focusColor() {
      return this[S._theme].focusColor;
    }
    get hoverColor() {
      return this[S._theme].hoverColor;
    }
    get splashColor() {
      return this[S._theme].splashColor;
    }
    get shape() {
      return this[S._isExtended] ? C[17] || CT.C17 : C[186] || CT.C186;
    }
    get iconSize() {
      return this[S._isLarge] ? 36.0 : 24.0;
    }
    get extendedPadding() {
      return new edge_insets.EdgeInsetsDirectional.only({start: this.hasChild && this[S._isExtended] ? 16.0 : 20.0, end: 20.0});
    }
    get extendedTextStyle() {
      return dart.nullCheck(this[S._theme].textTheme.button).copyWith({letterSpacing: 1.2});
    }
  };
  (floating_action_button._FABDefaultsM2.new = function(context, type, hasChild) {
    this.type = type;
    this.hasChild = hasChild;
    this[S._theme] = theme$.Theme.of(context);
    this[S._colors$2] = theme$.Theme.of(context).colorScheme;
    floating_action_button._FABDefaultsM2.__proto__.new.call(this, {elevation: 6.0, focusElevation: 6.0, hoverElevation: 8.0, highlightElevation: 12.0, enableFeedback: true, sizeConstraints: C[182] || CT.C182, smallSizeConstraints: C[183] || CT.C183, largeSizeConstraints: C[184] || CT.C184, extendedSizeConstraints: C[185] || CT.C185, extendedIconLabelSpacing: 8.0});
    ;
  }).prototype = floating_action_button._FABDefaultsM2.prototype;
  dart.addTypeTests(floating_action_button._FABDefaultsM2);
  dart.addTypeCaches(floating_action_button._FABDefaultsM2);
  dart.setGetterSignature(floating_action_button._FABDefaultsM2, () => ({
    __proto__: dart.getGetters(floating_action_button._FABDefaultsM2.__proto__),
    [S._isExtended]: core.bool,
    [S._isLarge]: core.bool,
    foregroundColor: dart.nullable(ui.Color),
    backgroundColor: dart.nullable(ui.Color),
    focusColor: dart.nullable(ui.Color),
    hoverColor: dart.nullable(ui.Color),
    splashColor: dart.nullable(ui.Color),
    shape: dart.nullable(borders.ShapeBorder),
    iconSize: dart.nullable(core.double),
    extendedPadding: dart.nullable(edge_insets.EdgeInsetsGeometry),
    extendedTextStyle: dart.nullable(text_style.TextStyle)
  }));
  dart.setLibraryUri(floating_action_button._FABDefaultsM2, I[16]);
  dart.setFieldSignature(floating_action_button._FABDefaultsM2, () => ({
    __proto__: dart.getFields(floating_action_button._FABDefaultsM2.__proto__),
    type: dart.finalFieldType(floating_action_button._FloatingActionButtonType),
    hasChild: dart.finalFieldType(core.bool),
    [S._theme]: dart.finalFieldType(theme_data.ThemeData),
    [S._colors$2]: dart.finalFieldType(color_scheme.ColorScheme)
  }));
  floating_action_button._FABDefaultsM3 = class _FABDefaultsM3 extends floating_action_button_theme.FloatingActionButtonThemeData {
    static ['_#new#tearOff'](context, type, hasChild) {
      return new floating_action_button._FABDefaultsM3.new(context, type, hasChild);
    }
    get [S._colors$2]() {
      let t14, t13;
      t13 = this[S.___FABDefaultsM3__colors];
      return t13 == null ? (t14 = theme$.Theme.of(this.context).colorScheme, this[S.___FABDefaultsM3__colors] == null ? this[S.___FABDefaultsM3__colors] = t14 : dart.throw(new _internal.LateError.fieldADI("_colors"))) : t13;
    }
    get [S._textTheme]() {
      let t14, t13;
      t13 = this[S.___FABDefaultsM3__textTheme];
      return t13 == null ? (t14 = theme$.Theme.of(this.context).textTheme, this[S.___FABDefaultsM3__textTheme] == null ? this[S.___FABDefaultsM3__textTheme] = t14 : dart.throw(new _internal.LateError.fieldADI("_textTheme"))) : t13;
    }
    get [S._isExtended]() {
      return this.type === floating_action_button._FloatingActionButtonType.extended;
    }
    get foregroundColor() {
      return this[S._colors$2].onPrimaryContainer;
    }
    get backgroundColor() {
      return this[S._colors$2].primaryContainer;
    }
    get splashColor() {
      return this[S._colors$2].onPrimaryContainer.withOpacity(0.12);
    }
    get focusColor() {
      return this[S._colors$2].onPrimaryContainer.withOpacity(0.12);
    }
    get hoverColor() {
      return this[S._colors$2].onPrimaryContainer.withOpacity(0.08);
    }
    get shape() {
      switch (this.type) {
        case C[162] || CT.C162:
          {
            return C[188] || CT.C188;
          }
        case C[163] || CT.C163:
          {
            return C[191] || CT.C191;
          }
        case C[164] || CT.C164:
          {
            return C[194] || CT.C194;
          }
        case C[165] || CT.C165:
          {
            return C[188] || CT.C188;
          }
      }
    }
    get iconSize() {
      switch (this.type) {
        case C[162] || CT.C162:
          {
            return 24.0;
          }
        case C[163] || CT.C163:
          {
            return 24.0;
          }
        case C[164] || CT.C164:
          {
            return 36.0;
          }
        case C[165] || CT.C165:
          {
            return 24.0;
          }
      }
    }
    get extendedPadding() {
      return new edge_insets.EdgeInsetsDirectional.only({start: this.hasChild && this[S._isExtended] ? 16.0 : 20.0, end: 20.0});
    }
    get extendedTextStyle() {
      return this[S._textTheme].labelLarge;
    }
  };
  (floating_action_button._FABDefaultsM3.new = function(context, type, hasChild) {
    this[S.___FABDefaultsM3__colors] = null;
    this[S.___FABDefaultsM3__textTheme] = null;
    this.context = context;
    this.type = type;
    this.hasChild = hasChild;
    floating_action_button._FABDefaultsM3.__proto__.new.call(this, {elevation: 6.0, focusElevation: 6.0, hoverElevation: 8.0, highlightElevation: 6.0, enableFeedback: true, sizeConstraints: C[182] || CT.C182, smallSizeConstraints: C[183] || CT.C183, largeSizeConstraints: C[184] || CT.C184, extendedSizeConstraints: C[187] || CT.C187, extendedIconLabelSpacing: 8.0});
    ;
  }).prototype = floating_action_button._FABDefaultsM3.prototype;
  dart.addTypeTests(floating_action_button._FABDefaultsM3);
  dart.addTypeCaches(floating_action_button._FABDefaultsM3);
  dart.setGetterSignature(floating_action_button._FABDefaultsM3, () => ({
    __proto__: dart.getGetters(floating_action_button._FABDefaultsM3.__proto__),
    [S._colors$2]: color_scheme.ColorScheme,
    [S._textTheme]: text_theme.TextTheme,
    [S._isExtended]: core.bool,
    foregroundColor: dart.nullable(ui.Color),
    backgroundColor: dart.nullable(ui.Color),
    splashColor: dart.nullable(ui.Color),
    focusColor: dart.nullable(ui.Color),
    hoverColor: dart.nullable(ui.Color),
    shape: dart.nullable(borders.ShapeBorder),
    iconSize: dart.nullable(core.double),
    extendedPadding: dart.nullable(edge_insets.EdgeInsetsGeometry),
    extendedTextStyle: dart.nullable(text_style.TextStyle)
  }));
  dart.setLibraryUri(floating_action_button._FABDefaultsM3, I[16]);
  dart.setFieldSignature(floating_action_button._FABDefaultsM3, () => ({
    __proto__: dart.getFields(floating_action_button._FABDefaultsM3.__proto__),
    context: dart.finalFieldType(framework.BuildContext),
    type: dart.finalFieldType(floating_action_button._FloatingActionButtonType),
    hasChild: dart.finalFieldType(core.bool),
    [S.___FABDefaultsM3__colors]: dart.fieldType(dart.nullable(color_scheme.ColorScheme)),
    [S.___FABDefaultsM3__textTheme]: dart.fieldType(dart.nullable(text_theme.TextTheme))
  }));
  flexible_space_bar.CollapseMode = class CollapseMode extends core._Enum {
    toString() {
      return "CollapseMode." + this[S._name];
    }
  };
  (flexible_space_bar.CollapseMode.new = function(index, name) {
    flexible_space_bar.CollapseMode.__proto__.new.call(this, index, name);
    ;
  }).prototype = flexible_space_bar.CollapseMode.prototype;
  dart.addTypeTests(flexible_space_bar.CollapseMode);
  dart.addTypeCaches(flexible_space_bar.CollapseMode);
  dart.setLibraryUri(flexible_space_bar.CollapseMode, I[18]);
  dart.setStaticFieldSignature(flexible_space_bar.CollapseMode, () => ['values', 'parallax', 'pin', 'none']);
  dart.defineExtensionMethods(flexible_space_bar.CollapseMode, ['toString']);
  dart.defineLazy(flexible_space_bar.CollapseMode, {
    /*flexible_space_bar.CollapseMode.values*/get values() {
      return C[197] || CT.C197;
    },
    /*flexible_space_bar.CollapseMode.parallax*/get parallax() {
      return C[198] || CT.C198;
    },
    /*flexible_space_bar.CollapseMode.pin*/get pin() {
      return C[199] || CT.C199;
    },
    /*flexible_space_bar.CollapseMode.none*/get none() {
      return C[200] || CT.C200;
    }
  }, false);
  flexible_space_bar.StretchMode = class StretchMode extends core._Enum {
    toString() {
      return "StretchMode." + this[S._name];
    }
  };
  (flexible_space_bar.StretchMode.new = function(index, name) {
    flexible_space_bar.StretchMode.__proto__.new.call(this, index, name);
    ;
  }).prototype = flexible_space_bar.StretchMode.prototype;
  dart.addTypeTests(flexible_space_bar.StretchMode);
  dart.addTypeCaches(flexible_space_bar.StretchMode);
  dart.setLibraryUri(flexible_space_bar.StretchMode, I[18]);
  dart.setStaticFieldSignature(flexible_space_bar.StretchMode, () => ['values', 'zoomBackground', 'blurBackground', 'fadeTitle']);
  dart.defineExtensionMethods(flexible_space_bar.StretchMode, ['toString']);
  dart.defineLazy(flexible_space_bar.StretchMode, {
    /*flexible_space_bar.StretchMode.values*/get values() {
      return C[201] || CT.C201;
    },
    /*flexible_space_bar.StretchMode.zoomBackground*/get zoomBackground() {
      return C[202] || CT.C202;
    },
    /*flexible_space_bar.StretchMode.blurBackground*/get blurBackground() {
      return C[203] || CT.C203;
    },
    /*flexible_space_bar.StretchMode.fadeTitle*/get fadeTitle() {
      return C[204] || CT.C204;
    }
  }, false);
  flexible_space_bar.FlexibleSpaceBar = class FlexibleSpaceBar extends framework.StatefulWidget {
    get title() {
      return this[S.title];
    }
    set title(value) {
      super.title = value;
    }
    get background() {
      return this[S.background];
    }
    set background(value) {
      super.background = value;
    }
    get centerTitle() {
      return this[S.centerTitle];
    }
    set centerTitle(value) {
      super.centerTitle = value;
    }
    get collapseMode() {
      return this[S.collapseMode];
    }
    set collapseMode(value) {
      super.collapseMode = value;
    }
    get stretchModes() {
      return this[S.stretchModes];
    }
    set stretchModes(value) {
      super.stretchModes = value;
    }
    get titlePadding() {
      return this[S.titlePadding];
    }
    set titlePadding(value) {
      super.titlePadding = value;
    }
    get expandedTitleScale() {
      return this[S.expandedTitleScale];
    }
    set expandedTitleScale(value) {
      super.expandedTitleScale = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let title = opts && 'title' in opts ? opts.title : null;
      let background = opts && 'background' in opts ? opts.background : null;
      let centerTitle = opts && 'centerTitle' in opts ? opts.centerTitle : null;
      let titlePadding = opts && 'titlePadding' in opts ? opts.titlePadding : null;
      let collapseMode = opts && 'collapseMode' in opts ? opts.collapseMode : C[198] || CT.C198;
      let stretchModes = opts && 'stretchModes' in opts ? opts.stretchModes : C[205] || CT.C205;
      let expandedTitleScale = opts && 'expandedTitleScale' in opts ? opts.expandedTitleScale : 1.5;
      return new flexible_space_bar.FlexibleSpaceBar.new({key: key, title: title, background: background, centerTitle: centerTitle, titlePadding: titlePadding, collapseMode: collapseMode, stretchModes: stretchModes, expandedTitleScale: expandedTitleScale, $creationLocationd_0dea112b090073317d4: C[206] || CT.C206});
    }
    static createSettings(opts) {
      let t17, t17$, t17$0;
      let toolbarOpacity = opts && 'toolbarOpacity' in opts ? opts.toolbarOpacity : null;
      let minExtent = opts && 'minExtent' in opts ? opts.minExtent : null;
      let maxExtent = opts && 'maxExtent' in opts ? opts.maxExtent : null;
      let isScrolledUnder = opts && 'isScrolledUnder' in opts ? opts.isScrolledUnder : null;
      let currentExtent = opts && 'currentExtent' in opts ? opts.currentExtent : null;
      let child = opts && 'child' in opts ? opts.child : null;
      if (!(currentExtent !== null)) dart.assertFailed(null, I[19], 162, 12, "currentExtent != null");
      return new flexible_space_bar.FlexibleSpaceBarSettings.new({toolbarOpacity: (t17 = toolbarOpacity, t17 == null ? 1.0 : t17), minExtent: (t17$ = minExtent, t17$ == null ? currentExtent : t17$), maxExtent: (t17$0 = maxExtent, t17$0 == null ? currentExtent : t17$0), isScrolledUnder: isScrolledUnder, currentExtent: currentExtent, child: child, $creationLocationd_0dea112b090073317d4: C[207] || CT.C207});
    }
    createState() {
      return new flexible_space_bar._FlexibleSpaceBarState.new();
    }
  };
  (flexible_space_bar.FlexibleSpaceBar.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let title = opts && 'title' in opts ? opts.title : null;
    let background = opts && 'background' in opts ? opts.background : null;
    let centerTitle = opts && 'centerTitle' in opts ? opts.centerTitle : null;
    let titlePadding = opts && 'titlePadding' in opts ? opts.titlePadding : null;
    let collapseMode = opts && 'collapseMode' in opts ? opts.collapseMode : C[198] || CT.C198;
    let stretchModes = opts && 'stretchModes' in opts ? opts.stretchModes : C[205] || CT.C205;
    let expandedTitleScale = opts && 'expandedTitleScale' in opts ? opts.expandedTitleScale : 1.5;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.title] = title;
    this[S.background] = background;
    this[S.centerTitle] = centerTitle;
    this[S.titlePadding] = titlePadding;
    this[S.collapseMode] = collapseMode;
    this[S.stretchModes] = stretchModes;
    this[S.expandedTitleScale] = expandedTitleScale;
    if (!(collapseMode !== null)) dart.assertFailed(null, I[19], 87, 15, "collapseMode != null");
    if (!(expandedTitleScale >= 1)) dart.assertFailed(null, I[19], 88, 15, "expandedTitleScale >= 1");
    flexible_space_bar.FlexibleSpaceBar.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = flexible_space_bar.FlexibleSpaceBar.prototype;
  dart.addTypeTests(flexible_space_bar.FlexibleSpaceBar);
  dart.addTypeCaches(flexible_space_bar.FlexibleSpaceBar);
  dart.setMethodSignature(flexible_space_bar.FlexibleSpaceBar, () => ({
    __proto__: dart.getMethods(flexible_space_bar.FlexibleSpaceBar.__proto__),
    createState: dart.fnType(framework.State$(flexible_space_bar.FlexibleSpaceBar), [])
  }));
  dart.setStaticMethodSignature(flexible_space_bar.FlexibleSpaceBar, () => ['createSettings']);
  dart.setLibraryUri(flexible_space_bar.FlexibleSpaceBar, I[18]);
  dart.setFieldSignature(flexible_space_bar.FlexibleSpaceBar, () => ({
    __proto__: dart.getFields(flexible_space_bar.FlexibleSpaceBar.__proto__),
    title: dart.finalFieldType(dart.nullable(framework.Widget)),
    background: dart.finalFieldType(dart.nullable(framework.Widget)),
    centerTitle: dart.finalFieldType(dart.nullable(core.bool)),
    collapseMode: dart.finalFieldType(flexible_space_bar.CollapseMode),
    stretchModes: dart.finalFieldType(core.List$(flexible_space_bar.StretchMode)),
    titlePadding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    expandedTitleScale: dart.finalFieldType(core.double)
  }));
  flexible_space_bar._FlexibleSpaceBarState = class _FlexibleSpaceBarState extends framework.State$(flexible_space_bar.FlexibleSpaceBar) {
    [S._getEffectiveCenterTitle](theme) {
      if (this.widget.centerTitle != null) {
        return dart.nullCheck(this.widget.centerTitle);
      }
      if (!(theme.platform !== null)) dart.assertFailed(null, I[19], 182, 12, "theme.platform != null");
      switch (theme.platform) {
        case C[29] || CT.C29:
        case C[30] || CT.C30:
        case C[31] || CT.C31:
        case C[32] || CT.C32:
          {
            return false;
          }
        case C[33] || CT.C33:
        case C[34] || CT.C34:
          {
            return true;
          }
      }
    }
    [S._getTitleAlignment](effectiveCenterTitle) {
      if (effectiveCenterTitle) {
        return alignment.Alignment.bottomCenter;
      }
      let textDirection = basic.Directionality.of(this.context);
      if (!(textDirection !== null)) dart.assertFailed(null, I[19], 200, 12, "textDirection != null");
      switch (textDirection) {
        case C[154] || CT.C154:
          {
            return alignment.Alignment.bottomRight;
          }
        case C[155] || CT.C155:
          {
            return alignment.Alignment.bottomLeft;
          }
      }
    }
    [S._getCollapsePadding](t, settings) {
      switch (this.widget.collapseMode) {
        case C[199] || CT.C199:
          {
            return -(settings.maxExtent - settings.currentExtent);
          }
        case C[200] || CT.C200:
          {
            return 0.0;
          }
        case C[198] || CT.C198:
          {
            let deltaExtent = settings.maxExtent - settings.minExtent;
            return -new (T$.TweenOfdouble()).new({begin: 0.0, end: deltaExtent / 4.0}).transform(t);
          }
      }
    }
    build(context) {
      return new layout_builder.LayoutBuilder.new({builder: dart.fn((context, constraints) => {
          let t17, t17$;
          let settings = dart.nullCheck(context.dependOnInheritedWidgetOfExactType(flexible_space_bar.FlexibleSpaceBarSettings));
          if (!(settings !== null)) dart.assertFailed("A FlexibleSpaceBar must be wrapped in the widget returned by FlexibleSpaceBar.createSettings().", I[19], 227, 11, "settings != null");
          let children = T$.JSArrayOfWidget().of([]);
          let deltaExtent = settings.maxExtent - settings.minExtent;
          let t = math$.clampDouble(1.0 - (settings.currentExtent - settings.minExtent) / deltaExtent, 0.0, 1.0);
          if (this.widget.background != null) {
            let fadeStart = math.max(core.double, 0.0, 1.0 - 56 / deltaExtent);
            if (!(fadeStart <= 1)) dart.assertFailed(null, I[19], 243, 18, "fadeStart <= fadeEnd");
            let opacity = settings.maxExtent === settings.minExtent ? 1.0 : 1.0 - new curves.Interval.new(fadeStart, 1).transform(t);
            let height = settings.maxExtent;
            if (this.widget.stretchModes[S.$contains](flexible_space_bar.StretchMode.zoomBackground) && constraints.maxHeight > height) {
              height = constraints.maxHeight;
            }
            children[S.$add](new basic.Positioned.new({top: this[S._getCollapsePadding](t, settings), left: 0.0, right: 0.0, height: height, child: new basic.Opacity.new({alwaysIncludeSemantics: true, opacity: opacity, child: this.widget.background, $creationLocationd_0dea112b090073317d4: C[208] || CT.C208}), $creationLocationd_0dea112b090073317d4: C[209] || CT.C209}));
            if (this.widget.stretchModes[S.$contains](flexible_space_bar.StretchMode.blurBackground) && constraints.maxHeight > settings.maxExtent) {
              let blurAmount = (constraints.maxHeight - settings.maxExtent) / 10;
              children[S.$add](new basic.Positioned.fill({child: new basic.BackdropFilter.new({filter: ui.ImageFilter.blur({sigmaX: blurAmount, sigmaY: blurAmount}), child: new container.Container.new({color: colors$.Colors.transparent, $creationLocationd_0dea112b090073317d4: C[210] || CT.C210}), $creationLocationd_0dea112b090073317d4: C[211] || CT.C211}), $creationLocationd_0dea112b090073317d4: C[212] || CT.C212}));
            }
          }
          if (this.widget.title != null) {
            let theme = theme$.Theme.of(context);
            let title = null;
            switch (theme.platform) {
              case C[33] || CT.C33:
              case C[34] || CT.C34:
                {
                  title = this.widget.title;
                  break;
                }
              case C[29] || CT.C29:
              case C[30] || CT.C30:
              case C[31] || CT.C31:
              case C[32] || CT.C32:
                {
                  title = new basic.Semantics.new({namesRoute: true, child: this.widget.title, $creationLocationd_0dea112b090073317d4: C[213] || CT.C213});
                  break;
                }
            }
            if (this.widget.stretchModes[S.$contains](flexible_space_bar.StretchMode.fadeTitle) && constraints.maxHeight > settings.maxExtent) {
              let stretchOpacity = 1 - math$.clampDouble((constraints.maxHeight - settings.maxExtent) / 100, 0.0, 1.0);
              title = new basic.Opacity.new({opacity: stretchOpacity, child: title, $creationLocationd_0dea112b090073317d4: C[214] || CT.C214});
            }
            let opacity = settings.toolbarOpacity;
            if (opacity > 0.0) {
              let titleStyle = dart.nullCheck(theme.primaryTextTheme.headline6);
              titleStyle = titleStyle.copyWith({color: dart.nullCheck(titleStyle.color).withOpacity(opacity)});
              let effectiveCenterTitle = this[S._getEffectiveCenterTitle](theme);
              let padding = (t17 = this.widget.titlePadding, t17 == null ? new edge_insets.EdgeInsetsDirectional.only({start: effectiveCenterTitle ? 0.0 : 72.0, bottom: 16.0}) : t17);
              let scaleValue = new (T$.TweenOfdouble()).new({begin: this.widget.expandedTitleScale, end: 1.0}).transform(t);
              let scaleTransform = (t17$ = vector_math_64.Matrix4.identity(), (() => {
                t17$.scale(scaleValue, scaleValue, 1.0);
                return t17$;
              })());
              let titleAlignment = this[S._getTitleAlignment](effectiveCenterTitle);
              children[S.$add](new container.Container.new({padding: padding, child: new basic.Transform.new({alignment: titleAlignment, transform: scaleTransform, child: new basic.Align.new({alignment: titleAlignment, child: new text$.DefaultTextStyle.new({style: titleStyle, child: new layout_builder.LayoutBuilder.new({builder: dart.fn((context, constraints) => new container.Container.new({width: constraints.maxWidth / scaleValue, alignment: titleAlignment, child: title, $creationLocationd_0dea112b090073317d4: C[215] || CT.C215}), T$.BuildContextAndBoxConstraintsToContainer()), $creationLocationd_0dea112b090073317d4: C[216] || CT.C216}), $creationLocationd_0dea112b090073317d4: C[217] || CT.C217}), $creationLocationd_0dea112b090073317d4: C[218] || CT.C218}), $creationLocationd_0dea112b090073317d4: C[219] || CT.C219}), $creationLocationd_0dea112b090073317d4: C[220] || CT.C220}));
            }
          }
          return new basic.ClipRect.new({child: new basic.Stack.new({children: children, $creationLocationd_0dea112b090073317d4: C[221] || CT.C221}), $creationLocationd_0dea112b090073317d4: C[222] || CT.C222});
        }, T$.BuildContextAndBoxConstraintsToClipRect()), $creationLocationd_0dea112b090073317d4: C[223] || CT.C223});
    }
    static ['_#new#tearOff']() {
      return new flexible_space_bar._FlexibleSpaceBarState.new();
    }
  };
  (flexible_space_bar._FlexibleSpaceBarState.new = function() {
    flexible_space_bar._FlexibleSpaceBarState.__proto__.new.call(this);
    ;
  }).prototype = flexible_space_bar._FlexibleSpaceBarState.prototype;
  dart.addTypeTests(flexible_space_bar._FlexibleSpaceBarState);
  dart.addTypeCaches(flexible_space_bar._FlexibleSpaceBarState);
  dart.setMethodSignature(flexible_space_bar._FlexibleSpaceBarState, () => ({
    __proto__: dart.getMethods(flexible_space_bar._FlexibleSpaceBarState.__proto__),
    [S._getEffectiveCenterTitle]: dart.fnType(core.bool, [theme_data.ThemeData]),
    [S._getTitleAlignment]: dart.fnType(alignment.Alignment, [core.bool]),
    [S._getCollapsePadding]: dart.fnType(core.double, [core.double, flexible_space_bar.FlexibleSpaceBarSettings]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(flexible_space_bar._FlexibleSpaceBarState, I[18]);
  flexible_space_bar.FlexibleSpaceBarSettings = class FlexibleSpaceBarSettings extends framework.InheritedWidget {
    get toolbarOpacity() {
      return this[S.toolbarOpacity];
    }
    set toolbarOpacity(value) {
      super.toolbarOpacity = value;
    }
    get minExtent() {
      return this[S.minExtent];
    }
    set minExtent(value) {
      super.minExtent = value;
    }
    get maxExtent() {
      return this[S.maxExtent];
    }
    set maxExtent(value) {
      super.maxExtent = value;
    }
    get currentExtent() {
      return this[S.currentExtent];
    }
    set currentExtent(value) {
      super.currentExtent = value;
    }
    get isScrolledUnder() {
      return this[S.isScrolledUnder];
    }
    set isScrolledUnder(value) {
      super.isScrolledUnder = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let toolbarOpacity = opts && 'toolbarOpacity' in opts ? opts.toolbarOpacity : null;
      let minExtent = opts && 'minExtent' in opts ? opts.minExtent : null;
      let maxExtent = opts && 'maxExtent' in opts ? opts.maxExtent : null;
      let currentExtent = opts && 'currentExtent' in opts ? opts.currentExtent : null;
      let child = opts && 'child' in opts ? opts.child : null;
      let isScrolledUnder = opts && 'isScrolledUnder' in opts ? opts.isScrolledUnder : null;
      return new flexible_space_bar.FlexibleSpaceBarSettings.new({key: key, toolbarOpacity: toolbarOpacity, minExtent: minExtent, maxExtent: maxExtent, currentExtent: currentExtent, child: child, isScrolledUnder: isScrolledUnder, $creationLocationd_0dea112b090073317d4: C[224] || CT.C224});
    }
    updateShouldNotify(oldWidget) {
      flexible_space_bar.FlexibleSpaceBarSettings.as(oldWidget);
      return this.toolbarOpacity !== oldWidget.toolbarOpacity || this.minExtent !== oldWidget.minExtent || this.maxExtent !== oldWidget.maxExtent || this.currentExtent !== oldWidget.currentExtent || this.isScrolledUnder != oldWidget.isScrolledUnder;
    }
  };
  (flexible_space_bar.FlexibleSpaceBarSettings.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let toolbarOpacity = opts && 'toolbarOpacity' in opts ? opts.toolbarOpacity : null;
    let minExtent = opts && 'minExtent' in opts ? opts.minExtent : null;
    let maxExtent = opts && 'maxExtent' in opts ? opts.maxExtent : null;
    let currentExtent = opts && 'currentExtent' in opts ? opts.currentExtent : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let isScrolledUnder = opts && 'isScrolledUnder' in opts ? opts.isScrolledUnder : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.toolbarOpacity] = toolbarOpacity;
    this[S.minExtent] = minExtent;
    this[S.maxExtent] = maxExtent;
    this[S.currentExtent] = currentExtent;
    this[S.isScrolledUnder] = isScrolledUnder;
    if (!(toolbarOpacity !== null)) dart.assertFailed(null, I[19], 391, 15, "toolbarOpacity != null");
    if (!(minExtent !== null && minExtent >= 0)) dart.assertFailed(null, I[19], 392, 15, "minExtent != null && minExtent >= 0");
    if (!(maxExtent !== null && maxExtent >= 0)) dart.assertFailed(null, I[19], 393, 15, "maxExtent != null && maxExtent >= 0");
    if (!(currentExtent !== null && currentExtent >= 0)) dart.assertFailed(null, I[19], 394, 15, "currentExtent != null && currentExtent >= 0");
    if (!(toolbarOpacity >= 0.0)) dart.assertFailed(null, I[19], 395, 15, "toolbarOpacity >= 0.0");
    if (!(minExtent <= maxExtent)) dart.assertFailed(null, I[19], 396, 15, "minExtent <= maxExtent");
    if (!(minExtent <= currentExtent)) dart.assertFailed(null, I[19], 397, 15, "minExtent <= currentExtent");
    if (!(currentExtent <= maxExtent)) dart.assertFailed(null, I[19], 398, 15, "currentExtent <= maxExtent");
    flexible_space_bar.FlexibleSpaceBarSettings.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = flexible_space_bar.FlexibleSpaceBarSettings.prototype;
  dart.addTypeTests(flexible_space_bar.FlexibleSpaceBarSettings);
  dart.addTypeCaches(flexible_space_bar.FlexibleSpaceBarSettings);
  dart.setMethodSignature(flexible_space_bar.FlexibleSpaceBarSettings, () => ({
    __proto__: dart.getMethods(flexible_space_bar.FlexibleSpaceBarSettings.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(flexible_space_bar.FlexibleSpaceBarSettings, I[18]);
  dart.setFieldSignature(flexible_space_bar.FlexibleSpaceBarSettings, () => ({
    __proto__: dart.getFields(flexible_space_bar.FlexibleSpaceBarSettings.__proto__),
    toolbarOpacity: dart.finalFieldType(core.double),
    minExtent: dart.finalFieldType(core.double),
    maxExtent: dart.finalFieldType(core.double),
    currentExtent: dart.finalFieldType(core.double),
    isScrolledUnder: dart.finalFieldType(dart.nullable(core.bool))
  }));
  const Object_Diagnosticable$36$ = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$.new = function() {
  }).prototype = Object_Diagnosticable$36$.prototype;
  dart.applyMixin(Object_Diagnosticable$36$, diagnostics.Diagnosticable);
  toggle_buttons_theme.ToggleButtonsThemeData = class ToggleButtonsThemeData extends Object_Diagnosticable$36$ {
    get textStyle() {
      return this[S.textStyle$1];
    }
    set textStyle(value) {
      super.textStyle = value;
    }
    get constraints() {
      return this[S.constraints$1];
    }
    set constraints(value) {
      super.constraints = value;
    }
    get color() {
      return this[S.color$3];
    }
    set color(value) {
      super.color = value;
    }
    get selectedColor() {
      return this[S.selectedColor];
    }
    set selectedColor(value) {
      super.selectedColor = value;
    }
    get disabledColor() {
      return this[S.disabledColor$1];
    }
    set disabledColor(value) {
      super.disabledColor = value;
    }
    get fillColor() {
      return this[S.fillColor];
    }
    set fillColor(value) {
      super.fillColor = value;
    }
    get focusColor() {
      return this[S.focusColor$2];
    }
    set focusColor(value) {
      super.focusColor = value;
    }
    get highlightColor() {
      return this[S.highlightColor$1];
    }
    set highlightColor(value) {
      super.highlightColor = value;
    }
    get splashColor() {
      return this[S.splashColor$2];
    }
    set splashColor(value) {
      super.splashColor = value;
    }
    get hoverColor() {
      return this[S.hoverColor$2];
    }
    set hoverColor(value) {
      super.hoverColor = value;
    }
    get borderColor() {
      return this[S.borderColor];
    }
    set borderColor(value) {
      super.borderColor = value;
    }
    get selectedBorderColor() {
      return this[S.selectedBorderColor];
    }
    set selectedBorderColor(value) {
      super.selectedBorderColor = value;
    }
    get disabledBorderColor() {
      return this[S.disabledBorderColor];
    }
    set disabledBorderColor(value) {
      super.disabledBorderColor = value;
    }
    get borderWidth() {
      return this[S.borderWidth];
    }
    set borderWidth(value) {
      super.borderWidth = value;
    }
    get borderRadius() {
      return this[S.borderRadius];
    }
    set borderRadius(value) {
      super.borderRadius = value;
    }
    static ['_#new#tearOff'](opts) {
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let constraints = opts && 'constraints' in opts ? opts.constraints : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let selectedColor = opts && 'selectedColor' in opts ? opts.selectedColor : null;
      let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
      let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
      let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
      let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
      let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
      let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
      let borderColor = opts && 'borderColor' in opts ? opts.borderColor : null;
      let selectedBorderColor = opts && 'selectedBorderColor' in opts ? opts.selectedBorderColor : null;
      let disabledBorderColor = opts && 'disabledBorderColor' in opts ? opts.disabledBorderColor : null;
      let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
      let borderWidth = opts && 'borderWidth' in opts ? opts.borderWidth : null;
      return new toggle_buttons_theme.ToggleButtonsThemeData.new({textStyle: textStyle, constraints: constraints, color: color, selectedColor: selectedColor, disabledColor: disabledColor, fillColor: fillColor, focusColor: focusColor, highlightColor: highlightColor, hoverColor: hoverColor, splashColor: splashColor, borderColor: borderColor, selectedBorderColor: selectedBorderColor, disabledBorderColor: disabledBorderColor, borderRadius: borderRadius, borderWidth: borderWidth});
    }
    copyWith(opts) {
      let t17, t17$, t17$0, t17$1, t17$2, t17$3, t17$4, t17$5, t17$6, t17$7, t17$8, t17$9, t17$10, t17$11, t17$12;
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let constraints = opts && 'constraints' in opts ? opts.constraints : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let selectedColor = opts && 'selectedColor' in opts ? opts.selectedColor : null;
      let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
      let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
      let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
      let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
      let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
      let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
      let borderColor = opts && 'borderColor' in opts ? opts.borderColor : null;
      let selectedBorderColor = opts && 'selectedBorderColor' in opts ? opts.selectedBorderColor : null;
      let disabledBorderColor = opts && 'disabledBorderColor' in opts ? opts.disabledBorderColor : null;
      let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
      let borderWidth = opts && 'borderWidth' in opts ? opts.borderWidth : null;
      return new toggle_buttons_theme.ToggleButtonsThemeData.new({textStyle: (t17 = textStyle, t17 == null ? this.textStyle : t17), constraints: (t17$ = constraints, t17$ == null ? this.constraints : t17$), color: (t17$0 = color, t17$0 == null ? this.color : t17$0), selectedColor: (t17$1 = selectedColor, t17$1 == null ? this.selectedColor : t17$1), disabledColor: (t17$2 = disabledColor, t17$2 == null ? this.disabledColor : t17$2), fillColor: (t17$3 = fillColor, t17$3 == null ? this.fillColor : t17$3), focusColor: (t17$4 = focusColor, t17$4 == null ? this.focusColor : t17$4), highlightColor: (t17$5 = highlightColor, t17$5 == null ? this.highlightColor : t17$5), hoverColor: (t17$6 = hoverColor, t17$6 == null ? this.hoverColor : t17$6), splashColor: (t17$7 = splashColor, t17$7 == null ? this.splashColor : t17$7), borderColor: (t17$8 = borderColor, t17$8 == null ? this.borderColor : t17$8), selectedBorderColor: (t17$9 = selectedBorderColor, t17$9 == null ? this.selectedBorderColor : t17$9), disabledBorderColor: (t17$10 = disabledBorderColor, t17$10 == null ? this.disabledBorderColor : t17$10), borderRadius: (t17$11 = borderRadius, t17$11 == null ? this.borderRadius : t17$11), borderWidth: (t17$12 = borderWidth, t17$12 == null ? this.borderWidth : t17$12)});
    }
    static lerp(a, b, t) {
      let t17, t17$, t17$0, t17$1, t17$2, t17$3, t17$4, t17$5, t17$6, t17$7, t17$8, t17$9, t17$10, t17$11, t17$12, t17$13, t17$14, t17$15, t17$16, t17$17, t17$18, t17$19, t17$20, t17$21, t17$22, t17$23, t17$24, t17$25, t17$26, t17$27;
      if (!(t !== null)) dart.assertFailed(null, I[20], 150, 13, "t != null");
      if (a == null && b == null) {
        return null;
      }
      return new toggle_buttons_theme.ToggleButtonsThemeData.new({textStyle: text_style.TextStyle.lerp((t17 = a, t17 == null ? null : t17.textStyle), (t17$ = b, t17$ == null ? null : t17$.textStyle), t), constraints: box$.BoxConstraints.lerp((t17$0 = a, t17$0 == null ? null : t17$0.constraints), (t17$1 = b, t17$1 == null ? null : t17$1.constraints), t), color: ui.Color.lerp((t17$2 = a, t17$2 == null ? null : t17$2.color), (t17$3 = b, t17$3 == null ? null : t17$3.color), t), selectedColor: ui.Color.lerp((t17$4 = a, t17$4 == null ? null : t17$4.selectedColor), (t17$5 = b, t17$5 == null ? null : t17$5.selectedColor), t), disabledColor: ui.Color.lerp((t17$6 = a, t17$6 == null ? null : t17$6.disabledColor), (t17$7 = b, t17$7 == null ? null : t17$7.disabledColor), t), fillColor: ui.Color.lerp((t17$8 = a, t17$8 == null ? null : t17$8.fillColor), (t17$9 = b, t17$9 == null ? null : t17$9.fillColor), t), focusColor: ui.Color.lerp((t17$10 = a, t17$10 == null ? null : t17$10.focusColor), (t17$11 = b, t17$11 == null ? null : t17$11.focusColor), t), highlightColor: ui.Color.lerp((t17$12 = a, t17$12 == null ? null : t17$12.highlightColor), (t17$13 = b, t17$13 == null ? null : t17$13.highlightColor), t), hoverColor: ui.Color.lerp((t17$14 = a, t17$14 == null ? null : t17$14.hoverColor), (t17$15 = b, t17$15 == null ? null : t17$15.hoverColor), t), splashColor: ui.Color.lerp((t17$16 = a, t17$16 == null ? null : t17$16.splashColor), (t17$17 = b, t17$17 == null ? null : t17$17.splashColor), t), borderColor: ui.Color.lerp((t17$18 = a, t17$18 == null ? null : t17$18.borderColor), (t17$19 = b, t17$19 == null ? null : t17$19.borderColor), t), selectedBorderColor: ui.Color.lerp((t17$20 = a, t17$20 == null ? null : t17$20.selectedBorderColor), (t17$21 = b, t17$21 == null ? null : t17$21.selectedBorderColor), t), disabledBorderColor: ui.Color.lerp((t17$22 = a, t17$22 == null ? null : t17$22.disabledBorderColor), (t17$23 = b, t17$23 == null ? null : t17$23.disabledBorderColor), t), borderRadius: border_radius.BorderRadius.lerp((t17$24 = a, t17$24 == null ? null : t17$24.borderRadius), (t17$25 = b, t17$25 == null ? null : t17$25.borderRadius), t), borderWidth: ui.lerpDouble((t17$26 = a, t17$26 == null ? null : t17$26.borderWidth), (t17$27 = b, t17$27 == null ? null : t17$27.borderWidth), t)});
    }
    get hashCode() {
      return core.Object.hash(this.textStyle, this.constraints, this.color, this.selectedColor, this.disabledColor, this.fillColor, this.focusColor, this.highlightColor, this.hoverColor, this.splashColor, this.borderColor, this.selectedBorderColor, this.disabledBorderColor, this.borderRadius, this.borderWidth);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      if (!other[S.$runtimeType]._equals(this[S.$runtimeType])) {
        return false;
      }
      return toggle_buttons_theme.ToggleButtonsThemeData.is(other) && dart.equals(other.textStyle, this.textStyle) && dart.equals(other.constraints, this.constraints) && dart.equals(other.color, this.color) && dart.equals(other.selectedColor, this.selectedColor) && dart.equals(other.disabledColor, this.disabledColor) && dart.equals(other.fillColor, this.fillColor) && dart.equals(other.focusColor, this.focusColor) && dart.equals(other.highlightColor, this.highlightColor) && dart.equals(other.hoverColor, this.hoverColor) && dart.equals(other.splashColor, this.splashColor) && dart.equals(other.borderColor, this.borderColor) && dart.equals(other.selectedBorderColor, this.selectedBorderColor) && dart.equals(other.disabledBorderColor, this.disabledBorderColor) && dart.equals(other.borderRadius, this.borderRadius) && other.borderWidth == this.borderWidth;
    }
    debugFillProperties(properties) {
      let t17;
      super.debugFillProperties(properties);
      t17 = this.textStyle;
      t17 == null ? null : t17.debugFillProperties(properties, {prefix: "textStyle."});
      properties.add(new (T$.DiagnosticsPropertyOfBoxConstraints()).new("constraints", this.constraints, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("color", this.color, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("selectedColor", this.selectedColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("disabledColor", this.disabledColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("fillColor", this.fillColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("focusColor", this.focusColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("highlightColor", this.highlightColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("hoverColor", this.hoverColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("splashColor", this.splashColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("borderColor", this.borderColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("selectedBorderColor", this.selectedBorderColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("disabledBorderColor", this.disabledBorderColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfBorderRadius()).new("borderRadius", this.borderRadius, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("borderWidth", this.borderWidth, {defaultValue: null}));
    }
  };
  (toggle_buttons_theme.ToggleButtonsThemeData.new = function(opts) {
    let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
    let constraints = opts && 'constraints' in opts ? opts.constraints : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let selectedColor = opts && 'selectedColor' in opts ? opts.selectedColor : null;
    let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
    let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let borderColor = opts && 'borderColor' in opts ? opts.borderColor : null;
    let selectedBorderColor = opts && 'selectedBorderColor' in opts ? opts.selectedBorderColor : null;
    let disabledBorderColor = opts && 'disabledBorderColor' in opts ? opts.disabledBorderColor : null;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
    let borderWidth = opts && 'borderWidth' in opts ? opts.borderWidth : null;
    this[S.textStyle$1] = textStyle;
    this[S.constraints$1] = constraints;
    this[S.color$3] = color;
    this[S.selectedColor] = selectedColor;
    this[S.disabledColor$1] = disabledColor;
    this[S.fillColor] = fillColor;
    this[S.focusColor$2] = focusColor;
    this[S.highlightColor$1] = highlightColor;
    this[S.hoverColor$2] = hoverColor;
    this[S.splashColor$2] = splashColor;
    this[S.borderColor] = borderColor;
    this[S.selectedBorderColor] = selectedBorderColor;
    this[S.disabledBorderColor] = disabledBorderColor;
    this[S.borderRadius] = borderRadius;
    this[S.borderWidth] = borderWidth;
    ;
  }).prototype = toggle_buttons_theme.ToggleButtonsThemeData.prototype;
  dart.addTypeTests(toggle_buttons_theme.ToggleButtonsThemeData);
  dart.addTypeCaches(toggle_buttons_theme.ToggleButtonsThemeData);
  dart.setMethodSignature(toggle_buttons_theme.ToggleButtonsThemeData, () => ({
    __proto__: dart.getMethods(toggle_buttons_theme.ToggleButtonsThemeData.__proto__),
    copyWith: dart.fnType(toggle_buttons_theme.ToggleButtonsThemeData, [], {borderColor: dart.nullable(ui.Color), borderRadius: dart.nullable(border_radius.BorderRadius), borderWidth: dart.nullable(core.double), color: dart.nullable(ui.Color), constraints: dart.nullable(box$.BoxConstraints), disabledBorderColor: dart.nullable(ui.Color), disabledColor: dart.nullable(ui.Color), fillColor: dart.nullable(ui.Color), focusColor: dart.nullable(ui.Color), highlightColor: dart.nullable(ui.Color), hoverColor: dart.nullable(ui.Color), selectedBorderColor: dart.nullable(ui.Color), selectedColor: dart.nullable(ui.Color), splashColor: dart.nullable(ui.Color), textStyle: dart.nullable(text_style.TextStyle)}, {})
  }));
  dart.setStaticMethodSignature(toggle_buttons_theme.ToggleButtonsThemeData, () => ['lerp']);
  dart.setLibraryUri(toggle_buttons_theme.ToggleButtonsThemeData, I[21]);
  dart.setFieldSignature(toggle_buttons_theme.ToggleButtonsThemeData, () => ({
    __proto__: dart.getFields(toggle_buttons_theme.ToggleButtonsThemeData.__proto__),
    textStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    constraints: dart.finalFieldType(dart.nullable(box$.BoxConstraints)),
    color: dart.finalFieldType(dart.nullable(ui.Color)),
    selectedColor: dart.finalFieldType(dart.nullable(ui.Color)),
    disabledColor: dart.finalFieldType(dart.nullable(ui.Color)),
    fillColor: dart.finalFieldType(dart.nullable(ui.Color)),
    focusColor: dart.finalFieldType(dart.nullable(ui.Color)),
    highlightColor: dart.finalFieldType(dart.nullable(ui.Color)),
    splashColor: dart.finalFieldType(dart.nullable(ui.Color)),
    hoverColor: dart.finalFieldType(dart.nullable(ui.Color)),
    borderColor: dart.finalFieldType(dart.nullable(ui.Color)),
    selectedBorderColor: dart.finalFieldType(dart.nullable(ui.Color)),
    disabledBorderColor: dart.finalFieldType(dart.nullable(ui.Color)),
    borderWidth: dart.finalFieldType(dart.nullable(core.double)),
    borderRadius: dart.finalFieldType(dart.nullable(border_radius.BorderRadius))
  }));
  dart.defineExtensionMethods(toggle_buttons_theme.ToggleButtonsThemeData, ['_equals']);
  dart.defineExtensionAccessors(toggle_buttons_theme.ToggleButtonsThemeData, ['hashCode']);
  toggle_buttons_theme.ToggleButtonsTheme = class ToggleButtonsTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[S.data];
    }
    set data(value) {
      super.data = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let data = opts && 'data' in opts ? opts.data : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new toggle_buttons_theme.ToggleButtonsTheme.new({key: key, data: data, child: child, $creationLocationd_0dea112b090073317d4: C[225] || CT.C225});
    }
    static of(context) {
      let t17, t17$;
      let toggleButtonsTheme = context.dependOnInheritedWidgetOfExactType(toggle_buttons_theme.ToggleButtonsTheme);
      t17$ = (t17 = toggleButtonsTheme, t17 == null ? null : t17.data);
      return t17$ == null ? theme$.Theme.of(context).toggleButtonsTheme : t17$;
    }
    wrap(context, child) {
      return new toggle_buttons_theme.ToggleButtonsTheme.new({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C[226] || CT.C226});
    }
    updateShouldNotify(oldWidget) {
      toggle_buttons_theme.ToggleButtonsTheme.as(oldWidget);
      return !this.data._equals(oldWidget.data);
    }
  };
  (toggle_buttons_theme.ToggleButtonsTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.data] = data;
    if (!(data !== null)) dart.assertFailed(null, I[20], 253, 15, "data != null");
    toggle_buttons_theme.ToggleButtonsTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = toggle_buttons_theme.ToggleButtonsTheme.prototype;
  dart.addTypeTests(toggle_buttons_theme.ToggleButtonsTheme);
  dart.addTypeCaches(toggle_buttons_theme.ToggleButtonsTheme);
  dart.setMethodSignature(toggle_buttons_theme.ToggleButtonsTheme, () => ({
    __proto__: dart.getMethods(toggle_buttons_theme.ToggleButtonsTheme.__proto__),
    wrap: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget]),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setStaticMethodSignature(toggle_buttons_theme.ToggleButtonsTheme, () => ['of']);
  dart.setLibraryUri(toggle_buttons_theme.ToggleButtonsTheme, I[21]);
  dart.setFieldSignature(toggle_buttons_theme.ToggleButtonsTheme, () => ({
    __proto__: dart.getFields(toggle_buttons_theme.ToggleButtonsTheme.__proto__),
    data: dart.finalFieldType(toggle_buttons_theme.ToggleButtonsThemeData)
  }));
  const Object_Diagnosticable$36$0 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$0.new = function() {
  }).prototype = Object_Diagnosticable$36$0.prototype;
  dart.applyMixin(Object_Diagnosticable$36$0, diagnostics.Diagnosticable);
  time_picker_theme.TimePickerThemeData = class TimePickerThemeData extends Object_Diagnosticable$36$0 {
    get backgroundColor() {
      return this[S.backgroundColor$3];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get hourMinuteTextColor() {
      return this[S.hourMinuteTextColor];
    }
    set hourMinuteTextColor(value) {
      super.hourMinuteTextColor = value;
    }
    get hourMinuteColor() {
      return this[S.hourMinuteColor];
    }
    set hourMinuteColor(value) {
      super.hourMinuteColor = value;
    }
    get dayPeriodTextColor() {
      return this[S.dayPeriodTextColor];
    }
    set dayPeriodTextColor(value) {
      super.dayPeriodTextColor = value;
    }
    get dayPeriodColor() {
      return this[S.dayPeriodColor];
    }
    set dayPeriodColor(value) {
      super.dayPeriodColor = value;
    }
    get dialHandColor() {
      return this[S.dialHandColor];
    }
    set dialHandColor(value) {
      super.dialHandColor = value;
    }
    get dialBackgroundColor() {
      return this[S.dialBackgroundColor];
    }
    set dialBackgroundColor(value) {
      super.dialBackgroundColor = value;
    }
    get dialTextColor() {
      return this[S.dialTextColor];
    }
    set dialTextColor(value) {
      super.dialTextColor = value;
    }
    get entryModeIconColor() {
      return this[S.entryModeIconColor];
    }
    set entryModeIconColor(value) {
      super.entryModeIconColor = value;
    }
    get hourMinuteTextStyle() {
      return this[S.hourMinuteTextStyle];
    }
    set hourMinuteTextStyle(value) {
      super.hourMinuteTextStyle = value;
    }
    get dayPeriodTextStyle() {
      return this[S.dayPeriodTextStyle];
    }
    set dayPeriodTextStyle(value) {
      super.dayPeriodTextStyle = value;
    }
    get helpTextStyle() {
      return this[S.helpTextStyle];
    }
    set helpTextStyle(value) {
      super.helpTextStyle = value;
    }
    get shape() {
      return this[S.shape$3];
    }
    set shape(value) {
      super.shape = value;
    }
    get hourMinuteShape() {
      return this[S.hourMinuteShape];
    }
    set hourMinuteShape(value) {
      super.hourMinuteShape = value;
    }
    get dayPeriodShape() {
      return this[S.dayPeriodShape];
    }
    set dayPeriodShape(value) {
      super.dayPeriodShape = value;
    }
    get dayPeriodBorderSide() {
      return this[S.dayPeriodBorderSide];
    }
    set dayPeriodBorderSide(value) {
      super.dayPeriodBorderSide = value;
    }
    get inputDecorationTheme() {
      return this[S.inputDecorationTheme];
    }
    set inputDecorationTheme(value) {
      super.inputDecorationTheme = value;
    }
    static ['_#new#tearOff'](opts) {
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let hourMinuteTextColor = opts && 'hourMinuteTextColor' in opts ? opts.hourMinuteTextColor : null;
      let hourMinuteColor = opts && 'hourMinuteColor' in opts ? opts.hourMinuteColor : null;
      let dayPeriodTextColor = opts && 'dayPeriodTextColor' in opts ? opts.dayPeriodTextColor : null;
      let dayPeriodColor = opts && 'dayPeriodColor' in opts ? opts.dayPeriodColor : null;
      let dialHandColor = opts && 'dialHandColor' in opts ? opts.dialHandColor : null;
      let dialBackgroundColor = opts && 'dialBackgroundColor' in opts ? opts.dialBackgroundColor : null;
      let dialTextColor = opts && 'dialTextColor' in opts ? opts.dialTextColor : null;
      let entryModeIconColor = opts && 'entryModeIconColor' in opts ? opts.entryModeIconColor : null;
      let hourMinuteTextStyle = opts && 'hourMinuteTextStyle' in opts ? opts.hourMinuteTextStyle : null;
      let dayPeriodTextStyle = opts && 'dayPeriodTextStyle' in opts ? opts.dayPeriodTextStyle : null;
      let helpTextStyle = opts && 'helpTextStyle' in opts ? opts.helpTextStyle : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let hourMinuteShape = opts && 'hourMinuteShape' in opts ? opts.hourMinuteShape : null;
      let dayPeriodShape = opts && 'dayPeriodShape' in opts ? opts.dayPeriodShape : null;
      let dayPeriodBorderSide = opts && 'dayPeriodBorderSide' in opts ? opts.dayPeriodBorderSide : null;
      let inputDecorationTheme = opts && 'inputDecorationTheme' in opts ? opts.inputDecorationTheme : null;
      return new time_picker_theme.TimePickerThemeData.new({backgroundColor: backgroundColor, hourMinuteTextColor: hourMinuteTextColor, hourMinuteColor: hourMinuteColor, dayPeriodTextColor: dayPeriodTextColor, dayPeriodColor: dayPeriodColor, dialHandColor: dialHandColor, dialBackgroundColor: dialBackgroundColor, dialTextColor: dialTextColor, entryModeIconColor: entryModeIconColor, hourMinuteTextStyle: hourMinuteTextStyle, dayPeriodTextStyle: dayPeriodTextStyle, helpTextStyle: helpTextStyle, shape: shape, hourMinuteShape: hourMinuteShape, dayPeriodShape: dayPeriodShape, dayPeriodBorderSide: dayPeriodBorderSide, inputDecorationTheme: inputDecorationTheme});
    }
    copyWith(opts) {
      let t17, t17$, t17$0, t17$1, t17$2, t17$3, t17$4, t17$5, t17$6, t17$7, t17$8, t17$9, t17$10, t17$11, t17$12, t17$13, t17$14;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let hourMinuteTextColor = opts && 'hourMinuteTextColor' in opts ? opts.hourMinuteTextColor : null;
      let hourMinuteColor = opts && 'hourMinuteColor' in opts ? opts.hourMinuteColor : null;
      let dayPeriodTextColor = opts && 'dayPeriodTextColor' in opts ? opts.dayPeriodTextColor : null;
      let dayPeriodColor = opts && 'dayPeriodColor' in opts ? opts.dayPeriodColor : null;
      let dialHandColor = opts && 'dialHandColor' in opts ? opts.dialHandColor : null;
      let dialBackgroundColor = opts && 'dialBackgroundColor' in opts ? opts.dialBackgroundColor : null;
      let dialTextColor = opts && 'dialTextColor' in opts ? opts.dialTextColor : null;
      let entryModeIconColor = opts && 'entryModeIconColor' in opts ? opts.entryModeIconColor : null;
      let hourMinuteTextStyle = opts && 'hourMinuteTextStyle' in opts ? opts.hourMinuteTextStyle : null;
      let dayPeriodTextStyle = opts && 'dayPeriodTextStyle' in opts ? opts.dayPeriodTextStyle : null;
      let helpTextStyle = opts && 'helpTextStyle' in opts ? opts.helpTextStyle : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let hourMinuteShape = opts && 'hourMinuteShape' in opts ? opts.hourMinuteShape : null;
      let dayPeriodShape = opts && 'dayPeriodShape' in opts ? opts.dayPeriodShape : null;
      let dayPeriodBorderSide = opts && 'dayPeriodBorderSide' in opts ? opts.dayPeriodBorderSide : null;
      let inputDecorationTheme = opts && 'inputDecorationTheme' in opts ? opts.inputDecorationTheme : null;
      return new time_picker_theme.TimePickerThemeData.new({backgroundColor: (t17 = backgroundColor, t17 == null ? this.backgroundColor : t17), hourMinuteTextColor: (t17$ = hourMinuteTextColor, t17$ == null ? this.hourMinuteTextColor : t17$), hourMinuteColor: (t17$0 = hourMinuteColor, t17$0 == null ? this.hourMinuteColor : t17$0), dayPeriodTextColor: (t17$1 = dayPeriodTextColor, t17$1 == null ? this.dayPeriodTextColor : t17$1), dayPeriodColor: (t17$2 = dayPeriodColor, t17$2 == null ? this.dayPeriodColor : t17$2), dialHandColor: (t17$3 = dialHandColor, t17$3 == null ? this.dialHandColor : t17$3), dialBackgroundColor: (t17$4 = dialBackgroundColor, t17$4 == null ? this.dialBackgroundColor : t17$4), dialTextColor: (t17$5 = dialTextColor, t17$5 == null ? this.dialTextColor : t17$5), entryModeIconColor: (t17$6 = entryModeIconColor, t17$6 == null ? this.entryModeIconColor : t17$6), hourMinuteTextStyle: (t17$7 = hourMinuteTextStyle, t17$7 == null ? this.hourMinuteTextStyle : t17$7), dayPeriodTextStyle: (t17$8 = dayPeriodTextStyle, t17$8 == null ? this.dayPeriodTextStyle : t17$8), helpTextStyle: (t17$9 = helpTextStyle, t17$9 == null ? this.helpTextStyle : t17$9), shape: (t17$10 = shape, t17$10 == null ? this.shape : t17$10), hourMinuteShape: (t17$11 = hourMinuteShape, t17$11 == null ? this.hourMinuteShape : t17$11), dayPeriodShape: (t17$12 = dayPeriodShape, t17$12 == null ? this.dayPeriodShape : t17$12), dayPeriodBorderSide: (t17$13 = dayPeriodBorderSide, t17$13 == null ? this.dayPeriodBorderSide : t17$13), inputDecorationTheme: (t17$14 = inputDecorationTheme, t17$14 == null ? this.inputDecorationTheme : t17$14)});
    }
    static lerp(a, b, t) {
      let t17, t17$, t17$0, t17$1, t17$2, t17$3, t17$4, t17$5, t17$6, t17$7, t17$8, t17$9, t17$10, t17$11, t17$12, t17$13, t17$14, t17$15, t17$16, t17$17, t17$18, t17$19, t17$20, t17$21, t17$22, t17$23, t17$24, t17$25, t17$26, t17$27, t17$28, t17$29, t17$30, t17$31, t17$32, t17$33, t17$34, t17$35;
      if (!(t !== null)) dart.assertFailed(null, I[22], 247, 12, "t != null");
      let lerpedBorderSide = null;
      if ((t17 = a, t17 == null ? null : t17.dayPeriodBorderSide) == null && (t17$ = b, t17$ == null ? null : t17$.dayPeriodBorderSide) == null) {
        lerpedBorderSide = null;
      } else if ((t17$0 = a, t17$0 == null ? null : t17$0.dayPeriodBorderSide) == null) {
        lerpedBorderSide = (t17$1 = b, t17$1 == null ? null : t17$1.dayPeriodBorderSide);
      } else if ((t17$2 = b, t17$2 == null ? null : t17$2.dayPeriodBorderSide) == null) {
        lerpedBorderSide = (t17$3 = a, t17$3 == null ? null : t17$3.dayPeriodBorderSide);
      } else {
        lerpedBorderSide = borders.BorderSide.lerp(dart.nullCheck(dart.nullCheck(a).dayPeriodBorderSide), dart.nullCheck(dart.nullCheck(b).dayPeriodBorderSide), t);
      }
      return new time_picker_theme.TimePickerThemeData.new({backgroundColor: ui.Color.lerp((t17$4 = a, t17$4 == null ? null : t17$4.backgroundColor), (t17$5 = b, t17$5 == null ? null : t17$5.backgroundColor), t), hourMinuteTextColor: ui.Color.lerp((t17$6 = a, t17$6 == null ? null : t17$6.hourMinuteTextColor), (t17$7 = b, t17$7 == null ? null : t17$7.hourMinuteTextColor), t), hourMinuteColor: ui.Color.lerp((t17$8 = a, t17$8 == null ? null : t17$8.hourMinuteColor), (t17$9 = b, t17$9 == null ? null : t17$9.hourMinuteColor), t), dayPeriodTextColor: ui.Color.lerp((t17$10 = a, t17$10 == null ? null : t17$10.dayPeriodTextColor), (t17$11 = b, t17$11 == null ? null : t17$11.dayPeriodTextColor), t), dayPeriodColor: ui.Color.lerp((t17$12 = a, t17$12 == null ? null : t17$12.dayPeriodColor), (t17$13 = b, t17$13 == null ? null : t17$13.dayPeriodColor), t), dialHandColor: ui.Color.lerp((t17$14 = a, t17$14 == null ? null : t17$14.dialHandColor), (t17$15 = b, t17$15 == null ? null : t17$15.dialHandColor), t), dialBackgroundColor: ui.Color.lerp((t17$16 = a, t17$16 == null ? null : t17$16.dialBackgroundColor), (t17$17 = b, t17$17 == null ? null : t17$17.dialBackgroundColor), t), dialTextColor: ui.Color.lerp((t17$18 = a, t17$18 == null ? null : t17$18.dialTextColor), (t17$19 = b, t17$19 == null ? null : t17$19.dialTextColor), t), entryModeIconColor: ui.Color.lerp((t17$20 = a, t17$20 == null ? null : t17$20.entryModeIconColor), (t17$21 = b, t17$21 == null ? null : t17$21.entryModeIconColor), t), hourMinuteTextStyle: text_style.TextStyle.lerp((t17$22 = a, t17$22 == null ? null : t17$22.hourMinuteTextStyle), (t17$23 = b, t17$23 == null ? null : t17$23.hourMinuteTextStyle), t), dayPeriodTextStyle: text_style.TextStyle.lerp((t17$24 = a, t17$24 == null ? null : t17$24.dayPeriodTextStyle), (t17$25 = b, t17$25 == null ? null : t17$25.dayPeriodTextStyle), t), helpTextStyle: text_style.TextStyle.lerp((t17$26 = a, t17$26 == null ? null : t17$26.helpTextStyle), (t17$27 = b, t17$27 == null ? null : t17$27.helpTextStyle), t), shape: borders.ShapeBorder.lerp((t17$28 = a, t17$28 == null ? null : t17$28.shape), (t17$29 = b, t17$29 == null ? null : t17$29.shape), t), hourMinuteShape: borders.ShapeBorder.lerp((t17$30 = a, t17$30 == null ? null : t17$30.hourMinuteShape), (t17$31 = b, t17$31 == null ? null : t17$31.hourMinuteShape), t), dayPeriodShape: T$.OutlinedBorderN().as(borders.ShapeBorder.lerp((t17$32 = a, t17$32 == null ? null : t17$32.dayPeriodShape), (t17$33 = b, t17$33 == null ? null : t17$33.dayPeriodShape), t)), dayPeriodBorderSide: lerpedBorderSide, inputDecorationTheme: t < 0.5 ? (t17$34 = a, t17$34 == null ? null : t17$34.inputDecorationTheme) : (t17$35 = b, t17$35 == null ? null : t17$35.inputDecorationTheme)});
    }
    get hashCode() {
      return core.Object.hash(this.backgroundColor, this.hourMinuteTextColor, this.hourMinuteColor, this.dayPeriodTextColor, this.dayPeriodColor, this.dialHandColor, this.dialBackgroundColor, this.dialTextColor, this.entryModeIconColor, this.hourMinuteTextStyle, this.dayPeriodTextStyle, this.helpTextStyle, this.shape, this.hourMinuteShape, this.dayPeriodShape, this.dayPeriodBorderSide, this.inputDecorationTheme);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      if (!other[S.$runtimeType]._equals(this[S.$runtimeType])) {
        return false;
      }
      return time_picker_theme.TimePickerThemeData.is(other) && dart.equals(other.backgroundColor, this.backgroundColor) && dart.equals(other.hourMinuteTextColor, this.hourMinuteTextColor) && dart.equals(other.hourMinuteColor, this.hourMinuteColor) && dart.equals(other.dayPeriodTextColor, this.dayPeriodTextColor) && dart.equals(other.dayPeriodColor, this.dayPeriodColor) && dart.equals(other.dialHandColor, this.dialHandColor) && dart.equals(other.dialBackgroundColor, this.dialBackgroundColor) && dart.equals(other.dialTextColor, this.dialTextColor) && dart.equals(other.entryModeIconColor, this.entryModeIconColor) && dart.equals(other.hourMinuteTextStyle, this.hourMinuteTextStyle) && dart.equals(other.dayPeriodTextStyle, this.dayPeriodTextStyle) && dart.equals(other.helpTextStyle, this.helpTextStyle) && dart.equals(other.shape, this.shape) && dart.equals(other.hourMinuteShape, this.hourMinuteShape) && dart.equals(other.dayPeriodShape, this.dayPeriodShape) && dart.equals(other.dayPeriodBorderSide, this.dayPeriodBorderSide) && dart.equals(other.inputDecorationTheme, this.inputDecorationTheme);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new colors.ColorProperty.new("backgroundColor", this.backgroundColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("hourMinuteTextColor", this.hourMinuteTextColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("hourMinuteColor", this.hourMinuteColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("dayPeriodTextColor", this.dayPeriodTextColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("dayPeriodColor", this.dayPeriodColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("dialHandColor", this.dialHandColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("dialBackgroundColor", this.dialBackgroundColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("dialTextColor", this.dialTextColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("entryModeIconColor", this.entryModeIconColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("hourMinuteTextStyle", this.hourMinuteTextStyle, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("dayPeriodTextStyle", this.dayPeriodTextStyle, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("helpTextStyle", this.helpTextStyle, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfShapeBorder()).new("shape", this.shape, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfShapeBorder()).new("hourMinuteShape", this.hourMinuteShape, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfShapeBorder()).new("dayPeriodShape", this.dayPeriodShape, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfBorderSide()).new("dayPeriodBorderSide", this.dayPeriodBorderSide, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfInputDecorationTheme()).new("inputDecorationTheme", this.inputDecorationTheme, {defaultValue: null}));
    }
  };
  (time_picker_theme.TimePickerThemeData.new = function(opts) {
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let hourMinuteTextColor = opts && 'hourMinuteTextColor' in opts ? opts.hourMinuteTextColor : null;
    let hourMinuteColor = opts && 'hourMinuteColor' in opts ? opts.hourMinuteColor : null;
    let dayPeriodTextColor = opts && 'dayPeriodTextColor' in opts ? opts.dayPeriodTextColor : null;
    let dayPeriodColor = opts && 'dayPeriodColor' in opts ? opts.dayPeriodColor : null;
    let dialHandColor = opts && 'dialHandColor' in opts ? opts.dialHandColor : null;
    let dialBackgroundColor = opts && 'dialBackgroundColor' in opts ? opts.dialBackgroundColor : null;
    let dialTextColor = opts && 'dialTextColor' in opts ? opts.dialTextColor : null;
    let entryModeIconColor = opts && 'entryModeIconColor' in opts ? opts.entryModeIconColor : null;
    let hourMinuteTextStyle = opts && 'hourMinuteTextStyle' in opts ? opts.hourMinuteTextStyle : null;
    let dayPeriodTextStyle = opts && 'dayPeriodTextStyle' in opts ? opts.dayPeriodTextStyle : null;
    let helpTextStyle = opts && 'helpTextStyle' in opts ? opts.helpTextStyle : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let hourMinuteShape = opts && 'hourMinuteShape' in opts ? opts.hourMinuteShape : null;
    let dayPeriodShape = opts && 'dayPeriodShape' in opts ? opts.dayPeriodShape : null;
    let dayPeriodBorderSide = opts && 'dayPeriodBorderSide' in opts ? opts.dayPeriodBorderSide : null;
    let inputDecorationTheme = opts && 'inputDecorationTheme' in opts ? opts.inputDecorationTheme : null;
    this[S.backgroundColor$3] = backgroundColor;
    this[S.hourMinuteTextColor] = hourMinuteTextColor;
    this[S.hourMinuteColor] = hourMinuteColor;
    this[S.dayPeriodTextColor] = dayPeriodTextColor;
    this[S.dayPeriodColor] = dayPeriodColor;
    this[S.dialHandColor] = dialHandColor;
    this[S.dialBackgroundColor] = dialBackgroundColor;
    this[S.dialTextColor] = dialTextColor;
    this[S.entryModeIconColor] = entryModeIconColor;
    this[S.hourMinuteTextStyle] = hourMinuteTextStyle;
    this[S.dayPeriodTextStyle] = dayPeriodTextStyle;
    this[S.helpTextStyle] = helpTextStyle;
    this[S.shape$3] = shape;
    this[S.hourMinuteShape] = hourMinuteShape;
    this[S.dayPeriodShape] = dayPeriodShape;
    this[S.dayPeriodBorderSide] = dayPeriodBorderSide;
    this[S.inputDecorationTheme] = inputDecorationTheme;
    ;
  }).prototype = time_picker_theme.TimePickerThemeData.prototype;
  dart.addTypeTests(time_picker_theme.TimePickerThemeData);
  dart.addTypeCaches(time_picker_theme.TimePickerThemeData);
  dart.setMethodSignature(time_picker_theme.TimePickerThemeData, () => ({
    __proto__: dart.getMethods(time_picker_theme.TimePickerThemeData.__proto__),
    copyWith: dart.fnType(time_picker_theme.TimePickerThemeData, [], {backgroundColor: dart.nullable(ui.Color), dayPeriodBorderSide: dart.nullable(borders.BorderSide), dayPeriodColor: dart.nullable(ui.Color), dayPeriodShape: dart.nullable(borders.OutlinedBorder), dayPeriodTextColor: dart.nullable(ui.Color), dayPeriodTextStyle: dart.nullable(text_style.TextStyle), dialBackgroundColor: dart.nullable(ui.Color), dialHandColor: dart.nullable(ui.Color), dialTextColor: dart.nullable(ui.Color), entryModeIconColor: dart.nullable(ui.Color), helpTextStyle: dart.nullable(text_style.TextStyle), hourMinuteColor: dart.nullable(ui.Color), hourMinuteShape: dart.nullable(borders.ShapeBorder), hourMinuteTextColor: dart.nullable(ui.Color), hourMinuteTextStyle: dart.nullable(text_style.TextStyle), inputDecorationTheme: dart.nullable(input_decorator.InputDecorationTheme), shape: dart.nullable(borders.ShapeBorder)}, {})
  }));
  dart.setStaticMethodSignature(time_picker_theme.TimePickerThemeData, () => ['lerp']);
  dart.setLibraryUri(time_picker_theme.TimePickerThemeData, I[23]);
  dart.setFieldSignature(time_picker_theme.TimePickerThemeData, () => ({
    __proto__: dart.getFields(time_picker_theme.TimePickerThemeData.__proto__),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    hourMinuteTextColor: dart.finalFieldType(dart.nullable(ui.Color)),
    hourMinuteColor: dart.finalFieldType(dart.nullable(ui.Color)),
    dayPeriodTextColor: dart.finalFieldType(dart.nullable(ui.Color)),
    dayPeriodColor: dart.finalFieldType(dart.nullable(ui.Color)),
    dialHandColor: dart.finalFieldType(dart.nullable(ui.Color)),
    dialBackgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    dialTextColor: dart.finalFieldType(dart.nullable(ui.Color)),
    entryModeIconColor: dart.finalFieldType(dart.nullable(ui.Color)),
    hourMinuteTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    dayPeriodTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    helpTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    hourMinuteShape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    dayPeriodShape: dart.finalFieldType(dart.nullable(borders.OutlinedBorder)),
    dayPeriodBorderSide: dart.finalFieldType(dart.nullable(borders.BorderSide)),
    inputDecorationTheme: dart.finalFieldType(dart.nullable(input_decorator.InputDecorationTheme))
  }));
  dart.defineExtensionMethods(time_picker_theme.TimePickerThemeData, ['_equals']);
  dart.defineExtensionAccessors(time_picker_theme.TimePickerThemeData, ['hashCode']);
  time_picker_theme.TimePickerTheme = class TimePickerTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[S.data$1];
    }
    set data(value) {
      super.data = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let data = opts && 'data' in opts ? opts.data : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new time_picker_theme.TimePickerTheme.new({key: key, data: data, child: child, $creationLocationd_0dea112b090073317d4: C[227] || CT.C227});
    }
    static of(context) {
      let t17, t17$;
      let timePickerTheme = context.dependOnInheritedWidgetOfExactType(time_picker_theme.TimePickerTheme);
      t17$ = (t17 = timePickerTheme, t17 == null ? null : t17.data);
      return t17$ == null ? theme$.Theme.of(context).timePickerTheme : t17$;
    }
    wrap(context, child) {
      return new time_picker_theme.TimePickerTheme.new({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C[228] || CT.C228});
    }
    updateShouldNotify(oldWidget) {
      time_picker_theme.TimePickerTheme.as(oldWidget);
      return !this.data._equals(oldWidget.data);
    }
  };
  (time_picker_theme.TimePickerTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.data$1] = data;
    if (!(data !== null)) dart.assertFailed(null, I[22], 365, 15, "data != null");
    time_picker_theme.TimePickerTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = time_picker_theme.TimePickerTheme.prototype;
  dart.addTypeTests(time_picker_theme.TimePickerTheme);
  dart.addTypeCaches(time_picker_theme.TimePickerTheme);
  dart.setMethodSignature(time_picker_theme.TimePickerTheme, () => ({
    __proto__: dart.getMethods(time_picker_theme.TimePickerTheme.__proto__),
    wrap: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget]),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setStaticMethodSignature(time_picker_theme.TimePickerTheme, () => ['of']);
  dart.setLibraryUri(time_picker_theme.TimePickerTheme, I[23]);
  dart.setFieldSignature(time_picker_theme.TimePickerTheme, () => ({
    __proto__: dart.getFields(time_picker_theme.TimePickerTheme.__proto__),
    data: dart.finalFieldType(time_picker_theme.TimePickerThemeData)
  }));
  const Object_Diagnosticable$36$1 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$1.new = function() {
  }).prototype = Object_Diagnosticable$36$1.prototype;
  dart.applyMixin(Object_Diagnosticable$36$1, diagnostics.Diagnosticable);
  text_selection_theme.TextSelectionThemeData = class TextSelectionThemeData extends Object_Diagnosticable$36$1 {
    get cursorColor() {
      return this[S.cursorColor];
    }
    set cursorColor(value) {
      super.cursorColor = value;
    }
    get selectionColor() {
      return this[S.selectionColor];
    }
    set selectionColor(value) {
      super.selectionColor = value;
    }
    get selectionHandleColor() {
      return this[S.selectionHandleColor];
    }
    set selectionHandleColor(value) {
      super.selectionHandleColor = value;
    }
    static ['_#new#tearOff'](opts) {
      let cursorColor = opts && 'cursorColor' in opts ? opts.cursorColor : null;
      let selectionColor = opts && 'selectionColor' in opts ? opts.selectionColor : null;
      let selectionHandleColor = opts && 'selectionHandleColor' in opts ? opts.selectionHandleColor : null;
      return new text_selection_theme.TextSelectionThemeData.new({cursorColor: cursorColor, selectionColor: selectionColor, selectionHandleColor: selectionHandleColor});
    }
    copyWith(opts) {
      let t17, t17$, t17$0;
      let cursorColor = opts && 'cursorColor' in opts ? opts.cursorColor : null;
      let selectionColor = opts && 'selectionColor' in opts ? opts.selectionColor : null;
      let selectionHandleColor = opts && 'selectionHandleColor' in opts ? opts.selectionHandleColor : null;
      return new text_selection_theme.TextSelectionThemeData.new({cursorColor: (t17 = cursorColor, t17 == null ? this.cursorColor : t17), selectionColor: (t17$ = selectionColor, t17$ == null ? this.selectionColor : t17$), selectionHandleColor: (t17$0 = selectionHandleColor, t17$0 == null ? this.selectionHandleColor : t17$0)});
    }
    static lerp(a, b, t) {
      let t17, t17$, t17$0, t17$1, t17$2, t17$3;
      if (a == null && b == null) {
        return null;
      }
      if (!(t !== null)) dart.assertFailed(null, I[24], 76, 12, "t != null");
      return new text_selection_theme.TextSelectionThemeData.new({cursorColor: ui.Color.lerp((t17 = a, t17 == null ? null : t17.cursorColor), (t17$ = b, t17$ == null ? null : t17$.cursorColor), t), selectionColor: ui.Color.lerp((t17$0 = a, t17$0 == null ? null : t17$0.selectionColor), (t17$1 = b, t17$1 == null ? null : t17$1.selectionColor), t), selectionHandleColor: ui.Color.lerp((t17$2 = a, t17$2 == null ? null : t17$2.selectionHandleColor), (t17$3 = b, t17$3 == null ? null : t17$3.selectionHandleColor), t)});
    }
    get hashCode() {
      return core.Object.hash(this.cursorColor, this.selectionColor, this.selectionHandleColor);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      if (!other[S.$runtimeType]._equals(this[S.$runtimeType])) {
        return false;
      }
      return text_selection_theme.TextSelectionThemeData.is(other) && dart.equals(other.cursorColor, this.cursorColor) && dart.equals(other.selectionColor, this.selectionColor) && dart.equals(other.selectionHandleColor, this.selectionHandleColor);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new colors.ColorProperty.new("cursorColor", this.cursorColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("selectionColor", this.selectionColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("selectionHandleColor", this.selectionHandleColor, {defaultValue: null}));
    }
  };
  (text_selection_theme.TextSelectionThemeData.new = function(opts) {
    let cursorColor = opts && 'cursorColor' in opts ? opts.cursorColor : null;
    let selectionColor = opts && 'selectionColor' in opts ? opts.selectionColor : null;
    let selectionHandleColor = opts && 'selectionHandleColor' in opts ? opts.selectionHandleColor : null;
    this[S.cursorColor] = cursorColor;
    this[S.selectionColor] = selectionColor;
    this[S.selectionHandleColor] = selectionHandleColor;
    ;
  }).prototype = text_selection_theme.TextSelectionThemeData.prototype;
  dart.addTypeTests(text_selection_theme.TextSelectionThemeData);
  dart.addTypeCaches(text_selection_theme.TextSelectionThemeData);
  dart.setMethodSignature(text_selection_theme.TextSelectionThemeData, () => ({
    __proto__: dart.getMethods(text_selection_theme.TextSelectionThemeData.__proto__),
    copyWith: dart.fnType(text_selection_theme.TextSelectionThemeData, [], {cursorColor: dart.nullable(ui.Color), selectionColor: dart.nullable(ui.Color), selectionHandleColor: dart.nullable(ui.Color)}, {})
  }));
  dart.setStaticMethodSignature(text_selection_theme.TextSelectionThemeData, () => ['lerp']);
  dart.setLibraryUri(text_selection_theme.TextSelectionThemeData, I[25]);
  dart.setFieldSignature(text_selection_theme.TextSelectionThemeData, () => ({
    __proto__: dart.getFields(text_selection_theme.TextSelectionThemeData.__proto__),
    cursorColor: dart.finalFieldType(dart.nullable(ui.Color)),
    selectionColor: dart.finalFieldType(dart.nullable(ui.Color)),
    selectionHandleColor: dart.finalFieldType(dart.nullable(ui.Color))
  }));
  dart.defineExtensionMethods(text_selection_theme.TextSelectionThemeData, ['_equals']);
  dart.defineExtensionAccessors(text_selection_theme.TextSelectionThemeData, ['hashCode']);
  text_selection_theme.TextSelectionTheme = class TextSelectionTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[S.data$2];
    }
    set data(value) {
      super.data = value;
    }
    get [S._child$1]() {
      return this[S._child];
    }
    set [S._child$1](value) {
      super[S._child$1] = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let data = opts && 'data' in opts ? opts.data : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new text_selection_theme.TextSelectionTheme.new({key: key, data: data, child: child, $creationLocationd_0dea112b090073317d4: C[231] || CT.C231});
    }
    get child() {
      return new default_selection_style.DefaultSelectionStyle.new({selectionColor: this.data.selectionColor, cursorColor: this.data.cursorColor, child: this[S._child$1], $creationLocationd_0dea112b090073317d4: C[232] || CT.C232});
    }
    static of(context) {
      let t17, t17$;
      let selectionTheme = context.dependOnInheritedWidgetOfExactType(text_selection_theme.TextSelectionTheme);
      t17$ = (t17 = selectionTheme, t17 == null ? null : t17.data);
      return t17$ == null ? theme$.Theme.of(context).textSelectionTheme : t17$;
    }
    wrap(context, child) {
      return new text_selection_theme.TextSelectionTheme.new({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C[233] || CT.C233});
    }
    updateShouldNotify(oldWidget) {
      text_selection_theme.TextSelectionTheme.as(oldWidget);
      return !this.data._equals(oldWidget.data);
    }
  };
  (text_selection_theme.TextSelectionTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.data$2] = data;
    if (!(data !== null)) dart.assertFailed(null, I[24], 147, 15, "data != null");
    this[S._child] = child;
    text_selection_theme.TextSelectionTheme.__proto__.new.call(this, {child: C[229] || CT.C229, key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = text_selection_theme.TextSelectionTheme.prototype;
  dart.addTypeTests(text_selection_theme.TextSelectionTheme);
  dart.addTypeCaches(text_selection_theme.TextSelectionTheme);
  dart.setMethodSignature(text_selection_theme.TextSelectionTheme, () => ({
    __proto__: dart.getMethods(text_selection_theme.TextSelectionTheme.__proto__),
    wrap: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget]),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setStaticMethodSignature(text_selection_theme.TextSelectionTheme, () => ['of']);
  dart.setGetterSignature(text_selection_theme.TextSelectionTheme, () => ({
    __proto__: dart.getGetters(text_selection_theme.TextSelectionTheme.__proto__),
    child: framework.Widget
  }));
  dart.setLibraryUri(text_selection_theme.TextSelectionTheme, I[25]);
  dart.setFieldSignature(text_selection_theme.TextSelectionTheme, () => ({
    __proto__: dart.getFields(text_selection_theme.TextSelectionTheme.__proto__),
    data: dart.finalFieldType(text_selection_theme.TextSelectionThemeData),
    [S._child$1]: dart.finalFieldType(framework.Widget)
  }));
  text_selection_theme._NullWidget = class _NullWidget extends framework.Widget {
    static ['_#new#tearOff']() {
      return new text_selection_theme._NullWidget.new({$creationLocationd_0dea112b090073317d4: C[234] || CT.C234});
    }
    createElement() {
      return dart.throw(new core.UnimplementedError.new());
    }
  };
  (text_selection_theme._NullWidget.new = function(opts) {
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    text_selection_theme._NullWidget.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = text_selection_theme._NullWidget.prototype;
  dart.addTypeTests(text_selection_theme._NullWidget);
  dart.addTypeCaches(text_selection_theme._NullWidget);
  dart.setMethodSignature(text_selection_theme._NullWidget, () => ({
    __proto__: dart.getMethods(text_selection_theme._NullWidget.__proto__),
    createElement: dart.fnType(framework.Element, [])
  }));
  dart.setLibraryUri(text_selection_theme._NullWidget, I[25]);
  const Object_Diagnosticable$36$2 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$2.new = function() {
  }).prototype = Object_Diagnosticable$36$2.prototype;
  dart.applyMixin(Object_Diagnosticable$36$2, diagnostics.Diagnosticable);
  text_button_theme.TextButtonThemeData = class TextButtonThemeData extends Object_Diagnosticable$36$2 {
    get style() {
      return this[S.style$3];
    }
    set style(value) {
      super.style = value;
    }
    static ['_#new#tearOff'](opts) {
      let style = opts && 'style' in opts ? opts.style : null;
      return new text_button_theme.TextButtonThemeData.new({style: style});
    }
    static lerp(a, b, t) {
      let t17, t17$;
      if (!(t !== null)) dart.assertFailed(null, I[26], 49, 13, "t != null");
      if (a == null && b == null) {
        return null;
      }
      return new text_button_theme.TextButtonThemeData.new({style: button_style.ButtonStyle.lerp((t17 = a, t17 == null ? null : t17.style), (t17$ = b, t17$ == null ? null : t17$.style), t)});
    }
    get hashCode() {
      return dart.hashCode(this.style);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      if (!other[S.$runtimeType]._equals(this[S.$runtimeType])) {
        return false;
      }
      return text_button_theme.TextButtonThemeData.is(other) && dart.equals(other.style, this.style);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfButtonStyle()).new("style", this.style, {defaultValue: null}));
    }
  };
  (text_button_theme.TextButtonThemeData.new = function(opts) {
    let style = opts && 'style' in opts ? opts.style : null;
    this[S.style$3] = style;
    ;
  }).prototype = text_button_theme.TextButtonThemeData.prototype;
  dart.addTypeTests(text_button_theme.TextButtonThemeData);
  dart.addTypeCaches(text_button_theme.TextButtonThemeData);
  dart.setStaticMethodSignature(text_button_theme.TextButtonThemeData, () => ['lerp']);
  dart.setLibraryUri(text_button_theme.TextButtonThemeData, I[27]);
  dart.setFieldSignature(text_button_theme.TextButtonThemeData, () => ({
    __proto__: dart.getFields(text_button_theme.TextButtonThemeData.__proto__),
    style: dart.finalFieldType(dart.nullable(button_style.ButtonStyle))
  }));
  dart.defineExtensionMethods(text_button_theme.TextButtonThemeData, ['_equals']);
  dart.defineExtensionAccessors(text_button_theme.TextButtonThemeData, ['hashCode']);
  text_button_theme.TextButtonTheme = class TextButtonTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[S.data$3];
    }
    set data(value) {
      super.data = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let data = opts && 'data' in opts ? opts.data : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new text_button_theme.TextButtonTheme.new({key: key, data: data, child: child, $creationLocationd_0dea112b090073317d4: C[235] || CT.C235});
    }
    static of(context) {
      let t17, t17$;
      let buttonTheme = context.dependOnInheritedWidgetOfExactType(text_button_theme.TextButtonTheme);
      t17$ = (t17 = buttonTheme, t17 == null ? null : t17.data);
      return t17$ == null ? theme$.Theme.of(context).textButtonTheme : t17$;
    }
    wrap(context, child) {
      return new text_button_theme.TextButtonTheme.new({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C[236] || CT.C236});
    }
    updateShouldNotify(oldWidget) {
      text_button_theme.TextButtonTheme.as(oldWidget);
      return !this.data._equals(oldWidget.data);
    }
  };
  (text_button_theme.TextButtonTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.data$3] = data;
    if (!(data !== null)) dart.assertFailed(null, I[26], 98, 15, "data != null");
    text_button_theme.TextButtonTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = text_button_theme.TextButtonTheme.prototype;
  dart.addTypeTests(text_button_theme.TextButtonTheme);
  dart.addTypeCaches(text_button_theme.TextButtonTheme);
  dart.setMethodSignature(text_button_theme.TextButtonTheme, () => ({
    __proto__: dart.getMethods(text_button_theme.TextButtonTheme.__proto__),
    wrap: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget]),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setStaticMethodSignature(text_button_theme.TextButtonTheme, () => ['of']);
  dart.setLibraryUri(text_button_theme.TextButtonTheme, I[27]);
  dart.setFieldSignature(text_button_theme.TextButtonTheme, () => ({
    __proto__: dart.getFields(text_button_theme.TextButtonTheme.__proto__),
    data: dart.finalFieldType(text_button_theme.TextButtonThemeData)
  }));
  tabs$.TabBarIndicatorSize = class TabBarIndicatorSize extends core._Enum {
    toString() {
      return "TabBarIndicatorSize." + this[S._name];
    }
  };
  (tabs$.TabBarIndicatorSize.new = function(index, name) {
    tabs$.TabBarIndicatorSize.__proto__.new.call(this, index, name);
    ;
  }).prototype = tabs$.TabBarIndicatorSize.prototype;
  dart.addTypeTests(tabs$.TabBarIndicatorSize);
  dart.addTypeCaches(tabs$.TabBarIndicatorSize);
  dart.setLibraryUri(tabs$.TabBarIndicatorSize, I[28]);
  dart.setStaticFieldSignature(tabs$.TabBarIndicatorSize, () => ['values', 'tab', 'label']);
  dart.defineExtensionMethods(tabs$.TabBarIndicatorSize, ['toString']);
  dart.defineLazy(tabs$.TabBarIndicatorSize, {
    /*tabs$.TabBarIndicatorSize.values*/get values() {
      return C[237] || CT.C237;
    },
    /*tabs$.TabBarIndicatorSize.tab*/get tab() {
      return C[238] || CT.C238;
    },
    /*tabs$.TabBarIndicatorSize.label*/get label() {
      return C[239] || CT.C239;
    }
  }, false);
  tabs$.Tab = class Tab extends framework.StatelessWidget {
    get text() {
      return this[S.text];
    }
    set text(value) {
      super.text = value;
    }
    get child() {
      return this[S.child$3];
    }
    set child(value) {
      super.child = value;
    }
    get icon() {
      return this[S.icon$2];
    }
    set icon(value) {
      super.icon = value;
    }
    get iconMargin() {
      return this[S.iconMargin];
    }
    set iconMargin(value) {
      super.iconMargin = value;
    }
    get height() {
      return this[S.height];
    }
    set height(value) {
      super.height = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let text = opts && 'text' in opts ? opts.text : null;
      let icon = opts && 'icon' in opts ? opts.icon : null;
      let iconMargin = opts && 'iconMargin' in opts ? opts.iconMargin : C[240] || CT.C240;
      let height = opts && 'height' in opts ? opts.height : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new tabs$.Tab.new({key: key, text: text, icon: icon, iconMargin: iconMargin, height: height, child: child, $creationLocationd_0dea112b090073317d4: C[241] || CT.C241});
    }
    [S._buildLabelText]() {
      let t19;
      t19 = this.child;
      return t19 == null ? new text$.Text.new(dart.nullCheck(this.text), {softWrap: false, overflow: text_painter.TextOverflow.fade, $creationLocationd_0dea112b090073317d4: C[242] || CT.C242}) : t19;
    }
    build(context) {
      let t19;
      if (!debug$1.debugCheckHasMaterial(context)) dart.assertFailed(null, I[29], 112, 12, "debugCheckHasMaterial(context)");
      let calculatedHeight = null;
      let label = null;
      if (this.icon == null) {
        calculatedHeight = 46;
        label = this[S._buildLabelText]();
      } else if (this.text == null && this.child == null) {
        calculatedHeight = 46;
        label = dart.nullCheck(this.icon);
      } else {
        calculatedHeight = 72;
        label = new basic.Column.new({mainAxisAlignment: flex.MainAxisAlignment.center, children: T$.JSArrayOfWidget().of([new container.Container.new({margin: this.iconMargin, child: this.icon, $creationLocationd_0dea112b090073317d4: C[243] || CT.C243}), this[S._buildLabelText]()]), $creationLocationd_0dea112b090073317d4: C[244] || CT.C244});
      }
      return new basic.SizedBox.new({height: (t19 = this.height, t19 == null ? calculatedHeight : t19), child: new basic.Center.new({widthFactor: 1.0, child: label, $creationLocationd_0dea112b090073317d4: C[245] || CT.C245}), $creationLocationd_0dea112b090073317d4: C[246] || CT.C246});
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new diagnostics.StringProperty.new("text", this.text, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfWidget()).new("icon", this.icon, {defaultValue: null}));
    }
    get preferredSize() {
      if (this.height != null) {
        return new ui.Size.fromHeight(dart.nullCheck(this.height));
      } else if ((this.text != null || this.child != null) && this.icon != null) {
        return C[247] || CT.C247;
      } else {
        return C[248] || CT.C248;
      }
    }
  };
  (tabs$.Tab.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let text = opts && 'text' in opts ? opts.text : null;
    let icon = opts && 'icon' in opts ? opts.icon : null;
    let iconMargin = opts && 'iconMargin' in opts ? opts.iconMargin : C[240] || CT.C240;
    let height = opts && 'height' in opts ? opts.height : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.text] = text;
    this[S.icon$2] = icon;
    this[S.iconMargin] = iconMargin;
    this[S.height] = height;
    this[S.child$3] = child;
    if (!(text != null || child != null || icon != null)) dart.assertFailed(null, I[29], 75, 15, "text != null || child != null || icon != null");
    if (!(text == null || child == null)) dart.assertFailed(null, I[29], 76, 15, "text == null || child == null");
    tabs$.Tab.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = tabs$.Tab.prototype;
  dart.addTypeTests(tabs$.Tab);
  dart.addTypeCaches(tabs$.Tab);
  tabs$.Tab[dart.implements] = () => [preferred_size.PreferredSizeWidget];
  dart.setMethodSignature(tabs$.Tab, () => ({
    __proto__: dart.getMethods(tabs$.Tab.__proto__),
    [S._buildLabelText]: dart.fnType(framework.Widget, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(tabs$.Tab, () => ({
    __proto__: dart.getGetters(tabs$.Tab.__proto__),
    preferredSize: ui.Size
  }));
  dart.setLibraryUri(tabs$.Tab, I[28]);
  dart.setFieldSignature(tabs$.Tab, () => ({
    __proto__: dart.getFields(tabs$.Tab.__proto__),
    text: dart.finalFieldType(dart.nullable(core.String)),
    child: dart.finalFieldType(dart.nullable(framework.Widget)),
    icon: dart.finalFieldType(dart.nullable(framework.Widget)),
    iconMargin: dart.finalFieldType(edge_insets.EdgeInsetsGeometry),
    height: dart.finalFieldType(dart.nullable(core.double))
  }));
  tabs$._TabStyle = class _TabStyle extends transitions.AnimatedWidget {
    get labelStyle() {
      return this[S.labelStyle];
    }
    set labelStyle(value) {
      super.labelStyle = value;
    }
    get unselectedLabelStyle() {
      return this[S.unselectedLabelStyle];
    }
    set unselectedLabelStyle(value) {
      super.unselectedLabelStyle = value;
    }
    get selected() {
      return this[S.selected];
    }
    set selected(value) {
      super.selected = value;
    }
    get labelColor() {
      return this[S.labelColor];
    }
    set labelColor(value) {
      super.labelColor = value;
    }
    get unselectedLabelColor() {
      return this[S.unselectedLabelColor];
    }
    set unselectedLabelColor(value) {
      super.unselectedLabelColor = value;
    }
    get child() {
      return this[S.child$4];
    }
    set child(value) {
      super.child = value;
    }
    static ['_#new#tearOff'](opts) {
      let animation = opts && 'animation' in opts ? opts.animation : null;
      let selected = opts && 'selected' in opts ? opts.selected : null;
      let labelColor = opts && 'labelColor' in opts ? opts.labelColor : null;
      let unselectedLabelColor = opts && 'unselectedLabelColor' in opts ? opts.unselectedLabelColor : null;
      let labelStyle = opts && 'labelStyle' in opts ? opts.labelStyle : null;
      let unselectedLabelStyle = opts && 'unselectedLabelStyle' in opts ? opts.unselectedLabelStyle : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new tabs$._TabStyle.new({animation: animation, selected: selected, labelColor: labelColor, unselectedLabelColor: unselectedLabelColor, labelStyle: labelStyle, unselectedLabelStyle: unselectedLabelStyle, child: child, $creationLocationd_0dea112b090073317d4: C[249] || CT.C249});
    }
    build(context) {
      let t19, t19$, t19$0, t19$1, t19$2, t19$3, t19$4, t19$5, t19$6;
      let themeData = theme$.Theme.of(context);
      let tabBarTheme = tab_bar_theme.TabBarTheme.of(context);
      let animation = T$.AnimationOfdouble().as(this.listenable);
      let defaultStyle = (t19$ = (t19 = this.labelStyle, t19 == null ? tabBarTheme.labelStyle : t19), t19$ == null ? dart.nullCheck(themeData.primaryTextTheme.bodyText1) : t19$).copyWith({inherit: true});
      let defaultUnselectedStyle = (t19$2 = (t19$1 = (t19$0 = this.unselectedLabelStyle, t19$0 == null ? tabBarTheme.unselectedLabelStyle : t19$0), t19$1 == null ? this.labelStyle : t19$1), t19$2 == null ? dart.nullCheck(themeData.primaryTextTheme.bodyText1) : t19$2).copyWith({inherit: true});
      let textStyle = this.selected ? dart.nullCheck(text_style.TextStyle.lerp(defaultStyle, defaultUnselectedStyle, animation.value)) : dart.nullCheck(text_style.TextStyle.lerp(defaultUnselectedStyle, defaultStyle, animation.value));
      let selectedColor = (t19$4 = (t19$3 = this.labelColor, t19$3 == null ? tabBarTheme.labelColor : t19$3), t19$4 == null ? dart.nullCheck(dart.nullCheck(themeData.primaryTextTheme.bodyText1).color) : t19$4);
      let unselectedColor = (t19$6 = (t19$5 = this.unselectedLabelColor, t19$5 == null ? tabBarTheme.unselectedLabelColor : t19$5), t19$6 == null ? selectedColor.withAlpha(178) : t19$6);
      let color = this.selected ? dart.nullCheck(ui.Color.lerp(selectedColor, unselectedColor, animation.value)) : dart.nullCheck(ui.Color.lerp(unselectedColor, selectedColor, animation.value));
      return new text$.DefaultTextStyle.new({style: textStyle.copyWith({color: color}), child: icon_theme.IconTheme.merge({data: new icon_theme_data.IconThemeData.new({size: 24.0, color: color}), child: this.child}), $creationLocationd_0dea112b090073317d4: C[250] || CT.C250});
    }
  };
  (tabs$._TabStyle.new = function(opts) {
    let animation = opts && 'animation' in opts ? opts.animation : null;
    let selected = opts && 'selected' in opts ? opts.selected : null;
    let labelColor = opts && 'labelColor' in opts ? opts.labelColor : null;
    let unselectedLabelColor = opts && 'unselectedLabelColor' in opts ? opts.unselectedLabelColor : null;
    let labelStyle = opts && 'labelStyle' in opts ? opts.labelStyle : null;
    let unselectedLabelStyle = opts && 'unselectedLabelStyle' in opts ? opts.unselectedLabelStyle : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.selected] = selected;
    this[S.labelColor] = labelColor;
    this[S.unselectedLabelColor] = unselectedLabelColor;
    this[S.labelStyle] = labelStyle;
    this[S.unselectedLabelStyle] = unselectedLabelStyle;
    this[S.child$4] = child;
    tabs$._TabStyle.__proto__.new.call(this, {listenable: animation, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = tabs$._TabStyle.prototype;
  dart.addTypeTests(tabs$._TabStyle);
  dart.addTypeCaches(tabs$._TabStyle);
  dart.setMethodSignature(tabs$._TabStyle, () => ({
    __proto__: dart.getMethods(tabs$._TabStyle.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(tabs$._TabStyle, I[28]);
  dart.setFieldSignature(tabs$._TabStyle, () => ({
    __proto__: dart.getFields(tabs$._TabStyle.__proto__),
    labelStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    unselectedLabelStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    selected: dart.finalFieldType(core.bool),
    labelColor: dart.finalFieldType(dart.nullable(ui.Color)),
    unselectedLabelColor: dart.finalFieldType(dart.nullable(ui.Color)),
    child: dart.finalFieldType(framework.Widget)
  }));
  tabs$._TabLabelBarRenderer = class _TabLabelBarRenderer extends flex.RenderFlex {
    static ['_#new#tearOff'](opts) {
      let direction = opts && 'direction' in opts ? opts.direction : null;
      let mainAxisSize = opts && 'mainAxisSize' in opts ? opts.mainAxisSize : null;
      let mainAxisAlignment = opts && 'mainAxisAlignment' in opts ? opts.mainAxisAlignment : null;
      let crossAxisAlignment = opts && 'crossAxisAlignment' in opts ? opts.crossAxisAlignment : null;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      let verticalDirection = opts && 'verticalDirection' in opts ? opts.verticalDirection : null;
      let onPerformLayout = opts && 'onPerformLayout' in opts ? opts.onPerformLayout : null;
      return new tabs$._TabLabelBarRenderer.new({direction: direction, mainAxisSize: mainAxisSize, mainAxisAlignment: mainAxisAlignment, crossAxisAlignment: crossAxisAlignment, textDirection: textDirection, verticalDirection: verticalDirection, onPerformLayout: onPerformLayout});
    }
    performLayout() {
      let t21, t20, t19;
      super.performLayout();
      let child = this.firstChild;
      let xOffsets = T$.JSArrayOfdouble().of([]);
      while (child != null) {
        let childParentData = flex.FlexParentData.as(dart.nullCheck(child.parentData));
        xOffsets[S.$add](childParentData.offset.dx);
        if (!dart.equals(child.parentData, childParentData)) dart.assertFailed(null, I[29], 254, 14, "child.parentData == childParentData");
        child = childParentData.nextSibling;
      }
      if (!(this.textDirection != null)) dart.assertFailed(null, I[29], 257, 12, "textDirection != null");
      switch (dart.nullCheck(this.textDirection)) {
        case C[154] || CT.C154:
          {
            xOffsets[S.$insert](0, this.size.width);
            break;
          }
        case C[155] || CT.C155:
          {
            xOffsets[S.$add](this.size.width);
            break;
          }
      }
      t19 = xOffsets;
      t20 = dart.nullCheck(this.textDirection);
      t21 = this.size.width;
      this.onPerformLayout(t19, t20, t21);
    }
  };
  (tabs$._TabLabelBarRenderer.new = function(opts) {
    let direction = opts && 'direction' in opts ? opts.direction : null;
    let mainAxisSize = opts && 'mainAxisSize' in opts ? opts.mainAxisSize : null;
    let mainAxisAlignment = opts && 'mainAxisAlignment' in opts ? opts.mainAxisAlignment : null;
    let crossAxisAlignment = opts && 'crossAxisAlignment' in opts ? opts.crossAxisAlignment : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let verticalDirection = opts && 'verticalDirection' in opts ? opts.verticalDirection : null;
    let onPerformLayout = opts && 'onPerformLayout' in opts ? opts.onPerformLayout : null;
    this.onPerformLayout = onPerformLayout;
    if (!(onPerformLayout !== null)) dart.assertFailed(null, I[29], 237, 15, "onPerformLayout != null");
    if (!(textDirection !== null)) dart.assertFailed(null, I[29], 238, 15, "textDirection != null");
    tabs$._TabLabelBarRenderer.__proto__.new.call(this, {direction: direction, mainAxisSize: mainAxisSize, mainAxisAlignment: mainAxisAlignment, crossAxisAlignment: crossAxisAlignment, textDirection: textDirection, verticalDirection: verticalDirection});
    ;
  }).prototype = tabs$._TabLabelBarRenderer.prototype;
  dart.addTypeTests(tabs$._TabLabelBarRenderer);
  dart.addTypeCaches(tabs$._TabLabelBarRenderer);
  dart.setLibraryUri(tabs$._TabLabelBarRenderer, I[28]);
  dart.setFieldSignature(tabs$._TabLabelBarRenderer, () => ({
    __proto__: dart.getFields(tabs$._TabLabelBarRenderer.__proto__),
    onPerformLayout: dart.fieldType(dart.fnType(dart.void, [core.List$(core.double), ui.TextDirection, core.double]))
  }));
  tabs$._TabLabelBar = class _TabLabelBar extends basic.Flex {
    static ['_#new#tearOff'](opts) {
      let children = opts && 'children' in opts ? opts.children : null;
      let onPerformLayout = opts && 'onPerformLayout' in opts ? opts.onPerformLayout : null;
      return new tabs$._TabLabelBar.new({children: children, onPerformLayout: onPerformLayout, $creationLocationd_0dea112b090073317d4: C[252] || CT.C252});
    }
    createRenderObject(context) {
      return new tabs$._TabLabelBarRenderer.new({direction: this.direction, mainAxisAlignment: this.mainAxisAlignment, mainAxisSize: this.mainAxisSize, crossAxisAlignment: this.crossAxisAlignment, textDirection: dart.nullCheck(this.getEffectiveTextDirection(context)), verticalDirection: this.verticalDirection, onPerformLayout: this.onPerformLayout});
    }
    updateRenderObject(context, renderObject) {
      tabs$._TabLabelBarRenderer.as(renderObject);
      super.updateRenderObject(context, renderObject);
      renderObject.onPerformLayout = this.onPerformLayout;
    }
  };
  (tabs$._TabLabelBar.new = function(opts) {
    let children = opts && 'children' in opts ? opts.children : C[251] || CT.C251;
    let onPerformLayout = opts && 'onPerformLayout' in opts ? opts.onPerformLayout : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this.onPerformLayout = onPerformLayout;
    tabs$._TabLabelBar.__proto__.new.call(this, {direction: basic_types.Axis.horizontal, mainAxisSize: flex.MainAxisSize.max, mainAxisAlignment: flex.MainAxisAlignment.start, crossAxisAlignment: flex.CrossAxisAlignment.center, verticalDirection: basic_types.VerticalDirection.down, children: children, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = tabs$._TabLabelBar.prototype;
  dart.addTypeTests(tabs$._TabLabelBar);
  dart.addTypeCaches(tabs$._TabLabelBar);
  dart.setLibraryUri(tabs$._TabLabelBar, I[28]);
  dart.setFieldSignature(tabs$._TabLabelBar, () => ({
    __proto__: dart.getFields(tabs$._TabLabelBar.__proto__),
    onPerformLayout: dart.finalFieldType(dart.fnType(dart.void, [core.List$(core.double), ui.TextDirection, core.double]))
  }));
  tabs$._IndicatorPainter = class _IndicatorPainter extends custom_paint.CustomPainter {
    static ['_#new#tearOff'](opts) {
      let controller = opts && 'controller' in opts ? opts.controller : null;
      let indicator = opts && 'indicator' in opts ? opts.indicator : null;
      let indicatorSize = opts && 'indicatorSize' in opts ? opts.indicatorSize : null;
      let tabKeys = opts && 'tabKeys' in opts ? opts.tabKeys : null;
      let old = opts && 'old' in opts ? opts.old : null;
      let indicatorPadding = opts && 'indicatorPadding' in opts ? opts.indicatorPadding : null;
      return new tabs$._IndicatorPainter.new({controller: controller, indicator: indicator, indicatorSize: indicatorSize, tabKeys: tabKeys, old: old, indicatorPadding: indicatorPadding});
    }
    markNeedsPaint() {
      this[S._needsPaint] = true;
    }
    dispose() {
      let t19;
      t19 = this[S._painter];
      t19 == null ? null : t19.dispose();
    }
    saveTabOffsets(tabOffsets, textDirection) {
      this[S._currentTabOffsets] = tabOffsets;
      this[S._currentTextDirection] = textDirection;
    }
    get maxTabIndex() {
      return dart.nullCheck(this[S._currentTabOffsets])[S.$length] - 2;
    }
    centerOf(tabIndex) {
      if (!(this[S._currentTabOffsets] != null)) dart.assertFailed(null, I[29], 371, 12, "_currentTabOffsets != null");
      if (!dart.nullCheck(this[S._currentTabOffsets])[S.$isNotEmpty]) dart.assertFailed(null, I[29], 372, 12, "_currentTabOffsets!.isNotEmpty");
      if (!(tabIndex >= 0)) dart.assertFailed(null, I[29], 373, 12, "tabIndex >= 0");
      if (!(tabIndex <= this.maxTabIndex)) dart.assertFailed(null, I[29], 374, 12, "tabIndex <= maxTabIndex");
      return (dart.nullCheck(this[S._currentTabOffsets])[S.$_get](tabIndex) + dart.nullCheck(this[S._currentTabOffsets])[S.$_get](tabIndex + 1)) / 2.0;
    }
    indicatorRect(tabBarSize, tabIndex) {
      if (!(this[S._currentTabOffsets] != null)) dart.assertFailed(null, I[29], 379, 12, "_currentTabOffsets != null");
      if (!(this[S._currentTextDirection] != null)) dart.assertFailed(null, I[29], 380, 12, "_currentTextDirection != null");
      if (!dart.nullCheck(this[S._currentTabOffsets])[S.$isNotEmpty]) dart.assertFailed(null, I[29], 381, 12, "_currentTabOffsets!.isNotEmpty");
      if (!(tabIndex >= 0)) dart.assertFailed(null, I[29], 382, 12, "tabIndex >= 0");
      if (!(tabIndex <= this.maxTabIndex)) dart.assertFailed(null, I[29], 383, 12, "tabIndex <= maxTabIndex");
      let tabLeft = null;
      let tabRight = null;
      switch (dart.nullCheck(this[S._currentTextDirection])) {
        case C[154] || CT.C154:
          {
            tabLeft = dart.nullCheck(this[S._currentTabOffsets])[S.$_get](tabIndex + 1);
            tabRight = dart.nullCheck(this[S._currentTabOffsets])[S.$_get](tabIndex);
            break;
          }
        case C[155] || CT.C155:
          {
            tabLeft = dart.nullCheck(this[S._currentTabOffsets])[S.$_get](tabIndex);
            tabRight = dart.nullCheck(this[S._currentTabOffsets])[S.$_get](tabIndex + 1);
            break;
          }
      }
      if (this.indicatorSize === tabs$.TabBarIndicatorSize.label) {
        let tabWidth = dart.nullCheck(dart.nullCheck(this.tabKeys[S.$_get](tabIndex).currentContext).size).width;
        let delta = (tabRight - tabLeft - tabWidth) / 2.0;
        tabLeft = tabLeft + delta;
        tabRight = tabRight - delta;
      }
      let insets = this.indicatorPadding.resolve(this[S._currentTextDirection]);
      let rect = new ui.Rect.fromLTWH(tabLeft, 0.0, tabRight - tabLeft, tabBarSize.height);
      if (!rect.size['>='](insets.collapsedSize)) {
        dart.throw(assertions.FlutterError.new("indicatorPadding insets should be less than Tab Size\n" + "Rect Size : " + dart.str(rect.size) + ", Insets: " + dart.str(insets)));
      }
      return insets.deflateRect(rect);
    }
    paint(canvas, size) {
      this[S._needsPaint] = false;
      this[S._painter] == null ? this[S._painter] = this.indicator.createBoxPainter(dart.bind(this, 'markNeedsPaint')) : null;
      let index = this.controller.index[S.$toDouble]();
      let value = dart.nullCheck(this.controller.animation).value;
      let ltr = index > value;
      let from = (ltr ? value[S.$floor]() : value[S.$ceil]())[S.$clamp](0, this.maxTabIndex);
      let to = (ltr ? from + 1 : from - 1)[S.$clamp](0, this.maxTabIndex);
      let fromRect = this.indicatorRect(size, from);
      let toRect = this.indicatorRect(size, to);
      this[S._currentRect] = ui.Rect.lerp(fromRect, toRect, (value - from)[S.$abs]());
      if (!(this[S._currentRect] != null)) dart.assertFailed(null, I[29], 428, 12, "_currentRect != null");
      let configuration = new image_provider.ImageConfiguration.new({size: dart.nullCheck(this[S._currentRect]).size, textDirection: this[S._currentTextDirection]});
      dart.nullCheck(this[S._painter]).paint(canvas, dart.nullCheck(this[S._currentRect]).topLeft, configuration);
    }
    shouldRepaint(old) {
      tabs$._IndicatorPainter.as(old);
      return this[S._needsPaint] || !this.controller[S.$_equals](old.controller) || !this.indicator[S.$_equals](old.indicator) || this.tabKeys[S.$length] !== old.tabKeys[S.$length] || !collections.listEquals(core.double, this[S._currentTabOffsets], old[S._currentTabOffsets]) || this[S._currentTextDirection] != old[S._currentTextDirection];
    }
  };
  (tabs$._IndicatorPainter.new = function(opts) {
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let indicator = opts && 'indicator' in opts ? opts.indicator : null;
    let indicatorSize = opts && 'indicatorSize' in opts ? opts.indicatorSize : null;
    let tabKeys = opts && 'tabKeys' in opts ? opts.tabKeys : null;
    let old = opts && 'old' in opts ? opts.old : null;
    let indicatorPadding = opts && 'indicatorPadding' in opts ? opts.indicatorPadding : null;
    this[S._currentTabOffsets] = null;
    this[S._currentTextDirection] = null;
    this[S._currentRect] = null;
    this[S._painter] = null;
    this[S._needsPaint] = false;
    this.controller = controller;
    this.indicator = indicator;
    this.indicatorSize = indicatorSize;
    this.tabKeys = tabKeys;
    this.indicatorPadding = indicatorPadding;
    if (!(controller !== null)) dart.assertFailed(null, I[29], 330, 15, "controller != null");
    if (!(indicator !== null)) dart.assertFailed(null, I[29], 331, 15, "indicator != null");
    tabs$._IndicatorPainter.__proto__.new.call(this, {repaint: controller.animation});
    if (old != null) {
      this.saveTabOffsets(old[S._currentTabOffsets], old[S._currentTextDirection]);
    }
  }).prototype = tabs$._IndicatorPainter.prototype;
  dart.addTypeTests(tabs$._IndicatorPainter);
  dart.addTypeCaches(tabs$._IndicatorPainter);
  dart.setMethodSignature(tabs$._IndicatorPainter, () => ({
    __proto__: dart.getMethods(tabs$._IndicatorPainter.__proto__),
    markNeedsPaint: dart.fnType(dart.void, []),
    dispose: dart.fnType(dart.void, []),
    saveTabOffsets: dart.fnType(dart.void, [dart.nullable(core.List$(core.double)), dart.nullable(ui.TextDirection)]),
    centerOf: dart.fnType(core.double, [core.int]),
    indicatorRect: dart.fnType(ui.Rect, [ui.Size, core.int]),
    paint: dart.fnType(dart.void, [ui.Canvas, ui.Size]),
    shouldRepaint: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setGetterSignature(tabs$._IndicatorPainter, () => ({
    __proto__: dart.getGetters(tabs$._IndicatorPainter.__proto__),
    maxTabIndex: core.int
  }));
  dart.setLibraryUri(tabs$._IndicatorPainter, I[28]);
  dart.setFieldSignature(tabs$._IndicatorPainter, () => ({
    __proto__: dart.getFields(tabs$._IndicatorPainter.__proto__),
    controller: dart.finalFieldType(tab_controller.TabController),
    indicator: dart.finalFieldType(decoration.Decoration),
    indicatorSize: dart.finalFieldType(dart.nullable(tabs$.TabBarIndicatorSize)),
    indicatorPadding: dart.finalFieldType(edge_insets.EdgeInsetsGeometry),
    tabKeys: dart.finalFieldType(core.List$(framework.GlobalKey$(framework.State$(framework.StatefulWidget)))),
    [S._currentTabOffsets]: dart.fieldType(dart.nullable(core.List$(core.double))),
    [S._currentTextDirection]: dart.fieldType(dart.nullable(ui.TextDirection)),
    [S._currentRect]: dart.fieldType(dart.nullable(ui.Rect)),
    [S._painter]: dart.fieldType(dart.nullable(decoration.BoxPainter)),
    [S._needsPaint]: dart.fieldType(core.bool)
  }));
  const Animation_AnimationWithParentMixin$36 = class Animation_AnimationWithParentMixin extends animation$.Animation$(core.double) {};
  (Animation_AnimationWithParentMixin$36.new = function() {
    Animation_AnimationWithParentMixin$36.__proto__.new.call(this);
  }).prototype = Animation_AnimationWithParentMixin$36.prototype;
  dart.applyMixin(Animation_AnimationWithParentMixin$36, animations.AnimationWithParentMixin$(core.double));
  tabs$._ChangeAnimation = class _ChangeAnimation extends Animation_AnimationWithParentMixin$36 {
    static ['_#new#tearOff'](controller) {
      return new tabs$._ChangeAnimation.new(controller);
    }
    get parent() {
      return dart.nullCheck(this.controller.animation);
    }
    removeStatusListener(listener) {
      if (this.controller.animation != null) {
        super.removeStatusListener(listener);
      }
    }
    removeListener(listener) {
      if (this.controller.animation != null) {
        super.removeListener(listener);
      }
    }
    get value() {
      return tabs$._indexChangeProgress(this.controller);
    }
  };
  (tabs$._ChangeAnimation.new = function(controller) {
    this.controller = controller;
    tabs$._ChangeAnimation.__proto__.new.call(this);
    ;
  }).prototype = tabs$._ChangeAnimation.prototype;
  dart.addTypeTests(tabs$._ChangeAnimation);
  dart.addTypeCaches(tabs$._ChangeAnimation);
  dart.setGetterSignature(tabs$._ChangeAnimation, () => ({
    __proto__: dart.getGetters(tabs$._ChangeAnimation.__proto__),
    parent: animation$.Animation$(core.double),
    value: core.double
  }));
  dart.setLibraryUri(tabs$._ChangeAnimation, I[28]);
  dart.setFieldSignature(tabs$._ChangeAnimation, () => ({
    __proto__: dart.getFields(tabs$._ChangeAnimation.__proto__),
    controller: dart.finalFieldType(tab_controller.TabController)
  }));
  const Animation_AnimationWithParentMixin$36$ = class Animation_AnimationWithParentMixin extends animation$.Animation$(core.double) {};
  (Animation_AnimationWithParentMixin$36$.new = function() {
    Animation_AnimationWithParentMixin$36$.__proto__.new.call(this);
  }).prototype = Animation_AnimationWithParentMixin$36$.prototype;
  dart.applyMixin(Animation_AnimationWithParentMixin$36$, animations.AnimationWithParentMixin$(core.double));
  tabs$._DragAnimation = class _DragAnimation extends Animation_AnimationWithParentMixin$36$ {
    static ['_#new#tearOff'](controller, index) {
      return new tabs$._DragAnimation.new(controller, index);
    }
    get parent() {
      return dart.nullCheck(this.controller.animation);
    }
    removeStatusListener(listener) {
      if (this.controller.animation != null) {
        super.removeStatusListener(listener);
      }
    }
    removeListener(listener) {
      if (this.controller.animation != null) {
        super.removeListener(listener);
      }
    }
    get value() {
      if (!!this.controller.indexIsChanging) dart.assertFailed(null, I[29], 499, 12, "!controller.indexIsChanging");
      let controllerMaxValue = (this.controller.length - 1)[S.$toDouble]();
      let controllerValue = math$.clampDouble(dart.nullCheck(this.controller.animation).value, 0.0, controllerMaxValue);
      return math$.clampDouble((controllerValue - this.index[S.$toDouble]())[S.$abs](), 0.0, 1.0);
    }
  };
  (tabs$._DragAnimation.new = function(controller, index) {
    this.controller = controller;
    this.index = index;
    tabs$._DragAnimation.__proto__.new.call(this);
    ;
  }).prototype = tabs$._DragAnimation.prototype;
  dart.addTypeTests(tabs$._DragAnimation);
  dart.addTypeCaches(tabs$._DragAnimation);
  dart.setGetterSignature(tabs$._DragAnimation, () => ({
    __proto__: dart.getGetters(tabs$._DragAnimation.__proto__),
    parent: animation$.Animation$(core.double),
    value: core.double
  }));
  dart.setLibraryUri(tabs$._DragAnimation, I[28]);
  dart.setFieldSignature(tabs$._DragAnimation, () => ({
    __proto__: dart.getFields(tabs$._DragAnimation.__proto__),
    controller: dart.finalFieldType(tab_controller.TabController),
    index: dart.finalFieldType(core.int)
  }));
  tabs$._TabBarScrollPosition = class _TabBarScrollPosition extends scroll_position_with_single_context.ScrollPositionWithSingleContext {
    static ['_#new#tearOff'](opts) {
      let physics = opts && 'physics' in opts ? opts.physics : null;
      let context = opts && 'context' in opts ? opts.context : null;
      let oldPosition = opts && 'oldPosition' in opts ? opts.oldPosition : null;
      let tabBar = opts && 'tabBar' in opts ? opts.tabBar : null;
      return new tabs$._TabBarScrollPosition.new({physics: physics, context: context, oldPosition: oldPosition, tabBar: tabBar});
    }
    applyContentDimensions(minScrollExtent, maxScrollExtent) {
      let result = true;
      if (this[S._initialViewportDimensionWasZero] !== true) {
        if (!(this.viewportDimension !== null)) dart.assertFailed(null, I[29], 535, 14, "viewportDimension != null");
        this[S._initialViewportDimensionWasZero] = this.viewportDimension !== 0.0;
        this.correctPixels(this.tabBar[S._initialScrollOffset](this.viewportDimension, minScrollExtent, maxScrollExtent));
        result = false;
      }
      return super.applyContentDimensions(minScrollExtent, maxScrollExtent) && result;
    }
  };
  (tabs$._TabBarScrollPosition.new = function(opts) {
    let physics = opts && 'physics' in opts ? opts.physics : null;
    let context = opts && 'context' in opts ? opts.context : null;
    let oldPosition = opts && 'oldPosition' in opts ? opts.oldPosition : null;
    let tabBar = opts && 'tabBar' in opts ? opts.tabBar : null;
    this[S._initialViewportDimensionWasZero] = null;
    this.tabBar = tabBar;
    tabs$._TabBarScrollPosition.__proto__.new.call(this, {initialPixels: null, physics: physics, context: context, oldPosition: oldPosition});
    ;
  }).prototype = tabs$._TabBarScrollPosition.prototype;
  dart.addTypeTests(tabs$._TabBarScrollPosition);
  dart.addTypeCaches(tabs$._TabBarScrollPosition);
  dart.setLibraryUri(tabs$._TabBarScrollPosition, I[28]);
  dart.setFieldSignature(tabs$._TabBarScrollPosition, () => ({
    __proto__: dart.getFields(tabs$._TabBarScrollPosition.__proto__),
    tabBar: dart.finalFieldType(tabs$._TabBarState),
    [S._initialViewportDimensionWasZero]: dart.fieldType(dart.nullable(core.bool))
  }));
  tabs$._TabBarScrollController = class _TabBarScrollController extends scroll_controller.ScrollController {
    static ['_#new#tearOff'](tabBar) {
      return new tabs$._TabBarScrollController.new(tabBar);
    }
    createScrollPosition(physics, context, oldPosition) {
      return new tabs$._TabBarScrollPosition.new({physics: physics, context: context, oldPosition: oldPosition, tabBar: this.tabBar});
    }
  };
  (tabs$._TabBarScrollController.new = function(tabBar) {
    this.tabBar = tabBar;
    tabs$._TabBarScrollController.__proto__.new.call(this);
    ;
  }).prototype = tabs$._TabBarScrollController.prototype;
  dart.addTypeTests(tabs$._TabBarScrollController);
  dart.addTypeCaches(tabs$._TabBarScrollController);
  dart.setLibraryUri(tabs$._TabBarScrollController, I[28]);
  dart.setFieldSignature(tabs$._TabBarScrollController, () => ({
    __proto__: dart.getFields(tabs$._TabBarScrollController.__proto__),
    tabBar: dart.finalFieldType(tabs$._TabBarState)
  }));
  tabs$.TabBar = class TabBar extends framework.StatefulWidget {
    get tabs() {
      return this[S.tabs];
    }
    set tabs(value) {
      super.tabs = value;
    }
    get controller() {
      return this[S.controller];
    }
    set controller(value) {
      super.controller = value;
    }
    get isScrollable() {
      return this[S.isScrollable];
    }
    set isScrollable(value) {
      super.isScrollable = value;
    }
    get padding() {
      return this[S.padding$3];
    }
    set padding(value) {
      super.padding = value;
    }
    get indicatorColor() {
      return this[S.indicatorColor];
    }
    set indicatorColor(value) {
      super.indicatorColor = value;
    }
    get indicatorWeight() {
      return this[S.indicatorWeight];
    }
    set indicatorWeight(value) {
      super.indicatorWeight = value;
    }
    get indicatorPadding() {
      return this[S.indicatorPadding];
    }
    set indicatorPadding(value) {
      super.indicatorPadding = value;
    }
    get indicator() {
      return this[S.indicator];
    }
    set indicator(value) {
      super.indicator = value;
    }
    get automaticIndicatorColorAdjustment() {
      return this[S.automaticIndicatorColorAdjustment];
    }
    set automaticIndicatorColorAdjustment(value) {
      super.automaticIndicatorColorAdjustment = value;
    }
    get indicatorSize() {
      return this[S.indicatorSize];
    }
    set indicatorSize(value) {
      super.indicatorSize = value;
    }
    get labelColor() {
      return this[S.labelColor$1];
    }
    set labelColor(value) {
      super.labelColor = value;
    }
    get unselectedLabelColor() {
      return this[S.unselectedLabelColor$1];
    }
    set unselectedLabelColor(value) {
      super.unselectedLabelColor = value;
    }
    get labelStyle() {
      return this[S.labelStyle$1];
    }
    set labelStyle(value) {
      super.labelStyle = value;
    }
    get labelPadding() {
      return this[S.labelPadding];
    }
    set labelPadding(value) {
      super.labelPadding = value;
    }
    get unselectedLabelStyle() {
      return this[S.unselectedLabelStyle$1];
    }
    set unselectedLabelStyle(value) {
      super.unselectedLabelStyle = value;
    }
    get overlayColor() {
      return this[S.overlayColor$1];
    }
    set overlayColor(value) {
      super.overlayColor = value;
    }
    get dragStartBehavior() {
      return this[S.dragStartBehavior];
    }
    set dragStartBehavior(value) {
      super.dragStartBehavior = value;
    }
    get mouseCursor() {
      return this[S.mouseCursor$3];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    get enableFeedback() {
      return this[S.enableFeedback$3];
    }
    set enableFeedback(value) {
      super.enableFeedback = value;
    }
    get onTap() {
      return this[S.onTap];
    }
    set onTap(value) {
      super.onTap = value;
    }
    get physics() {
      return this[S.physics];
    }
    set physics(value) {
      super.physics = value;
    }
    get splashFactory() {
      return this[S.splashFactory$1];
    }
    set splashFactory(value) {
      super.splashFactory = value;
    }
    get splashBorderRadius() {
      return this[S.splashBorderRadius];
    }
    set splashBorderRadius(value) {
      super.splashBorderRadius = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let tabs = opts && 'tabs' in opts ? opts.tabs : null;
      let controller = opts && 'controller' in opts ? opts.controller : null;
      let isScrollable = opts && 'isScrollable' in opts ? opts.isScrollable : false;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let indicatorColor = opts && 'indicatorColor' in opts ? opts.indicatorColor : null;
      let automaticIndicatorColorAdjustment = opts && 'automaticIndicatorColorAdjustment' in opts ? opts.automaticIndicatorColorAdjustment : true;
      let indicatorWeight = opts && 'indicatorWeight' in opts ? opts.indicatorWeight : 2;
      let indicatorPadding = opts && 'indicatorPadding' in opts ? opts.indicatorPadding : C[253] || CT.C253;
      let indicator = opts && 'indicator' in opts ? opts.indicator : null;
      let indicatorSize = opts && 'indicatorSize' in opts ? opts.indicatorSize : null;
      let labelColor = opts && 'labelColor' in opts ? opts.labelColor : null;
      let labelStyle = opts && 'labelStyle' in opts ? opts.labelStyle : null;
      let labelPadding = opts && 'labelPadding' in opts ? opts.labelPadding : null;
      let unselectedLabelColor = opts && 'unselectedLabelColor' in opts ? opts.unselectedLabelColor : null;
      let unselectedLabelStyle = opts && 'unselectedLabelStyle' in opts ? opts.unselectedLabelStyle : null;
      let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C[254] || CT.C254;
      let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
      let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
      let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
      let onTap = opts && 'onTap' in opts ? opts.onTap : null;
      let physics = opts && 'physics' in opts ? opts.physics : null;
      let splashFactory = opts && 'splashFactory' in opts ? opts.splashFactory : null;
      let splashBorderRadius = opts && 'splashBorderRadius' in opts ? opts.splashBorderRadius : null;
      return new tabs$.TabBar.new({key: key, tabs: tabs, controller: controller, isScrollable: isScrollable, padding: padding, indicatorColor: indicatorColor, automaticIndicatorColorAdjustment: automaticIndicatorColorAdjustment, indicatorWeight: indicatorWeight, indicatorPadding: indicatorPadding, indicator: indicator, indicatorSize: indicatorSize, labelColor: labelColor, labelStyle: labelStyle, labelPadding: labelPadding, unselectedLabelColor: unselectedLabelColor, unselectedLabelStyle: unselectedLabelStyle, dragStartBehavior: dragStartBehavior, overlayColor: overlayColor, mouseCursor: mouseCursor, enableFeedback: enableFeedback, onTap: onTap, physics: physics, splashFactory: splashFactory, splashBorderRadius: splashBorderRadius, $creationLocationd_0dea112b090073317d4: C[255] || CT.C255});
    }
    get preferredSize() {
      let maxHeight = 46;
      for (let item of this.tabs) {
        if (preferred_size.PreferredSizeWidget.is(item)) {
          let itemHeight = item.preferredSize.height;
          maxHeight = math.max(core.double, itemHeight, maxHeight);
        }
      }
      return new ui.Size.fromHeight(maxHeight + this.indicatorWeight);
    }
    get tabHasTextAndIcon() {
      for (let item of this.tabs) {
        if (preferred_size.PreferredSizeWidget.is(item)) {
          if (item.preferredSize.height === 72) {
            return true;
          }
        }
      }
      return false;
    }
    createState() {
      return new tabs$._TabBarState.new();
    }
  };
  (tabs$.TabBar.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let tabs = opts && 'tabs' in opts ? opts.tabs : null;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let isScrollable = opts && 'isScrollable' in opts ? opts.isScrollable : false;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let indicatorColor = opts && 'indicatorColor' in opts ? opts.indicatorColor : null;
    let automaticIndicatorColorAdjustment = opts && 'automaticIndicatorColorAdjustment' in opts ? opts.automaticIndicatorColorAdjustment : true;
    let indicatorWeight = opts && 'indicatorWeight' in opts ? opts.indicatorWeight : 2;
    let indicatorPadding = opts && 'indicatorPadding' in opts ? opts.indicatorPadding : C[253] || CT.C253;
    let indicator = opts && 'indicator' in opts ? opts.indicator : null;
    let indicatorSize = opts && 'indicatorSize' in opts ? opts.indicatorSize : null;
    let labelColor = opts && 'labelColor' in opts ? opts.labelColor : null;
    let labelStyle = opts && 'labelStyle' in opts ? opts.labelStyle : null;
    let labelPadding = opts && 'labelPadding' in opts ? opts.labelPadding : null;
    let unselectedLabelColor = opts && 'unselectedLabelColor' in opts ? opts.unselectedLabelColor : null;
    let unselectedLabelStyle = opts && 'unselectedLabelStyle' in opts ? opts.unselectedLabelStyle : null;
    let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C[254] || CT.C254;
    let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
    let onTap = opts && 'onTap' in opts ? opts.onTap : null;
    let physics = opts && 'physics' in opts ? opts.physics : null;
    let splashFactory = opts && 'splashFactory' in opts ? opts.splashFactory : null;
    let splashBorderRadius = opts && 'splashBorderRadius' in opts ? opts.splashBorderRadius : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.tabs] = tabs;
    this[S.controller] = controller;
    this[S.isScrollable] = isScrollable;
    this[S.padding$3] = padding;
    this[S.indicatorColor] = indicatorColor;
    this[S.automaticIndicatorColorAdjustment] = automaticIndicatorColorAdjustment;
    this[S.indicatorWeight] = indicatorWeight;
    this[S.indicatorPadding] = indicatorPadding;
    this[S.indicator] = indicator;
    this[S.indicatorSize] = indicatorSize;
    this[S.labelColor$1] = labelColor;
    this[S.labelStyle$1] = labelStyle;
    this[S.labelPadding] = labelPadding;
    this[S.unselectedLabelColor$1] = unselectedLabelColor;
    this[S.unselectedLabelStyle$1] = unselectedLabelStyle;
    this[S.dragStartBehavior] = dragStartBehavior;
    this[S.overlayColor$1] = overlayColor;
    this[S.mouseCursor$3] = mouseCursor;
    this[S.enableFeedback$3] = enableFeedback;
    this[S.onTap] = onTap;
    this[S.physics] = physics;
    this[S.splashFactory$1] = splashFactory;
    this[S.splashBorderRadius] = splashBorderRadius;
    if (!(tabs !== null)) dart.assertFailed(null, I[29], 637, 15, "tabs != null");
    if (!(isScrollable !== null)) dart.assertFailed(null, I[29], 638, 15, "isScrollable != null");
    if (!(dragStartBehavior !== null)) dart.assertFailed(null, I[29], 639, 15, "dragStartBehavior != null");
    if (!(indicator != null || indicatorWeight !== null && indicatorWeight > 0.0)) dart.assertFailed(null, I[29], 640, 15, "indicator != null || (indicatorWeight != null && indicatorWeight > 0.0)");
    if (!(indicator != null || indicatorPadding !== null)) dart.assertFailed(null, I[29], 641, 15, "indicator != null || (indicatorPadding != null)");
    tabs$.TabBar.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = tabs$.TabBar.prototype;
  dart.addTypeTests(tabs$.TabBar);
  dart.addTypeCaches(tabs$.TabBar);
  tabs$.TabBar[dart.implements] = () => [preferred_size.PreferredSizeWidget];
  dart.setMethodSignature(tabs$.TabBar, () => ({
    __proto__: dart.getMethods(tabs$.TabBar.__proto__),
    createState: dart.fnType(framework.State$(tabs$.TabBar), [])
  }));
  dart.setGetterSignature(tabs$.TabBar, () => ({
    __proto__: dart.getGetters(tabs$.TabBar.__proto__),
    preferredSize: ui.Size,
    tabHasTextAndIcon: core.bool
  }));
  dart.setLibraryUri(tabs$.TabBar, I[28]);
  dart.setFieldSignature(tabs$.TabBar, () => ({
    __proto__: dart.getFields(tabs$.TabBar.__proto__),
    tabs: dart.finalFieldType(core.List$(framework.Widget)),
    controller: dart.finalFieldType(dart.nullable(tab_controller.TabController)),
    isScrollable: dart.finalFieldType(core.bool),
    padding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    indicatorColor: dart.finalFieldType(dart.nullable(ui.Color)),
    indicatorWeight: dart.finalFieldType(core.double),
    indicatorPadding: dart.finalFieldType(edge_insets.EdgeInsetsGeometry),
    indicator: dart.finalFieldType(dart.nullable(decoration.Decoration)),
    automaticIndicatorColorAdjustment: dart.finalFieldType(core.bool),
    indicatorSize: dart.finalFieldType(dart.nullable(tabs$.TabBarIndicatorSize)),
    labelColor: dart.finalFieldType(dart.nullable(ui.Color)),
    unselectedLabelColor: dart.finalFieldType(dart.nullable(ui.Color)),
    labelStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    labelPadding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    unselectedLabelStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    overlayColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    dragStartBehavior: dart.finalFieldType(recognizer.DragStartBehavior),
    mouseCursor: dart.finalFieldType(dart.nullable(mouse_cursor.MouseCursor)),
    enableFeedback: dart.finalFieldType(dart.nullable(core.bool)),
    onTap: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.int]))),
    physics: dart.finalFieldType(dart.nullable(scroll_physics.ScrollPhysics)),
    splashFactory: dart.finalFieldType(dart.nullable(ink_well.InteractiveInkFeatureFactory)),
    splashBorderRadius: dart.finalFieldType(dart.nullable(border_radius.BorderRadius))
  }));
  tabs$._TabBarState = class _TabBarState extends framework.State$(tabs$.TabBar) {
    get [S._tabStripWidth]() {
      let t19;
      t19 = this[S.___TabBarState__tabStripWidth];
      return t19 == null ? dart.throw(new _internal.LateError.fieldNI("_tabStripWidth")) : t19;
    }
    set [S._tabStripWidth](library$32package$58flutter$47src$47material$47tabs$46dart$58$58_tabStripWidth$35param) {
      this[S.___TabBarState__tabStripWidth] = library$32package$58flutter$47src$47material$47tabs$46dart$58$58_tabStripWidth$35param;
    }
    get [S._tabKeys]() {
      let t19;
      t19 = this[S.___TabBarState__tabKeys];
      return t19 == null ? dart.throw(new _internal.LateError.fieldNI("_tabKeys")) : t19;
    }
    set [S._tabKeys](library$32package$58flutter$47src$47material$47tabs$46dart$58$58_tabKeys$35param) {
      this[S.___TabBarState__tabKeys] = library$32package$58flutter$47src$47material$47tabs$46dart$58$58_tabKeys$35param;
    }
    initState() {
      super.initState();
      this[S._tabKeys] = this.widget.tabs[S.$map](T$.GlobalKeyOfStateOfStatefulWidget(), dart.fn(tab => T$.GlobalKeyOfStateOfStatefulWidget().new(), T$.WidgetToGlobalKeyOfStateOfStatefulWidget()))[S.$toList]();
    }
    get [S._indicator]() {
      let t19, t20, t19$;
      if (this.widget.indicator != null) {
        return dart.nullCheck(this.widget.indicator);
      }
      let tabBarTheme = tab_bar_theme.TabBarTheme.of(this.context);
      if (tabBarTheme.indicator != null) {
        return dart.nullCheck(tabBarTheme.indicator);
      }
      let color = (t19 = this.widget.indicatorColor, t19 == null ? theme$.Theme.of(this.context).indicatorColor : t19);
      if (this.widget.automaticIndicatorColorAdjustment && color.value === (t19$ = material.Material.of(this.context), t19$ == null ? null : (t20 = t19$.color, t20 == null ? null : t20.value))) {
        color = colors$.Colors.white;
      }
      return new tab_indicator.UnderlineTabIndicator.new({borderSide: new borders.BorderSide.new({width: this.widget.indicatorWeight, color: color})});
    }
    get [S._controllerIsValid]() {
      let t19;
      return (t19 = this[S._controller], t19 == null ? null : t19.animation) != null;
    }
    [S._updateTabController]() {
      let t19;
      let newController = (t19 = this.widget.controller, t19 == null ? tab_controller.DefaultTabController.of(this.context) : t19);
      if (!dart.fn(() => {
        if (newController == null) {
          dart.throw(assertions.FlutterError.new("No TabController for " + dart.str(this.widget[S.$runtimeType]) + ".\n" + "When creating a " + dart.str(this.widget[S.$runtimeType]) + ", you must either provide an explicit " + "TabController using the \"controller\" property, or you must ensure that there " + "is a DefaultTabController above the " + dart.str(this.widget[S.$runtimeType]) + ".\n" + "In this case, there was neither an explicit controller nor a default controller."));
        }
        return true;
      }, T$.VoidTobool())()) dart.assertFailed(null, I[29], 970, 12, "() {\n      if (newController == null) {\n        throw FlutterError(\n          'No TabController for ${widget.runtimeType}.\\n'\n          'When creating a ${widget.runtimeType}, you must either provide an explicit '\n          'TabController using the \"controller\" property, or you must ensure that there '\n          'is a DefaultTabController above the ${widget.runtimeType}.\\n'\n          'In this case, there was neither an explicit controller nor a default controller.',\n        );\n      }\n      return true;\n    }()");
      if (dart.equals(newController, this[S._controller])) {
        return;
      }
      if (this[S._controllerIsValid]) {
        dart.nullCheck(dart.nullCheck(this[S._controller]).animation).removeListener(dart.bind(this, S._handleTabControllerAnimationTick));
        dart.nullCheck(this[S._controller]).removeListener(dart.bind(this, S._handleTabControllerTick));
      }
      this[S._controller] = newController;
      if (this[S._controller] != null) {
        dart.nullCheck(dart.nullCheck(this[S._controller]).animation).addListener(dart.bind(this, S._handleTabControllerAnimationTick));
        dart.nullCheck(this[S._controller]).addListener(dart.bind(this, S._handleTabControllerTick));
        this[S._currentIndex] = dart.nullCheck(this[S._controller]).index;
      }
    }
    [S._initIndicatorPainter]() {
      let t19;
      this[S._indicatorPainter] = !this[S._controllerIsValid] ? null : new tabs$._IndicatorPainter.new({controller: dart.nullCheck(this[S._controller]), indicator: this[S._indicator], indicatorSize: (t19 = this.widget.indicatorSize, t19 == null ? tab_bar_theme.TabBarTheme.of(this.context).indicatorSize : t19), indicatorPadding: this.widget.indicatorPadding, tabKeys: this[S._tabKeys], old: this[S._indicatorPainter]});
    }
    didChangeDependencies() {
      super.didChangeDependencies();
      if (!debug$1.debugCheckHasMaterial(this.context)) dart.assertFailed(null, I[29], 1013, 12, "debugCheckHasMaterial(context)");
      this[S._updateTabController]();
      this[S._initIndicatorPainter]();
    }
    didUpdateWidget(oldWidget) {
      tabs$.TabBar.as(oldWidget);
      super.didUpdateWidget(oldWidget);
      if (!dart.equals(this.widget.controller, oldWidget.controller)) {
        this[S._updateTabController]();
        this[S._initIndicatorPainter]();
      } else if (!dart.equals(this.widget.indicatorColor, oldWidget.indicatorColor) || this.widget.indicatorWeight !== oldWidget.indicatorWeight || this.widget.indicatorSize != oldWidget.indicatorSize || !dart.equals(this.widget.indicator, oldWidget.indicator)) {
        this[S._initIndicatorPainter]();
      }
      if (this.widget.tabs[S.$length] > this[S._tabKeys][S.$length]) {
        let delta = this.widget.tabs[S.$length] - this[S._tabKeys][S.$length];
        this[S._tabKeys][S.$addAll](T$.ListOfGlobalKeyOfStateOfStatefulWidget().generate(delta, dart.fn(n => T$.GlobalKeyOfStateOfStatefulWidget().new(), T$.intToGlobalKeyOfStateOfStatefulWidget())));
      } else if (this.widget.tabs[S.$length] < this[S._tabKeys][S.$length]) {
        this[S._tabKeys][S.$removeRange](this.widget.tabs[S.$length], this[S._tabKeys][S.$length]);
      }
    }
    dispose() {
      dart.nullCheck(this[S._indicatorPainter]).dispose();
      if (this[S._controllerIsValid]) {
        dart.nullCheck(dart.nullCheck(this[S._controller]).animation).removeListener(dart.bind(this, S._handleTabControllerAnimationTick));
        dart.nullCheck(this[S._controller]).removeListener(dart.bind(this, S._handleTabControllerTick));
      }
      this[S._controller] = null;
      super.dispose();
    }
    get maxTabIndex() {
      return dart.nullCheck(this[S._indicatorPainter]).maxTabIndex;
    }
    [S._tabScrollOffset](index, viewportWidth, minExtent, maxExtent) {
      if (!this.widget.isScrollable) {
        return 0.0;
      }
      let tabCenter = dart.nullCheck(this[S._indicatorPainter]).centerOf(index);
      switch (basic.Directionality.of(this.context)) {
        case C[154] || CT.C154:
          {
            tabCenter = this[S._tabStripWidth] - tabCenter;
            break;
          }
        case C[155] || CT.C155:
          {
            break;
          }
      }
      return math$.clampDouble(tabCenter - viewportWidth / 2.0, minExtent, maxExtent);
    }
    [S._tabCenteredScrollOffset](index) {
      let position = dart.nullCheck(this[S._scrollController]).position;
      return this[S._tabScrollOffset](index, position.viewportDimension, position.minScrollExtent, position.maxScrollExtent);
    }
    [S._initialScrollOffset](viewportWidth, minExtent, maxExtent) {
      return this[S._tabScrollOffset](dart.nullCheck(this[S._currentIndex]), viewportWidth, minExtent, maxExtent);
    }
    [S._scrollToCurrentIndex]() {
      let offset = this[S._tabCenteredScrollOffset](dart.nullCheck(this[S._currentIndex]));
      dart.nullCheck(this[S._scrollController]).animateTo(offset, {duration: constants.kTabScrollDuration, curve: curves.Curves.ease});
    }
    [S._scrollToControllerValue]() {
      let t19, t19$;
      let leadingPosition = dart.nullCheck(this[S._currentIndex]) > 0 ? this[S._tabCenteredScrollOffset](dart.nullCheck(this[S._currentIndex]) - 1) : null;
      let middlePosition = this[S._tabCenteredScrollOffset](dart.nullCheck(this[S._currentIndex]));
      let trailingPosition = dart.nullCheck(this[S._currentIndex]) < this.maxTabIndex ? this[S._tabCenteredScrollOffset](dart.nullCheck(this[S._currentIndex]) + 1) : null;
      let index = dart.nullCheck(this[S._controller]).index[S.$toDouble]();
      let value = dart.nullCheck(dart.nullCheck(this[S._controller]).animation).value;
      let offset = null;
      if (value === index - 1.0) {
        offset = (t19 = leadingPosition, t19 == null ? middlePosition : t19);
      } else if (value === index + 1.0) {
        offset = (t19$ = trailingPosition, t19$ == null ? middlePosition : t19$);
      } else if (value === index) {
        offset = middlePosition;
      } else if (value < index) {
        offset = leadingPosition == null ? middlePosition : dart.nullCheck(ui.lerpDouble(middlePosition, leadingPosition, index - value));
      } else {
        offset = trailingPosition == null ? middlePosition : dart.nullCheck(ui.lerpDouble(middlePosition, trailingPosition, value - index));
      }
      dart.nullCheck(this[S._scrollController]).jumpTo(offset);
    }
    [S._handleTabControllerAnimationTick]() {
      if (!this.mounted) dart.assertFailed(null, I[29], 1106, 12, "mounted");
      if (!dart.nullCheck(this[S._controller]).indexIsChanging && this.widget.isScrollable) {
        this[S._currentIndex] = dart.nullCheck(this[S._controller]).index;
        this[S._scrollToControllerValue]();
      }
    }
    [S._handleTabControllerTick]() {
      if (dart.nullCheck(this[S._controller]).index !== this[S._currentIndex]) {
        this[S._currentIndex] = dart.nullCheck(this[S._controller]).index;
        if (this.widget.isScrollable) {
          this[S._scrollToCurrentIndex]();
        }
      }
      this.setState(dart.fn(() => {
      }, T$.VoidTovoid()));
    }
    [S._saveTabOffsets](tabOffsets, textDirection, width) {
      let t19;
      this[S._tabStripWidth] = width;
      t19 = this[S._indicatorPainter];
      t19 == null ? null : t19.saveTabOffsets(tabOffsets, textDirection);
    }
    [S._handleTap](index) {
      let t19;
      if (!(index >= 0 && index < this.widget.tabs[S.$length])) dart.assertFailed(null, I[29], 1134, 12, "index >= 0 && index < widget.tabs.length");
      dart.nullCheck(this[S._controller]).animateTo(index);
      t19 = this.widget.onTap;
      t19 == null ? null : t19(index);
    }
    [S._buildStyledTab](child, selected, animation) {
      return new tabs$._TabStyle.new({animation: animation, selected: selected, labelColor: this.widget.labelColor, unselectedLabelColor: this.widget.unselectedLabelColor, labelStyle: this.widget.labelStyle, unselectedLabelStyle: this.widget.unselectedLabelStyle, child: child, $creationLocationd_0dea112b090073317d4: C[256] || CT.C256});
    }
    [S._debugScheduleCheckHasValidTabsCount]() {
      if (this[S._debugHasScheduledValidTabsCountCheck]) {
        return true;
      }
      binding.WidgetsBinding.instance.addPostFrameCallback(dart.fn(duration => {
        this[S._debugHasScheduledValidTabsCountCheck] = false;
        if (!this.mounted) {
          return;
        }
        if (!dart.fn(() => {
          if (dart.nullCheck(this[S._controller]).length !== this.widget.tabs[S.$length]) {
            dart.throw(assertions.FlutterError.new("Controller's length property (" + dart.str(dart.nullCheck(this[S._controller]).length) + ") does not match the " + "number of tabs (" + dart.str(this.widget.tabs[S.$length]) + ") present in TabBar's tabs property."));
          }
          return true;
        }, T$.VoidTobool())()) dart.assertFailed(null, I[29], 1160, 14, "() {\n        if (_controller!.length != widget.tabs.length) {\n          throw FlutterError(\n            \"Controller's length property (${_controller!.length}) does not match the \"\n            \"number of tabs (${widget.tabs.length}) present in TabBar's tabs property.\",\n          );\n        }\n        return true;\n      }()");
      }, T$.DurationTovoid()));
      this[S._debugHasScheduledValidTabsCountCheck] = true;
      return true;
    }
    build(context) {
      let t21, t20, t20$, t20$0, t20$1, t20$2;
      if (!debug$1.debugCheckHasMaterialLocalizations(context)) dart.assertFailed(null, I[29], 1176, 12, "debugCheckHasMaterialLocalizations(context)");
      if (!this[S._debugScheduleCheckHasValidTabsCount]()) dart.assertFailed(null, I[29], 1177, 12, "_debugScheduleCheckHasValidTabsCount()");
      let localizations = material_localizations.MaterialLocalizations.of(context);
      if (dart.nullCheck(this[S._controller]).length === 0) {
        return new container.Container.new({height: 46 + this.widget.indicatorWeight, $creationLocationd_0dea112b090073317d4: C[257] || CT.C257});
      }
      let tabBarTheme = tab_bar_theme.TabBarTheme.of(context);
      let wrappedTabs = T$.ListOfWidget().generate(this.widget.tabs[S.$length], dart.fn(index => {
        let t19, t19$, t19$0, t19$1;
        let adjustedPadding = null;
        if (preferred_size.PreferredSizeWidget.is(this.widget.tabs[S.$_get](index))) {
          let tab = preferred_size.PreferredSizeWidget.as(this.widget.tabs[S.$_get](index));
          if (this.widget.tabHasTextAndIcon && tab.preferredSize.height === 46) {
            if (this.widget.labelPadding != null || tabBarTheme.labelPadding != null) {
              adjustedPadding = (t19 = this.widget.labelPadding, t19 == null ? dart.nullCheck(tabBarTheme.labelPadding) : t19).add(C[258] || CT.C258);
            } else {
              adjustedPadding = C[259] || CT.C259;
            }
          }
        }
        return new basic.Center.new({heightFactor: 1.0, child: new basic.Padding.new({padding: (t19$1 = (t19$0 = (t19$ = adjustedPadding, t19$ == null ? this.widget.labelPadding : t19$), t19$0 == null ? tabBarTheme.labelPadding : t19$0), t19$1 == null ? constants.kTabLabelPadding : t19$1), child: new basic.KeyedSubtree.new({key: this[S._tabKeys][S.$_get](index), child: this.widget.tabs[S.$_get](index), $creationLocationd_0dea112b090073317d4: C[260] || CT.C260}), $creationLocationd_0dea112b090073317d4: C[261] || CT.C261}), $creationLocationd_0dea112b090073317d4: C[262] || CT.C262});
      }, T$.intToCenter()));
      if (this[S._controller] != null) {
        let previousIndex = dart.nullCheck(this[S._controller]).previousIndex;
        if (dart.nullCheck(this[S._controller]).indexIsChanging) {
          if (!(this[S._currentIndex] !== previousIndex)) dart.assertFailed(null, I[29], 1224, 16, "_currentIndex != previousIndex");
          let animation = new tabs$._ChangeAnimation.new(dart.nullCheck(this[S._controller]));
          wrappedTabs[S.$_set](dart.nullCheck(this[S._currentIndex]), this[S._buildStyledTab](wrappedTabs[S.$_get](dart.nullCheck(this[S._currentIndex])), true, animation));
          wrappedTabs[S.$_set](previousIndex, this[S._buildStyledTab](wrappedTabs[S.$_get](previousIndex), false, animation));
        } else {
          let tabIndex = dart.nullCheck(this[S._currentIndex]);
          let centerAnimation = new tabs$._DragAnimation.new(dart.nullCheck(this[S._controller]), tabIndex);
          wrappedTabs[S.$_set](tabIndex, this[S._buildStyledTab](wrappedTabs[S.$_get](tabIndex), true, centerAnimation));
          if (dart.nullCheck(this[S._currentIndex]) > 0) {
            let tabIndex = dart.nullCheck(this[S._currentIndex]) - 1;
            let previousAnimation = new animations.ReverseAnimation.new(new tabs$._DragAnimation.new(dart.nullCheck(this[S._controller]), tabIndex));
            wrappedTabs[S.$_set](tabIndex, this[S._buildStyledTab](wrappedTabs[S.$_get](tabIndex), false, previousAnimation));
          }
          if (dart.nullCheck(this[S._currentIndex]) < this.widget.tabs[S.$length] - 1) {
            let tabIndex = dart.nullCheck(this[S._currentIndex]) + 1;
            let nextAnimation = new animations.ReverseAnimation.new(new tabs$._DragAnimation.new(dart.nullCheck(this[S._controller]), tabIndex));
            wrappedTabs[S.$_set](tabIndex, this[S._buildStyledTab](wrappedTabs[S.$_get](tabIndex), false, nextAnimation));
          }
        }
      }
      let tabCount = this.widget.tabs[S.$length];
      for (let index = 0; index < tabCount; index = index + 1) {
        let states = (() => {
          let t19 = T$.LinkedHashSetOfMaterialState().new();
          if (index === this[S._currentIndex]) t19.add(material_state.MaterialState.selected);
          return t19;
        })();
        let effectiveMouseCursor = (t20$ = (t20 = material_state.MaterialStateProperty.resolveAs(T$.MouseCursorN(), this.widget.mouseCursor, states), t20 == null ? (t21 = tabBarTheme.mouseCursor, t21 == null ? null : t21.resolve(states)) : t20), t20$ == null ? material_state.MaterialStateMouseCursor.clickable.resolve(states) : t20$);
        wrappedTabs[S.$_set](index, new ink_well.InkWell.new({mouseCursor: effectiveMouseCursor, onTap: dart.fn(() => {
            this[S._handleTap](index);
          }, T$.VoidTovoid()), enableFeedback: (t20$0 = this.widget.enableFeedback, t20$0 == null ? true : t20$0), overlayColor: (t20$1 = this.widget.overlayColor, t20$1 == null ? tabBarTheme.overlayColor : t20$1), splashFactory: (t20$2 = this.widget.splashFactory, t20$2 == null ? tabBarTheme.splashFactory : t20$2), borderRadius: this.widget.splashBorderRadius, child: new basic.Padding.new({padding: new edge_insets.EdgeInsets.only({bottom: this.widget.indicatorWeight}), child: new basic.Stack.new({children: T$.JSArrayOfWidget().of([wrappedTabs[S.$_get](index), new basic.Semantics.new({selected: index === this[S._currentIndex], label: localizations.tabLabel({tabIndex: index + 1, tabCount: tabCount}), $creationLocationd_0dea112b090073317d4: C[263] || CT.C263})]), $creationLocationd_0dea112b090073317d4: C[264] || CT.C264}), $creationLocationd_0dea112b090073317d4: C[265] || CT.C265}), $creationLocationd_0dea112b090073317d4: C[266] || CT.C266}));
        if (!this.widget.isScrollable) {
          wrappedTabs[S.$_set](index, new basic.Expanded.new({child: wrappedTabs[S.$_get](index), $creationLocationd_0dea112b090073317d4: C[267] || CT.C267}));
        }
      }
      let tabBar = new basic.CustomPaint.new({painter: this[S._indicatorPainter], child: new tabs$._TabStyle.new({animation: animations.kAlwaysDismissedAnimation, selected: false, labelColor: this.widget.labelColor, unselectedLabelColor: this.widget.unselectedLabelColor, labelStyle: this.widget.labelStyle, unselectedLabelStyle: this.widget.unselectedLabelStyle, child: new tabs$._TabLabelBar.new({onPerformLayout: dart.bind(this, S._saveTabOffsets), children: wrappedTabs, $creationLocationd_0dea112b090073317d4: C[268] || CT.C268}), $creationLocationd_0dea112b090073317d4: C[269] || CT.C269}), $creationLocationd_0dea112b090073317d4: C[270] || CT.C270});
      if (this.widget.isScrollable) {
        this[S._scrollController] == null ? this[S._scrollController] = new tabs$._TabBarScrollController.new(this) : null;
        tabBar = new single_child_scroll_view.SingleChildScrollView.new({dragStartBehavior: this.widget.dragStartBehavior, scrollDirection: basic_types.Axis.horizontal, controller: this[S._scrollController], padding: this.widget.padding, physics: this.widget.physics, child: tabBar, $creationLocationd_0dea112b090073317d4: C[271] || CT.C271});
      } else if (this.widget.padding != null) {
        tabBar = new basic.Padding.new({padding: dart.nullCheck(this.widget.padding), child: tabBar, $creationLocationd_0dea112b090073317d4: C[272] || CT.C272});
      }
      return tabBar;
    }
    static ['_#new#tearOff']() {
      return new tabs$._TabBarState.new();
    }
  };
  (tabs$._TabBarState.new = function() {
    this[S._scrollController] = null;
    this[S._controller] = null;
    this[S._indicatorPainter] = null;
    this[S._currentIndex] = null;
    this[S.___TabBarState__tabStripWidth] = null;
    this[S.___TabBarState__tabKeys] = null;
    this[S._debugHasScheduledValidTabsCountCheck] = false;
    tabs$._TabBarState.__proto__.new.call(this);
    ;
  }).prototype = tabs$._TabBarState.prototype;
  dart.addTypeTests(tabs$._TabBarState);
  dart.addTypeCaches(tabs$._TabBarState);
  dart.setMethodSignature(tabs$._TabBarState, () => ({
    __proto__: dart.getMethods(tabs$._TabBarState.__proto__),
    [S._updateTabController]: dart.fnType(dart.void, []),
    [S._initIndicatorPainter]: dart.fnType(dart.void, []),
    [S._tabScrollOffset]: dart.fnType(core.double, [core.int, core.double, core.double, core.double]),
    [S._tabCenteredScrollOffset]: dart.fnType(core.double, [core.int]),
    [S._initialScrollOffset]: dart.fnType(core.double, [core.double, core.double, core.double]),
    [S._scrollToCurrentIndex]: dart.fnType(dart.void, []),
    [S._scrollToControllerValue]: dart.fnType(dart.void, []),
    [S._handleTabControllerAnimationTick]: dart.fnType(dart.void, []),
    [S._handleTabControllerTick]: dart.fnType(dart.void, []),
    [S._saveTabOffsets]: dart.fnType(dart.void, [core.List$(core.double), ui.TextDirection, core.double]),
    [S._handleTap]: dart.fnType(dart.void, [core.int]),
    [S._buildStyledTab]: dart.fnType(framework.Widget, [framework.Widget, core.bool, animation$.Animation$(core.double)]),
    [S._debugScheduleCheckHasValidTabsCount]: dart.fnType(core.bool, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(tabs$._TabBarState, () => ({
    __proto__: dart.getGetters(tabs$._TabBarState.__proto__),
    [S._tabStripWidth]: core.double,
    [S._tabKeys]: core.List$(framework.GlobalKey$(framework.State$(framework.StatefulWidget))),
    [S._indicator]: decoration.Decoration,
    [S._controllerIsValid]: core.bool,
    maxTabIndex: core.int
  }));
  dart.setSetterSignature(tabs$._TabBarState, () => ({
    __proto__: dart.getSetters(tabs$._TabBarState.__proto__),
    [S._tabStripWidth]: core.double,
    [S._tabKeys]: core.List$(framework.GlobalKey$(framework.State$(framework.StatefulWidget)))
  }));
  dart.setLibraryUri(tabs$._TabBarState, I[28]);
  dart.setFieldSignature(tabs$._TabBarState, () => ({
    __proto__: dart.getFields(tabs$._TabBarState.__proto__),
    [S._scrollController]: dart.fieldType(dart.nullable(scroll_controller.ScrollController)),
    [S._controller]: dart.fieldType(dart.nullable(tab_controller.TabController)),
    [S._indicatorPainter]: dart.fieldType(dart.nullable(tabs$._IndicatorPainter)),
    [S._currentIndex]: dart.fieldType(dart.nullable(core.int)),
    [S.___TabBarState__tabStripWidth]: dart.fieldType(dart.nullable(core.double)),
    [S.___TabBarState__tabKeys]: dart.fieldType(dart.nullable(core.List$(framework.GlobalKey$(framework.State$(framework.StatefulWidget))))),
    [S._debugHasScheduledValidTabsCountCheck]: dart.fieldType(core.bool)
  }));
  tabs$.TabBarView = class TabBarView extends framework.StatefulWidget {
    get controller() {
      return this[S.controller$1];
    }
    set controller(value) {
      super.controller = value;
    }
    get children() {
      return this[S.children];
    }
    set children(value) {
      super.children = value;
    }
    get physics() {
      return this[S.physics$1];
    }
    set physics(value) {
      super.physics = value;
    }
    get dragStartBehavior() {
      return this[S.dragStartBehavior$1];
    }
    set dragStartBehavior(value) {
      super.dragStartBehavior = value;
    }
    get viewportFraction() {
      return this[S.viewportFraction];
    }
    set viewportFraction(value) {
      super.viewportFraction = value;
    }
    get clipBehavior() {
      return this[S.clipBehavior$3];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let children = opts && 'children' in opts ? opts.children : null;
      let controller = opts && 'controller' in opts ? opts.controller : null;
      let physics = opts && 'physics' in opts ? opts.physics : null;
      let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C[254] || CT.C254;
      let viewportFraction = opts && 'viewportFraction' in opts ? opts.viewportFraction : 1;
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[99] || CT.C99;
      return new tabs$.TabBarView.new({key: key, children: children, controller: controller, physics: physics, dragStartBehavior: dragStartBehavior, viewportFraction: viewportFraction, clipBehavior: clipBehavior, $creationLocationd_0dea112b090073317d4: C[273] || CT.C273});
    }
    createState() {
      return new tabs$._TabBarViewState.new();
    }
  };
  (tabs$.TabBarView.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let children = opts && 'children' in opts ? opts.children : null;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let physics = opts && 'physics' in opts ? opts.physics : null;
    let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C[254] || CT.C254;
    let viewportFraction = opts && 'viewportFraction' in opts ? opts.viewportFraction : 1;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[99] || CT.C99;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.children] = children;
    this[S.controller$1] = controller;
    this[S.physics$1] = physics;
    this[S.dragStartBehavior$1] = dragStartBehavior;
    this[S.viewportFraction] = viewportFraction;
    this[S.clipBehavior$3] = clipBehavior;
    if (!(children !== null)) dart.assertFailed(null, I[29], 1347, 15, "children != null");
    if (!(dragStartBehavior !== null)) dart.assertFailed(null, I[29], 1348, 15, "dragStartBehavior != null");
    tabs$.TabBarView.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = tabs$.TabBarView.prototype;
  dart.addTypeTests(tabs$.TabBarView);
  dart.addTypeCaches(tabs$.TabBarView);
  dart.setMethodSignature(tabs$.TabBarView, () => ({
    __proto__: dart.getMethods(tabs$.TabBarView.__proto__),
    createState: dart.fnType(framework.State$(tabs$.TabBarView), [])
  }));
  dart.setLibraryUri(tabs$.TabBarView, I[28]);
  dart.setFieldSignature(tabs$.TabBarView, () => ({
    __proto__: dart.getFields(tabs$.TabBarView.__proto__),
    controller: dart.finalFieldType(dart.nullable(tab_controller.TabController)),
    children: dart.finalFieldType(core.List$(framework.Widget)),
    physics: dart.finalFieldType(dart.nullable(scroll_physics.ScrollPhysics)),
    dragStartBehavior: dart.finalFieldType(recognizer.DragStartBehavior),
    viewportFraction: dart.finalFieldType(core.double),
    clipBehavior: dart.finalFieldType(ui.Clip)
  }));
  tabs$._TabBarViewState = class _TabBarViewState extends framework.State$(tabs$.TabBarView) {
    get [S._pageController]() {
      let t20;
      t20 = this[S.___TabBarViewState__pageController];
      return t20 == null ? dart.throw(new _internal.LateError.fieldNI("_pageController")) : t20;
    }
    set [S._pageController](library$32package$58flutter$47src$47material$47tabs$46dart$58$58_pageController$35param) {
      this[S.___TabBarViewState__pageController] = library$32package$58flutter$47src$47material$47tabs$46dart$58$58_pageController$35param;
    }
    get [S._children]() {
      let t20;
      t20 = this[S.___TabBarViewState__children];
      return t20 == null ? dart.throw(new _internal.LateError.fieldNI("_children")) : t20;
    }
    set [S._children](library$32package$58flutter$47src$47material$47tabs$46dart$58$58_children$35param) {
      this[S.___TabBarViewState__children] = library$32package$58flutter$47src$47material$47tabs$46dart$58$58_children$35param;
    }
    get [S._childrenWithKey]() {
      let t20;
      t20 = this[S.___TabBarViewState__childrenWithKey];
      return t20 == null ? dart.throw(new _internal.LateError.fieldNI("_childrenWithKey")) : t20;
    }
    set [S._childrenWithKey](library$32package$58flutter$47src$47material$47tabs$46dart$58$58_childrenWithKey$35param) {
      this[S.___TabBarViewState__childrenWithKey] = library$32package$58flutter$47src$47material$47tabs$46dart$58$58_childrenWithKey$35param;
    }
    get [S._controllerIsValid]() {
      let t20;
      return (t20 = this[S._controller], t20 == null ? null : t20.animation) != null;
    }
    [S._updateTabController]() {
      let t20;
      let newController = (t20 = this.widget.controller, t20 == null ? tab_controller.DefaultTabController.of(this.context) : t20);
      if (!dart.fn(() => {
        if (newController == null) {
          dart.throw(assertions.FlutterError.new("No TabController for " + dart.str(this.widget[S.$runtimeType]) + ".\n" + "When creating a " + dart.str(this.widget[S.$runtimeType]) + ", you must either provide an explicit " + "TabController using the \"controller\" property, or you must ensure that there " + "is a DefaultTabController above the " + dart.str(this.widget[S.$runtimeType]) + ".\n" + "In this case, there was neither an explicit controller nor a default controller."));
        }
        return true;
      }, T$.VoidTobool())()) dart.assertFailed(null, I[29], 1404, 12, "() {\n      if (newController == null) {\n        throw FlutterError(\n          'No TabController for ${widget.runtimeType}.\\n'\n          'When creating a ${widget.runtimeType}, you must either provide an explicit '\n          'TabController using the \"controller\" property, or you must ensure that there '\n          'is a DefaultTabController above the ${widget.runtimeType}.\\n'\n          'In this case, there was neither an explicit controller nor a default controller.',\n        );\n      }\n      return true;\n    }()");
      if (dart.equals(newController, this[S._controller])) {
        return;
      }
      if (this[S._controllerIsValid]) {
        dart.nullCheck(dart.nullCheck(this[S._controller]).animation).removeListener(dart.bind(this, S._handleTabControllerAnimationTick));
      }
      this[S._controller] = newController;
      if (this[S._controller] != null) {
        dart.nullCheck(dart.nullCheck(this[S._controller]).animation).addListener(dart.bind(this, S._handleTabControllerAnimationTick));
      }
    }
    initState() {
      super.initState();
      this[S._updateChildren]();
    }
    didChangeDependencies() {
      super.didChangeDependencies();
      this[S._updateTabController]();
      this[S._currentIndex] = dart.nullCheck(this[S._controller]).index;
      this[S._pageController] = new page_view.PageController.new({initialPage: dart.nullCheck(this[S._currentIndex]), viewportFraction: this.widget.viewportFraction});
    }
    didUpdateWidget(oldWidget) {
      tabs$.TabBarView.as(oldWidget);
      super.didUpdateWidget(oldWidget);
      if (!dart.equals(this.widget.controller, oldWidget.controller)) {
        this[S._updateTabController]();
        this[S._currentIndex] = dart.nullCheck(this[S._controller]).index;
        this[S._warpUnderwayCount] = this[S._warpUnderwayCount] + 1;
        this[S._pageController].jumpToPage(dart.nullCheck(this[S._currentIndex]));
        this[S._warpUnderwayCount] = this[S._warpUnderwayCount] - 1;
      }
      if (!this.widget.children[S.$_equals](oldWidget.children) && this[S._warpUnderwayCount] === 0) {
        this[S._updateChildren]();
      }
    }
    dispose() {
      if (this[S._controllerIsValid]) {
        dart.nullCheck(dart.nullCheck(this[S._controller]).animation).removeListener(dart.bind(this, S._handleTabControllerAnimationTick));
      }
      this[S._controller] = null;
      super.dispose();
    }
    [S._updateChildren]() {
      this[S._children] = this.widget.children;
      this[S._childrenWithKey] = basic.KeyedSubtree.ensureUniqueKeysForList(this.widget.children);
    }
    [S._handleTabControllerAnimationTick]() {
      if (this[S._warpUnderwayCount] > 0 || !dart.nullCheck(this[S._controller]).indexIsChanging) {
        return;
      }
      if (dart.nullCheck(this[S._controller]).index !== this[S._currentIndex]) {
        this[S._currentIndex] = dart.nullCheck(this[S._controller]).index;
        this[S._warpToCurrentIndex]();
      }
    }
    [S._warpToCurrentIndex]() {
      return async.async(dart.void, (function* _warpToCurrentIndex() {
        if (!this.mounted) {
          return T$.FutureOfvoid().value();
        }
        if (this[S._pageController].page === dart.nullCheck(this[S._currentIndex])[S.$toDouble]()) {
          return T$.FutureOfvoid().value();
        }
        let duration = dart.nullCheck(this[S._controller]).animationDuration;
        let previousIndex = dart.nullCheck(this[S._controller]).previousIndex;
        if ((dart.nullCheck(this[S._currentIndex]) - previousIndex)[S.$abs]() === 1) {
          if (duration._equals(core.Duration.zero)) {
            this[S._pageController].jumpToPage(dart.nullCheck(this[S._currentIndex]));
            return T$.FutureOfvoid().value();
          }
          this[S._warpUnderwayCount] = this[S._warpUnderwayCount] + 1;
          yield this[S._pageController].animateToPage(dart.nullCheck(this[S._currentIndex]), {duration: duration, curve: curves.Curves.ease});
          this[S._warpUnderwayCount] = this[S._warpUnderwayCount] - 1;
          return T$.FutureOfvoid().value();
        }
        if (!((dart.nullCheck(this[S._currentIndex]) - previousIndex)[S.$abs]() > 1)) dart.assertFailed(null, I[29], 1511, 12, "(_currentIndex! - previousIndex).abs() > 1");
        let initialPage = dart.nullCheck(this[S._currentIndex]) > previousIndex ? dart.nullCheck(this[S._currentIndex]) - 1 : dart.nullCheck(this[S._currentIndex]) + 1;
        let originalChildren = this[S._childrenWithKey];
        this.setState(dart.fn(() => {
          this[S._warpUnderwayCount] = this[S._warpUnderwayCount] + 1;
          this[S._childrenWithKey] = T$.ListOfWidget().of(this[S._childrenWithKey], {growable: false});
          let temp = this[S._childrenWithKey][S.$_get](initialPage);
          this[S._childrenWithKey][S.$_set](initialPage, this[S._childrenWithKey][S.$_get](previousIndex));
          this[S._childrenWithKey][S.$_set](previousIndex, temp);
        }, T$.VoidTovoid()));
        this[S._pageController].jumpToPage(initialPage);
        if (duration._equals(core.Duration.zero)) {
          this[S._pageController].jumpToPage(dart.nullCheck(this[S._currentIndex]));
          return T$.FutureOfvoid().value();
        }
        yield this[S._pageController].animateToPage(dart.nullCheck(this[S._currentIndex]), {duration: duration, curve: curves.Curves.ease});
        if (!this.mounted) {
          return T$.FutureOfvoid().value();
        }
        this.setState(dart.fn(() => {
          this[S._warpUnderwayCount] = this[S._warpUnderwayCount] - 1;
          if (!this.widget.children[S.$_equals](this[S._children])) {
            this[S._updateChildren]();
          } else {
            this[S._childrenWithKey] = originalChildren;
          }
        }, T$.VoidTovoid()));
      }).bind(this));
    }
    [S._handleScrollNotification](notification) {
      if (this[S._warpUnderwayCount] > 0) {
        return false;
      }
      if (notification.depth !== 0) {
        return false;
      }
      this[S._warpUnderwayCount] = this[S._warpUnderwayCount] + 1;
      if (scroll_notification.ScrollUpdateNotification.is(notification) && !dart.nullCheck(this[S._controller]).indexIsChanging) {
        if ((dart.nullCheck(this[S._pageController].page) - dart.nullCheck(this[S._controller]).index)[S.$abs]() > 1.0) {
          dart.nullCheck(this[S._controller]).index = dart.nullCheck(this[S._pageController].page)[S.$round]();
          this[S._currentIndex] = dart.nullCheck(this[S._controller]).index;
        }
        dart.nullCheck(this[S._controller]).offset = math$.clampDouble(dart.nullCheck(this[S._pageController].page) - dart.nullCheck(this[S._controller]).index, -1.0, 1.0);
      } else if (scroll_notification.ScrollEndNotification.is(notification)) {
        dart.nullCheck(this[S._controller]).index = dart.nullCheck(this[S._pageController].page)[S.$round]();
        this[S._currentIndex] = dart.nullCheck(this[S._controller]).index;
        if (!dart.nullCheck(this[S._controller]).indexIsChanging) {
          dart.nullCheck(this[S._controller]).offset = math$.clampDouble(dart.nullCheck(this[S._pageController].page) - dart.nullCheck(this[S._controller]).index, -1.0, 1.0);
        }
      }
      this[S._warpUnderwayCount] = this[S._warpUnderwayCount] - 1;
      return false;
    }
    [S._debugScheduleCheckHasValidChildrenCount]() {
      if (this[S._debugHasScheduledValidChildrenCountCheck]) {
        return true;
      }
      binding.WidgetsBinding.instance.addPostFrameCallback(dart.fn(duration => {
        this[S._debugHasScheduledValidChildrenCountCheck] = false;
        if (!this.mounted) {
          return;
        }
        if (!dart.fn(() => {
          if (dart.nullCheck(this[S._controller]).length !== this.widget.children[S.$length]) {
            dart.throw(assertions.FlutterError.new("Controller's length property (" + dart.str(dart.nullCheck(this[S._controller]).length) + ") does not match the " + "number of children (" + dart.str(this.widget.children[S.$length]) + ") present in TabBarView's children property."));
          }
          return true;
        }, T$.VoidTobool())()) dart.assertFailed(null, I[29], 1583, 14, "() {\n        if (_controller!.length != widget.children.length) {\n          throw FlutterError(\n            \"Controller's length property (${_controller!.length}) does not match the \"\n            \"number of children (${widget.children.length}) present in TabBarView's children property.\",\n          );\n        }\n        return true;\n      }()");
      }, T$.DurationTovoid()));
      this[S._debugHasScheduledValidChildrenCountCheck] = true;
      return true;
    }
    build(context) {
      if (!this[S._debugScheduleCheckHasValidChildrenCount]()) dart.assertFailed(null, I[29], 1599, 12, "_debugScheduleCheckHasValidChildrenCount()");
      return new (T$.NotificationListenerOfScrollNotification()).new({onNotification: dart.bind(this, S._handleScrollNotification), child: new page_view.PageView.new({dragStartBehavior: this.widget.dragStartBehavior, clipBehavior: this.widget.clipBehavior, controller: this[S._pageController], physics: this.widget.physics == null ? (C[274] || CT.C274).applyTo(C[275] || CT.C275) : (C[274] || CT.C274).applyTo(this.widget.physics), children: this[S._childrenWithKey], $creationLocationd_0dea112b090073317d4: C[276] || CT.C276}), $creationLocationd_0dea112b090073317d4: C[277] || CT.C277});
    }
    static ['_#new#tearOff']() {
      return new tabs$._TabBarViewState.new();
    }
  };
  (tabs$._TabBarViewState.new = function() {
    this[S._controller] = null;
    this[S.___TabBarViewState__pageController] = null;
    this[S.___TabBarViewState__children] = null;
    this[S.___TabBarViewState__childrenWithKey] = null;
    this[S._currentIndex] = null;
    this[S._warpUnderwayCount] = 0;
    this[S._debugHasScheduledValidChildrenCountCheck] = false;
    tabs$._TabBarViewState.__proto__.new.call(this);
    ;
  }).prototype = tabs$._TabBarViewState.prototype;
  dart.addTypeTests(tabs$._TabBarViewState);
  dart.addTypeCaches(tabs$._TabBarViewState);
  dart.setMethodSignature(tabs$._TabBarViewState, () => ({
    __proto__: dart.getMethods(tabs$._TabBarViewState.__proto__),
    [S._updateTabController]: dart.fnType(dart.void, []),
    [S._updateChildren]: dart.fnType(dart.void, []),
    [S._handleTabControllerAnimationTick]: dart.fnType(dart.void, []),
    [S._warpToCurrentIndex]: dart.fnType(async.Future$(dart.void), []),
    [S._handleScrollNotification]: dart.fnType(core.bool, [scroll_notification.ScrollNotification]),
    [S._debugScheduleCheckHasValidChildrenCount]: dart.fnType(core.bool, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(tabs$._TabBarViewState, () => ({
    __proto__: dart.getGetters(tabs$._TabBarViewState.__proto__),
    [S._pageController]: page_view.PageController,
    [S._children]: core.List$(framework.Widget),
    [S._childrenWithKey]: core.List$(framework.Widget),
    [S._controllerIsValid]: core.bool
  }));
  dart.setSetterSignature(tabs$._TabBarViewState, () => ({
    __proto__: dart.getSetters(tabs$._TabBarViewState.__proto__),
    [S._pageController]: page_view.PageController,
    [S._children]: core.List$(framework.Widget),
    [S._childrenWithKey]: core.List$(framework.Widget)
  }));
  dart.setLibraryUri(tabs$._TabBarViewState, I[28]);
  dart.setFieldSignature(tabs$._TabBarViewState, () => ({
    __proto__: dart.getFields(tabs$._TabBarViewState.__proto__),
    [S._controller]: dart.fieldType(dart.nullable(tab_controller.TabController)),
    [S.___TabBarViewState__pageController]: dart.fieldType(dart.nullable(page_view.PageController)),
    [S.___TabBarViewState__children]: dart.fieldType(dart.nullable(core.List$(framework.Widget))),
    [S.___TabBarViewState__childrenWithKey]: dart.fieldType(dart.nullable(core.List$(framework.Widget))),
    [S._currentIndex]: dart.fieldType(dart.nullable(core.int)),
    [S._warpUnderwayCount]: dart.fieldType(core.int),
    [S._debugHasScheduledValidChildrenCountCheck]: dart.fieldType(core.bool)
  }));
  tabs$.TabPageSelectorIndicator = class TabPageSelectorIndicator extends framework.StatelessWidget {
    get backgroundColor() {
      return this[S.backgroundColor$4];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get borderColor() {
      return this[S.borderColor$1];
    }
    set borderColor(value) {
      super.borderColor = value;
    }
    get size() {
      return this[S.size];
    }
    set size(value) {
      super.size = value;
    }
    get borderStyle() {
      return this[S.borderStyle];
    }
    set borderStyle(value) {
      super.borderStyle = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let borderColor = opts && 'borderColor' in opts ? opts.borderColor : null;
      let size = opts && 'size' in opts ? opts.size : null;
      let borderStyle = opts && 'borderStyle' in opts ? opts.borderStyle : C[278] || CT.C278;
      return new tabs$.TabPageSelectorIndicator.new({key: key, backgroundColor: backgroundColor, borderColor: borderColor, size: size, borderStyle: borderStyle, $creationLocationd_0dea112b090073317d4: C[279] || CT.C279});
    }
    build(context) {
      return new container.Container.new({width: this.size, height: this.size, margin: C[280] || CT.C280, decoration: new box_decoration.BoxDecoration.new({color: this.backgroundColor, border: box_border.Border.all({color: this.borderColor, style: this.borderStyle}), shape: box_border.BoxShape.circle}), $creationLocationd_0dea112b090073317d4: C[281] || CT.C281});
    }
  };
  (tabs$.TabPageSelectorIndicator.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let borderColor = opts && 'borderColor' in opts ? opts.borderColor : null;
    let size = opts && 'size' in opts ? opts.size : null;
    let borderStyle = opts && 'borderStyle' in opts ? opts.borderStyle : C[278] || CT.C278;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.backgroundColor$4] = backgroundColor;
    this[S.borderColor$1] = borderColor;
    this[S.size] = size;
    this[S.borderStyle] = borderStyle;
    if (!(backgroundColor !== null)) dart.assertFailed(null, I[29], 1630, 15, "backgroundColor != null");
    if (!(borderColor !== null)) dart.assertFailed(null, I[29], 1631, 15, "borderColor != null");
    if (!(size !== null)) dart.assertFailed(null, I[29], 1632, 15, "size != null");
    tabs$.TabPageSelectorIndicator.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = tabs$.TabPageSelectorIndicator.prototype;
  dart.addTypeTests(tabs$.TabPageSelectorIndicator);
  dart.addTypeCaches(tabs$.TabPageSelectorIndicator);
  dart.setMethodSignature(tabs$.TabPageSelectorIndicator, () => ({
    __proto__: dart.getMethods(tabs$.TabPageSelectorIndicator.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(tabs$.TabPageSelectorIndicator, I[28]);
  dart.setFieldSignature(tabs$.TabPageSelectorIndicator, () => ({
    __proto__: dart.getFields(tabs$.TabPageSelectorIndicator.__proto__),
    backgroundColor: dart.finalFieldType(ui.Color),
    borderColor: dart.finalFieldType(ui.Color),
    size: dart.finalFieldType(core.double),
    borderStyle: dart.finalFieldType(borders.BorderStyle)
  }));
  tabs$.TabPageSelector = class TabPageSelector extends framework.StatelessWidget {
    get controller() {
      return this[S.controller$2];
    }
    set controller(value) {
      super.controller = value;
    }
    get indicatorSize() {
      return this[S.indicatorSize$1];
    }
    set indicatorSize(value) {
      super.indicatorSize = value;
    }
    get color() {
      return this[S.color$4];
    }
    set color(value) {
      super.color = value;
    }
    get selectedColor() {
      return this[S.selectedColor$1];
    }
    set selectedColor(value) {
      super.selectedColor = value;
    }
    get borderStyle() {
      return this[S.borderStyle$1];
    }
    set borderStyle(value) {
      super.borderStyle = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let controller = opts && 'controller' in opts ? opts.controller : null;
      let indicatorSize = opts && 'indicatorSize' in opts ? opts.indicatorSize : 12;
      let color = opts && 'color' in opts ? opts.color : null;
      let selectedColor = opts && 'selectedColor' in opts ? opts.selectedColor : null;
      let borderStyle = opts && 'borderStyle' in opts ? opts.borderStyle : null;
      return new tabs$.TabPageSelector.new({key: key, controller: controller, indicatorSize: indicatorSize, color: color, selectedColor: selectedColor, borderStyle: borderStyle, $creationLocationd_0dea112b090073317d4: C[282] || CT.C282});
    }
    [S._buildTabIndicator](tabIndex, tabController, selectedColorTween, previousColorTween) {
      let t20;
      let background = null;
      if (tabController.indexIsChanging) {
        let t = 1.0 - tabs$._indexChangeProgress(tabController);
        if (tabController.index === tabIndex) {
          background = dart.nullCheck(selectedColorTween.lerp(t));
        } else if (tabController.previousIndex === tabIndex) {
          background = dart.nullCheck(previousColorTween.lerp(t));
        } else {
          background = dart.nullCheck(selectedColorTween.begin);
        }
      } else {
        let offset = tabController.offset;
        if (tabController.index === tabIndex) {
          background = dart.nullCheck(selectedColorTween.lerp(1.0 - offset[S.$abs]()));
        } else if (tabController.index === tabIndex - 1 && offset > 0.0) {
          background = dart.nullCheck(selectedColorTween.lerp(offset));
        } else if (tabController.index === tabIndex + 1 && offset < 0.0) {
          background = dart.nullCheck(selectedColorTween.lerp(-offset));
        } else {
          background = dart.nullCheck(selectedColorTween.begin);
        }
      }
      return new tabs$.TabPageSelectorIndicator.new({backgroundColor: background, borderColor: dart.nullCheck(selectedColorTween.end), size: this.indicatorSize, borderStyle: (t20 = this.borderStyle, t20 == null ? borders.BorderStyle.solid : t20), $creationLocationd_0dea112b090073317d4: C[283] || CT.C283});
    }
    build(context) {
      let t20, t20$, t20$0;
      let fixColor = (t20 = this.color, t20 == null ? colors$.Colors.transparent : t20);
      let fixSelectedColor = (t20$ = this.selectedColor, t20$ == null ? theme$.Theme.of(context).colorScheme.secondary : t20$);
      let selectedColorTween = new tween.ColorTween.new({begin: fixColor, end: fixSelectedColor});
      let previousColorTween = new tween.ColorTween.new({begin: fixSelectedColor, end: fixColor});
      let tabController = (t20$0 = this.controller, t20$0 == null ? tab_controller.DefaultTabController.of(context) : t20$0);
      let localizations = material_localizations.MaterialLocalizations.of(context);
      if (!dart.fn(() => {
        if (tabController == null) {
          dart.throw(assertions.FlutterError.new("No TabController for " + dart.str(this[S.$runtimeType]) + ".\n" + "When creating a " + dart.str(this[S.$runtimeType]) + ", you must either provide an explicit TabController " + "using the \"controller\" property, or you must ensure that there is a " + "DefaultTabController above the " + dart.str(this[S.$runtimeType]) + ".\n" + "In this case, there was neither an explicit controller nor a default controller."));
        }
        return true;
      }, T$.VoidTobool())()) dart.assertFailed(null, I[29], 1757, 12, "() {\n      if (tabController == null) {\n        throw FlutterError(\n          'No TabController for $runtimeType.\\n'\n          'When creating a $runtimeType, you must either provide an explicit TabController '\n          'using the \"controller\" property, or you must ensure that there is a '\n          'DefaultTabController above the $runtimeType.\\n'\n          'In this case, there was neither an explicit controller nor a default controller.',\n        );\n      }\n      return true;\n    }()");
      let animation = new animations.CurvedAnimation.new({parent: dart.nullCheck(dart.nullCheck(tabController).animation), curve: curves.Curves.fastOutSlowIn});
      return new transitions.AnimatedBuilder.new({animation: animation, builder: dart.fn((context, child) => new basic.Semantics.new({label: localizations.tabLabel({tabIndex: tabController.index + 1, tabCount: tabController.length}), child: new basic.Row.new({mainAxisSize: flex.MainAxisSize.min, children: T$.ListOfWidget().generate(tabController.length, dart.fn(tabIndex => this[S._buildTabIndicator](tabIndex, tabController, selectedColorTween, previousColorTween), T$.intToWidget()))[S.$toList](), $creationLocationd_0dea112b090073317d4: C[284] || CT.C284}), $creationLocationd_0dea112b090073317d4: C[285] || CT.C285}), T$.BuildContextAndWidgetNToSemantics()), $creationLocationd_0dea112b090073317d4: C[286] || CT.C286});
    }
  };
  (tabs$.TabPageSelector.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let indicatorSize = opts && 'indicatorSize' in opts ? opts.indicatorSize : 12;
    let color = opts && 'color' in opts ? opts.color : null;
    let selectedColor = opts && 'selectedColor' in opts ? opts.selectedColor : null;
    let borderStyle = opts && 'borderStyle' in opts ? opts.borderStyle : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.controller$2] = controller;
    this[S.indicatorSize$1] = indicatorSize;
    this[S.color$4] = color;
    this[S.selectedColor$1] = selectedColor;
    this[S.borderStyle$1] = borderStyle;
    if (!(indicatorSize !== null && indicatorSize > 0.0)) dart.assertFailed(null, I[29], 1682, 15, "indicatorSize != null && indicatorSize > 0.0");
    tabs$.TabPageSelector.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = tabs$.TabPageSelector.prototype;
  dart.addTypeTests(tabs$.TabPageSelector);
  dart.addTypeCaches(tabs$.TabPageSelector);
  dart.setMethodSignature(tabs$.TabPageSelector, () => ({
    __proto__: dart.getMethods(tabs$.TabPageSelector.__proto__),
    [S._buildTabIndicator]: dart.fnType(framework.Widget, [core.int, tab_controller.TabController, tween.ColorTween, tween.ColorTween]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(tabs$.TabPageSelector, I[28]);
  dart.setFieldSignature(tabs$.TabPageSelector, () => ({
    __proto__: dart.getFields(tabs$.TabPageSelector.__proto__),
    controller: dart.finalFieldType(dart.nullable(tab_controller.TabController)),
    indicatorSize: dart.finalFieldType(core.double),
    color: dart.finalFieldType(dart.nullable(ui.Color)),
    selectedColor: dart.finalFieldType(dart.nullable(ui.Color)),
    borderStyle: dart.finalFieldType(dart.nullable(borders.BorderStyle))
  }));
  tabs$._indexChangeProgress = function _indexChangeProgress(controller) {
    let controllerValue = dart.nullCheck(controller.animation).value;
    let previousIndex = controller.previousIndex[S.$toDouble]();
    let currentIndex = controller.index[S.$toDouble]();
    if (!controller.indexIsChanging) {
      return math$.clampDouble((currentIndex - controllerValue)[S.$abs](), 0.0, 1.0);
    }
    return (controllerValue - currentIndex)[S.$abs]() / (currentIndex - previousIndex)[S.$abs]();
  };
  dart.defineLazy(tabs$, {
    /*tabs$._kTabHeight*/get _kTabHeight() {
      return 46;
    },
    /*tabs$._kTextAndIconTabHeight*/get _kTextAndIconTabHeight() {
      return 72;
    }
  }, false);
  const Object_Diagnosticable$36$3 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$3.new = function() {
  }).prototype = Object_Diagnosticable$36$3.prototype;
  dart.applyMixin(Object_Diagnosticable$36$3, diagnostics.Diagnosticable);
  tab_bar_theme.TabBarTheme = class TabBarTheme extends Object_Diagnosticable$36$3 {
    get indicator() {
      return this[S.indicator$1];
    }
    set indicator(value) {
      super.indicator = value;
    }
    get indicatorSize() {
      return this[S.indicatorSize$2];
    }
    set indicatorSize(value) {
      super.indicatorSize = value;
    }
    get labelColor() {
      return this[S.labelColor$2];
    }
    set labelColor(value) {
      super.labelColor = value;
    }
    get labelPadding() {
      return this[S.labelPadding$1];
    }
    set labelPadding(value) {
      super.labelPadding = value;
    }
    get labelStyle() {
      return this[S.labelStyle$2];
    }
    set labelStyle(value) {
      super.labelStyle = value;
    }
    get unselectedLabelColor() {
      return this[S.unselectedLabelColor$2];
    }
    set unselectedLabelColor(value) {
      super.unselectedLabelColor = value;
    }
    get unselectedLabelStyle() {
      return this[S.unselectedLabelStyle$2];
    }
    set unselectedLabelStyle(value) {
      super.unselectedLabelStyle = value;
    }
    get overlayColor() {
      return this[S.overlayColor$2];
    }
    set overlayColor(value) {
      super.overlayColor = value;
    }
    get splashFactory() {
      return this[S.splashFactory$2];
    }
    set splashFactory(value) {
      super.splashFactory = value;
    }
    get mouseCursor() {
      return this[S.mouseCursor$4];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    static ['_#new#tearOff'](opts) {
      let indicator = opts && 'indicator' in opts ? opts.indicator : null;
      let indicatorSize = opts && 'indicatorSize' in opts ? opts.indicatorSize : null;
      let labelColor = opts && 'labelColor' in opts ? opts.labelColor : null;
      let labelPadding = opts && 'labelPadding' in opts ? opts.labelPadding : null;
      let labelStyle = opts && 'labelStyle' in opts ? opts.labelStyle : null;
      let unselectedLabelColor = opts && 'unselectedLabelColor' in opts ? opts.unselectedLabelColor : null;
      let unselectedLabelStyle = opts && 'unselectedLabelStyle' in opts ? opts.unselectedLabelStyle : null;
      let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
      let splashFactory = opts && 'splashFactory' in opts ? opts.splashFactory : null;
      let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
      return new tab_bar_theme.TabBarTheme.new({indicator: indicator, indicatorSize: indicatorSize, labelColor: labelColor, labelPadding: labelPadding, labelStyle: labelStyle, unselectedLabelColor: unselectedLabelColor, unselectedLabelStyle: unselectedLabelStyle, overlayColor: overlayColor, splashFactory: splashFactory, mouseCursor: mouseCursor});
    }
    copyWith(opts) {
      let t20, t20$, t20$0, t20$1, t20$2, t20$3, t20$4, t20$5, t20$6, t20$7;
      let indicator = opts && 'indicator' in opts ? opts.indicator : null;
      let indicatorSize = opts && 'indicatorSize' in opts ? opts.indicatorSize : null;
      let labelColor = opts && 'labelColor' in opts ? opts.labelColor : null;
      let labelPadding = opts && 'labelPadding' in opts ? opts.labelPadding : null;
      let labelStyle = opts && 'labelStyle' in opts ? opts.labelStyle : null;
      let unselectedLabelColor = opts && 'unselectedLabelColor' in opts ? opts.unselectedLabelColor : null;
      let unselectedLabelStyle = opts && 'unselectedLabelStyle' in opts ? opts.unselectedLabelStyle : null;
      let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
      let splashFactory = opts && 'splashFactory' in opts ? opts.splashFactory : null;
      let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
      return new tab_bar_theme.TabBarTheme.new({indicator: (t20 = indicator, t20 == null ? this.indicator : t20), indicatorSize: (t20$ = indicatorSize, t20$ == null ? this.indicatorSize : t20$), labelColor: (t20$0 = labelColor, t20$0 == null ? this.labelColor : t20$0), labelPadding: (t20$1 = labelPadding, t20$1 == null ? this.labelPadding : t20$1), labelStyle: (t20$2 = labelStyle, t20$2 == null ? this.labelStyle : t20$2), unselectedLabelColor: (t20$3 = unselectedLabelColor, t20$3 == null ? this.unselectedLabelColor : t20$3), unselectedLabelStyle: (t20$4 = unselectedLabelStyle, t20$4 == null ? this.unselectedLabelStyle : t20$4), overlayColor: (t20$5 = overlayColor, t20$5 == null ? this.overlayColor : t20$5), splashFactory: (t20$6 = splashFactory, t20$6 == null ? this.splashFactory : t20$6), mouseCursor: (t20$7 = mouseCursor, t20$7 == null ? this.mouseCursor : t20$7)});
    }
    static of(context) {
      return theme$.Theme.of(context).tabBarTheme;
    }
    static lerp(a, b, t) {
      if (!(a !== null)) dart.assertFailed(null, I[30], 118, 12, "a != null");
      if (!(b !== null)) dart.assertFailed(null, I[30], 119, 12, "b != null");
      if (!(t !== null)) dart.assertFailed(null, I[30], 120, 12, "t != null");
      return new tab_bar_theme.TabBarTheme.new({indicator: decoration.Decoration.lerp(a.indicator, b.indicator, t), indicatorSize: t < 0.5 ? a.indicatorSize : b.indicatorSize, labelColor: ui.Color.lerp(a.labelColor, b.labelColor, t), labelPadding: edge_insets.EdgeInsetsGeometry.lerp(a.labelPadding, b.labelPadding, t), labelStyle: text_style.TextStyle.lerp(a.labelStyle, b.labelStyle, t), unselectedLabelColor: ui.Color.lerp(a.unselectedLabelColor, b.unselectedLabelColor, t), unselectedLabelStyle: text_style.TextStyle.lerp(a.unselectedLabelStyle, b.unselectedLabelStyle, t), overlayColor: new tab_bar_theme._LerpColors.new(a.overlayColor, b.overlayColor, t), splashFactory: t < 0.5 ? a.splashFactory : b.splashFactory, mouseCursor: t < 0.5 ? a.mouseCursor : b.mouseCursor});
    }
    get hashCode() {
      return core.Object.hash(this.indicator, this.indicatorSize, this.labelColor, this.labelPadding, this.labelStyle, this.unselectedLabelColor, this.unselectedLabelStyle, this.overlayColor, this.splashFactory, this.mouseCursor);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      if (!other[S.$runtimeType]._equals(this[S.$runtimeType])) {
        return false;
      }
      return tab_bar_theme.TabBarTheme.is(other) && dart.equals(other.indicator, this.indicator) && other.indicatorSize == this.indicatorSize && dart.equals(other.labelColor, this.labelColor) && dart.equals(other.labelPadding, this.labelPadding) && dart.equals(other.labelStyle, this.labelStyle) && dart.equals(other.unselectedLabelColor, this.unselectedLabelColor) && dart.equals(other.unselectedLabelStyle, this.unselectedLabelStyle) && dart.equals(other.overlayColor, this.overlayColor) && dart.equals(other.splashFactory, this.splashFactory) && dart.equals(other.mouseCursor, this.mouseCursor);
    }
  };
  (tab_bar_theme.TabBarTheme.new = function(opts) {
    let indicator = opts && 'indicator' in opts ? opts.indicator : null;
    let indicatorSize = opts && 'indicatorSize' in opts ? opts.indicatorSize : null;
    let labelColor = opts && 'labelColor' in opts ? opts.labelColor : null;
    let labelPadding = opts && 'labelPadding' in opts ? opts.labelPadding : null;
    let labelStyle = opts && 'labelStyle' in opts ? opts.labelStyle : null;
    let unselectedLabelColor = opts && 'unselectedLabelColor' in opts ? opts.unselectedLabelColor : null;
    let unselectedLabelStyle = opts && 'unselectedLabelStyle' in opts ? opts.unselectedLabelStyle : null;
    let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
    let splashFactory = opts && 'splashFactory' in opts ? opts.splashFactory : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    this[S.indicator$1] = indicator;
    this[S.indicatorSize$2] = indicatorSize;
    this[S.labelColor$2] = labelColor;
    this[S.labelPadding$1] = labelPadding;
    this[S.labelStyle$2] = labelStyle;
    this[S.unselectedLabelColor$2] = unselectedLabelColor;
    this[S.unselectedLabelStyle$2] = unselectedLabelStyle;
    this[S.overlayColor$2] = overlayColor;
    this[S.splashFactory$2] = splashFactory;
    this[S.mouseCursor$4] = mouseCursor;
    ;
  }).prototype = tab_bar_theme.TabBarTheme.prototype;
  dart.addTypeTests(tab_bar_theme.TabBarTheme);
  dart.addTypeCaches(tab_bar_theme.TabBarTheme);
  dart.setMethodSignature(tab_bar_theme.TabBarTheme, () => ({
    __proto__: dart.getMethods(tab_bar_theme.TabBarTheme.__proto__),
    copyWith: dart.fnType(tab_bar_theme.TabBarTheme, [], {indicator: dart.nullable(decoration.Decoration), indicatorSize: dart.nullable(tabs$.TabBarIndicatorSize), labelColor: dart.nullable(ui.Color), labelPadding: dart.nullable(edge_insets.EdgeInsetsGeometry), labelStyle: dart.nullable(text_style.TextStyle), mouseCursor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(mouse_cursor.MouseCursor))), overlayColor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color))), splashFactory: dart.nullable(ink_well.InteractiveInkFeatureFactory), unselectedLabelColor: dart.nullable(ui.Color), unselectedLabelStyle: dart.nullable(text_style.TextStyle)}, {})
  }));
  dart.setStaticMethodSignature(tab_bar_theme.TabBarTheme, () => ['of', 'lerp']);
  dart.setLibraryUri(tab_bar_theme.TabBarTheme, I[31]);
  dart.setFieldSignature(tab_bar_theme.TabBarTheme, () => ({
    __proto__: dart.getFields(tab_bar_theme.TabBarTheme.__proto__),
    indicator: dart.finalFieldType(dart.nullable(decoration.Decoration)),
    indicatorSize: dart.finalFieldType(dart.nullable(tabs$.TabBarIndicatorSize)),
    labelColor: dart.finalFieldType(dart.nullable(ui.Color)),
    labelPadding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    labelStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    unselectedLabelColor: dart.finalFieldType(dart.nullable(ui.Color)),
    unselectedLabelStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    overlayColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    splashFactory: dart.finalFieldType(dart.nullable(ink_well.InteractiveInkFeatureFactory)),
    mouseCursor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(mouse_cursor.MouseCursor))))
  }));
  dart.defineExtensionMethods(tab_bar_theme.TabBarTheme, ['_equals']);
  dart.defineExtensionAccessors(tab_bar_theme.TabBarTheme, ['hashCode']);
  tab_bar_theme._LerpColors = class _LerpColors extends core.Object {
    get a() {
      return this[S.a];
    }
    set a(value) {
      super.a = value;
    }
    get b() {
      return this[S.b];
    }
    set b(value) {
      super.b = value;
    }
    get t() {
      return this[S.t];
    }
    set t(value) {
      super.t = value;
    }
    static ['_#new#tearOff'](a, b, t) {
      return new tab_bar_theme._LerpColors.new(a, b, t);
    }
    resolve(states) {
      let t20, t20$;
      let resolvedA = (t20 = this.a, t20 == null ? null : t20.resolve(states));
      let resolvedB = (t20$ = this.b, t20$ == null ? null : t20$.resolve(states));
      return ui.Color.lerp(resolvedA, resolvedB, this.t);
    }
    get hashCode() {
      return core.Object.hash(this.a, this.b, this.t);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      if (!other[S.$runtimeType]._equals(this[S.$runtimeType])) {
        return false;
      }
      return tab_bar_theme._LerpColors.is(other) && dart.equals(other.a, this.a) && dart.equals(other.b, this.b) && other.t === this.t;
    }
  };
  (tab_bar_theme._LerpColors.new = function(a, b, t) {
    this[S.a] = a;
    this[S.b] = b;
    this[S.t] = t;
    ;
  }).prototype = tab_bar_theme._LerpColors.prototype;
  dart.addTypeTests(tab_bar_theme._LerpColors);
  dart.addTypeCaches(tab_bar_theme._LerpColors);
  tab_bar_theme._LerpColors[dart.implements] = () => [material_state.MaterialStateProperty$(dart.nullable(ui.Color))];
  dart.setMethodSignature(tab_bar_theme._LerpColors, () => ({
    __proto__: dart.getMethods(tab_bar_theme._LerpColors.__proto__),
    resolve: dart.fnType(dart.nullable(ui.Color), [core.Set$(material_state.MaterialState)])
  }));
  dart.setLibraryUri(tab_bar_theme._LerpColors, I[31]);
  dart.setFieldSignature(tab_bar_theme._LerpColors, () => ({
    __proto__: dart.getFields(tab_bar_theme._LerpColors.__proto__),
    a: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    b: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    t: dart.finalFieldType(core.double)
  }));
  dart.defineExtensionMethods(tab_bar_theme._LerpColors, ['_equals']);
  dart.defineExtensionAccessors(tab_bar_theme._LerpColors, ['hashCode']);
  const Object_Diagnosticable$36$4 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$4.new = function() {
  }).prototype = Object_Diagnosticable$36$4.prototype;
  dart.applyMixin(Object_Diagnosticable$36$4, diagnostics.Diagnosticable);
  switch_theme.SwitchThemeData = class SwitchThemeData extends Object_Diagnosticable$36$4 {
    get thumbColor() {
      return this[S.thumbColor];
    }
    set thumbColor(value) {
      super.thumbColor = value;
    }
    get trackColor() {
      return this[S.trackColor];
    }
    set trackColor(value) {
      super.trackColor = value;
    }
    get materialTapTargetSize() {
      return this[S.materialTapTargetSize$1];
    }
    set materialTapTargetSize(value) {
      super.materialTapTargetSize = value;
    }
    get mouseCursor() {
      return this[S.mouseCursor$5];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    get overlayColor() {
      return this[S.overlayColor$3];
    }
    set overlayColor(value) {
      super.overlayColor = value;
    }
    get splashRadius() {
      return this[S.splashRadius$1];
    }
    set splashRadius(value) {
      super.splashRadius = value;
    }
    static ['_#new#tearOff'](opts) {
      let thumbColor = opts && 'thumbColor' in opts ? opts.thumbColor : null;
      let trackColor = opts && 'trackColor' in opts ? opts.trackColor : null;
      let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
      let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
      let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
      let splashRadius = opts && 'splashRadius' in opts ? opts.splashRadius : null;
      return new switch_theme.SwitchThemeData.new({thumbColor: thumbColor, trackColor: trackColor, materialTapTargetSize: materialTapTargetSize, mouseCursor: mouseCursor, overlayColor: overlayColor, splashRadius: splashRadius});
    }
    copyWith(opts) {
      let t20, t20$, t20$0, t20$1, t20$2, t20$3;
      let thumbColor = opts && 'thumbColor' in opts ? opts.thumbColor : null;
      let trackColor = opts && 'trackColor' in opts ? opts.trackColor : null;
      let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
      let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
      let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
      let splashRadius = opts && 'splashRadius' in opts ? opts.splashRadius : null;
      return new switch_theme.SwitchThemeData.new({thumbColor: (t20 = thumbColor, t20 == null ? this.thumbColor : t20), trackColor: (t20$ = trackColor, t20$ == null ? this.trackColor : t20$), materialTapTargetSize: (t20$0 = materialTapTargetSize, t20$0 == null ? this.materialTapTargetSize : t20$0), mouseCursor: (t20$1 = mouseCursor, t20$1 == null ? this.mouseCursor : t20$1), overlayColor: (t20$2 = overlayColor, t20$2 == null ? this.overlayColor : t20$2), splashRadius: (t20$3 = splashRadius, t20$3 == null ? this.splashRadius : t20$3)});
    }
    static lerp(a, b, t) {
      let t20, t20$, t20$0, t20$1, t20$2, t20$3, t20$4, t20$5, t20$6, t20$7, t20$8, t20$9;
      return new switch_theme.SwitchThemeData.new({thumbColor: material_state.MaterialStateProperty.lerp(T$.ColorN(), (t20 = a, t20 == null ? null : t20.thumbColor), (t20$ = b, t20$ == null ? null : t20$.thumbColor), t, C[23] || CT.C23), trackColor: material_state.MaterialStateProperty.lerp(T$.ColorN(), (t20$0 = a, t20$0 == null ? null : t20$0.trackColor), (t20$1 = b, t20$1 == null ? null : t20$1.trackColor), t, C[23] || CT.C23), materialTapTargetSize: t < 0.5 ? (t20$2 = a, t20$2 == null ? null : t20$2.materialTapTargetSize) : (t20$3 = b, t20$3 == null ? null : t20$3.materialTapTargetSize), mouseCursor: t < 0.5 ? (t20$4 = a, t20$4 == null ? null : t20$4.mouseCursor) : (t20$5 = b, t20$5 == null ? null : t20$5.mouseCursor), overlayColor: material_state.MaterialStateProperty.lerp(T$.ColorN(), (t20$6 = a, t20$6 == null ? null : t20$6.overlayColor), (t20$7 = b, t20$7 == null ? null : t20$7.overlayColor), t, C[23] || CT.C23), splashRadius: ui.lerpDouble((t20$8 = a, t20$8 == null ? null : t20$8.splashRadius), (t20$9 = b, t20$9 == null ? null : t20$9.splashRadius), t)});
    }
    get hashCode() {
      return core.Object.hash(this.thumbColor, this.trackColor, this.materialTapTargetSize, this.mouseCursor, this.overlayColor, this.splashRadius);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      if (!other[S.$runtimeType]._equals(this[S.$runtimeType])) {
        return false;
      }
      return switch_theme.SwitchThemeData.is(other) && dart.equals(other.thumbColor, this.thumbColor) && dart.equals(other.trackColor, this.trackColor) && other.materialTapTargetSize == this.materialTapTargetSize && dart.equals(other.mouseCursor, this.mouseCursor) && dart.equals(other.overlayColor, this.overlayColor) && other.splashRadius == this.splashRadius;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfColorN()).new("thumbColor", this.thumbColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfColorN()).new("trackColor", this.trackColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialTapTargetSize()).new("materialTapTargetSize", this.materialTapTargetSize, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfMouseCursorN()).new("mouseCursor", this.mouseCursor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfColorN()).new("overlayColor", this.overlayColor, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("splashRadius", this.splashRadius, {defaultValue: null}));
    }
  };
  (switch_theme.SwitchThemeData.new = function(opts) {
    let thumbColor = opts && 'thumbColor' in opts ? opts.thumbColor : null;
    let trackColor = opts && 'trackColor' in opts ? opts.trackColor : null;
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
    let splashRadius = opts && 'splashRadius' in opts ? opts.splashRadius : null;
    this[S.thumbColor] = thumbColor;
    this[S.trackColor] = trackColor;
    this[S.materialTapTargetSize$1] = materialTapTargetSize;
    this[S.mouseCursor$5] = mouseCursor;
    this[S.overlayColor$3] = overlayColor;
    this[S.splashRadius$1] = splashRadius;
    ;
  }).prototype = switch_theme.SwitchThemeData.prototype;
  dart.addTypeTests(switch_theme.SwitchThemeData);
  dart.addTypeCaches(switch_theme.SwitchThemeData);
  dart.setMethodSignature(switch_theme.SwitchThemeData, () => ({
    __proto__: dart.getMethods(switch_theme.SwitchThemeData.__proto__),
    copyWith: dart.fnType(switch_theme.SwitchThemeData, [], {materialTapTargetSize: dart.nullable(theme_data.MaterialTapTargetSize), mouseCursor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(mouse_cursor.MouseCursor))), overlayColor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color))), splashRadius: dart.nullable(core.double), thumbColor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color))), trackColor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))}, {})
  }));
  dart.setStaticMethodSignature(switch_theme.SwitchThemeData, () => ['lerp']);
  dart.setLibraryUri(switch_theme.SwitchThemeData, I[32]);
  dart.setFieldSignature(switch_theme.SwitchThemeData, () => ({
    __proto__: dart.getFields(switch_theme.SwitchThemeData.__proto__),
    thumbColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    trackColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    materialTapTargetSize: dart.finalFieldType(dart.nullable(theme_data.MaterialTapTargetSize)),
    mouseCursor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(mouse_cursor.MouseCursor)))),
    overlayColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    splashRadius: dart.finalFieldType(dart.nullable(core.double))
  }));
  dart.defineExtensionMethods(switch_theme.SwitchThemeData, ['_equals']);
  dart.defineExtensionAccessors(switch_theme.SwitchThemeData, ['hashCode']);
  switch_theme.SwitchTheme = class SwitchTheme extends framework.InheritedWidget {
    get data() {
      return this[S.data$4];
    }
    set data(value) {
      super.data = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let data = opts && 'data' in opts ? opts.data : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new switch_theme.SwitchTheme.new({key: key, data: data, child: child, $creationLocationd_0dea112b090073317d4: C[287] || CT.C287});
    }
    static of(context) {
      let t20, t20$;
      let switchTheme = context.dependOnInheritedWidgetOfExactType(switch_theme.SwitchTheme);
      t20$ = (t20 = switchTheme, t20 == null ? null : t20.data);
      return t20$ == null ? theme$.Theme.of(context).switchTheme : t20$;
    }
    updateShouldNotify(oldWidget) {
      switch_theme.SwitchTheme.as(oldWidget);
      return !this.data._equals(oldWidget.data);
    }
  };
  (switch_theme.SwitchTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.data$4] = data;
    switch_theme.SwitchTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = switch_theme.SwitchTheme.prototype;
  dart.addTypeTests(switch_theme.SwitchTheme);
  dart.addTypeCaches(switch_theme.SwitchTheme);
  dart.setMethodSignature(switch_theme.SwitchTheme, () => ({
    __proto__: dart.getMethods(switch_theme.SwitchTheme.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setStaticMethodSignature(switch_theme.SwitchTheme, () => ['of']);
  dart.setLibraryUri(switch_theme.SwitchTheme, I[32]);
  dart.setFieldSignature(switch_theme.SwitchTheme, () => ({
    __proto__: dart.getFields(switch_theme.SwitchTheme.__proto__),
    data: dart.finalFieldType(switch_theme.SwitchThemeData)
  }));
  snack_bar_theme.SnackBarBehavior = class SnackBarBehavior extends core._Enum {
    toString() {
      return "SnackBarBehavior." + this[S._name];
    }
  };
  (snack_bar_theme.SnackBarBehavior.new = function(index, name) {
    snack_bar_theme.SnackBarBehavior.__proto__.new.call(this, index, name);
    ;
  }).prototype = snack_bar_theme.SnackBarBehavior.prototype;
  dart.addTypeTests(snack_bar_theme.SnackBarBehavior);
  dart.addTypeCaches(snack_bar_theme.SnackBarBehavior);
  dart.setLibraryUri(snack_bar_theme.SnackBarBehavior, I[33]);
  dart.setStaticFieldSignature(snack_bar_theme.SnackBarBehavior, () => ['values', 'fixed', 'floating']);
  dart.defineExtensionMethods(snack_bar_theme.SnackBarBehavior, ['toString']);
  dart.defineLazy(snack_bar_theme.SnackBarBehavior, {
    /*snack_bar_theme.SnackBarBehavior.values*/get values() {
      return C[288] || CT.C288;
    },
    /*snack_bar_theme.SnackBarBehavior.fixed*/get fixed() {
      return C[289] || CT.C289;
    },
    /*snack_bar_theme.SnackBarBehavior.floating*/get floating() {
      return C[290] || CT.C290;
    }
  }, false);
  const Object_Diagnosticable$36$5 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$5.new = function() {
  }).prototype = Object_Diagnosticable$36$5.prototype;
  dart.applyMixin(Object_Diagnosticable$36$5, diagnostics.Diagnosticable);
  snack_bar_theme.SnackBarThemeData = class SnackBarThemeData extends Object_Diagnosticable$36$5 {
    get backgroundColor() {
      return this[S.backgroundColor$5];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get actionTextColor() {
      return this[S.actionTextColor];
    }
    set actionTextColor(value) {
      super.actionTextColor = value;
    }
    get disabledActionTextColor() {
      return this[S.disabledActionTextColor];
    }
    set disabledActionTextColor(value) {
      super.disabledActionTextColor = value;
    }
    get contentTextStyle() {
      return this[S.contentTextStyle];
    }
    set contentTextStyle(value) {
      super.contentTextStyle = value;
    }
    get elevation() {
      return this[S.elevation$3];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get shape() {
      return this[S.shape$4];
    }
    set shape(value) {
      super.shape = value;
    }
    get behavior() {
      return this[S.behavior$1];
    }
    set behavior(value) {
      super.behavior = value;
    }
    static ['_#new#tearOff'](opts) {
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let actionTextColor = opts && 'actionTextColor' in opts ? opts.actionTextColor : null;
      let disabledActionTextColor = opts && 'disabledActionTextColor' in opts ? opts.disabledActionTextColor : null;
      let contentTextStyle = opts && 'contentTextStyle' in opts ? opts.contentTextStyle : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let behavior = opts && 'behavior' in opts ? opts.behavior : null;
      return new snack_bar_theme.SnackBarThemeData.new({backgroundColor: backgroundColor, actionTextColor: actionTextColor, disabledActionTextColor: disabledActionTextColor, contentTextStyle: contentTextStyle, elevation: elevation, shape: shape, behavior: behavior});
    }
    copyWith(opts) {
      let t22, t22$, t22$0, t22$1, t22$2, t22$3, t22$4;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let actionTextColor = opts && 'actionTextColor' in opts ? opts.actionTextColor : null;
      let disabledActionTextColor = opts && 'disabledActionTextColor' in opts ? opts.disabledActionTextColor : null;
      let contentTextStyle = opts && 'contentTextStyle' in opts ? opts.contentTextStyle : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let behavior = opts && 'behavior' in opts ? opts.behavior : null;
      return new snack_bar_theme.SnackBarThemeData.new({backgroundColor: (t22 = backgroundColor, t22 == null ? this.backgroundColor : t22), actionTextColor: (t22$ = actionTextColor, t22$ == null ? this.actionTextColor : t22$), disabledActionTextColor: (t22$0 = disabledActionTextColor, t22$0 == null ? this.disabledActionTextColor : t22$0), contentTextStyle: (t22$1 = contentTextStyle, t22$1 == null ? this.contentTextStyle : t22$1), elevation: (t22$2 = elevation, t22$2 == null ? this.elevation : t22$2), shape: (t22$3 = shape, t22$3 == null ? this.shape : t22$3), behavior: (t22$4 = behavior, t22$4 == null ? this.behavior : t22$4)});
    }
    static lerp(a, b, t) {
      let t22, t22$, t22$0, t22$1, t22$2, t22$3, t22$4, t22$5, t22$6, t22$7, t22$8, t22$9, t22$10, t22$11;
      if (!(t !== null)) dart.assertFailed(null, I[34], 135, 12, "t != null");
      return new snack_bar_theme.SnackBarThemeData.new({backgroundColor: ui.Color.lerp((t22 = a, t22 == null ? null : t22.backgroundColor), (t22$ = b, t22$ == null ? null : t22$.backgroundColor), t), actionTextColor: ui.Color.lerp((t22$0 = a, t22$0 == null ? null : t22$0.actionTextColor), (t22$1 = b, t22$1 == null ? null : t22$1.actionTextColor), t), disabledActionTextColor: ui.Color.lerp((t22$2 = a, t22$2 == null ? null : t22$2.disabledActionTextColor), (t22$3 = b, t22$3 == null ? null : t22$3.disabledActionTextColor), t), contentTextStyle: text_style.TextStyle.lerp((t22$4 = a, t22$4 == null ? null : t22$4.contentTextStyle), (t22$5 = b, t22$5 == null ? null : t22$5.contentTextStyle), t), elevation: ui.lerpDouble((t22$6 = a, t22$6 == null ? null : t22$6.elevation), (t22$7 = b, t22$7 == null ? null : t22$7.elevation), t), shape: borders.ShapeBorder.lerp((t22$8 = a, t22$8 == null ? null : t22$8.shape), (t22$9 = b, t22$9 == null ? null : t22$9.shape), t), behavior: t < 0.5 ? (t22$10 = a, t22$10 == null ? null : t22$10.behavior) : (t22$11 = b, t22$11 == null ? null : t22$11.behavior)});
    }
    get hashCode() {
      return core.Object.hash(this.backgroundColor, this.actionTextColor, this.disabledActionTextColor, this.contentTextStyle, this.elevation, this.shape, this.behavior);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      if (!other[S.$runtimeType]._equals(this[S.$runtimeType])) {
        return false;
      }
      return snack_bar_theme.SnackBarThemeData.is(other) && dart.equals(other.backgroundColor, this.backgroundColor) && dart.equals(other.actionTextColor, this.actionTextColor) && dart.equals(other.disabledActionTextColor, this.disabledActionTextColor) && dart.equals(other.contentTextStyle, this.contentTextStyle) && other.elevation == this.elevation && dart.equals(other.shape, this.shape) && other.behavior == this.behavior;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new colors.ColorProperty.new("backgroundColor", this.backgroundColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("actionTextColor", this.actionTextColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("disabledActionTextColor", this.disabledActionTextColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("contentTextStyle", this.contentTextStyle, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("elevation", this.elevation, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfShapeBorder()).new("shape", this.shape, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfSnackBarBehavior()).new("behavior", this.behavior, {defaultValue: null}));
    }
  };
  (snack_bar_theme.SnackBarThemeData.new = function(opts) {
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let actionTextColor = opts && 'actionTextColor' in opts ? opts.actionTextColor : null;
    let disabledActionTextColor = opts && 'disabledActionTextColor' in opts ? opts.disabledActionTextColor : null;
    let contentTextStyle = opts && 'contentTextStyle' in opts ? opts.contentTextStyle : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let behavior = opts && 'behavior' in opts ? opts.behavior : null;
    this[S.backgroundColor$5] = backgroundColor;
    this[S.actionTextColor] = actionTextColor;
    this[S.disabledActionTextColor] = disabledActionTextColor;
    this[S.contentTextStyle] = contentTextStyle;
    this[S.elevation$3] = elevation;
    this[S.shape$4] = shape;
    this[S.behavior$1] = behavior;
    if (!(elevation == null || dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, I[34], 63, 15, "elevation == null || elevation >= 0.0");
    ;
  }).prototype = snack_bar_theme.SnackBarThemeData.prototype;
  dart.addTypeTests(snack_bar_theme.SnackBarThemeData);
  dart.addTypeCaches(snack_bar_theme.SnackBarThemeData);
  dart.setMethodSignature(snack_bar_theme.SnackBarThemeData, () => ({
    __proto__: dart.getMethods(snack_bar_theme.SnackBarThemeData.__proto__),
    copyWith: dart.fnType(snack_bar_theme.SnackBarThemeData, [], {actionTextColor: dart.nullable(ui.Color), backgroundColor: dart.nullable(ui.Color), behavior: dart.nullable(snack_bar_theme.SnackBarBehavior), contentTextStyle: dart.nullable(text_style.TextStyle), disabledActionTextColor: dart.nullable(ui.Color), elevation: dart.nullable(core.double), shape: dart.nullable(borders.ShapeBorder)}, {})
  }));
  dart.setStaticMethodSignature(snack_bar_theme.SnackBarThemeData, () => ['lerp']);
  dart.setLibraryUri(snack_bar_theme.SnackBarThemeData, I[33]);
  dart.setFieldSignature(snack_bar_theme.SnackBarThemeData, () => ({
    __proto__: dart.getFields(snack_bar_theme.SnackBarThemeData.__proto__),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    actionTextColor: dart.finalFieldType(dart.nullable(ui.Color)),
    disabledActionTextColor: dart.finalFieldType(dart.nullable(ui.Color)),
    contentTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    behavior: dart.finalFieldType(dart.nullable(snack_bar_theme.SnackBarBehavior))
  }));
  dart.defineExtensionMethods(snack_bar_theme.SnackBarThemeData, ['_equals']);
  dart.defineExtensionAccessors(snack_bar_theme.SnackBarThemeData, ['hashCode']);
  slider_theme.SliderTheme = class SliderTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[S.data$5];
    }
    set data(value) {
      super.data = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let data = opts && 'data' in opts ? opts.data : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new slider_theme.SliderTheme.new({key: key, data: data, child: child, $creationLocationd_0dea112b090073317d4: C[291] || CT.C291});
    }
    static of(context) {
      let inheritedTheme = context.dependOnInheritedWidgetOfExactType(slider_theme.SliderTheme);
      return inheritedTheme != null ? inheritedTheme.data : theme$.Theme.of(context).sliderTheme;
    }
    wrap(context, child) {
      return new slider_theme.SliderTheme.new({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C[292] || CT.C292});
    }
    updateShouldNotify(oldWidget) {
      slider_theme.SliderTheme.as(oldWidget);
      return !this.data._equals(oldWidget.data);
    }
  };
  (slider_theme.SliderTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.data$5] = data;
    if (!(child !== null)) dart.assertFailed(null, I[35], 57, 15, "child != null");
    if (!(data !== null)) dart.assertFailed(null, I[35], 58, 15, "data != null");
    slider_theme.SliderTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = slider_theme.SliderTheme.prototype;
  dart.addTypeTests(slider_theme.SliderTheme);
  dart.addTypeCaches(slider_theme.SliderTheme);
  dart.setMethodSignature(slider_theme.SliderTheme, () => ({
    __proto__: dart.getMethods(slider_theme.SliderTheme.__proto__),
    wrap: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget]),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setStaticMethodSignature(slider_theme.SliderTheme, () => ['of']);
  dart.setLibraryUri(slider_theme.SliderTheme, I[36]);
  dart.setFieldSignature(slider_theme.SliderTheme, () => ({
    __proto__: dart.getFields(slider_theme.SliderTheme.__proto__),
    data: dart.finalFieldType(slider_theme.SliderThemeData)
  }));
  slider_theme.ShowValueIndicator = class ShowValueIndicator extends core._Enum {
    toString() {
      return "ShowValueIndicator." + this[S._name];
    }
  };
  (slider_theme.ShowValueIndicator.new = function(index, name) {
    slider_theme.ShowValueIndicator.__proto__.new.call(this, index, name);
    ;
  }).prototype = slider_theme.ShowValueIndicator.prototype;
  dart.addTypeTests(slider_theme.ShowValueIndicator);
  dart.addTypeCaches(slider_theme.ShowValueIndicator);
  dart.setLibraryUri(slider_theme.ShowValueIndicator, I[36]);
  dart.setStaticFieldSignature(slider_theme.ShowValueIndicator, () => ['values', 'onlyForDiscrete', 'onlyForContinuous', 'always', 'never']);
  dart.defineExtensionMethods(slider_theme.ShowValueIndicator, ['toString']);
  dart.defineLazy(slider_theme.ShowValueIndicator, {
    /*slider_theme.ShowValueIndicator.values*/get values() {
      return C[293] || CT.C293;
    },
    /*slider_theme.ShowValueIndicator.onlyForDiscrete*/get onlyForDiscrete() {
      return C[294] || CT.C294;
    },
    /*slider_theme.ShowValueIndicator.onlyForContinuous*/get onlyForContinuous() {
      return C[295] || CT.C295;
    },
    /*slider_theme.ShowValueIndicator.always*/get always() {
      return C[296] || CT.C296;
    },
    /*slider_theme.ShowValueIndicator.never*/get never() {
      return C[297] || CT.C297;
    }
  }, false);
  slider_theme.Thumb = class Thumb extends core._Enum {
    toString() {
      return "Thumb." + this[S._name];
    }
  };
  (slider_theme.Thumb.new = function(index, name) {
    slider_theme.Thumb.__proto__.new.call(this, index, name);
    ;
  }).prototype = slider_theme.Thumb.prototype;
  dart.addTypeTests(slider_theme.Thumb);
  dart.addTypeCaches(slider_theme.Thumb);
  dart.setLibraryUri(slider_theme.Thumb, I[36]);
  dart.setStaticFieldSignature(slider_theme.Thumb, () => ['values', 'start', 'end']);
  dart.defineExtensionMethods(slider_theme.Thumb, ['toString']);
  dart.defineLazy(slider_theme.Thumb, {
    /*slider_theme.Thumb.values*/get values() {
      return C[298] || CT.C298;
    },
    /*slider_theme.Thumb.start*/get start() {
      return C[299] || CT.C299;
    },
    /*slider_theme.Thumb.end*/get end() {
      return C[300] || CT.C300;
    }
  }, false);
  const Object_Diagnosticable$36$6 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$6.new = function() {
  }).prototype = Object_Diagnosticable$36$6.prototype;
  dart.applyMixin(Object_Diagnosticable$36$6, diagnostics.Diagnosticable);
  slider_theme.SliderThemeData = class SliderThemeData extends Object_Diagnosticable$36$6 {
    get trackHeight() {
      return this[S.trackHeight];
    }
    set trackHeight(value) {
      super.trackHeight = value;
    }
    get activeTrackColor() {
      return this[S.activeTrackColor];
    }
    set activeTrackColor(value) {
      super.activeTrackColor = value;
    }
    get inactiveTrackColor() {
      return this[S.inactiveTrackColor];
    }
    set inactiveTrackColor(value) {
      super.inactiveTrackColor = value;
    }
    get disabledActiveTrackColor() {
      return this[S.disabledActiveTrackColor];
    }
    set disabledActiveTrackColor(value) {
      super.disabledActiveTrackColor = value;
    }
    get disabledInactiveTrackColor() {
      return this[S.disabledInactiveTrackColor];
    }
    set disabledInactiveTrackColor(value) {
      super.disabledInactiveTrackColor = value;
    }
    get activeTickMarkColor() {
      return this[S.activeTickMarkColor];
    }
    set activeTickMarkColor(value) {
      super.activeTickMarkColor = value;
    }
    get inactiveTickMarkColor() {
      return this[S.inactiveTickMarkColor];
    }
    set inactiveTickMarkColor(value) {
      super.inactiveTickMarkColor = value;
    }
    get disabledActiveTickMarkColor() {
      return this[S.disabledActiveTickMarkColor];
    }
    set disabledActiveTickMarkColor(value) {
      super.disabledActiveTickMarkColor = value;
    }
    get disabledInactiveTickMarkColor() {
      return this[S.disabledInactiveTickMarkColor];
    }
    set disabledInactiveTickMarkColor(value) {
      super.disabledInactiveTickMarkColor = value;
    }
    get thumbColor() {
      return this[S.thumbColor$1];
    }
    set thumbColor(value) {
      super.thumbColor = value;
    }
    get overlappingShapeStrokeColor() {
      return this[S.overlappingShapeStrokeColor];
    }
    set overlappingShapeStrokeColor(value) {
      super.overlappingShapeStrokeColor = value;
    }
    get disabledThumbColor() {
      return this[S.disabledThumbColor];
    }
    set disabledThumbColor(value) {
      super.disabledThumbColor = value;
    }
    get overlayColor() {
      return this[S.overlayColor$4];
    }
    set overlayColor(value) {
      super.overlayColor = value;
    }
    get valueIndicatorColor() {
      return this[S.valueIndicatorColor];
    }
    set valueIndicatorColor(value) {
      super.valueIndicatorColor = value;
    }
    get overlayShape() {
      return this[S.overlayShape];
    }
    set overlayShape(value) {
      super.overlayShape = value;
    }
    get tickMarkShape() {
      return this[S.tickMarkShape];
    }
    set tickMarkShape(value) {
      super.tickMarkShape = value;
    }
    get thumbShape() {
      return this[S.thumbShape];
    }
    set thumbShape(value) {
      super.thumbShape = value;
    }
    get trackShape() {
      return this[S.trackShape];
    }
    set trackShape(value) {
      super.trackShape = value;
    }
    get valueIndicatorShape() {
      return this[S.valueIndicatorShape];
    }
    set valueIndicatorShape(value) {
      super.valueIndicatorShape = value;
    }
    get rangeTickMarkShape() {
      return this[S.rangeTickMarkShape];
    }
    set rangeTickMarkShape(value) {
      super.rangeTickMarkShape = value;
    }
    get rangeThumbShape() {
      return this[S.rangeThumbShape];
    }
    set rangeThumbShape(value) {
      super.rangeThumbShape = value;
    }
    get rangeTrackShape() {
      return this[S.rangeTrackShape];
    }
    set rangeTrackShape(value) {
      super.rangeTrackShape = value;
    }
    get rangeValueIndicatorShape() {
      return this[S.rangeValueIndicatorShape];
    }
    set rangeValueIndicatorShape(value) {
      super.rangeValueIndicatorShape = value;
    }
    get showValueIndicator() {
      return this[S.showValueIndicator];
    }
    set showValueIndicator(value) {
      super.showValueIndicator = value;
    }
    get valueIndicatorTextStyle() {
      return this[S.valueIndicatorTextStyle];
    }
    set valueIndicatorTextStyle(value) {
      super.valueIndicatorTextStyle = value;
    }
    get minThumbSeparation() {
      return this[S.minThumbSeparation];
    }
    set minThumbSeparation(value) {
      super.minThumbSeparation = value;
    }
    get thumbSelector() {
      return this[S.thumbSelector];
    }
    set thumbSelector(value) {
      super.thumbSelector = value;
    }
    get mouseCursor() {
      return this[S.mouseCursor$6];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    static ['_#new#tearOff'](opts) {
      let trackHeight = opts && 'trackHeight' in opts ? opts.trackHeight : null;
      let activeTrackColor = opts && 'activeTrackColor' in opts ? opts.activeTrackColor : null;
      let inactiveTrackColor = opts && 'inactiveTrackColor' in opts ? opts.inactiveTrackColor : null;
      let disabledActiveTrackColor = opts && 'disabledActiveTrackColor' in opts ? opts.disabledActiveTrackColor : null;
      let disabledInactiveTrackColor = opts && 'disabledInactiveTrackColor' in opts ? opts.disabledInactiveTrackColor : null;
      let activeTickMarkColor = opts && 'activeTickMarkColor' in opts ? opts.activeTickMarkColor : null;
      let inactiveTickMarkColor = opts && 'inactiveTickMarkColor' in opts ? opts.inactiveTickMarkColor : null;
      let disabledActiveTickMarkColor = opts && 'disabledActiveTickMarkColor' in opts ? opts.disabledActiveTickMarkColor : null;
      let disabledInactiveTickMarkColor = opts && 'disabledInactiveTickMarkColor' in opts ? opts.disabledInactiveTickMarkColor : null;
      let thumbColor = opts && 'thumbColor' in opts ? opts.thumbColor : null;
      let overlappingShapeStrokeColor = opts && 'overlappingShapeStrokeColor' in opts ? opts.overlappingShapeStrokeColor : null;
      let disabledThumbColor = opts && 'disabledThumbColor' in opts ? opts.disabledThumbColor : null;
      let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
      let valueIndicatorColor = opts && 'valueIndicatorColor' in opts ? opts.valueIndicatorColor : null;
      let overlayShape = opts && 'overlayShape' in opts ? opts.overlayShape : null;
      let tickMarkShape = opts && 'tickMarkShape' in opts ? opts.tickMarkShape : null;
      let thumbShape = opts && 'thumbShape' in opts ? opts.thumbShape : null;
      let trackShape = opts && 'trackShape' in opts ? opts.trackShape : null;
      let valueIndicatorShape = opts && 'valueIndicatorShape' in opts ? opts.valueIndicatorShape : null;
      let rangeTickMarkShape = opts && 'rangeTickMarkShape' in opts ? opts.rangeTickMarkShape : null;
      let rangeThumbShape = opts && 'rangeThumbShape' in opts ? opts.rangeThumbShape : null;
      let rangeTrackShape = opts && 'rangeTrackShape' in opts ? opts.rangeTrackShape : null;
      let rangeValueIndicatorShape = opts && 'rangeValueIndicatorShape' in opts ? opts.rangeValueIndicatorShape : null;
      let showValueIndicator = opts && 'showValueIndicator' in opts ? opts.showValueIndicator : null;
      let valueIndicatorTextStyle = opts && 'valueIndicatorTextStyle' in opts ? opts.valueIndicatorTextStyle : null;
      let minThumbSeparation = opts && 'minThumbSeparation' in opts ? opts.minThumbSeparation : null;
      let thumbSelector = opts && 'thumbSelector' in opts ? opts.thumbSelector : null;
      let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
      return new slider_theme.SliderThemeData.new({trackHeight: trackHeight, activeTrackColor: activeTrackColor, inactiveTrackColor: inactiveTrackColor, disabledActiveTrackColor: disabledActiveTrackColor, disabledInactiveTrackColor: disabledInactiveTrackColor, activeTickMarkColor: activeTickMarkColor, inactiveTickMarkColor: inactiveTickMarkColor, disabledActiveTickMarkColor: disabledActiveTickMarkColor, disabledInactiveTickMarkColor: disabledInactiveTickMarkColor, thumbColor: thumbColor, overlappingShapeStrokeColor: overlappingShapeStrokeColor, disabledThumbColor: disabledThumbColor, overlayColor: overlayColor, valueIndicatorColor: valueIndicatorColor, overlayShape: overlayShape, tickMarkShape: tickMarkShape, thumbShape: thumbShape, trackShape: trackShape, valueIndicatorShape: valueIndicatorShape, rangeTickMarkShape: rangeTickMarkShape, rangeThumbShape: rangeThumbShape, rangeTrackShape: rangeTrackShape, rangeValueIndicatorShape: rangeValueIndicatorShape, showValueIndicator: showValueIndicator, valueIndicatorTextStyle: valueIndicatorTextStyle, minThumbSeparation: minThumbSeparation, thumbSelector: thumbSelector, mouseCursor: mouseCursor});
    }
    static fromPrimaryColors(opts) {
      let primaryColor = opts && 'primaryColor' in opts ? opts.primaryColor : null;
      let primaryColorDark = opts && 'primaryColorDark' in opts ? opts.primaryColorDark : null;
      let primaryColorLight = opts && 'primaryColorLight' in opts ? opts.primaryColorLight : null;
      let valueIndicatorTextStyle = opts && 'valueIndicatorTextStyle' in opts ? opts.valueIndicatorTextStyle : null;
      if (!(primaryColor !== null)) dart.assertFailed(null, I[35], 311, 12, "primaryColor != null");
      if (!(primaryColorDark !== null)) dart.assertFailed(null, I[35], 312, 12, "primaryColorDark != null");
      if (!(primaryColorLight !== null)) dart.assertFailed(null, I[35], 313, 12, "primaryColorLight != null");
      if (!(valueIndicatorTextStyle !== null)) dart.assertFailed(null, I[35], 314, 12, "valueIndicatorTextStyle != null");
      return new slider_theme.SliderThemeData.new({trackHeight: 2.0, activeTrackColor: primaryColor.withAlpha(255), inactiveTrackColor: primaryColor.withAlpha(61), disabledActiveTrackColor: primaryColorDark.withAlpha(82), disabledInactiveTrackColor: primaryColorDark.withAlpha(31), activeTickMarkColor: primaryColorLight.withAlpha(138), inactiveTickMarkColor: primaryColor.withAlpha(138), disabledActiveTickMarkColor: primaryColorLight.withAlpha(31), disabledInactiveTickMarkColor: primaryColorDark.withAlpha(31), thumbColor: primaryColor.withAlpha(255), overlappingShapeStrokeColor: colors$.Colors.white, disabledThumbColor: primaryColorDark.withAlpha(82), overlayColor: primaryColor.withAlpha(31), valueIndicatorColor: primaryColor.withAlpha(255), overlayShape: C[301] || CT.C301, tickMarkShape: C[302] || CT.C302, thumbShape: C[303] || CT.C303, trackShape: C[304] || CT.C304, valueIndicatorShape: C[305] || CT.C305, rangeTickMarkShape: C[306] || CT.C306, rangeThumbShape: C[307] || CT.C307, rangeTrackShape: C[308] || CT.C308, rangeValueIndicatorShape: C[309] || CT.C309, valueIndicatorTextStyle: valueIndicatorTextStyle, showValueIndicator: slider_theme.ShowValueIndicator.onlyForDiscrete});
    }
    static ['_#fromPrimaryColors#tearOff'](opts) {
      let primaryColor = opts && 'primaryColor' in opts ? opts.primaryColor : null;
      let primaryColorDark = opts && 'primaryColorDark' in opts ? opts.primaryColorDark : null;
      let primaryColorLight = opts && 'primaryColorLight' in opts ? opts.primaryColorLight : null;
      let valueIndicatorTextStyle = opts && 'valueIndicatorTextStyle' in opts ? opts.valueIndicatorTextStyle : null;
      return slider_theme.SliderThemeData.fromPrimaryColors({primaryColor: primaryColor, primaryColorDark: primaryColorDark, primaryColorLight: primaryColorLight, valueIndicatorTextStyle: valueIndicatorTextStyle});
    }
    copyWith(opts) {
      let t26, t26$, t26$0, t26$1, t26$2, t26$3, t26$4, t26$5, t26$6, t26$7, t26$8, t26$9, t26$10, t26$11, t26$12, t26$13, t26$14, t26$15, t26$16, t26$17, t26$18, t26$19, t26$20, t26$21, t26$22, t26$23, t26$24, t26$25;
      let trackHeight = opts && 'trackHeight' in opts ? opts.trackHeight : null;
      let activeTrackColor = opts && 'activeTrackColor' in opts ? opts.activeTrackColor : null;
      let inactiveTrackColor = opts && 'inactiveTrackColor' in opts ? opts.inactiveTrackColor : null;
      let disabledActiveTrackColor = opts && 'disabledActiveTrackColor' in opts ? opts.disabledActiveTrackColor : null;
      let disabledInactiveTrackColor = opts && 'disabledInactiveTrackColor' in opts ? opts.disabledInactiveTrackColor : null;
      let activeTickMarkColor = opts && 'activeTickMarkColor' in opts ? opts.activeTickMarkColor : null;
      let inactiveTickMarkColor = opts && 'inactiveTickMarkColor' in opts ? opts.inactiveTickMarkColor : null;
      let disabledActiveTickMarkColor = opts && 'disabledActiveTickMarkColor' in opts ? opts.disabledActiveTickMarkColor : null;
      let disabledInactiveTickMarkColor = opts && 'disabledInactiveTickMarkColor' in opts ? opts.disabledInactiveTickMarkColor : null;
      let thumbColor = opts && 'thumbColor' in opts ? opts.thumbColor : null;
      let overlappingShapeStrokeColor = opts && 'overlappingShapeStrokeColor' in opts ? opts.overlappingShapeStrokeColor : null;
      let disabledThumbColor = opts && 'disabledThumbColor' in opts ? opts.disabledThumbColor : null;
      let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
      let valueIndicatorColor = opts && 'valueIndicatorColor' in opts ? opts.valueIndicatorColor : null;
      let overlayShape = opts && 'overlayShape' in opts ? opts.overlayShape : null;
      let tickMarkShape = opts && 'tickMarkShape' in opts ? opts.tickMarkShape : null;
      let thumbShape = opts && 'thumbShape' in opts ? opts.thumbShape : null;
      let trackShape = opts && 'trackShape' in opts ? opts.trackShape : null;
      let valueIndicatorShape = opts && 'valueIndicatorShape' in opts ? opts.valueIndicatorShape : null;
      let rangeTickMarkShape = opts && 'rangeTickMarkShape' in opts ? opts.rangeTickMarkShape : null;
      let rangeThumbShape = opts && 'rangeThumbShape' in opts ? opts.rangeThumbShape : null;
      let rangeTrackShape = opts && 'rangeTrackShape' in opts ? opts.rangeTrackShape : null;
      let rangeValueIndicatorShape = opts && 'rangeValueIndicatorShape' in opts ? opts.rangeValueIndicatorShape : null;
      let showValueIndicator = opts && 'showValueIndicator' in opts ? opts.showValueIndicator : null;
      let valueIndicatorTextStyle = opts && 'valueIndicatorTextStyle' in opts ? opts.valueIndicatorTextStyle : null;
      let minThumbSeparation = opts && 'minThumbSeparation' in opts ? opts.minThumbSeparation : null;
      let thumbSelector = opts && 'thumbSelector' in opts ? opts.thumbSelector : null;
      let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
      return new slider_theme.SliderThemeData.new({trackHeight: (t26 = trackHeight, t26 == null ? this.trackHeight : t26), activeTrackColor: (t26$ = activeTrackColor, t26$ == null ? this.activeTrackColor : t26$), inactiveTrackColor: (t26$0 = inactiveTrackColor, t26$0 == null ? this.inactiveTrackColor : t26$0), disabledActiveTrackColor: (t26$1 = disabledActiveTrackColor, t26$1 == null ? this.disabledActiveTrackColor : t26$1), disabledInactiveTrackColor: (t26$2 = disabledInactiveTrackColor, t26$2 == null ? this.disabledInactiveTrackColor : t26$2), activeTickMarkColor: (t26$3 = activeTickMarkColor, t26$3 == null ? this.activeTickMarkColor : t26$3), inactiveTickMarkColor: (t26$4 = inactiveTickMarkColor, t26$4 == null ? this.inactiveTickMarkColor : t26$4), disabledActiveTickMarkColor: (t26$5 = disabledActiveTickMarkColor, t26$5 == null ? this.disabledActiveTickMarkColor : t26$5), disabledInactiveTickMarkColor: (t26$6 = disabledInactiveTickMarkColor, t26$6 == null ? this.disabledInactiveTickMarkColor : t26$6), thumbColor: (t26$7 = thumbColor, t26$7 == null ? this.thumbColor : t26$7), overlappingShapeStrokeColor: (t26$8 = overlappingShapeStrokeColor, t26$8 == null ? this.overlappingShapeStrokeColor : t26$8), disabledThumbColor: (t26$9 = disabledThumbColor, t26$9 == null ? this.disabledThumbColor : t26$9), overlayColor: (t26$10 = overlayColor, t26$10 == null ? this.overlayColor : t26$10), valueIndicatorColor: (t26$11 = valueIndicatorColor, t26$11 == null ? this.valueIndicatorColor : t26$11), overlayShape: (t26$12 = overlayShape, t26$12 == null ? this.overlayShape : t26$12), tickMarkShape: (t26$13 = tickMarkShape, t26$13 == null ? this.tickMarkShape : t26$13), thumbShape: (t26$14 = thumbShape, t26$14 == null ? this.thumbShape : t26$14), trackShape: (t26$15 = trackShape, t26$15 == null ? this.trackShape : t26$15), valueIndicatorShape: (t26$16 = valueIndicatorShape, t26$16 == null ? this.valueIndicatorShape : t26$16), rangeTickMarkShape: (t26$17 = rangeTickMarkShape, t26$17 == null ? this.rangeTickMarkShape : t26$17), rangeThumbShape: (t26$18 = rangeThumbShape, t26$18 == null ? this.rangeThumbShape : t26$18), rangeTrackShape: (t26$19 = rangeTrackShape, t26$19 == null ? this.rangeTrackShape : t26$19), rangeValueIndicatorShape: (t26$20 = rangeValueIndicatorShape, t26$20 == null ? this.rangeValueIndicatorShape : t26$20), showValueIndicator: (t26$21 = showValueIndicator, t26$21 == null ? this.showValueIndicator : t26$21), valueIndicatorTextStyle: (t26$22 = valueIndicatorTextStyle, t26$22 == null ? this.valueIndicatorTextStyle : t26$22), minThumbSeparation: (t26$23 = minThumbSeparation, t26$23 == null ? this.minThumbSeparation : t26$23), thumbSelector: (t26$24 = thumbSelector, t26$24 == null ? this.thumbSelector : t26$24), mouseCursor: (t26$25 = mouseCursor, t26$25 == null ? this.mouseCursor : t26$25)});
    }
    static lerp(a, b, t) {
      if (!(a !== null)) dart.assertFailed(null, I[35], 640, 12, "a != null");
      if (!(b !== null)) dart.assertFailed(null, I[35], 641, 12, "b != null");
      if (!(t !== null)) dart.assertFailed(null, I[35], 642, 12, "t != null");
      return new slider_theme.SliderThemeData.new({trackHeight: ui.lerpDouble(a.trackHeight, b.trackHeight, t), activeTrackColor: ui.Color.lerp(a.activeTrackColor, b.activeTrackColor, t), inactiveTrackColor: ui.Color.lerp(a.inactiveTrackColor, b.inactiveTrackColor, t), disabledActiveTrackColor: ui.Color.lerp(a.disabledActiveTrackColor, b.disabledActiveTrackColor, t), disabledInactiveTrackColor: ui.Color.lerp(a.disabledInactiveTrackColor, b.disabledInactiveTrackColor, t), activeTickMarkColor: ui.Color.lerp(a.activeTickMarkColor, b.activeTickMarkColor, t), inactiveTickMarkColor: ui.Color.lerp(a.inactiveTickMarkColor, b.inactiveTickMarkColor, t), disabledActiveTickMarkColor: ui.Color.lerp(a.disabledActiveTickMarkColor, b.disabledActiveTickMarkColor, t), disabledInactiveTickMarkColor: ui.Color.lerp(a.disabledInactiveTickMarkColor, b.disabledInactiveTickMarkColor, t), thumbColor: ui.Color.lerp(a.thumbColor, b.thumbColor, t), overlappingShapeStrokeColor: ui.Color.lerp(a.overlappingShapeStrokeColor, b.overlappingShapeStrokeColor, t), disabledThumbColor: ui.Color.lerp(a.disabledThumbColor, b.disabledThumbColor, t), overlayColor: ui.Color.lerp(a.overlayColor, b.overlayColor, t), valueIndicatorColor: ui.Color.lerp(a.valueIndicatorColor, b.valueIndicatorColor, t), overlayShape: t < 0.5 ? a.overlayShape : b.overlayShape, tickMarkShape: t < 0.5 ? a.tickMarkShape : b.tickMarkShape, thumbShape: t < 0.5 ? a.thumbShape : b.thumbShape, trackShape: t < 0.5 ? a.trackShape : b.trackShape, valueIndicatorShape: t < 0.5 ? a.valueIndicatorShape : b.valueIndicatorShape, rangeTickMarkShape: t < 0.5 ? a.rangeTickMarkShape : b.rangeTickMarkShape, rangeThumbShape: t < 0.5 ? a.rangeThumbShape : b.rangeThumbShape, rangeTrackShape: t < 0.5 ? a.rangeTrackShape : b.rangeTrackShape, rangeValueIndicatorShape: t < 0.5 ? a.rangeValueIndicatorShape : b.rangeValueIndicatorShape, showValueIndicator: t < 0.5 ? a.showValueIndicator : b.showValueIndicator, valueIndicatorTextStyle: text_style.TextStyle.lerp(a.valueIndicatorTextStyle, b.valueIndicatorTextStyle, t), minThumbSeparation: ui.lerpDouble(a.minThumbSeparation, b.minThumbSeparation, t), thumbSelector: t < 0.5 ? a.thumbSelector : b.thumbSelector, mouseCursor: t < 0.5 ? a.mouseCursor : b.mouseCursor});
    }
    get hashCode() {
      return core.Object.hash(this.trackHeight, this.activeTrackColor, this.inactiveTrackColor, this.disabledActiveTrackColor, this.disabledInactiveTrackColor, this.activeTickMarkColor, this.inactiveTickMarkColor, this.disabledActiveTickMarkColor, this.disabledInactiveTickMarkColor, this.thumbColor, this.overlappingShapeStrokeColor, this.disabledThumbColor, this.overlayColor, this.valueIndicatorColor, this.overlayShape, this.tickMarkShape, this.thumbShape, this.trackShape, this.valueIndicatorShape, core.Object.hash(this.rangeTickMarkShape, this.rangeThumbShape, this.rangeTrackShape, this.rangeValueIndicatorShape, this.showValueIndicator, this.valueIndicatorTextStyle, this.minThumbSeparation, this.thumbSelector, this.mouseCursor));
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      if (!other[S.$runtimeType]._equals(this[S.$runtimeType])) {
        return false;
      }
      return slider_theme.SliderThemeData.is(other) && other.trackHeight == this.trackHeight && dart.equals(other.activeTrackColor, this.activeTrackColor) && dart.equals(other.inactiveTrackColor, this.inactiveTrackColor) && dart.equals(other.disabledActiveTrackColor, this.disabledActiveTrackColor) && dart.equals(other.disabledInactiveTrackColor, this.disabledInactiveTrackColor) && dart.equals(other.activeTickMarkColor, this.activeTickMarkColor) && dart.equals(other.inactiveTickMarkColor, this.inactiveTickMarkColor) && dart.equals(other.disabledActiveTickMarkColor, this.disabledActiveTickMarkColor) && dart.equals(other.disabledInactiveTickMarkColor, this.disabledInactiveTickMarkColor) && dart.equals(other.thumbColor, this.thumbColor) && dart.equals(other.overlappingShapeStrokeColor, this.overlappingShapeStrokeColor) && dart.equals(other.disabledThumbColor, this.disabledThumbColor) && dart.equals(other.overlayColor, this.overlayColor) && dart.equals(other.valueIndicatorColor, this.valueIndicatorColor) && dart.equals(other.overlayShape, this.overlayShape) && dart.equals(other.tickMarkShape, this.tickMarkShape) && dart.equals(other.thumbShape, this.thumbShape) && dart.equals(other.trackShape, this.trackShape) && dart.equals(other.valueIndicatorShape, this.valueIndicatorShape) && dart.equals(other.rangeTickMarkShape, this.rangeTickMarkShape) && dart.equals(other.rangeThumbShape, this.rangeThumbShape) && dart.equals(other.rangeTrackShape, this.rangeTrackShape) && dart.equals(other.rangeValueIndicatorShape, this.rangeValueIndicatorShape) && other.showValueIndicator == this.showValueIndicator && dart.equals(other.valueIndicatorTextStyle, this.valueIndicatorTextStyle) && other.minThumbSeparation == this.minThumbSeparation && dart.equals(other.thumbSelector, this.thumbSelector) && dart.equals(other.mouseCursor, this.mouseCursor);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      let defaultData = C[310] || CT.C310;
      properties.add(new diagnostics.DoubleProperty.new("trackHeight", this.trackHeight, {defaultValue: defaultData.trackHeight}));
      properties.add(new colors.ColorProperty.new("activeTrackColor", this.activeTrackColor, {defaultValue: defaultData.activeTrackColor}));
      properties.add(new colors.ColorProperty.new("inactiveTrackColor", this.inactiveTrackColor, {defaultValue: defaultData.inactiveTrackColor}));
      properties.add(new colors.ColorProperty.new("disabledActiveTrackColor", this.disabledActiveTrackColor, {defaultValue: defaultData.disabledActiveTrackColor}));
      properties.add(new colors.ColorProperty.new("disabledInactiveTrackColor", this.disabledInactiveTrackColor, {defaultValue: defaultData.disabledInactiveTrackColor}));
      properties.add(new colors.ColorProperty.new("activeTickMarkColor", this.activeTickMarkColor, {defaultValue: defaultData.activeTickMarkColor}));
      properties.add(new colors.ColorProperty.new("inactiveTickMarkColor", this.inactiveTickMarkColor, {defaultValue: defaultData.inactiveTickMarkColor}));
      properties.add(new colors.ColorProperty.new("disabledActiveTickMarkColor", this.disabledActiveTickMarkColor, {defaultValue: defaultData.disabledActiveTickMarkColor}));
      properties.add(new colors.ColorProperty.new("disabledInactiveTickMarkColor", this.disabledInactiveTickMarkColor, {defaultValue: defaultData.disabledInactiveTickMarkColor}));
      properties.add(new colors.ColorProperty.new("thumbColor", this.thumbColor, {defaultValue: defaultData.thumbColor}));
      properties.add(new colors.ColorProperty.new("overlappingShapeStrokeColor", this.overlappingShapeStrokeColor, {defaultValue: defaultData.overlappingShapeStrokeColor}));
      properties.add(new colors.ColorProperty.new("disabledThumbColor", this.disabledThumbColor, {defaultValue: defaultData.disabledThumbColor}));
      properties.add(new colors.ColorProperty.new("overlayColor", this.overlayColor, {defaultValue: defaultData.overlayColor}));
      properties.add(new colors.ColorProperty.new("valueIndicatorColor", this.valueIndicatorColor, {defaultValue: defaultData.valueIndicatorColor}));
      properties.add(new (T$.DiagnosticsPropertyOfSliderComponentShape()).new("overlayShape", this.overlayShape, {defaultValue: defaultData.overlayShape}));
      properties.add(new (T$.DiagnosticsPropertyOfSliderTickMarkShape()).new("tickMarkShape", this.tickMarkShape, {defaultValue: defaultData.tickMarkShape}));
      properties.add(new (T$.DiagnosticsPropertyOfSliderComponentShape()).new("thumbShape", this.thumbShape, {defaultValue: defaultData.thumbShape}));
      properties.add(new (T$.DiagnosticsPropertyOfSliderTrackShape()).new("trackShape", this.trackShape, {defaultValue: defaultData.trackShape}));
      properties.add(new (T$.DiagnosticsPropertyOfSliderComponentShape()).new("valueIndicatorShape", this.valueIndicatorShape, {defaultValue: defaultData.valueIndicatorShape}));
      properties.add(new (T$.DiagnosticsPropertyOfRangeSliderTickMarkShape()).new("rangeTickMarkShape", this.rangeTickMarkShape, {defaultValue: defaultData.rangeTickMarkShape}));
      properties.add(new (T$.DiagnosticsPropertyOfRangeSliderThumbShape()).new("rangeThumbShape", this.rangeThumbShape, {defaultValue: defaultData.rangeThumbShape}));
      properties.add(new (T$.DiagnosticsPropertyOfRangeSliderTrackShape()).new("rangeTrackShape", this.rangeTrackShape, {defaultValue: defaultData.rangeTrackShape}));
      properties.add(new (T$.DiagnosticsPropertyOfRangeSliderValueIndicatorShape()).new("rangeValueIndicatorShape", this.rangeValueIndicatorShape, {defaultValue: defaultData.rangeValueIndicatorShape}));
      properties.add(new (T$.EnumPropertyOfShowValueIndicator()).new("showValueIndicator", this.showValueIndicator, {defaultValue: defaultData.showValueIndicator}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("valueIndicatorTextStyle", this.valueIndicatorTextStyle, {defaultValue: defaultData.valueIndicatorTextStyle}));
      properties.add(new diagnostics.DoubleProperty.new("minThumbSeparation", this.minThumbSeparation, {defaultValue: defaultData.minThumbSeparation}));
      properties.add(new (T$.DiagnosticsPropertyOfTextDirectionAndRangeValuesAnddouble__ToThumbN()).new("thumbSelector", this.thumbSelector, {defaultValue: defaultData.thumbSelector}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfMouseCursorN()).new("mouseCursor", this.mouseCursor, {defaultValue: defaultData.mouseCursor}));
    }
  };
  (slider_theme.SliderThemeData.new = function(opts) {
    let trackHeight = opts && 'trackHeight' in opts ? opts.trackHeight : null;
    let activeTrackColor = opts && 'activeTrackColor' in opts ? opts.activeTrackColor : null;
    let inactiveTrackColor = opts && 'inactiveTrackColor' in opts ? opts.inactiveTrackColor : null;
    let disabledActiveTrackColor = opts && 'disabledActiveTrackColor' in opts ? opts.disabledActiveTrackColor : null;
    let disabledInactiveTrackColor = opts && 'disabledInactiveTrackColor' in opts ? opts.disabledInactiveTrackColor : null;
    let activeTickMarkColor = opts && 'activeTickMarkColor' in opts ? opts.activeTickMarkColor : null;
    let inactiveTickMarkColor = opts && 'inactiveTickMarkColor' in opts ? opts.inactiveTickMarkColor : null;
    let disabledActiveTickMarkColor = opts && 'disabledActiveTickMarkColor' in opts ? opts.disabledActiveTickMarkColor : null;
    let disabledInactiveTickMarkColor = opts && 'disabledInactiveTickMarkColor' in opts ? opts.disabledInactiveTickMarkColor : null;
    let thumbColor = opts && 'thumbColor' in opts ? opts.thumbColor : null;
    let overlappingShapeStrokeColor = opts && 'overlappingShapeStrokeColor' in opts ? opts.overlappingShapeStrokeColor : null;
    let disabledThumbColor = opts && 'disabledThumbColor' in opts ? opts.disabledThumbColor : null;
    let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
    let valueIndicatorColor = opts && 'valueIndicatorColor' in opts ? opts.valueIndicatorColor : null;
    let overlayShape = opts && 'overlayShape' in opts ? opts.overlayShape : null;
    let tickMarkShape = opts && 'tickMarkShape' in opts ? opts.tickMarkShape : null;
    let thumbShape = opts && 'thumbShape' in opts ? opts.thumbShape : null;
    let trackShape = opts && 'trackShape' in opts ? opts.trackShape : null;
    let valueIndicatorShape = opts && 'valueIndicatorShape' in opts ? opts.valueIndicatorShape : null;
    let rangeTickMarkShape = opts && 'rangeTickMarkShape' in opts ? opts.rangeTickMarkShape : null;
    let rangeThumbShape = opts && 'rangeThumbShape' in opts ? opts.rangeThumbShape : null;
    let rangeTrackShape = opts && 'rangeTrackShape' in opts ? opts.rangeTrackShape : null;
    let rangeValueIndicatorShape = opts && 'rangeValueIndicatorShape' in opts ? opts.rangeValueIndicatorShape : null;
    let showValueIndicator = opts && 'showValueIndicator' in opts ? opts.showValueIndicator : null;
    let valueIndicatorTextStyle = opts && 'valueIndicatorTextStyle' in opts ? opts.valueIndicatorTextStyle : null;
    let minThumbSeparation = opts && 'minThumbSeparation' in opts ? opts.minThumbSeparation : null;
    let thumbSelector = opts && 'thumbSelector' in opts ? opts.thumbSelector : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    this[S.trackHeight] = trackHeight;
    this[S.activeTrackColor] = activeTrackColor;
    this[S.inactiveTrackColor] = inactiveTrackColor;
    this[S.disabledActiveTrackColor] = disabledActiveTrackColor;
    this[S.disabledInactiveTrackColor] = disabledInactiveTrackColor;
    this[S.activeTickMarkColor] = activeTickMarkColor;
    this[S.inactiveTickMarkColor] = inactiveTickMarkColor;
    this[S.disabledActiveTickMarkColor] = disabledActiveTickMarkColor;
    this[S.disabledInactiveTickMarkColor] = disabledInactiveTickMarkColor;
    this[S.thumbColor$1] = thumbColor;
    this[S.overlappingShapeStrokeColor] = overlappingShapeStrokeColor;
    this[S.disabledThumbColor] = disabledThumbColor;
    this[S.overlayColor$4] = overlayColor;
    this[S.valueIndicatorColor] = valueIndicatorColor;
    this[S.overlayShape] = overlayShape;
    this[S.tickMarkShape] = tickMarkShape;
    this[S.thumbShape] = thumbShape;
    this[S.trackShape] = trackShape;
    this[S.valueIndicatorShape] = valueIndicatorShape;
    this[S.rangeTickMarkShape] = rangeTickMarkShape;
    this[S.rangeThumbShape] = rangeThumbShape;
    this[S.rangeTrackShape] = rangeTrackShape;
    this[S.rangeValueIndicatorShape] = rangeValueIndicatorShape;
    this[S.showValueIndicator] = showValueIndicator;
    this[S.valueIndicatorTextStyle] = valueIndicatorTextStyle;
    this[S.minThumbSeparation] = minThumbSeparation;
    this[S.thumbSelector] = thumbSelector;
    this[S.mouseCursor$6] = mouseCursor;
    ;
  }).prototype = slider_theme.SliderThemeData.prototype;
  dart.addTypeTests(slider_theme.SliderThemeData);
  dart.addTypeCaches(slider_theme.SliderThemeData);
  dart.setMethodSignature(slider_theme.SliderThemeData, () => ({
    __proto__: dart.getMethods(slider_theme.SliderThemeData.__proto__),
    copyWith: dart.fnType(slider_theme.SliderThemeData, [], {activeTickMarkColor: dart.nullable(ui.Color), activeTrackColor: dart.nullable(ui.Color), disabledActiveTickMarkColor: dart.nullable(ui.Color), disabledActiveTrackColor: dart.nullable(ui.Color), disabledInactiveTickMarkColor: dart.nullable(ui.Color), disabledInactiveTrackColor: dart.nullable(ui.Color), disabledThumbColor: dart.nullable(ui.Color), inactiveTickMarkColor: dart.nullable(ui.Color), inactiveTrackColor: dart.nullable(ui.Color), minThumbSeparation: dart.nullable(core.double), mouseCursor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(mouse_cursor.MouseCursor))), overlappingShapeStrokeColor: dart.nullable(ui.Color), overlayColor: dart.nullable(ui.Color), overlayShape: dart.nullable(slider_theme.SliderComponentShape), rangeThumbShape: dart.nullable(slider_theme.RangeSliderThumbShape), rangeTickMarkShape: dart.nullable(slider_theme.RangeSliderTickMarkShape), rangeTrackShape: dart.nullable(slider_theme.RangeSliderTrackShape), rangeValueIndicatorShape: dart.nullable(slider_theme.RangeSliderValueIndicatorShape), showValueIndicator: dart.nullable(slider_theme.ShowValueIndicator), thumbColor: dart.nullable(ui.Color), thumbSelector: dart.nullable(dart.fnType(dart.nullable(slider_theme.Thumb), [ui.TextDirection, slider_theme.RangeValues, core.double, ui.Size, ui.Size, core.double])), thumbShape: dart.nullable(slider_theme.SliderComponentShape), tickMarkShape: dart.nullable(slider_theme.SliderTickMarkShape), trackHeight: dart.nullable(core.double), trackShape: dart.nullable(slider_theme.SliderTrackShape), valueIndicatorColor: dart.nullable(ui.Color), valueIndicatorShape: dart.nullable(slider_theme.SliderComponentShape), valueIndicatorTextStyle: dart.nullable(text_style.TextStyle)}, {})
  }));
  dart.setStaticMethodSignature(slider_theme.SliderThemeData, () => ['fromPrimaryColors', 'lerp']);
  dart.setLibraryUri(slider_theme.SliderThemeData, I[36]);
  dart.setFieldSignature(slider_theme.SliderThemeData, () => ({
    __proto__: dart.getFields(slider_theme.SliderThemeData.__proto__),
    trackHeight: dart.finalFieldType(dart.nullable(core.double)),
    activeTrackColor: dart.finalFieldType(dart.nullable(ui.Color)),
    inactiveTrackColor: dart.finalFieldType(dart.nullable(ui.Color)),
    disabledActiveTrackColor: dart.finalFieldType(dart.nullable(ui.Color)),
    disabledInactiveTrackColor: dart.finalFieldType(dart.nullable(ui.Color)),
    activeTickMarkColor: dart.finalFieldType(dart.nullable(ui.Color)),
    inactiveTickMarkColor: dart.finalFieldType(dart.nullable(ui.Color)),
    disabledActiveTickMarkColor: dart.finalFieldType(dart.nullable(ui.Color)),
    disabledInactiveTickMarkColor: dart.finalFieldType(dart.nullable(ui.Color)),
    thumbColor: dart.finalFieldType(dart.nullable(ui.Color)),
    overlappingShapeStrokeColor: dart.finalFieldType(dart.nullable(ui.Color)),
    disabledThumbColor: dart.finalFieldType(dart.nullable(ui.Color)),
    overlayColor: dart.finalFieldType(dart.nullable(ui.Color)),
    valueIndicatorColor: dart.finalFieldType(dart.nullable(ui.Color)),
    overlayShape: dart.finalFieldType(dart.nullable(slider_theme.SliderComponentShape)),
    tickMarkShape: dart.finalFieldType(dart.nullable(slider_theme.SliderTickMarkShape)),
    thumbShape: dart.finalFieldType(dart.nullable(slider_theme.SliderComponentShape)),
    trackShape: dart.finalFieldType(dart.nullable(slider_theme.SliderTrackShape)),
    valueIndicatorShape: dart.finalFieldType(dart.nullable(slider_theme.SliderComponentShape)),
    rangeTickMarkShape: dart.finalFieldType(dart.nullable(slider_theme.RangeSliderTickMarkShape)),
    rangeThumbShape: dart.finalFieldType(dart.nullable(slider_theme.RangeSliderThumbShape)),
    rangeTrackShape: dart.finalFieldType(dart.nullable(slider_theme.RangeSliderTrackShape)),
    rangeValueIndicatorShape: dart.finalFieldType(dart.nullable(slider_theme.RangeSliderValueIndicatorShape)),
    showValueIndicator: dart.finalFieldType(dart.nullable(slider_theme.ShowValueIndicator)),
    valueIndicatorTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    minThumbSeparation: dart.finalFieldType(dart.nullable(core.double)),
    thumbSelector: dart.finalFieldType(dart.nullable(dart.fnType(dart.nullable(slider_theme.Thumb), [ui.TextDirection, slider_theme.RangeValues, core.double, ui.Size, ui.Size, core.double]))),
    mouseCursor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(mouse_cursor.MouseCursor))))
  }));
  dart.defineExtensionMethods(slider_theme.SliderThemeData, ['_equals']);
  dart.defineExtensionAccessors(slider_theme.SliderThemeData, ['hashCode']);
  slider_theme.SliderComponentShape = class SliderComponentShape extends core.Object {};
  (slider_theme.SliderComponentShape.new = function() {
    ;
  }).prototype = slider_theme.SliderComponentShape.prototype;
  dart.addTypeTests(slider_theme.SliderComponentShape);
  dart.addTypeCaches(slider_theme.SliderComponentShape);
  dart.setLibraryUri(slider_theme.SliderComponentShape, I[36]);
  dart.setStaticFieldSignature(slider_theme.SliderComponentShape, () => ['noThumb', 'noOverlay']);
  dart.defineLazy(slider_theme.SliderComponentShape, {
    /*slider_theme.SliderComponentShape.noThumb*/get noThumb() {
      return new slider_theme._EmptySliderComponentShape.new();
    },
    /*slider_theme.SliderComponentShape.noOverlay*/get noOverlay() {
      return new slider_theme._EmptySliderComponentShape.new();
    }
  }, false);
  slider_theme.SliderTickMarkShape = class SliderTickMarkShape extends core.Object {};
  (slider_theme.SliderTickMarkShape.new = function() {
    ;
  }).prototype = slider_theme.SliderTickMarkShape.prototype;
  dart.addTypeTests(slider_theme.SliderTickMarkShape);
  dart.addTypeCaches(slider_theme.SliderTickMarkShape);
  dart.setLibraryUri(slider_theme.SliderTickMarkShape, I[36]);
  dart.setStaticFieldSignature(slider_theme.SliderTickMarkShape, () => ['noTickMark']);
  dart.defineLazy(slider_theme.SliderTickMarkShape, {
    /*slider_theme.SliderTickMarkShape.noTickMark*/get noTickMark() {
      return new slider_theme._EmptySliderTickMarkShape.new();
    }
  }, false);
  slider_theme.SliderTrackShape = class SliderTrackShape extends core.Object {};
  (slider_theme.SliderTrackShape.new = function() {
    ;
  }).prototype = slider_theme.SliderTrackShape.prototype;
  dart.addTypeTests(slider_theme.SliderTrackShape);
  dart.addTypeCaches(slider_theme.SliderTrackShape);
  dart.setLibraryUri(slider_theme.SliderTrackShape, I[36]);
  slider_theme.RangeSliderThumbShape = class RangeSliderThumbShape extends core.Object {};
  (slider_theme.RangeSliderThumbShape.new = function() {
    ;
  }).prototype = slider_theme.RangeSliderThumbShape.prototype;
  dart.addTypeTests(slider_theme.RangeSliderThumbShape);
  dart.addTypeCaches(slider_theme.RangeSliderThumbShape);
  dart.setLibraryUri(slider_theme.RangeSliderThumbShape, I[36]);
  slider_theme.RangeSliderValueIndicatorShape = class RangeSliderValueIndicatorShape extends core.Object {
    getHorizontalShift(opts) {
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      let center = opts && 'center' in opts ? opts.center : null;
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      let activationAnimation = opts && 'activationAnimation' in opts ? opts.activationAnimation : null;
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      let sizeWithOverflow = opts && 'sizeWithOverflow' in opts ? opts.sizeWithOverflow : null;
      return 0.0;
    }
  };
  (slider_theme.RangeSliderValueIndicatorShape.new = function() {
    ;
  }).prototype = slider_theme.RangeSliderValueIndicatorShape.prototype;
  dart.addTypeTests(slider_theme.RangeSliderValueIndicatorShape);
  dart.addTypeCaches(slider_theme.RangeSliderValueIndicatorShape);
  dart.setMethodSignature(slider_theme.RangeSliderValueIndicatorShape, () => ({
    __proto__: dart.getMethods(slider_theme.RangeSliderValueIndicatorShape.__proto__),
    getHorizontalShift: dart.fnType(core.double, [], {activationAnimation: dart.nullable(animation$.Animation$(core.double)), center: dart.nullable(ui.Offset), labelPainter: dart.nullable(text_painter.TextPainter), parentBox: dart.nullable(box$.RenderBox), sizeWithOverflow: dart.nullable(ui.Size), textScaleFactor: dart.nullable(core.double)}, {})
  }));
  dart.setLibraryUri(slider_theme.RangeSliderValueIndicatorShape, I[36]);
  slider_theme.RangeSliderTickMarkShape = class RangeSliderTickMarkShape extends core.Object {};
  (slider_theme.RangeSliderTickMarkShape.new = function() {
    ;
  }).prototype = slider_theme.RangeSliderTickMarkShape.prototype;
  dart.addTypeTests(slider_theme.RangeSliderTickMarkShape);
  dart.addTypeCaches(slider_theme.RangeSliderTickMarkShape);
  dart.setLibraryUri(slider_theme.RangeSliderTickMarkShape, I[36]);
  slider_theme.RangeSliderTrackShape = class RangeSliderTrackShape extends core.Object {};
  (slider_theme.RangeSliderTrackShape.new = function() {
    ;
  }).prototype = slider_theme.RangeSliderTrackShape.prototype;
  dart.addTypeTests(slider_theme.RangeSliderTrackShape);
  dart.addTypeCaches(slider_theme.RangeSliderTrackShape);
  dart.setLibraryUri(slider_theme.RangeSliderTrackShape, I[36]);
  slider_theme.BaseSliderTrackShape = class BaseSliderTrackShape extends core.Object {};
  slider_theme.BaseSliderTrackShape[dart.mixinOn] = Object => class BaseSliderTrackShape extends Object {
    getPreferredRect(opts) {
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      let offset = opts && 'offset' in opts ? opts.offset : C[311] || CT.C311;
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      let isEnabled = opts && 'isEnabled' in opts ? opts.isEnabled : false;
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : false;
      if (!(isEnabled !== null)) dart.assertFailed(null, I[35], 1479, 12, "isEnabled != null");
      if (!(isDiscrete !== null)) dart.assertFailed(null, I[35], 1480, 12, "isDiscrete != null");
      if (!(parentBox !== null)) dart.assertFailed(null, I[35], 1481, 12, "parentBox != null");
      if (!(sliderTheme !== null)) dart.assertFailed(null, I[35], 1482, 12, "sliderTheme != null");
      let thumbWidth = dart.nullCheck(sliderTheme.thumbShape).getPreferredSize(isEnabled, isDiscrete).width;
      let overlayWidth = dart.nullCheck(sliderTheme.overlayShape).getPreferredSize(isEnabled, isDiscrete).width;
      let trackHeight = dart.nullCheck(sliderTheme.trackHeight);
      if (!(overlayWidth >= 0)) dart.assertFailed(null, I[35], 1486, 12, "overlayWidth >= 0");
      if (!(trackHeight >= 0)) dart.assertFailed(null, I[35], 1487, 12, "trackHeight >= 0");
      let trackLeft = offset.dx + math.max(core.num, overlayWidth / 2, thumbWidth / 2);
      let trackTop = offset.dy + (parentBox.size.height - trackHeight) / 2;
      let trackRight = trackLeft + parentBox.size.width - math.max(core.num, thumbWidth, overlayWidth);
      let trackBottom = trackTop + trackHeight;
      return new ui.Rect.fromLTRB(math.min(core.double, trackLeft, trackRight), trackTop, math.max(core.double, trackLeft, trackRight), trackBottom);
    }
  };
  (slider_theme.BaseSliderTrackShape[dart.mixinNew] = function() {
  }).prototype = slider_theme.BaseSliderTrackShape.prototype;
  dart.addTypeTests(slider_theme.BaseSliderTrackShape);
  dart.addTypeCaches(slider_theme.BaseSliderTrackShape);
  slider_theme.BaseSliderTrackShape[dart.implements] = () => [core.Object];
  dart.setMethodSignature(slider_theme.BaseSliderTrackShape, () => ({
    __proto__: dart.getMethods(slider_theme.BaseSliderTrackShape.__proto__),
    getPreferredRect: dart.fnType(ui.Rect, [], {isDiscrete: core.bool, isEnabled: core.bool, offset: ui.Offset}, {parentBox: box$.RenderBox, sliderTheme: slider_theme.SliderThemeData})
  }));
  dart.setLibraryUri(slider_theme.BaseSliderTrackShape, I[36]);
  const SliderTrackShape_BaseSliderTrackShape$36 = class SliderTrackShape_BaseSliderTrackShape extends slider_theme.SliderTrackShape {};
  (SliderTrackShape_BaseSliderTrackShape$36.new = function() {
    SliderTrackShape_BaseSliderTrackShape$36.__proto__.new.call(this);
  }).prototype = SliderTrackShape_BaseSliderTrackShape$36.prototype;
  dart.applyMixin(SliderTrackShape_BaseSliderTrackShape$36, slider_theme.BaseSliderTrackShape);
  slider_theme.RectangularSliderTrackShape = class RectangularSliderTrackShape extends SliderTrackShape_BaseSliderTrackShape$36 {
    static ['_#new#tearOff']() {
      return new slider_theme.RectangularSliderTrackShape.new();
    }
    paint(context, offset, opts) {
      let t26, t26$;
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      let thumbCenter = opts && 'thumbCenter' in opts ? opts.thumbCenter : null;
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : false;
      let isEnabled = opts && 'isEnabled' in opts ? opts.isEnabled : false;
      if (!(context !== null)) dart.assertFailed(null, I[35], 1540, 12, "context != null");
      if (!(offset !== null)) dart.assertFailed(null, I[35], 1541, 12, "offset != null");
      if (!(parentBox !== null)) dart.assertFailed(null, I[35], 1542, 12, "parentBox != null");
      if (!(sliderTheme !== null)) dart.assertFailed(null, I[35], 1543, 12, "sliderTheme != null");
      if (!(sliderTheme.disabledActiveTrackColor != null)) dart.assertFailed(null, I[35], 1544, 12, "sliderTheme.disabledActiveTrackColor != null");
      if (!(sliderTheme.disabledInactiveTrackColor != null)) dart.assertFailed(null, I[35], 1545, 12, "sliderTheme.disabledInactiveTrackColor != null");
      if (!(sliderTheme.activeTrackColor != null)) dart.assertFailed(null, I[35], 1546, 12, "sliderTheme.activeTrackColor != null");
      if (!(sliderTheme.inactiveTrackColor != null)) dart.assertFailed(null, I[35], 1547, 12, "sliderTheme.inactiveTrackColor != null");
      if (!(sliderTheme.thumbShape != null)) dart.assertFailed(null, I[35], 1548, 12, "sliderTheme.thumbShape != null");
      if (!(enableAnimation !== null)) dart.assertFailed(null, I[35], 1549, 12, "enableAnimation != null");
      if (!(textDirection !== null)) dart.assertFailed(null, I[35], 1550, 12, "textDirection != null");
      if (!(thumbCenter !== null)) dart.assertFailed(null, I[35], 1551, 12, "thumbCenter != null");
      if (!(isEnabled !== null)) dart.assertFailed(null, I[35], 1552, 12, "isEnabled != null");
      if (!(isDiscrete !== null)) dart.assertFailed(null, I[35], 1553, 12, "isDiscrete != null");
      if (dart.nullCheck(sliderTheme.trackHeight) <= 0) {
        return;
      }
      let activeTrackColorTween = new tween.ColorTween.new({begin: sliderTheme.disabledActiveTrackColor, end: sliderTheme.activeTrackColor});
      let inactiveTrackColorTween = new tween.ColorTween.new({begin: sliderTheme.disabledInactiveTrackColor, end: sliderTheme.inactiveTrackColor});
      let activePaint = (t26 = ui.Paint.new(), (() => {
        t26.color = dart.nullCheck(activeTrackColorTween.evaluate(enableAnimation));
        return t26;
      })());
      let inactivePaint = (t26$ = ui.Paint.new(), (() => {
        t26$.color = dart.nullCheck(inactiveTrackColorTween.evaluate(enableAnimation));
        return t26$;
      })());
      let leftTrackPaint = null;
      let rightTrackPaint = null;
      switch (textDirection) {
        case C[155] || CT.C155:
          {
            leftTrackPaint = activePaint;
            rightTrackPaint = inactivePaint;
            break;
          }
        case C[154] || CT.C154:
          {
            leftTrackPaint = inactivePaint;
            rightTrackPaint = activePaint;
            break;
          }
      }
      let trackRect = this.getPreferredRect({parentBox: parentBox, offset: offset, sliderTheme: sliderTheme, isEnabled: isEnabled, isDiscrete: isDiscrete});
      let leftTrackSegment = new ui.Rect.fromLTRB(trackRect.left, trackRect.top, thumbCenter.dx, trackRect.bottom);
      if (!leftTrackSegment.isEmpty) {
        context.canvas.drawRect(leftTrackSegment, leftTrackPaint);
      }
      let rightTrackSegment = new ui.Rect.fromLTRB(thumbCenter.dx, trackRect.top, trackRect.right, trackRect.bottom);
      if (!rightTrackSegment.isEmpty) {
        context.canvas.drawRect(rightTrackSegment, rightTrackPaint);
      }
    }
  };
  (slider_theme.RectangularSliderTrackShape.new = function() {
    slider_theme.RectangularSliderTrackShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme.RectangularSliderTrackShape.prototype;
  dart.addTypeTests(slider_theme.RectangularSliderTrackShape);
  dart.addTypeCaches(slider_theme.RectangularSliderTrackShape);
  dart.setMethodSignature(slider_theme.RectangularSliderTrackShape, () => ({
    __proto__: dart.getMethods(slider_theme.RectangularSliderTrackShape.__proto__),
    paint: dart.fnType(dart.void, [object.PaintingContext, ui.Offset], {isDiscrete: core.bool, isEnabled: core.bool}, {enableAnimation: animation$.Animation$(core.double), parentBox: box$.RenderBox, sliderTheme: slider_theme.SliderThemeData, textDirection: ui.TextDirection, thumbCenter: ui.Offset})
  }));
  dart.setLibraryUri(slider_theme.RectangularSliderTrackShape, I[36]);
  const SliderTrackShape_BaseSliderTrackShape$36$ = class SliderTrackShape_BaseSliderTrackShape extends slider_theme.SliderTrackShape {};
  (SliderTrackShape_BaseSliderTrackShape$36$.new = function() {
    SliderTrackShape_BaseSliderTrackShape$36$.__proto__.new.call(this);
  }).prototype = SliderTrackShape_BaseSliderTrackShape$36$.prototype;
  dart.applyMixin(SliderTrackShape_BaseSliderTrackShape$36$, slider_theme.BaseSliderTrackShape);
  slider_theme.RoundedRectSliderTrackShape = class RoundedRectSliderTrackShape extends SliderTrackShape_BaseSliderTrackShape$36$ {
    static ['_#new#tearOff']() {
      return new slider_theme.RoundedRectSliderTrackShape.new();
    }
    paint(context, offset, opts) {
      let t26, t26$;
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      let thumbCenter = opts && 'thumbCenter' in opts ? opts.thumbCenter : null;
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : false;
      let isEnabled = opts && 'isEnabled' in opts ? opts.isEnabled : false;
      let additionalActiveTrackHeight = opts && 'additionalActiveTrackHeight' in opts ? opts.additionalActiveTrackHeight : 2;
      if (!(context !== null)) dart.assertFailed(null, I[35], 1642, 12, "context != null");
      if (!(offset !== null)) dart.assertFailed(null, I[35], 1643, 12, "offset != null");
      if (!(parentBox !== null)) dart.assertFailed(null, I[35], 1644, 12, "parentBox != null");
      if (!(sliderTheme !== null)) dart.assertFailed(null, I[35], 1645, 12, "sliderTheme != null");
      if (!(sliderTheme.disabledActiveTrackColor != null)) dart.assertFailed(null, I[35], 1646, 12, "sliderTheme.disabledActiveTrackColor != null");
      if (!(sliderTheme.disabledInactiveTrackColor != null)) dart.assertFailed(null, I[35], 1647, 12, "sliderTheme.disabledInactiveTrackColor != null");
      if (!(sliderTheme.activeTrackColor != null)) dart.assertFailed(null, I[35], 1648, 12, "sliderTheme.activeTrackColor != null");
      if (!(sliderTheme.inactiveTrackColor != null)) dart.assertFailed(null, I[35], 1649, 12, "sliderTheme.inactiveTrackColor != null");
      if (!(sliderTheme.thumbShape != null)) dart.assertFailed(null, I[35], 1650, 12, "sliderTheme.thumbShape != null");
      if (!(enableAnimation !== null)) dart.assertFailed(null, I[35], 1651, 12, "enableAnimation != null");
      if (!(textDirection !== null)) dart.assertFailed(null, I[35], 1652, 12, "textDirection != null");
      if (!(thumbCenter !== null)) dart.assertFailed(null, I[35], 1653, 12, "thumbCenter != null");
      if (sliderTheme.trackHeight == null || dart.nullCheck(sliderTheme.trackHeight) <= 0) {
        return;
      }
      let activeTrackColorTween = new tween.ColorTween.new({begin: sliderTheme.disabledActiveTrackColor, end: sliderTheme.activeTrackColor});
      let inactiveTrackColorTween = new tween.ColorTween.new({begin: sliderTheme.disabledInactiveTrackColor, end: sliderTheme.inactiveTrackColor});
      let activePaint = (t26 = ui.Paint.new(), (() => {
        t26.color = dart.nullCheck(activeTrackColorTween.evaluate(enableAnimation));
        return t26;
      })());
      let inactivePaint = (t26$ = ui.Paint.new(), (() => {
        t26$.color = dart.nullCheck(inactiveTrackColorTween.evaluate(enableAnimation));
        return t26$;
      })());
      let leftTrackPaint = null;
      let rightTrackPaint = null;
      switch (textDirection) {
        case C[155] || CT.C155:
          {
            leftTrackPaint = activePaint;
            rightTrackPaint = inactivePaint;
            break;
          }
        case C[154] || CT.C154:
          {
            leftTrackPaint = inactivePaint;
            rightTrackPaint = activePaint;
            break;
          }
      }
      let trackRect = this.getPreferredRect({parentBox: parentBox, offset: offset, sliderTheme: sliderTheme, isEnabled: isEnabled, isDiscrete: isDiscrete});
      let trackRadius = new ui.Radius.circular(trackRect.height / 2);
      let activeTrackRadius = new ui.Radius.circular((trackRect.height + additionalActiveTrackHeight) / 2);
      context.canvas.drawRRect(new ui.RRect.fromLTRBAndCorners(trackRect.left, textDirection === ui.TextDirection.ltr ? trackRect.top - additionalActiveTrackHeight / 2 : trackRect.top, thumbCenter.dx, textDirection === ui.TextDirection.ltr ? trackRect.bottom + additionalActiveTrackHeight / 2 : trackRect.bottom, {topLeft: textDirection === ui.TextDirection.ltr ? activeTrackRadius : trackRadius, bottomLeft: textDirection === ui.TextDirection.ltr ? activeTrackRadius : trackRadius}), leftTrackPaint);
      context.canvas.drawRRect(new ui.RRect.fromLTRBAndCorners(thumbCenter.dx, textDirection === ui.TextDirection.rtl ? trackRect.top - additionalActiveTrackHeight / 2 : trackRect.top, trackRect.right, textDirection === ui.TextDirection.rtl ? trackRect.bottom + additionalActiveTrackHeight / 2 : trackRect.bottom, {topRight: textDirection === ui.TextDirection.rtl ? activeTrackRadius : trackRadius, bottomRight: textDirection === ui.TextDirection.rtl ? activeTrackRadius : trackRadius}), rightTrackPaint);
    }
  };
  (slider_theme.RoundedRectSliderTrackShape.new = function() {
    slider_theme.RoundedRectSliderTrackShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme.RoundedRectSliderTrackShape.prototype;
  dart.addTypeTests(slider_theme.RoundedRectSliderTrackShape);
  dart.addTypeCaches(slider_theme.RoundedRectSliderTrackShape);
  dart.setMethodSignature(slider_theme.RoundedRectSliderTrackShape, () => ({
    __proto__: dart.getMethods(slider_theme.RoundedRectSliderTrackShape.__proto__),
    paint: dart.fnType(dart.void, [object.PaintingContext, ui.Offset], {additionalActiveTrackHeight: core.double, isDiscrete: core.bool, isEnabled: core.bool}, {enableAnimation: animation$.Animation$(core.double), parentBox: box$.RenderBox, sliderTheme: slider_theme.SliderThemeData, textDirection: ui.TextDirection, thumbCenter: ui.Offset})
  }));
  dart.setLibraryUri(slider_theme.RoundedRectSliderTrackShape, I[36]);
  slider_theme.RectangularRangeSliderTrackShape = class RectangularRangeSliderTrackShape extends slider_theme.RangeSliderTrackShape {
    static ['_#new#tearOff']() {
      return new slider_theme.RectangularRangeSliderTrackShape.new();
    }
    getPreferredRect(opts) {
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      let offset = opts && 'offset' in opts ? opts.offset : C[311] || CT.C311;
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      let isEnabled = opts && 'isEnabled' in opts ? opts.isEnabled : false;
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : false;
      if (!(parentBox !== null)) dart.assertFailed(null, I[35], 1757, 12, "parentBox != null");
      if (!(offset !== null)) dart.assertFailed(null, I[35], 1758, 12, "offset != null");
      if (!(sliderTheme !== null)) dart.assertFailed(null, I[35], 1759, 12, "sliderTheme != null");
      if (!(sliderTheme.overlayShape != null)) dart.assertFailed(null, I[35], 1760, 12, "sliderTheme.overlayShape != null");
      if (!(isEnabled !== null)) dart.assertFailed(null, I[35], 1761, 12, "isEnabled != null");
      if (!(isDiscrete !== null)) dart.assertFailed(null, I[35], 1762, 12, "isDiscrete != null");
      let overlayWidth = dart.nullCheck(sliderTheme.overlayShape).getPreferredSize(isEnabled, isDiscrete).width;
      let trackHeight = dart.nullCheck(sliderTheme.trackHeight);
      if (!(overlayWidth >= 0)) dart.assertFailed(null, I[35], 1765, 12, "overlayWidth >= 0");
      if (!(trackHeight >= 0)) dart.assertFailed(null, I[35], 1766, 12, "trackHeight >= 0");
      let trackLeft = offset.dx + overlayWidth / 2;
      let trackTop = offset.dy + (parentBox.size.height - trackHeight) / 2;
      let trackRight = trackLeft + parentBox.size.width - overlayWidth;
      let trackBottom = trackTop + trackHeight;
      return new ui.Rect.fromLTRB(math.min(core.double, trackLeft, trackRight), trackTop, math.max(core.double, trackLeft, trackRight), trackBottom);
    }
    paint(context, offset, opts) {
      let t26, t26$;
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      let startThumbCenter = opts && 'startThumbCenter' in opts ? opts.startThumbCenter : null;
      let endThumbCenter = opts && 'endThumbCenter' in opts ? opts.endThumbCenter : null;
      let isEnabled = opts && 'isEnabled' in opts ? opts.isEnabled : false;
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : false;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      if (!(context !== null)) dart.assertFailed(null, I[35], 1789, 12, "context != null");
      if (!(offset !== null)) dart.assertFailed(null, I[35], 1790, 12, "offset != null");
      if (!(parentBox !== null)) dart.assertFailed(null, I[35], 1791, 12, "parentBox != null");
      if (!(sliderTheme !== null)) dart.assertFailed(null, I[35], 1792, 12, "sliderTheme != null");
      if (!(sliderTheme.disabledActiveTrackColor != null)) dart.assertFailed(null, I[35], 1793, 12, "sliderTheme.disabledActiveTrackColor != null");
      if (!(sliderTheme.disabledInactiveTrackColor != null)) dart.assertFailed(null, I[35], 1794, 12, "sliderTheme.disabledInactiveTrackColor != null");
      if (!(sliderTheme.activeTrackColor != null)) dart.assertFailed(null, I[35], 1795, 12, "sliderTheme.activeTrackColor != null");
      if (!(sliderTheme.inactiveTrackColor != null)) dart.assertFailed(null, I[35], 1796, 12, "sliderTheme.inactiveTrackColor != null");
      if (!(sliderTheme.rangeThumbShape != null)) dart.assertFailed(null, I[35], 1797, 12, "sliderTheme.rangeThumbShape != null");
      if (!(enableAnimation != null)) dart.assertFailed(null, I[35], 1798, 12, "enableAnimation != null");
      if (!(startThumbCenter !== null)) dart.assertFailed(null, I[35], 1799, 12, "startThumbCenter != null");
      if (!(endThumbCenter !== null)) dart.assertFailed(null, I[35], 1800, 12, "endThumbCenter != null");
      if (!(isEnabled !== null)) dart.assertFailed(null, I[35], 1801, 12, "isEnabled != null");
      if (!(isDiscrete !== null)) dart.assertFailed(null, I[35], 1802, 12, "isDiscrete != null");
      if (!(textDirection !== null)) dart.assertFailed(null, I[35], 1803, 12, "textDirection != null");
      let activeTrackColorTween = new tween.ColorTween.new({begin: sliderTheme.disabledActiveTrackColor, end: sliderTheme.activeTrackColor});
      let inactiveTrackColorTween = new tween.ColorTween.new({begin: sliderTheme.disabledInactiveTrackColor, end: sliderTheme.inactiveTrackColor});
      let activePaint = (t26 = ui.Paint.new(), (() => {
        t26.color = dart.nullCheck(activeTrackColorTween.evaluate(dart.nullCheck(enableAnimation)));
        return t26;
      })());
      let inactivePaint = (t26$ = ui.Paint.new(), (() => {
        t26$.color = dart.nullCheck(inactiveTrackColorTween.evaluate(enableAnimation));
        return t26$;
      })());
      let leftThumbOffset = null;
      let rightThumbOffset = null;
      switch (textDirection) {
        case C[155] || CT.C155:
          {
            leftThumbOffset = startThumbCenter;
            rightThumbOffset = endThumbCenter;
            break;
          }
        case C[154] || CT.C154:
          {
            leftThumbOffset = endThumbCenter;
            rightThumbOffset = startThumbCenter;
            break;
          }
      }
      let trackRect = this.getPreferredRect({parentBox: parentBox, offset: offset, sliderTheme: sliderTheme, isEnabled: isEnabled, isDiscrete: isDiscrete});
      let leftTrackSegment = new ui.Rect.fromLTRB(trackRect.left, trackRect.top, leftThumbOffset.dx, trackRect.bottom);
      if (!leftTrackSegment.isEmpty) {
        context.canvas.drawRect(leftTrackSegment, inactivePaint);
      }
      let middleTrackSegment = new ui.Rect.fromLTRB(leftThumbOffset.dx, trackRect.top, rightThumbOffset.dx, trackRect.bottom);
      if (!middleTrackSegment.isEmpty) {
        context.canvas.drawRect(middleTrackSegment, activePaint);
      }
      let rightTrackSegment = new ui.Rect.fromLTRB(rightThumbOffset.dx, trackRect.top, trackRect.right, trackRect.bottom);
      if (!rightTrackSegment.isEmpty) {
        context.canvas.drawRect(rightTrackSegment, inactivePaint);
      }
    }
  };
  (slider_theme.RectangularRangeSliderTrackShape.new = function() {
    slider_theme.RectangularRangeSliderTrackShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme.RectangularRangeSliderTrackShape.prototype;
  dart.addTypeTests(slider_theme.RectangularRangeSliderTrackShape);
  dart.addTypeCaches(slider_theme.RectangularRangeSliderTrackShape);
  dart.setMethodSignature(slider_theme.RectangularRangeSliderTrackShape, () => ({
    __proto__: dart.getMethods(slider_theme.RectangularRangeSliderTrackShape.__proto__),
    getPreferredRect: dart.fnType(ui.Rect, [], {isDiscrete: core.bool, isEnabled: core.bool, offset: ui.Offset}, {parentBox: box$.RenderBox, sliderTheme: slider_theme.SliderThemeData}),
    paint: dart.fnType(dart.void, [object.PaintingContext, ui.Offset], {isDiscrete: core.bool, isEnabled: core.bool}, {enableAnimation: dart.nullable(animation$.Animation$(core.double)), endThumbCenter: ui.Offset, parentBox: box$.RenderBox, sliderTheme: slider_theme.SliderThemeData, startThumbCenter: ui.Offset, textDirection: ui.TextDirection})
  }));
  dart.setLibraryUri(slider_theme.RectangularRangeSliderTrackShape, I[36]);
  slider_theme.RoundedRectRangeSliderTrackShape = class RoundedRectRangeSliderTrackShape extends slider_theme.RangeSliderTrackShape {
    static ['_#new#tearOff']() {
      return new slider_theme.RoundedRectRangeSliderTrackShape.new();
    }
    getPreferredRect(opts) {
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      let offset = opts && 'offset' in opts ? opts.offset : C[311] || CT.C311;
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      let isEnabled = opts && 'isEnabled' in opts ? opts.isEnabled : false;
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : false;
      if (!(parentBox !== null)) dart.assertFailed(null, I[35], 1888, 12, "parentBox != null");
      if (!(offset !== null)) dart.assertFailed(null, I[35], 1889, 12, "offset != null");
      if (!(sliderTheme !== null)) dart.assertFailed(null, I[35], 1890, 12, "sliderTheme != null");
      if (!(sliderTheme.overlayShape != null)) dart.assertFailed(null, I[35], 1891, 12, "sliderTheme.overlayShape != null");
      if (!(sliderTheme.trackHeight != null)) dart.assertFailed(null, I[35], 1892, 12, "sliderTheme.trackHeight != null");
      if (!(isEnabled !== null)) dart.assertFailed(null, I[35], 1893, 12, "isEnabled != null");
      if (!(isDiscrete !== null)) dart.assertFailed(null, I[35], 1894, 12, "isDiscrete != null");
      let overlayWidth = dart.nullCheck(sliderTheme.overlayShape).getPreferredSize(isEnabled, isDiscrete).width;
      let trackHeight = dart.nullCheck(sliderTheme.trackHeight);
      if (!(overlayWidth >= 0)) dart.assertFailed(null, I[35], 1897, 12, "overlayWidth >= 0");
      if (!(trackHeight >= 0)) dart.assertFailed(null, I[35], 1898, 12, "trackHeight >= 0");
      let trackLeft = offset.dx + overlayWidth / 2;
      let trackTop = offset.dy + (parentBox.size.height - trackHeight) / 2;
      let trackRight = trackLeft + parentBox.size.width - overlayWidth;
      let trackBottom = trackTop + trackHeight;
      return new ui.Rect.fromLTRB(math.min(core.double, trackLeft, trackRight), trackTop, math.max(core.double, trackLeft, trackRight), trackBottom);
    }
    paint(context, offset, opts) {
      let t26, t26$;
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      let startThumbCenter = opts && 'startThumbCenter' in opts ? opts.startThumbCenter : null;
      let endThumbCenter = opts && 'endThumbCenter' in opts ? opts.endThumbCenter : null;
      let isEnabled = opts && 'isEnabled' in opts ? opts.isEnabled : false;
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : false;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      let additionalActiveTrackHeight = opts && 'additionalActiveTrackHeight' in opts ? opts.additionalActiveTrackHeight : 2;
      if (!(context !== null)) dart.assertFailed(null, I[35], 1922, 12, "context != null");
      if (!(offset !== null)) dart.assertFailed(null, I[35], 1923, 12, "offset != null");
      if (!(parentBox !== null)) dart.assertFailed(null, I[35], 1924, 12, "parentBox != null");
      if (!(sliderTheme !== null)) dart.assertFailed(null, I[35], 1925, 12, "sliderTheme != null");
      if (!(sliderTheme.disabledActiveTrackColor != null)) dart.assertFailed(null, I[35], 1926, 12, "sliderTheme.disabledActiveTrackColor != null");
      if (!(sliderTheme.disabledInactiveTrackColor != null)) dart.assertFailed(null, I[35], 1927, 12, "sliderTheme.disabledInactiveTrackColor != null");
      if (!(sliderTheme.activeTrackColor != null)) dart.assertFailed(null, I[35], 1928, 12, "sliderTheme.activeTrackColor != null");
      if (!(sliderTheme.inactiveTrackColor != null)) dart.assertFailed(null, I[35], 1929, 12, "sliderTheme.inactiveTrackColor != null");
      if (!(sliderTheme.rangeThumbShape != null)) dart.assertFailed(null, I[35], 1930, 12, "sliderTheme.rangeThumbShape != null");
      if (!(enableAnimation !== null)) dart.assertFailed(null, I[35], 1931, 12, "enableAnimation != null");
      if (!(startThumbCenter !== null)) dart.assertFailed(null, I[35], 1932, 12, "startThumbCenter != null");
      if (!(endThumbCenter !== null)) dart.assertFailed(null, I[35], 1933, 12, "endThumbCenter != null");
      if (!(isEnabled !== null)) dart.assertFailed(null, I[35], 1934, 12, "isEnabled != null");
      if (!(isDiscrete !== null)) dart.assertFailed(null, I[35], 1935, 12, "isDiscrete != null");
      if (!(textDirection !== null)) dart.assertFailed(null, I[35], 1936, 12, "textDirection != null");
      if (sliderTheme.trackHeight == null || dart.nullCheck(sliderTheme.trackHeight) <= 0) {
        return;
      }
      let activeTrackColorTween = new tween.ColorTween.new({begin: sliderTheme.disabledActiveTrackColor, end: sliderTheme.activeTrackColor});
      let inactiveTrackColorTween = new tween.ColorTween.new({begin: sliderTheme.disabledInactiveTrackColor, end: sliderTheme.inactiveTrackColor});
      let activePaint = (t26 = ui.Paint.new(), (() => {
        t26.color = dart.nullCheck(activeTrackColorTween.evaluate(enableAnimation));
        return t26;
      })());
      let inactivePaint = (t26$ = ui.Paint.new(), (() => {
        t26$.color = dart.nullCheck(inactiveTrackColorTween.evaluate(enableAnimation));
        return t26$;
      })());
      let leftThumbOffset = null;
      let rightThumbOffset = null;
      switch (textDirection) {
        case C[155] || CT.C155:
          {
            leftThumbOffset = startThumbCenter;
            rightThumbOffset = endThumbCenter;
            break;
          }
        case C[154] || CT.C154:
          {
            leftThumbOffset = endThumbCenter;
            rightThumbOffset = startThumbCenter;
            break;
          }
      }
      let thumbSize = dart.nullCheck(sliderTheme.rangeThumbShape).getPreferredSize(isEnabled, isDiscrete);
      let thumbRadius = thumbSize.width / 2;
      if (!(thumbRadius > 0)) dart.assertFailed(null, I[35], 1971, 12, "thumbRadius > 0");
      let trackRect = this.getPreferredRect({parentBox: parentBox, offset: offset, sliderTheme: sliderTheme, isEnabled: isEnabled, isDiscrete: isDiscrete});
      let trackRadius = new ui.Radius.circular(trackRect.height / 2);
      context.canvas.drawRRect(new ui.RRect.fromLTRBAndCorners(trackRect.left, trackRect.top, leftThumbOffset.dx, trackRect.bottom, {topLeft: trackRadius, bottomLeft: trackRadius}), inactivePaint);
      context.canvas.drawRect(new ui.Rect.fromLTRB(leftThumbOffset.dx, trackRect.top - additionalActiveTrackHeight / 2, rightThumbOffset.dx, trackRect.bottom + additionalActiveTrackHeight / 2), activePaint);
      context.canvas.drawRRect(new ui.RRect.fromLTRBAndCorners(rightThumbOffset.dx, trackRect.top, trackRect.right, trackRect.bottom, {topRight: trackRadius, bottomRight: trackRadius}), inactivePaint);
    }
  };
  (slider_theme.RoundedRectRangeSliderTrackShape.new = function() {
    slider_theme.RoundedRectRangeSliderTrackShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme.RoundedRectRangeSliderTrackShape.prototype;
  dart.addTypeTests(slider_theme.RoundedRectRangeSliderTrackShape);
  dart.addTypeCaches(slider_theme.RoundedRectRangeSliderTrackShape);
  dart.setMethodSignature(slider_theme.RoundedRectRangeSliderTrackShape, () => ({
    __proto__: dart.getMethods(slider_theme.RoundedRectRangeSliderTrackShape.__proto__),
    getPreferredRect: dart.fnType(ui.Rect, [], {isDiscrete: core.bool, isEnabled: core.bool, offset: ui.Offset}, {parentBox: box$.RenderBox, sliderTheme: slider_theme.SliderThemeData}),
    paint: dart.fnType(dart.void, [object.PaintingContext, ui.Offset], {additionalActiveTrackHeight: core.double, isDiscrete: core.bool, isEnabled: core.bool}, {enableAnimation: animation$.Animation$(core.double), endThumbCenter: ui.Offset, parentBox: box$.RenderBox, sliderTheme: slider_theme.SliderThemeData, startThumbCenter: ui.Offset, textDirection: ui.TextDirection})
  }));
  dart.setLibraryUri(slider_theme.RoundedRectRangeSliderTrackShape, I[36]);
  slider_theme.RoundSliderTickMarkShape = class RoundSliderTickMarkShape extends slider_theme.SliderTickMarkShape {
    get tickMarkRadius() {
      return this[S.tickMarkRadius];
    }
    set tickMarkRadius(value) {
      super.tickMarkRadius = value;
    }
    static ['_#new#tearOff'](opts) {
      let tickMarkRadius = opts && 'tickMarkRadius' in opts ? opts.tickMarkRadius : null;
      return new slider_theme.RoundSliderTickMarkShape.new({tickMarkRadius: tickMarkRadius});
    }
    getPreferredSize(opts) {
      let t26;
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      let isEnabled = opts && 'isEnabled' in opts ? opts.isEnabled : null;
      if (!(sliderTheme !== null)) dart.assertFailed(null, I[35], 2054, 12, "sliderTheme != null");
      if (!(sliderTheme.trackHeight != null)) dart.assertFailed(null, I[35], 2055, 12, "sliderTheme.trackHeight != null");
      if (!(isEnabled !== null)) dart.assertFailed(null, I[35], 2056, 12, "isEnabled != null");
      return new ui.Size.fromRadius((t26 = this.tickMarkRadius, t26 == null ? dart.nullCheck(sliderTheme.trackHeight) / 4 : t26));
    }
    paint(context, center, opts) {
      let t26;
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      let thumbCenter = opts && 'thumbCenter' in opts ? opts.thumbCenter : null;
      let isEnabled = opts && 'isEnabled' in opts ? opts.isEnabled : null;
      if (!(context !== null)) dart.assertFailed(null, I[35], 2074, 12, "context != null");
      if (!(center !== null)) dart.assertFailed(null, I[35], 2075, 12, "center != null");
      if (!(parentBox !== null)) dart.assertFailed(null, I[35], 2076, 12, "parentBox != null");
      if (!(sliderTheme !== null)) dart.assertFailed(null, I[35], 2077, 12, "sliderTheme != null");
      if (!(sliderTheme.disabledActiveTickMarkColor != null)) dart.assertFailed(null, I[35], 2078, 12, "sliderTheme.disabledActiveTickMarkColor != null");
      if (!(sliderTheme.disabledInactiveTickMarkColor != null)) dart.assertFailed(null, I[35], 2079, 12, "sliderTheme.disabledInactiveTickMarkColor != null");
      if (!(sliderTheme.activeTickMarkColor != null)) dart.assertFailed(null, I[35], 2080, 12, "sliderTheme.activeTickMarkColor != null");
      if (!(sliderTheme.inactiveTickMarkColor != null)) dart.assertFailed(null, I[35], 2081, 12, "sliderTheme.inactiveTickMarkColor != null");
      if (!(enableAnimation !== null)) dart.assertFailed(null, I[35], 2082, 12, "enableAnimation != null");
      if (!(textDirection !== null)) dart.assertFailed(null, I[35], 2083, 12, "textDirection != null");
      if (!(thumbCenter !== null)) dart.assertFailed(null, I[35], 2084, 12, "thumbCenter != null");
      if (!(isEnabled !== null)) dart.assertFailed(null, I[35], 2085, 12, "isEnabled != null");
      let begin = null;
      let end = null;
      switch (textDirection) {
        case C[155] || CT.C155:
          {
            let isTickMarkRightOfThumb = center.dx > thumbCenter.dx;
            begin = isTickMarkRightOfThumb ? sliderTheme.disabledInactiveTickMarkColor : sliderTheme.disabledActiveTickMarkColor;
            end = isTickMarkRightOfThumb ? sliderTheme.inactiveTickMarkColor : sliderTheme.activeTickMarkColor;
            break;
          }
        case C[154] || CT.C154:
          {
            let isTickMarkLeftOfThumb = center.dx < thumbCenter.dx;
            begin = isTickMarkLeftOfThumb ? sliderTheme.disabledInactiveTickMarkColor : sliderTheme.disabledActiveTickMarkColor;
            end = isTickMarkLeftOfThumb ? sliderTheme.inactiveTickMarkColor : sliderTheme.activeTickMarkColor;
            break;
          }
      }
      let paint = (t26 = ui.Paint.new(), (() => {
        t26.color = dart.nullCheck(new tween.ColorTween.new({begin: begin, end: end}).evaluate(enableAnimation));
        return t26;
      })());
      let tickMarkRadius = this.getPreferredSize({isEnabled: isEnabled, sliderTheme: sliderTheme}).width / 2;
      if (tickMarkRadius > 0) {
        context.canvas.drawCircle(center, tickMarkRadius, paint);
      }
    }
  };
  (slider_theme.RoundSliderTickMarkShape.new = function(opts) {
    let tickMarkRadius = opts && 'tickMarkRadius' in opts ? opts.tickMarkRadius : null;
    this[S.tickMarkRadius] = tickMarkRadius;
    slider_theme.RoundSliderTickMarkShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme.RoundSliderTickMarkShape.prototype;
  dart.addTypeTests(slider_theme.RoundSliderTickMarkShape);
  dart.addTypeCaches(slider_theme.RoundSliderTickMarkShape);
  dart.setMethodSignature(slider_theme.RoundSliderTickMarkShape, () => ({
    __proto__: dart.getMethods(slider_theme.RoundSliderTickMarkShape.__proto__),
    getPreferredSize: dart.fnType(ui.Size, [], {}, {isEnabled: core.bool, sliderTheme: slider_theme.SliderThemeData}),
    paint: dart.fnType(dart.void, [object.PaintingContext, ui.Offset], {}, {enableAnimation: animation$.Animation$(core.double), isEnabled: core.bool, parentBox: box$.RenderBox, sliderTheme: slider_theme.SliderThemeData, textDirection: ui.TextDirection, thumbCenter: ui.Offset})
  }));
  dart.setLibraryUri(slider_theme.RoundSliderTickMarkShape, I[36]);
  dart.setFieldSignature(slider_theme.RoundSliderTickMarkShape, () => ({
    __proto__: dart.getFields(slider_theme.RoundSliderTickMarkShape.__proto__),
    tickMarkRadius: dart.finalFieldType(dart.nullable(core.double))
  }));
  slider_theme.RoundRangeSliderTickMarkShape = class RoundRangeSliderTickMarkShape extends slider_theme.RangeSliderTickMarkShape {
    get tickMarkRadius() {
      return this[S.tickMarkRadius$1];
    }
    set tickMarkRadius(value) {
      super.tickMarkRadius = value;
    }
    static ['_#new#tearOff'](opts) {
      let tickMarkRadius = opts && 'tickMarkRadius' in opts ? opts.tickMarkRadius : null;
      return new slider_theme.RoundRangeSliderTickMarkShape.new({tickMarkRadius: tickMarkRadius});
    }
    getPreferredSize(opts) {
      let t26;
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      let isEnabled = opts && 'isEnabled' in opts ? opts.isEnabled : false;
      if (!(sliderTheme !== null)) dart.assertFailed(null, I[35], 2152, 12, "sliderTheme != null");
      if (!(sliderTheme.trackHeight != null)) dart.assertFailed(null, I[35], 2153, 12, "sliderTheme.trackHeight != null");
      if (!(isEnabled !== null)) dart.assertFailed(null, I[35], 2154, 12, "isEnabled != null");
      return new ui.Size.fromRadius((t26 = this.tickMarkRadius, t26 == null ? dart.nullCheck(sliderTheme.trackHeight) / 4 : t26));
    }
    paint(context, center, opts) {
      let t26;
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      let startThumbCenter = opts && 'startThumbCenter' in opts ? opts.startThumbCenter : null;
      let endThumbCenter = opts && 'endThumbCenter' in opts ? opts.endThumbCenter : null;
      let isEnabled = opts && 'isEnabled' in opts ? opts.isEnabled : false;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      if (!(context !== null)) dart.assertFailed(null, I[35], 2170, 12, "context != null");
      if (!(center !== null)) dart.assertFailed(null, I[35], 2171, 12, "center != null");
      if (!(parentBox !== null)) dart.assertFailed(null, I[35], 2172, 12, "parentBox != null");
      if (!(sliderTheme !== null)) dart.assertFailed(null, I[35], 2173, 12, "sliderTheme != null");
      if (!(sliderTheme.disabledActiveTickMarkColor != null)) dart.assertFailed(null, I[35], 2174, 12, "sliderTheme.disabledActiveTickMarkColor != null");
      if (!(sliderTheme.disabledInactiveTickMarkColor != null)) dart.assertFailed(null, I[35], 2175, 12, "sliderTheme.disabledInactiveTickMarkColor != null");
      if (!(sliderTheme.activeTickMarkColor != null)) dart.assertFailed(null, I[35], 2176, 12, "sliderTheme.activeTickMarkColor != null");
      if (!(sliderTheme.inactiveTickMarkColor != null)) dart.assertFailed(null, I[35], 2177, 12, "sliderTheme.inactiveTickMarkColor != null");
      if (!(enableAnimation !== null)) dart.assertFailed(null, I[35], 2178, 12, "enableAnimation != null");
      if (!(startThumbCenter !== null)) dart.assertFailed(null, I[35], 2179, 12, "startThumbCenter != null");
      if (!(endThumbCenter !== null)) dart.assertFailed(null, I[35], 2180, 12, "endThumbCenter != null");
      if (!(isEnabled !== null)) dart.assertFailed(null, I[35], 2181, 12, "isEnabled != null");
      if (!(textDirection !== null)) dart.assertFailed(null, I[35], 2182, 12, "textDirection != null");
      let isBetweenThumbs = null;
      switch (textDirection) {
        case C[155] || CT.C155:
          {
            isBetweenThumbs = startThumbCenter.dx < center.dx && center.dx < endThumbCenter.dx;
            break;
          }
        case C[154] || CT.C154:
          {
            isBetweenThumbs = endThumbCenter.dx < center.dx && center.dx < startThumbCenter.dx;
            break;
          }
      }
      let begin = isBetweenThumbs ? sliderTheme.disabledActiveTickMarkColor : sliderTheme.disabledInactiveTickMarkColor;
      let end = isBetweenThumbs ? sliderTheme.activeTickMarkColor : sliderTheme.inactiveTickMarkColor;
      let paint = (t26 = ui.Paint.new(), (() => {
        t26.color = dart.nullCheck(new tween.ColorTween.new({begin: begin, end: end}).evaluate(enableAnimation));
        return t26;
      })());
      let tickMarkRadius = this.getPreferredSize({isEnabled: isEnabled, sliderTheme: sliderTheme}).width / 2;
      if (tickMarkRadius > 0) {
        context.canvas.drawCircle(center, tickMarkRadius, paint);
      }
    }
  };
  (slider_theme.RoundRangeSliderTickMarkShape.new = function(opts) {
    let tickMarkRadius = opts && 'tickMarkRadius' in opts ? opts.tickMarkRadius : null;
    this[S.tickMarkRadius$1] = tickMarkRadius;
    slider_theme.RoundRangeSliderTickMarkShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme.RoundRangeSliderTickMarkShape.prototype;
  dart.addTypeTests(slider_theme.RoundRangeSliderTickMarkShape);
  dart.addTypeCaches(slider_theme.RoundRangeSliderTickMarkShape);
  dart.setMethodSignature(slider_theme.RoundRangeSliderTickMarkShape, () => ({
    __proto__: dart.getMethods(slider_theme.RoundRangeSliderTickMarkShape.__proto__),
    getPreferredSize: dart.fnType(ui.Size, [], {isEnabled: core.bool}, {sliderTheme: slider_theme.SliderThemeData}),
    paint: dart.fnType(dart.void, [object.PaintingContext, ui.Offset], {isEnabled: core.bool}, {enableAnimation: animation$.Animation$(core.double), endThumbCenter: ui.Offset, parentBox: box$.RenderBox, sliderTheme: slider_theme.SliderThemeData, startThumbCenter: ui.Offset, textDirection: ui.TextDirection})
  }));
  dart.setLibraryUri(slider_theme.RoundRangeSliderTickMarkShape, I[36]);
  dart.setFieldSignature(slider_theme.RoundRangeSliderTickMarkShape, () => ({
    __proto__: dart.getFields(slider_theme.RoundRangeSliderTickMarkShape.__proto__),
    tickMarkRadius: dart.finalFieldType(dart.nullable(core.double))
  }));
  slider_theme._EmptySliderTickMarkShape = class _EmptySliderTickMarkShape extends slider_theme.SliderTickMarkShape {
    getPreferredSize(opts) {
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      let isEnabled = opts && 'isEnabled' in opts ? opts.isEnabled : null;
      return ui.Size.zero;
    }
    paint(context, center, opts) {
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      let thumbCenter = opts && 'thumbCenter' in opts ? opts.thumbCenter : null;
      let isEnabled = opts && 'isEnabled' in opts ? opts.isEnabled : null;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    }
    static ['_#new#tearOff']() {
      return new slider_theme._EmptySliderTickMarkShape.new();
    }
  };
  (slider_theme._EmptySliderTickMarkShape.new = function() {
    slider_theme._EmptySliderTickMarkShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme._EmptySliderTickMarkShape.prototype;
  dart.addTypeTests(slider_theme._EmptySliderTickMarkShape);
  dart.addTypeCaches(slider_theme._EmptySliderTickMarkShape);
  dart.setMethodSignature(slider_theme._EmptySliderTickMarkShape, () => ({
    __proto__: dart.getMethods(slider_theme._EmptySliderTickMarkShape.__proto__),
    getPreferredSize: dart.fnType(ui.Size, [], {}, {isEnabled: core.bool, sliderTheme: slider_theme.SliderThemeData}),
    paint: dart.fnType(dart.void, [object.PaintingContext, ui.Offset], {}, {enableAnimation: animation$.Animation$(core.double), isEnabled: core.bool, parentBox: box$.RenderBox, sliderTheme: slider_theme.SliderThemeData, textDirection: ui.TextDirection, thumbCenter: ui.Offset})
  }));
  dart.setLibraryUri(slider_theme._EmptySliderTickMarkShape, I[36]);
  slider_theme._EmptySliderComponentShape = class _EmptySliderComponentShape extends slider_theme.SliderComponentShape {
    getPreferredSize(isEnabled, isDiscrete) {
      return ui.Size.zero;
    }
    paint(context, center, opts) {
      let activationAnimation = opts && 'activationAnimation' in opts ? opts.activationAnimation : null;
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : null;
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      let sizeWithOverflow = opts && 'sizeWithOverflow' in opts ? opts.sizeWithOverflow : null;
    }
    static ['_#new#tearOff']() {
      return new slider_theme._EmptySliderComponentShape.new();
    }
  };
  (slider_theme._EmptySliderComponentShape.new = function() {
    slider_theme._EmptySliderComponentShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme._EmptySliderComponentShape.prototype;
  dart.addTypeTests(slider_theme._EmptySliderComponentShape);
  dart.addTypeCaches(slider_theme._EmptySliderComponentShape);
  dart.setMethodSignature(slider_theme._EmptySliderComponentShape, () => ({
    __proto__: dart.getMethods(slider_theme._EmptySliderComponentShape.__proto__),
    getPreferredSize: dart.fnType(ui.Size, [core.bool, core.bool]),
    paint: dart.fnType(dart.void, [object.PaintingContext, ui.Offset], {}, {activationAnimation: animation$.Animation$(core.double), enableAnimation: animation$.Animation$(core.double), isDiscrete: core.bool, labelPainter: text_painter.TextPainter, parentBox: box$.RenderBox, sizeWithOverflow: ui.Size, sliderTheme: slider_theme.SliderThemeData, textDirection: ui.TextDirection, textScaleFactor: core.double, value: core.double})
  }));
  dart.setLibraryUri(slider_theme._EmptySliderComponentShape, I[36]);
  slider_theme.RoundSliderThumbShape = class RoundSliderThumbShape extends slider_theme.SliderComponentShape {
    get enabledThumbRadius() {
      return this[S.enabledThumbRadius];
    }
    set enabledThumbRadius(value) {
      super.enabledThumbRadius = value;
    }
    get disabledThumbRadius() {
      return this[S.disabledThumbRadius];
    }
    set disabledThumbRadius(value) {
      super.disabledThumbRadius = value;
    }
    get elevation() {
      return this[S.elevation$4];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get pressedElevation() {
      return this[S.pressedElevation];
    }
    set pressedElevation(value) {
      super.pressedElevation = value;
    }
    static ['_#new#tearOff'](opts) {
      let enabledThumbRadius = opts && 'enabledThumbRadius' in opts ? opts.enabledThumbRadius : 10;
      let disabledThumbRadius = opts && 'disabledThumbRadius' in opts ? opts.disabledThumbRadius : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : 1;
      let pressedElevation = opts && 'pressedElevation' in opts ? opts.pressedElevation : 6;
      return new slider_theme.RoundSliderThumbShape.new({enabledThumbRadius: enabledThumbRadius, disabledThumbRadius: disabledThumbRadius, elevation: elevation, pressedElevation: pressedElevation});
    }
    get [S._disabledThumbRadius]() {
      let t26;
      t26 = this.disabledThumbRadius;
      return t26 == null ? this.enabledThumbRadius : t26;
    }
    getPreferredSize(isEnabled, isDiscrete) {
      return new ui.Size.fromRadius(isEnabled === true ? this.enabledThumbRadius : this[S._disabledThumbRadius]);
    }
    paint(context, center, opts) {
      let t26, t26$;
      let activationAnimation = opts && 'activationAnimation' in opts ? opts.activationAnimation : null;
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : null;
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      let sizeWithOverflow = opts && 'sizeWithOverflow' in opts ? opts.sizeWithOverflow : null;
      if (!(context !== null)) dart.assertFailed(null, I[35], 2341, 12, "context != null");
      if (!(center !== null)) dart.assertFailed(null, I[35], 2342, 12, "center != null");
      if (!(enableAnimation !== null)) dart.assertFailed(null, I[35], 2343, 12, "enableAnimation != null");
      if (!(sliderTheme !== null)) dart.assertFailed(null, I[35], 2344, 12, "sliderTheme != null");
      if (!(sliderTheme.disabledThumbColor != null)) dart.assertFailed(null, I[35], 2345, 12, "sliderTheme.disabledThumbColor != null");
      if (!(sliderTheme.thumbColor != null)) dart.assertFailed(null, I[35], 2346, 12, "sliderTheme.thumbColor != null");
      let canvas = context.canvas;
      let radiusTween = new (T$.TweenOfdouble()).new({begin: this[S._disabledThumbRadius], end: this.enabledThumbRadius});
      let colorTween = new tween.ColorTween.new({begin: sliderTheme.disabledThumbColor, end: sliderTheme.thumbColor});
      let color = dart.nullCheck(colorTween.evaluate(enableAnimation));
      let radius = radiusTween.evaluate(enableAnimation);
      let elevationTween = new (T$.TweenOfdouble()).new({begin: this.elevation, end: this.pressedElevation});
      let evaluatedElevation = elevationTween.evaluate(activationAnimation);
      let path = (t26 = ui.Path.new(), (() => {
        t26.addArc(new ui.Rect.fromCenter({center: center, width: 2 * radius, height: 2 * radius}), 0.0, 3.141592653589793 * 2);
        return t26;
      })());
      let paintShadows = true;
      if (!dart.fn(() => {
        if (debug$0.debugDisableShadows) {
          slider_theme._debugDrawShadow(canvas, path, evaluatedElevation);
          paintShadows = false;
        }
        return true;
      }, T$.VoidTobool())()) dart.assertFailed(null, I[35], 2371, 12, "() {\n      if (debugDisableShadows) {\n        _debugDrawShadow(canvas, path, evaluatedElevation);\n        paintShadows = false;\n      }\n      return true;\n    }()");
      if (paintShadows) {
        canvas.drawShadow(path, colors$.Colors.black, evaluatedElevation, true);
      }
      canvas.drawCircle(center, radius, (t26$ = ui.Paint.new(), (() => {
        t26$.color = color;
        return t26$;
      })()));
    }
  };
  (slider_theme.RoundSliderThumbShape.new = function(opts) {
    let enabledThumbRadius = opts && 'enabledThumbRadius' in opts ? opts.enabledThumbRadius : 10;
    let disabledThumbRadius = opts && 'disabledThumbRadius' in opts ? opts.disabledThumbRadius : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : 1;
    let pressedElevation = opts && 'pressedElevation' in opts ? opts.pressedElevation : 6;
    this[S.enabledThumbRadius] = enabledThumbRadius;
    this[S.disabledThumbRadius] = disabledThumbRadius;
    this[S.elevation$4] = elevation;
    this[S.pressedElevation] = pressedElevation;
    slider_theme.RoundSliderThumbShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme.RoundSliderThumbShape.prototype;
  dart.addTypeTests(slider_theme.RoundSliderThumbShape);
  dart.addTypeCaches(slider_theme.RoundSliderThumbShape);
  dart.setMethodSignature(slider_theme.RoundSliderThumbShape, () => ({
    __proto__: dart.getMethods(slider_theme.RoundSliderThumbShape.__proto__),
    getPreferredSize: dart.fnType(ui.Size, [core.bool, core.bool]),
    paint: dart.fnType(dart.void, [object.PaintingContext, ui.Offset], {}, {activationAnimation: animation$.Animation$(core.double), enableAnimation: animation$.Animation$(core.double), isDiscrete: core.bool, labelPainter: text_painter.TextPainter, parentBox: box$.RenderBox, sizeWithOverflow: ui.Size, sliderTheme: slider_theme.SliderThemeData, textDirection: ui.TextDirection, textScaleFactor: core.double, value: core.double})
  }));
  dart.setGetterSignature(slider_theme.RoundSliderThumbShape, () => ({
    __proto__: dart.getGetters(slider_theme.RoundSliderThumbShape.__proto__),
    [S._disabledThumbRadius]: core.double
  }));
  dart.setLibraryUri(slider_theme.RoundSliderThumbShape, I[36]);
  dart.setFieldSignature(slider_theme.RoundSliderThumbShape, () => ({
    __proto__: dart.getFields(slider_theme.RoundSliderThumbShape.__proto__),
    enabledThumbRadius: dart.finalFieldType(core.double),
    disabledThumbRadius: dart.finalFieldType(dart.nullable(core.double)),
    elevation: dart.finalFieldType(core.double),
    pressedElevation: dart.finalFieldType(core.double)
  }));
  slider_theme.RoundRangeSliderThumbShape = class RoundRangeSliderThumbShape extends slider_theme.RangeSliderThumbShape {
    get enabledThumbRadius() {
      return this[S.enabledThumbRadius$1];
    }
    set enabledThumbRadius(value) {
      super.enabledThumbRadius = value;
    }
    get disabledThumbRadius() {
      return this[S.disabledThumbRadius$1];
    }
    set disabledThumbRadius(value) {
      super.disabledThumbRadius = value;
    }
    get elevation() {
      return this[S.elevation$5];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get pressedElevation() {
      return this[S.pressedElevation$1];
    }
    set pressedElevation(value) {
      super.pressedElevation = value;
    }
    static ['_#new#tearOff'](opts) {
      let enabledThumbRadius = opts && 'enabledThumbRadius' in opts ? opts.enabledThumbRadius : 10;
      let disabledThumbRadius = opts && 'disabledThumbRadius' in opts ? opts.disabledThumbRadius : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : 1;
      let pressedElevation = opts && 'pressedElevation' in opts ? opts.pressedElevation : 6;
      return new slider_theme.RoundRangeSliderThumbShape.new({enabledThumbRadius: enabledThumbRadius, disabledThumbRadius: disabledThumbRadius, elevation: elevation, pressedElevation: pressedElevation});
    }
    get [S._disabledThumbRadius]() {
      let t26;
      t26 = this.disabledThumbRadius;
      return t26 == null ? this.enabledThumbRadius : t26;
    }
    getPreferredSize(isEnabled, isDiscrete) {
      return new ui.Size.fromRadius(isEnabled === true ? this.enabledThumbRadius : this[S._disabledThumbRadius]);
    }
    paint(context, center, opts) {
      let t26, t26$, t26$0, t26$1;
      let activationAnimation = opts && 'activationAnimation' in opts ? opts.activationAnimation : null;
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : false;
      let isEnabled = opts && 'isEnabled' in opts ? opts.isEnabled : false;
      let isOnTop = opts && 'isOnTop' in opts ? opts.isOnTop : null;
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      let thumb = opts && 'thumb' in opts ? opts.thumb : null;
      let isPressed = opts && 'isPressed' in opts ? opts.isPressed : null;
      if (!(context !== null)) dart.assertFailed(null, I[35], 2453, 12, "context != null");
      if (!(center !== null)) dart.assertFailed(null, I[35], 2454, 12, "center != null");
      if (!(activationAnimation !== null)) dart.assertFailed(null, I[35], 2455, 12, "activationAnimation != null");
      if (!(sliderTheme !== null)) dart.assertFailed(null, I[35], 2456, 12, "sliderTheme != null");
      if (!(sliderTheme.showValueIndicator != null)) dart.assertFailed(null, I[35], 2457, 12, "sliderTheme.showValueIndicator != null");
      if (!(sliderTheme.overlappingShapeStrokeColor != null)) dart.assertFailed(null, I[35], 2458, 12, "sliderTheme.overlappingShapeStrokeColor != null");
      if (!(enableAnimation !== null)) dart.assertFailed(null, I[35], 2459, 12, "enableAnimation != null");
      let canvas = context.canvas;
      let radiusTween = new (T$.TweenOfdouble()).new({begin: this[S._disabledThumbRadius], end: this.enabledThumbRadius});
      let colorTween = new tween.ColorTween.new({begin: sliderTheme.disabledThumbColor, end: sliderTheme.thumbColor});
      let radius = radiusTween.evaluate(enableAnimation);
      let elevationTween = new (T$.TweenOfdouble()).new({begin: this.elevation, end: this.pressedElevation});
      if (dart.test((t26 = isOnTop, t26 == null ? false : t26))) {
        let strokePaint = (t26$ = ui.Paint.new(), (() => {
          t26$.color = dart.nullCheck(sliderTheme.overlappingShapeStrokeColor);
          t26$.strokeWidth = 1.0;
          t26$.style = ui.PaintingStyle.stroke;
          return t26$;
        })());
        canvas.drawCircle(center, radius, strokePaint);
      }
      let color = dart.nullCheck(colorTween.evaluate(enableAnimation));
      let evaluatedElevation = dart.nullCheck(isPressed) ? elevationTween.evaluate(activationAnimation) : this.elevation;
      let shadowPath = (t26$0 = ui.Path.new(), (() => {
        t26$0.addArc(new ui.Rect.fromCenter({center: center, width: 2 * radius, height: 2 * radius}), 0.0, 3.141592653589793 * 2);
        return t26$0;
      })());
      let paintShadows = true;
      if (!dart.fn(() => {
        if (debug$0.debugDisableShadows) {
          slider_theme._debugDrawShadow(canvas, shadowPath, evaluatedElevation);
          paintShadows = false;
        }
        return true;
      }, T$.VoidTobool())()) dart.assertFailed(null, I[35], 2492, 12, "() {\n      if (debugDisableShadows) {\n        _debugDrawShadow(canvas, shadowPath, evaluatedElevation);\n        paintShadows = false;\n      }\n      return true;\n    }()");
      if (paintShadows) {
        canvas.drawShadow(shadowPath, colors$.Colors.black, evaluatedElevation, true);
      }
      canvas.drawCircle(center, radius, (t26$1 = ui.Paint.new(), (() => {
        t26$1.color = color;
        return t26$1;
      })()));
    }
  };
  (slider_theme.RoundRangeSliderThumbShape.new = function(opts) {
    let enabledThumbRadius = opts && 'enabledThumbRadius' in opts ? opts.enabledThumbRadius : 10;
    let disabledThumbRadius = opts && 'disabledThumbRadius' in opts ? opts.disabledThumbRadius : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : 1;
    let pressedElevation = opts && 'pressedElevation' in opts ? opts.pressedElevation : 6;
    this[S.enabledThumbRadius$1] = enabledThumbRadius;
    this[S.disabledThumbRadius$1] = disabledThumbRadius;
    this[S.elevation$5] = elevation;
    this[S.pressedElevation$1] = pressedElevation;
    if (!(enabledThumbRadius !== null)) dart.assertFailed(null, I[35], 2410, 15, "enabledThumbRadius != null");
    slider_theme.RoundRangeSliderThumbShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme.RoundRangeSliderThumbShape.prototype;
  dart.addTypeTests(slider_theme.RoundRangeSliderThumbShape);
  dart.addTypeCaches(slider_theme.RoundRangeSliderThumbShape);
  dart.setMethodSignature(slider_theme.RoundRangeSliderThumbShape, () => ({
    __proto__: dart.getMethods(slider_theme.RoundRangeSliderThumbShape.__proto__),
    getPreferredSize: dart.fnType(ui.Size, [core.bool, core.bool]),
    paint: dart.fnType(dart.void, [object.PaintingContext, ui.Offset], {isDiscrete: core.bool, isEnabled: core.bool, isOnTop: dart.nullable(core.bool), isPressed: dart.nullable(core.bool), textDirection: dart.nullable(ui.TextDirection), thumb: dart.nullable(slider_theme.Thumb)}, {activationAnimation: animation$.Animation$(core.double), enableAnimation: animation$.Animation$(core.double), sliderTheme: slider_theme.SliderThemeData})
  }));
  dart.setGetterSignature(slider_theme.RoundRangeSliderThumbShape, () => ({
    __proto__: dart.getGetters(slider_theme.RoundRangeSliderThumbShape.__proto__),
    [S._disabledThumbRadius]: core.double
  }));
  dart.setLibraryUri(slider_theme.RoundRangeSliderThumbShape, I[36]);
  dart.setFieldSignature(slider_theme.RoundRangeSliderThumbShape, () => ({
    __proto__: dart.getFields(slider_theme.RoundRangeSliderThumbShape.__proto__),
    enabledThumbRadius: dart.finalFieldType(core.double),
    disabledThumbRadius: dart.finalFieldType(dart.nullable(core.double)),
    elevation: dart.finalFieldType(core.double),
    pressedElevation: dart.finalFieldType(core.double)
  }));
  slider_theme.RoundSliderOverlayShape = class RoundSliderOverlayShape extends slider_theme.SliderComponentShape {
    get overlayRadius() {
      return this[S.overlayRadius];
    }
    set overlayRadius(value) {
      super.overlayRadius = value;
    }
    static ['_#new#tearOff'](opts) {
      let overlayRadius = opts && 'overlayRadius' in opts ? opts.overlayRadius : 24;
      return new slider_theme.RoundSliderOverlayShape.new({overlayRadius: overlayRadius});
    }
    getPreferredSize(isEnabled, isDiscrete) {
      return new ui.Size.fromRadius(this.overlayRadius);
    }
    paint(context, center, opts) {
      let t26;
      let activationAnimation = opts && 'activationAnimation' in opts ? opts.activationAnimation : null;
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : null;
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      let sizeWithOverflow = opts && 'sizeWithOverflow' in opts ? opts.sizeWithOverflow : null;
      if (!(context !== null)) dart.assertFailed(null, I[35], 2557, 12, "context != null");
      if (!(center !== null)) dart.assertFailed(null, I[35], 2558, 12, "center != null");
      if (!(activationAnimation !== null)) dart.assertFailed(null, I[35], 2559, 12, "activationAnimation != null");
      if (!(enableAnimation !== null)) dart.assertFailed(null, I[35], 2560, 12, "enableAnimation != null");
      if (!(labelPainter !== null)) dart.assertFailed(null, I[35], 2561, 12, "labelPainter != null");
      if (!(parentBox !== null)) dart.assertFailed(null, I[35], 2562, 12, "parentBox != null");
      if (!(sliderTheme !== null)) dart.assertFailed(null, I[35], 2563, 12, "sliderTheme != null");
      if (!(textDirection !== null)) dart.assertFailed(null, I[35], 2564, 12, "textDirection != null");
      if (!(value !== null)) dart.assertFailed(null, I[35], 2565, 12, "value != null");
      let canvas = context.canvas;
      let radiusTween = new (T$.TweenOfdouble()).new({begin: 0.0, end: this.overlayRadius});
      canvas.drawCircle(center, radiusTween.evaluate(activationAnimation), (t26 = ui.Paint.new(), (() => {
        t26.color = dart.nullCheck(sliderTheme.overlayColor);
        return t26;
      })()));
    }
  };
  (slider_theme.RoundSliderOverlayShape.new = function(opts) {
    let overlayRadius = opts && 'overlayRadius' in opts ? opts.overlayRadius : 24;
    this[S.overlayRadius] = overlayRadius;
    slider_theme.RoundSliderOverlayShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme.RoundSliderOverlayShape.prototype;
  dart.addTypeTests(slider_theme.RoundSliderOverlayShape);
  dart.addTypeCaches(slider_theme.RoundSliderOverlayShape);
  dart.setMethodSignature(slider_theme.RoundSliderOverlayShape, () => ({
    __proto__: dart.getMethods(slider_theme.RoundSliderOverlayShape.__proto__),
    getPreferredSize: dart.fnType(ui.Size, [core.bool, core.bool]),
    paint: dart.fnType(dart.void, [object.PaintingContext, ui.Offset], {}, {activationAnimation: animation$.Animation$(core.double), enableAnimation: animation$.Animation$(core.double), isDiscrete: core.bool, labelPainter: text_painter.TextPainter, parentBox: box$.RenderBox, sizeWithOverflow: ui.Size, sliderTheme: slider_theme.SliderThemeData, textDirection: ui.TextDirection, textScaleFactor: core.double, value: core.double})
  }));
  dart.setLibraryUri(slider_theme.RoundSliderOverlayShape, I[36]);
  dart.setFieldSignature(slider_theme.RoundSliderOverlayShape, () => ({
    __proto__: dart.getFields(slider_theme.RoundSliderOverlayShape.__proto__),
    overlayRadius: dart.finalFieldType(core.double)
  }));
  slider_theme.RectangularSliderValueIndicatorShape = class RectangularSliderValueIndicatorShape extends slider_theme.SliderComponentShape {
    static ['_#new#tearOff']() {
      return new slider_theme.RectangularSliderValueIndicatorShape.new();
    }
    getPreferredSize(isEnabled, isDiscrete, opts) {
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      if (!(labelPainter != null)) dart.assertFailed(null, I[35], 2604, 12, "labelPainter != null");
      if (!(textScaleFactor != null && dart.notNull(textScaleFactor) >= 0)) dart.assertFailed(null, I[35], 2605, 12, "textScaleFactor != null && textScaleFactor >= 0");
      return slider_theme.RectangularSliderValueIndicatorShape._pathPainter.getPreferredSize(dart.nullCheck(labelPainter), dart.nullCheck(textScaleFactor));
    }
    paint(context, center, opts) {
      let activationAnimation = opts && 'activationAnimation' in opts ? opts.activationAnimation : null;
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : null;
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      let sizeWithOverflow = opts && 'sizeWithOverflow' in opts ? opts.sizeWithOverflow : null;
      let canvas = context.canvas;
      let scale = activationAnimation.value;
      slider_theme.RectangularSliderValueIndicatorShape._pathPainter.paint({parentBox: parentBox, canvas: canvas, center: center, scale: scale, labelPainter: labelPainter, textScaleFactor: textScaleFactor, sizeWithOverflow: sizeWithOverflow, backgroundPaintColor: dart.nullCheck(sliderTheme.valueIndicatorColor)});
    }
  };
  (slider_theme.RectangularSliderValueIndicatorShape.new = function() {
    slider_theme.RectangularSliderValueIndicatorShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme.RectangularSliderValueIndicatorShape.prototype;
  dart.addTypeTests(slider_theme.RectangularSliderValueIndicatorShape);
  dart.addTypeCaches(slider_theme.RectangularSliderValueIndicatorShape);
  dart.setMethodSignature(slider_theme.RectangularSliderValueIndicatorShape, () => ({
    __proto__: dart.getMethods(slider_theme.RectangularSliderValueIndicatorShape.__proto__),
    getPreferredSize: dart.fnType(ui.Size, [core.bool, core.bool], {labelPainter: dart.nullable(text_painter.TextPainter), textScaleFactor: dart.nullable(core.double)}, {}),
    paint: dart.fnType(dart.void, [object.PaintingContext, ui.Offset], {}, {activationAnimation: animation$.Animation$(core.double), enableAnimation: animation$.Animation$(core.double), isDiscrete: core.bool, labelPainter: text_painter.TextPainter, parentBox: box$.RenderBox, sizeWithOverflow: ui.Size, sliderTheme: slider_theme.SliderThemeData, textDirection: ui.TextDirection, textScaleFactor: core.double, value: core.double})
  }));
  dart.setLibraryUri(slider_theme.RectangularSliderValueIndicatorShape, I[36]);
  dart.setStaticFieldSignature(slider_theme.RectangularSliderValueIndicatorShape, () => ['_pathPainter']);
  dart.defineLazy(slider_theme.RectangularSliderValueIndicatorShape, {
    /*slider_theme.RectangularSliderValueIndicatorShape._pathPainter*/get _pathPainter() {
      return C[312] || CT.C312;
    }
  }, false);
  slider_theme.RectangularRangeSliderValueIndicatorShape = class RectangularRangeSliderValueIndicatorShape extends slider_theme.RangeSliderValueIndicatorShape {
    static ['_#new#tearOff']() {
      return new slider_theme.RectangularRangeSliderValueIndicatorShape.new();
    }
    getPreferredSize(isEnabled, isDiscrete, opts) {
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      if (!(labelPainter !== null)) dart.assertFailed(null, I[35], 2663, 12, "labelPainter != null");
      if (!(textScaleFactor !== null && textScaleFactor >= 0)) dart.assertFailed(null, I[35], 2664, 12, "textScaleFactor != null && textScaleFactor >= 0");
      return slider_theme.RectangularRangeSliderValueIndicatorShape._pathPainter.getPreferredSize(labelPainter, textScaleFactor);
    }
    getHorizontalShift(opts) {
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      let center = opts && 'center' in opts ? opts.center : null;
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      let activationAnimation = opts && 'activationAnimation' in opts ? opts.activationAnimation : null;
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      let sizeWithOverflow = opts && 'sizeWithOverflow' in opts ? opts.sizeWithOverflow : null;
      return slider_theme.RectangularRangeSliderValueIndicatorShape._pathPainter.getHorizontalShift({parentBox: dart.nullCheck(parentBox), center: dart.nullCheck(center), labelPainter: dart.nullCheck(labelPainter), textScaleFactor: dart.nullCheck(textScaleFactor), sizeWithOverflow: dart.nullCheck(sizeWithOverflow), scale: dart.nullCheck(activationAnimation).value});
    }
    paint(context, center, opts) {
      let activationAnimation = opts && 'activationAnimation' in opts ? opts.activationAnimation : null;
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : null;
      let isOnTop = opts && 'isOnTop' in opts ? opts.isOnTop : null;
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      let sizeWithOverflow = opts && 'sizeWithOverflow' in opts ? opts.sizeWithOverflow : null;
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let thumb = opts && 'thumb' in opts ? opts.thumb : null;
      let canvas = context.canvas;
      let scale = dart.nullCheck(activationAnimation).value;
      slider_theme.RectangularRangeSliderValueIndicatorShape._pathPainter.paint({parentBox: dart.nullCheck(parentBox), canvas: canvas, center: center, scale: scale, labelPainter: dart.nullCheck(labelPainter), textScaleFactor: dart.nullCheck(textScaleFactor), sizeWithOverflow: dart.nullCheck(sizeWithOverflow), backgroundPaintColor: dart.nullCheck(dart.nullCheck(sliderTheme).valueIndicatorColor), strokePaintColor: dart.nullCheck(isOnTop) ? sliderTheme.overlappingShapeStrokeColor : null});
    }
  };
  (slider_theme.RectangularRangeSliderValueIndicatorShape.new = function() {
    slider_theme.RectangularRangeSliderValueIndicatorShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme.RectangularRangeSliderValueIndicatorShape.prototype;
  dart.addTypeTests(slider_theme.RectangularRangeSliderValueIndicatorShape);
  dart.addTypeCaches(slider_theme.RectangularRangeSliderValueIndicatorShape);
  dart.setMethodSignature(slider_theme.RectangularRangeSliderValueIndicatorShape, () => ({
    __proto__: dart.getMethods(slider_theme.RectangularRangeSliderValueIndicatorShape.__proto__),
    getPreferredSize: dart.fnType(ui.Size, [core.bool, core.bool], {}, {labelPainter: text_painter.TextPainter, textScaleFactor: core.double}),
    paint: dart.fnType(dart.void, [object.PaintingContext, ui.Offset], {activationAnimation: dart.nullable(animation$.Animation$(core.double)), enableAnimation: dart.nullable(animation$.Animation$(core.double)), isDiscrete: dart.nullable(core.bool), isOnTop: dart.nullable(core.bool), labelPainter: dart.nullable(text_painter.TextPainter), parentBox: dart.nullable(box$.RenderBox), sizeWithOverflow: dart.nullable(ui.Size), sliderTheme: dart.nullable(slider_theme.SliderThemeData), textDirection: dart.nullable(ui.TextDirection), textScaleFactor: dart.nullable(core.double), thumb: dart.nullable(slider_theme.Thumb), value: dart.nullable(core.double)}, {})
  }));
  dart.setLibraryUri(slider_theme.RectangularRangeSliderValueIndicatorShape, I[36]);
  dart.setStaticFieldSignature(slider_theme.RectangularRangeSliderValueIndicatorShape, () => ['_pathPainter']);
  dart.defineLazy(slider_theme.RectangularRangeSliderValueIndicatorShape, {
    /*slider_theme.RectangularRangeSliderValueIndicatorShape._pathPainter*/get _pathPainter() {
      return C[312] || CT.C312;
    }
  }, false);
  slider_theme._RectangularSliderValueIndicatorPathPainter = class _RectangularSliderValueIndicatorPathPainter extends core.Object {
    static ['_#new#tearOff']() {
      return new slider_theme._RectangularSliderValueIndicatorPathPainter.new();
    }
    getPreferredSize(labelPainter, textScaleFactor) {
      if (!(labelPainter !== null)) dart.assertFailed(null, I[35], 2735, 12, "labelPainter != null");
      return new ui.Size.new(this[S._upperRectangleWidth](labelPainter, 1.0, textScaleFactor), labelPainter.height + 16);
    }
    getHorizontalShift(opts) {
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      let center = opts && 'center' in opts ? opts.center : null;
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      let sizeWithOverflow = opts && 'sizeWithOverflow' in opts ? opts.sizeWithOverflow : null;
      let scale = opts && 'scale' in opts ? opts.scale : null;
      if (!!sizeWithOverflow.isEmpty) dart.assertFailed(null, I[35], 2750, 12, "!sizeWithOverflow.isEmpty");
      let rectangleWidth = this[S._upperRectangleWidth](labelPainter, scale, textScaleFactor);
      let globalCenter = parentBox.localToGlobal(center);
      let overflowLeft = math.max(core.double, 0.0, rectangleWidth / 2 - globalCenter.dx + 8);
      let overflowRight = math.max(core.double, 0.0, rectangleWidth / 2 - (sizeWithOverflow.width - globalCenter.dx - 8));
      if (rectangleWidth < sizeWithOverflow.width) {
        return overflowLeft - overflowRight;
      } else if (overflowLeft - overflowRight > 0) {
        return overflowLeft - 8 * textScaleFactor;
      } else {
        return -overflowRight + 8 * textScaleFactor;
      }
    }
    [S._upperRectangleWidth](labelPainter, scale, textScaleFactor) {
      let unscaledWidth = math.max(core.double, 16 * textScaleFactor, labelPainter.width) + 16 * 2;
      return unscaledWidth * scale;
    }
    paint(opts) {
      let t26, t26$, t26$0;
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      let canvas = opts && 'canvas' in opts ? opts.canvas : null;
      let center = opts && 'center' in opts ? opts.center : null;
      let scale = opts && 'scale' in opts ? opts.scale : null;
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      let sizeWithOverflow = opts && 'sizeWithOverflow' in opts ? opts.sizeWithOverflow : null;
      let backgroundPaintColor = opts && 'backgroundPaintColor' in opts ? opts.backgroundPaintColor : null;
      let strokePaintColor = opts && 'strokePaintColor' in opts ? opts.strokePaintColor : null;
      if (scale === 0.0) {
        return;
      }
      if (!!sizeWithOverflow.isEmpty) dart.assertFailed(null, I[35], 2794, 12, "!sizeWithOverflow.isEmpty");
      let rectangleWidth = this[S._upperRectangleWidth](labelPainter, scale, textScaleFactor);
      let horizontalShift = this.getHorizontalShift({parentBox: parentBox, center: center, labelPainter: labelPainter, textScaleFactor: textScaleFactor, sizeWithOverflow: sizeWithOverflow, scale: scale});
      let rectHeight = labelPainter.height + 16;
      let upperRect = new ui.Rect.fromLTWH(-rectangleWidth / 2 + horizontalShift, -8 - rectHeight, rectangleWidth, rectHeight);
      let trianglePath = (t26 = ui.Path.new(), (() => {
        t26.lineTo(-8, -8);
        t26.lineTo(8, -8);
        t26.close();
        return t26;
      })());
      let fillPaint = (t26$ = ui.Paint.new(), (() => {
        t26$.color = backgroundPaintColor;
        return t26$;
      })());
      let upperRRect = new ui.RRect.fromRectAndRadius(upperRect, C[77] || CT.C77);
      trianglePath.addRRect(upperRRect);
      canvas.save();
      canvas.translate(center.dx, center.dy - 14);
      canvas.scale(scale, scale);
      if (strokePaintColor != null) {
        let strokePaint = (t26$0 = ui.Paint.new(), (() => {
          t26$0.color = strokePaintColor;
          t26$0.strokeWidth = 1.0;
          t26$0.style = ui.PaintingStyle.stroke;
          return t26$0;
        })());
        canvas.drawPath(trianglePath, strokePaint);
      }
      canvas.drawPath(trianglePath, fillPaint);
      let bottomTipToUpperRectTranslateY = -16 / 2 - upperRect.height;
      canvas.translate(0.0, bottomTipToUpperRectTranslateY);
      let boxCenter = new ui.Offset.new(horizontalShift, upperRect.height / 2);
      let halfLabelPainterOffset = new ui.Offset.new(labelPainter.width / 2, labelPainter.height / 2);
      let labelOffset = boxCenter['-'](halfLabelPainterOffset);
      labelPainter.paint(canvas, labelOffset);
      canvas.restore();
    }
  };
  (slider_theme._RectangularSliderValueIndicatorPathPainter.new = function() {
    ;
  }).prototype = slider_theme._RectangularSliderValueIndicatorPathPainter.prototype;
  dart.addTypeTests(slider_theme._RectangularSliderValueIndicatorPathPainter);
  dart.addTypeCaches(slider_theme._RectangularSliderValueIndicatorPathPainter);
  dart.setMethodSignature(slider_theme._RectangularSliderValueIndicatorPathPainter, () => ({
    __proto__: dart.getMethods(slider_theme._RectangularSliderValueIndicatorPathPainter.__proto__),
    getPreferredSize: dart.fnType(ui.Size, [text_painter.TextPainter, core.double]),
    getHorizontalShift: dart.fnType(core.double, [], {}, {center: ui.Offset, labelPainter: text_painter.TextPainter, parentBox: box$.RenderBox, scale: core.double, sizeWithOverflow: ui.Size, textScaleFactor: core.double}),
    [S._upperRectangleWidth]: dart.fnType(core.double, [text_painter.TextPainter, core.double, core.double]),
    paint: dart.fnType(dart.void, [], {strokePaintColor: dart.nullable(ui.Color)}, {backgroundPaintColor: ui.Color, canvas: ui.Canvas, center: ui.Offset, labelPainter: text_painter.TextPainter, parentBox: box$.RenderBox, scale: core.double, sizeWithOverflow: ui.Size, textScaleFactor: core.double})
  }));
  dart.setLibraryUri(slider_theme._RectangularSliderValueIndicatorPathPainter, I[36]);
  dart.setStaticFieldSignature(slider_theme._RectangularSliderValueIndicatorPathPainter, () => ['_triangleHeight', '_labelPadding', '_preferredHeight', '_minLabelWidth', '_bottomTipYOffset', '_preferredHalfHeight', '_upperRectRadius']);
  dart.defineLazy(slider_theme._RectangularSliderValueIndicatorPathPainter, {
    /*slider_theme._RectangularSliderValueIndicatorPathPainter._triangleHeight*/get _triangleHeight() {
      return 8;
    },
    /*slider_theme._RectangularSliderValueIndicatorPathPainter._labelPadding*/get _labelPadding() {
      return 16;
    },
    /*slider_theme._RectangularSliderValueIndicatorPathPainter._preferredHeight*/get _preferredHeight() {
      return 32;
    },
    /*slider_theme._RectangularSliderValueIndicatorPathPainter._minLabelWidth*/get _minLabelWidth() {
      return 16;
    },
    /*slider_theme._RectangularSliderValueIndicatorPathPainter._bottomTipYOffset*/get _bottomTipYOffset() {
      return 14;
    },
    /*slider_theme._RectangularSliderValueIndicatorPathPainter._preferredHalfHeight*/get _preferredHalfHeight() {
      return 16;
    },
    /*slider_theme._RectangularSliderValueIndicatorPathPainter._upperRectRadius*/get _upperRectRadius() {
      return 4;
    }
  }, false);
  slider_theme.PaddleSliderValueIndicatorShape = class PaddleSliderValueIndicatorShape extends slider_theme.SliderComponentShape {
    static ['_#new#tearOff']() {
      return new slider_theme.PaddleSliderValueIndicatorShape.new();
    }
    getPreferredSize(isEnabled, isDiscrete, opts) {
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      if (!(labelPainter != null)) dart.assertFailed(null, I[35], 2871, 12, "labelPainter != null");
      if (!(textScaleFactor != null && dart.notNull(textScaleFactor) >= 0)) dart.assertFailed(null, I[35], 2872, 12, "textScaleFactor != null && textScaleFactor >= 0");
      return slider_theme.PaddleSliderValueIndicatorShape._pathPainter.getPreferredSize(dart.nullCheck(labelPainter), dart.nullCheck(textScaleFactor));
    }
    paint(context, center, opts) {
      let t26;
      let activationAnimation = opts && 'activationAnimation' in opts ? opts.activationAnimation : null;
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : null;
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      let sizeWithOverflow = opts && 'sizeWithOverflow' in opts ? opts.sizeWithOverflow : null;
      if (!(context !== null)) dart.assertFailed(null, I[35], 2891, 12, "context != null");
      if (!(center !== null)) dart.assertFailed(null, I[35], 2892, 12, "center != null");
      if (!(activationAnimation !== null)) dart.assertFailed(null, I[35], 2893, 12, "activationAnimation != null");
      if (!(enableAnimation !== null)) dart.assertFailed(null, I[35], 2894, 12, "enableAnimation != null");
      if (!(labelPainter !== null)) dart.assertFailed(null, I[35], 2895, 12, "labelPainter != null");
      if (!(parentBox !== null)) dart.assertFailed(null, I[35], 2896, 12, "parentBox != null");
      if (!(sliderTheme !== null)) dart.assertFailed(null, I[35], 2897, 12, "sliderTheme != null");
      if (!!sizeWithOverflow.isEmpty) dart.assertFailed(null, I[35], 2898, 12, "!sizeWithOverflow.isEmpty");
      let enableColor = new tween.ColorTween.new({begin: sliderTheme.disabledThumbColor, end: sliderTheme.valueIndicatorColor});
      slider_theme.PaddleSliderValueIndicatorShape._pathPainter.paint(context.canvas, center, (t26 = ui.Paint.new(), (() => {
        t26.color = dart.nullCheck(enableColor.evaluate(enableAnimation));
        return t26;
      })()), activationAnimation.value, labelPainter, textScaleFactor, sizeWithOverflow, null);
    }
  };
  (slider_theme.PaddleSliderValueIndicatorShape.new = function() {
    slider_theme.PaddleSliderValueIndicatorShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme.PaddleSliderValueIndicatorShape.prototype;
  dart.addTypeTests(slider_theme.PaddleSliderValueIndicatorShape);
  dart.addTypeCaches(slider_theme.PaddleSliderValueIndicatorShape);
  dart.setMethodSignature(slider_theme.PaddleSliderValueIndicatorShape, () => ({
    __proto__: dart.getMethods(slider_theme.PaddleSliderValueIndicatorShape.__proto__),
    getPreferredSize: dart.fnType(ui.Size, [core.bool, core.bool], {labelPainter: dart.nullable(text_painter.TextPainter), textScaleFactor: dart.nullable(core.double)}, {}),
    paint: dart.fnType(dart.void, [object.PaintingContext, ui.Offset], {}, {activationAnimation: animation$.Animation$(core.double), enableAnimation: animation$.Animation$(core.double), isDiscrete: core.bool, labelPainter: text_painter.TextPainter, parentBox: box$.RenderBox, sizeWithOverflow: ui.Size, sliderTheme: slider_theme.SliderThemeData, textDirection: ui.TextDirection, textScaleFactor: core.double, value: core.double})
  }));
  dart.setLibraryUri(slider_theme.PaddleSliderValueIndicatorShape, I[36]);
  dart.setStaticFieldSignature(slider_theme.PaddleSliderValueIndicatorShape, () => ['_pathPainter']);
  dart.defineLazy(slider_theme.PaddleSliderValueIndicatorShape, {
    /*slider_theme.PaddleSliderValueIndicatorShape._pathPainter*/get _pathPainter() {
      return C[313] || CT.C313;
    }
  }, false);
  slider_theme.PaddleRangeSliderValueIndicatorShape = class PaddleRangeSliderValueIndicatorShape extends slider_theme.RangeSliderValueIndicatorShape {
    static ['_#new#tearOff']() {
      return new slider_theme.PaddleRangeSliderValueIndicatorShape.new();
    }
    getPreferredSize(isEnabled, isDiscrete, opts) {
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      if (!(labelPainter !== null)) dart.assertFailed(null, I[35], 2940, 12, "labelPainter != null");
      if (!(textScaleFactor !== null && textScaleFactor >= 0)) dart.assertFailed(null, I[35], 2941, 12, "textScaleFactor != null && textScaleFactor >= 0");
      return slider_theme.PaddleRangeSliderValueIndicatorShape._pathPainter.getPreferredSize(labelPainter, textScaleFactor);
    }
    getHorizontalShift(opts) {
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      let center = opts && 'center' in opts ? opts.center : null;
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      let activationAnimation = opts && 'activationAnimation' in opts ? opts.activationAnimation : null;
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      let sizeWithOverflow = opts && 'sizeWithOverflow' in opts ? opts.sizeWithOverflow : null;
      return slider_theme.PaddleRangeSliderValueIndicatorShape._pathPainter.getHorizontalShift({center: dart.nullCheck(center), labelPainter: dart.nullCheck(labelPainter), scale: dart.nullCheck(activationAnimation).value, textScaleFactor: dart.nullCheck(textScaleFactor), sizeWithOverflow: dart.nullCheck(sizeWithOverflow)});
    }
    paint(context, center, opts) {
      let t26;
      let activationAnimation = opts && 'activationAnimation' in opts ? opts.activationAnimation : null;
      let enableAnimation = opts && 'enableAnimation' in opts ? opts.enableAnimation : null;
      let isDiscrete = opts && 'isDiscrete' in opts ? opts.isDiscrete : null;
      let isOnTop = opts && 'isOnTop' in opts ? opts.isOnTop : false;
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      let parentBox = opts && 'parentBox' in opts ? opts.parentBox : null;
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      let thumb = opts && 'thumb' in opts ? opts.thumb : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      let sizeWithOverflow = opts && 'sizeWithOverflow' in opts ? opts.sizeWithOverflow : null;
      if (!(context !== null)) dart.assertFailed(null, I[35], 2980, 12, "context != null");
      if (!(center !== null)) dart.assertFailed(null, I[35], 2981, 12, "center != null");
      if (!(activationAnimation !== null)) dart.assertFailed(null, I[35], 2982, 12, "activationAnimation != null");
      if (!(enableAnimation !== null)) dart.assertFailed(null, I[35], 2983, 12, "enableAnimation != null");
      if (!(labelPainter !== null)) dart.assertFailed(null, I[35], 2984, 12, "labelPainter != null");
      if (!(parentBox !== null)) dart.assertFailed(null, I[35], 2985, 12, "parentBox != null");
      if (!(sliderTheme !== null)) dart.assertFailed(null, I[35], 2986, 12, "sliderTheme != null");
      if (!!dart.nullCheck(sizeWithOverflow).isEmpty) dart.assertFailed(null, I[35], 2987, 12, "!sizeWithOverflow!.isEmpty");
      let enableColor = new tween.ColorTween.new({begin: sliderTheme.disabledThumbColor, end: sliderTheme.valueIndicatorColor});
      slider_theme.PaddleRangeSliderValueIndicatorShape._pathPainter.paint(context.canvas, center, (t26 = ui.Paint.new(), (() => {
        t26.color = dart.nullCheck(enableColor.evaluate(enableAnimation));
        return t26;
      })()), activationAnimation.value, labelPainter, dart.nullCheck(textScaleFactor), dart.nullCheck(sizeWithOverflow), isOnTop ? sliderTheme.overlappingShapeStrokeColor : null);
    }
  };
  (slider_theme.PaddleRangeSliderValueIndicatorShape.new = function() {
    slider_theme.PaddleRangeSliderValueIndicatorShape.__proto__.new.call(this);
    ;
  }).prototype = slider_theme.PaddleRangeSliderValueIndicatorShape.prototype;
  dart.addTypeTests(slider_theme.PaddleRangeSliderValueIndicatorShape);
  dart.addTypeCaches(slider_theme.PaddleRangeSliderValueIndicatorShape);
  dart.setMethodSignature(slider_theme.PaddleRangeSliderValueIndicatorShape, () => ({
    __proto__: dart.getMethods(slider_theme.PaddleRangeSliderValueIndicatorShape.__proto__),
    getPreferredSize: dart.fnType(ui.Size, [core.bool, core.bool], {}, {labelPainter: text_painter.TextPainter, textScaleFactor: core.double}),
    paint: dart.fnType(dart.void, [object.PaintingContext, ui.Offset], {isDiscrete: dart.nullable(core.bool), isOnTop: core.bool, sizeWithOverflow: dart.nullable(ui.Size), textDirection: dart.nullable(ui.TextDirection), textScaleFactor: dart.nullable(core.double), thumb: dart.nullable(slider_theme.Thumb), value: dart.nullable(core.double)}, {activationAnimation: animation$.Animation$(core.double), enableAnimation: animation$.Animation$(core.double), labelPainter: text_painter.TextPainter, parentBox: box$.RenderBox, sliderTheme: slider_theme.SliderThemeData})
  }));
  dart.setLibraryUri(slider_theme.PaddleRangeSliderValueIndicatorShape, I[36]);
  dart.setStaticFieldSignature(slider_theme.PaddleRangeSliderValueIndicatorShape, () => ['_pathPainter']);
  dart.defineLazy(slider_theme.PaddleRangeSliderValueIndicatorShape, {
    /*slider_theme.PaddleRangeSliderValueIndicatorShape._pathPainter*/get _pathPainter() {
      return C[313] || CT.C313;
    }
  }, false);
  slider_theme._PaddleSliderValueIndicatorPathPainter = class _PaddleSliderValueIndicatorPathPainter extends core.Object {
    static ['_#new#tearOff']() {
      return new slider_theme._PaddleSliderValueIndicatorPathPainter.new();
    }
    getPreferredSize(labelPainter, textScaleFactor) {
      if (!(labelPainter !== null)) dart.assertFailed(null, I[35], 3050, 12, "labelPainter != null");
      if (!(textScaleFactor !== null && textScaleFactor >= 0)) dart.assertFailed(null, I[35], 3051, 12, "textScaleFactor != null && textScaleFactor >= 0");
      let width = math.max(core.double, 16 * textScaleFactor, labelPainter.width) + 8 * 2 * textScaleFactor;
      return new ui.Size.new(width, 66 * textScaleFactor);
    }
    static _addArc(path, center, radius, startAngle, endAngle) {
      if (!center.isFinite) dart.assertFailed(null, I[35], 3059, 12, "center.isFinite");
      let arcRect = new ui.Rect.fromCircle({center: center, radius: radius});
      path.arcTo(arcRect, startAngle, endAngle - startAngle, false);
    }
    getHorizontalShift(opts) {
      let center = opts && 'center' in opts ? opts.center : null;
      let labelPainter = opts && 'labelPainter' in opts ? opts.labelPainter : null;
      let scale = opts && 'scale' in opts ? opts.scale : null;
      let textScaleFactor = opts && 'textScaleFactor' in opts ? opts.textScaleFactor : null;
      let sizeWithOverflow = opts && 'sizeWithOverflow' in opts ? opts.sizeWithOverflow : null;
      if (!!sizeWithOverflow.isEmpty) dart.assertFailed(null, I[35], 3071, 12, "!sizeWithOverflow.isEmpty");
      let inverseTextScale = textScaleFactor !== 0 ? 1.0 / textScaleFactor : 0.0;
      let labelHalfWidth = labelPainter.width / 2.0;
      let halfWidthNeeded = math.max(core.double, 0.0, inverseTextScale * labelHalfWidth - (16 - 8));
      let shift = this[S._getIdealOffset](halfWidthNeeded, textScaleFactor * scale, center, sizeWithOverflow.width);
      return shift * textScaleFactor;
    }
    [S._getIdealOffset](halfWidthNeeded, scale, center, widthWithOverflow) {
      let topLobeRect = new ui.Rect.fromLTWH(-16 - halfWidthNeeded, -16 - 40, 2.0 * (16 + halfWidthNeeded), 2.0 * 16);
      let topLeft = topLobeRect.topLeft['*'](scale)['+'](center);
      let bottomRight = topLobeRect.bottomRight['*'](scale)['+'](center);
      let shift = 0.0;
      if (topLeft.dx < 8) {
        shift = 8 - topLeft.dx;
      }
      let endGlobal = widthWithOverflow;
      if (bottomRight.dx > endGlobal - 8) {
        shift = endGlobal - 8 - bottomRight.dx;
      }
      shift = scale === 0.0 ? 0.0 : shift / scale;
      if (shift < 0.0) {
        shift = math.max(core.double, shift, -halfWidthNeeded);
      } else {
        shift = math.min(core.double, shift, halfWidthNeeded);
      }
      return shift;
    }
    paint(canvas, center, paint, scale, labelPainter, textScaleFactor, sizeWithOverflow, strokePaintColor) {
      let t26, t26$;
      if (scale === 0.0) {
        return;
      }
      if (!!sizeWithOverflow.isEmpty) dart.assertFailed(null, I[35], 3138, 12, "!sizeWithOverflow.isEmpty");
      let overallScale = scale * textScaleFactor;
      let inverseTextScale = textScaleFactor !== 0 ? 1.0 / textScaleFactor : 0.0;
      let labelHalfWidth = labelPainter.width / 2.0;
      canvas.save();
      canvas.translate(center.dx, center.dy);
      canvas.scale(overallScale, overallScale);
      let bottomNeckTriangleHypotenuse = 4.5 + 10 / overallScale;
      let rightBottomNeckCenterY = -math.sqrt(math.pow(bottomNeckTriangleHypotenuse, 2) - math.pow(6, 2));
      let rightBottomNeckAngleEnd = 3.141592653589793 + math.atan(rightBottomNeckCenterY / 6);
      let path = (t26 = ui.Path.new(), (() => {
        t26.moveTo(3 / 2, rightBottomNeckCenterY);
        return t26;
      })());
      slider_theme._PaddleSliderValueIndicatorPathPainter._addArc(path, new ui.Offset.new(6, rightBottomNeckCenterY), 4.5, 3.141592653589793, rightBottomNeckAngleEnd);
      slider_theme._PaddleSliderValueIndicatorPathPainter._addArc(path, ui.Offset.zero, 10 / overallScale, rightBottomNeckAngleEnd - 3.141592653589793, 2 * 3.141592653589793 - rightBottomNeckAngleEnd);
      slider_theme._PaddleSliderValueIndicatorPathPainter._addArc(path, new ui.Offset.new(-6, rightBottomNeckCenterY), 4.5, 3.141592653589793 - rightBottomNeckAngleEnd, 0.0);
      let halfWidthNeeded = math.max(core.double, 0.0, inverseTextScale * labelHalfWidth - (16 - 8));
      let shift = this[S._getIdealOffset](halfWidthNeeded, overallScale, center, sizeWithOverflow.width);
      let leftWidthNeeded = halfWidthNeeded - shift;
      let rightWidthNeeded = halfWidthNeeded + shift;
      let leftAmount = math.max(core.double, 0.0, math.min(core.double, 1.0, leftWidthNeeded / 14.5));
      let rightAmount = math.max(core.double, 0.0, math.min(core.double, 1.0, rightWidthNeeded / 14.5));
      let leftTheta = (1.0 - leftAmount) * 0.5235987755982988;
      let rightTheta = (1.0 - rightAmount) * 0.5235987755982988;
      let leftTopNeckCenter = new ui.Offset.new(-14.5, slider_theme._PaddleSliderValueIndicatorPathPainter._topLobeCenter.dy + math.cos(leftTheta) * 29);
      let neckRightCenter = new ui.Offset.new(14.5, slider_theme._PaddleSliderValueIndicatorPathPainter._topLobeCenter.dy + math.cos(rightTheta) * 29);
      let leftNeckArcAngle = 1.5707963267948966 - leftTheta;
      let rightNeckArcAngle = 3.141592653589793 + 1.5707963267948966 - rightTheta;
      let neckStretchBaseline = math.max(core.double, 0.0, rightBottomNeckCenterY - math.max(core.num, leftTopNeckCenter.dy, neckRightCenter.dy));
      let t = math.pow(inverseTextScale, 3.0);
      let stretch = math$.clampDouble(neckStretchBaseline * t, 0.0, 10.0 * neckStretchBaseline);
      let neckStretch = new ui.Offset.new(0.0, neckStretchBaseline - stretch);
      if (!(true || dart.fn(() => {
        let t26;
        let leftCenter = slider_theme._PaddleSliderValueIndicatorPathPainter._topLobeCenter['-'](new ui.Offset.new(leftWidthNeeded, 0.0))['+'](neckStretch);
        let rightCenter = slider_theme._PaddleSliderValueIndicatorPathPainter._topLobeCenter['+'](new ui.Offset.new(rightWidthNeeded, 0.0))['+'](neckStretch);
        let valueRect = new ui.Rect.fromLTRB(leftCenter.dx - 16, leftCenter.dy - 16, rightCenter.dx + 16, rightCenter.dy + 16);
        let outlinePaint = (t26 = ui.Paint.new(), (() => {
          t26.color = C[314] || CT.C314;
          t26.style = ui.PaintingStyle.stroke;
          t26.strokeWidth = 1.0;
          return t26;
        })());
        canvas.drawRect(valueRect, outlinePaint);
        return true;
      }, T$.VoidTobool())())) dart.assertFailed(null, I[35], 3215, 12, "!_debuggingLabelLocation || () {\n      final Offset leftCenter = _topLobeCenter - Offset(leftWidthNeeded, 0.0) + neckStretch;\n      final Offset rightCenter = _topLobeCenter + Offset(rightWidthNeeded, 0.0) + neckStretch;\n      final Rect valueRect = Rect.fromLTRB(\n        leftCenter.dx - _topLobeRadius,\n        leftCenter.dy - _topLobeRadius,\n        rightCenter.dx + _topLobeRadius,\n        rightCenter.dy + _topLobeRadius,\n      );\n      final Paint outlinePaint = Paint()\n        ..color = const Color(0xffff0000)\n        ..style = PaintingStyle.stroke\n        ..strokeWidth = 1.0;\n      canvas.drawRect(valueRect, outlinePaint);\n      return true;\n    }()");
      slider_theme._PaddleSliderValueIndicatorPathPainter._addArc(path, leftTopNeckCenter['+'](neckStretch), 13, 0.0, -leftNeckArcAngle);
      slider_theme._PaddleSliderValueIndicatorPathPainter._addArc(path, slider_theme._PaddleSliderValueIndicatorPathPainter._topLobeCenter['-'](new ui.Offset.new(leftWidthNeeded, 0.0))['+'](neckStretch), 16, 1.5707963267948966 + leftTheta, 4.71238898038469);
      slider_theme._PaddleSliderValueIndicatorPathPainter._addArc(path, slider_theme._PaddleSliderValueIndicatorPathPainter._topLobeCenter['+'](new ui.Offset.new(rightWidthNeeded, 0.0))['+'](neckStretch), 16, 4.71238898038469, 4.71238898038469 + 3.141592653589793 - rightTheta);
      slider_theme._PaddleSliderValueIndicatorPathPainter._addArc(path, neckRightCenter['+'](neckStretch), 13, rightNeckArcAngle, 3.141592653589793);
      if (strokePaintColor != null) {
        let strokePaint = (t26$ = ui.Paint.new(), (() => {
          t26$.color = strokePaintColor;
          t26$.strokeWidth = 1.0;
          t26$.style = ui.PaintingStyle.stroke;
          return t26$;
        })());
        canvas.drawPath(path, strokePaint);
      }
      canvas.drawPath(path, paint);
      canvas.save();
      canvas.translate(shift, -40 + neckStretch.dy);
      canvas.scale(inverseTextScale, inverseTextScale);
      labelPainter.paint(canvas, ui.Offset.zero['-'](new ui.Offset.new(labelHalfWidth, labelPainter.height / 2.0)));
      canvas.restore();
      canvas.restore();
    }
  };
  (slider_theme._PaddleSliderValueIndicatorPathPainter.new = function() {
    ;
  }).prototype = slider_theme._PaddleSliderValueIndicatorPathPainter.prototype;
  dart.addTypeTests(slider_theme._PaddleSliderValueIndicatorPathPainter);
  dart.addTypeCaches(slider_theme._PaddleSliderValueIndicatorPathPainter);
  dart.setMethodSignature(slider_theme._PaddleSliderValueIndicatorPathPainter, () => ({
    __proto__: dart.getMethods(slider_theme._PaddleSliderValueIndicatorPathPainter.__proto__),
    getPreferredSize: dart.fnType(ui.Size, [text_painter.TextPainter, core.double]),
    getHorizontalShift: dart.fnType(core.double, [], {}, {center: ui.Offset, labelPainter: text_painter.TextPainter, scale: core.double, sizeWithOverflow: ui.Size, textScaleFactor: core.double}),
    [S._getIdealOffset]: dart.fnType(core.double, [core.double, core.double, ui.Offset, core.double]),
    paint: dart.fnType(dart.void, [ui.Canvas, ui.Offset, ui.Paint, core.double, text_painter.TextPainter, core.double, ui.Size, dart.nullable(ui.Color)])
  }));
  dart.setStaticMethodSignature(slider_theme._PaddleSliderValueIndicatorPathPainter, () => ['_addArc']);
  dart.setLibraryUri(slider_theme._PaddleSliderValueIndicatorPathPainter, I[36]);
  dart.setStaticFieldSignature(slider_theme._PaddleSliderValueIndicatorPathPainter, () => ['_topLobeRadius', '_minLabelWidth', '_bottomLobeRadius', '_labelPadding', '_distanceBetweenTopBottomCenters', '_middleNeckWidth', '_bottomNeckRadius', '_neckTriangleBase', '_rightBottomNeckCenterX', '_rightBottomNeckAngleStart', '_topLobeCenter', '_topNeckRadius', '_neckTriangleHypotenuse', '_twoSeventyDegrees', '_ninetyDegrees', '_thirtyDegrees', '_preferredHeight', '_debuggingLabelLocation']);
  dart.defineLazy(slider_theme._PaddleSliderValueIndicatorPathPainter, {
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._topLobeRadius*/get _topLobeRadius() {
      return 16;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._minLabelWidth*/get _minLabelWidth() {
      return 16;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._bottomLobeRadius*/get _bottomLobeRadius() {
      return 10;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._labelPadding*/get _labelPadding() {
      return 8;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._distanceBetweenTopBottomCenters*/get _distanceBetweenTopBottomCenters() {
      return 40;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._middleNeckWidth*/get _middleNeckWidth() {
      return 3;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._bottomNeckRadius*/get _bottomNeckRadius() {
      return 4.5;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._neckTriangleBase*/get _neckTriangleBase() {
      return 14.5;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._rightBottomNeckCenterX*/get _rightBottomNeckCenterX() {
      return 6;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._rightBottomNeckAngleStart*/get _rightBottomNeckAngleStart() {
      return 3.141592653589793;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._topLobeCenter*/get _topLobeCenter() {
      return C[315] || CT.C315;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._topNeckRadius*/get _topNeckRadius() {
      return 13;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._neckTriangleHypotenuse*/get _neckTriangleHypotenuse() {
      return 29;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._twoSeventyDegrees*/get _twoSeventyDegrees() {
      return 4.71238898038469;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._ninetyDegrees*/get _ninetyDegrees() {
      return 1.5707963267948966;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._thirtyDegrees*/get _thirtyDegrees() {
      return 0.5235987755982988;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._preferredHeight*/get _preferredHeight() {
      return 66;
    },
    /*slider_theme._PaddleSliderValueIndicatorPathPainter._debuggingLabelLocation*/get _debuggingLabelLocation() {
      return false;
    }
  }, false);
  slider_theme.RangeValues = class RangeValues extends core.Object {
    get start() {
      return this[S.start];
    }
    set start(value) {
      super.start = value;
    }
    get end() {
      return this[S.end];
    }
    set end(value) {
      super.end = value;
    }
    static ['_#new#tearOff'](start, end) {
      return new slider_theme.RangeValues.new(start, end);
    }
    _equals(other) {
      if (other == null) return false;
      if (!other[S.$runtimeType]._equals(this[S.$runtimeType])) {
        return false;
      }
      return slider_theme.RangeValues.is(other) && other.start === this.start && other.end === this.end;
    }
    get hashCode() {
      return core.Object.hash(this.start, this.end);
    }
    toString() {
      return object$.objectRuntimeType(this, "RangeValues") + "(" + dart.str(this.start) + ", " + dart.str(this.end) + ")";
    }
  };
  (slider_theme.RangeValues.new = function(start, end) {
    this[S.start] = start;
    this[S.end] = end;
    ;
  }).prototype = slider_theme.RangeValues.prototype;
  dart.addTypeTests(slider_theme.RangeValues);
  dart.addTypeCaches(slider_theme.RangeValues);
  dart.setLibraryUri(slider_theme.RangeValues, I[36]);
  dart.setFieldSignature(slider_theme.RangeValues, () => ({
    __proto__: dart.getFields(slider_theme.RangeValues.__proto__),
    start: dart.finalFieldType(core.double),
    end: dart.finalFieldType(core.double)
  }));
  dart.defineExtensionMethods(slider_theme.RangeValues, ['_equals', 'toString']);
  dart.defineExtensionAccessors(slider_theme.RangeValues, ['hashCode']);
  slider_theme.RangeLabels = class RangeLabels extends core.Object {
    get start() {
      return this[S.start$1];
    }
    set start(value) {
      super.start = value;
    }
    get end() {
      return this[S.end$1];
    }
    set end(value) {
      super.end = value;
    }
    static ['_#new#tearOff'](start, end) {
      return new slider_theme.RangeLabels.new(start, end);
    }
    _equals(other) {
      if (other == null) return false;
      if (!other[S.$runtimeType]._equals(this[S.$runtimeType])) {
        return false;
      }
      return slider_theme.RangeLabels.is(other) && other.start === this.start && other.end === this.end;
    }
    get hashCode() {
      return core.Object.hash(this.start, this.end);
    }
    toString() {
      return object$.objectRuntimeType(this, "RangeLabels") + "(" + this.start + ", " + this.end + ")";
    }
  };
  (slider_theme.RangeLabels.new = function(start, end) {
    this[S.start$1] = start;
    this[S.end$1] = end;
    ;
  }).prototype = slider_theme.RangeLabels.prototype;
  dart.addTypeTests(slider_theme.RangeLabels);
  dart.addTypeCaches(slider_theme.RangeLabels);
  dart.setLibraryUri(slider_theme.RangeLabels, I[36]);
  dart.setFieldSignature(slider_theme.RangeLabels, () => ({
    __proto__: dart.getFields(slider_theme.RangeLabels.__proto__),
    start: dart.finalFieldType(core.String),
    end: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(slider_theme.RangeLabels, ['_equals', 'toString']);
  dart.defineExtensionAccessors(slider_theme.RangeLabels, ['hashCode']);
  slider_theme._debugDrawShadow = function _debugDrawShadow(canvas, path, elevation) {
    let t26;
    if (elevation > 0.0) {
      canvas.drawPath(path, (t26 = ui.Paint.new(), (() => {
        t26.color = colors$.Colors.black;
        t26.style = ui.PaintingStyle.stroke;
        t26.strokeWidth = elevation * 2.0;
        return t26;
      })()));
    }
  };
  const Object_Diagnosticable$36$7 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$7.new = function() {
  }).prototype = Object_Diagnosticable$36$7.prototype;
  dart.applyMixin(Object_Diagnosticable$36$7, diagnostics.Diagnosticable);
  scrollbar_theme.ScrollbarThemeData = class ScrollbarThemeData extends Object_Diagnosticable$36$7 {
    get thumbVisibility() {
      return this[S.thumbVisibility];
    }
    set thumbVisibility(value) {
      super.thumbVisibility = value;
    }
    get thickness() {
      return this[S.thickness];
    }
    set thickness(value) {
      super.thickness = value;
    }
    get trackVisibility() {
      return this[S.trackVisibility];
    }
    set trackVisibility(value) {
      super.trackVisibility = value;
    }
    get showTrackOnHover() {
      return this[S.showTrackOnHover];
    }
    set showTrackOnHover(value) {
      super.showTrackOnHover = value;
    }
    get isAlwaysShown() {
      return this[S.isAlwaysShown];
    }
    set isAlwaysShown(value) {
      super.isAlwaysShown = value;
    }
    get interactive() {
      return this[S.interactive];
    }
    set interactive(value) {
      super.interactive = value;
    }
    get radius() {
      return this[S.radius];
    }
    set radius(value) {
      super.radius = value;
    }
    get thumbColor() {
      return this[S.thumbColor$2];
    }
    set thumbColor(value) {
      super.thumbColor = value;
    }
    get trackColor() {
      return this[S.trackColor$1];
    }
    set trackColor(value) {
      super.trackColor = value;
    }
    get trackBorderColor() {
      return this[S.trackBorderColor];
    }
    set trackBorderColor(value) {
      super.trackBorderColor = value;
    }
    get crossAxisMargin() {
      return this[S.crossAxisMargin];
    }
    set crossAxisMargin(value) {
      super.crossAxisMargin = value;
    }
    get mainAxisMargin() {
      return this[S.mainAxisMargin];
    }
    set mainAxisMargin(value) {
      super.mainAxisMargin = value;
    }
    get minThumbLength() {
      return this[S.minThumbLength];
    }
    set minThumbLength(value) {
      super.minThumbLength = value;
    }
    static ['_#new#tearOff'](opts) {
      let thumbVisibility = opts && 'thumbVisibility' in opts ? opts.thumbVisibility : null;
      let thickness = opts && 'thickness' in opts ? opts.thickness : null;
      let trackVisibility = opts && 'trackVisibility' in opts ? opts.trackVisibility : null;
      let radius = opts && 'radius' in opts ? opts.radius : null;
      let thumbColor = opts && 'thumbColor' in opts ? opts.thumbColor : null;
      let trackColor = opts && 'trackColor' in opts ? opts.trackColor : null;
      let trackBorderColor = opts && 'trackBorderColor' in opts ? opts.trackBorderColor : null;
      let crossAxisMargin = opts && 'crossAxisMargin' in opts ? opts.crossAxisMargin : null;
      let mainAxisMargin = opts && 'mainAxisMargin' in opts ? opts.mainAxisMargin : null;
      let minThumbLength = opts && 'minThumbLength' in opts ? opts.minThumbLength : null;
      let interactive = opts && 'interactive' in opts ? opts.interactive : null;
      let isAlwaysShown = opts && 'isAlwaysShown' in opts ? opts.isAlwaysShown : null;
      let showTrackOnHover = opts && 'showTrackOnHover' in opts ? opts.showTrackOnHover : null;
      return new scrollbar_theme.ScrollbarThemeData.new({thumbVisibility: thumbVisibility, thickness: thickness, trackVisibility: trackVisibility, radius: radius, thumbColor: thumbColor, trackColor: trackColor, trackBorderColor: trackBorderColor, crossAxisMargin: crossAxisMargin, mainAxisMargin: mainAxisMargin, minThumbLength: minThumbLength, interactive: interactive, isAlwaysShown: isAlwaysShown, showTrackOnHover: showTrackOnHover});
    }
    copyWith(opts) {
      let t26, t26$, t26$0, t26$1, t26$2, t26$3, t26$4, t26$5, t26$6, t26$7, t26$8, t26$9, t26$10;
      let thumbVisibility = opts && 'thumbVisibility' in opts ? opts.thumbVisibility : null;
      let thickness = opts && 'thickness' in opts ? opts.thickness : null;
      let trackVisibility = opts && 'trackVisibility' in opts ? opts.trackVisibility : null;
      let showTrackOnHover = opts && 'showTrackOnHover' in opts ? opts.showTrackOnHover : null;
      let interactive = opts && 'interactive' in opts ? opts.interactive : null;
      let radius = opts && 'radius' in opts ? opts.radius : null;
      let thumbColor = opts && 'thumbColor' in opts ? opts.thumbColor : null;
      let trackColor = opts && 'trackColor' in opts ? opts.trackColor : null;
      let trackBorderColor = opts && 'trackBorderColor' in opts ? opts.trackBorderColor : null;
      let crossAxisMargin = opts && 'crossAxisMargin' in opts ? opts.crossAxisMargin : null;
      let mainAxisMargin = opts && 'mainAxisMargin' in opts ? opts.mainAxisMargin : null;
      let minThumbLength = opts && 'minThumbLength' in opts ? opts.minThumbLength : null;
      let isAlwaysShown = opts && 'isAlwaysShown' in opts ? opts.isAlwaysShown : null;
      return new scrollbar_theme.ScrollbarThemeData.new({thumbVisibility: (t26 = thumbVisibility, t26 == null ? this.thumbVisibility : t26), thickness: (t26$ = thickness, t26$ == null ? this.thickness : t26$), trackVisibility: (t26$0 = trackVisibility, t26$0 == null ? this.trackVisibility : t26$0), showTrackOnHover: (t26$1 = showTrackOnHover, t26$1 == null ? this.showTrackOnHover : t26$1), isAlwaysShown: (t26$2 = isAlwaysShown, t26$2 == null ? this.isAlwaysShown : t26$2), interactive: (t26$3 = interactive, t26$3 == null ? this.interactive : t26$3), radius: (t26$4 = radius, t26$4 == null ? this.radius : t26$4), thumbColor: (t26$5 = thumbColor, t26$5 == null ? this.thumbColor : t26$5), trackColor: (t26$6 = trackColor, t26$6 == null ? this.trackColor : t26$6), trackBorderColor: (t26$7 = trackBorderColor, t26$7 == null ? this.trackBorderColor : t26$7), crossAxisMargin: (t26$8 = crossAxisMargin, t26$8 == null ? this.crossAxisMargin : t26$8), mainAxisMargin: (t26$9 = mainAxisMargin, t26$9 == null ? this.mainAxisMargin : t26$9), minThumbLength: (t26$10 = minThumbLength, t26$10 == null ? this.minThumbLength : t26$10)});
    }
    static lerp(a, b, t) {
      let t26, t26$, t26$0, t26$1, t26$2, t26$3, t26$4, t26$5, t26$6, t26$7, t26$8, t26$9, t26$10, t26$11, t26$12, t26$13, t26$14, t26$15, t26$16, t26$17, t26$18, t26$19, t26$20, t26$21, t26$22, t26$23;
      if (!(t !== null)) dart.assertFailed(null, I[37], 199, 12, "t != null");
      return new scrollbar_theme.ScrollbarThemeData.new({thumbVisibility: material_state.MaterialStateProperty.lerp(T$.boolN(), (t26 = a, t26 == null ? null : t26.thumbVisibility), (t26$ = b, t26$ == null ? null : t26$.thumbVisibility), t, C[316] || CT.C316), thickness: material_state.MaterialStateProperty.lerp(T$.doubleN(), (t26$0 = a, t26$0 == null ? null : t26$0.thickness), (t26$1 = b, t26$1 == null ? null : t26$1.thickness), t, C[24] || CT.C24), trackVisibility: material_state.MaterialStateProperty.lerp(T$.boolN(), (t26$2 = a, t26$2 == null ? null : t26$2.trackVisibility), (t26$3 = b, t26$3 == null ? null : t26$3.trackVisibility), t, C[316] || CT.C316), showTrackOnHover: scrollbar_theme._lerpBool((t26$4 = a, t26$4 == null ? null : t26$4.showTrackOnHover), (t26$5 = b, t26$5 == null ? null : t26$5.showTrackOnHover), t), isAlwaysShown: scrollbar_theme._lerpBool((t26$6 = a, t26$6 == null ? null : t26$6.isAlwaysShown), (t26$7 = b, t26$7 == null ? null : t26$7.isAlwaysShown), t), interactive: scrollbar_theme._lerpBool((t26$8 = a, t26$8 == null ? null : t26$8.interactive), (t26$9 = b, t26$9 == null ? null : t26$9.interactive), t), radius: ui.Radius.lerp((t26$10 = a, t26$10 == null ? null : t26$10.radius), (t26$11 = b, t26$11 == null ? null : t26$11.radius), t), thumbColor: material_state.MaterialStateProperty.lerp(T$.ColorN(), (t26$12 = a, t26$12 == null ? null : t26$12.thumbColor), (t26$13 = b, t26$13 == null ? null : t26$13.thumbColor), t, C[23] || CT.C23), trackColor: material_state.MaterialStateProperty.lerp(T$.ColorN(), (t26$14 = a, t26$14 == null ? null : t26$14.trackColor), (t26$15 = b, t26$15 == null ? null : t26$15.trackColor), t, C[23] || CT.C23), trackBorderColor: material_state.MaterialStateProperty.lerp(T$.ColorN(), (t26$16 = a, t26$16 == null ? null : t26$16.trackBorderColor), (t26$17 = b, t26$17 == null ? null : t26$17.trackBorderColor), t, C[23] || CT.C23), crossAxisMargin: ui.lerpDouble((t26$18 = a, t26$18 == null ? null : t26$18.crossAxisMargin), (t26$19 = b, t26$19 == null ? null : t26$19.crossAxisMargin), t), mainAxisMargin: ui.lerpDouble((t26$20 = a, t26$20 == null ? null : t26$20.mainAxisMargin), (t26$21 = b, t26$21 == null ? null : t26$21.mainAxisMargin), t), minThumbLength: ui.lerpDouble((t26$22 = a, t26$22 == null ? null : t26$22.minThumbLength), (t26$23 = b, t26$23 == null ? null : t26$23.minThumbLength), t)});
    }
    get hashCode() {
      return core.Object.hash(this.thumbVisibility, this.thickness, this.trackVisibility, this.showTrackOnHover, this.isAlwaysShown, this.interactive, this.radius, this.thumbColor, this.trackColor, this.trackBorderColor, this.crossAxisMargin, this.mainAxisMargin, this.minThumbLength);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      if (!other[S.$runtimeType]._equals(this[S.$runtimeType])) {
        return false;
      }
      return scrollbar_theme.ScrollbarThemeData.is(other) && dart.equals(other.thumbVisibility, this.thumbVisibility) && dart.equals(other.thickness, this.thickness) && dart.equals(other.trackVisibility, this.trackVisibility) && other.showTrackOnHover == this.showTrackOnHover && other.isAlwaysShown == this.isAlwaysShown && other.interactive == this.interactive && dart.equals(other.radius, this.radius) && dart.equals(other.thumbColor, this.thumbColor) && dart.equals(other.trackColor, this.trackColor) && dart.equals(other.trackBorderColor, this.trackBorderColor) && other.crossAxisMargin == this.crossAxisMargin && other.mainAxisMargin == this.mainAxisMargin && other.minThumbLength == this.minThumbLength;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfboolN()).new("thumbVisibility", this.thumbVisibility, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfdoubleN()).new("thickness", this.thickness, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfboolN()).new("trackVisibility", this.trackVisibility, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("showTrackOnHover", this.showTrackOnHover, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("isAlwaysShown", this.isAlwaysShown, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("interactive", this.interactive, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfRadius()).new("radius", this.radius, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfColorN()).new("thumbColor", this.thumbColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfColorN()).new("trackColor", this.trackColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfColorN()).new("trackBorderColor", this.trackBorderColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfdouble()).new("crossAxisMargin", this.crossAxisMargin, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfdouble()).new("mainAxisMargin", this.mainAxisMargin, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfdouble()).new("minThumbLength", this.minThumbLength, {defaultValue: null}));
    }
  };
  (scrollbar_theme.ScrollbarThemeData.new = function(opts) {
    let thumbVisibility = opts && 'thumbVisibility' in opts ? opts.thumbVisibility : null;
    let thickness = opts && 'thickness' in opts ? opts.thickness : null;
    let trackVisibility = opts && 'trackVisibility' in opts ? opts.trackVisibility : null;
    let radius = opts && 'radius' in opts ? opts.radius : null;
    let thumbColor = opts && 'thumbColor' in opts ? opts.thumbColor : null;
    let trackColor = opts && 'trackColor' in opts ? opts.trackColor : null;
    let trackBorderColor = opts && 'trackBorderColor' in opts ? opts.trackBorderColor : null;
    let crossAxisMargin = opts && 'crossAxisMargin' in opts ? opts.crossAxisMargin : null;
    let mainAxisMargin = opts && 'mainAxisMargin' in opts ? opts.mainAxisMargin : null;
    let minThumbLength = opts && 'minThumbLength' in opts ? opts.minThumbLength : null;
    let interactive = opts && 'interactive' in opts ? opts.interactive : null;
    let isAlwaysShown = opts && 'isAlwaysShown' in opts ? opts.isAlwaysShown : null;
    let showTrackOnHover = opts && 'showTrackOnHover' in opts ? opts.showTrackOnHover : null;
    this[S.thumbVisibility] = thumbVisibility;
    this[S.thickness] = thickness;
    this[S.trackVisibility] = trackVisibility;
    this[S.radius] = radius;
    this[S.thumbColor$2] = thumbColor;
    this[S.trackColor$1] = trackColor;
    this[S.trackBorderColor] = trackBorderColor;
    this[S.crossAxisMargin] = crossAxisMargin;
    this[S.mainAxisMargin] = mainAxisMargin;
    this[S.minThumbLength] = minThumbLength;
    this[S.interactive] = interactive;
    this[S.isAlwaysShown] = isAlwaysShown;
    this[S.showTrackOnHover] = showTrackOnHover;
    if (!(isAlwaysShown == null || thumbVisibility == null)) dart.assertFailed("Scrollbar thumb appearance should only be controlled with thumbVisibility, " + "isAlwaysShown is deprecated.", I[37], 56, 10, "isAlwaysShown == null || thumbVisibility == null");
    ;
  }).prototype = scrollbar_theme.ScrollbarThemeData.prototype;
  dart.addTypeTests(scrollbar_theme.ScrollbarThemeData);
  dart.addTypeCaches(scrollbar_theme.ScrollbarThemeData);
  dart.setMethodSignature(scrollbar_theme.ScrollbarThemeData, () => ({
    __proto__: dart.getMethods(scrollbar_theme.ScrollbarThemeData.__proto__),
    copyWith: dart.fnType(scrollbar_theme.ScrollbarThemeData, [], {crossAxisMargin: dart.nullable(core.double), interactive: dart.nullable(core.bool), isAlwaysShown: dart.nullable(core.bool), mainAxisMargin: dart.nullable(core.double), minThumbLength: dart.nullable(core.double), radius: dart.nullable(ui.Radius), showTrackOnHover: dart.nullable(core.bool), thickness: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(core.double))), thumbColor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color))), thumbVisibility: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(core.bool))), trackBorderColor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color))), trackColor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color))), trackVisibility: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(core.bool)))}, {})
  }));
  dart.setStaticMethodSignature(scrollbar_theme.ScrollbarThemeData, () => ['lerp']);
  dart.setLibraryUri(scrollbar_theme.ScrollbarThemeData, I[38]);
  dart.setFieldSignature(scrollbar_theme.ScrollbarThemeData, () => ({
    __proto__: dart.getFields(scrollbar_theme.ScrollbarThemeData.__proto__),
    thumbVisibility: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(core.bool)))),
    thickness: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(core.double)))),
    trackVisibility: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(core.bool)))),
    showTrackOnHover: dart.finalFieldType(dart.nullable(core.bool)),
    isAlwaysShown: dart.finalFieldType(dart.nullable(core.bool)),
    interactive: dart.finalFieldType(dart.nullable(core.bool)),
    radius: dart.finalFieldType(dart.nullable(ui.Radius)),
    thumbColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    trackColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    trackBorderColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    crossAxisMargin: dart.finalFieldType(dart.nullable(core.double)),
    mainAxisMargin: dart.finalFieldType(dart.nullable(core.double)),
    minThumbLength: dart.finalFieldType(dart.nullable(core.double))
  }));
  dart.defineExtensionMethods(scrollbar_theme.ScrollbarThemeData, ['_equals']);
  dart.defineExtensionAccessors(scrollbar_theme.ScrollbarThemeData, ['hashCode']);
  scrollbar_theme.ScrollbarTheme = class ScrollbarTheme extends framework.InheritedWidget {
    get data() {
      return this[S.data$6];
    }
    set data(value) {
      super.data = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let data = opts && 'data' in opts ? opts.data : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new scrollbar_theme.ScrollbarTheme.new({key: key, data: data, child: child, $creationLocationd_0dea112b090073317d4: C[317] || CT.C317});
    }
    static of(context) {
      let t26, t26$;
      let scrollbarTheme = context.dependOnInheritedWidgetOfExactType(scrollbar_theme.ScrollbarTheme);
      t26$ = (t26 = scrollbarTheme, t26 == null ? null : t26.data);
      return t26$ == null ? theme$.Theme.of(context).scrollbarTheme : t26$;
    }
    updateShouldNotify(oldWidget) {
      scrollbar_theme.ScrollbarTheme.as(oldWidget);
      return !this.data._equals(oldWidget.data);
    }
  };
  (scrollbar_theme.ScrollbarTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.data$6] = data;
    scrollbar_theme.ScrollbarTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scrollbar_theme.ScrollbarTheme.prototype;
  dart.addTypeTests(scrollbar_theme.ScrollbarTheme);
  dart.addTypeCaches(scrollbar_theme.ScrollbarTheme);
  dart.setMethodSignature(scrollbar_theme.ScrollbarTheme, () => ({
    __proto__: dart.getMethods(scrollbar_theme.ScrollbarTheme.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setStaticMethodSignature(scrollbar_theme.ScrollbarTheme, () => ['of']);
  dart.setLibraryUri(scrollbar_theme.ScrollbarTheme, I[38]);
  dart.setFieldSignature(scrollbar_theme.ScrollbarTheme, () => ({
    __proto__: dart.getFields(scrollbar_theme.ScrollbarTheme.__proto__),
    data: dart.finalFieldType(scrollbar_theme.ScrollbarThemeData)
  }));
  scrollbar_theme._lerpBool = function _lerpBool(a, b, t) {
    return t < 0.5 ? a : b;
  };
  const Object_Diagnosticable$36$8 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$8.new = function() {
  }).prototype = Object_Diagnosticable$36$8.prototype;
  dart.applyMixin(Object_Diagnosticable$36$8, diagnostics.Diagnosticable);
  radio_theme.RadioThemeData = class RadioThemeData extends Object_Diagnosticable$36$8 {
    get mouseCursor() {
      return this[S.mouseCursor$7];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    get fillColor() {
      return this[S.fillColor$1];
    }
    set fillColor(value) {
      super.fillColor = value;
    }
    get overlayColor() {
      return this[S.overlayColor$5];
    }
    set overlayColor(value) {
      super.overlayColor = value;
    }
    get splashRadius() {
      return this[S.splashRadius$2];
    }
    set splashRadius(value) {
      super.splashRadius = value;
    }
    get materialTapTargetSize() {
      return this[S.materialTapTargetSize$2];
    }
    set materialTapTargetSize(value) {
      super.materialTapTargetSize = value;
    }
    get visualDensity() {
      return this[S.visualDensity$2];
    }
    set visualDensity(value) {
      super.visualDensity = value;
    }
    static ['_#new#tearOff'](opts) {
      let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
      let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
      let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
      let splashRadius = opts && 'splashRadius' in opts ? opts.splashRadius : null;
      let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
      let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
      return new radio_theme.RadioThemeData.new({mouseCursor: mouseCursor, fillColor: fillColor, overlayColor: overlayColor, splashRadius: splashRadius, materialTapTargetSize: materialTapTargetSize, visualDensity: visualDensity});
    }
    copyWith(opts) {
      let t26, t26$, t26$0, t26$1, t26$2, t26$3;
      let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
      let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
      let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
      let splashRadius = opts && 'splashRadius' in opts ? opts.splashRadius : null;
      let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
      let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
      return new radio_theme.RadioThemeData.new({mouseCursor: (t26 = mouseCursor, t26 == null ? this.mouseCursor : t26), fillColor: (t26$ = fillColor, t26$ == null ? this.fillColor : t26$), overlayColor: (t26$0 = overlayColor, t26$0 == null ? this.overlayColor : t26$0), splashRadius: (t26$1 = splashRadius, t26$1 == null ? this.splashRadius : t26$1), materialTapTargetSize: (t26$2 = materialTapTargetSize, t26$2 == null ? this.materialTapTargetSize : t26$2), visualDensity: (t26$3 = visualDensity, t26$3 == null ? this.visualDensity : t26$3)});
    }
    static lerp(a, b, t) {
      let t26, t26$, t26$0, t26$1, t26$2, t26$3, t26$4, t26$5, t26$6, t26$7, t26$8, t26$9;
      return new radio_theme.RadioThemeData.new({mouseCursor: t < 0.5 ? (t26 = a, t26 == null ? null : t26.mouseCursor) : (t26$ = b, t26$ == null ? null : t26$.mouseCursor), fillColor: material_state.MaterialStateProperty.lerp(T$.ColorN(), (t26$0 = a, t26$0 == null ? null : t26$0.fillColor), (t26$1 = b, t26$1 == null ? null : t26$1.fillColor), t, C[23] || CT.C23), materialTapTargetSize: t < 0.5 ? (t26$2 = a, t26$2 == null ? null : t26$2.materialTapTargetSize) : (t26$3 = b, t26$3 == null ? null : t26$3.materialTapTargetSize), overlayColor: material_state.MaterialStateProperty.lerp(T$.ColorN(), (t26$4 = a, t26$4 == null ? null : t26$4.overlayColor), (t26$5 = b, t26$5 == null ? null : t26$5.overlayColor), t, C[23] || CT.C23), splashRadius: ui.lerpDouble((t26$6 = a, t26$6 == null ? null : t26$6.splashRadius), (t26$7 = b, t26$7 == null ? null : t26$7.splashRadius), t), visualDensity: t < 0.5 ? (t26$8 = a, t26$8 == null ? null : t26$8.visualDensity) : (t26$9 = b, t26$9 == null ? null : t26$9.visualDensity)});
    }
    get hashCode() {
      return core.Object.hash(this.mouseCursor, this.fillColor, this.overlayColor, this.splashRadius, this.materialTapTargetSize, this.visualDensity);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      if (!other[S.$runtimeType]._equals(this[S.$runtimeType])) {
        return false;
      }
      return radio_theme.RadioThemeData.is(other) && dart.equals(other.mouseCursor, this.mouseCursor) && dart.equals(other.fillColor, this.fillColor) && dart.equals(other.overlayColor, this.overlayColor) && other.splashRadius == this.splashRadius && other.materialTapTargetSize == this.materialTapTargetSize && dart.equals(other.visualDensity, this.visualDensity);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfMouseCursorN()).new("mouseCursor", this.mouseCursor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfColorN()).new("fillColor", this.fillColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfColorN()).new("overlayColor", this.overlayColor, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("splashRadius", this.splashRadius, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialTapTargetSize()).new("materialTapTargetSize", this.materialTapTargetSize, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfVisualDensity()).new("visualDensity", this.visualDensity, {defaultValue: null}));
    }
  };
  (radio_theme.RadioThemeData.new = function(opts) {
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
    let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
    let splashRadius = opts && 'splashRadius' in opts ? opts.splashRadius : null;
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
    this[S.mouseCursor$7] = mouseCursor;
    this[S.fillColor$1] = fillColor;
    this[S.overlayColor$5] = overlayColor;
    this[S.splashRadius$2] = splashRadius;
    this[S.materialTapTargetSize$2] = materialTapTargetSize;
    this[S.visualDensity$2] = visualDensity;
    ;
  }).prototype = radio_theme.RadioThemeData.prototype;
  dart.addTypeTests(radio_theme.RadioThemeData);
  dart.addTypeCaches(radio_theme.RadioThemeData);
  dart.setMethodSignature(radio_theme.RadioThemeData, () => ({
    __proto__: dart.getMethods(radio_theme.RadioThemeData.__proto__),
    copyWith: dart.fnType(radio_theme.RadioThemeData, [], {fillColor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color))), materialTapTargetSize: dart.nullable(theme_data.MaterialTapTargetSize), mouseCursor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(mouse_cursor.MouseCursor))), overlayColor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color))), splashRadius: dart.nullable(core.double), visualDensity: dart.nullable(theme_data.VisualDensity)}, {})
  }));
  dart.setStaticMethodSignature(radio_theme.RadioThemeData, () => ['lerp']);
  dart.setLibraryUri(radio_theme.RadioThemeData, I[39]);
  dart.setFieldSignature(radio_theme.RadioThemeData, () => ({
    __proto__: dart.getFields(radio_theme.RadioThemeData.__proto__),
    mouseCursor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(mouse_cursor.MouseCursor)))),
    fillColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    overlayColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    splashRadius: dart.finalFieldType(dart.nullable(core.double)),
    materialTapTargetSize: dart.finalFieldType(dart.nullable(theme_data.MaterialTapTargetSize)),
    visualDensity: dart.finalFieldType(dart.nullable(theme_data.VisualDensity))
  }));
  dart.defineExtensionMethods(radio_theme.RadioThemeData, ['_equals']);
  dart.defineExtensionAccessors(radio_theme.RadioThemeData, ['hashCode']);
  radio_theme.RadioTheme = class RadioTheme extends framework.InheritedWidget {
    get data() {
      return this[S.data$7];
    }
    set data(value) {
      super.data = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let data = opts && 'data' in opts ? opts.data : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new radio_theme.RadioTheme.new({key: key, data: data, child: child, $creationLocationd_0dea112b090073317d4: C[318] || CT.C318});
    }
    static of(context) {
      let t26, t26$;
      let radioTheme = context.dependOnInheritedWidgetOfExactType(radio_theme.RadioTheme);
      t26$ = (t26 = radioTheme, t26 == null ? null : t26.data);
      return t26$ == null ? theme$.Theme.of(context).radioTheme : t26$;
    }
    updateShouldNotify(oldWidget) {
      radio_theme.RadioTheme.as(oldWidget);
      return !this.data._equals(oldWidget.data);
    }
  };
  (radio_theme.RadioTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.data$7] = data;
    radio_theme.RadioTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = radio_theme.RadioTheme.prototype;
  dart.addTypeTests(radio_theme.RadioTheme);
  dart.addTypeCaches(radio_theme.RadioTheme);
  dart.setMethodSignature(radio_theme.RadioTheme, () => ({
    __proto__: dart.getMethods(radio_theme.RadioTheme.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setStaticMethodSignature(radio_theme.RadioTheme, () => ['of']);
  dart.setLibraryUri(radio_theme.RadioTheme, I[39]);
  dart.setFieldSignature(radio_theme.RadioTheme, () => ({
    __proto__: dart.getFields(radio_theme.RadioTheme.__proto__),
    data: dart.finalFieldType(radio_theme.RadioThemeData)
  }));
  const Object_Diagnosticable$36$9 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$9.new = function() {
  }).prototype = Object_Diagnosticable$36$9.prototype;
  dart.applyMixin(Object_Diagnosticable$36$9, diagnostics.Diagnosticable);
  progress_indicator_theme.ProgressIndicatorThemeData = class ProgressIndicatorThemeData extends Object_Diagnosticable$36$9 {
    get color() {
      return this[S.color$5];
    }
    set color(value) {
      super.color = value;
    }
    get linearTrackColor() {
      return this[S.linearTrackColor];
    }
    set linearTrackColor(value) {
      super.linearTrackColor = value;
    }
    get linearMinHeight() {
      return this[S.linearMinHeight];
    }
    set linearMinHeight(value) {
      super.linearMinHeight = value;
    }
    get circularTrackColor() {
      return this[S.circularTrackColor];
    }
    set circularTrackColor(value) {
      super.circularTrackColor = value;
    }
    get refreshBackgroundColor() {
      return this[S.refreshBackgroundColor];
    }
    set refreshBackgroundColor(value) {
      super.refreshBackgroundColor = value;
    }
    static ['_#new#tearOff'](opts) {
      let color = opts && 'color' in opts ? opts.color : null;
      let linearTrackColor = opts && 'linearTrackColor' in opts ? opts.linearTrackColor : null;
      let linearMinHeight = opts && 'linearMinHeight' in opts ? opts.linearMinHeight : null;
      let circularTrackColor = opts && 'circularTrackColor' in opts ? opts.circularTrackColor : null;
      let refreshBackgroundColor = opts && 'refreshBackgroundColor' in opts ? opts.refreshBackgroundColor : null;
      return new progress_indicator_theme.ProgressIndicatorThemeData.new({color: color, linearTrackColor: linearTrackColor, linearMinHeight: linearMinHeight, circularTrackColor: circularTrackColor, refreshBackgroundColor: refreshBackgroundColor});
    }
    copyWith(opts) {
      let t26, t26$, t26$0, t26$1, t26$2;
      let color = opts && 'color' in opts ? opts.color : null;
      let linearTrackColor = opts && 'linearTrackColor' in opts ? opts.linearTrackColor : null;
      let linearMinHeight = opts && 'linearMinHeight' in opts ? opts.linearMinHeight : null;
      let circularTrackColor = opts && 'circularTrackColor' in opts ? opts.circularTrackColor : null;
      let refreshBackgroundColor = opts && 'refreshBackgroundColor' in opts ? opts.refreshBackgroundColor : null;
      return new progress_indicator_theme.ProgressIndicatorThemeData.new({color: (t26 = color, t26 == null ? this.color : t26), linearTrackColor: (t26$ = linearTrackColor, t26$ == null ? this.linearTrackColor : t26$), linearMinHeight: (t26$0 = linearMinHeight, t26$0 == null ? this.linearMinHeight : t26$0), circularTrackColor: (t26$1 = circularTrackColor, t26$1 == null ? this.circularTrackColor : t26$1), refreshBackgroundColor: (t26$2 = refreshBackgroundColor, t26$2 == null ? this.refreshBackgroundColor : t26$2)});
    }
    static lerp(a, b, t) {
      let t26, t26$, t26$0, t26$1, t26$2, t26$3, t26$4, t26$5, t26$6, t26$7;
      if (a == null && b == null) {
        return null;
      }
      if (!(t !== null)) dart.assertFailed(null, I[40], 87, 12, "t != null");
      return new progress_indicator_theme.ProgressIndicatorThemeData.new({color: ui.Color.lerp((t26 = a, t26 == null ? null : t26.color), (t26$ = b, t26$ == null ? null : t26$.color), t), linearTrackColor: ui.Color.lerp((t26$0 = a, t26$0 == null ? null : t26$0.linearTrackColor), (t26$1 = b, t26$1 == null ? null : t26$1.linearTrackColor), t), linearMinHeight: ui.lerpDouble((t26$2 = a, t26$2 == null ? null : t26$2.linearMinHeight), (t26$3 = b, t26$3 == null ? null : t26$3.linearMinHeight), t), circularTrackColor: ui.Color.lerp((t26$4 = a, t26$4 == null ? null : t26$4.circularTrackColor), (t26$5 = b, t26$5 == null ? null : t26$5.circularTrackColor), t), refreshBackgroundColor: ui.Color.lerp((t26$6 = a, t26$6 == null ? null : t26$6.refreshBackgroundColor), (t26$7 = b, t26$7 == null ? null : t26$7.refreshBackgroundColor), t)});
    }
    get hashCode() {
      return core.Object.hash(this.color, this.linearTrackColor, this.linearMinHeight, this.circularTrackColor, this.refreshBackgroundColor);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      if (!other[S.$runtimeType]._equals(this[S.$runtimeType])) {
        return false;
      }
      return progress_indicator_theme.ProgressIndicatorThemeData.is(other) && dart.equals(other.color, this.color) && dart.equals(other.linearTrackColor, this.linearTrackColor) && other.linearMinHeight == this.linearMinHeight && dart.equals(other.circularTrackColor, this.circularTrackColor) && dart.equals(other.refreshBackgroundColor, this.refreshBackgroundColor);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new colors.ColorProperty.new("color", this.color, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("linearTrackColor", this.linearTrackColor, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("linearMinHeight", this.linearMinHeight, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("circularTrackColor", this.circularTrackColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("refreshBackgroundColor", this.refreshBackgroundColor, {defaultValue: null}));
    }
  };
  (progress_indicator_theme.ProgressIndicatorThemeData.new = function(opts) {
    let color = opts && 'color' in opts ? opts.color : null;
    let linearTrackColor = opts && 'linearTrackColor' in opts ? opts.linearTrackColor : null;
    let linearMinHeight = opts && 'linearMinHeight' in opts ? opts.linearMinHeight : null;
    let circularTrackColor = opts && 'circularTrackColor' in opts ? opts.circularTrackColor : null;
    let refreshBackgroundColor = opts && 'refreshBackgroundColor' in opts ? opts.refreshBackgroundColor : null;
    this[S.color$5] = color;
    this[S.linearTrackColor] = linearTrackColor;
    this[S.linearMinHeight] = linearMinHeight;
    this[S.circularTrackColor] = circularTrackColor;
    this[S.refreshBackgroundColor] = refreshBackgroundColor;
    ;
  }).prototype = progress_indicator_theme.ProgressIndicatorThemeData.prototype;
  dart.addTypeTests(progress_indicator_theme.ProgressIndicatorThemeData);
  dart.addTypeCaches(progress_indicator_theme.ProgressIndicatorThemeData);
  dart.setMethodSignature(progress_indicator_theme.ProgressIndicatorThemeData, () => ({
    __proto__: dart.getMethods(progress_indicator_theme.ProgressIndicatorThemeData.__proto__),
    copyWith: dart.fnType(progress_indicator_theme.ProgressIndicatorThemeData, [], {circularTrackColor: dart.nullable(ui.Color), color: dart.nullable(ui.Color), linearMinHeight: dart.nullable(core.double), linearTrackColor: dart.nullable(ui.Color), refreshBackgroundColor: dart.nullable(ui.Color)}, {})
  }));
  dart.setStaticMethodSignature(progress_indicator_theme.ProgressIndicatorThemeData, () => ['lerp']);
  dart.setLibraryUri(progress_indicator_theme.ProgressIndicatorThemeData, I[41]);
  dart.setFieldSignature(progress_indicator_theme.ProgressIndicatorThemeData, () => ({
    __proto__: dart.getFields(progress_indicator_theme.ProgressIndicatorThemeData.__proto__),
    color: dart.finalFieldType(dart.nullable(ui.Color)),
    linearTrackColor: dart.finalFieldType(dart.nullable(ui.Color)),
    linearMinHeight: dart.finalFieldType(dart.nullable(core.double)),
    circularTrackColor: dart.finalFieldType(dart.nullable(ui.Color)),
    refreshBackgroundColor: dart.finalFieldType(dart.nullable(ui.Color))
  }));
  dart.defineExtensionMethods(progress_indicator_theme.ProgressIndicatorThemeData, ['_equals']);
  dart.defineExtensionAccessors(progress_indicator_theme.ProgressIndicatorThemeData, ['hashCode']);
  progress_indicator_theme.ProgressIndicatorTheme = class ProgressIndicatorTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[S.data$8];
    }
    set data(value) {
      super.data = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let data = opts && 'data' in opts ? opts.data : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new progress_indicator_theme.ProgressIndicatorTheme.new({key: key, data: data, child: child, $creationLocationd_0dea112b090073317d4: C[319] || CT.C319});
    }
    static of(context) {
      let t26, t26$;
      let progressIndicatorTheme = context.dependOnInheritedWidgetOfExactType(progress_indicator_theme.ProgressIndicatorTheme);
      t26$ = (t26 = progressIndicatorTheme, t26 == null ? null : t26.data);
      return t26$ == null ? theme$.Theme.of(context).progressIndicatorTheme : t26$;
    }
    wrap(context, child) {
      return new progress_indicator_theme.ProgressIndicatorTheme.new({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C[320] || CT.C320});
    }
    updateShouldNotify(oldWidget) {
      progress_indicator_theme.ProgressIndicatorTheme.as(oldWidget);
      return !this.data._equals(oldWidget.data);
    }
  };
  (progress_indicator_theme.ProgressIndicatorTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.data$8] = data;
    if (!(data !== null)) dart.assertFailed(null, I[40], 160, 15, "data != null");
    progress_indicator_theme.ProgressIndicatorTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = progress_indicator_theme.ProgressIndicatorTheme.prototype;
  dart.addTypeTests(progress_indicator_theme.ProgressIndicatorTheme);
  dart.addTypeCaches(progress_indicator_theme.ProgressIndicatorTheme);
  dart.setMethodSignature(progress_indicator_theme.ProgressIndicatorTheme, () => ({
    __proto__: dart.getMethods(progress_indicator_theme.ProgressIndicatorTheme.__proto__),
    wrap: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget]),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setStaticMethodSignature(progress_indicator_theme.ProgressIndicatorTheme, () => ['of']);
  dart.setLibraryUri(progress_indicator_theme.ProgressIndicatorTheme, I[41]);
  dart.setFieldSignature(progress_indicator_theme.ProgressIndicatorTheme, () => ({
    __proto__: dart.getFields(progress_indicator_theme.ProgressIndicatorTheme.__proto__),
    data: dart.finalFieldType(progress_indicator_theme.ProgressIndicatorThemeData)
  }));
  const Object_Diagnosticable$36$10 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$10.new = function() {
  }).prototype = Object_Diagnosticable$36$10.prototype;
  dart.applyMixin(Object_Diagnosticable$36$10, diagnostics.Diagnosticable);
  popup_menu_theme.PopupMenuThemeData = class PopupMenuThemeData extends Object_Diagnosticable$36$10 {
    get color() {
      return this[S.color$6];
    }
    set color(value) {
      super.color = value;
    }
    get shape() {
      return this[S.shape$5];
    }
    set shape(value) {
      super.shape = value;
    }
    get elevation() {
      return this[S.elevation$6];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get textStyle() {
      return this[S.textStyle$2];
    }
    set textStyle(value) {
      super.textStyle = value;
    }
    get enableFeedback() {
      return this[S.enableFeedback$4];
    }
    set enableFeedback(value) {
      super.enableFeedback = value;
    }
    get mouseCursor() {
      return this[S.mouseCursor$8];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    static ['_#new#tearOff'](opts) {
      let color = opts && 'color' in opts ? opts.color : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
      let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
      return new popup_menu_theme.PopupMenuThemeData.new({color: color, shape: shape, elevation: elevation, textStyle: textStyle, enableFeedback: enableFeedback, mouseCursor: mouseCursor});
    }
    copyWith(opts) {
      let t26, t26$, t26$0, t26$1, t26$2, t26$3;
      let color = opts && 'color' in opts ? opts.color : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
      let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
      return new popup_menu_theme.PopupMenuThemeData.new({color: (t26 = color, t26 == null ? this.color : t26), shape: (t26$ = shape, t26$ == null ? this.shape : t26$), elevation: (t26$0 = elevation, t26$0 == null ? this.elevation : t26$0), textStyle: (t26$1 = textStyle, t26$1 == null ? this.textStyle : t26$1), enableFeedback: (t26$2 = enableFeedback, t26$2 == null ? this.enableFeedback : t26$2), mouseCursor: (t26$3 = mouseCursor, t26$3 == null ? this.mouseCursor : t26$3)});
    }
    static lerp(a, b, t) {
      let t26, t26$, t26$0, t26$1, t26$2, t26$3, t26$4, t26$5, t26$6, t26$7, t26$8, t26$9;
      if (!(t !== null)) dart.assertFailed(null, I[42], 93, 12, "t != null");
      if (a == null && b == null) {
        return null;
      }
      return new popup_menu_theme.PopupMenuThemeData.new({color: ui.Color.lerp((t26 = a, t26 == null ? null : t26.color), (t26$ = b, t26$ == null ? null : t26$.color), t), shape: borders.ShapeBorder.lerp((t26$0 = a, t26$0 == null ? null : t26$0.shape), (t26$1 = b, t26$1 == null ? null : t26$1.shape), t), elevation: ui.lerpDouble((t26$2 = a, t26$2 == null ? null : t26$2.elevation), (t26$3 = b, t26$3 == null ? null : t26$3.elevation), t), textStyle: text_style.TextStyle.lerp((t26$4 = a, t26$4 == null ? null : t26$4.textStyle), (t26$5 = b, t26$5 == null ? null : t26$5.textStyle), t), enableFeedback: t < 0.5 ? (t26$6 = a, t26$6 == null ? null : t26$6.enableFeedback) : (t26$7 = b, t26$7 == null ? null : t26$7.enableFeedback), mouseCursor: t < 0.5 ? (t26$8 = a, t26$8 == null ? null : t26$8.mouseCursor) : (t26$9 = b, t26$9 == null ? null : t26$9.mouseCursor)});
    }
    get hashCode() {
      return core.Object.hash(this.color, this.shape, this.elevation, this.textStyle, this.enableFeedback, this.mouseCursor);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      if (!other[S.$runtimeType]._equals(this[S.$runtimeType])) {
        return false;
      }
      return popup_menu_theme.PopupMenuThemeData.is(other) && other.elevation == this.elevation && dart.equals(other.color, this.color) && dart.equals(other.shape, this.shape) && dart.equals(other.textStyle, this.textStyle) && other.enableFeedback == this.enableFeedback && dart.equals(other.mouseCursor, this.mouseCursor);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new colors.ColorProperty.new("color", this.color, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfShapeBorder()).new("shape", this.shape, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("elevation", this.elevation, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("text style", this.textStyle, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("enableFeedback", this.enableFeedback, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfMouseCursorN()).new("mouseCursor", this.mouseCursor, {defaultValue: null}));
    }
  };
  (popup_menu_theme.PopupMenuThemeData.new = function(opts) {
    let color = opts && 'color' in opts ? opts.color : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
    let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    this[S.color$6] = color;
    this[S.shape$5] = shape;
    this[S.elevation$6] = elevation;
    this[S.textStyle$2] = textStyle;
    this[S.enableFeedback$4] = enableFeedback;
    this[S.mouseCursor$8] = mouseCursor;
    ;
  }).prototype = popup_menu_theme.PopupMenuThemeData.prototype;
  dart.addTypeTests(popup_menu_theme.PopupMenuThemeData);
  dart.addTypeCaches(popup_menu_theme.PopupMenuThemeData);
  dart.setMethodSignature(popup_menu_theme.PopupMenuThemeData, () => ({
    __proto__: dart.getMethods(popup_menu_theme.PopupMenuThemeData.__proto__),
    copyWith: dart.fnType(popup_menu_theme.PopupMenuThemeData, [], {color: dart.nullable(ui.Color), elevation: dart.nullable(core.double), enableFeedback: dart.nullable(core.bool), mouseCursor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(mouse_cursor.MouseCursor))), shape: dart.nullable(borders.ShapeBorder), textStyle: dart.nullable(text_style.TextStyle)}, {})
  }));
  dart.setStaticMethodSignature(popup_menu_theme.PopupMenuThemeData, () => ['lerp']);
  dart.setLibraryUri(popup_menu_theme.PopupMenuThemeData, I[43]);
  dart.setFieldSignature(popup_menu_theme.PopupMenuThemeData, () => ({
    __proto__: dart.getFields(popup_menu_theme.PopupMenuThemeData.__proto__),
    color: dart.finalFieldType(dart.nullable(ui.Color)),
    shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    textStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    enableFeedback: dart.finalFieldType(dart.nullable(core.bool)),
    mouseCursor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(mouse_cursor.MouseCursor))))
  }));
  dart.defineExtensionMethods(popup_menu_theme.PopupMenuThemeData, ['_equals']);
  dart.defineExtensionAccessors(popup_menu_theme.PopupMenuThemeData, ['hashCode']);
  popup_menu_theme.PopupMenuTheme = class PopupMenuTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[S.data$9];
    }
    set data(value) {
      super.data = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let data = opts && 'data' in opts ? opts.data : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new popup_menu_theme.PopupMenuTheme.new({key: key, data: data, child: child, $creationLocationd_0dea112b090073317d4: C[321] || CT.C321});
    }
    static of(context) {
      let t26, t26$;
      let popupMenuTheme = context.dependOnInheritedWidgetOfExactType(popup_menu_theme.PopupMenuTheme);
      t26$ = (t26 = popupMenuTheme, t26 == null ? null : t26.data);
      return t26$ == null ? theme$.Theme.of(context).popupMenuTheme : t26$;
    }
    wrap(context, child) {
      return new popup_menu_theme.PopupMenuTheme.new({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C[322] || CT.C322});
    }
    updateShouldNotify(oldWidget) {
      popup_menu_theme.PopupMenuTheme.as(oldWidget);
      return !this.data._equals(oldWidget.data);
    }
  };
  (popup_menu_theme.PopupMenuTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.data$9] = data;
    if (!(data !== null)) dart.assertFailed(null, I[42], 160, 15, "data != null");
    popup_menu_theme.PopupMenuTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = popup_menu_theme.PopupMenuTheme.prototype;
  dart.addTypeTests(popup_menu_theme.PopupMenuTheme);
  dart.addTypeCaches(popup_menu_theme.PopupMenuTheme);
  dart.setMethodSignature(popup_menu_theme.PopupMenuTheme, () => ({
    __proto__: dart.getMethods(popup_menu_theme.PopupMenuTheme.__proto__),
    wrap: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget]),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setStaticMethodSignature(popup_menu_theme.PopupMenuTheme, () => ['of']);
  dart.setLibraryUri(popup_menu_theme.PopupMenuTheme, I[43]);
  dart.setFieldSignature(popup_menu_theme.PopupMenuTheme, () => ({
    __proto__: dart.getFields(popup_menu_theme.PopupMenuTheme.__proto__),
    data: dart.finalFieldType(popup_menu_theme.PopupMenuThemeData)
  }));
  page_transitions_theme._FadeUpwardsPageTransition = class _FadeUpwardsPageTransition extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let routeAnimation = opts && 'routeAnimation' in opts ? opts.routeAnimation : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new page_transitions_theme._FadeUpwardsPageTransition.new({routeAnimation: routeAnimation, child: child, $creationLocationd_0dea112b090073317d4: C[323] || CT.C323});
    }
    build(context) {
      return new transitions.SlideTransition.new({position: this[S._positionAnimation], child: new transitions.FadeTransition.new({opacity: this[S._opacityAnimation], child: this.child, $creationLocationd_0dea112b090073317d4: C[324] || CT.C324}), $creationLocationd_0dea112b090073317d4: C[325] || CT.C325});
    }
  };
  (page_transitions_theme._FadeUpwardsPageTransition.new = function(opts) {
    let routeAnimation = opts && 'routeAnimation' in opts ? opts.routeAnimation : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this.child = child;
    this[S._positionAnimation] = routeAnimation.drive(ui.Offset, page_transitions_theme._FadeUpwardsPageTransition._bottomUpTween.chain(page_transitions_theme._FadeUpwardsPageTransition._fastOutSlowInTween));
    this[S._opacityAnimation] = routeAnimation.drive(core.double, page_transitions_theme._FadeUpwardsPageTransition._easeInTween);
    page_transitions_theme._FadeUpwardsPageTransition.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = page_transitions_theme._FadeUpwardsPageTransition.prototype;
  dart.addTypeTests(page_transitions_theme._FadeUpwardsPageTransition);
  dart.addTypeCaches(page_transitions_theme._FadeUpwardsPageTransition);
  dart.setMethodSignature(page_transitions_theme._FadeUpwardsPageTransition, () => ({
    __proto__: dart.getMethods(page_transitions_theme._FadeUpwardsPageTransition.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(page_transitions_theme._FadeUpwardsPageTransition, I[44]);
  dart.setFieldSignature(page_transitions_theme._FadeUpwardsPageTransition, () => ({
    __proto__: dart.getFields(page_transitions_theme._FadeUpwardsPageTransition.__proto__),
    [S._positionAnimation]: dart.finalFieldType(animation$.Animation$(ui.Offset)),
    [S._opacityAnimation]: dart.finalFieldType(animation$.Animation$(core.double)),
    child: dart.finalFieldType(framework.Widget)
  }));
  dart.setStaticFieldSignature(page_transitions_theme._FadeUpwardsPageTransition, () => ['_bottomUpTween', '_fastOutSlowInTween', '_easeInTween']);
  dart.defineLazy(page_transitions_theme._FadeUpwardsPageTransition, {
    /*page_transitions_theme._FadeUpwardsPageTransition._bottomUpTween*/get _bottomUpTween() {
      return new (T$.TweenOfOffset()).new({begin: C[326] || CT.C326, end: ui.Offset.zero});
    },
    /*page_transitions_theme._FadeUpwardsPageTransition._fastOutSlowInTween*/get _fastOutSlowInTween() {
      return new tween.CurveTween.new({curve: curves.Curves.fastOutSlowIn});
    },
    /*page_transitions_theme._FadeUpwardsPageTransition._easeInTween*/get _easeInTween() {
      return new tween.CurveTween.new({curve: curves.Curves.easeIn});
    }
  }, false);
  page_transitions_theme._OpenUpwardsPageTransition = class _OpenUpwardsPageTransition extends framework.StatelessWidget {
    get animation() {
      return this[S.animation$1];
    }
    set animation(value) {
      super.animation = value;
    }
    get secondaryAnimation() {
      return this[S.secondaryAnimation];
    }
    set secondaryAnimation(value) {
      super.secondaryAnimation = value;
    }
    get child() {
      return this[S.child$5];
    }
    set child(value) {
      super.child = value;
    }
    static ['_#new#tearOff'](opts) {
      let animation = opts && 'animation' in opts ? opts.animation : null;
      let secondaryAnimation = opts && 'secondaryAnimation' in opts ? opts.secondaryAnimation : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new page_transitions_theme._OpenUpwardsPageTransition.new({animation: animation, secondaryAnimation: secondaryAnimation, child: child, $creationLocationd_0dea112b090073317d4: C[327] || CT.C327});
    }
    build(context) {
      return new layout_builder.LayoutBuilder.new({builder: dart.fn((context, constraints) => {
          let size = constraints.biggest;
          let primaryAnimation = new animations.CurvedAnimation.new({parent: this.animation, curve: page_transitions_theme._OpenUpwardsPageTransition._transitionCurve, reverseCurve: page_transitions_theme._OpenUpwardsPageTransition._transitionCurve.flipped});
          let clipAnimation = new (T$.TweenOfdouble()).new({begin: 0.0, end: size.height}).animate(primaryAnimation);
          let opacityAnimation = page_transitions_theme._OpenUpwardsPageTransition._scrimOpacityTween.animate(primaryAnimation);
          let primaryTranslationAnimation = page_transitions_theme._OpenUpwardsPageTransition._primaryTranslationTween.animate(primaryAnimation);
          let secondaryTranslationAnimation = page_transitions_theme._OpenUpwardsPageTransition._secondaryTranslationTween.animate(new animations.CurvedAnimation.new({parent: this.secondaryAnimation, curve: page_transitions_theme._OpenUpwardsPageTransition._transitionCurve, reverseCurve: page_transitions_theme._OpenUpwardsPageTransition._transitionCurve.flipped}));
          return new transitions.AnimatedBuilder.new({animation: this.animation, builder: dart.fn((context, child) => new container.Container.new({color: colors$.Colors.black.withOpacity(opacityAnimation.value), alignment: alignment.Alignment.bottomLeft, child: new basic.ClipRect.new({child: new basic.SizedBox.new({height: clipAnimation.value, child: new basic.OverflowBox.new({alignment: alignment.Alignment.bottomLeft, maxHeight: size.height, child: child, $creationLocationd_0dea112b090073317d4: C[328] || CT.C328}), $creationLocationd_0dea112b090073317d4: C[329] || CT.C329}), $creationLocationd_0dea112b090073317d4: C[330] || CT.C330}), $creationLocationd_0dea112b090073317d4: C[331] || CT.C331}), T$.BuildContextAndWidgetNToContainer()), child: new transitions.AnimatedBuilder.new({animation: this.secondaryAnimation, child: new basic.FractionalTranslation.new({translation: primaryTranslationAnimation.value, child: this.child, $creationLocationd_0dea112b090073317d4: C[332] || CT.C332}), builder: dart.fn((context, child) => new basic.FractionalTranslation.new({translation: secondaryTranslationAnimation.value, child: child, $creationLocationd_0dea112b090073317d4: C[333] || CT.C333}), T$.BuildContextAndWidgetNToFractionalTranslation()), $creationLocationd_0dea112b090073317d4: C[334] || CT.C334}), $creationLocationd_0dea112b090073317d4: C[335] || CT.C335});
        }, T$.BuildContextAndBoxConstraintsToAnimatedBuilder()), $creationLocationd_0dea112b090073317d4: C[336] || CT.C336});
    }
  };
  (page_transitions_theme._OpenUpwardsPageTransition.new = function(opts) {
    let animation = opts && 'animation' in opts ? opts.animation : null;
    let secondaryAnimation = opts && 'secondaryAnimation' in opts ? opts.secondaryAnimation : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.animation$1] = animation;
    this[S.secondaryAnimation] = secondaryAnimation;
    this[S.child$5] = child;
    page_transitions_theme._OpenUpwardsPageTransition.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = page_transitions_theme._OpenUpwardsPageTransition.prototype;
  dart.addTypeTests(page_transitions_theme._OpenUpwardsPageTransition);
  dart.addTypeCaches(page_transitions_theme._OpenUpwardsPageTransition);
  dart.setMethodSignature(page_transitions_theme._OpenUpwardsPageTransition, () => ({
    __proto__: dart.getMethods(page_transitions_theme._OpenUpwardsPageTransition.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(page_transitions_theme._OpenUpwardsPageTransition, I[44]);
  dart.setFieldSignature(page_transitions_theme._OpenUpwardsPageTransition, () => ({
    __proto__: dart.getFields(page_transitions_theme._OpenUpwardsPageTransition.__proto__),
    animation: dart.finalFieldType(animation$.Animation$(core.double)),
    secondaryAnimation: dart.finalFieldType(animation$.Animation$(core.double)),
    child: dart.finalFieldType(framework.Widget)
  }));
  dart.setStaticFieldSignature(page_transitions_theme._OpenUpwardsPageTransition, () => ['_primaryTranslationTween', '_secondaryTranslationTween', '_scrimOpacityTween', '_transitionCurve']);
  dart.defineLazy(page_transitions_theme._OpenUpwardsPageTransition, {
    /*page_transitions_theme._OpenUpwardsPageTransition._primaryTranslationTween*/get _primaryTranslationTween() {
      return new (T$.TweenOfOffset()).new({begin: C[337] || CT.C337, end: ui.Offset.zero});
    },
    /*page_transitions_theme._OpenUpwardsPageTransition._secondaryTranslationTween*/get _secondaryTranslationTween() {
      return new (T$.TweenOfOffset()).new({begin: ui.Offset.zero, end: C[338] || CT.C338});
    },
    /*page_transitions_theme._OpenUpwardsPageTransition._scrimOpacityTween*/get _scrimOpacityTween() {
      return new (T$.TweenOfdouble()).new({begin: 0.0, end: 0.25});
    },
    /*page_transitions_theme._OpenUpwardsPageTransition._transitionCurve*/get _transitionCurve() {
      return C[339] || CT.C339;
    }
  }, false);
  page_transitions_theme._ZoomPageTransition = class _ZoomPageTransition extends framework.StatelessWidget {
    get animation() {
      return this[S.animation$2];
    }
    set animation(value) {
      super.animation = value;
    }
    get secondaryAnimation() {
      return this[S.secondaryAnimation$1];
    }
    set secondaryAnimation(value) {
      super.secondaryAnimation = value;
    }
    get child() {
      return this[S.child$6];
    }
    set child(value) {
      super.child = value;
    }
    static ['_#new#tearOff'](opts) {
      let animation = opts && 'animation' in opts ? opts.animation : null;
      let secondaryAnimation = opts && 'secondaryAnimation' in opts ? opts.secondaryAnimation : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new page_transitions_theme._ZoomPageTransition.new({animation: animation, secondaryAnimation: secondaryAnimation, child: child, $creationLocationd_0dea112b090073317d4: C[340] || CT.C340});
    }
    build(context) {
      return new dual_transition_builder.DualTransitionBuilder.new({animation: this.animation, forwardBuilder: dart.fn((context, animation, child) => new page_transitions_theme._ZoomEnterTransition.new({animation: animation, child: child, $creationLocationd_0dea112b090073317d4: C[341] || CT.C341}), T$.BuildContextAndAnimationOfdoubleAndWidgetNTo_ZoomEnterTransition()), reverseBuilder: dart.fn((context, animation, child) => new page_transitions_theme._ZoomExitTransition.new({animation: animation, reverse: true, child: child, $creationLocationd_0dea112b090073317d4: C[342] || CT.C342}), T$.BuildContextAndAnimationOfdoubleAndWidgetNTo_ZoomExitTransition()), child: new dual_transition_builder.DualTransitionBuilder.new({animation: new animations.ReverseAnimation.new(this.secondaryAnimation), forwardBuilder: dart.fn((context, animation, child) => new page_transitions_theme._ZoomEnterTransition.new({animation: animation, reverse: true, child: child, $creationLocationd_0dea112b090073317d4: C[343] || CT.C343}), T$.BuildContextAndAnimationOfdoubleAndWidgetNTo_ZoomEnterTransition()), reverseBuilder: dart.fn((context, animation, child) => new page_transitions_theme._ZoomExitTransition.new({animation: animation, child: child, $creationLocationd_0dea112b090073317d4: C[344] || CT.C344}), T$.BuildContextAndAnimationOfdoubleAndWidgetNTo_ZoomExitTransition()), child: this.child, $creationLocationd_0dea112b090073317d4: C[345] || CT.C345}), $creationLocationd_0dea112b090073317d4: C[346] || CT.C346});
    }
  };
  (page_transitions_theme._ZoomPageTransition.new = function(opts) {
    let animation = opts && 'animation' in opts ? opts.animation : null;
    let secondaryAnimation = opts && 'secondaryAnimation' in opts ? opts.secondaryAnimation : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.animation$2] = animation;
    this[S.secondaryAnimation$1] = secondaryAnimation;
    this[S.child$6] = child;
    if (!(animation !== null)) dart.assertFailed(null, I[45], 157, 15, "animation != null");
    if (!(secondaryAnimation !== null)) dart.assertFailed(null, I[45], 158, 15, "secondaryAnimation != null");
    page_transitions_theme._ZoomPageTransition.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = page_transitions_theme._ZoomPageTransition.prototype;
  dart.addTypeTests(page_transitions_theme._ZoomPageTransition);
  dart.addTypeCaches(page_transitions_theme._ZoomPageTransition);
  dart.setMethodSignature(page_transitions_theme._ZoomPageTransition, () => ({
    __proto__: dart.getMethods(page_transitions_theme._ZoomPageTransition.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(page_transitions_theme._ZoomPageTransition, I[44]);
  dart.setFieldSignature(page_transitions_theme._ZoomPageTransition, () => ({
    __proto__: dart.getFields(page_transitions_theme._ZoomPageTransition.__proto__),
    animation: dart.finalFieldType(animation$.Animation$(core.double)),
    secondaryAnimation: dart.finalFieldType(animation$.Animation$(core.double)),
    child: dart.finalFieldType(dart.nullable(framework.Widget))
  }));
  dart.setStaticFieldSignature(page_transitions_theme._ZoomPageTransition, () => ['fastOutExtraSlowInTweenSequenceItems', '_scaleCurveSequence']);
  dart.defineLazy(page_transitions_theme._ZoomPageTransition, {
    /*page_transitions_theme._ZoomPageTransition.fastOutExtraSlowInTweenSequenceItems*/get fastOutExtraSlowInTweenSequenceItems() {
      return T$.JSArrayOfTweenSequenceItemOfdouble().of([new (T$.TweenSequenceItemOfdouble()).new({tween: new (T$.TweenOfdouble()).new({begin: 0.0, end: 0.4}).chain(new tween.CurveTween.new({curve: C[347] || CT.C347})), weight: 0.166666}), new (T$.TweenSequenceItemOfdouble()).new({tween: new (T$.TweenOfdouble()).new({begin: 0.4, end: 1.0}).chain(new tween.CurveTween.new({curve: C[348] || CT.C348})), weight: 1.0 - 0.166666})]);
    },
    /*page_transitions_theme._ZoomPageTransition._scaleCurveSequence*/get _scaleCurveSequence() {
      return new (T$.TweenSequenceOfdouble()).new(page_transitions_theme._ZoomPageTransition.fastOutExtraSlowInTweenSequenceItems);
    }
  }, false);
  page_transitions_theme._ZoomEnterTransition = class _ZoomEnterTransition extends framework.StatelessWidget {
    get animation() {
      return this[S.animation$3];
    }
    set animation(value) {
      super.animation = value;
    }
    get child() {
      return this[S.child$7];
    }
    set child(value) {
      super.child = value;
    }
    get reverse() {
      return this[S.reverse];
    }
    set reverse(value) {
      super.reverse = value;
    }
    static ['_#new#tearOff'](opts) {
      let animation = opts && 'animation' in opts ? opts.animation : null;
      let reverse = opts && 'reverse' in opts ? opts.reverse : false;
      let child = opts && 'child' in opts ? opts.child : null;
      return new page_transitions_theme._ZoomEnterTransition.new({animation: animation, reverse: reverse, child: child, $creationLocationd_0dea112b090073317d4: C[349] || CT.C349});
    }
    build(context) {
      let opacity = 0.0;
      if (!this.reverse && this.animation.status !== animation$.AnimationStatus.completed) {
        opacity = dart.nullCheck(page_transitions_theme._ZoomEnterTransition._scrimOpacityTween.evaluate(this.animation));
      }
      let fadeTransition = this.reverse ? animations.kAlwaysCompleteAnimation : page_transitions_theme._ZoomEnterTransition._fadeInTransition.animate(this.animation);
      let scaleTransition = (this.reverse ? page_transitions_theme._ZoomEnterTransition._scaleDownTransition : page_transitions_theme._ZoomEnterTransition._scaleUpTransition).animate(this.animation);
      return new transitions.AnimatedBuilder.new({animation: this.animation, builder: dart.fn((context, child) => new basic.ColoredBox.new({color: colors$.Colors.black.withOpacity(opacity), child: child, $creationLocationd_0dea112b090073317d4: C[350] || CT.C350}), T$.BuildContextAndWidgetNToColoredBox()), child: new transitions.FadeTransition.new({opacity: fadeTransition, child: new transitions.ScaleTransition.new({scale: scaleTransition, child: this.child, $creationLocationd_0dea112b090073317d4: C[351] || CT.C351}), $creationLocationd_0dea112b090073317d4: C[352] || CT.C352}), $creationLocationd_0dea112b090073317d4: C[353] || CT.C353});
    }
  };
  (page_transitions_theme._ZoomEnterTransition.new = function(opts) {
    let animation = opts && 'animation' in opts ? opts.animation : null;
    let reverse = opts && 'reverse' in opts ? opts.reverse : false;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.animation$3] = animation;
    this[S.reverse] = reverse;
    this[S.child$7] = child;
    if (!(animation !== null)) dart.assertFailed(null, I[45], 258, 15, "animation != null");
    if (!(reverse !== null)) dart.assertFailed(null, I[45], 259, 15, "reverse != null");
    page_transitions_theme._ZoomEnterTransition.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = page_transitions_theme._ZoomEnterTransition.prototype;
  dart.addTypeTests(page_transitions_theme._ZoomEnterTransition);
  dart.addTypeCaches(page_transitions_theme._ZoomEnterTransition);
  dart.setMethodSignature(page_transitions_theme._ZoomEnterTransition, () => ({
    __proto__: dart.getMethods(page_transitions_theme._ZoomEnterTransition.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(page_transitions_theme._ZoomEnterTransition, I[44]);
  dart.setFieldSignature(page_transitions_theme._ZoomEnterTransition, () => ({
    __proto__: dart.getFields(page_transitions_theme._ZoomEnterTransition.__proto__),
    animation: dart.finalFieldType(animation$.Animation$(core.double)),
    child: dart.finalFieldType(dart.nullable(framework.Widget)),
    reverse: dart.finalFieldType(core.bool)
  }));
  dart.setStaticFieldSignature(page_transitions_theme._ZoomEnterTransition, () => ['_fadeInTransition', '_scaleDownTransition', '_scaleUpTransition', '_scrimOpacityTween']);
  dart.defineLazy(page_transitions_theme._ZoomEnterTransition, {
    /*page_transitions_theme._ZoomEnterTransition._fadeInTransition*/get _fadeInTransition() {
      return new (T$.TweenOfdouble()).new({begin: 0.0, end: 1.0}).chain(new tween.CurveTween.new({curve: C[354] || CT.C354}));
    },
    /*page_transitions_theme._ZoomEnterTransition._scaleDownTransition*/get _scaleDownTransition() {
      return new (T$.TweenOfdouble()).new({begin: 1.1, end: 1.0}).chain(page_transitions_theme._ZoomPageTransition._scaleCurveSequence);
    },
    /*page_transitions_theme._ZoomEnterTransition._scaleUpTransition*/get _scaleUpTransition() {
      return new (T$.TweenOfdouble()).new({begin: 0.85, end: 1.0}).chain(page_transitions_theme._ZoomPageTransition._scaleCurveSequence);
    },
    /*page_transitions_theme._ZoomEnterTransition._scrimOpacityTween*/get _scrimOpacityTween() {
      return new (T$.TweenOfdoubleN()).new({begin: 0.0, end: 0.6}).chain(new tween.CurveTween.new({curve: C[356] || CT.C356}));
    }
  }, false);
  page_transitions_theme._ZoomExitTransition = class _ZoomExitTransition extends framework.StatelessWidget {
    get animation() {
      return this[S.animation$4];
    }
    set animation(value) {
      super.animation = value;
    }
    get reverse() {
      return this[S.reverse$1];
    }
    set reverse(value) {
      super.reverse = value;
    }
    get child() {
      return this[S.child$8];
    }
    set child(value) {
      super.child = value;
    }
    static ['_#new#tearOff'](opts) {
      let animation = opts && 'animation' in opts ? opts.animation : null;
      let reverse = opts && 'reverse' in opts ? opts.reverse : false;
      let child = opts && 'child' in opts ? opts.child : null;
      return new page_transitions_theme._ZoomExitTransition.new({animation: animation, reverse: reverse, child: child, $creationLocationd_0dea112b090073317d4: C[357] || CT.C357});
    }
    build(context) {
      let fadeTransition = this.reverse ? page_transitions_theme._ZoomExitTransition._fadeOutTransition.animate(this.animation) : animations.kAlwaysCompleteAnimation;
      let scaleTransition = (this.reverse ? page_transitions_theme._ZoomExitTransition._scaleDownTransition : page_transitions_theme._ZoomExitTransition._scaleUpTransition).animate(this.animation);
      return new transitions.FadeTransition.new({opacity: fadeTransition, child: new transitions.ScaleTransition.new({scale: scaleTransition, child: this.child, $creationLocationd_0dea112b090073317d4: C[358] || CT.C358}), $creationLocationd_0dea112b090073317d4: C[359] || CT.C359});
    }
  };
  (page_transitions_theme._ZoomExitTransition.new = function(opts) {
    let animation = opts && 'animation' in opts ? opts.animation : null;
    let reverse = opts && 'reverse' in opts ? opts.reverse : false;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S.animation$4] = animation;
    this[S.reverse$1] = reverse;
    this[S.child$8] = child;
    if (!(animation !== null)) dart.assertFailed(null, I[45], 332, 15, "animation != null");
    if (!(reverse !== null)) dart.assertFailed(null, I[45], 333, 15, "reverse != null");
    page_transitions_theme._ZoomExitTransition.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = page_transitions_theme._ZoomExitTransition.prototype;
  dart.addTypeTests(page_transitions_theme._ZoomExitTransition);
  dart.addTypeCaches(page_transitions_theme._ZoomExitTransition);
  dart.setMethodSignature(page_transitions_theme._ZoomExitTransition, () => ({
    __proto__: dart.getMethods(page_transitions_theme._ZoomExitTransition.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(page_transitions_theme._ZoomExitTransition, I[44]);
  dart.setFieldSignature(page_transitions_theme._ZoomExitTransition, () => ({
    __proto__: dart.getFields(page_transitions_theme._ZoomExitTransition.__proto__),
    animation: dart.finalFieldType(animation$.Animation$(core.double)),
    reverse: dart.finalFieldType(core.bool),
    child: dart.finalFieldType(dart.nullable(framework.Widget))
  }));
  dart.setStaticFieldSignature(page_transitions_theme._ZoomExitTransition, () => ['_fadeOutTransition', '_scaleUpTransition', '_scaleDownTransition']);
  dart.defineLazy(page_transitions_theme._ZoomExitTransition, {
    /*page_transitions_theme._ZoomExitTransition._fadeOutTransition*/get _fadeOutTransition() {
      return new (T$.TweenOfdouble()).new({begin: 1.0, end: 0.0}).chain(new tween.CurveTween.new({curve: C[360] || CT.C360}));
    },
    /*page_transitions_theme._ZoomExitTransition._scaleUpTransition*/get _scaleUpTransition() {
      return new (T$.TweenOfdouble()).new({begin: 1.0, end: 1.05}).chain(page_transitions_theme._ZoomPageTransition._scaleCurveSequence);
    },
    /*page_transitions_theme._ZoomExitTransition._scaleDownTransition*/get _scaleDownTransition() {
      return new (T$.TweenOfdouble()).new({begin: 1.0, end: 0.9}).chain(page_transitions_theme._ZoomPageTransition._scaleCurveSequence);
    }
  }, false);
  page_transitions_theme.PageTransitionsBuilder = class PageTransitionsBuilder extends core.Object {};
  (page_transitions_theme.PageTransitionsBuilder.new = function() {
    ;
  }).prototype = page_transitions_theme.PageTransitionsBuilder.prototype;
  dart.addTypeTests(page_transitions_theme.PageTransitionsBuilder);
  dart.addTypeCaches(page_transitions_theme.PageTransitionsBuilder);
  dart.setLibraryUri(page_transitions_theme.PageTransitionsBuilder, I[44]);
  page_transitions_theme.FadeUpwardsPageTransitionsBuilder = class FadeUpwardsPageTransitionsBuilder extends page_transitions_theme.PageTransitionsBuilder {
    static ['_#new#tearOff']() {
      return new page_transitions_theme.FadeUpwardsPageTransitionsBuilder.new();
    }
    buildTransitions(T, route, context, animation, secondaryAnimation, child) {
      return new page_transitions_theme._FadeUpwardsPageTransition.new({routeAnimation: animation, child: child, $creationLocationd_0dea112b090073317d4: C[361] || CT.C361});
    }
  };
  (page_transitions_theme.FadeUpwardsPageTransitionsBuilder.new = function() {
    page_transitions_theme.FadeUpwardsPageTransitionsBuilder.__proto__.new.call(this);
    ;
  }).prototype = page_transitions_theme.FadeUpwardsPageTransitionsBuilder.prototype;
  dart.addTypeTests(page_transitions_theme.FadeUpwardsPageTransitionsBuilder);
  dart.addTypeCaches(page_transitions_theme.FadeUpwardsPageTransitionsBuilder);
  dart.setMethodSignature(page_transitions_theme.FadeUpwardsPageTransitionsBuilder, () => ({
    __proto__: dart.getMethods(page_transitions_theme.FadeUpwardsPageTransitionsBuilder.__proto__),
    buildTransitions: dart.gFnType(T => [framework.Widget, [dart.nullable(pages.PageRoute$(T)), dart.nullable(framework.BuildContext), animation$.Animation$(core.double), dart.nullable(animation$.Animation$(core.double)), framework.Widget]], T => [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(page_transitions_theme.FadeUpwardsPageTransitionsBuilder, I[44]);
  page_transitions_theme.OpenUpwardsPageTransitionsBuilder = class OpenUpwardsPageTransitionsBuilder extends page_transitions_theme.PageTransitionsBuilder {
    static ['_#new#tearOff']() {
      return new page_transitions_theme.OpenUpwardsPageTransitionsBuilder.new();
    }
    buildTransitions(T, route, context, animation, secondaryAnimation, child) {
      return new page_transitions_theme._OpenUpwardsPageTransition.new({animation: animation, secondaryAnimation: secondaryAnimation, child: child, $creationLocationd_0dea112b090073317d4: C[362] || CT.C362});
    }
  };
  (page_transitions_theme.OpenUpwardsPageTransitionsBuilder.new = function() {
    page_transitions_theme.OpenUpwardsPageTransitionsBuilder.__proto__.new.call(this);
    ;
  }).prototype = page_transitions_theme.OpenUpwardsPageTransitionsBuilder.prototype;
  dart.addTypeTests(page_transitions_theme.OpenUpwardsPageTransitionsBuilder);
  dart.addTypeCaches(page_transitions_theme.OpenUpwardsPageTransitionsBuilder);
  dart.setMethodSignature(page_transitions_theme.OpenUpwardsPageTransitionsBuilder, () => ({
    __proto__: dart.getMethods(page_transitions_theme.OpenUpwardsPageTransitionsBuilder.__proto__),
    buildTransitions: dart.gFnType(T => [framework.Widget, [dart.nullable(pages.PageRoute$(T)), dart.nullable(framework.BuildContext), animation$.Animation$(core.double), animation$.Animation$(core.double), framework.Widget]], T => [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(page_transitions_theme.OpenUpwardsPageTransitionsBuilder, I[44]);
  page_transitions_theme.ZoomPageTransitionsBuilder = class ZoomPageTransitionsBuilder extends page_transitions_theme.PageTransitionsBuilder {
    static ['_#new#tearOff']() {
      return new page_transitions_theme.ZoomPageTransitionsBuilder.new();
    }
    buildTransitions(T, route, context, animation, secondaryAnimation, child) {
      return new page_transitions_theme._ZoomPageTransition.new({animation: animation, secondaryAnimation: secondaryAnimation, child: child, $creationLocationd_0dea112b090073317d4: C[363] || CT.C363});
    }
  };
  (page_transitions_theme.ZoomPageTransitionsBuilder.new = function() {
    page_transitions_theme.ZoomPageTransitionsBuilder.__proto__.new.call(this);
    ;
  }).prototype = page_transitions_theme.ZoomPageTransitionsBuilder.prototype;
  dart.addTypeTests(page_transitions_theme.ZoomPageTransitionsBuilder);
  dart.addTypeCaches(page_transitions_theme.ZoomPageTransitionsBuilder);
  dart.setMethodSignature(page_transitions_theme.ZoomPageTransitionsBuilder, () => ({
    __proto__: dart.getMethods(page_transitions_theme.ZoomPageTransitionsBuilder.__proto__),
    buildTransitions: dart.gFnType(T => [framework.Widget, [dart.nullable(pages.PageRoute$(T)), dart.nullable(framework.BuildContext), animation$.Animation$(core.double), animation$.Animation$(core.double), dart.nullable(framework.Widget)]], T => [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(page_transitions_theme.ZoomPageTransitionsBuilder, I[44]);
  page_transitions_theme.CupertinoPageTransitionsBuilder = class CupertinoPageTransitionsBuilder extends page_transitions_theme.PageTransitionsBuilder {
    static ['_#new#tearOff']() {
      return new page_transitions_theme.CupertinoPageTransitionsBuilder.new();
    }
    buildTransitions(T, route, context, animation, secondaryAnimation, child) {
      return route$.CupertinoRouteTransitionMixin.buildPageTransitions(T, route, context, animation, secondaryAnimation, child);
    }
  };
  (page_transitions_theme.CupertinoPageTransitionsBuilder.new = function() {
    page_transitions_theme.CupertinoPageTransitionsBuilder.__proto__.new.call(this);
    ;
  }).prototype = page_transitions_theme.CupertinoPageTransitionsBuilder.prototype;
  dart.addTypeTests(page_transitions_theme.CupertinoPageTransitionsBuilder);
  dart.addTypeCaches(page_transitions_theme.CupertinoPageTransitionsBuilder);
  dart.setMethodSignature(page_transitions_theme.CupertinoPageTransitionsBuilder, () => ({
    __proto__: dart.getMethods(page_transitions_theme.CupertinoPageTransitionsBuilder.__proto__),
    buildTransitions: dart.gFnType(T => [framework.Widget, [pages.PageRoute$(T), framework.BuildContext, animation$.Animation$(core.double), animation$.Animation$(core.double), framework.Widget]], T => [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(page_transitions_theme.CupertinoPageTransitionsBuilder, I[44]);
  const Object_Diagnosticable$36$11 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$11.new = function() {
  }).prototype = Object_Diagnosticable$36$11.prototype;
  dart.applyMixin(Object_Diagnosticable$36$11, diagnostics.Diagnosticable);
  page_transitions_theme.PageTransitionsTheme = class PageTransitionsTheme extends Object_Diagnosticable$36$11 {
    get [S._builders$1]() {
      return this[S._builders];
    }
    set [S._builders$1](value) {
      super[S._builders$1] = value;
    }
    static ['_#new#tearOff'](opts) {
      let builders = opts && 'builders' in opts ? opts.builders : C[364] || CT.C364;
      return new page_transitions_theme.PageTransitionsTheme.new({builders: builders});
    }
    get builders() {
      return this[S._builders$1];
    }
    buildTransitions(T, route, context, animation, secondaryAnimation, child) {
      let t26;
      let platform = theme$.Theme.of(context).platform;
      if (route$.CupertinoRouteTransitionMixin.isPopGestureInProgress(route)) {
        platform = platform$.TargetPlatform.iOS;
      }
      let matchingBuilder = (t26 = this.builders[S.$_get](platform), t26 == null ? C[365] || CT.C365 : t26);
      return matchingBuilder.buildTransitions(T, route, context, animation, secondaryAnimation, child);
    }
    [S._all](builders) {
      return platform$.TargetPlatform.values[S.$map](T$.PageTransitionsBuilderN(), dart.fn(platform => builders[S.$_get](platform), T$.TargetPlatformToPageTransitionsBuilderN()))[S.$toList]();
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      if (!other[S.$runtimeType]._equals(this[S.$runtimeType])) {
        return false;
      }
      if (page_transitions_theme.PageTransitionsTheme.is(other) && this.builders === other.builders) {
        return true;
      }
      return page_transitions_theme.PageTransitionsTheme.is(other) && collections.listEquals(T$.PageTransitionsBuilderN(), this[S._all](other.builders), this[S._all](this.builders));
    }
    get hashCode() {
      return core.Object.hashAll(this[S._all](this.builders));
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfMapOfTargetPlatform$PageTransitionsBuilder()).new("builders", this.builders, {defaultValue: page_transitions_theme.PageTransitionsTheme._defaultBuilders}));
    }
  };
  (page_transitions_theme.PageTransitionsTheme.new = function(opts) {
    let builders = opts && 'builders' in opts ? opts.builders : C[364] || CT.C364;
    this[S._builders] = builders;
    ;
  }).prototype = page_transitions_theme.PageTransitionsTheme.prototype;
  dart.addTypeTests(page_transitions_theme.PageTransitionsTheme);
  dart.addTypeCaches(page_transitions_theme.PageTransitionsTheme);
  dart.setMethodSignature(page_transitions_theme.PageTransitionsTheme, () => ({
    __proto__: dart.getMethods(page_transitions_theme.PageTransitionsTheme.__proto__),
    buildTransitions: dart.gFnType(T => [framework.Widget, [pages.PageRoute$(T), framework.BuildContext, animation$.Animation$(core.double), animation$.Animation$(core.double), framework.Widget]], T => [dart.nullable(core.Object)]),
    [S._all]: dart.fnType(core.List$(dart.nullable(page_transitions_theme.PageTransitionsBuilder)), [core.Map$(platform$.TargetPlatform, page_transitions_theme.PageTransitionsBuilder)])
  }));
  dart.setGetterSignature(page_transitions_theme.PageTransitionsTheme, () => ({
    __proto__: dart.getGetters(page_transitions_theme.PageTransitionsTheme.__proto__),
    builders: core.Map$(platform$.TargetPlatform, page_transitions_theme.PageTransitionsBuilder)
  }));
  dart.setLibraryUri(page_transitions_theme.PageTransitionsTheme, I[44]);
  dart.setFieldSignature(page_transitions_theme.PageTransitionsTheme, () => ({
    __proto__: dart.getFields(page_transitions_theme.PageTransitionsTheme.__proto__),
    [S._builders$1]: dart.finalFieldType(core.Map$(platform$.TargetPlatform, page_transitions_theme.PageTransitionsBuilder))
  }));
  dart.setStaticFieldSignature(page_transitions_theme.PageTransitionsTheme, () => ['_defaultBuilders']);
  dart.defineExtensionMethods(page_transitions_theme.PageTransitionsTheme, ['_equals']);
  dart.defineExtensionAccessors(page_transitions_theme.PageTransitionsTheme, ['hashCode']);
  dart.defineLazy(page_transitions_theme.PageTransitionsTheme, {
    /*page_transitions_theme.PageTransitionsTheme._defaultBuilders*/get _defaultBuilders() {
      return C[364] || CT.C364;
    }
  }, false);
  const Object_Diagnosticable$36$12 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$12.new = function() {
  }).prototype = Object_Diagnosticable$36$12.prototype;
  dart.applyMixin(Object_Diagnosticable$36$12, diagnostics.Diagnosticable);
  outlined_button_theme.OutlinedButtonThemeData = class OutlinedButtonThemeData extends Object_Diagnosticable$36$12 {
    get style() {
      return this[S.style$4];
    }
    set style(value) {
      super.style = value;
    }
    static ['_#new#tearOff'](opts) {
      let style = opts && 'style' in opts ? opts.style : null;
      return new outlined_button_theme.OutlinedButtonThemeData.new({style: style});
    }
    static lerp(a, b, t) {
      let t26, t26$;
      if (!(t !== null)) dart.assertFailed(null, I[46], 49, 13, "t != null");
      if (a == null && b == null) {
        return null;
      }
      return new outlined_button_theme.OutlinedButtonThemeData.new({style: button_style.ButtonStyle.lerp((t26 = a, t26 == null ? null : t26.style), (t26$ = b, t26$ == null ? null : t26$.style), t)});
    }
    get hashCode() {
      return dart.hashCode(this.style);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      if (!other[S.$runtimeType]._equals(this[S.$runtimeType])) {
        return false;
      }
      return outlined_button_theme.OutlinedButtonThemeData.is(other) && dart.equals(other.style, this.style);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfButtonStyle()).new("style", this.style, {defaultValue: null}));
    }
  };
  (outlined_button_theme.OutlinedButtonThemeData.new = function(opts) {
    let style = opts && 'style' in opts ? opts.style : null;
    this[S.style$4] = style;
    ;
  }).prototype = outlined_button_theme.OutlinedButtonThemeData.prototype;
  dart.addTypeTests(outlined_button_theme.OutlinedButtonThemeData);
  dart.addTypeCaches(outlined_button_theme.OutlinedButtonThemeData);
  dart.setStaticMethodSignature(outlined_button_theme.OutlinedButtonThemeData, () => ['lerp']);
  dart.setLibraryUri(outlined_button_theme.OutlinedButtonThemeData, I[47]);
  dart.setFieldSignature(outlined_button_theme.OutlinedButtonThemeData, () => ({
    __proto__: dart.getFields(outlined_button_theme.OutlinedButtonThemeData.__proto__),
    style: dart.finalFieldType(dart.nullable(button_style.ButtonStyle))
  }));
  dart.defineExtensionMethods(outlined_button_theme.OutlinedButtonThemeData, ['_equals']);
  dart.defineExtensionAccessors(outlined_button_theme.OutlinedButtonThemeData, ['hashCode']);
  outlined_button_theme.OutlinedButtonTheme = class OutlinedButtonTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[S$.data$10];
    }
    set data(value) {
      super.data = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let data = opts && 'data' in opts ? opts.data : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new outlined_button_theme.OutlinedButtonTheme.new({key: key, data: data, child: child, $creationLocationd_0dea112b090073317d4: C[367] || CT.C367});
    }
    static of(context) {
      let t26, t26$;
      let buttonTheme = context.dependOnInheritedWidgetOfExactType(outlined_button_theme.OutlinedButtonTheme);
      t26$ = (t26 = buttonTheme, t26 == null ? null : t26.data);
      return t26$ == null ? theme$.Theme.of(context).outlinedButtonTheme : t26$;
    }
    wrap(context, child) {
      return new outlined_button_theme.OutlinedButtonTheme.new({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C[368] || CT.C368});
    }
    updateShouldNotify(oldWidget) {
      outlined_button_theme.OutlinedButtonTheme.as(oldWidget);
      return !this.data._equals(oldWidget.data);
    }
  };
  (outlined_button_theme.OutlinedButtonTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.data$10] = data;
    if (!(data !== null)) dart.assertFailed(null, I[46], 98, 15, "data != null");
    outlined_button_theme.OutlinedButtonTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = outlined_button_theme.OutlinedButtonTheme.prototype;
  dart.addTypeTests(outlined_button_theme.OutlinedButtonTheme);
  dart.addTypeCaches(outlined_button_theme.OutlinedButtonTheme);
  dart.setMethodSignature(outlined_button_theme.OutlinedButtonTheme, () => ({
    __proto__: dart.getMethods(outlined_button_theme.OutlinedButtonTheme.__proto__),
    wrap: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget]),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setStaticMethodSignature(outlined_button_theme.OutlinedButtonTheme, () => ['of']);
  dart.setLibraryUri(outlined_button_theme.OutlinedButtonTheme, I[47]);
  dart.setFieldSignature(outlined_button_theme.OutlinedButtonTheme, () => ({
    __proto__: dart.getFields(outlined_button_theme.OutlinedButtonTheme.__proto__),
    data: dart.finalFieldType(outlined_button_theme.OutlinedButtonThemeData)
  }));
  navigation_rail.NavigationRail = class NavigationRail extends framework.StatefulWidget {
    get backgroundColor() {
      return this[S$.backgroundColor$6];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get extended() {
      return this[S$.extended];
    }
    set extended(value) {
      super.extended = value;
    }
    get leading() {
      return this[S$.leading];
    }
    set leading(value) {
      super.leading = value;
    }
    get trailing() {
      return this[S$.trailing];
    }
    set trailing(value) {
      super.trailing = value;
    }
    get destinations() {
      return this[S$.destinations];
    }
    set destinations(value) {
      super.destinations = value;
    }
    get selectedIndex() {
      return this[S$.selectedIndex];
    }
    set selectedIndex(value) {
      super.selectedIndex = value;
    }
    get onDestinationSelected() {
      return this[S$.onDestinationSelected];
    }
    set onDestinationSelected(value) {
      super.onDestinationSelected = value;
    }
    get elevation() {
      return this[S$.elevation$7];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get groupAlignment() {
      return this[S$.groupAlignment];
    }
    set groupAlignment(value) {
      super.groupAlignment = value;
    }
    get labelType() {
      return this[S$.labelType];
    }
    set labelType(value) {
      super.labelType = value;
    }
    get unselectedLabelTextStyle() {
      return this[S$.unselectedLabelTextStyle];
    }
    set unselectedLabelTextStyle(value) {
      super.unselectedLabelTextStyle = value;
    }
    get selectedLabelTextStyle() {
      return this[S$.selectedLabelTextStyle];
    }
    set selectedLabelTextStyle(value) {
      super.selectedLabelTextStyle = value;
    }
    get unselectedIconTheme() {
      return this[S$.unselectedIconTheme];
    }
    set unselectedIconTheme(value) {
      super.unselectedIconTheme = value;
    }
    get selectedIconTheme() {
      return this[S$.selectedIconTheme];
    }
    set selectedIconTheme(value) {
      super.selectedIconTheme = value;
    }
    get minWidth() {
      return this[S$.minWidth];
    }
    set minWidth(value) {
      super.minWidth = value;
    }
    get minExtendedWidth() {
      return this[S$.minExtendedWidth];
    }
    set minExtendedWidth(value) {
      super.minExtendedWidth = value;
    }
    get useIndicator() {
      return this[S$.useIndicator];
    }
    set useIndicator(value) {
      super.useIndicator = value;
    }
    get indicatorColor() {
      return this[S$.indicatorColor$1];
    }
    set indicatorColor(value) {
      super.indicatorColor = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let extended = opts && 'extended' in opts ? opts.extended : false;
      let leading = opts && 'leading' in opts ? opts.leading : null;
      let trailing = opts && 'trailing' in opts ? opts.trailing : null;
      let destinations = opts && 'destinations' in opts ? opts.destinations : null;
      let selectedIndex = opts && 'selectedIndex' in opts ? opts.selectedIndex : null;
      let onDestinationSelected = opts && 'onDestinationSelected' in opts ? opts.onDestinationSelected : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let groupAlignment = opts && 'groupAlignment' in opts ? opts.groupAlignment : null;
      let labelType = opts && 'labelType' in opts ? opts.labelType : null;
      let unselectedLabelTextStyle = opts && 'unselectedLabelTextStyle' in opts ? opts.unselectedLabelTextStyle : null;
      let selectedLabelTextStyle = opts && 'selectedLabelTextStyle' in opts ? opts.selectedLabelTextStyle : null;
      let unselectedIconTheme = opts && 'unselectedIconTheme' in opts ? opts.unselectedIconTheme : null;
      let selectedIconTheme = opts && 'selectedIconTheme' in opts ? opts.selectedIconTheme : null;
      let minWidth = opts && 'minWidth' in opts ? opts.minWidth : null;
      let minExtendedWidth = opts && 'minExtendedWidth' in opts ? opts.minExtendedWidth : null;
      let useIndicator = opts && 'useIndicator' in opts ? opts.useIndicator : null;
      let indicatorColor = opts && 'indicatorColor' in opts ? opts.indicatorColor : null;
      return new navigation_rail.NavigationRail.new({key: key, backgroundColor: backgroundColor, extended: extended, leading: leading, trailing: trailing, destinations: destinations, selectedIndex: selectedIndex, onDestinationSelected: onDestinationSelected, elevation: elevation, groupAlignment: groupAlignment, labelType: labelType, unselectedLabelTextStyle: unselectedLabelTextStyle, selectedLabelTextStyle: selectedLabelTextStyle, unselectedIconTheme: unselectedIconTheme, selectedIconTheme: selectedIconTheme, minWidth: minWidth, minExtendedWidth: minExtendedWidth, useIndicator: useIndicator, indicatorColor: indicatorColor, $creationLocationd_0dea112b090073317d4: C[369] || CT.C369});
    }
    static extendedAnimation(context) {
      return dart.nullCheck(context.dependOnInheritedWidgetOfExactType(navigation_rail._ExtendedNavigationRailAnimation)).animation;
    }
    createState() {
      return new navigation_rail._NavigationRailState.new();
    }
  };
  (navigation_rail.NavigationRail.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let extended = opts && 'extended' in opts ? opts.extended : false;
    let leading = opts && 'leading' in opts ? opts.leading : null;
    let trailing = opts && 'trailing' in opts ? opts.trailing : null;
    let destinations = opts && 'destinations' in opts ? opts.destinations : null;
    let selectedIndex = opts && 'selectedIndex' in opts ? opts.selectedIndex : null;
    let onDestinationSelected = opts && 'onDestinationSelected' in opts ? opts.onDestinationSelected : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let groupAlignment = opts && 'groupAlignment' in opts ? opts.groupAlignment : null;
    let labelType = opts && 'labelType' in opts ? opts.labelType : null;
    let unselectedLabelTextStyle = opts && 'unselectedLabelTextStyle' in opts ? opts.unselectedLabelTextStyle : null;
    let selectedLabelTextStyle = opts && 'selectedLabelTextStyle' in opts ? opts.selectedLabelTextStyle : null;
    let unselectedIconTheme = opts && 'unselectedIconTheme' in opts ? opts.unselectedIconTheme : null;
    let selectedIconTheme = opts && 'selectedIconTheme' in opts ? opts.selectedIconTheme : null;
    let minWidth = opts && 'minWidth' in opts ? opts.minWidth : null;
    let minExtendedWidth = opts && 'minExtendedWidth' in opts ? opts.minExtendedWidth : null;
    let useIndicator = opts && 'useIndicator' in opts ? opts.useIndicator : null;
    let indicatorColor = opts && 'indicatorColor' in opts ? opts.indicatorColor : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.backgroundColor$6] = backgroundColor;
    this[S$.extended] = extended;
    this[S$.leading] = leading;
    this[S$.trailing] = trailing;
    this[S$.destinations] = destinations;
    this[S$.selectedIndex] = selectedIndex;
    this[S$.onDestinationSelected] = onDestinationSelected;
    this[S$.elevation$7] = elevation;
    this[S$.groupAlignment] = groupAlignment;
    this[S$.labelType] = labelType;
    this[S$.unselectedLabelTextStyle] = unselectedLabelTextStyle;
    this[S$.selectedLabelTextStyle] = selectedLabelTextStyle;
    this[S$.unselectedIconTheme] = unselectedIconTheme;
    this[S$.selectedIconTheme] = selectedIconTheme;
    this[S$.minWidth] = minWidth;
    this[S$.minExtendedWidth] = minExtendedWidth;
    this[S$.useIndicator] = useIndicator;
    this[S$.indicatorColor$1] = indicatorColor;
    if (!(destinations !== null && destinations[S.$length] >= 2)) dart.assertFailed(null, I[48], 111, 16, "destinations != null && destinations.length >= 2");
    if (!(selectedIndex == null || 0 <= dart.notNull(selectedIndex) && dart.notNull(selectedIndex) < destinations[S.$length])) dart.assertFailed(null, I[48], 112, 16, "selectedIndex == null || (0 <= selectedIndex && selectedIndex < destinations.length)");
    if (!(elevation == null || dart.notNull(elevation) > 0)) dart.assertFailed(null, I[48], 113, 16, "elevation == null || elevation > 0");
    if (!(minWidth == null || dart.notNull(minWidth) > 0)) dart.assertFailed(null, I[48], 114, 16, "minWidth == null || minWidth > 0");
    if (!(minExtendedWidth == null || dart.notNull(minExtendedWidth) > 0)) dart.assertFailed(null, I[48], 115, 16, "minExtendedWidth == null || minExtendedWidth > 0");
    if (!(minWidth == null || minExtendedWidth == null || dart.notNull(minExtendedWidth) >= dart.notNull(minWidth))) dart.assertFailed(null, I[48], 116, 16, "(minWidth == null || minExtendedWidth == null) || minExtendedWidth >= minWidth");
    if (!(extended !== null)) dart.assertFailed(null, I[48], 117, 16, "extended != null");
    if (!(!extended || labelType == null || labelType === navigation_rail.NavigationRailLabelType.none)) dart.assertFailed(null, I[48], 118, 16, "!extended || (labelType == null || labelType == NavigationRailLabelType.none)");
    navigation_rail.NavigationRail.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = navigation_rail.NavigationRail.prototype;
  dart.addTypeTests(navigation_rail.NavigationRail);
  dart.addTypeCaches(navigation_rail.NavigationRail);
  dart.setMethodSignature(navigation_rail.NavigationRail, () => ({
    __proto__: dart.getMethods(navigation_rail.NavigationRail.__proto__),
    createState: dart.fnType(framework.State$(navigation_rail.NavigationRail), [])
  }));
  dart.setStaticMethodSignature(navigation_rail.NavigationRail, () => ['extendedAnimation']);
  dart.setLibraryUri(navigation_rail.NavigationRail, I[49]);
  dart.setFieldSignature(navigation_rail.NavigationRail, () => ({
    __proto__: dart.getFields(navigation_rail.NavigationRail.__proto__),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    extended: dart.finalFieldType(core.bool),
    leading: dart.finalFieldType(dart.nullable(framework.Widget)),
    trailing: dart.finalFieldType(dart.nullable(framework.Widget)),
    destinations: dart.finalFieldType(core.List$(navigation_rail.NavigationRailDestination)),
    selectedIndex: dart.finalFieldType(dart.nullable(core.int)),
    onDestinationSelected: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.int]))),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    groupAlignment: dart.finalFieldType(dart.nullable(core.double)),
    labelType: dart.finalFieldType(dart.nullable(navigation_rail.NavigationRailLabelType)),
    unselectedLabelTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    selectedLabelTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    unselectedIconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData)),
    selectedIconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData)),
    minWidth: dart.finalFieldType(dart.nullable(core.double)),
    minExtendedWidth: dart.finalFieldType(dart.nullable(core.double)),
    useIndicator: dart.finalFieldType(dart.nullable(core.bool)),
    indicatorColor: dart.finalFieldType(dart.nullable(ui.Color))
  }));
  const State_TickerProviderStateMixin$36$ = class State_TickerProviderStateMixin extends framework.State$(navigation_rail.NavigationRail) {};
  (State_TickerProviderStateMixin$36$.new = function() {
    ticker_provider.TickerProviderStateMixin$(navigation_rail.NavigationRail)[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36$.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36$.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36$, ticker_provider.TickerProviderStateMixin$(navigation_rail.NavigationRail));
  navigation_rail._NavigationRailState = class _NavigationRailState extends State_TickerProviderStateMixin$36$ {
    get [S$._destinationControllers]() {
      let t26;
      t26 = this[S$.___NavigationRailState__destinationControllers];
      return t26 == null ? dart.throw(new _internal.LateError.fieldNI("_destinationControllers")) : t26;
    }
    set [S$._destinationControllers](library$32package$58flutter$47src$47material$47navigation_rail$46dart$58$58_destinationControllers$35param) {
      this[S$.___NavigationRailState__destinationControllers] = library$32package$58flutter$47src$47material$47navigation_rail$46dart$58$58_destinationControllers$35param;
    }
    get [S$._destinationAnimations]() {
      let t26;
      t26 = this[S$.___NavigationRailState__destinationAnimations];
      return t26 == null ? dart.throw(new _internal.LateError.fieldNI("_destinationAnimations")) : t26;
    }
    set [S$._destinationAnimations](library$32package$58flutter$47src$47material$47navigation_rail$46dart$58$58_destinationAnimations$35param) {
      this[S$.___NavigationRailState__destinationAnimations] = library$32package$58flutter$47src$47material$47navigation_rail$46dart$58$58_destinationAnimations$35param;
    }
    get [S$._extendedController]() {
      let t26;
      t26 = this[S$.___NavigationRailState__extendedController];
      return t26 == null ? dart.throw(new _internal.LateError.fieldNI("_extendedController")) : t26;
    }
    set [S$._extendedController](library$32package$58flutter$47src$47material$47navigation_rail$46dart$58$58_extendedController$35param) {
      this[S$.___NavigationRailState__extendedController] = library$32package$58flutter$47src$47material$47navigation_rail$46dart$58$58_extendedController$35param;
    }
    get [S$._extendedAnimation]() {
      let t26;
      t26 = this[S$.___NavigationRailState__extendedAnimation];
      return t26 == null ? dart.throw(new _internal.LateError.fieldNI("_extendedAnimation")) : t26;
    }
    set [S$._extendedAnimation](library$32package$58flutter$47src$47material$47navigation_rail$46dart$58$58_extendedAnimation$35param) {
      this[S$.___NavigationRailState__extendedAnimation] = library$32package$58flutter$47src$47material$47navigation_rail$46dart$58$58_extendedAnimation$35param;
    }
    initState() {
      super.initState();
      this[S$._initControllers]();
    }
    dispose() {
      this[S$._disposeControllers]();
      super.dispose();
    }
    didUpdateWidget(oldWidget) {
      navigation_rail.NavigationRail.as(oldWidget);
      super.didUpdateWidget(oldWidget);
      if (this.widget.extended !== oldWidget.extended) {
        if (this.widget.extended) {
          this[S$._extendedController].forward();
        } else {
          this[S$._extendedController].reverse();
        }
      }
      if (this.widget.destinations[S.$length] !== oldWidget.destinations[S.$length]) {
        this[S$._resetState]();
        return;
      }
      if (this.widget.selectedIndex != oldWidget.selectedIndex) {
        if (oldWidget.selectedIndex != null) {
          this[S$._destinationControllers][S.$_get](dart.nullCheck(oldWidget.selectedIndex)).reverse();
        }
        if (this.widget.selectedIndex != null) {
          this[S$._destinationControllers][S.$_get](dart.nullCheck(this.widget.selectedIndex)).forward();
        }
        return;
      }
    }
    build(context) {
      let t26, t26$, t26$0, t26$1, t26$2, t26$3, t26$4, t26$5, t26$6, t26$7, t26$8, t26$9, t26$10, t26$11, t26$12, t26$13, t26$14, t26$15, t26$16, t26$17, t26$18, t26$19, t26$20, t26$21, t26$22;
      let navigationRailTheme = navigation_rail_theme.NavigationRailTheme.of(context);
      let defaults = theme$.Theme.of(context).useMaterial3 ? new navigation_rail._NavigationRailDefaultsM3.new(context) : new navigation_rail._NavigationRailDefaultsM2.new(context);
      let localizations = material_localizations.MaterialLocalizations.of(context);
      let backgroundColor = (t26$ = (t26 = this.widget.backgroundColor, t26 == null ? navigationRailTheme.backgroundColor : t26), t26$ == null ? dart.nullCheck(defaults.backgroundColor) : t26$);
      let elevation = (t26$1 = (t26$0 = this.widget.elevation, t26$0 == null ? navigationRailTheme.elevation : t26$0), t26$1 == null ? dart.nullCheck(defaults.elevation) : t26$1);
      let minWidth = (t26$3 = (t26$2 = this.widget.minWidth, t26$2 == null ? navigationRailTheme.minWidth : t26$2), t26$3 == null ? dart.nullCheck(defaults.minWidth) : t26$3);
      let minExtendedWidth = (t26$5 = (t26$4 = this.widget.minExtendedWidth, t26$4 == null ? navigationRailTheme.minExtendedWidth : t26$4), t26$5 == null ? dart.nullCheck(defaults.minExtendedWidth) : t26$5);
      let unselectedLabelTextStyle = (t26$7 = (t26$6 = this.widget.unselectedLabelTextStyle, t26$6 == null ? navigationRailTheme.unselectedLabelTextStyle : t26$6), t26$7 == null ? dart.nullCheck(defaults.unselectedLabelTextStyle) : t26$7);
      let selectedLabelTextStyle = (t26$9 = (t26$8 = this.widget.selectedLabelTextStyle, t26$8 == null ? navigationRailTheme.selectedLabelTextStyle : t26$8), t26$9 == null ? dart.nullCheck(defaults.selectedLabelTextStyle) : t26$9);
      let unselectedIconTheme = (t26$11 = (t26$10 = this.widget.unselectedIconTheme, t26$10 == null ? navigationRailTheme.unselectedIconTheme : t26$10), t26$11 == null ? dart.nullCheck(defaults.unselectedIconTheme) : t26$11);
      let selectedIconTheme = (t26$13 = (t26$12 = this.widget.selectedIconTheme, t26$12 == null ? navigationRailTheme.selectedIconTheme : t26$12), t26$13 == null ? dart.nullCheck(defaults.selectedIconTheme) : t26$13);
      let groupAlignment = (t26$15 = (t26$14 = this.widget.groupAlignment, t26$14 == null ? navigationRailTheme.groupAlignment : t26$14), t26$15 == null ? dart.nullCheck(defaults.groupAlignment) : t26$15);
      let labelType = (t26$17 = (t26$16 = this.widget.labelType, t26$16 == null ? navigationRailTheme.labelType : t26$16), t26$17 == null ? dart.nullCheck(defaults.labelType) : t26$17);
      let useIndicator = (t26$19 = (t26$18 = this.widget.useIndicator, t26$18 == null ? navigationRailTheme.useIndicator : t26$18), t26$19 == null ? dart.nullCheck(defaults.useIndicator) : t26$19);
      let indicatorColor = (t26$21 = (t26$20 = this.widget.indicatorColor, t26$20 == null ? navigationRailTheme.indicatorColor : t26$20), t26$21 == null ? defaults.indicatorColor : t26$21);
      let effectiveUnselectedIconTheme = theme$.Theme.of(context).useMaterial3 ? unselectedIconTheme : unselectedIconTheme.copyWith({opacity: (t26$22 = unselectedIconTheme.opacity, t26$22 == null ? dart.nullCheck(defaults.unselectedIconTheme).opacity : t26$22)});
      return new navigation_rail._ExtendedNavigationRailAnimation.new({animation: this[S$._extendedAnimation], child: new basic.Semantics.new({explicitChildNodes: true, child: new material.Material.new({elevation: elevation, color: backgroundColor, child: new basic.Column.new({children: (() => {
                let t26 = T$.JSArrayOfWidget().of([navigation_rail._verticalSpacer]);
                if (this.widget.leading != null) t26[S.$addAll](T$.JSArrayOfWidget().of([dart.nullCheck(this.widget.leading), navigation_rail._verticalSpacer]));
                t26.push(new basic.Expanded.new({child: new basic.Align.new({alignment: new alignment.Alignment.new(0.0, groupAlignment), child: new basic.Column.new({mainAxisSize: flex.MainAxisSize.min, children: (() => {
                        let t27 = T$.JSArrayOfWidget().of([]);
                        for (let i = 0; i < this.widget.destinations[S.$length]; i = i + 1)
                          t27.push(new navigation_rail._RailDestination.new({minWidth: minWidth, minExtendedWidth: minExtendedWidth, extendedTransitionAnimation: this[S$._extendedAnimation], selected: this.widget.selectedIndex === i, icon: this.widget.selectedIndex === i ? this.widget.destinations[S.$_get](i).selectedIcon : this.widget.destinations[S.$_get](i).icon, label: this.widget.destinations[S.$_get](i).label, destinationAnimation: this[S$._destinationAnimations][S.$_get](i), labelType: labelType, iconTheme: this.widget.selectedIndex === i ? selectedIconTheme : effectiveUnselectedIconTheme, labelTextStyle: this.widget.selectedIndex === i ? selectedLabelTextStyle : unselectedLabelTextStyle, padding: this.widget.destinations[S.$_get](i).padding, useIndicator: useIndicator, indicatorColor: useIndicator ? indicatorColor : null, onTap: dart.fn(() => {
                              if (this.widget.onDestinationSelected != null) {
                                dart.nullCheck(this.widget.onDestinationSelected)(i);
                              }
                            }, T$.VoidTovoid()), indexLabel: localizations.tabLabel({tabIndex: i + 1, tabCount: this.widget.destinations[S.$length]}), $creationLocationd_0dea112b090073317d4: C[370] || CT.C370}));
                        if (this.widget.trailing != null) t27.push(dart.nullCheck(this.widget.trailing));
                        return t27;
                      })(), $creationLocationd_0dea112b090073317d4: C[371] || CT.C371}), $creationLocationd_0dea112b090073317d4: C[372] || CT.C372}), $creationLocationd_0dea112b090073317d4: C[373] || CT.C373}));
                return t26;
              })(), $creationLocationd_0dea112b090073317d4: C[374] || CT.C374}), $creationLocationd_0dea112b090073317d4: C[375] || CT.C375}), $creationLocationd_0dea112b090073317d4: C[376] || CT.C376}), $creationLocationd_0dea112b090073317d4: C[377] || CT.C377});
    }
    [S$._disposeControllers]() {
      for (let controller of this[S$._destinationControllers]) {
        controller.dispose();
      }
      this[S$._extendedController].dispose();
    }
    [S$._initControllers]() {
      this[S$._destinationControllers] = T$.ListOfAnimationController().generate(this.widget.destinations[S.$length], dart.fn(index => {
        let t28;
        t28 = new animation_controller.AnimationController.new({duration: theme$.kThemeAnimationDuration, vsync: this});
        return (() => {
          t28.addListener(dart.bind(this, S$._rebuild));
          return t28;
        })();
      }, T$.intToAnimationController()));
      this[S$._destinationAnimations] = this[S$._destinationControllers][S.$map](T$.AnimationOfdouble(), dart.fn(controller => controller.view, T$.AnimationControllerToAnimationOfdouble()))[S.$toList]();
      if (this.widget.selectedIndex != null) {
        this[S$._destinationControllers][S.$_get](dart.nullCheck(this.widget.selectedIndex)).value = 1.0;
      }
      this[S$._extendedController] = new animation_controller.AnimationController.new({duration: theme$.kThemeAnimationDuration, vsync: this, value: this.widget.extended ? 1.0 : 0.0});
      this[S$._extendedAnimation] = new animations.CurvedAnimation.new({parent: this[S$._extendedController], curve: curves.Curves.easeInOut});
      this[S$._extendedController].addListener(dart.fn(() => {
        this[S$._rebuild]();
      }, T$.VoidTovoid()));
    }
    [S$._resetState]() {
      this[S$._disposeControllers]();
      this[S$._initControllers]();
    }
    [S$._rebuild]() {
      this.setState(dart.fn(() => {
      }, T$.VoidTovoid()));
    }
    static ['_#new#tearOff']() {
      return new navigation_rail._NavigationRailState.new();
    }
  };
  (navigation_rail._NavigationRailState.new = function() {
    this[S$.___NavigationRailState__destinationControllers] = null;
    this[S$.___NavigationRailState__destinationAnimations] = null;
    this[S$.___NavigationRailState__extendedController] = null;
    this[S$.___NavigationRailState__extendedAnimation] = null;
    navigation_rail._NavigationRailState.__proto__.new.call(this);
    ;
  }).prototype = navigation_rail._NavigationRailState.prototype;
  dart.addTypeTests(navigation_rail._NavigationRailState);
  dart.addTypeCaches(navigation_rail._NavigationRailState);
  dart.setMethodSignature(navigation_rail._NavigationRailState, () => ({
    __proto__: dart.getMethods(navigation_rail._NavigationRailState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    [S$._disposeControllers]: dart.fnType(dart.void, []),
    [S$._initControllers]: dart.fnType(dart.void, []),
    [S$._resetState]: dart.fnType(dart.void, []),
    [S$._rebuild]: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(navigation_rail._NavigationRailState, () => ({
    __proto__: dart.getGetters(navigation_rail._NavigationRailState.__proto__),
    [S$._destinationControllers]: core.List$(animation_controller.AnimationController),
    [S$._destinationAnimations]: core.List$(animation$.Animation$(core.double)),
    [S$._extendedController]: animation_controller.AnimationController,
    [S$._extendedAnimation]: animation$.Animation$(core.double)
  }));
  dart.setSetterSignature(navigation_rail._NavigationRailState, () => ({
    __proto__: dart.getSetters(navigation_rail._NavigationRailState.__proto__),
    [S$._destinationControllers]: core.List$(animation_controller.AnimationController),
    [S$._destinationAnimations]: core.List$(animation$.Animation$(core.double)),
    [S$._extendedController]: animation_controller.AnimationController,
    [S$._extendedAnimation]: animation$.Animation$(core.double)
  }));
  dart.setLibraryUri(navigation_rail._NavigationRailState, I[49]);
  dart.setFieldSignature(navigation_rail._NavigationRailState, () => ({
    __proto__: dart.getFields(navigation_rail._NavigationRailState.__proto__),
    [S$.___NavigationRailState__destinationControllers]: dart.fieldType(dart.nullable(core.List$(animation_controller.AnimationController))),
    [S$.___NavigationRailState__destinationAnimations]: dart.fieldType(dart.nullable(core.List$(animation$.Animation$(core.double)))),
    [S$.___NavigationRailState__extendedController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S$.___NavigationRailState__extendedAnimation]: dart.fieldType(dart.nullable(animation$.Animation$(core.double)))
  }));
  navigation_rail._RailDestination = class _RailDestination extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let minWidth = opts && 'minWidth' in opts ? opts.minWidth : null;
      let minExtendedWidth = opts && 'minExtendedWidth' in opts ? opts.minExtendedWidth : null;
      let icon = opts && 'icon' in opts ? opts.icon : null;
      let label = opts && 'label' in opts ? opts.label : null;
      let destinationAnimation = opts && 'destinationAnimation' in opts ? opts.destinationAnimation : null;
      let extendedTransitionAnimation = opts && 'extendedTransitionAnimation' in opts ? opts.extendedTransitionAnimation : null;
      let labelType = opts && 'labelType' in opts ? opts.labelType : null;
      let selected = opts && 'selected' in opts ? opts.selected : null;
      let iconTheme = opts && 'iconTheme' in opts ? opts.iconTheme : null;
      let labelTextStyle = opts && 'labelTextStyle' in opts ? opts.labelTextStyle : null;
      let onTap = opts && 'onTap' in opts ? opts.onTap : null;
      let indexLabel = opts && 'indexLabel' in opts ? opts.indexLabel : null;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let useIndicator = opts && 'useIndicator' in opts ? opts.useIndicator : null;
      let indicatorColor = opts && 'indicatorColor' in opts ? opts.indicatorColor : null;
      return new navigation_rail._RailDestination.new({minWidth: minWidth, minExtendedWidth: minExtendedWidth, icon: icon, label: label, destinationAnimation: destinationAnimation, extendedTransitionAnimation: extendedTransitionAnimation, labelType: labelType, selected: selected, iconTheme: iconTheme, labelTextStyle: labelTextStyle, onTap: onTap, indexLabel: indexLabel, padding: padding, useIndicator: useIndicator, indicatorColor: indicatorColor, $creationLocationd_0dea112b090073317d4: C[378] || CT.C378});
    }
    build(context) {
      let t29, t29$, t29$0, t29$1;
      if (!(this.useIndicator || this.indicatorColor == null)) dart.assertFailed("[NavigationRail.indicatorColor] does not have an effect when [NavigationRail.useIndicator] is false", I[48], 565, 7, "useIndicator || indicatorColor == null");
      let material3 = theme$.Theme.of(context).useMaterial3;
      let themedIcon = new icon_theme.IconTheme.new({data: this.iconTheme, child: this.icon, $creationLocationd_0dea112b090073317d4: C[379] || CT.C379});
      let styledLabel = new text$.DefaultTextStyle.new({style: this.labelTextStyle, child: this.label, $creationLocationd_0dea112b090073317d4: C[380] || CT.C380});
      let content = null;
      switch (this.labelType) {
        case C[399] || CT.C399:
          {
            let spacing = material3 ? C[381] || CT.C381 : null;
            let iconPart = new basic.Column.new({children: (() => {
                let t28 = T$.JSArrayOfWidget().of([]);
                if (spacing != null) t28.push(spacing);
                t28.push(new basic.SizedBox.new({width: this.minWidth, height: material3 ? null : this.minWidth, child: new basic.Center.new({child: new navigation_rail._AddIndicator.new({addIndicator: this.useIndicator, indicatorColor: this.indicatorColor, isCircular: !material3, indicatorAnimation: this.destinationAnimation, child: themedIcon, $creationLocationd_0dea112b090073317d4: C[383] || CT.C383}), $creationLocationd_0dea112b090073317d4: C[384] || CT.C384}), $creationLocationd_0dea112b090073317d4: C[385] || CT.C385}));
                if (spacing != null) t28.push(spacing);
                return t28;
              })(), $creationLocationd_0dea112b090073317d4: C[386] || CT.C386});
            if (this.extendedTransitionAnimation.value === 0) {
              content = new basic.Padding.new({padding: (t29 = this.padding, t29 == null ? edge_insets.EdgeInsets.zero : t29), child: new basic.Stack.new({children: T$.JSArrayOfWidget().of([iconPart, new basic.SizedBox.new({width: 0.0, height: 0.0, child: new basic.Opacity.new({alwaysIncludeSemantics: true, opacity: 0.0, child: this.label, $creationLocationd_0dea112b090073317d4: C[387] || CT.C387}), $creationLocationd_0dea112b090073317d4: C[388] || CT.C388})]), $creationLocationd_0dea112b090073317d4: C[389] || CT.C389}), $creationLocationd_0dea112b090073317d4: C[390] || CT.C390});
            } else {
              let labelFadeAnimation = this.extendedTransitionAnimation.drive(core.double, new tween.CurveTween.new({curve: C[391] || CT.C391}));
              content = new basic.Padding.new({padding: (t29$ = this.padding, t29$ == null ? edge_insets.EdgeInsets.zero : t29$), child: new basic.ConstrainedBox.new({constraints: new box$.BoxConstraints.new({minWidth: dart.nullCheck(ui.lerpDouble(this.minWidth, this.minExtendedWidth, this.extendedTransitionAnimation.value))}), child: new basic.ClipRect.new({child: new basic.Row.new({children: T$.JSArrayOfWidget().of([iconPart, new basic.Align.new({heightFactor: 1.0, widthFactor: this.extendedTransitionAnimation.value, alignment: alignment.AlignmentDirectional.centerStart, child: new transitions.FadeTransition.new({alwaysIncludeSemantics: true, opacity: labelFadeAnimation, child: styledLabel, $creationLocationd_0dea112b090073317d4: C[392] || CT.C392}), $creationLocationd_0dea112b090073317d4: C[393] || CT.C393}), new basic.SizedBox.new({width: 8 * this.extendedTransitionAnimation.value, $creationLocationd_0dea112b090073317d4: C[394] || CT.C394})]), $creationLocationd_0dea112b090073317d4: C[395] || CT.C395}), $creationLocationd_0dea112b090073317d4: C[396] || CT.C396}), $creationLocationd_0dea112b090073317d4: C[397] || CT.C397}), $creationLocationd_0dea112b090073317d4: C[398] || CT.C398});
            }
            break;
          }
        case C[411] || CT.C411:
          {
            let appearingAnimationValue = 1 - this[S$._positionAnimation$1].value;
            let verticalPadding = dart.nullCheck(ui.lerpDouble(24, 16, appearingAnimationValue));
            let interval = this.selected ? C[400] || CT.C400 : C[401] || CT.C401;
            let labelFadeAnimation = this.destinationAnimation.drive(core.double, new tween.CurveTween.new({curve: interval}));
            let minHeight = material3 ? 0.0 : this.minWidth;
            let topSpacing = new basic.SizedBox.new({height: material3 ? 0.0 : verticalPadding, $creationLocationd_0dea112b090073317d4: C[402] || CT.C402});
            let labelSpacing = new basic.SizedBox.new({height: material3 ? dart.nullCheck(ui.lerpDouble(0, 4, appearingAnimationValue)) : 0.0, $creationLocationd_0dea112b090073317d4: C[403] || CT.C403});
            let bottomSpacing = new basic.SizedBox.new({height: material3 ? 12 : verticalPadding, $creationLocationd_0dea112b090073317d4: C[404] || CT.C404});
            content = new container.Container.new({constraints: new box$.BoxConstraints.new({minWidth: this.minWidth, minHeight: minHeight}), padding: (t29$0 = this.padding, t29$0 == null ? C[86] || CT.C86 : t29$0), child: new basic.ClipRect.new({child: new basic.Column.new({mainAxisSize: flex.MainAxisSize.min, mainAxisAlignment: flex.MainAxisAlignment.center, children: T$.JSArrayOfWidget().of([topSpacing, new navigation_rail._AddIndicator.new({addIndicator: this.useIndicator, indicatorColor: this.indicatorColor, isCircular: false, indicatorAnimation: this.destinationAnimation, child: themedIcon, $creationLocationd_0dea112b090073317d4: C[405] || CT.C405}), labelSpacing, new basic.Align.new({alignment: alignment.Alignment.topCenter, heightFactor: appearingAnimationValue, widthFactor: 1.0, child: new transitions.FadeTransition.new({alwaysIncludeSemantics: true, opacity: labelFadeAnimation, child: styledLabel, $creationLocationd_0dea112b090073317d4: C[406] || CT.C406}), $creationLocationd_0dea112b090073317d4: C[407] || CT.C407}), bottomSpacing]), $creationLocationd_0dea112b090073317d4: C[408] || CT.C408}), $creationLocationd_0dea112b090073317d4: C[409] || CT.C409}), $creationLocationd_0dea112b090073317d4: C[410] || CT.C410});
            break;
          }
        case C[418] || CT.C418:
          {
            let minHeight = material3 ? 0.0 : this.minWidth;
            let topSpacing = new basic.SizedBox.new({height: material3 ? 0.0 : 16, $creationLocationd_0dea112b090073317d4: C[412] || CT.C412});
            let labelSpacing = new basic.SizedBox.new({height: material3 ? 4 : 0.0, $creationLocationd_0dea112b090073317d4: C[413] || CT.C413});
            let bottomSpacing = new basic.SizedBox.new({height: material3 ? 12 : 16, $creationLocationd_0dea112b090073317d4: C[414] || CT.C414});
            content = new container.Container.new({constraints: new box$.BoxConstraints.new({minWidth: this.minWidth, minHeight: minHeight}), padding: (t29$1 = this.padding, t29$1 == null ? C[86] || CT.C86 : t29$1), child: new basic.Column.new({children: T$.JSArrayOfWidget().of([topSpacing, new navigation_rail._AddIndicator.new({addIndicator: this.useIndicator, indicatorColor: this.indicatorColor, isCircular: false, indicatorAnimation: this.destinationAnimation, child: themedIcon, $creationLocationd_0dea112b090073317d4: C[415] || CT.C415}), labelSpacing, styledLabel, bottomSpacing]), $creationLocationd_0dea112b090073317d4: C[416] || CT.C416}), $creationLocationd_0dea112b090073317d4: C[417] || CT.C417});
            break;
          }
      }
      let colors = theme$.Theme.of(context).colorScheme;
      return new basic.Semantics.new({container: true, selected: this.selected, child: new basic.Stack.new({children: T$.JSArrayOfWidget().of([new material.Material.new({type: material.MaterialType.transparency, child: new ink_well.InkResponse.new({onTap: this.onTap, onHover: dart.fn(_ => {
                }, T$.boolTovoid()), highlightShape: box_border.BoxShape.rectangle, borderRadius: material3 ? null : new border_radius.BorderRadius.all(new ui.Radius.circular(this.minWidth / 2.0)), containedInkWell: true, splashColor: colors.primary.withOpacity(0.12), hoverColor: colors.primary.withOpacity(0.04), child: content, $creationLocationd_0dea112b090073317d4: C[419] || CT.C419}), $creationLocationd_0dea112b090073317d4: C[420] || CT.C420}), new basic.Semantics.new({label: this.indexLabel, $creationLocationd_0dea112b090073317d4: C[421] || CT.C421})]), $creationLocationd_0dea112b090073317d4: C[422] || CT.C422}), $creationLocationd_0dea112b090073317d4: C[423] || CT.C423});
    }
  };
  (navigation_rail._RailDestination.new = function(opts) {
    let minWidth = opts && 'minWidth' in opts ? opts.minWidth : null;
    let minExtendedWidth = opts && 'minExtendedWidth' in opts ? opts.minExtendedWidth : null;
    let icon = opts && 'icon' in opts ? opts.icon : null;
    let label = opts && 'label' in opts ? opts.label : null;
    let destinationAnimation = opts && 'destinationAnimation' in opts ? opts.destinationAnimation : null;
    let extendedTransitionAnimation = opts && 'extendedTransitionAnimation' in opts ? opts.extendedTransitionAnimation : null;
    let labelType = opts && 'labelType' in opts ? opts.labelType : null;
    let selected = opts && 'selected' in opts ? opts.selected : null;
    let iconTheme = opts && 'iconTheme' in opts ? opts.iconTheme : null;
    let labelTextStyle = opts && 'labelTextStyle' in opts ? opts.labelTextStyle : null;
    let onTap = opts && 'onTap' in opts ? opts.onTap : null;
    let indexLabel = opts && 'indexLabel' in opts ? opts.indexLabel : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let useIndicator = opts && 'useIndicator' in opts ? opts.useIndicator : null;
    let indicatorColor = opts && 'indicatorColor' in opts ? opts.indicatorColor : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this.minWidth = minWidth;
    this.minExtendedWidth = minExtendedWidth;
    this.icon = icon;
    this.label = label;
    this.destinationAnimation = destinationAnimation;
    this.extendedTransitionAnimation = extendedTransitionAnimation;
    this.labelType = labelType;
    this.selected = selected;
    this.iconTheme = iconTheme;
    this.labelTextStyle = labelTextStyle;
    this.onTap = onTap;
    this.indexLabel = indexLabel;
    this.padding = padding;
    this.useIndicator = useIndicator;
    this.indicatorColor = indicatorColor;
    if (!(minWidth !== null)) dart.assertFailed(null, I[48], 526, 15, "minWidth != null");
    if (!(minExtendedWidth !== null)) dart.assertFailed(null, I[48], 527, 15, "minExtendedWidth != null");
    if (!(icon !== null)) dart.assertFailed(null, I[48], 528, 15, "icon != null");
    if (!(label !== null)) dart.assertFailed(null, I[48], 529, 15, "label != null");
    if (!(destinationAnimation !== null)) dart.assertFailed(null, I[48], 530, 15, "destinationAnimation != null");
    if (!(extendedTransitionAnimation !== null)) dart.assertFailed(null, I[48], 531, 15, "extendedTransitionAnimation != null");
    if (!(labelType !== null)) dart.assertFailed(null, I[48], 532, 15, "labelType != null");
    if (!(selected !== null)) dart.assertFailed(null, I[48], 533, 15, "selected != null");
    if (!(iconTheme !== null)) dart.assertFailed(null, I[48], 534, 15, "iconTheme != null");
    if (!(labelTextStyle !== null)) dart.assertFailed(null, I[48], 535, 15, "labelTextStyle != null");
    if (!(onTap !== null)) dart.assertFailed(null, I[48], 536, 15, "onTap != null");
    if (!(indexLabel !== null)) dart.assertFailed(null, I[48], 537, 15, "indexLabel != null");
    this[S$._positionAnimation$1] = new animations.CurvedAnimation.new({parent: new animations.ReverseAnimation.new(destinationAnimation), curve: curves.Curves.easeInOut, reverseCurve: curves.Curves.easeInOut.flipped});
    navigation_rail._RailDestination.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = navigation_rail._RailDestination.prototype;
  dart.addTypeTests(navigation_rail._RailDestination);
  dart.addTypeCaches(navigation_rail._RailDestination);
  dart.setMethodSignature(navigation_rail._RailDestination, () => ({
    __proto__: dart.getMethods(navigation_rail._RailDestination.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(navigation_rail._RailDestination, I[49]);
  dart.setFieldSignature(navigation_rail._RailDestination, () => ({
    __proto__: dart.getFields(navigation_rail._RailDestination.__proto__),
    minWidth: dart.finalFieldType(core.double),
    minExtendedWidth: dart.finalFieldType(core.double),
    icon: dart.finalFieldType(framework.Widget),
    label: dart.finalFieldType(framework.Widget),
    destinationAnimation: dart.finalFieldType(animation$.Animation$(core.double)),
    labelType: dart.finalFieldType(navigation_rail.NavigationRailLabelType),
    selected: dart.finalFieldType(core.bool),
    extendedTransitionAnimation: dart.finalFieldType(animation$.Animation$(core.double)),
    iconTheme: dart.finalFieldType(icon_theme_data.IconThemeData),
    labelTextStyle: dart.finalFieldType(text_style.TextStyle),
    onTap: dart.finalFieldType(dart.fnType(dart.void, [])),
    indexLabel: dart.finalFieldType(core.String),
    padding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    useIndicator: dart.finalFieldType(core.bool),
    indicatorColor: dart.finalFieldType(dart.nullable(ui.Color)),
    [S$._positionAnimation$1]: dart.finalFieldType(animation$.Animation$(core.double))
  }));
  navigation_rail._AddIndicator = class _AddIndicator extends framework.StatelessWidget {
    get addIndicator() {
      return this[S$.addIndicator];
    }
    set addIndicator(value) {
      super.addIndicator = value;
    }
    get isCircular() {
      return this[S$.isCircular];
    }
    set isCircular(value) {
      super.isCircular = value;
    }
    get indicatorColor() {
      return this[S$.indicatorColor$2];
    }
    set indicatorColor(value) {
      super.indicatorColor = value;
    }
    get indicatorAnimation() {
      return this[S$.indicatorAnimation];
    }
    set indicatorAnimation(value) {
      super.indicatorAnimation = value;
    }
    get child() {
      return this[S$.child$9];
    }
    set child(value) {
      super.child = value;
    }
    static ['_#new#tearOff'](opts) {
      let addIndicator = opts && 'addIndicator' in opts ? opts.addIndicator : null;
      let isCircular = opts && 'isCircular' in opts ? opts.isCircular : null;
      let indicatorColor = opts && 'indicatorColor' in opts ? opts.indicatorColor : null;
      let indicatorAnimation = opts && 'indicatorAnimation' in opts ? opts.indicatorAnimation : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new navigation_rail._AddIndicator.new({addIndicator: addIndicator, isCircular: isCircular, indicatorColor: indicatorColor, indicatorAnimation: indicatorAnimation, child: child, $creationLocationd_0dea112b090073317d4: C[424] || CT.C424});
    }
    build(context) {
      if (!this.addIndicator) {
        return this.child;
      }
      let indicator = null;
      function indicator$35get() {
        let t30;
        t30 = indicator;
        return t30 == null ? dart.throw(new _internal.LateError.localNI("indicator")) : t30;
      }
      dart.fn(indicator$35get, T$.VoidToWidget());
      function indicator$35set(indicator$35param) {
        if (indicator == null)
          return indicator = indicator$35param;
        else
          dart.throw(new _internal.LateError.localAI("indicator"));
      }
      dart.fn(indicator$35set, T$.WidgetTodynamic());
      if (this.isCircular) {
        indicator$35set(new navigation_bar.NavigationIndicator.new({animation: this.indicatorAnimation, height: 56, width: 56, borderRadius: new border_radius.BorderRadius.circular(56 / 2), color: this.indicatorColor, $creationLocationd_0dea112b090073317d4: C[425] || CT.C425}));
      } else {
        indicator$35set(new navigation_bar.NavigationIndicator.new({animation: this.indicatorAnimation, width: 56.0, shape: C[17] || CT.C17, color: this.indicatorColor, $creationLocationd_0dea112b090073317d4: C[426] || CT.C426}));
      }
      return new basic.Stack.new({alignment: alignment.Alignment.center, children: T$.JSArrayOfWidget().of([indicator$35get(), this.child]), $creationLocationd_0dea112b090073317d4: C[427] || CT.C427});
    }
  };
  (navigation_rail._AddIndicator.new = function(opts) {
    let addIndicator = opts && 'addIndicator' in opts ? opts.addIndicator : null;
    let isCircular = opts && 'isCircular' in opts ? opts.isCircular : null;
    let indicatorColor = opts && 'indicatorColor' in opts ? opts.indicatorColor : null;
    let indicatorAnimation = opts && 'indicatorAnimation' in opts ? opts.indicatorAnimation : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.addIndicator] = addIndicator;
    this[S$.isCircular] = isCircular;
    this[S$.indicatorColor$2] = indicatorColor;
    this[S$.indicatorAnimation] = indicatorAnimation;
    this[S$.child$9] = child;
    navigation_rail._AddIndicator.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = navigation_rail._AddIndicator.prototype;
  dart.addTypeTests(navigation_rail._AddIndicator);
  dart.addTypeCaches(navigation_rail._AddIndicator);
  dart.setMethodSignature(navigation_rail._AddIndicator, () => ({
    __proto__: dart.getMethods(navigation_rail._AddIndicator.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(navigation_rail._AddIndicator, I[49]);
  dart.setFieldSignature(navigation_rail._AddIndicator, () => ({
    __proto__: dart.getFields(navigation_rail._AddIndicator.__proto__),
    addIndicator: dart.finalFieldType(core.bool),
    isCircular: dart.finalFieldType(core.bool),
    indicatorColor: dart.finalFieldType(dart.nullable(ui.Color)),
    indicatorAnimation: dart.finalFieldType(animation$.Animation$(core.double)),
    child: dart.finalFieldType(framework.Widget)
  }));
  navigation_rail.NavigationRailLabelType = class NavigationRailLabelType extends core._Enum {
    toString() {
      return "NavigationRailLabelType." + this[S._name];
    }
  };
  (navigation_rail.NavigationRailLabelType.new = function(index, name) {
    navigation_rail.NavigationRailLabelType.__proto__.new.call(this, index, name);
    ;
  }).prototype = navigation_rail.NavigationRailLabelType.prototype;
  dart.addTypeTests(navigation_rail.NavigationRailLabelType);
  dart.addTypeCaches(navigation_rail.NavigationRailLabelType);
  dart.setLibraryUri(navigation_rail.NavigationRailLabelType, I[49]);
  dart.setStaticFieldSignature(navigation_rail.NavigationRailLabelType, () => ['values', 'none', 'selected', 'all']);
  dart.defineExtensionMethods(navigation_rail.NavigationRailLabelType, ['toString']);
  dart.defineLazy(navigation_rail.NavigationRailLabelType, {
    /*navigation_rail.NavigationRailLabelType.values*/get values() {
      return C[428] || CT.C428;
    },
    /*navigation_rail.NavigationRailLabelType.none*/get none() {
      return C[399] || CT.C399;
    },
    /*navigation_rail.NavigationRailLabelType.selected*/get selected() {
      return C[411] || CT.C411;
    },
    /*navigation_rail.NavigationRailLabelType.all*/get all() {
      return C[418] || CT.C418;
    }
  }, false);
  navigation_rail.NavigationRailDestination = class NavigationRailDestination extends core.Object {
    get icon() {
      return this[S$.icon$3];
    }
    set icon(value) {
      super.icon = value;
    }
    get selectedIcon() {
      return this[S$.selectedIcon$1];
    }
    set selectedIcon(value) {
      super.selectedIcon = value;
    }
    get label() {
      return this[S$.label$2];
    }
    set label(value) {
      super.label = value;
    }
    get padding() {
      return this[S$.padding$4];
    }
    set padding(value) {
      super.padding = value;
    }
    static ['_#new#tearOff'](opts) {
      let icon = opts && 'icon' in opts ? opts.icon : null;
      let selectedIcon = opts && 'selectedIcon' in opts ? opts.selectedIcon : null;
      let label = opts && 'label' in opts ? opts.label : null;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      return new navigation_rail.NavigationRailDestination.new({icon: icon, selectedIcon: selectedIcon, label: label, padding: padding});
    }
  };
  (navigation_rail.NavigationRailDestination.new = function(opts) {
    let t34;
    let icon = opts && 'icon' in opts ? opts.icon : null;
    let selectedIcon = opts && 'selectedIcon' in opts ? opts.selectedIcon : null;
    let label = opts && 'label' in opts ? opts.label : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    this[S$.icon$3] = icon;
    this[S$.label$2] = label;
    this[S$.padding$4] = padding;
    this[S$.selectedIcon$1] = (t34 = selectedIcon, t34 == null ? icon : t34);
    if (!(icon !== null)) dart.assertFailed(null, I[48], 850, 15, "icon != null");
    if (!(label !== null)) dart.assertFailed(null, I[48], 851, 15, "label != null");
    ;
  }).prototype = navigation_rail.NavigationRailDestination.prototype;
  dart.addTypeTests(navigation_rail.NavigationRailDestination);
  dart.addTypeCaches(navigation_rail.NavigationRailDestination);
  dart.setLibraryUri(navigation_rail.NavigationRailDestination, I[49]);
  dart.setFieldSignature(navigation_rail.NavigationRailDestination, () => ({
    __proto__: dart.getFields(navigation_rail.NavigationRailDestination.__proto__),
    icon: dart.finalFieldType(framework.Widget),
    selectedIcon: dart.finalFieldType(framework.Widget),
    label: dart.finalFieldType(framework.Widget),
    padding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry))
  }));
  navigation_rail._ExtendedNavigationRailAnimation = class _ExtendedNavigationRailAnimation extends framework.InheritedWidget {
    get animation() {
      return this[S$.animation$5];
    }
    set animation(value) {
      super.animation = value;
    }
    static ['_#new#tearOff'](opts) {
      let animation = opts && 'animation' in opts ? opts.animation : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new navigation_rail._ExtendedNavigationRailAnimation.new({animation: animation, child: child, $creationLocationd_0dea112b090073317d4: C[429] || CT.C429});
    }
    updateShouldNotify(old) {
      navigation_rail._ExtendedNavigationRailAnimation.as(old);
      return !this.animation[S.$_equals](old.animation);
    }
  };
  (navigation_rail._ExtendedNavigationRailAnimation.new = function(opts) {
    let animation = opts && 'animation' in opts ? opts.animation : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.animation$5] = animation;
    if (!(child !== null)) dart.assertFailed(null, I[48], 896, 15, "child != null");
    navigation_rail._ExtendedNavigationRailAnimation.__proto__.new.call(this, {child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = navigation_rail._ExtendedNavigationRailAnimation.prototype;
  dart.addTypeTests(navigation_rail._ExtendedNavigationRailAnimation);
  dart.addTypeCaches(navigation_rail._ExtendedNavigationRailAnimation);
  dart.setMethodSignature(navigation_rail._ExtendedNavigationRailAnimation, () => ({
    __proto__: dart.getMethods(navigation_rail._ExtendedNavigationRailAnimation.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(navigation_rail._ExtendedNavigationRailAnimation, I[49]);
  dart.setFieldSignature(navigation_rail._ExtendedNavigationRailAnimation, () => ({
    __proto__: dart.getFields(navigation_rail._ExtendedNavigationRailAnimation.__proto__),
    animation: dart.finalFieldType(animation$.Animation$(core.double))
  }));
  const Object_Diagnosticable$36$13 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$13.new = function() {
  }).prototype = Object_Diagnosticable$36$13.prototype;
  dart.applyMixin(Object_Diagnosticable$36$13, diagnostics.Diagnosticable);
  navigation_rail_theme.NavigationRailThemeData = class NavigationRailThemeData extends Object_Diagnosticable$36$13 {
    get backgroundColor() {
      return this[S$.backgroundColor$7];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get elevation() {
      return this[S$.elevation$8];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get unselectedLabelTextStyle() {
      return this[S$.unselectedLabelTextStyle$1];
    }
    set unselectedLabelTextStyle(value) {
      super.unselectedLabelTextStyle = value;
    }
    get selectedLabelTextStyle() {
      return this[S$.selectedLabelTextStyle$1];
    }
    set selectedLabelTextStyle(value) {
      super.selectedLabelTextStyle = value;
    }
    get unselectedIconTheme() {
      return this[S$.unselectedIconTheme$1];
    }
    set unselectedIconTheme(value) {
      super.unselectedIconTheme = value;
    }
    get selectedIconTheme() {
      return this[S$.selectedIconTheme$1];
    }
    set selectedIconTheme(value) {
      super.selectedIconTheme = value;
    }
    get groupAlignment() {
      return this[S$.groupAlignment$1];
    }
    set groupAlignment(value) {
      super.groupAlignment = value;
    }
    get labelType() {
      return this[S$.labelType$1];
    }
    set labelType(value) {
      super.labelType = value;
    }
    get useIndicator() {
      return this[S$.useIndicator$1];
    }
    set useIndicator(value) {
      super.useIndicator = value;
    }
    get indicatorColor() {
      return this[S$.indicatorColor$3];
    }
    set indicatorColor(value) {
      super.indicatorColor = value;
    }
    get minWidth() {
      return this[S$.minWidth$1];
    }
    set minWidth(value) {
      super.minWidth = value;
    }
    get minExtendedWidth() {
      return this[S$.minExtendedWidth$1];
    }
    set minExtendedWidth(value) {
      super.minExtendedWidth = value;
    }
    static ['_#new#tearOff'](opts) {
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let unselectedLabelTextStyle = opts && 'unselectedLabelTextStyle' in opts ? opts.unselectedLabelTextStyle : null;
      let selectedLabelTextStyle = opts && 'selectedLabelTextStyle' in opts ? opts.selectedLabelTextStyle : null;
      let unselectedIconTheme = opts && 'unselectedIconTheme' in opts ? opts.unselectedIconTheme : null;
      let selectedIconTheme = opts && 'selectedIconTheme' in opts ? opts.selectedIconTheme : null;
      let groupAlignment = opts && 'groupAlignment' in opts ? opts.groupAlignment : null;
      let labelType = opts && 'labelType' in opts ? opts.labelType : null;
      let useIndicator = opts && 'useIndicator' in opts ? opts.useIndicator : null;
      let indicatorColor = opts && 'indicatorColor' in opts ? opts.indicatorColor : null;
      let minWidth = opts && 'minWidth' in opts ? opts.minWidth : null;
      let minExtendedWidth = opts && 'minExtendedWidth' in opts ? opts.minExtendedWidth : null;
      return new navigation_rail_theme.NavigationRailThemeData.new({backgroundColor: backgroundColor, elevation: elevation, unselectedLabelTextStyle: unselectedLabelTextStyle, selectedLabelTextStyle: selectedLabelTextStyle, unselectedIconTheme: unselectedIconTheme, selectedIconTheme: selectedIconTheme, groupAlignment: groupAlignment, labelType: labelType, useIndicator: useIndicator, indicatorColor: indicatorColor, minWidth: minWidth, minExtendedWidth: minExtendedWidth});
    }
    copyWith(opts) {
      let t34, t34$, t34$0, t34$1, t34$2, t34$3, t34$4, t34$5, t34$6, t34$7, t34$8, t34$9;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let unselectedLabelTextStyle = opts && 'unselectedLabelTextStyle' in opts ? opts.unselectedLabelTextStyle : null;
      let selectedLabelTextStyle = opts && 'selectedLabelTextStyle' in opts ? opts.selectedLabelTextStyle : null;
      let unselectedIconTheme = opts && 'unselectedIconTheme' in opts ? opts.unselectedIconTheme : null;
      let selectedIconTheme = opts && 'selectedIconTheme' in opts ? opts.selectedIconTheme : null;
      let groupAlignment = opts && 'groupAlignment' in opts ? opts.groupAlignment : null;
      let labelType = opts && 'labelType' in opts ? opts.labelType : null;
      let useIndicator = opts && 'useIndicator' in opts ? opts.useIndicator : null;
      let indicatorColor = opts && 'indicatorColor' in opts ? opts.indicatorColor : null;
      let minWidth = opts && 'minWidth' in opts ? opts.minWidth : null;
      let minExtendedWidth = opts && 'minExtendedWidth' in opts ? opts.minExtendedWidth : null;
      return new navigation_rail_theme.NavigationRailThemeData.new({backgroundColor: (t34 = backgroundColor, t34 == null ? this.backgroundColor : t34), elevation: (t34$ = elevation, t34$ == null ? this.elevation : t34$), unselectedLabelTextStyle: (t34$0 = unselectedLabelTextStyle, t34$0 == null ? this.unselectedLabelTextStyle : t34$0), selectedLabelTextStyle: (t34$1 = selectedLabelTextStyle, t34$1 == null ? this.selectedLabelTextStyle : t34$1), unselectedIconTheme: (t34$2 = unselectedIconTheme, t34$2 == null ? this.unselectedIconTheme : t34$2), selectedIconTheme: (t34$3 = selectedIconTheme, t34$3 == null ? this.selectedIconTheme : t34$3), groupAlignment: (t34$4 = groupAlignment, t34$4 == null ? this.groupAlignment : t34$4), labelType: (t34$5 = labelType, t34$5 == null ? this.labelType : t34$5), useIndicator: (t34$6 = useIndicator, t34$6 == null ? this.useIndicator : t34$6), indicatorColor: (t34$7 = indicatorColor, t34$7 == null ? this.indicatorColor : t34$7), minWidth: (t34$8 = minWidth, t34$8 == null ? this.minWidth : t34$8), minExtendedWidth: (t34$9 = minExtendedWidth, t34$9 == null ? this.minExtendedWidth : t34$9)});
    }
    static lerp(a, b, t) {
      let t34, t34$, t34$0, t34$1, t34$2, t34$3, t34$4, t34$5, t34$6, t34$7, t34$8, t34$9, t34$10, t34$11, t34$12, t34$13, t34$14, t34$15, t34$16, t34$17, t34$18, t34$19, t34$20, t34$21;
      if (!(t !== null)) dart.assertFailed(null, I[50], 137, 12, "t != null");
      if (a == null && b == null) {
        return null;
      }
      return new navigation_rail_theme.NavigationRailThemeData.new({backgroundColor: ui.Color.lerp((t34 = a, t34 == null ? null : t34.backgroundColor), (t34$ = b, t34$ == null ? null : t34$.backgroundColor), t), elevation: ui.lerpDouble((t34$0 = a, t34$0 == null ? null : t34$0.elevation), (t34$1 = b, t34$1 == null ? null : t34$1.elevation), t), unselectedLabelTextStyle: text_style.TextStyle.lerp((t34$2 = a, t34$2 == null ? null : t34$2.unselectedLabelTextStyle), (t34$3 = b, t34$3 == null ? null : t34$3.unselectedLabelTextStyle), t), selectedLabelTextStyle: text_style.TextStyle.lerp((t34$4 = a, t34$4 == null ? null : t34$4.selectedLabelTextStyle), (t34$5 = b, t34$5 == null ? null : t34$5.selectedLabelTextStyle), t), unselectedIconTheme: icon_theme_data.IconThemeData.lerp((t34$6 = a, t34$6 == null ? null : t34$6.unselectedIconTheme), (t34$7 = b, t34$7 == null ? null : t34$7.unselectedIconTheme), t), selectedIconTheme: icon_theme_data.IconThemeData.lerp((t34$8 = a, t34$8 == null ? null : t34$8.selectedIconTheme), (t34$9 = b, t34$9 == null ? null : t34$9.selectedIconTheme), t), groupAlignment: ui.lerpDouble((t34$10 = a, t34$10 == null ? null : t34$10.groupAlignment), (t34$11 = b, t34$11 == null ? null : t34$11.groupAlignment), t), labelType: t < 0.5 ? (t34$12 = a, t34$12 == null ? null : t34$12.labelType) : (t34$13 = b, t34$13 == null ? null : t34$13.labelType), useIndicator: t < 0.5 ? (t34$14 = a, t34$14 == null ? null : t34$14.useIndicator) : (t34$15 = b, t34$15 == null ? null : t34$15.useIndicator), indicatorColor: ui.Color.lerp((t34$16 = a, t34$16 == null ? null : t34$16.indicatorColor), (t34$17 = b, t34$17 == null ? null : t34$17.indicatorColor), t), minWidth: ui.lerpDouble((t34$18 = a, t34$18 == null ? null : t34$18.minWidth), (t34$19 = b, t34$19 == null ? null : t34$19.minWidth), t), minExtendedWidth: ui.lerpDouble((t34$20 = a, t34$20 == null ? null : t34$20.minExtendedWidth), (t34$21 = b, t34$21 == null ? null : t34$21.minExtendedWidth), t)});
    }
    get hashCode() {
      return core.Object.hash(this.backgroundColor, this.elevation, this.unselectedLabelTextStyle, this.selectedLabelTextStyle, this.unselectedIconTheme, this.selectedIconTheme, this.groupAlignment, this.labelType, this.useIndicator, this.indicatorColor, this.minWidth, this.minExtendedWidth);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      if (!other[S.$runtimeType]._equals(this[S.$runtimeType])) {
        return false;
      }
      return navigation_rail_theme.NavigationRailThemeData.is(other) && dart.equals(other.backgroundColor, this.backgroundColor) && other.elevation == this.elevation && dart.equals(other.unselectedLabelTextStyle, this.unselectedLabelTextStyle) && dart.equals(other.selectedLabelTextStyle, this.selectedLabelTextStyle) && dart.equals(other.unselectedIconTheme, this.unselectedIconTheme) && dart.equals(other.selectedIconTheme, this.selectedIconTheme) && other.groupAlignment == this.groupAlignment && other.labelType == this.labelType && other.useIndicator == this.useIndicator && dart.equals(other.indicatorColor, this.indicatorColor) && other.minWidth == this.minWidth && other.minExtendedWidth == this.minExtendedWidth;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      let defaultData = C[430] || CT.C430;
      properties.add(new colors.ColorProperty.new("backgroundColor", this.backgroundColor, {defaultValue: defaultData.backgroundColor}));
      properties.add(new diagnostics.DoubleProperty.new("elevation", this.elevation, {defaultValue: defaultData.elevation}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("unselectedLabelTextStyle", this.unselectedLabelTextStyle, {defaultValue: defaultData.unselectedLabelTextStyle}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("selectedLabelTextStyle", this.selectedLabelTextStyle, {defaultValue: defaultData.selectedLabelTextStyle}));
      properties.add(new (T$.DiagnosticsPropertyOfIconThemeData()).new("unselectedIconTheme", this.unselectedIconTheme, {defaultValue: defaultData.unselectedIconTheme}));
      properties.add(new (T$.DiagnosticsPropertyOfIconThemeData()).new("selectedIconTheme", this.selectedIconTheme, {defaultValue: defaultData.selectedIconTheme}));
      properties.add(new diagnostics.DoubleProperty.new("groupAlignment", this.groupAlignment, {defaultValue: defaultData.groupAlignment}));
      properties.add(new (T$.DiagnosticsPropertyOfNavigationRailLabelType()).new("labelType", this.labelType, {defaultValue: defaultData.labelType}));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("useIndicator", this.useIndicator, {defaultValue: defaultData.useIndicator}));
      properties.add(new colors.ColorProperty.new("indicatorColor", this.indicatorColor, {defaultValue: defaultData.indicatorColor}));
      properties.add(new diagnostics.DoubleProperty.new("minWidth", this.minWidth, {defaultValue: defaultData.minWidth}));
      properties.add(new diagnostics.DoubleProperty.new("minExtendedWidth", this.minExtendedWidth, {defaultValue: defaultData.minExtendedWidth}));
    }
  };
  (navigation_rail_theme.NavigationRailThemeData.new = function(opts) {
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let unselectedLabelTextStyle = opts && 'unselectedLabelTextStyle' in opts ? opts.unselectedLabelTextStyle : null;
    let selectedLabelTextStyle = opts && 'selectedLabelTextStyle' in opts ? opts.selectedLabelTextStyle : null;
    let unselectedIconTheme = opts && 'unselectedIconTheme' in opts ? opts.unselectedIconTheme : null;
    let selectedIconTheme = opts && 'selectedIconTheme' in opts ? opts.selectedIconTheme : null;
    let groupAlignment = opts && 'groupAlignment' in opts ? opts.groupAlignment : null;
    let labelType = opts && 'labelType' in opts ? opts.labelType : null;
    let useIndicator = opts && 'useIndicator' in opts ? opts.useIndicator : null;
    let indicatorColor = opts && 'indicatorColor' in opts ? opts.indicatorColor : null;
    let minWidth = opts && 'minWidth' in opts ? opts.minWidth : null;
    let minExtendedWidth = opts && 'minExtendedWidth' in opts ? opts.minExtendedWidth : null;
    this[S$.backgroundColor$7] = backgroundColor;
    this[S$.elevation$8] = elevation;
    this[S$.unselectedLabelTextStyle$1] = unselectedLabelTextStyle;
    this[S$.selectedLabelTextStyle$1] = selectedLabelTextStyle;
    this[S$.unselectedIconTheme$1] = unselectedIconTheme;
    this[S$.selectedIconTheme$1] = selectedIconTheme;
    this[S$.groupAlignment$1] = groupAlignment;
    this[S$.labelType$1] = labelType;
    this[S$.useIndicator$1] = useIndicator;
    this[S$.indicatorColor$3] = indicatorColor;
    this[S$.minWidth$1] = minWidth;
    this[S$.minExtendedWidth$1] = minExtendedWidth;
    ;
  }).prototype = navigation_rail_theme.NavigationRailThemeData.prototype;
  dart.addTypeTests(navigation_rail_theme.NavigationRailThemeData);
  dart.addTypeCaches(navigation_rail_theme.NavigationRailThemeData);
  dart.setMethodSignature(navigation_rail_theme.NavigationRailThemeData, () => ({
    __proto__: dart.getMethods(navigation_rail_theme.NavigationRailThemeData.__proto__),
    copyWith: dart.fnType(navigation_rail_theme.NavigationRailThemeData, [], {backgroundColor: dart.nullable(ui.Color), elevation: dart.nullable(core.double), groupAlignment: dart.nullable(core.double), indicatorColor: dart.nullable(ui.Color), labelType: dart.nullable(navigation_rail.NavigationRailLabelType), minExtendedWidth: dart.nullable(core.double), minWidth: dart.nullable(core.double), selectedIconTheme: dart.nullable(icon_theme_data.IconThemeData), selectedLabelTextStyle: dart.nullable(text_style.TextStyle), unselectedIconTheme: dart.nullable(icon_theme_data.IconThemeData), unselectedLabelTextStyle: dart.nullable(text_style.TextStyle), useIndicator: dart.nullable(core.bool)}, {})
  }));
  dart.setStaticMethodSignature(navigation_rail_theme.NavigationRailThemeData, () => ['lerp']);
  dart.setLibraryUri(navigation_rail_theme.NavigationRailThemeData, I[51]);
  dart.setFieldSignature(navigation_rail_theme.NavigationRailThemeData, () => ({
    __proto__: dart.getFields(navigation_rail_theme.NavigationRailThemeData.__proto__),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    unselectedLabelTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    selectedLabelTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    unselectedIconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData)),
    selectedIconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData)),
    groupAlignment: dart.finalFieldType(dart.nullable(core.double)),
    labelType: dart.finalFieldType(dart.nullable(navigation_rail.NavigationRailLabelType)),
    useIndicator: dart.finalFieldType(dart.nullable(core.bool)),
    indicatorColor: dart.finalFieldType(dart.nullable(ui.Color)),
    minWidth: dart.finalFieldType(dart.nullable(core.double)),
    minExtendedWidth: dart.finalFieldType(dart.nullable(core.double))
  }));
  dart.defineExtensionMethods(navigation_rail_theme.NavigationRailThemeData, ['_equals']);
  dart.defineExtensionAccessors(navigation_rail_theme.NavigationRailThemeData, ['hashCode']);
  navigation_rail._NavigationRailDefaultsM2 = class _NavigationRailDefaultsM2 extends navigation_rail_theme.NavigationRailThemeData {
    static ['_#new#tearOff'](context) {
      return new navigation_rail._NavigationRailDefaultsM2.new(context);
    }
    get backgroundColor() {
      return this[S$._colors$3].surface;
    }
    get unselectedLabelTextStyle() {
      return dart.nullCheck(this[S$._theme$1].textTheme.bodyText1).copyWith({color: this[S$._colors$3].onSurface.withOpacity(0.64)});
    }
    get selectedLabelTextStyle() {
      return dart.nullCheck(this[S$._theme$1].textTheme.bodyText1).copyWith({color: this[S$._colors$3].primary});
    }
    get unselectedIconTheme() {
      return new icon_theme_data.IconThemeData.new({size: 24.0, color: this[S$._colors$3].onSurface, opacity: 0.64});
    }
    get selectedIconTheme() {
      return new icon_theme_data.IconThemeData.new({size: 24.0, color: this[S$._colors$3].primary, opacity: 1.0});
    }
  };
  (navigation_rail._NavigationRailDefaultsM2.new = function(context) {
    this[S$._theme$1] = theme$.Theme.of(context);
    this[S$._colors$3] = theme$.Theme.of(context).colorScheme;
    navigation_rail._NavigationRailDefaultsM2.__proto__.new.call(this, {elevation: 0.0, groupAlignment: -1.0, labelType: navigation_rail.NavigationRailLabelType.none, useIndicator: false, minWidth: 72.0, minExtendedWidth: 256.0});
    ;
  }).prototype = navigation_rail._NavigationRailDefaultsM2.prototype;
  dart.addTypeTests(navigation_rail._NavigationRailDefaultsM2);
  dart.addTypeCaches(navigation_rail._NavigationRailDefaultsM2);
  dart.setGetterSignature(navigation_rail._NavigationRailDefaultsM2, () => ({
    __proto__: dart.getGetters(navigation_rail._NavigationRailDefaultsM2.__proto__),
    backgroundColor: dart.nullable(ui.Color),
    unselectedLabelTextStyle: dart.nullable(text_style.TextStyle),
    selectedLabelTextStyle: dart.nullable(text_style.TextStyle),
    unselectedIconTheme: dart.nullable(icon_theme_data.IconThemeData),
    selectedIconTheme: dart.nullable(icon_theme_data.IconThemeData)
  }));
  dart.setLibraryUri(navigation_rail._NavigationRailDefaultsM2, I[49]);
  dart.setFieldSignature(navigation_rail._NavigationRailDefaultsM2, () => ({
    __proto__: dart.getFields(navigation_rail._NavigationRailDefaultsM2.__proto__),
    [S$._theme$1]: dart.finalFieldType(theme_data.ThemeData),
    [S$._colors$3]: dart.finalFieldType(color_scheme.ColorScheme)
  }));
  navigation_rail._NavigationRailDefaultsM3 = class _NavigationRailDefaultsM3 extends navigation_rail_theme.NavigationRailThemeData {
    static ['_#new#tearOff'](context) {
      return new navigation_rail._NavigationRailDefaultsM3.new(context);
    }
    get [S$._colors$3]() {
      let t35, t34;
      t34 = this[S$.___NavigationRailDefaultsM3__colors];
      return t34 == null ? (t35 = theme$.Theme.of(this.context).colorScheme, this[S$.___NavigationRailDefaultsM3__colors] == null ? this[S$.___NavigationRailDefaultsM3__colors] = t35 : dart.throw(new _internal.LateError.fieldADI("_colors"))) : t34;
    }
    get [S$._textTheme$1]() {
      let t35, t34;
      t34 = this[S$.___NavigationRailDefaultsM3__textTheme];
      return t34 == null ? (t35 = theme$.Theme.of(this.context).textTheme, this[S$.___NavigationRailDefaultsM3__textTheme] == null ? this[S$.___NavigationRailDefaultsM3__textTheme] = t35 : dart.throw(new _internal.LateError.fieldADI("_textTheme"))) : t34;
    }
    get backgroundColor() {
      return this[S$._colors$3].surface;
    }
    get unselectedLabelTextStyle() {
      return dart.nullCheck(this[S$._textTheme$1].labelMedium).copyWith({color: this[S$._colors$3].onSurface});
    }
    get selectedLabelTextStyle() {
      return dart.nullCheck(this[S$._textTheme$1].labelMedium).copyWith({color: this[S$._colors$3].onSurface});
    }
    get unselectedIconTheme() {
      return new icon_theme_data.IconThemeData.new({size: 24.0, color: this[S$._colors$3].onSurfaceVariant});
    }
    get selectedIconTheme() {
      return new icon_theme_data.IconThemeData.new({size: 24.0, color: this[S$._colors$3].onSecondaryContainer});
    }
    get indicatorColor() {
      return this[S$._colors$3].secondaryContainer;
    }
  };
  (navigation_rail._NavigationRailDefaultsM3.new = function(context) {
    this[S$.___NavigationRailDefaultsM3__colors] = null;
    this[S$.___NavigationRailDefaultsM3__textTheme] = null;
    this.context = context;
    navigation_rail._NavigationRailDefaultsM3.__proto__.new.call(this, {elevation: 0.0, groupAlignment: -1.0, labelType: navigation_rail.NavigationRailLabelType.none, useIndicator: true, minWidth: 80.0, minExtendedWidth: 256.0});
    ;
  }).prototype = navigation_rail._NavigationRailDefaultsM3.prototype;
  dart.addTypeTests(navigation_rail._NavigationRailDefaultsM3);
  dart.addTypeCaches(navigation_rail._NavigationRailDefaultsM3);
  dart.setGetterSignature(navigation_rail._NavigationRailDefaultsM3, () => ({
    __proto__: dart.getGetters(navigation_rail._NavigationRailDefaultsM3.__proto__),
    [S$._colors$3]: color_scheme.ColorScheme,
    [S$._textTheme$1]: text_theme.TextTheme,
    backgroundColor: dart.nullable(ui.Color),
    unselectedLabelTextStyle: dart.nullable(text_style.TextStyle),
    selectedLabelTextStyle: dart.nullable(text_style.TextStyle),
    unselectedIconTheme: dart.nullable(icon_theme_data.IconThemeData),
    selectedIconTheme: dart.nullable(icon_theme_data.IconThemeData),
    indicatorColor: dart.nullable(ui.Color)
  }));
  dart.setLibraryUri(navigation_rail._NavigationRailDefaultsM3, I[49]);
  dart.setFieldSignature(navigation_rail._NavigationRailDefaultsM3, () => ({
    __proto__: dart.getFields(navigation_rail._NavigationRailDefaultsM3.__proto__),
    context: dart.finalFieldType(framework.BuildContext),
    [S$.___NavigationRailDefaultsM3__colors]: dart.fieldType(dart.nullable(color_scheme.ColorScheme)),
    [S$.___NavigationRailDefaultsM3__textTheme]: dart.fieldType(dart.nullable(text_theme.TextTheme))
  }));
  dart.defineLazy(navigation_rail, {
    /*navigation_rail._horizontalDestinationPadding*/get _horizontalDestinationPadding() {
      return 8;
    },
    /*navigation_rail._verticalDestinationPaddingNoLabel*/get _verticalDestinationPaddingNoLabel() {
      return 24;
    },
    /*navigation_rail._verticalDestinationPaddingWithLabel*/get _verticalDestinationPaddingWithLabel() {
      return 16;
    },
    /*navigation_rail._verticalSpacer*/get _verticalSpacer() {
      return C[431] || CT.C431;
    },
    /*navigation_rail._verticalIconLabelSpacingM3*/get _verticalIconLabelSpacingM3() {
      return 4;
    },
    /*navigation_rail._verticalDestinationSpacingM3*/get _verticalDestinationSpacingM3() {
      return 12;
    }
  }, false);
  navigation_rail_theme.NavigationRailTheme = class NavigationRailTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[S$.data$11];
    }
    set data(value) {
      super.data = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let data = opts && 'data' in opts ? opts.data : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new navigation_rail_theme.NavigationRailTheme.new({key: key, data: data, child: child, $creationLocationd_0dea112b090073317d4: C[433] || CT.C433});
    }
    static of(context) {
      let t34, t34$;
      let navigationRailTheme = context.dependOnInheritedWidgetOfExactType(navigation_rail_theme.NavigationRailTheme);
      t34$ = (t34 = navigationRailTheme, t34 == null ? null : t34.data);
      return t34$ == null ? theme$.Theme.of(context).navigationRailTheme : t34$;
    }
    wrap(context, child) {
      return new navigation_rail_theme.NavigationRailTheme.new({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C[434] || CT.C434});
    }
    updateShouldNotify(oldWidget) {
      navigation_rail_theme.NavigationRailTheme.as(oldWidget);
      return !this.data._equals(oldWidget.data);
    }
  };
  (navigation_rail_theme.NavigationRailTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.data$11] = data;
    if (!(data !== null)) dart.assertFailed(null, I[50], 231, 15, "data != null");
    navigation_rail_theme.NavigationRailTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = navigation_rail_theme.NavigationRailTheme.prototype;
  dart.addTypeTests(navigation_rail_theme.NavigationRailTheme);
  dart.addTypeCaches(navigation_rail_theme.NavigationRailTheme);
  dart.setMethodSignature(navigation_rail_theme.NavigationRailTheme, () => ({
    __proto__: dart.getMethods(navigation_rail_theme.NavigationRailTheme.__proto__),
    wrap: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget]),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setStaticMethodSignature(navigation_rail_theme.NavigationRailTheme, () => ['of']);
  dart.setLibraryUri(navigation_rail_theme.NavigationRailTheme, I[51]);
  dart.setFieldSignature(navigation_rail_theme.NavigationRailTheme, () => ({
    __proto__: dart.getFields(navigation_rail_theme.NavigationRailTheme.__proto__),
    data: dart.finalFieldType(navigation_rail_theme.NavigationRailThemeData)
  }));
  navigation_bar.NavigationBar = class NavigationBar extends framework.StatelessWidget {
    get animationDuration() {
      return this[S$.animationDuration$1];
    }
    set animationDuration(value) {
      super.animationDuration = value;
    }
    get selectedIndex() {
      return this[S$.selectedIndex$1];
    }
    set selectedIndex(value) {
      super.selectedIndex = value;
    }
    get destinations() {
      return this[S$.destinations$1];
    }
    set destinations(value) {
      super.destinations = value;
    }
    get onDestinationSelected() {
      return this[S$.onDestinationSelected$1];
    }
    set onDestinationSelected(value) {
      super.onDestinationSelected = value;
    }
    get backgroundColor() {
      return this[S$.backgroundColor$8];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get surfaceTintColor() {
      return this[S$.surfaceTintColor$1];
    }
    set surfaceTintColor(value) {
      super.surfaceTintColor = value;
    }
    get elevation() {
      return this[S$.elevation$9];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get height() {
      return this[S$.height$1];
    }
    set height(value) {
      super.height = value;
    }
    get labelBehavior() {
      return this[S$.labelBehavior];
    }
    set labelBehavior(value) {
      super.labelBehavior = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let animationDuration = opts && 'animationDuration' in opts ? opts.animationDuration : null;
      let selectedIndex = opts && 'selectedIndex' in opts ? opts.selectedIndex : 0;
      let destinations = opts && 'destinations' in opts ? opts.destinations : null;
      let onDestinationSelected = opts && 'onDestinationSelected' in opts ? opts.onDestinationSelected : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let surfaceTintColor = opts && 'surfaceTintColor' in opts ? opts.surfaceTintColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let height = opts && 'height' in opts ? opts.height : null;
      let labelBehavior = opts && 'labelBehavior' in opts ? opts.labelBehavior : null;
      return new navigation_bar.NavigationBar.new({key: key, animationDuration: animationDuration, selectedIndex: selectedIndex, destinations: destinations, onDestinationSelected: onDestinationSelected, backgroundColor: backgroundColor, surfaceTintColor: surfaceTintColor, elevation: elevation, height: height, labelBehavior: labelBehavior, $creationLocationd_0dea112b090073317d4: C[435] || CT.C435});
    }
    [S$._handleTap$1](index) {
      return this.onDestinationSelected != null ? dart.fn(() => dart.nullCheck(this.onDestinationSelected)(index), T$.VoidTovoid()) : dart.fn(() => {
      }, T$.VoidTovoid());
    }
    build(context) {
      let t34, t34$, t34$0, t34$1, t34$2, t34$3, t34$4, t34$5, t34$6, t34$7, t35;
      let defaults = navigation_bar._defaultsFor(context);
      let navigationBarTheme = navigation_bar_theme.NavigationBarTheme.of(context);
      let effectiveHeight = (t34$ = (t34 = this.height, t34 == null ? navigationBarTheme.height : t34), t34$ == null ? dart.nullCheck(defaults.height) : t34$);
      let effectiveLabelBehavior = (t34$1 = (t34$0 = this.labelBehavior, t34$0 == null ? navigationBarTheme.labelBehavior : t34$0), t34$1 == null ? dart.nullCheck(defaults.labelBehavior) : t34$1);
      return new material.Material.new({color: (t34$3 = (t34$2 = this.backgroundColor, t34$2 == null ? navigationBarTheme.backgroundColor : t34$2), t34$3 == null ? dart.nullCheck(defaults.backgroundColor) : t34$3), surfaceTintColor: (t34$5 = (t34$4 = this.surfaceTintColor, t34$4 == null ? navigationBarTheme.surfaceTintColor : t34$4), t34$5 == null ? defaults.surfaceTintColor : t34$5), elevation: (t34$7 = (t34$6 = this.elevation, t34$6 == null ? navigationBarTheme.elevation : t34$6), t34$7 == null ? dart.nullCheck(defaults.elevation) : t34$7), child: new safe_area.SafeArea.new({child: new basic.SizedBox.new({height: effectiveHeight, child: new basic.Row.new({children: (() => {
                let t34 = T$.JSArrayOfWidget().of([]);
                for (let i = 0; i < this.destinations[S.$length]; i = i + 1)
                  t34.push(new basic.Expanded.new({child: new navigation_bar._SelectableAnimatedBuilder.new({duration: (t35 = this.animationDuration, t35 == null ? C[436] || CT.C436 : t35), isSelected: i === this.selectedIndex, builder: dart.fn((context, animation) => new navigation_bar._NavigationDestinationInfo.new({index: i, totalNumberOfDestinations: this.destinations[S.$length], selectedAnimation: animation, labelBehavior: effectiveLabelBehavior, onTap: this[S$._handleTap$1](i), child: this.destinations[S.$_get](i), $creationLocationd_0dea112b090073317d4: C[437] || CT.C437}), T$.BuildContextAndAnimationOfdoubleTo_NavigationDestinationInfo()), $creationLocationd_0dea112b090073317d4: C[438] || CT.C438}), $creationLocationd_0dea112b090073317d4: C[439] || CT.C439}));
                return t34;
              })(), $creationLocationd_0dea112b090073317d4: C[440] || CT.C440}), $creationLocationd_0dea112b090073317d4: C[441] || CT.C441}), $creationLocationd_0dea112b090073317d4: C[442] || CT.C442}), $creationLocationd_0dea112b090073317d4: C[443] || CT.C443});
    }
  };
  (navigation_bar.NavigationBar.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let animationDuration = opts && 'animationDuration' in opts ? opts.animationDuration : null;
    let selectedIndex = opts && 'selectedIndex' in opts ? opts.selectedIndex : 0;
    let destinations = opts && 'destinations' in opts ? opts.destinations : null;
    let onDestinationSelected = opts && 'onDestinationSelected' in opts ? opts.onDestinationSelected : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let surfaceTintColor = opts && 'surfaceTintColor' in opts ? opts.surfaceTintColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let labelBehavior = opts && 'labelBehavior' in opts ? opts.labelBehavior : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.animationDuration$1] = animationDuration;
    this[S$.selectedIndex$1] = selectedIndex;
    this[S$.destinations$1] = destinations;
    this[S$.onDestinationSelected$1] = onDestinationSelected;
    this[S$.backgroundColor$8] = backgroundColor;
    this[S$.surfaceTintColor$1] = surfaceTintColor;
    this[S$.elevation$9] = elevation;
    this[S$.height$1] = height;
    this[S$.labelBehavior] = labelBehavior;
    if (!(destinations !== null && destinations[S.$length] >= 2)) dart.assertFailed(null, I[52], 68, 16, "destinations != null && destinations.length >= 2");
    if (!(0 <= selectedIndex && selectedIndex < destinations[S.$length])) dart.assertFailed(null, I[52], 69, 16, "0 <= selectedIndex && selectedIndex < destinations.length");
    navigation_bar.NavigationBar.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = navigation_bar.NavigationBar.prototype;
  dart.addTypeTests(navigation_bar.NavigationBar);
  dart.addTypeCaches(navigation_bar.NavigationBar);
  dart.setMethodSignature(navigation_bar.NavigationBar, () => ({
    __proto__: dart.getMethods(navigation_bar.NavigationBar.__proto__),
    [S$._handleTap$1]: dart.fnType(dart.fnType(dart.void, []), [core.int]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(navigation_bar.NavigationBar, I[53]);
  dart.setFieldSignature(navigation_bar.NavigationBar, () => ({
    __proto__: dart.getFields(navigation_bar.NavigationBar.__proto__),
    animationDuration: dart.finalFieldType(dart.nullable(core.Duration)),
    selectedIndex: dart.finalFieldType(core.int),
    destinations: dart.finalFieldType(core.List$(framework.Widget)),
    onDestinationSelected: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.int]))),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    surfaceTintColor: dart.finalFieldType(dart.nullable(ui.Color)),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    height: dart.finalFieldType(dart.nullable(core.double)),
    labelBehavior: dart.finalFieldType(dart.nullable(navigation_bar.NavigationDestinationLabelBehavior))
  }));
  navigation_bar.NavigationDestinationLabelBehavior = class NavigationDestinationLabelBehavior extends core._Enum {
    toString() {
      return "NavigationDestinationLabelBehavior." + this[S._name];
    }
  };
  (navigation_bar.NavigationDestinationLabelBehavior.new = function(index, name) {
    navigation_bar.NavigationDestinationLabelBehavior.__proto__.new.call(this, index, name);
    ;
  }).prototype = navigation_bar.NavigationDestinationLabelBehavior.prototype;
  dart.addTypeTests(navigation_bar.NavigationDestinationLabelBehavior);
  dart.addTypeCaches(navigation_bar.NavigationDestinationLabelBehavior);
  dart.setLibraryUri(navigation_bar.NavigationDestinationLabelBehavior, I[53]);
  dart.setStaticFieldSignature(navigation_bar.NavigationDestinationLabelBehavior, () => ['values', 'alwaysShow', 'alwaysHide', 'onlyShowSelected']);
  dart.defineExtensionMethods(navigation_bar.NavigationDestinationLabelBehavior, ['toString']);
  dart.defineLazy(navigation_bar.NavigationDestinationLabelBehavior, {
    /*navigation_bar.NavigationDestinationLabelBehavior.values*/get values() {
      return C[444] || CT.C444;
    },
    /*navigation_bar.NavigationDestinationLabelBehavior.alwaysShow*/get alwaysShow() {
      return C[445] || CT.C445;
    },
    /*navigation_bar.NavigationDestinationLabelBehavior.alwaysHide*/get alwaysHide() {
      return C[446] || CT.C446;
    },
    /*navigation_bar.NavigationDestinationLabelBehavior.onlyShowSelected*/get onlyShowSelected() {
      return C[447] || CT.C447;
    }
  }, false);
  navigation_bar.NavigationDestination = class NavigationDestination extends framework.StatelessWidget {
    get icon() {
      return this[S$.icon$4];
    }
    set icon(value) {
      super.icon = value;
    }
    get selectedIcon() {
      return this[S$.selectedIcon$2];
    }
    set selectedIcon(value) {
      super.selectedIcon = value;
    }
    get label() {
      return this[S$.label$3];
    }
    set label(value) {
      super.label = value;
    }
    get tooltip() {
      return this[S$.tooltip$2];
    }
    set tooltip(value) {
      super.tooltip = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let icon = opts && 'icon' in opts ? opts.icon : null;
      let selectedIcon = opts && 'selectedIcon' in opts ? opts.selectedIcon : null;
      let label = opts && 'label' in opts ? opts.label : null;
      let tooltip = opts && 'tooltip' in opts ? opts.tooltip : null;
      return new navigation_bar.NavigationDestination.new({key: key, icon: icon, selectedIcon: selectedIcon, label: label, tooltip: tooltip, $creationLocationd_0dea112b090073317d4: C[448] || CT.C448});
    }
    build(context) {
      let selectedState = C[449] || CT.C449;
      let unselectedState = C[451] || CT.C451;
      let navigationBarTheme = navigation_bar_theme.NavigationBarTheme.of(context);
      let defaults = navigation_bar._defaultsFor(context);
      let animation = navigation_bar._NavigationDestinationInfo.of(context).selectedAnimation;
      return new navigation_bar._NavigationDestinationBuilder.new({label: this.label, tooltip: this.tooltip, buildIcon: dart.fn(context => {
          let t37, t37$, t37$0, t37$1, t37$2, t37$3, t37$4;
          let selectedIconWidget = icon_theme.IconTheme.merge({data: (t37$ = (t37 = navigationBarTheme.iconTheme, t37 == null ? null : t37.resolve(selectedState)), t37$ == null ? dart.nullCheck(dart.nullCheck(defaults.iconTheme).resolve(selectedState)) : t37$), child: (t37$0 = this.selectedIcon, t37$0 == null ? this.icon : t37$0)});
          let unselectedIconWidget = icon_theme.IconTheme.merge({data: (t37$2 = (t37$1 = navigationBarTheme.iconTheme, t37$1 == null ? null : t37$1.resolve(unselectedState)), t37$2 == null ? dart.nullCheck(dart.nullCheck(defaults.iconTheme).resolve(unselectedState)) : t37$2), child: this.icon});
          return new basic.Stack.new({alignment: alignment.Alignment.center, children: T$.JSArrayOfWidget().of([new navigation_bar.NavigationIndicator.new({animation: animation, color: (t37$3 = navigationBarTheme.indicatorColor, t37$3 == null ? dart.nullCheck(defaults.indicatorColor) : t37$3), shape: (t37$4 = navigationBarTheme.indicatorShape, t37$4 == null ? dart.nullCheck(defaults.indicatorShape) : t37$4), $creationLocationd_0dea112b090073317d4: C[452] || CT.C452}), new navigation_bar._StatusTransitionWidgetBuilder.new({animation: animation, builder: dart.fn((context, child) => navigation_bar._isForwardOrCompleted(animation) ? selectedIconWidget : unselectedIconWidget, T$.BuildContextAndWidgetNToWidget()), $creationLocationd_0dea112b090073317d4: C[453] || CT.C453})]), $creationLocationd_0dea112b090073317d4: C[454] || CT.C454});
        }, T$.BuildContextToStack()), buildLabel: dart.fn(context => {
          let t37, t37$, t37$0, t37$1;
          let effectiveSelectedLabelTextStyle = (t37$ = (t37 = navigationBarTheme.labelTextStyle, t37 == null ? null : t37.resolve(selectedState)), t37$ == null ? dart.nullCheck(defaults.labelTextStyle).resolve(selectedState) : t37$);
          let effectiveUnselectedLabelTextStyle = (t37$1 = (t37$0 = navigationBarTheme.labelTextStyle, t37$0 == null ? null : t37$0.resolve(unselectedState)), t37$1 == null ? dart.nullCheck(defaults.labelTextStyle).resolve(unselectedState) : t37$1);
          return new basic.Padding.new({padding: C[455] || CT.C455, child: new navigation_bar._ClampTextScaleFactor.new({upperLimit: 1.0, child: new text$.Text.new(this.label, {style: navigation_bar._isForwardOrCompleted(animation) ? effectiveSelectedLabelTextStyle : effectiveUnselectedLabelTextStyle, $creationLocationd_0dea112b090073317d4: C[456] || CT.C456}), $creationLocationd_0dea112b090073317d4: C[457] || CT.C457}), $creationLocationd_0dea112b090073317d4: C[458] || CT.C458});
        }, T$.BuildContextToPadding()), $creationLocationd_0dea112b090073317d4: C[459] || CT.C459});
    }
  };
  (navigation_bar.NavigationDestination.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let icon = opts && 'icon' in opts ? opts.icon : null;
    let selectedIcon = opts && 'selectedIcon' in opts ? opts.selectedIcon : null;
    let label = opts && 'label' in opts ? opts.label : null;
    let tooltip = opts && 'tooltip' in opts ? opts.tooltip : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.icon$4] = icon;
    this[S$.selectedIcon$2] = selectedIcon;
    this[S$.label$3] = label;
    this[S$.tooltip$2] = tooltip;
    navigation_bar.NavigationDestination.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = navigation_bar.NavigationDestination.prototype;
  dart.addTypeTests(navigation_bar.NavigationDestination);
  dart.addTypeCaches(navigation_bar.NavigationDestination);
  dart.setMethodSignature(navigation_bar.NavigationDestination, () => ({
    __proto__: dart.getMethods(navigation_bar.NavigationDestination.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(navigation_bar.NavigationDestination, I[53]);
  dart.setFieldSignature(navigation_bar.NavigationDestination, () => ({
    __proto__: dart.getFields(navigation_bar.NavigationDestination.__proto__),
    icon: dart.finalFieldType(framework.Widget),
    selectedIcon: dart.finalFieldType(dart.nullable(framework.Widget)),
    label: dart.finalFieldType(core.String),
    tooltip: dart.finalFieldType(dart.nullable(core.String))
  }));
  navigation_bar._NavigationDestinationBuilder = class _NavigationDestinationBuilder extends framework.StatelessWidget {
    get buildIcon() {
      return this[S$.buildIcon];
    }
    set buildIcon(value) {
      super.buildIcon = value;
    }
    get buildLabel() {
      return this[S$.buildLabel];
    }
    set buildLabel(value) {
      super.buildLabel = value;
    }
    get label() {
      return this[S$.label$4];
    }
    set label(value) {
      super.label = value;
    }
    get tooltip() {
      return this[S$.tooltip$3];
    }
    set tooltip(value) {
      super.tooltip = value;
    }
    static ['_#new#tearOff'](opts) {
      let buildIcon = opts && 'buildIcon' in opts ? opts.buildIcon : null;
      let buildLabel = opts && 'buildLabel' in opts ? opts.buildLabel : null;
      let label = opts && 'label' in opts ? opts.label : null;
      let tooltip = opts && 'tooltip' in opts ? opts.tooltip : null;
      return new navigation_bar._NavigationDestinationBuilder.new({buildIcon: buildIcon, buildLabel: buildLabel, label: label, tooltip: tooltip, $creationLocationd_0dea112b090073317d4: C[460] || CT.C460});
    }
    build(context) {
      let t37, t37$, t37$0;
      let info = navigation_bar._NavigationDestinationInfo.of(context);
      return new navigation_bar._NavigationBarDestinationSemantics.new({child: new navigation_bar._NavigationBarDestinationTooltip.new({message: (t37 = this.tooltip, t37 == null ? this.label : t37), child: new ink_well.InkWell.new({highlightColor: colors$.Colors.transparent, onTap: info.onTap, child: new basic.Row.new({children: T$.JSArrayOfWidget().of([new basic.Expanded.new({child: new navigation_bar._NavigationBarDestinationLayout.new({icon: (t37$ = context, this.buildIcon(t37$)), label: (t37$0 = context, this.buildLabel(t37$0)), $creationLocationd_0dea112b090073317d4: C[461] || CT.C461}), $creationLocationd_0dea112b090073317d4: C[462] || CT.C462})]), $creationLocationd_0dea112b090073317d4: C[463] || CT.C463}), $creationLocationd_0dea112b090073317d4: C[464] || CT.C464}), $creationLocationd_0dea112b090073317d4: C[465] || CT.C465}), $creationLocationd_0dea112b090073317d4: C[466] || CT.C466});
    }
  };
  (navigation_bar._NavigationDestinationBuilder.new = function(opts) {
    let buildIcon = opts && 'buildIcon' in opts ? opts.buildIcon : null;
    let buildLabel = opts && 'buildLabel' in opts ? opts.buildLabel : null;
    let label = opts && 'label' in opts ? opts.label : null;
    let tooltip = opts && 'tooltip' in opts ? opts.tooltip : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.buildIcon] = buildIcon;
    this[S$.buildLabel] = buildLabel;
    this[S$.label$4] = label;
    this[S$.tooltip$3] = tooltip;
    navigation_bar._NavigationDestinationBuilder.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = navigation_bar._NavigationDestinationBuilder.prototype;
  dart.addTypeTests(navigation_bar._NavigationDestinationBuilder);
  dart.addTypeCaches(navigation_bar._NavigationDestinationBuilder);
  dart.setMethodSignature(navigation_bar._NavigationDestinationBuilder, () => ({
    __proto__: dart.getMethods(navigation_bar._NavigationDestinationBuilder.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(navigation_bar._NavigationDestinationBuilder, I[53]);
  dart.setFieldSignature(navigation_bar._NavigationDestinationBuilder, () => ({
    __proto__: dart.getFields(navigation_bar._NavigationDestinationBuilder.__proto__),
    buildIcon: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext])),
    buildLabel: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext])),
    label: dart.finalFieldType(core.String),
    tooltip: dart.finalFieldType(dart.nullable(core.String))
  }));
  navigation_bar._NavigationDestinationInfo = class _NavigationDestinationInfo extends framework.InheritedWidget {
    get index() {
      return this[S$.index];
    }
    set index(value) {
      super.index = value;
    }
    get totalNumberOfDestinations() {
      return this[S$.totalNumberOfDestinations];
    }
    set totalNumberOfDestinations(value) {
      super.totalNumberOfDestinations = value;
    }
    get selectedAnimation() {
      return this[S$.selectedAnimation];
    }
    set selectedAnimation(value) {
      super.selectedAnimation = value;
    }
    get labelBehavior() {
      return this[S$.labelBehavior$1];
    }
    set labelBehavior(value) {
      super.labelBehavior = value;
    }
    get onTap() {
      return this[S$.onTap$1];
    }
    set onTap(value) {
      super.onTap = value;
    }
    static ['_#new#tearOff'](opts) {
      let index = opts && 'index' in opts ? opts.index : null;
      let totalNumberOfDestinations = opts && 'totalNumberOfDestinations' in opts ? opts.totalNumberOfDestinations : null;
      let selectedAnimation = opts && 'selectedAnimation' in opts ? opts.selectedAnimation : null;
      let labelBehavior = opts && 'labelBehavior' in opts ? opts.labelBehavior : null;
      let onTap = opts && 'onTap' in opts ? opts.onTap : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new navigation_bar._NavigationDestinationInfo.new({index: index, totalNumberOfDestinations: totalNumberOfDestinations, selectedAnimation: selectedAnimation, labelBehavior: labelBehavior, onTap: onTap, child: child, $creationLocationd_0dea112b090073317d4: C[467] || CT.C467});
    }
    static of(context) {
      let result = context.dependOnInheritedWidgetOfExactType(navigation_bar._NavigationDestinationInfo);
      if (!(result != null)) dart.assertFailed("Navigation destinations need a _NavigationDestinationInfo parent, " + "which is usually provided by NavigationBar.", I[52], 491, 7, "result != null");
      return dart.nullCheck(result);
    }
    updateShouldNotify(oldWidget) {
      navigation_bar._NavigationDestinationInfo.as(oldWidget);
      return this.index !== oldWidget.index || this.totalNumberOfDestinations !== oldWidget.totalNumberOfDestinations || !this.selectedAnimation[S.$_equals](oldWidget.selectedAnimation) || this.labelBehavior !== oldWidget.labelBehavior || !this.onTap[S.$_equals](oldWidget.onTap);
    }
  };
  (navigation_bar._NavigationDestinationInfo.new = function(opts) {
    let index = opts && 'index' in opts ? opts.index : null;
    let totalNumberOfDestinations = opts && 'totalNumberOfDestinations' in opts ? opts.totalNumberOfDestinations : null;
    let selectedAnimation = opts && 'selectedAnimation' in opts ? opts.selectedAnimation : null;
    let labelBehavior = opts && 'labelBehavior' in opts ? opts.labelBehavior : null;
    let onTap = opts && 'onTap' in opts ? opts.onTap : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.index] = index;
    this[S$.totalNumberOfDestinations] = totalNumberOfDestinations;
    this[S$.selectedAnimation] = selectedAnimation;
    this[S$.labelBehavior$1] = labelBehavior;
    this[S$.onTap$1] = onTap;
    navigation_bar._NavigationDestinationInfo.__proto__.new.call(this, {child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = navigation_bar._NavigationDestinationInfo.prototype;
  dart.addTypeTests(navigation_bar._NavigationDestinationInfo);
  dart.addTypeCaches(navigation_bar._NavigationDestinationInfo);
  dart.setMethodSignature(navigation_bar._NavigationDestinationInfo, () => ({
    __proto__: dart.getMethods(navigation_bar._NavigationDestinationInfo.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setStaticMethodSignature(navigation_bar._NavigationDestinationInfo, () => ['of']);
  dart.setLibraryUri(navigation_bar._NavigationDestinationInfo, I[53]);
  dart.setFieldSignature(navigation_bar._NavigationDestinationInfo, () => ({
    __proto__: dart.getFields(navigation_bar._NavigationDestinationInfo.__proto__),
    index: dart.finalFieldType(core.int),
    totalNumberOfDestinations: dart.finalFieldType(core.int),
    selectedAnimation: dart.finalFieldType(animation$.Animation$(core.double)),
    labelBehavior: dart.finalFieldType(navigation_bar.NavigationDestinationLabelBehavior),
    onTap: dart.finalFieldType(dart.fnType(dart.void, []))
  }));
  navigation_bar.NavigationIndicator = class NavigationIndicator extends framework.StatelessWidget {
    get animation() {
      return this[S$.animation$6];
    }
    set animation(value) {
      super.animation = value;
    }
    get color() {
      return this[S$.color$7];
    }
    set color(value) {
      super.color = value;
    }
    get width() {
      return this[S$.width$1];
    }
    set width(value) {
      super.width = value;
    }
    get height() {
      return this[S$.height$2];
    }
    set height(value) {
      super.height = value;
    }
    get borderRadius() {
      return this[S$.borderRadius$1];
    }
    set borderRadius(value) {
      super.borderRadius = value;
    }
    get shape() {
      return this[S$.shape$6];
    }
    set shape(value) {
      super.shape = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let animation = opts && 'animation' in opts ? opts.animation : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let width = opts && 'width' in opts ? opts.width : 64;
      let height = opts && 'height' in opts ? opts.height : 32;
      let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : C[189] || CT.C189;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      return new navigation_bar.NavigationIndicator.new({key: key, animation: animation, color: color, width: width, height: height, borderRadius: borderRadius, shape: shape, $creationLocationd_0dea112b090073317d4: C[468] || CT.C468});
    }
    build(context) {
      return new transitions.AnimatedBuilder.new({animation: this.animation, builder: dart.fn((context, child) => {
          let scale = this.animation.isDismissed ? 0.0 : new (T$.TweenOfdouble()).new({begin: 0.4, end: 1.0}).transform(new tween.CurveTween.new({curve: curves.Curves.easeInOutCubicEmphasized}).transform(this.animation.value));
          return new basic.Transform.new({alignment: alignment.Alignment.center, transform: vector_math_64.Matrix4.diagonal3Values(scale, 1.0, 1.0), child: child, $creationLocationd_0dea112b090073317d4: C[469] || CT.C469});
        }, T$.BuildContextAndWidgetNToTransform()), child: new navigation_bar._StatusTransitionWidgetBuilder.new({animation: this.animation, builder: dart.fn((context, child) => new navigation_bar._SelectableAnimatedBuilder.new({isSelected: navigation_bar._isForwardOrCompleted(this.animation), duration: C[470] || CT.C470, alwaysDoFullAnimation: true, builder: dart.fn((context, fadeAnimation) => {
              let t37, t37$;
              return new transitions.FadeTransition.new({opacity: fadeAnimation, child: new container.Container.new({width: this.width, height: this.height, decoration: new shape_decoration.ShapeDecoration.new({shape: (t37 = this.shape, t37 == null ? new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: this.borderRadius}) : t37), color: (t37$ = this.color, t37$ == null ? theme$.Theme.of(context).colorScheme.secondary : t37$)}), $creationLocationd_0dea112b090073317d4: C[471] || CT.C471}), $creationLocationd_0dea112b090073317d4: C[472] || CT.C472});
            }, T$.BuildContextAndAnimationOfdoubleToFadeTransition()), $creationLocationd_0dea112b090073317d4: C[473] || CT.C473}), T$.BuildContextAndWidgetNTo_SelectableAnimatedBuilder()), $creationLocationd_0dea112b090073317d4: C[474] || CT.C474}), $creationLocationd_0dea112b090073317d4: C[475] || CT.C475});
    }
  };
  (navigation_bar.NavigationIndicator.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let animation = opts && 'animation' in opts ? opts.animation : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let width = opts && 'width' in opts ? opts.width : 64;
    let height = opts && 'height' in opts ? opts.height : 32;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : C[189] || CT.C189;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.animation$6] = animation;
    this[S$.color$7] = color;
    this[S$.width$1] = width;
    this[S$.height$2] = height;
    this[S$.borderRadius$1] = borderRadius;
    this[S$.shape$6] = shape;
    navigation_bar.NavigationIndicator.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = navigation_bar.NavigationIndicator.prototype;
  dart.addTypeTests(navigation_bar.NavigationIndicator);
  dart.addTypeCaches(navigation_bar.NavigationIndicator);
  dart.setMethodSignature(navigation_bar.NavigationIndicator, () => ({
    __proto__: dart.getMethods(navigation_bar.NavigationIndicator.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(navigation_bar.NavigationIndicator, I[53]);
  dart.setFieldSignature(navigation_bar.NavigationIndicator, () => ({
    __proto__: dart.getFields(navigation_bar.NavigationIndicator.__proto__),
    animation: dart.finalFieldType(animation$.Animation$(core.double)),
    color: dart.finalFieldType(dart.nullable(ui.Color)),
    width: dart.finalFieldType(core.double),
    height: dart.finalFieldType(core.double),
    borderRadius: dart.finalFieldType(border_radius.BorderRadius),
    shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder))
  }));
  navigation_bar._NavigationBarDestinationLayout = class _NavigationBarDestinationLayout extends framework.StatelessWidget {
    get icon() {
      return this[S$.icon$5];
    }
    set icon(value) {
      super.icon = value;
    }
    get label() {
      return this[S$.label$5];
    }
    set label(value) {
      super.label = value;
    }
    static ['_#new#tearOff'](opts) {
      let icon = opts && 'icon' in opts ? opts.icon : null;
      let label = opts && 'label' in opts ? opts.label : null;
      return new navigation_bar._NavigationBarDestinationLayout.new({icon: icon, label: label, $creationLocationd_0dea112b090073317d4: C[476] || CT.C476});
    }
    build(context) {
      return new navigation_bar._DestinationLayoutAnimationBuilder.new({builder: dart.fn((context, animation) => new basic.CustomMultiChildLayout.new({delegate: new navigation_bar._NavigationDestinationLayoutDelegate.new({animation: animation}), children: T$.JSArrayOfWidget().of([new basic.LayoutId.new({id: 1, child: new basic.RepaintBoundary.new({key: navigation_bar._NavigationBarDestinationLayout._iconKey, child: this.icon, $creationLocationd_0dea112b090073317d4: C[477] || CT.C477}), $creationLocationd_0dea112b090073317d4: C[478] || CT.C478}), new basic.LayoutId.new({id: 2, child: new transitions.FadeTransition.new({alwaysIncludeSemantics: true, opacity: animation, child: new basic.RepaintBoundary.new({key: navigation_bar._NavigationBarDestinationLayout._labelKey, child: this.label, $creationLocationd_0dea112b090073317d4: C[479] || CT.C479}), $creationLocationd_0dea112b090073317d4: C[480] || CT.C480}), $creationLocationd_0dea112b090073317d4: C[481] || CT.C481})]), $creationLocationd_0dea112b090073317d4: C[482] || CT.C482}), T$.BuildContextAndAnimationOfdoubleToCustomMultiChildLayout()), $creationLocationd_0dea112b090073317d4: C[483] || CT.C483});
    }
  };
  (navigation_bar._NavigationBarDestinationLayout.new = function(opts) {
    let icon = opts && 'icon' in opts ? opts.icon : null;
    let label = opts && 'label' in opts ? opts.label : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.icon$5] = icon;
    this[S$.label$5] = label;
    navigation_bar._NavigationBarDestinationLayout.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = navigation_bar._NavigationBarDestinationLayout.prototype;
  dart.addTypeTests(navigation_bar._NavigationBarDestinationLayout);
  dart.addTypeCaches(navigation_bar._NavigationBarDestinationLayout);
  dart.setMethodSignature(navigation_bar._NavigationBarDestinationLayout, () => ({
    __proto__: dart.getMethods(navigation_bar._NavigationBarDestinationLayout.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(navigation_bar._NavigationBarDestinationLayout, I[53]);
  dart.setFieldSignature(navigation_bar._NavigationBarDestinationLayout, () => ({
    __proto__: dart.getFields(navigation_bar._NavigationBarDestinationLayout.__proto__),
    icon: dart.finalFieldType(framework.Widget),
    label: dart.finalFieldType(framework.Widget)
  }));
  dart.setStaticFieldSignature(navigation_bar._NavigationBarDestinationLayout, () => ['_iconKey', '_labelKey']);
  dart.defineLazy(navigation_bar._NavigationBarDestinationLayout, {
    /*navigation_bar._NavigationBarDestinationLayout._iconKey*/get _iconKey() {
      return new key.UniqueKey.new();
    },
    /*navigation_bar._NavigationBarDestinationLayout._labelKey*/get _labelKey() {
      return new key.UniqueKey.new();
    }
  }, false);
  navigation_bar._DestinationLayoutAnimationBuilder = class _DestinationLayoutAnimationBuilder extends framework.StatelessWidget {
    get builder() {
      return this[S$.builder];
    }
    set builder(value) {
      super.builder = value;
    }
    static ['_#new#tearOff'](opts) {
      let builder = opts && 'builder' in opts ? opts.builder : null;
      return new navigation_bar._DestinationLayoutAnimationBuilder.new({builder: builder, $creationLocationd_0dea112b090073317d4: C[484] || CT.C484});
    }
    build(context) {
      let t38, t37, t38$, t37$;
      let info = navigation_bar._NavigationDestinationInfo.of(context);
      switch (info.labelBehavior) {
        case C[445] || CT.C445:
          {
            t37 = context;
            t38 = animations.kAlwaysCompleteAnimation;
            return this.builder(t37, t38);
          }
        case C[446] || CT.C446:
          {
            t37$ = context;
            t38$ = animations.kAlwaysDismissedAnimation;
            return this.builder(t37$, t38$);
          }
        case C[447] || CT.C447:
          {
            return new navigation_bar._CurvedAnimationBuilder.new({animation: info.selectedAnimation, curve: curves.Curves.easeInOutCubicEmphasized, reverseCurve: curves.Curves.easeInOutCubicEmphasized.flipped, builder: dart.fn((context, curvedAnimation) => {
                let t38, t37;
                t37 = context;
                t38 = curvedAnimation;
                return this.builder(t37, t38);
              }, T$.BuildContextAndAnimationOfdoubleToWidget()), $creationLocationd_0dea112b090073317d4: C[485] || CT.C485});
          }
      }
    }
  };
  (navigation_bar._DestinationLayoutAnimationBuilder.new = function(opts) {
    let builder = opts && 'builder' in opts ? opts.builder : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.builder] = builder;
    navigation_bar._DestinationLayoutAnimationBuilder.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = navigation_bar._DestinationLayoutAnimationBuilder.prototype;
  dart.addTypeTests(navigation_bar._DestinationLayoutAnimationBuilder);
  dart.addTypeCaches(navigation_bar._DestinationLayoutAnimationBuilder);
  dart.setMethodSignature(navigation_bar._DestinationLayoutAnimationBuilder, () => ({
    __proto__: dart.getMethods(navigation_bar._DestinationLayoutAnimationBuilder.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(navigation_bar._DestinationLayoutAnimationBuilder, I[53]);
  dart.setFieldSignature(navigation_bar._DestinationLayoutAnimationBuilder, () => ({
    __proto__: dart.getFields(navigation_bar._DestinationLayoutAnimationBuilder.__proto__),
    builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, animation$.Animation$(core.double)]))
  }));
  navigation_bar._NavigationBarDestinationSemantics = class _NavigationBarDestinationSemantics extends framework.StatelessWidget {
    get child() {
      return this[S$.child$10];
    }
    set child(value) {
      super.child = value;
    }
    static ['_#new#tearOff'](opts) {
      let child = opts && 'child' in opts ? opts.child : null;
      return new navigation_bar._NavigationBarDestinationSemantics.new({child: child, $creationLocationd_0dea112b090073317d4: C[486] || CT.C486});
    }
    build(context) {
      let localizations = material_localizations.MaterialLocalizations.of(context);
      let destinationInfo = navigation_bar._NavigationDestinationInfo.of(context);
      return new navigation_bar._StatusTransitionWidgetBuilder.new({animation: destinationInfo.selectedAnimation, builder: dart.fn((context, child) => new basic.Semantics.new({selected: navigation_bar._isForwardOrCompleted(destinationInfo.selectedAnimation), container: true, child: child, $creationLocationd_0dea112b090073317d4: C[487] || CT.C487}), T$.BuildContextAndWidgetNToSemantics()), child: new basic.Stack.new({alignment: alignment.Alignment.center, children: T$.JSArrayOfWidget().of([this.child, new basic.Semantics.new({label: localizations.tabLabel({tabIndex: destinationInfo.index + 1, tabCount: destinationInfo.totalNumberOfDestinations}), $creationLocationd_0dea112b090073317d4: C[488] || CT.C488})]), $creationLocationd_0dea112b090073317d4: C[489] || CT.C489}), $creationLocationd_0dea112b090073317d4: C[490] || CT.C490});
    }
  };
  (navigation_bar._NavigationBarDestinationSemantics.new = function(opts) {
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.child$10] = child;
    navigation_bar._NavigationBarDestinationSemantics.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = navigation_bar._NavigationBarDestinationSemantics.prototype;
  dart.addTypeTests(navigation_bar._NavigationBarDestinationSemantics);
  dart.addTypeCaches(navigation_bar._NavigationBarDestinationSemantics);
  dart.setMethodSignature(navigation_bar._NavigationBarDestinationSemantics, () => ({
    __proto__: dart.getMethods(navigation_bar._NavigationBarDestinationSemantics.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(navigation_bar._NavigationBarDestinationSemantics, I[53]);
  dart.setFieldSignature(navigation_bar._NavigationBarDestinationSemantics, () => ({
    __proto__: dart.getFields(navigation_bar._NavigationBarDestinationSemantics.__proto__),
    child: dart.finalFieldType(framework.Widget)
  }));
  navigation_bar._NavigationBarDestinationTooltip = class _NavigationBarDestinationTooltip extends framework.StatelessWidget {
    get message() {
      return this[S$.message];
    }
    set message(value) {
      super.message = value;
    }
    get child() {
      return this[S$.child$11];
    }
    set child(value) {
      super.child = value;
    }
    static ['_#new#tearOff'](opts) {
      let message = opts && 'message' in opts ? opts.message : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new navigation_bar._NavigationBarDestinationTooltip.new({message: message, child: child, $creationLocationd_0dea112b090073317d4: C[491] || CT.C491});
    }
    build(context) {
      if (this.message === null) {
        return this.child;
      }
      return new tooltip.Tooltip.new({message: this.message, verticalOffset: 42.0, excludeFromSemantics: true, preferBelow: false, child: this.child, $creationLocationd_0dea112b090073317d4: C[492] || CT.C492});
    }
  };
  (navigation_bar._NavigationBarDestinationTooltip.new = function(opts) {
    let message = opts && 'message' in opts ? opts.message : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.message] = message;
    this[S$.child$11] = child;
    navigation_bar._NavigationBarDestinationTooltip.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = navigation_bar._NavigationBarDestinationTooltip.prototype;
  dart.addTypeTests(navigation_bar._NavigationBarDestinationTooltip);
  dart.addTypeCaches(navigation_bar._NavigationBarDestinationTooltip);
  dart.setMethodSignature(navigation_bar._NavigationBarDestinationTooltip, () => ({
    __proto__: dart.getMethods(navigation_bar._NavigationBarDestinationTooltip.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(navigation_bar._NavigationBarDestinationTooltip, I[53]);
  dart.setFieldSignature(navigation_bar._NavigationBarDestinationTooltip, () => ({
    __proto__: dart.getFields(navigation_bar._NavigationBarDestinationTooltip.__proto__),
    message: dart.finalFieldType(core.String),
    child: dart.finalFieldType(framework.Widget)
  }));
  navigation_bar._NavigationDestinationLayoutDelegate = class _NavigationDestinationLayoutDelegate extends custom_layout.MultiChildLayoutDelegate {
    static ['_#new#tearOff'](opts) {
      let animation = opts && 'animation' in opts ? opts.animation : null;
      return new navigation_bar._NavigationDestinationLayoutDelegate.new({animation: animation});
    }
    performLayout(size) {
      function halfWidth(size) {
        return size.width / 2;
      }
      dart.fn(halfWidth, T$.SizeTodouble());
      function halfHeight(size) {
        return size.height / 2;
      }
      dart.fn(halfHeight, T$.SizeTodouble());
      let iconSize = this.layoutChild(1, new box$.BoxConstraints.loose(size));
      let labelSize = this.layoutChild(2, new box$.BoxConstraints.loose(size));
      let yPositionOffset = new (T$.TweenOfdouble()).new({begin: halfHeight(iconSize), end: halfHeight(iconSize) + halfHeight(labelSize)}).transform(this.animation.value);
      let iconYPosition = halfHeight(size) - yPositionOffset;
      this.positionChild(1, new ui.Offset.new(halfWidth(size) - halfWidth(iconSize), iconYPosition));
      this.positionChild(2, new ui.Offset.new(halfWidth(size) - halfWidth(labelSize), iconYPosition + iconSize.height));
    }
    shouldRelayout(oldDelegate) {
      navigation_bar._NavigationDestinationLayoutDelegate.as(oldDelegate);
      return !oldDelegate.animation[S.$_equals](this.animation);
    }
  };
  (navigation_bar._NavigationDestinationLayoutDelegate.new = function(opts) {
    let animation = opts && 'animation' in opts ? opts.animation : null;
    this.animation = animation;
    navigation_bar._NavigationDestinationLayoutDelegate.__proto__.new.call(this, {relayout: animation});
    ;
  }).prototype = navigation_bar._NavigationDestinationLayoutDelegate.prototype;
  dart.addTypeTests(navigation_bar._NavigationDestinationLayoutDelegate);
  dart.addTypeCaches(navigation_bar._NavigationDestinationLayoutDelegate);
  dart.setMethodSignature(navigation_bar._NavigationDestinationLayoutDelegate, () => ({
    __proto__: dart.getMethods(navigation_bar._NavigationDestinationLayoutDelegate.__proto__),
    performLayout: dart.fnType(dart.void, [ui.Size]),
    shouldRelayout: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(navigation_bar._NavigationDestinationLayoutDelegate, I[53]);
  dart.setFieldSignature(navigation_bar._NavigationDestinationLayoutDelegate, () => ({
    __proto__: dart.getFields(navigation_bar._NavigationDestinationLayoutDelegate.__proto__),
    animation: dart.finalFieldType(animation$.Animation$(core.double))
  }));
  dart.setStaticFieldSignature(navigation_bar._NavigationDestinationLayoutDelegate, () => ['iconId', 'labelId']);
  dart.defineLazy(navigation_bar._NavigationDestinationLayoutDelegate, {
    /*navigation_bar._NavigationDestinationLayoutDelegate.iconId*/get iconId() {
      return 1;
    },
    /*navigation_bar._NavigationDestinationLayoutDelegate.labelId*/get labelId() {
      return 2;
    }
  }, false);
  navigation_bar._ClampTextScaleFactor = class _ClampTextScaleFactor extends framework.StatelessWidget {
    get upperLimit() {
      return this[S$.upperLimit];
    }
    set upperLimit(value) {
      super.upperLimit = value;
    }
    get child() {
      return this[S$.child$12];
    }
    set child(value) {
      super.child = value;
    }
    static ['_#new#tearOff'](opts) {
      let upperLimit = opts && 'upperLimit' in opts ? opts.upperLimit : 1 / 0;
      let child = opts && 'child' in opts ? opts.child : null;
      return new navigation_bar._ClampTextScaleFactor.new({upperLimit: upperLimit, child: child, $creationLocationd_0dea112b090073317d4: C[493] || CT.C493});
    }
    build(context) {
      return new media_query.MediaQuery.new({data: media_query.MediaQuery.of(context).copyWith({textScaleFactor: math$.clampDouble(media_query.MediaQuery.of(context).textScaleFactor, 0.0, this.upperLimit)}), child: this.child, $creationLocationd_0dea112b090073317d4: C[494] || CT.C494});
    }
  };
  (navigation_bar._ClampTextScaleFactor.new = function(opts) {
    let upperLimit = opts && 'upperLimit' in opts ? opts.upperLimit : 1 / 0;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.upperLimit] = upperLimit;
    this[S$.child$12] = child;
    navigation_bar._ClampTextScaleFactor.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = navigation_bar._ClampTextScaleFactor.prototype;
  dart.addTypeTests(navigation_bar._ClampTextScaleFactor);
  dart.addTypeCaches(navigation_bar._ClampTextScaleFactor);
  dart.setMethodSignature(navigation_bar._ClampTextScaleFactor, () => ({
    __proto__: dart.getMethods(navigation_bar._ClampTextScaleFactor.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(navigation_bar._ClampTextScaleFactor, I[53]);
  dart.setFieldSignature(navigation_bar._ClampTextScaleFactor, () => ({
    __proto__: dart.getFields(navigation_bar._ClampTextScaleFactor.__proto__),
    upperLimit: dart.finalFieldType(core.double),
    child: dart.finalFieldType(framework.Widget)
  }));
  navigation_bar._StatusTransitionWidgetBuilder = class _StatusTransitionWidgetBuilder extends status_transitions.StatusTransitionWidget {
    get builder() {
      return this[S$.builder$1];
    }
    set builder(value) {
      super.builder = value;
    }
    get child() {
      return this[S$.child$13];
    }
    set child(value) {
      super.child = value;
    }
    static ['_#new#tearOff'](opts) {
      let animation = opts && 'animation' in opts ? opts.animation : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new navigation_bar._StatusTransitionWidgetBuilder.new({animation: animation, builder: builder, child: child, $creationLocationd_0dea112b090073317d4: C[495] || CT.C495});
    }
    build(context) {
      let t38, t37;
      t37 = context;
      t38 = this.child;
      return this.builder(t37, t38);
    }
  };
  (navigation_bar._StatusTransitionWidgetBuilder.new = function(opts) {
    let animation = opts && 'animation' in opts ? opts.animation : null;
    let builder = opts && 'builder' in opts ? opts.builder : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.builder$1] = builder;
    this[S$.child$13] = child;
    navigation_bar._StatusTransitionWidgetBuilder.__proto__.new.call(this, {animation: animation, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = navigation_bar._StatusTransitionWidgetBuilder.prototype;
  dart.addTypeTests(navigation_bar._StatusTransitionWidgetBuilder);
  dart.addTypeCaches(navigation_bar._StatusTransitionWidgetBuilder);
  dart.setMethodSignature(navigation_bar._StatusTransitionWidgetBuilder, () => ({
    __proto__: dart.getMethods(navigation_bar._StatusTransitionWidgetBuilder.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(navigation_bar._StatusTransitionWidgetBuilder, I[53]);
  dart.setFieldSignature(navigation_bar._StatusTransitionWidgetBuilder, () => ({
    __proto__: dart.getFields(navigation_bar._StatusTransitionWidgetBuilder.__proto__),
    builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])),
    child: dart.finalFieldType(dart.nullable(framework.Widget))
  }));
  navigation_bar._SelectableAnimatedBuilder = class _SelectableAnimatedBuilder extends framework.StatefulWidget {
    get isSelected() {
      return this[S$.isSelected$2];
    }
    set isSelected(value) {
      super.isSelected = value;
    }
    get duration() {
      return this[S$.duration$1];
    }
    set duration(value) {
      super.duration = value;
    }
    get alwaysDoFullAnimation() {
      return this[S$.alwaysDoFullAnimation];
    }
    set alwaysDoFullAnimation(value) {
      super.alwaysDoFullAnimation = value;
    }
    get builder() {
      return this[S$.builder$2];
    }
    set builder(value) {
      super.builder = value;
    }
    static ['_#new#tearOff'](opts) {
      let isSelected = opts && 'isSelected' in opts ? opts.isSelected : null;
      let duration = opts && 'duration' in opts ? opts.duration : C[160] || CT.C160;
      let alwaysDoFullAnimation = opts && 'alwaysDoFullAnimation' in opts ? opts.alwaysDoFullAnimation : false;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      return new navigation_bar._SelectableAnimatedBuilder.new({isSelected: isSelected, duration: duration, alwaysDoFullAnimation: alwaysDoFullAnimation, builder: builder, $creationLocationd_0dea112b090073317d4: C[496] || CT.C496});
    }
    createState() {
      return new navigation_bar._SelectableAnimatedBuilderState.new();
    }
  };
  (navigation_bar._SelectableAnimatedBuilder.new = function(opts) {
    let isSelected = opts && 'isSelected' in opts ? opts.isSelected : null;
    let duration = opts && 'duration' in opts ? opts.duration : C[160] || CT.C160;
    let alwaysDoFullAnimation = opts && 'alwaysDoFullAnimation' in opts ? opts.alwaysDoFullAnimation : false;
    let builder = opts && 'builder' in opts ? opts.builder : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.isSelected$2] = isSelected;
    this[S$.duration$1] = duration;
    this[S$.alwaysDoFullAnimation] = alwaysDoFullAnimation;
    this[S$.builder$2] = builder;
    navigation_bar._SelectableAnimatedBuilder.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = navigation_bar._SelectableAnimatedBuilder.prototype;
  dart.addTypeTests(navigation_bar._SelectableAnimatedBuilder);
  dart.addTypeCaches(navigation_bar._SelectableAnimatedBuilder);
  dart.setMethodSignature(navigation_bar._SelectableAnimatedBuilder, () => ({
    __proto__: dart.getMethods(navigation_bar._SelectableAnimatedBuilder.__proto__),
    createState: dart.fnType(navigation_bar._SelectableAnimatedBuilderState, [])
  }));
  dart.setLibraryUri(navigation_bar._SelectableAnimatedBuilder, I[53]);
  dart.setFieldSignature(navigation_bar._SelectableAnimatedBuilder, () => ({
    __proto__: dart.getFields(navigation_bar._SelectableAnimatedBuilder.__proto__),
    isSelected: dart.finalFieldType(core.bool),
    duration: dart.finalFieldType(core.Duration),
    alwaysDoFullAnimation: dart.finalFieldType(core.bool),
    builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, animation$.Animation$(core.double)]))
  }));
  const State_SingleTickerProviderStateMixin$36 = class State_SingleTickerProviderStateMixin extends framework.State$(navigation_bar._SelectableAnimatedBuilder) {};
  (State_SingleTickerProviderStateMixin$36.new = function() {
    ticker_provider.SingleTickerProviderStateMixin$(navigation_bar._SelectableAnimatedBuilder)[dart.mixinNew].call(this);
    State_SingleTickerProviderStateMixin$36.__proto__.new.call(this);
  }).prototype = State_SingleTickerProviderStateMixin$36.prototype;
  dart.applyMixin(State_SingleTickerProviderStateMixin$36, ticker_provider.SingleTickerProviderStateMixin$(navigation_bar._SelectableAnimatedBuilder));
  navigation_bar._SelectableAnimatedBuilderState = class _SelectableAnimatedBuilderState extends State_SingleTickerProviderStateMixin$36 {
    get [S$._controller$1]() {
      let t37;
      t37 = this[S$.___SelectableAnimatedBuilderState__controller];
      return t37 == null ? dart.throw(new _internal.LateError.fieldNI("_controller")) : t37;
    }
    set [S$._controller$1](library$32package$58flutter$47src$47material$47navigation_bar$46dart$58$58_controller$35param) {
      this[S$.___SelectableAnimatedBuilderState__controller] = library$32package$58flutter$47src$47material$47navigation_bar$46dart$58$58_controller$35param;
    }
    initState() {
      super.initState();
      this[S$._controller$1] = new animation_controller.AnimationController.new({vsync: this});
      this[S$._controller$1].duration = this.widget.duration;
      this[S$._controller$1].value = this.widget.isSelected ? 1.0 : 0.0;
    }
    didUpdateWidget(oldWidget) {
      navigation_bar._SelectableAnimatedBuilder.as(oldWidget);
      super.didUpdateWidget(oldWidget);
      if (!oldWidget.duration._equals(this.widget.duration)) {
        this[S$._controller$1].duration = this.widget.duration;
      }
      if (oldWidget.isSelected !== this.widget.isSelected) {
        if (this.widget.isSelected) {
          this[S$._controller$1].forward({from: this.widget.alwaysDoFullAnimation ? 0.0 : null});
        } else {
          this[S$._controller$1].reverse({from: this.widget.alwaysDoFullAnimation ? 1.0 : null});
        }
      }
    }
    dispose() {
      this[S$._controller$1].dispose();
      super.dispose();
    }
    build(context) {
      let t39, t38, t37;
      t37 = this.widget;
      t38 = context;
      t39 = this[S$._controller$1];
      return t37.builder(t38, t39);
    }
    static ['_#new#tearOff']() {
      return new navigation_bar._SelectableAnimatedBuilderState.new();
    }
  };
  (navigation_bar._SelectableAnimatedBuilderState.new = function() {
    this[S$.___SelectableAnimatedBuilderState__controller] = null;
    navigation_bar._SelectableAnimatedBuilderState.__proto__.new.call(this);
    ;
  }).prototype = navigation_bar._SelectableAnimatedBuilderState.prototype;
  dart.addTypeTests(navigation_bar._SelectableAnimatedBuilderState);
  dart.addTypeCaches(navigation_bar._SelectableAnimatedBuilderState);
  dart.setMethodSignature(navigation_bar._SelectableAnimatedBuilderState, () => ({
    __proto__: dart.getMethods(navigation_bar._SelectableAnimatedBuilderState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(navigation_bar._SelectableAnimatedBuilderState, () => ({
    __proto__: dart.getGetters(navigation_bar._SelectableAnimatedBuilderState.__proto__),
    [S$._controller$1]: animation_controller.AnimationController
  }));
  dart.setSetterSignature(navigation_bar._SelectableAnimatedBuilderState, () => ({
    __proto__: dart.getSetters(navigation_bar._SelectableAnimatedBuilderState.__proto__),
    [S$._controller$1]: animation_controller.AnimationController
  }));
  dart.setLibraryUri(navigation_bar._SelectableAnimatedBuilderState, I[53]);
  dart.setFieldSignature(navigation_bar._SelectableAnimatedBuilderState, () => ({
    __proto__: dart.getFields(navigation_bar._SelectableAnimatedBuilderState.__proto__),
    [S$.___SelectableAnimatedBuilderState__controller]: dart.fieldType(dart.nullable(animation_controller.AnimationController))
  }));
  navigation_bar._CurvedAnimationBuilder = class _CurvedAnimationBuilder extends framework.StatefulWidget {
    get animation() {
      return this[S$.animation$7];
    }
    set animation(value) {
      super.animation = value;
    }
    get curve() {
      return this[S$.curve];
    }
    set curve(value) {
      super.curve = value;
    }
    get reverseCurve() {
      return this[S$.reverseCurve];
    }
    set reverseCurve(value) {
      super.reverseCurve = value;
    }
    get builder() {
      return this[S$.builder$3];
    }
    set builder(value) {
      super.builder = value;
    }
    static ['_#new#tearOff'](opts) {
      let animation = opts && 'animation' in opts ? opts.animation : null;
      let curve = opts && 'curve' in opts ? opts.curve : null;
      let reverseCurve = opts && 'reverseCurve' in opts ? opts.reverseCurve : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      return new navigation_bar._CurvedAnimationBuilder.new({animation: animation, curve: curve, reverseCurve: reverseCurve, builder: builder, $creationLocationd_0dea112b090073317d4: C[497] || CT.C497});
    }
    createState() {
      return new navigation_bar._CurvedAnimationBuilderState.new();
    }
  };
  (navigation_bar._CurvedAnimationBuilder.new = function(opts) {
    let animation = opts && 'animation' in opts ? opts.animation : null;
    let curve = opts && 'curve' in opts ? opts.curve : null;
    let reverseCurve = opts && 'reverseCurve' in opts ? opts.reverseCurve : null;
    let builder = opts && 'builder' in opts ? opts.builder : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.animation$7] = animation;
    this[S$.curve] = curve;
    this[S$.reverseCurve] = reverseCurve;
    this[S$.builder$3] = builder;
    navigation_bar._CurvedAnimationBuilder.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = navigation_bar._CurvedAnimationBuilder.prototype;
  dart.addTypeTests(navigation_bar._CurvedAnimationBuilder);
  dart.addTypeCaches(navigation_bar._CurvedAnimationBuilder);
  dart.setMethodSignature(navigation_bar._CurvedAnimationBuilder, () => ({
    __proto__: dart.getMethods(navigation_bar._CurvedAnimationBuilder.__proto__),
    createState: dart.fnType(navigation_bar._CurvedAnimationBuilderState, [])
  }));
  dart.setLibraryUri(navigation_bar._CurvedAnimationBuilder, I[53]);
  dart.setFieldSignature(navigation_bar._CurvedAnimationBuilder, () => ({
    __proto__: dart.getFields(navigation_bar._CurvedAnimationBuilder.__proto__),
    animation: dart.finalFieldType(animation$.Animation$(core.double)),
    curve: dart.finalFieldType(curves.Curve),
    reverseCurve: dart.finalFieldType(curves.Curve),
    builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, animation$.Animation$(core.double)]))
  }));
  navigation_bar._CurvedAnimationBuilderState = class _CurvedAnimationBuilderState extends framework.State$(navigation_bar._CurvedAnimationBuilder) {
    get [S$._animationDirection]() {
      let t37;
      t37 = this[S$.___CurvedAnimationBuilderState__animationDirection];
      return t37 == null ? dart.throw(new _internal.LateError.fieldNI("_animationDirection")) : t37;
    }
    set [S$._animationDirection](library$32package$58flutter$47src$47material$47navigation_bar$46dart$58$58_animationDirection$35param) {
      this[S$.___CurvedAnimationBuilderState__animationDirection] = library$32package$58flutter$47src$47material$47navigation_bar$46dart$58$58_animationDirection$35param;
    }
    initState() {
      super.initState();
      this[S$._animationDirection] = this.widget.animation.status;
      this[S$._updateStatus](this.widget.animation.status);
      this.widget.animation.addStatusListener(dart.bind(this, S$._updateStatus));
    }
    dispose() {
      this.widget.animation.removeStatusListener(dart.bind(this, S$._updateStatus));
      super.dispose();
    }
    [S$._updateStatus](status) {
      if (this[S$._animationDirection] !== status) {
        this.setState(dart.fn(() => {
          this[S$._animationDirection] = status;
        }, T$.VoidTovoid()));
      }
      if (status === animation$.AnimationStatus.completed || status === animation$.AnimationStatus.dismissed) {
        this.setState(dart.fn(() => {
          this[S$._preservedDirection] = null;
        }, T$.VoidTovoid()));
      }
      if (this[S$._preservedDirection] == null && (status === animation$.AnimationStatus.forward || status === animation$.AnimationStatus.reverse)) {
        this.setState(dart.fn(() => {
          this[S$._preservedDirection] = status;
        }, T$.VoidTovoid()));
      }
    }
    build(context) {
      let t37, t39, t38, t37$;
      let shouldUseForwardCurve = (t37 = this[S$._preservedDirection], t37 == null ? this[S$._animationDirection] : t37) !== animation$.AnimationStatus.reverse;
      let curvedAnimation = new tween.CurveTween.new({curve: shouldUseForwardCurve ? this.widget.curve : this.widget.reverseCurve}).animate(this.widget.animation);
      t37$ = this.widget;
      t38 = context;
      t39 = curvedAnimation;
      return t37$.builder(t38, t39);
    }
    static ['_#new#tearOff']() {
      return new navigation_bar._CurvedAnimationBuilderState.new();
    }
  };
  (navigation_bar._CurvedAnimationBuilderState.new = function() {
    this[S$.___CurvedAnimationBuilderState__animationDirection] = null;
    this[S$._preservedDirection] = null;
    navigation_bar._CurvedAnimationBuilderState.__proto__.new.call(this);
    ;
  }).prototype = navigation_bar._CurvedAnimationBuilderState.prototype;
  dart.addTypeTests(navigation_bar._CurvedAnimationBuilderState);
  dart.addTypeCaches(navigation_bar._CurvedAnimationBuilderState);
  dart.setMethodSignature(navigation_bar._CurvedAnimationBuilderState, () => ({
    __proto__: dart.getMethods(navigation_bar._CurvedAnimationBuilderState.__proto__),
    [S$._updateStatus]: dart.fnType(dart.void, [animation$.AnimationStatus]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(navigation_bar._CurvedAnimationBuilderState, () => ({
    __proto__: dart.getGetters(navigation_bar._CurvedAnimationBuilderState.__proto__),
    [S$._animationDirection]: animation$.AnimationStatus
  }));
  dart.setSetterSignature(navigation_bar._CurvedAnimationBuilderState, () => ({
    __proto__: dart.getSetters(navigation_bar._CurvedAnimationBuilderState.__proto__),
    [S$._animationDirection]: animation$.AnimationStatus
  }));
  dart.setLibraryUri(navigation_bar._CurvedAnimationBuilderState, I[53]);
  dart.setFieldSignature(navigation_bar._CurvedAnimationBuilderState, () => ({
    __proto__: dart.getFields(navigation_bar._CurvedAnimationBuilderState.__proto__),
    [S$.___CurvedAnimationBuilderState__animationDirection]: dart.fieldType(dart.nullable(animation$.AnimationStatus)),
    [S$._preservedDirection]: dart.fieldType(dart.nullable(animation$.AnimationStatus))
  }));
  const Object_Diagnosticable$36$14 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$14.new = function() {
  }).prototype = Object_Diagnosticable$36$14.prototype;
  dart.applyMixin(Object_Diagnosticable$36$14, diagnostics.Diagnosticable);
  navigation_bar_theme.NavigationBarThemeData = class NavigationBarThemeData extends Object_Diagnosticable$36$14 {
    get height() {
      return this[S$.height$3];
    }
    set height(value) {
      super.height = value;
    }
    get backgroundColor() {
      return this[S$.backgroundColor$9];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get surfaceTintColor() {
      return this[S$.surfaceTintColor$2];
    }
    set surfaceTintColor(value) {
      super.surfaceTintColor = value;
    }
    get elevation() {
      return this[S$.elevation$10];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get indicatorColor() {
      return this[S$.indicatorColor$4];
    }
    set indicatorColor(value) {
      super.indicatorColor = value;
    }
    get indicatorShape() {
      return this[S$.indicatorShape];
    }
    set indicatorShape(value) {
      super.indicatorShape = value;
    }
    get labelTextStyle() {
      return this[S$.labelTextStyle];
    }
    set labelTextStyle(value) {
      super.labelTextStyle = value;
    }
    get iconTheme() {
      return this[S$.iconTheme];
    }
    set iconTheme(value) {
      super.iconTheme = value;
    }
    get labelBehavior() {
      return this[S$.labelBehavior$2];
    }
    set labelBehavior(value) {
      super.labelBehavior = value;
    }
    static ['_#new#tearOff'](opts) {
      let height = opts && 'height' in opts ? opts.height : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let surfaceTintColor = opts && 'surfaceTintColor' in opts ? opts.surfaceTintColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let indicatorColor = opts && 'indicatorColor' in opts ? opts.indicatorColor : null;
      let indicatorShape = opts && 'indicatorShape' in opts ? opts.indicatorShape : null;
      let labelTextStyle = opts && 'labelTextStyle' in opts ? opts.labelTextStyle : null;
      let iconTheme = opts && 'iconTheme' in opts ? opts.iconTheme : null;
      let labelBehavior = opts && 'labelBehavior' in opts ? opts.labelBehavior : null;
      return new navigation_bar_theme.NavigationBarThemeData.new({height: height, backgroundColor: backgroundColor, surfaceTintColor: surfaceTintColor, elevation: elevation, indicatorColor: indicatorColor, indicatorShape: indicatorShape, labelTextStyle: labelTextStyle, iconTheme: iconTheme, labelBehavior: labelBehavior});
    }
    copyWith(opts) {
      let t37, t37$, t37$0, t37$1, t37$2, t37$3, t37$4, t37$5, t37$6;
      let height = opts && 'height' in opts ? opts.height : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let surfaceTintColor = opts && 'surfaceTintColor' in opts ? opts.surfaceTintColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let indicatorColor = opts && 'indicatorColor' in opts ? opts.indicatorColor : null;
      let indicatorShape = opts && 'indicatorShape' in opts ? opts.indicatorShape : null;
      let labelTextStyle = opts && 'labelTextStyle' in opts ? opts.labelTextStyle : null;
      let iconTheme = opts && 'iconTheme' in opts ? opts.iconTheme : null;
      let labelBehavior = opts && 'labelBehavior' in opts ? opts.labelBehavior : null;
      return new navigation_bar_theme.NavigationBarThemeData.new({height: (t37 = height, t37 == null ? this.height : t37), backgroundColor: (t37$ = backgroundColor, t37$ == null ? this.backgroundColor : t37$), surfaceTintColor: (t37$0 = surfaceTintColor, t37$0 == null ? this.surfaceTintColor : t37$0), elevation: (t37$1 = elevation, t37$1 == null ? this.elevation : t37$1), indicatorColor: (t37$2 = indicatorColor, t37$2 == null ? this.indicatorColor : t37$2), indicatorShape: (t37$3 = indicatorShape, t37$3 == null ? this.indicatorShape : t37$3), labelTextStyle: (t37$4 = labelTextStyle, t37$4 == null ? this.labelTextStyle : t37$4), iconTheme: (t37$5 = iconTheme, t37$5 == null ? this.iconTheme : t37$5), labelBehavior: (t37$6 = labelBehavior, t37$6 == null ? this.labelBehavior : t37$6)});
    }
    static lerp(a, b, t) {
      let t37, t37$, t37$0, t37$1, t37$2, t37$3, t37$4, t37$5, t37$6, t37$7, t37$8, t37$9, t37$10, t37$11, t37$12, t37$13, t37$14, t37$15;
      if (!(t !== null)) dart.assertFailed(null, I[54], 119, 12, "t != null");
      if (a == null && b == null) {
        return null;
      }
      return new navigation_bar_theme.NavigationBarThemeData.new({height: ui.lerpDouble((t37 = a, t37 == null ? null : t37.height), (t37$ = b, t37$ == null ? null : t37$.height), t), backgroundColor: ui.Color.lerp((t37$0 = a, t37$0 == null ? null : t37$0.backgroundColor), (t37$1 = b, t37$1 == null ? null : t37$1.backgroundColor), t), surfaceTintColor: ui.Color.lerp((t37$2 = a, t37$2 == null ? null : t37$2.surfaceTintColor), (t37$3 = b, t37$3 == null ? null : t37$3.surfaceTintColor), t), elevation: ui.lerpDouble((t37$4 = a, t37$4 == null ? null : t37$4.elevation), (t37$5 = b, t37$5 == null ? null : t37$5.elevation), t), indicatorColor: ui.Color.lerp((t37$6 = a, t37$6 == null ? null : t37$6.indicatorColor), (t37$7 = b, t37$7 == null ? null : t37$7.indicatorColor), t), indicatorShape: borders.ShapeBorder.lerp((t37$8 = a, t37$8 == null ? null : t37$8.indicatorShape), (t37$9 = b, t37$9 == null ? null : t37$9.indicatorShape), t), labelTextStyle: material_state.MaterialStateProperty.lerp(T$.TextStyleN(), (t37$10 = a, t37$10 == null ? null : t37$10.labelTextStyle), (t37$11 = b, t37$11 == null ? null : t37$11.labelTextStyle), t, C[22] || CT.C22), iconTheme: material_state.MaterialStateProperty.lerp(T$.IconThemeDataN(), (t37$12 = a, t37$12 == null ? null : t37$12.iconTheme), (t37$13 = b, t37$13 == null ? null : t37$13.iconTheme), t, C[498] || CT.C498), labelBehavior: t < 0.5 ? (t37$14 = a, t37$14 == null ? null : t37$14.labelBehavior) : (t37$15 = b, t37$15 == null ? null : t37$15.labelBehavior)});
    }
    get hashCode() {
      return core.Object.hash(this.height, this.backgroundColor, this.surfaceTintColor, this.elevation, this.indicatorColor, this.indicatorShape, this.labelTextStyle, this.iconTheme, this.labelBehavior);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      if (!other[S.$runtimeType]._equals(this[S.$runtimeType])) {
        return false;
      }
      return navigation_bar_theme.NavigationBarThemeData.is(other) && other.height == this.height && dart.equals(other.backgroundColor, this.backgroundColor) && dart.equals(other.surfaceTintColor, this.surfaceTintColor) && other.elevation == this.elevation && dart.equals(other.indicatorColor, this.indicatorColor) && dart.equals(other.indicatorShape, this.indicatorShape) && dart.equals(other.labelTextStyle, this.labelTextStyle) && dart.equals(other.iconTheme, this.iconTheme) && other.labelBehavior == this.labelBehavior;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new diagnostics.DoubleProperty.new("height", this.height, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("backgroundColor", this.backgroundColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("surfaceTintColor", this.surfaceTintColor, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("elevation", this.elevation, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("indicatorColor", this.indicatorColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfShapeBorder()).new("indicatorShape", this.indicatorShape, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfTextStyleN()).new("labelTextStyle", this.labelTextStyle, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfIconThemeDataN()).new("iconTheme", this.iconTheme, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfNavigationDestinationLabelBehavior()).new("labelBehavior", this.labelBehavior, {defaultValue: null}));
    }
  };
  (navigation_bar_theme.NavigationBarThemeData.new = function(opts) {
    let height = opts && 'height' in opts ? opts.height : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let surfaceTintColor = opts && 'surfaceTintColor' in opts ? opts.surfaceTintColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let indicatorColor = opts && 'indicatorColor' in opts ? opts.indicatorColor : null;
    let indicatorShape = opts && 'indicatorShape' in opts ? opts.indicatorShape : null;
    let labelTextStyle = opts && 'labelTextStyle' in opts ? opts.labelTextStyle : null;
    let iconTheme = opts && 'iconTheme' in opts ? opts.iconTheme : null;
    let labelBehavior = opts && 'labelBehavior' in opts ? opts.labelBehavior : null;
    this[S$.height$3] = height;
    this[S$.backgroundColor$9] = backgroundColor;
    this[S$.surfaceTintColor$2] = surfaceTintColor;
    this[S$.elevation$10] = elevation;
    this[S$.indicatorColor$4] = indicatorColor;
    this[S$.indicatorShape] = indicatorShape;
    this[S$.labelTextStyle] = labelTextStyle;
    this[S$.iconTheme] = iconTheme;
    this[S$.labelBehavior$2] = labelBehavior;
    ;
  }).prototype = navigation_bar_theme.NavigationBarThemeData.prototype;
  dart.addTypeTests(navigation_bar_theme.NavigationBarThemeData);
  dart.addTypeCaches(navigation_bar_theme.NavigationBarThemeData);
  dart.setMethodSignature(navigation_bar_theme.NavigationBarThemeData, () => ({
    __proto__: dart.getMethods(navigation_bar_theme.NavigationBarThemeData.__proto__),
    copyWith: dart.fnType(navigation_bar_theme.NavigationBarThemeData, [], {backgroundColor: dart.nullable(ui.Color), elevation: dart.nullable(core.double), height: dart.nullable(core.double), iconTheme: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(icon_theme_data.IconThemeData))), indicatorColor: dart.nullable(ui.Color), indicatorShape: dart.nullable(borders.ShapeBorder), labelBehavior: dart.nullable(navigation_bar.NavigationDestinationLabelBehavior), labelTextStyle: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(text_style.TextStyle))), surfaceTintColor: dart.nullable(ui.Color)}, {})
  }));
  dart.setStaticMethodSignature(navigation_bar_theme.NavigationBarThemeData, () => ['lerp']);
  dart.setLibraryUri(navigation_bar_theme.NavigationBarThemeData, I[55]);
  dart.setFieldSignature(navigation_bar_theme.NavigationBarThemeData, () => ({
    __proto__: dart.getFields(navigation_bar_theme.NavigationBarThemeData.__proto__),
    height: dart.finalFieldType(dart.nullable(core.double)),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    surfaceTintColor: dart.finalFieldType(dart.nullable(ui.Color)),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    indicatorColor: dart.finalFieldType(dart.nullable(ui.Color)),
    indicatorShape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    labelTextStyle: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(text_style.TextStyle)))),
    iconTheme: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(icon_theme_data.IconThemeData)))),
    labelBehavior: dart.finalFieldType(dart.nullable(navigation_bar.NavigationDestinationLabelBehavior))
  }));
  dart.defineExtensionMethods(navigation_bar_theme.NavigationBarThemeData, ['_equals']);
  dart.defineExtensionAccessors(navigation_bar_theme.NavigationBarThemeData, ['hashCode']);
  navigation_bar._NavigationBarDefaultsM2 = class _NavigationBarDefaultsM2 extends navigation_bar_theme.NavigationBarThemeData {
    static ['_#new#tearOff'](context) {
      return new navigation_bar._NavigationBarDefaultsM2.new(context);
    }
    get backgroundColor() {
      return elevation_overlay.ElevationOverlay.colorWithOverlay(this[S$._colors$4].surface, this[S$._colors$4].onSurface, 3.0);
    }
    get iconTheme() {
      return new (T$.MaterialStatePropertyAllOfIconThemeData()).new(new icon_theme_data.IconThemeData.new({size: 24.0, color: this[S$._colors$4].onSurface}));
    }
    get indicatorColor() {
      return this[S$._colors$4].secondary.withOpacity(0.24);
    }
    get labelTextStyle() {
      return new (T$.MaterialStatePropertyAllOfTextStyleN()).new(dart.nullCheck(this[S$._theme$2].textTheme.overline).copyWith({color: this[S$._colors$4].onSurface}));
    }
  };
  (navigation_bar._NavigationBarDefaultsM2.new = function(context) {
    this[S$._theme$2] = theme$.Theme.of(context);
    this[S$._colors$4] = theme$.Theme.of(context).colorScheme;
    navigation_bar._NavigationBarDefaultsM2.__proto__.new.call(this, {height: 80.0, elevation: 0.0, indicatorShape: C[188] || CT.C188, labelBehavior: navigation_bar.NavigationDestinationLabelBehavior.alwaysShow});
    ;
  }).prototype = navigation_bar._NavigationBarDefaultsM2.prototype;
  dart.addTypeTests(navigation_bar._NavigationBarDefaultsM2);
  dart.addTypeCaches(navigation_bar._NavigationBarDefaultsM2);
  dart.setGetterSignature(navigation_bar._NavigationBarDefaultsM2, () => ({
    __proto__: dart.getGetters(navigation_bar._NavigationBarDefaultsM2.__proto__),
    backgroundColor: dart.nullable(ui.Color),
    iconTheme: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(icon_theme_data.IconThemeData))),
    indicatorColor: dart.nullable(ui.Color),
    labelTextStyle: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(text_style.TextStyle)))
  }));
  dart.setLibraryUri(navigation_bar._NavigationBarDefaultsM2, I[53]);
  dart.setFieldSignature(navigation_bar._NavigationBarDefaultsM2, () => ({
    __proto__: dart.getFields(navigation_bar._NavigationBarDefaultsM2.__proto__),
    [S$._theme$2]: dart.finalFieldType(theme_data.ThemeData),
    [S$._colors$4]: dart.finalFieldType(color_scheme.ColorScheme)
  }));
  navigation_bar._NavigationBarDefaultsM3 = class _NavigationBarDefaultsM3 extends navigation_bar_theme.NavigationBarThemeData {
    static ['_#new#tearOff'](context) {
      return new navigation_bar._NavigationBarDefaultsM3.new(context);
    }
    get [S$._colors$4]() {
      let t38, t37;
      t37 = this[S$.___NavigationBarDefaultsM3__colors];
      return t37 == null ? (t38 = theme$.Theme.of(this.context).colorScheme, this[S$.___NavigationBarDefaultsM3__colors] == null ? this[S$.___NavigationBarDefaultsM3__colors] = t38 : dart.throw(new _internal.LateError.fieldADI("_colors"))) : t37;
    }
    get [S$._textTheme$2]() {
      let t38, t37;
      t37 = this[S$.___NavigationBarDefaultsM3__textTheme];
      return t37 == null ? (t38 = theme$.Theme.of(this.context).textTheme, this[S$.___NavigationBarDefaultsM3__textTheme] == null ? this[S$.___NavigationBarDefaultsM3__textTheme] = t38 : dart.throw(new _internal.LateError.fieldADI("_textTheme"))) : t37;
    }
    get backgroundColor() {
      return this[S$._colors$4].surface;
    }
    get surfaceTintColor() {
      return this[S$._colors$4].surfaceTint;
    }
    get iconTheme() {
      return material_state.MaterialStateProperty.resolveWith(T$.IconThemeDataN(), dart.fn(states => new icon_theme_data.IconThemeData.new({size: 24.0, color: states.contains(material_state.MaterialState.selected) ? this[S$._colors$4].onSecondaryContainer : this[S$._colors$4].onSurfaceVariant}), T$.SetOfMaterialStateToIconThemeData()));
    }
    get indicatorColor() {
      return this[S$._colors$4].secondaryContainer;
    }
    get indicatorShape() {
      return C[17] || CT.C17;
    }
    get labelTextStyle() {
      return material_state.MaterialStateProperty.resolveWith(T$.TextStyleN(), dart.fn(states => {
        let style = dart.nullCheck(this[S$._textTheme$2].labelMedium);
        return style.apply({color: states.contains(material_state.MaterialState.selected) ? this[S$._colors$4].onSurface : this[S$._colors$4].onSurfaceVariant});
      }, T$.SetOfMaterialStateToTextStyle()));
    }
  };
  (navigation_bar._NavigationBarDefaultsM3.new = function(context) {
    this[S$.___NavigationBarDefaultsM3__colors] = null;
    this[S$.___NavigationBarDefaultsM3__textTheme] = null;
    this.context = context;
    navigation_bar._NavigationBarDefaultsM3.__proto__.new.call(this, {height: 80.0, elevation: 3.0, labelBehavior: navigation_bar.NavigationDestinationLabelBehavior.alwaysShow});
    ;
  }).prototype = navigation_bar._NavigationBarDefaultsM3.prototype;
  dart.addTypeTests(navigation_bar._NavigationBarDefaultsM3);
  dart.addTypeCaches(navigation_bar._NavigationBarDefaultsM3);
  dart.setGetterSignature(navigation_bar._NavigationBarDefaultsM3, () => ({
    __proto__: dart.getGetters(navigation_bar._NavigationBarDefaultsM3.__proto__),
    [S$._colors$4]: color_scheme.ColorScheme,
    [S$._textTheme$2]: text_theme.TextTheme,
    backgroundColor: dart.nullable(ui.Color),
    surfaceTintColor: dart.nullable(ui.Color),
    iconTheme: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(icon_theme_data.IconThemeData))),
    indicatorColor: dart.nullable(ui.Color),
    indicatorShape: dart.nullable(borders.ShapeBorder),
    labelTextStyle: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(text_style.TextStyle)))
  }));
  dart.setLibraryUri(navigation_bar._NavigationBarDefaultsM3, I[53]);
  dart.setFieldSignature(navigation_bar._NavigationBarDefaultsM3, () => ({
    __proto__: dart.getFields(navigation_bar._NavigationBarDefaultsM3.__proto__),
    context: dart.finalFieldType(framework.BuildContext),
    [S$.___NavigationBarDefaultsM3__colors]: dart.fieldType(dart.nullable(color_scheme.ColorScheme)),
    [S$.___NavigationBarDefaultsM3__textTheme]: dart.fieldType(dart.nullable(text_theme.TextTheme))
  }));
  navigation_bar._isForwardOrCompleted = function _isForwardOrCompleted(animation) {
    return animation.status === animation$.AnimationStatus.forward || animation.status === animation$.AnimationStatus.completed;
  };
  navigation_bar._defaultsFor = function _defaultsFor(context) {
    return theme$.Theme.of(context).useMaterial3 ? new navigation_bar._NavigationBarDefaultsM3.new(context) : new navigation_bar._NavigationBarDefaultsM2.new(context);
  };
  navigation_bar_theme.NavigationBarTheme = class NavigationBarTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[S$.data$12];
    }
    set data(value) {
      super.data = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let data = opts && 'data' in opts ? opts.data : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new navigation_bar_theme.NavigationBarTheme.new({key: key, data: data, child: child, $creationLocationd_0dea112b090073317d4: C[499] || CT.C499});
    }
    static of(context) {
      let t37, t37$;
      let navigationBarTheme = context.dependOnInheritedWidgetOfExactType(navigation_bar_theme.NavigationBarTheme);
      t37$ = (t37 = navigationBarTheme, t37 == null ? null : t37.data);
      return t37$ == null ? theme$.Theme.of(context).navigationBarTheme : t37$;
    }
    wrap(context, child) {
      return new navigation_bar_theme.NavigationBarTheme.new({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C[500] || CT.C500});
    }
    updateShouldNotify(oldWidget) {
      navigation_bar_theme.NavigationBarTheme.as(oldWidget);
      return !this.data._equals(oldWidget.data);
    }
  };
  (navigation_bar_theme.NavigationBarTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.data$12] = data;
    if (!(data !== null)) dart.assertFailed(null, I[54], 203, 15, "data != null");
    navigation_bar_theme.NavigationBarTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = navigation_bar_theme.NavigationBarTheme.prototype;
  dart.addTypeTests(navigation_bar_theme.NavigationBarTheme);
  dart.addTypeCaches(navigation_bar_theme.NavigationBarTheme);
  dart.setMethodSignature(navigation_bar_theme.NavigationBarTheme, () => ({
    __proto__: dart.getMethods(navigation_bar_theme.NavigationBarTheme.__proto__),
    wrap: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget]),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setStaticMethodSignature(navigation_bar_theme.NavigationBarTheme, () => ['of']);
  dart.setLibraryUri(navigation_bar_theme.NavigationBarTheme, I[55]);
  dart.setFieldSignature(navigation_bar_theme.NavigationBarTheme, () => ({
    __proto__: dart.getFields(navigation_bar_theme.NavigationBarTheme.__proto__),
    data: dart.finalFieldType(navigation_bar_theme.NavigationBarThemeData)
  }));
  input_decorator._InputBorderGap = class _InputBorderGap extends change_notifier.ChangeNotifier {
    get start() {
      return this[S$._start];
    }
    set start(value) {
      if (value != this[S$._start]) {
        this[S$._start] = value;
        this.notifyListeners();
      }
    }
    get extent() {
      return this[S$._extent];
    }
    set extent(value) {
      if (value !== this[S$._extent]) {
        this[S$._extent] = value;
        this.notifyListeners();
      }
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      if (!other[S.$runtimeType]._equals(this[S.$runtimeType])) {
        return false;
      }
      return input_decorator._InputBorderGap.is(other) && other.start == this.start && other.extent === this.extent;
    }
    get hashCode() {
      return core.Object.hash(this.start, this.extent);
    }
    toString() {
      return diagnostics.describeIdentity(this);
    }
    static ['_#new#tearOff']() {
      return new input_decorator._InputBorderGap.new();
    }
  };
  (input_decorator._InputBorderGap.new = function() {
    this[S$._start] = null;
    this[S$._extent] = 0.0;
    input_decorator._InputBorderGap.__proto__.new.call(this);
    ;
  }).prototype = input_decorator._InputBorderGap.prototype;
  dart.addTypeTests(input_decorator._InputBorderGap);
  dart.addTypeCaches(input_decorator._InputBorderGap);
  dart.setGetterSignature(input_decorator._InputBorderGap, () => ({
    __proto__: dart.getGetters(input_decorator._InputBorderGap.__proto__),
    start: dart.nullable(core.double),
    extent: core.double
  }));
  dart.setSetterSignature(input_decorator._InputBorderGap, () => ({
    __proto__: dart.getSetters(input_decorator._InputBorderGap.__proto__),
    start: dart.nullable(core.double),
    extent: core.double
  }));
  dart.setLibraryUri(input_decorator._InputBorderGap, I[56]);
  dart.setFieldSignature(input_decorator._InputBorderGap, () => ({
    __proto__: dart.getFields(input_decorator._InputBorderGap.__proto__),
    [S$._start]: dart.fieldType(dart.nullable(core.double)),
    [S$._extent]: dart.fieldType(core.double)
  }));
  dart.defineExtensionMethods(input_decorator._InputBorderGap, ['_equals', 'toString']);
  dart.defineExtensionAccessors(input_decorator._InputBorderGap, ['hashCode']);
  input_decorator._InputBorderTween = class _InputBorderTween extends tween.Tween$(input_border.InputBorder) {
    static ['_#new#tearOff'](opts) {
      let begin = opts && 'begin' in opts ? opts.begin : null;
      let end = opts && 'end' in opts ? opts.end : null;
      return new input_decorator._InputBorderTween.new({begin: begin, end: end});
    }
    lerp(t) {
      return input_border.InputBorder.as(dart.nullCheck(borders.ShapeBorder.lerp(this.begin, this.end, t)));
    }
  };
  (input_decorator._InputBorderTween.new = function(opts) {
    let begin = opts && 'begin' in opts ? opts.begin : null;
    let end = opts && 'end' in opts ? opts.end : null;
    input_decorator._InputBorderTween.__proto__.new.call(this, {begin: begin, end: end});
    ;
  }).prototype = input_decorator._InputBorderTween.prototype;
  dart.addTypeTests(input_decorator._InputBorderTween);
  dart.addTypeCaches(input_decorator._InputBorderTween);
  dart.setLibraryUri(input_decorator._InputBorderTween, I[56]);
  input_decorator._InputBorderPainter = class _InputBorderPainter extends custom_paint.CustomPainter {
    static ['_#new#tearOff'](opts) {
      let repaint = opts && 'repaint' in opts ? opts.repaint : null;
      let borderAnimation = opts && 'borderAnimation' in opts ? opts.borderAnimation : null;
      let border = opts && 'border' in opts ? opts.border : null;
      let gapAnimation = opts && 'gapAnimation' in opts ? opts.gapAnimation : null;
      let gap = opts && 'gap' in opts ? opts.gap : null;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
      let hoverAnimation = opts && 'hoverAnimation' in opts ? opts.hoverAnimation : null;
      let hoverColorTween = opts && 'hoverColorTween' in opts ? opts.hoverColorTween : null;
      return new input_decorator._InputBorderPainter.new({repaint: repaint, borderAnimation: borderAnimation, border: border, gapAnimation: gapAnimation, gap: gap, textDirection: textDirection, fillColor: fillColor, hoverAnimation: hoverAnimation, hoverColorTween: hoverColorTween});
    }
    get blendedColor() {
      return ui.Color.alphaBlend(dart.nullCheck(this.hoverColorTween.evaluate(this.hoverAnimation)), this.fillColor);
    }
    paint(canvas, size) {
      let t37;
      let borderValue = this.border.evaluate(this.borderAnimation);
      let canvasRect = ui.Offset.zero['&'](size);
      let blendedFillColor = this.blendedColor;
      if (blendedFillColor.alpha > 0) {
        canvas.drawPath(borderValue.getOuterPath(canvasRect, {textDirection: this.textDirection}), (t37 = ui.Paint.new(), (() => {
          t37.color = blendedFillColor;
          t37.style = ui.PaintingStyle.fill;
          return t37;
        })()));
      }
      borderValue.paint(canvas, canvasRect, {gapStart: this.gap.start, gapExtent: this.gap.extent, gapPercentage: this.gapAnimation.value, textDirection: this.textDirection});
    }
    shouldRepaint(oldPainter) {
      input_decorator._InputBorderPainter.as(oldPainter);
      return !this.borderAnimation[S.$_equals](oldPainter.borderAnimation) || !this.hoverAnimation[S.$_equals](oldPainter.hoverAnimation) || !this.gapAnimation[S.$_equals](oldPainter.gapAnimation) || !this.border[S.$_equals](oldPainter.border) || !this.gap._equals(oldPainter.gap) || this.textDirection !== oldPainter.textDirection;
    }
    toString() {
      return diagnostics.describeIdentity(this);
    }
  };
  (input_decorator._InputBorderPainter.new = function(opts) {
    let repaint = opts && 'repaint' in opts ? opts.repaint : null;
    let borderAnimation = opts && 'borderAnimation' in opts ? opts.borderAnimation : null;
    let border = opts && 'border' in opts ? opts.border : null;
    let gapAnimation = opts && 'gapAnimation' in opts ? opts.gapAnimation : null;
    let gap = opts && 'gap' in opts ? opts.gap : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
    let hoverAnimation = opts && 'hoverAnimation' in opts ? opts.hoverAnimation : null;
    let hoverColorTween = opts && 'hoverColorTween' in opts ? opts.hoverColorTween : null;
    this.borderAnimation = borderAnimation;
    this.border = border;
    this.gapAnimation = gapAnimation;
    this.gap = gap;
    this.textDirection = textDirection;
    this.fillColor = fillColor;
    this.hoverAnimation = hoverAnimation;
    this.hoverColorTween = hoverColorTween;
    input_decorator._InputBorderPainter.__proto__.new.call(this, {repaint: repaint});
    ;
  }).prototype = input_decorator._InputBorderPainter.prototype;
  dart.addTypeTests(input_decorator._InputBorderPainter);
  dart.addTypeCaches(input_decorator._InputBorderPainter);
  dart.setMethodSignature(input_decorator._InputBorderPainter, () => ({
    __proto__: dart.getMethods(input_decorator._InputBorderPainter.__proto__),
    paint: dart.fnType(dart.void, [ui.Canvas, ui.Size]),
    shouldRepaint: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setGetterSignature(input_decorator._InputBorderPainter, () => ({
    __proto__: dart.getGetters(input_decorator._InputBorderPainter.__proto__),
    blendedColor: ui.Color
  }));
  dart.setLibraryUri(input_decorator._InputBorderPainter, I[56]);
  dart.setFieldSignature(input_decorator._InputBorderPainter, () => ({
    __proto__: dart.getFields(input_decorator._InputBorderPainter.__proto__),
    borderAnimation: dart.finalFieldType(animation$.Animation$(core.double)),
    border: dart.finalFieldType(input_decorator._InputBorderTween),
    gapAnimation: dart.finalFieldType(animation$.Animation$(core.double)),
    gap: dart.finalFieldType(input_decorator._InputBorderGap),
    textDirection: dart.finalFieldType(ui.TextDirection),
    fillColor: dart.finalFieldType(ui.Color),
    hoverColorTween: dart.finalFieldType(tween.ColorTween),
    hoverAnimation: dart.finalFieldType(animation$.Animation$(core.double))
  }));
  dart.defineExtensionMethods(input_decorator._InputBorderPainter, ['toString']);
  input_decorator._BorderContainer = class _BorderContainer extends framework.StatefulWidget {
    get border() {
      return this[S$.border];
    }
    set border(value) {
      super.border = value;
    }
    get gap() {
      return this[S$.gap];
    }
    set gap(value) {
      super.gap = value;
    }
    get gapAnimation() {
      return this[S$.gapAnimation];
    }
    set gapAnimation(value) {
      super.gapAnimation = value;
    }
    get fillColor() {
      return this[S$.fillColor$2];
    }
    set fillColor(value) {
      super.fillColor = value;
    }
    get hoverColor() {
      return this[S$.hoverColor$3];
    }
    set hoverColor(value) {
      super.hoverColor = value;
    }
    get isHovering() {
      return this[S$.isHovering];
    }
    set isHovering(value) {
      super.isHovering = value;
    }
    static ['_#new#tearOff'](opts) {
      let border = opts && 'border' in opts ? opts.border : null;
      let gap = opts && 'gap' in opts ? opts.gap : null;
      let gapAnimation = opts && 'gapAnimation' in opts ? opts.gapAnimation : null;
      let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
      let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
      let isHovering = opts && 'isHovering' in opts ? opts.isHovering : null;
      return new input_decorator._BorderContainer.new({border: border, gap: gap, gapAnimation: gapAnimation, fillColor: fillColor, hoverColor: hoverColor, isHovering: isHovering, $creationLocationd_0dea112b090073317d4: C[501] || CT.C501});
    }
    createState() {
      return new input_decorator._BorderContainerState.new();
    }
  };
  (input_decorator._BorderContainer.new = function(opts) {
    let border = opts && 'border' in opts ? opts.border : null;
    let gap = opts && 'gap' in opts ? opts.gap : null;
    let gapAnimation = opts && 'gapAnimation' in opts ? opts.gapAnimation : null;
    let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let isHovering = opts && 'isHovering' in opts ? opts.isHovering : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.border] = border;
    this[S$.gap] = gap;
    this[S$.gapAnimation] = gapAnimation;
    this[S$.fillColor$2] = fillColor;
    this[S$.hoverColor$3] = hoverColor;
    this[S$.isHovering] = isHovering;
    if (!(border !== null)) dart.assertFailed(null, I[57], 149, 15, "border != null");
    if (!(gap !== null)) dart.assertFailed(null, I[57], 150, 15, "gap != null");
    if (!(fillColor !== null)) dart.assertFailed(null, I[57], 151, 15, "fillColor != null");
    input_decorator._BorderContainer.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = input_decorator._BorderContainer.prototype;
  dart.addTypeTests(input_decorator._BorderContainer);
  dart.addTypeCaches(input_decorator._BorderContainer);
  dart.setMethodSignature(input_decorator._BorderContainer, () => ({
    __proto__: dart.getMethods(input_decorator._BorderContainer.__proto__),
    createState: dart.fnType(input_decorator._BorderContainerState, [])
  }));
  dart.setLibraryUri(input_decorator._BorderContainer, I[56]);
  dart.setFieldSignature(input_decorator._BorderContainer, () => ({
    __proto__: dart.getFields(input_decorator._BorderContainer.__proto__),
    border: dart.finalFieldType(input_border.InputBorder),
    gap: dart.finalFieldType(input_decorator._InputBorderGap),
    gapAnimation: dart.finalFieldType(animation$.Animation$(core.double)),
    fillColor: dart.finalFieldType(ui.Color),
    hoverColor: dart.finalFieldType(ui.Color),
    isHovering: dart.finalFieldType(core.bool)
  }));
  const State_TickerProviderStateMixin$36$0 = class State_TickerProviderStateMixin extends framework.State$(input_decorator._BorderContainer) {};
  (State_TickerProviderStateMixin$36$0.new = function() {
    ticker_provider.TickerProviderStateMixin$(input_decorator._BorderContainer)[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36$0.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36$0.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36$0, ticker_provider.TickerProviderStateMixin$(input_decorator._BorderContainer));
  input_decorator._BorderContainerState = class _BorderContainerState extends State_TickerProviderStateMixin$36$0 {
    get [S$._controller$2]() {
      let t37;
      t37 = this[S$.___BorderContainerState__controller];
      return t37 == null ? dart.throw(new _internal.LateError.fieldNI("_controller")) : t37;
    }
    set [S$._controller$2](library$32package$58flutter$47src$47material$47input_decorator$46dart$58$58_controller$35param) {
      this[S$.___BorderContainerState__controller] = library$32package$58flutter$47src$47material$47input_decorator$46dart$58$58_controller$35param;
    }
    get [S$._hoverColorController]() {
      let t37;
      t37 = this[S$.___BorderContainerState__hoverColorController];
      return t37 == null ? dart.throw(new _internal.LateError.fieldNI("_hoverColorController")) : t37;
    }
    set [S$._hoverColorController](library$32package$58flutter$47src$47material$47input_decorator$46dart$58$58_hoverColorController$35param) {
      this[S$.___BorderContainerState__hoverColorController] = library$32package$58flutter$47src$47material$47input_decorator$46dart$58$58_hoverColorController$35param;
    }
    get [S$._borderAnimation]() {
      let t37;
      t37 = this[S$.___BorderContainerState__borderAnimation];
      return t37 == null ? dart.throw(new _internal.LateError.fieldNI("_borderAnimation")) : t37;
    }
    set [S$._borderAnimation](library$32package$58flutter$47src$47material$47input_decorator$46dart$58$58_borderAnimation$35param) {
      this[S$.___BorderContainerState__borderAnimation] = library$32package$58flutter$47src$47material$47input_decorator$46dart$58$58_borderAnimation$35param;
    }
    get [S$._border]() {
      let t37;
      t37 = this[S$.___BorderContainerState__border];
      return t37 == null ? dart.throw(new _internal.LateError.fieldNI("_border")) : t37;
    }
    set [S$._border](library$32package$58flutter$47src$47material$47input_decorator$46dart$58$58_border$35param) {
      this[S$.___BorderContainerState__border] = library$32package$58flutter$47src$47material$47input_decorator$46dart$58$58_border$35param;
    }
    get [S$._hoverAnimation]() {
      let t37;
      t37 = this[S$.___BorderContainerState__hoverAnimation];
      return t37 == null ? dart.throw(new _internal.LateError.fieldNI("_hoverAnimation")) : t37;
    }
    set [S$._hoverAnimation](library$32package$58flutter$47src$47material$47input_decorator$46dart$58$58_hoverAnimation$35param) {
      this[S$.___BorderContainerState__hoverAnimation] = library$32package$58flutter$47src$47material$47input_decorator$46dart$58$58_hoverAnimation$35param;
    }
    get [S$._hoverColorTween]() {
      let t37;
      t37 = this[S$.___BorderContainerState__hoverColorTween];
      return t37 == null ? dart.throw(new _internal.LateError.fieldNI("_hoverColorTween")) : t37;
    }
    set [S$._hoverColorTween](library$32package$58flutter$47src$47material$47input_decorator$46dart$58$58_hoverColorTween$35param) {
      this[S$.___BorderContainerState__hoverColorTween] = library$32package$58flutter$47src$47material$47input_decorator$46dart$58$58_hoverColorTween$35param;
    }
    initState() {
      super.initState();
      this[S$._hoverColorController] = new animation_controller.AnimationController.new({duration: input_decorator._BorderContainerState._kHoverDuration, value: this.widget.isHovering ? 1.0 : 0.0, vsync: this});
      this[S$._controller$2] = new animation_controller.AnimationController.new({duration: input_decorator._kTransitionDuration, vsync: this});
      this[S$._borderAnimation] = new animations.CurvedAnimation.new({parent: this[S$._controller$2], curve: input_decorator._kTransitionCurve});
      this[S$._border] = new input_decorator._InputBorderTween.new({begin: this.widget.border, end: this.widget.border});
      this[S$._hoverAnimation] = new animations.CurvedAnimation.new({parent: this[S$._hoverColorController], curve: curves.Curves.linear});
      this[S$._hoverColorTween] = new tween.ColorTween.new({begin: colors$.Colors.transparent, end: this.widget.hoverColor});
    }
    dispose() {
      this[S$._controller$2].dispose();
      this[S$._hoverColorController].dispose();
      super.dispose();
    }
    didUpdateWidget(oldWidget) {
      let t37;
      input_decorator._BorderContainer.as(oldWidget);
      super.didUpdateWidget(oldWidget);
      if (!this.widget.border[S.$_equals](oldWidget.border)) {
        this[S$._border] = new input_decorator._InputBorderTween.new({begin: oldWidget.border, end: this.widget.border});
        t37 = this[S$._controller$2];
        (() => {
          t37.value = 0.0;
          t37.forward();
          return t37;
        })();
      }
      if (!this.widget.hoverColor._equals(oldWidget.hoverColor)) {
        this[S$._hoverColorTween] = new tween.ColorTween.new({begin: colors$.Colors.transparent, end: this.widget.hoverColor});
      }
      if (this.widget.isHovering !== oldWidget.isHovering) {
        if (this.widget.isHovering) {
          this[S$._hoverColorController].forward();
        } else {
          this[S$._hoverColorController].reverse();
        }
      }
    }
    build(context) {
      return new basic.CustomPaint.new({foregroundPainter: new input_decorator._InputBorderPainter.new({repaint: new change_notifier._MergingListenable.new(T$.JSArrayOfListenable().of([this[S$._borderAnimation], this.widget.gap, this[S$._hoverColorController]])), borderAnimation: this[S$._borderAnimation], border: this[S$._border], gapAnimation: this.widget.gapAnimation, gap: this.widget.gap, textDirection: basic.Directionality.of(context), fillColor: this.widget.fillColor, hoverColorTween: this[S$._hoverColorTween], hoverAnimation: this[S$._hoverAnimation]}), $creationLocationd_0dea112b090073317d4: C[502] || CT.C502});
    }
    static ['_#new#tearOff']() {
      return new input_decorator._BorderContainerState.new();
    }
  };
  (input_decorator._BorderContainerState.new = function() {
    this[S$.___BorderContainerState__controller] = null;
    this[S$.___BorderContainerState__hoverColorController] = null;
    this[S$.___BorderContainerState__borderAnimation] = null;
    this[S$.___BorderContainerState__border] = null;
    this[S$.___BorderContainerState__hoverAnimation] = null;
    this[S$.___BorderContainerState__hoverColorTween] = null;
    input_decorator._BorderContainerState.__proto__.new.call(this);
    ;
  }).prototype = input_decorator._BorderContainerState.prototype;
  dart.addTypeTests(input_decorator._BorderContainerState);
  dart.addTypeCaches(input_decorator._BorderContainerState);
  dart.setMethodSignature(input_decorator._BorderContainerState, () => ({
    __proto__: dart.getMethods(input_decorator._BorderContainerState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(input_decorator._BorderContainerState, () => ({
    __proto__: dart.getGetters(input_decorator._BorderContainerState.__proto__),
    [S$._controller$2]: animation_controller.AnimationController,
    [S$._hoverColorController]: animation_controller.AnimationController,
    [S$._borderAnimation]: animation$.Animation$(core.double),
    [S$._border]: input_decorator._InputBorderTween,
    [S$._hoverAnimation]: animation$.Animation$(core.double),
    [S$._hoverColorTween]: tween.ColorTween
  }));
  dart.setSetterSignature(input_decorator._BorderContainerState, () => ({
    __proto__: dart.getSetters(input_decorator._BorderContainerState.__proto__),
    [S$._controller$2]: animation_controller.AnimationController,
    [S$._hoverColorController]: animation_controller.AnimationController,
    [S$._borderAnimation]: animation$.Animation$(core.double),
    [S$._border]: input_decorator._InputBorderTween,
    [S$._hoverAnimation]: animation$.Animation$(core.double),
    [S$._hoverColorTween]: tween.ColorTween
  }));
  dart.setLibraryUri(input_decorator._BorderContainerState, I[56]);
  dart.setFieldSignature(input_decorator._BorderContainerState, () => ({
    __proto__: dart.getFields(input_decorator._BorderContainerState.__proto__),
    [S$.___BorderContainerState__controller]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S$.___BorderContainerState__hoverColorController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S$.___BorderContainerState__borderAnimation]: dart.fieldType(dart.nullable(animation$.Animation$(core.double))),
    [S$.___BorderContainerState__border]: dart.fieldType(dart.nullable(input_decorator._InputBorderTween)),
    [S$.___BorderContainerState__hoverAnimation]: dart.fieldType(dart.nullable(animation$.Animation$(core.double))),
    [S$.___BorderContainerState__hoverColorTween]: dart.fieldType(dart.nullable(tween.ColorTween))
  }));
  dart.setStaticFieldSignature(input_decorator._BorderContainerState, () => ['_kHoverDuration']);
  dart.defineLazy(input_decorator._BorderContainerState, {
    /*input_decorator._BorderContainerState._kHoverDuration*/get _kHoverDuration() {
      return C[503] || CT.C503;
    }
  }, false);
  input_decorator._Shaker = class _Shaker extends transitions.AnimatedWidget {
    get child() {
      return this[S$.child$14];
    }
    set child(value) {
      super.child = value;
    }
    static ['_#new#tearOff'](opts) {
      let animation = opts && 'animation' in opts ? opts.animation : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new input_decorator._Shaker.new({animation: animation, child: child, $creationLocationd_0dea112b090073317d4: C[504] || CT.C504});
    }
    get animation() {
      return T$.AnimationOfdouble().as(this.listenable);
    }
    get translateX() {
      let t = this.animation.value;
      if (t <= 0.25) {
        return -t * 4;
      } else if (t < 0.75) {
        return (t - 0.5) * 4;
      } else {
        return (1.0 - t) * 4.0 * 4;
      }
    }
    build(context) {
      return new basic.Transform.new({transform: vector_math_64.Matrix4.translationValues(this.translateX, 0.0, 0.0), child: this.child, $creationLocationd_0dea112b090073317d4: C[505] || CT.C505});
    }
  };
  (input_decorator._Shaker.new = function(opts) {
    let animation = opts && 'animation' in opts ? opts.animation : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.child$14] = child;
    input_decorator._Shaker.__proto__.new.call(this, {listenable: animation, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = input_decorator._Shaker.prototype;
  dart.addTypeTests(input_decorator._Shaker);
  dart.addTypeCaches(input_decorator._Shaker);
  dart.setMethodSignature(input_decorator._Shaker, () => ({
    __proto__: dart.getMethods(input_decorator._Shaker.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(input_decorator._Shaker, () => ({
    __proto__: dart.getGetters(input_decorator._Shaker.__proto__),
    animation: animation$.Animation$(core.double),
    translateX: core.double
  }));
  dart.setLibraryUri(input_decorator._Shaker, I[56]);
  dart.setFieldSignature(input_decorator._Shaker, () => ({
    __proto__: dart.getFields(input_decorator._Shaker.__proto__),
    child: dart.finalFieldType(dart.nullable(framework.Widget))
  }));
  input_decorator._HelperError = class _HelperError extends framework.StatefulWidget {
    get textAlign() {
      return this[S$.textAlign];
    }
    set textAlign(value) {
      super.textAlign = value;
    }
    get helperText() {
      return this[S$.helperText];
    }
    set helperText(value) {
      super.helperText = value;
    }
    get helperStyle() {
      return this[S$.helperStyle];
    }
    set helperStyle(value) {
      super.helperStyle = value;
    }
    get helperMaxLines() {
      return this[S$.helperMaxLines];
    }
    set helperMaxLines(value) {
      super.helperMaxLines = value;
    }
    get errorText() {
      return this[S$.errorText];
    }
    set errorText(value) {
      super.errorText = value;
    }
    get errorStyle() {
      return this[S$.errorStyle];
    }
    set errorStyle(value) {
      super.errorStyle = value;
    }
    get errorMaxLines() {
      return this[S$.errorMaxLines];
    }
    set errorMaxLines(value) {
      super.errorMaxLines = value;
    }
    static ['_#new#tearOff'](opts) {
      let textAlign = opts && 'textAlign' in opts ? opts.textAlign : null;
      let helperText = opts && 'helperText' in opts ? opts.helperText : null;
      let helperStyle = opts && 'helperStyle' in opts ? opts.helperStyle : null;
      let helperMaxLines = opts && 'helperMaxLines' in opts ? opts.helperMaxLines : null;
      let errorText = opts && 'errorText' in opts ? opts.errorText : null;
      let errorStyle = opts && 'errorStyle' in opts ? opts.errorStyle : null;
      let errorMaxLines = opts && 'errorMaxLines' in opts ? opts.errorMaxLines : null;
      return new input_decorator._HelperError.new({textAlign: textAlign, helperText: helperText, helperStyle: helperStyle, helperMaxLines: helperMaxLines, errorText: errorText, errorStyle: errorStyle, errorMaxLines: errorMaxLines, $creationLocationd_0dea112b090073317d4: C[506] || CT.C506});
    }
    createState() {
      return new input_decorator._HelperErrorState.new();
    }
  };
  (input_decorator._HelperError.new = function(opts) {
    let textAlign = opts && 'textAlign' in opts ? opts.textAlign : null;
    let helperText = opts && 'helperText' in opts ? opts.helperText : null;
    let helperStyle = opts && 'helperStyle' in opts ? opts.helperStyle : null;
    let helperMaxLines = opts && 'helperMaxLines' in opts ? opts.helperMaxLines : null;
    let errorText = opts && 'errorText' in opts ? opts.errorText : null;
    let errorStyle = opts && 'errorStyle' in opts ? opts.errorStyle : null;
    let errorMaxLines = opts && 'errorMaxLines' in opts ? opts.errorMaxLines : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.textAlign] = textAlign;
    this[S$.helperText] = helperText;
    this[S$.helperStyle] = helperStyle;
    this[S$.helperMaxLines] = helperMaxLines;
    this[S$.errorText] = errorText;
    this[S$.errorStyle] = errorStyle;
    this[S$.errorMaxLines] = errorMaxLines;
    input_decorator._HelperError.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = input_decorator._HelperError.prototype;
  dart.addTypeTests(input_decorator._HelperError);
  dart.addTypeCaches(input_decorator._HelperError);
  dart.setMethodSignature(input_decorator._HelperError, () => ({
    __proto__: dart.getMethods(input_decorator._HelperError.__proto__),
    createState: dart.fnType(input_decorator._HelperErrorState, [])
  }));
  dart.setLibraryUri(input_decorator._HelperError, I[56]);
  dart.setFieldSignature(input_decorator._HelperError, () => ({
    __proto__: dart.getFields(input_decorator._HelperError.__proto__),
    textAlign: dart.finalFieldType(dart.nullable(ui.TextAlign)),
    helperText: dart.finalFieldType(dart.nullable(core.String)),
    helperStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    helperMaxLines: dart.finalFieldType(dart.nullable(core.int)),
    errorText: dart.finalFieldType(dart.nullable(core.String)),
    errorStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    errorMaxLines: dart.finalFieldType(dart.nullable(core.int))
  }));
  const State_SingleTickerProviderStateMixin$36$ = class State_SingleTickerProviderStateMixin extends framework.State$(input_decorator._HelperError) {};
  (State_SingleTickerProviderStateMixin$36$.new = function() {
    ticker_provider.SingleTickerProviderStateMixin$(input_decorator._HelperError)[dart.mixinNew].call(this);
    State_SingleTickerProviderStateMixin$36$.__proto__.new.call(this);
  }).prototype = State_SingleTickerProviderStateMixin$36$.prototype;
  dart.applyMixin(State_SingleTickerProviderStateMixin$36$, ticker_provider.SingleTickerProviderStateMixin$(input_decorator._HelperError));
  input_decorator._HelperErrorState = class _HelperErrorState extends State_SingleTickerProviderStateMixin$36$ {
    get [S$._controller$2]() {
      let t37;
      t37 = this[S$.___HelperErrorState__controller];
      return t37 == null ? dart.throw(new _internal.LateError.fieldNI("_controller")) : t37;
    }
    set [S$._controller$2](library$32package$58flutter$47src$47material$47input_decorator$46dart$58$58_controller$35param) {
      this[S$.___HelperErrorState__controller] = library$32package$58flutter$47src$47material$47input_decorator$46dart$58$58_controller$35param;
    }
    initState() {
      super.initState();
      this[S$._controller$2] = new animation_controller.AnimationController.new({duration: input_decorator._kTransitionDuration, vsync: this});
      if (this.widget.errorText != null) {
        this[S$._error] = this[S$._buildError]();
        this[S$._controller$2].value = 1.0;
      } else if (this.widget.helperText != null) {
        this[S$._helper] = this[S$._buildHelper]();
      }
      this[S$._controller$2].addListener(dart.bind(this, S$._handleChange));
    }
    dispose() {
      this[S$._controller$2].dispose();
      super.dispose();
    }
    [S$._handleChange]() {
      this.setState(dart.fn(() => {
      }, T$.VoidTovoid()));
    }
    didUpdateWidget(old) {
      input_decorator._HelperError.as(old);
      super.didUpdateWidget(old);
      let newErrorText = this.widget.errorText;
      let newHelperText = this.widget.helperText;
      let oldErrorText = old.errorText;
      let oldHelperText = old.helperText;
      let errorTextStateChanged = newErrorText != null !== (oldErrorText != null);
      let helperTextStateChanged = newErrorText == null && newHelperText != null !== (oldHelperText != null);
      if (errorTextStateChanged || helperTextStateChanged) {
        if (newErrorText != null) {
          this[S$._error] = this[S$._buildError]();
          this[S$._controller$2].forward();
        } else if (newHelperText != null) {
          this[S$._helper] = this[S$._buildHelper]();
          this[S$._controller$2].reverse();
        } else {
          this[S$._controller$2].reverse();
        }
      }
    }
    [S$._buildHelper]() {
      if (!(this.widget.helperText != null)) dart.assertFailed(null, I[57], 376, 12, "widget.helperText != null");
      return new basic.Semantics.new({container: true, child: new transitions.FadeTransition.new({opacity: new (T$.TweenOfdouble()).new({begin: 1.0, end: 0.0}).animate(this[S$._controller$2]), child: new text$.Text.new(dart.nullCheck(this.widget.helperText), {style: this.widget.helperStyle, textAlign: this.widget.textAlign, overflow: text_painter.TextOverflow.ellipsis, maxLines: this.widget.helperMaxLines, $creationLocationd_0dea112b090073317d4: C[507] || CT.C507}), $creationLocationd_0dea112b090073317d4: C[508] || CT.C508}), $creationLocationd_0dea112b090073317d4: C[509] || CT.C509});
    }
    [S$._buildError]() {
      if (!(this.widget.errorText != null)) dart.assertFailed(null, I[57], 393, 12, "widget.errorText != null");
      return new basic.Semantics.new({container: true, liveRegion: true, child: new transitions.FadeTransition.new({opacity: this[S$._controller$2], child: new basic.FractionalTranslation.new({translation: new (T$.TweenOfOffset()).new({begin: C[510] || CT.C510, end: ui.Offset.zero}).evaluate(this[S$._controller$2].view), child: new text$.Text.new(dart.nullCheck(this.widget.errorText), {style: this.widget.errorStyle, textAlign: this.widget.textAlign, overflow: text_painter.TextOverflow.ellipsis, maxLines: this.widget.errorMaxLines, $creationLocationd_0dea112b090073317d4: C[511] || CT.C511}), $creationLocationd_0dea112b090073317d4: C[512] || CT.C512}), $creationLocationd_0dea112b090073317d4: C[513] || CT.C513}), $creationLocationd_0dea112b090073317d4: C[514] || CT.C514});
    }
    build(context) {
      if (this[S$._controller$2].isDismissed) {
        this[S$._error] = null;
        if (this.widget.helperText != null) {
          return this[S$._helper] = this[S$._buildHelper]();
        } else {
          this[S$._helper] = null;
          return input_decorator._HelperErrorState.empty;
        }
      }
      if (this[S$._controller$2].isCompleted) {
        this[S$._helper] = null;
        if (this.widget.errorText != null) {
          return this[S$._error] = this[S$._buildError]();
        } else {
          this[S$._error] = null;
          return input_decorator._HelperErrorState.empty;
        }
      }
      if (this[S$._helper] == null && this.widget.errorText != null) {
        return this[S$._buildError]();
      }
      if (this[S$._error] == null && this.widget.helperText != null) {
        return this[S$._buildHelper]();
      }
      if (this.widget.errorText != null) {
        return new basic.Stack.new({children: T$.JSArrayOfWidget().of([new transitions.FadeTransition.new({opacity: new (T$.TweenOfdouble()).new({begin: 1.0, end: 0.0}).animate(this[S$._controller$2]), child: this[S$._helper], $creationLocationd_0dea112b090073317d4: C[515] || CT.C515}), this[S$._buildError]()]), $creationLocationd_0dea112b090073317d4: C[516] || CT.C516});
      }
      if (this.widget.helperText != null) {
        return new basic.Stack.new({children: T$.JSArrayOfWidget().of([this[S$._buildHelper](), new transitions.FadeTransition.new({opacity: this[S$._controller$2], child: this[S$._error], $creationLocationd_0dea112b090073317d4: C[517] || CT.C517})]), $creationLocationd_0dea112b090073317d4: C[518] || CT.C518});
      }
      return input_decorator._HelperErrorState.empty;
    }
    static ['_#new#tearOff']() {
      return new input_decorator._HelperErrorState.new();
    }
  };
  (input_decorator._HelperErrorState.new = function() {
    this[S$.___HelperErrorState__controller] = null;
    this[S$._helper] = null;
    this[S$._error] = null;
    input_decorator._HelperErrorState.__proto__.new.call(this);
    ;
  }).prototype = input_decorator._HelperErrorState.prototype;
  dart.addTypeTests(input_decorator._HelperErrorState);
  dart.addTypeCaches(input_decorator._HelperErrorState);
  dart.setMethodSignature(input_decorator._HelperErrorState, () => ({
    __proto__: dart.getMethods(input_decorator._HelperErrorState.__proto__),
    [S$._handleChange]: dart.fnType(dart.void, []),
    [S$._buildHelper]: dart.fnType(framework.Widget, []),
    [S$._buildError]: dart.fnType(framework.Widget, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(input_decorator._HelperErrorState, () => ({
    __proto__: dart.getGetters(input_decorator._HelperErrorState.__proto__),
    [S$._controller$2]: animation_controller.AnimationController
  }));
  dart.setSetterSignature(input_decorator._HelperErrorState, () => ({
    __proto__: dart.getSetters(input_decorator._HelperErrorState.__proto__),
    [S$._controller$2]: animation_controller.AnimationController
  }));
  dart.setLibraryUri(input_decorator._HelperErrorState, I[56]);
  dart.setFieldSignature(input_decorator._HelperErrorState, () => ({
    __proto__: dart.getFields(input_decorator._HelperErrorState.__proto__),
    [S$.___HelperErrorState__controller]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S$._helper]: dart.fieldType(dart.nullable(framework.Widget)),
    [S$._error]: dart.fieldType(dart.nullable(framework.Widget))
  }));
  dart.setStaticFieldSignature(input_decorator._HelperErrorState, () => ['empty']);
  dart.defineLazy(input_decorator._HelperErrorState, {
    /*input_decorator._HelperErrorState.empty*/get empty() {
      return C[519] || CT.C519;
    }
  }, false);
  input_decorator.FloatingLabelBehavior = class FloatingLabelBehavior extends core._Enum {
    toString() {
      return "FloatingLabelBehavior." + this[S._name];
    }
  };
  (input_decorator.FloatingLabelBehavior.new = function(index, name) {
    input_decorator.FloatingLabelBehavior.__proto__.new.call(this, index, name);
    ;
  }).prototype = input_decorator.FloatingLabelBehavior.prototype;
  dart.addTypeTests(input_decorator.FloatingLabelBehavior);
  dart.addTypeCaches(input_decorator.FloatingLabelBehavior);
  dart.setLibraryUri(input_decorator.FloatingLabelBehavior, I[56]);
  dart.setStaticFieldSignature(input_decorator.FloatingLabelBehavior, () => ['values', 'never', 'auto', 'always']);
  dart.defineExtensionMethods(input_decorator.FloatingLabelBehavior, ['toString']);
  dart.defineLazy(input_decorator.FloatingLabelBehavior, {
    /*input_decorator.FloatingLabelBehavior.values*/get values() {
      return C[521] || CT.C521;
    },
    /*input_decorator.FloatingLabelBehavior.never*/get never() {
      return C[522] || CT.C522;
    },
    /*input_decorator.FloatingLabelBehavior.auto*/get auto() {
      return C[523] || CT.C523;
    },
    /*input_decorator.FloatingLabelBehavior.always*/get always() {
      return C[524] || CT.C524;
    }
  }, false);
  input_decorator.FloatingLabelAlignment = class FloatingLabelAlignment extends core.Object {
    get [S$._x$1]() {
      return this[S$._x];
    }
    set [S$._x$1](value) {
      super[S$._x$1] = value;
    }
    static ['_#_#tearOff'](_x) {
      return new input_decorator.FloatingLabelAlignment.__(_x);
    }
    get hashCode() {
      return this[S$._x$1][S.$hashCode];
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      if (!other[S.$runtimeType]._equals(this[S.$runtimeType])) {
        return false;
      }
      return input_decorator.FloatingLabelAlignment.is(other) && this[S$._x$1] === other[S$._x$1];
    }
    static _stringify(x) {
      if (x === -1.0) {
        return "FloatingLabelAlignment.start";
      }
      if (x === 0.0) {
        return "FloatingLabelAlignment.center";
      }
      return "FloatingLabelAlignment(x: " + x[S$.$toStringAsFixed](1) + ")";
    }
    toString() {
      return input_decorator.FloatingLabelAlignment._stringify(this[S$._x$1]);
    }
  };
  (input_decorator.FloatingLabelAlignment.__ = function(_x) {
    this[S$._x] = _x;
    if (!(_x !== null)) dart.assertFailed(null, I[57], 502, 52, "_x != null");
    if (!(_x >= -1.0 && _x <= 1.0)) dart.assertFailed(null, I[57], 503, 15, "_x >= -1.0 && _x <= 1.0");
    ;
  }).prototype = input_decorator.FloatingLabelAlignment.prototype;
  dart.addTypeTests(input_decorator.FloatingLabelAlignment);
  dart.addTypeCaches(input_decorator.FloatingLabelAlignment);
  dart.setStaticMethodSignature(input_decorator.FloatingLabelAlignment, () => ['_stringify']);
  dart.setLibraryUri(input_decorator.FloatingLabelAlignment, I[56]);
  dart.setFieldSignature(input_decorator.FloatingLabelAlignment, () => ({
    __proto__: dart.getFields(input_decorator.FloatingLabelAlignment.__proto__),
    [S$._x$1]: dart.finalFieldType(core.double)
  }));
  dart.setStaticFieldSignature(input_decorator.FloatingLabelAlignment, () => ['start', 'center']);
  dart.defineExtensionMethods(input_decorator.FloatingLabelAlignment, ['_equals', 'toString']);
  dart.defineExtensionAccessors(input_decorator.FloatingLabelAlignment, ['hashCode']);
  dart.defineLazy(input_decorator.FloatingLabelAlignment, {
    /*input_decorator.FloatingLabelAlignment.start*/get start() {
      return C[525] || CT.C525;
    },
    /*input_decorator.FloatingLabelAlignment.center*/get center() {
      return C[526] || CT.C526;
    }
  }, false);
  input_decorator._DecorationSlot = class _DecorationSlot extends core._Enum {
    toString() {
      return "_DecorationSlot." + this[S._name];
    }
  };
  (input_decorator._DecorationSlot.new = function(index, name) {
    input_decorator._DecorationSlot.__proto__.new.call(this, index, name);
    ;
  }).prototype = input_decorator._DecorationSlot.prototype;
  dart.addTypeTests(input_decorator._DecorationSlot);
  dart.addTypeCaches(input_decorator._DecorationSlot);
  dart.setLibraryUri(input_decorator._DecorationSlot, I[56]);
  dart.setStaticFieldSignature(input_decorator._DecorationSlot, () => ['values', 'icon', 'input', 'label', 'hint', 'prefix', 'suffix', 'prefixIcon', 'suffixIcon', 'helperError', 'counter', 'container']);
  dart.defineExtensionMethods(input_decorator._DecorationSlot, ['toString']);
  dart.defineLazy(input_decorator._DecorationSlot, {
    /*input_decorator._DecorationSlot.values*/get values() {
      return C[527] || CT.C527;
    },
    /*input_decorator._DecorationSlot.icon*/get icon() {
      return C[528] || CT.C528;
    },
    /*input_decorator._DecorationSlot.input*/get input() {
      return C[529] || CT.C529;
    },
    /*input_decorator._DecorationSlot.label*/get label() {
      return C[530] || CT.C530;
    },
    /*input_decorator._DecorationSlot.hint*/get hint() {
      return C[531] || CT.C531;
    },
    /*input_decorator._DecorationSlot.prefix*/get prefix() {
      return C[532] || CT.C532;
    },
    /*input_decorator._DecorationSlot.suffix*/get suffix() {
      return C[533] || CT.C533;
    },
    /*input_decorator._DecorationSlot.prefixIcon*/get prefixIcon() {
      return C[534] || CT.C534;
    },
    /*input_decorator._DecorationSlot.suffixIcon*/get suffixIcon() {
      return C[535] || CT.C535;
    },
    /*input_decorator._DecorationSlot.helperError*/get helperError() {
      return C[536] || CT.C536;
    },
    /*input_decorator._DecorationSlot.counter*/get counter() {
      return C[537] || CT.C537;
    },
    /*input_decorator._DecorationSlot.container*/get container() {
      return C[538] || CT.C538;
    }
  }, false);
  input_decorator._Decoration = class _Decoration extends core.Object {
    get contentPadding() {
      return this[S$.contentPadding];
    }
    set contentPadding(value) {
      super.contentPadding = value;
    }
    get isCollapsed() {
      return this[S$.isCollapsed];
    }
    set isCollapsed(value) {
      super.isCollapsed = value;
    }
    get floatingLabelHeight() {
      return this[S$.floatingLabelHeight];
    }
    set floatingLabelHeight(value) {
      super.floatingLabelHeight = value;
    }
    get floatingLabelProgress() {
      return this[S$.floatingLabelProgress];
    }
    set floatingLabelProgress(value) {
      super.floatingLabelProgress = value;
    }
    get floatingLabelAlignment() {
      return this[S$.floatingLabelAlignment];
    }
    set floatingLabelAlignment(value) {
      super.floatingLabelAlignment = value;
    }
    get border() {
      return this[S$.border$1];
    }
    set border(value) {
      super.border = value;
    }
    get borderGap() {
      return this[S$.borderGap];
    }
    set borderGap(value) {
      super.borderGap = value;
    }
    get alignLabelWithHint() {
      return this[S$.alignLabelWithHint];
    }
    set alignLabelWithHint(value) {
      super.alignLabelWithHint = value;
    }
    get isDense() {
      return this[S$.isDense];
    }
    set isDense(value) {
      super.isDense = value;
    }
    get visualDensity() {
      return this[S$.visualDensity$3];
    }
    set visualDensity(value) {
      super.visualDensity = value;
    }
    get icon() {
      return this[S$.icon$6];
    }
    set icon(value) {
      super.icon = value;
    }
    get input() {
      return this[S$.input];
    }
    set input(value) {
      super.input = value;
    }
    get label() {
      return this[S$.label$6];
    }
    set label(value) {
      super.label = value;
    }
    get hint() {
      return this[S$.hint];
    }
    set hint(value) {
      super.hint = value;
    }
    get prefix() {
      return this[S$.prefix];
    }
    set prefix(value) {
      super.prefix = value;
    }
    get suffix() {
      return this[S$.suffix];
    }
    set suffix(value) {
      super.suffix = value;
    }
    get prefixIcon() {
      return this[S$.prefixIcon];
    }
    set prefixIcon(value) {
      super.prefixIcon = value;
    }
    get suffixIcon() {
      return this[S$.suffixIcon];
    }
    set suffixIcon(value) {
      super.suffixIcon = value;
    }
    get helperError() {
      return this[S$.helperError];
    }
    set helperError(value) {
      super.helperError = value;
    }
    get counter() {
      return this[S$.counter];
    }
    set counter(value) {
      super.counter = value;
    }
    get container() {
      return this[S$.container];
    }
    set container(value) {
      super.container = value;
    }
    static ['_#new#tearOff'](opts) {
      let contentPadding = opts && 'contentPadding' in opts ? opts.contentPadding : null;
      let isCollapsed = opts && 'isCollapsed' in opts ? opts.isCollapsed : null;
      let floatingLabelHeight = opts && 'floatingLabelHeight' in opts ? opts.floatingLabelHeight : null;
      let floatingLabelProgress = opts && 'floatingLabelProgress' in opts ? opts.floatingLabelProgress : null;
      let floatingLabelAlignment = opts && 'floatingLabelAlignment' in opts ? opts.floatingLabelAlignment : null;
      let border = opts && 'border' in opts ? opts.border : null;
      let borderGap = opts && 'borderGap' in opts ? opts.borderGap : null;
      let alignLabelWithHint = opts && 'alignLabelWithHint' in opts ? opts.alignLabelWithHint : null;
      let isDense = opts && 'isDense' in opts ? opts.isDense : null;
      let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
      let icon = opts && 'icon' in opts ? opts.icon : null;
      let input = opts && 'input' in opts ? opts.input : null;
      let label = opts && 'label' in opts ? opts.label : null;
      let hint = opts && 'hint' in opts ? opts.hint : null;
      let prefix = opts && 'prefix' in opts ? opts.prefix : null;
      let suffix = opts && 'suffix' in opts ? opts.suffix : null;
      let prefixIcon = opts && 'prefixIcon' in opts ? opts.prefixIcon : null;
      let suffixIcon = opts && 'suffixIcon' in opts ? opts.suffixIcon : null;
      let helperError = opts && 'helperError' in opts ? opts.helperError : null;
      let counter = opts && 'counter' in opts ? opts.counter : null;
      let container = opts && 'container' in opts ? opts.container : null;
      return new input_decorator._Decoration.new({contentPadding: contentPadding, isCollapsed: isCollapsed, floatingLabelHeight: floatingLabelHeight, floatingLabelProgress: floatingLabelProgress, floatingLabelAlignment: floatingLabelAlignment, border: border, borderGap: borderGap, alignLabelWithHint: alignLabelWithHint, isDense: isDense, visualDensity: visualDensity, icon: icon, input: input, label: label, hint: hint, prefix: prefix, suffix: suffix, prefixIcon: prefixIcon, suffixIcon: suffixIcon, helperError: helperError, counter: counter, container: container});
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      if (!other[S.$runtimeType]._equals(this[S.$runtimeType])) {
        return false;
      }
      return input_decorator._Decoration.is(other) && other.contentPadding._equals(this.contentPadding) && other.isCollapsed === this.isCollapsed && other.floatingLabelHeight === this.floatingLabelHeight && other.floatingLabelProgress === this.floatingLabelProgress && other.floatingLabelAlignment._equals(this.floatingLabelAlignment) && other.border[S.$_equals](this.border) && other.borderGap._equals(this.borderGap) && other.alignLabelWithHint === this.alignLabelWithHint && other.isDense == this.isDense && other.visualDensity._equals(this.visualDensity) && dart.equals(other.icon, this.icon) && dart.equals(other.input, this.input) && dart.equals(other.label, this.label) && dart.equals(other.hint, this.hint) && dart.equals(other.prefix, this.prefix) && dart.equals(other.suffix, this.suffix) && dart.equals(other.prefixIcon, this.prefixIcon) && dart.equals(other.suffixIcon, this.suffixIcon) && dart.equals(other.helperError, this.helperError) && dart.equals(other.counter, this.counter) && dart.equals(other.container, this.container);
    }
    get hashCode() {
      return core.Object.hash(this.contentPadding, this.floatingLabelHeight, this.floatingLabelProgress, this.floatingLabelAlignment, this.border, this.borderGap, this.alignLabelWithHint, this.isDense, this.visualDensity, this.icon, this.input, this.label, this.hint, this.prefix, this.suffix, this.prefixIcon, this.suffixIcon, this.helperError, this.counter, this.container);
    }
  };
  (input_decorator._Decoration.new = function(opts) {
    let contentPadding = opts && 'contentPadding' in opts ? opts.contentPadding : null;
    let isCollapsed = opts && 'isCollapsed' in opts ? opts.isCollapsed : null;
    let floatingLabelHeight = opts && 'floatingLabelHeight' in opts ? opts.floatingLabelHeight : null;
    let floatingLabelProgress = opts && 'floatingLabelProgress' in opts ? opts.floatingLabelProgress : null;
    let floatingLabelAlignment = opts && 'floatingLabelAlignment' in opts ? opts.floatingLabelAlignment : null;
    let border = opts && 'border' in opts ? opts.border : null;
    let borderGap = opts && 'borderGap' in opts ? opts.borderGap : null;
    let alignLabelWithHint = opts && 'alignLabelWithHint' in opts ? opts.alignLabelWithHint : null;
    let isDense = opts && 'isDense' in opts ? opts.isDense : null;
    let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
    let icon = opts && 'icon' in opts ? opts.icon : null;
    let input = opts && 'input' in opts ? opts.input : null;
    let label = opts && 'label' in opts ? opts.label : null;
    let hint = opts && 'hint' in opts ? opts.hint : null;
    let prefix = opts && 'prefix' in opts ? opts.prefix : null;
    let suffix = opts && 'suffix' in opts ? opts.suffix : null;
    let prefixIcon = opts && 'prefixIcon' in opts ? opts.prefixIcon : null;
    let suffixIcon = opts && 'suffixIcon' in opts ? opts.suffixIcon : null;
    let helperError = opts && 'helperError' in opts ? opts.helperError : null;
    let counter = opts && 'counter' in opts ? opts.counter : null;
    let container = opts && 'container' in opts ? opts.container : null;
    this[S$.contentPadding] = contentPadding;
    this[S$.isCollapsed] = isCollapsed;
    this[S$.floatingLabelHeight] = floatingLabelHeight;
    this[S$.floatingLabelProgress] = floatingLabelProgress;
    this[S$.floatingLabelAlignment] = floatingLabelAlignment;
    this[S$.border$1] = border;
    this[S$.borderGap] = borderGap;
    this[S$.alignLabelWithHint] = alignLabelWithHint;
    this[S$.isDense] = isDense;
    this[S$.visualDensity$3] = visualDensity;
    this[S$.icon$6] = icon;
    this[S$.input] = input;
    this[S$.label$6] = label;
    this[S$.hint] = hint;
    this[S$.prefix] = prefix;
    this[S$.suffix] = suffix;
    this[S$.prefixIcon] = prefixIcon;
    this[S$.suffixIcon] = suffixIcon;
    this[S$.helperError] = helperError;
    this[S$.counter] = counter;
    this[S$.container] = container;
    if (!(contentPadding !== null)) dart.assertFailed(null, I[57], 586, 15, "contentPadding != null");
    if (!(isCollapsed !== null)) dart.assertFailed(null, I[57], 587, 15, "isCollapsed != null");
    if (!(floatingLabelHeight !== null)) dart.assertFailed(null, I[57], 588, 15, "floatingLabelHeight != null");
    if (!(floatingLabelProgress !== null)) dart.assertFailed(null, I[57], 589, 15, "floatingLabelProgress != null");
    if (!(floatingLabelAlignment !== null)) dart.assertFailed(null, I[57], 590, 15, "floatingLabelAlignment != null");
    ;
  }).prototype = input_decorator._Decoration.prototype;
  dart.addTypeTests(input_decorator._Decoration);
  dart.addTypeCaches(input_decorator._Decoration);
  dart.setLibraryUri(input_decorator._Decoration, I[56]);
  dart.setFieldSignature(input_decorator._Decoration, () => ({
    __proto__: dart.getFields(input_decorator._Decoration.__proto__),
    contentPadding: dart.finalFieldType(edge_insets.EdgeInsetsGeometry),
    isCollapsed: dart.finalFieldType(core.bool),
    floatingLabelHeight: dart.finalFieldType(core.double),
    floatingLabelProgress: dart.finalFieldType(core.double),
    floatingLabelAlignment: dart.finalFieldType(input_decorator.FloatingLabelAlignment),
    border: dart.finalFieldType(input_border.InputBorder),
    borderGap: dart.finalFieldType(input_decorator._InputBorderGap),
    alignLabelWithHint: dart.finalFieldType(core.bool),
    isDense: dart.finalFieldType(dart.nullable(core.bool)),
    visualDensity: dart.finalFieldType(theme_data.VisualDensity),
    icon: dart.finalFieldType(dart.nullable(framework.Widget)),
    input: dart.finalFieldType(dart.nullable(framework.Widget)),
    label: dart.finalFieldType(dart.nullable(framework.Widget)),
    hint: dart.finalFieldType(dart.nullable(framework.Widget)),
    prefix: dart.finalFieldType(dart.nullable(framework.Widget)),
    suffix: dart.finalFieldType(dart.nullable(framework.Widget)),
    prefixIcon: dart.finalFieldType(dart.nullable(framework.Widget)),
    suffixIcon: dart.finalFieldType(dart.nullable(framework.Widget)),
    helperError: dart.finalFieldType(dart.nullable(framework.Widget)),
    counter: dart.finalFieldType(dart.nullable(framework.Widget)),
    container: dart.finalFieldType(dart.nullable(framework.Widget))
  }));
  dart.defineExtensionMethods(input_decorator._Decoration, ['_equals']);
  dart.defineExtensionAccessors(input_decorator._Decoration, ['hashCode']);
  input_decorator._RenderDecorationLayout = class _RenderDecorationLayout extends core.Object {
    get boxToBaseline() {
      return this[S$.boxToBaseline];
    }
    set boxToBaseline(value) {
      super.boxToBaseline = value;
    }
    get inputBaseline() {
      return this[S$.inputBaseline];
    }
    set inputBaseline(value) {
      super.inputBaseline = value;
    }
    get outlineBaseline() {
      return this[S$.outlineBaseline];
    }
    set outlineBaseline(value) {
      super.outlineBaseline = value;
    }
    get subtextBaseline() {
      return this[S$.subtextBaseline];
    }
    set subtextBaseline(value) {
      super.subtextBaseline = value;
    }
    get containerHeight() {
      return this[S$.containerHeight];
    }
    set containerHeight(value) {
      super.containerHeight = value;
    }
    get subtextHeight() {
      return this[S$.subtextHeight];
    }
    set subtextHeight(value) {
      super.subtextHeight = value;
    }
    static ['_#new#tearOff'](opts) {
      let boxToBaseline = opts && 'boxToBaseline' in opts ? opts.boxToBaseline : null;
      let inputBaseline = opts && 'inputBaseline' in opts ? opts.inputBaseline : null;
      let outlineBaseline = opts && 'outlineBaseline' in opts ? opts.outlineBaseline : null;
      let subtextBaseline = opts && 'subtextBaseline' in opts ? opts.subtextBaseline : null;
      let containerHeight = opts && 'containerHeight' in opts ? opts.containerHeight : null;
      let subtextHeight = opts && 'subtextHeight' in opts ? opts.subtextHeight : null;
      return new input_decorator._RenderDecorationLayout.new({boxToBaseline: boxToBaseline, inputBaseline: inputBaseline, outlineBaseline: outlineBaseline, subtextBaseline: subtextBaseline, containerHeight: containerHeight, subtextHeight: subtextHeight});
    }
  };
  (input_decorator._RenderDecorationLayout.new = function(opts) {
    let boxToBaseline = opts && 'boxToBaseline' in opts ? opts.boxToBaseline : null;
    let inputBaseline = opts && 'inputBaseline' in opts ? opts.inputBaseline : null;
    let outlineBaseline = opts && 'outlineBaseline' in opts ? opts.outlineBaseline : null;
    let subtextBaseline = opts && 'subtextBaseline' in opts ? opts.subtextBaseline : null;
    let containerHeight = opts && 'containerHeight' in opts ? opts.containerHeight : null;
    let subtextHeight = opts && 'subtextHeight' in opts ? opts.subtextHeight : null;
    this[S$.boxToBaseline] = boxToBaseline;
    this[S$.inputBaseline] = inputBaseline;
    this[S$.outlineBaseline] = outlineBaseline;
    this[S$.subtextBaseline] = subtextBaseline;
    this[S$.containerHeight] = containerHeight;
    this[S$.subtextHeight] = subtextHeight;
    ;
  }).prototype = input_decorator._RenderDecorationLayout.prototype;
  dart.addTypeTests(input_decorator._RenderDecorationLayout);
  dart.addTypeCaches(input_decorator._RenderDecorationLayout);
  dart.setLibraryUri(input_decorator._RenderDecorationLayout, I[56]);
  dart.setFieldSignature(input_decorator._RenderDecorationLayout, () => ({
    __proto__: dart.getFields(input_decorator._RenderDecorationLayout.__proto__),
    boxToBaseline: dart.finalFieldType(core.Map$(dart.nullable(box$.RenderBox), core.double)),
    inputBaseline: dart.finalFieldType(core.double),
    outlineBaseline: dart.finalFieldType(core.double),
    subtextBaseline: dart.finalFieldType(core.double),
    containerHeight: dart.finalFieldType(core.double),
    subtextHeight: dart.finalFieldType(core.double)
  }));
  const RenderBox_SlottedContainerRenderObjectMixin$36 = class RenderBox_SlottedContainerRenderObjectMixin extends box$.RenderBox {};
  (RenderBox_SlottedContainerRenderObjectMixin$36.new = function() {
    slotted_render_object_widget.SlottedContainerRenderObjectMixin$(input_decorator._DecorationSlot)[dart.mixinNew].call(this);
    RenderBox_SlottedContainerRenderObjectMixin$36.__proto__.new.call(this);
  }).prototype = RenderBox_SlottedContainerRenderObjectMixin$36.prototype;
  dart.applyMixin(RenderBox_SlottedContainerRenderObjectMixin$36, slotted_render_object_widget.SlottedContainerRenderObjectMixin$(input_decorator._DecorationSlot));
  input_decorator._RenderDecoration = class _RenderDecoration extends RenderBox_SlottedContainerRenderObjectMixin$36 {
    static ['_#new#tearOff'](opts) {
      let decoration = opts && 'decoration' in opts ? opts.decoration : null;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : null;
      let isFocused = opts && 'isFocused' in opts ? opts.isFocused : null;
      let expands = opts && 'expands' in opts ? opts.expands : null;
      let textAlignVertical = opts && 'textAlignVertical' in opts ? opts.textAlignVertical : null;
      return new input_decorator._RenderDecoration.new({decoration: decoration, textDirection: textDirection, textBaseline: textBaseline, isFocused: isFocused, expands: expands, textAlignVertical: textAlignVertical});
    }
    get icon() {
      return this.childForSlot(input_decorator._DecorationSlot.icon);
    }
    get input() {
      return this.childForSlot(input_decorator._DecorationSlot.input);
    }
    get label() {
      return this.childForSlot(input_decorator._DecorationSlot.label);
    }
    get hint() {
      return this.childForSlot(input_decorator._DecorationSlot.hint);
    }
    get prefix() {
      return this.childForSlot(input_decorator._DecorationSlot.prefix);
    }
    get suffix() {
      return this.childForSlot(input_decorator._DecorationSlot.suffix);
    }
    get prefixIcon() {
      return this.childForSlot(input_decorator._DecorationSlot.prefixIcon);
    }
    get suffixIcon() {
      return this.childForSlot(input_decorator._DecorationSlot.suffixIcon);
    }
    get helperError() {
      return this.childForSlot(input_decorator._DecorationSlot.helperError);
    }
    get counter() {
      return this.childForSlot(input_decorator._DecorationSlot.counter);
    }
    get container() {
      return this.childForSlot(input_decorator._DecorationSlot.container);
    }
    get children() {
      return (() => {
        let t41 = T$.JSArrayOfRenderBox().of([]);
        if (this.icon != null) t41.push(dart.nullCheck(this.icon));
        if (this.input != null) t41.push(dart.nullCheck(this.input));
        if (this.prefixIcon != null) t41.push(dart.nullCheck(this.prefixIcon));
        if (this.suffixIcon != null) t41.push(dart.nullCheck(this.suffixIcon));
        if (this.prefix != null) t41.push(dart.nullCheck(this.prefix));
        if (this.suffix != null) t41.push(dart.nullCheck(this.suffix));
        if (this.label != null) t41.push(dart.nullCheck(this.label));
        if (this.hint != null) t41.push(dart.nullCheck(this.hint));
        if (this.helperError != null) t41.push(dart.nullCheck(this.helperError));
        if (this.counter != null) t41.push(dart.nullCheck(this.counter));
        if (this.container != null) t41.push(dart.nullCheck(this.container));
        return t41;
      })();
    }
    get decoration() {
      return this[S$._decoration];
    }
    set decoration(value) {
      if (!(value !== null)) dart.assertFailed(null, I[57], 758, 12, "value != null");
      if (this[S$._decoration]._equals(value)) {
        return;
      }
      this[S$._decoration] = value;
      this.markNeedsLayout();
    }
    get textDirection() {
      return this[S$._textDirection];
    }
    set textDirection(value) {
      if (!(value !== null)) dart.assertFailed(null, I[57], 769, 12, "value != null");
      if (this[S$._textDirection] === value) {
        return;
      }
      this[S$._textDirection] = value;
      this.markNeedsLayout();
    }
    get textBaseline() {
      return this[S$._textBaseline];
    }
    set textBaseline(value) {
      if (!(value !== null)) dart.assertFailed(null, I[57], 780, 12, "value != null");
      if (this[S$._textBaseline] === value) {
        return;
      }
      this[S$._textBaseline] = value;
      this.markNeedsLayout();
    }
    get [S$._defaultTextAlignVertical]() {
      return this[S$._isOutlineAligned] ? alignment.TextAlignVertical.center : alignment.TextAlignVertical.top;
    }
    get textAlignVertical() {
      let t42;
      t42 = this[S$._textAlignVertical];
      return t42 == null ? this[S$._defaultTextAlignVertical] : t42;
    }
    set textAlignVertical(value) {
      let t42, t42$;
      if (dart.equals(this[S$._textAlignVertical], value)) {
        return;
      }
      if (this.textAlignVertical.y === (t42$ = (t42 = value, t42 == null ? null : t42.y), t42$ == null ? this[S$._defaultTextAlignVertical].y : t42$)) {
        this[S$._textAlignVertical] = value;
        return;
      }
      this[S$._textAlignVertical] = value;
      this.markNeedsLayout();
    }
    get isFocused() {
      return this[S$._isFocused];
    }
    set isFocused(value) {
      if (!(value !== null)) dart.assertFailed(null, I[57], 809, 12, "value != null");
      if (this[S$._isFocused] === value) {
        return;
      }
      this[S$._isFocused] = value;
      this.markNeedsSemanticsUpdate();
    }
    get expands() {
      return this[S$._expands];
    }
    set expands(value) {
      if (!(value !== null)) dart.assertFailed(null, I[57], 820, 12, "value != null");
      if (this[S$._expands] === value) {
        return;
      }
      this[S$._expands] = value;
      this.markNeedsLayout();
    }
    get [S$._isOutlineAligned]() {
      return !this.decoration.isCollapsed && this.decoration.border.isOutline;
    }
    visitChildrenForSemantics(visitor) {
      if (this.icon != null) {
        visitor(dart.nullCheck(this.icon));
      }
      if (this.prefix != null) {
        visitor(dart.nullCheck(this.prefix));
      }
      if (this.prefixIcon != null) {
        visitor(dart.nullCheck(this.prefixIcon));
      }
      if (this.label != null) {
        visitor(dart.nullCheck(this.label));
      }
      if (this.hint != null) {
        if (this.isFocused) {
          visitor(dart.nullCheck(this.hint));
        } else if (this.label == null) {
          visitor(dart.nullCheck(this.hint));
        }
      }
      if (this.input != null) {
        visitor(dart.nullCheck(this.input));
      }
      if (this.suffixIcon != null) {
        visitor(dart.nullCheck(this.suffixIcon));
      }
      if (this.suffix != null) {
        visitor(dart.nullCheck(this.suffix));
      }
      if (this.container != null) {
        visitor(dart.nullCheck(this.container));
      }
      if (this.helperError != null) {
        visitor(dart.nullCheck(this.helperError));
      }
      if (this.counter != null) {
        visitor(dart.nullCheck(this.counter));
      }
    }
    get sizedByParent() {
      return false;
    }
    static _minWidth(box, height) {
      return box == null ? 0.0 : box.getMinIntrinsicWidth(height);
    }
    static _maxWidth(box, height) {
      return box == null ? 0.0 : box.getMaxIntrinsicWidth(height);
    }
    static _minHeight(box, width) {
      return box == null ? 0.0 : box.getMinIntrinsicHeight(width);
    }
    static _boxSize(box) {
      return box == null ? ui.Size.zero : box.size;
    }
    static _boxParentData(box) {
      return box$.BoxParentData.as(dart.nullCheck(box.parentData));
    }
    get contentPadding() {
      return edge_insets.EdgeInsets.as(this.decoration.contentPadding);
    }
    [S$._layoutLineBox](box, constraints) {
      if (box == null) {
        return 0.0;
      }
      box.layout(constraints, {parentUsesSize: true});
      let baseline = dart.nullCheck(box.getDistanceToBaseline(ui.TextBaseline.alphabetic));
      if (!dart.fn(() => {
        if (baseline >= 0) {
          return true;
        }
        dart.throw(new assertions.FlutterError.fromParts(T$.JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("One of InputDecorator's children reported a negative baseline offset."), new assertions.ErrorDescription.new(dart.str(dart.runtimeType(box)) + ", of size " + dart.str(box.size) + ", reported a negative " + "alphabetic baseline of " + dart.str(baseline) + ".")])));
      }, T$.VoidTobool())()) dart.assertFailed(null, I[57], 912, 12, "() {\n      if (baseline >= 0) {\n        return true;\n      }\n      throw FlutterError.fromParts(<DiagnosticsNode>[\n        ErrorSummary(\"One of InputDecorator's children reported a negative baseline offset.\"),\n        ErrorDescription(\n          '${box.runtimeType}, of size ${box.size}, reported a negative '\n          'alphabetic baseline of $baseline.',\n        ),\n      ]);\n    }()");
      return baseline;
    }
    [S$._layout](layoutConstraints) {
      let t42, t42$, t42$0, t42$1, t42$2, t42$3, t42$4, t42$5, t42$6, t42$7, t42$8, t42$9, t42$10;
      if (!(layoutConstraints.maxWidth < 1 / 0)) dart.assertFailed("An InputDecorator, which is typically created by a TextField, cannot " + "have an unbounded width.\n" + "This happens when the parent widget does not provide a finite width " + "constraint. For example, if the InputDecorator is contained by a Row, " + "then its width must be constrained. An Expanded widget or a SizedBox " + "can be used to constrain the width of the InputDecorator or the " + "TextField that contains it.", I[57], 932, 7, "layoutConstraints.maxWidth < double.infinity");
      let boxToBaseline = new (T$.LinkedMapOfRenderBoxN$double()).new();
      let boxConstraints = layoutConstraints.loosen();
      boxToBaseline[S.$_set](this.icon, this[S$._layoutLineBox](this.icon, boxConstraints));
      let containerConstraints = boxConstraints.copyWith({maxWidth: boxConstraints.maxWidth - input_decorator._RenderDecoration._boxSize(this.icon).width});
      boxToBaseline[S.$_set](this.prefixIcon, this[S$._layoutLineBox](this.prefixIcon, containerConstraints));
      boxToBaseline[S.$_set](this.suffixIcon, this[S$._layoutLineBox](this.suffixIcon, containerConstraints));
      let contentConstraints = containerConstraints.copyWith({maxWidth: containerConstraints.maxWidth - this.contentPadding.horizontal});
      boxToBaseline[S.$_set](this.prefix, this[S$._layoutLineBox](this.prefix, contentConstraints));
      boxToBaseline[S.$_set](this.suffix, this[S$._layoutLineBox](this.suffix, contentConstraints));
      let inputWidth = math.max(core.double, 0.0, this.constraints.maxWidth - (input_decorator._RenderDecoration._boxSize(this.icon).width + this.contentPadding.left + input_decorator._RenderDecoration._boxSize(this.prefixIcon).width + input_decorator._RenderDecoration._boxSize(this.prefix).width + input_decorator._RenderDecoration._boxSize(this.suffix).width + input_decorator._RenderDecoration._boxSize(this.suffixIcon).width + this.contentPadding.right));
      let invertedLabelScale = dart.nullCheck(ui.lerpDouble(1.0, 1 / 0.75, this.decoration.floatingLabelProgress));
      let suffixIconWidth = input_decorator._RenderDecoration._boxSize(this.suffixIcon).width;
      if (this.decoration.border.isOutline) {
        suffixIconWidth = dart.nullCheck(ui.lerpDouble(suffixIconWidth, 0.0, this.decoration.floatingLabelProgress));
      }
      let labelWidth = math.max(core.double, 0.0, this.constraints.maxWidth - (input_decorator._RenderDecoration._boxSize(this.icon).width + this.contentPadding.left + input_decorator._RenderDecoration._boxSize(this.prefixIcon).width + suffixIconWidth + this.contentPadding.right));
      boxToBaseline[S.$_set](this.label, this[S$._layoutLineBox](this.label, boxConstraints.copyWith({maxWidth: labelWidth * invertedLabelScale})));
      boxToBaseline[S.$_set](this.hint, this[S$._layoutLineBox](this.hint, boxConstraints.copyWith({minWidth: inputWidth, maxWidth: inputWidth})));
      boxToBaseline[S.$_set](this.counter, this[S$._layoutLineBox](this.counter, contentConstraints));
      boxToBaseline[S.$_set](this.helperError, this[S$._layoutLineBox](this.helperError, contentConstraints.copyWith({maxWidth: math.max(core.double, 0.0, contentConstraints.maxWidth - input_decorator._RenderDecoration._boxSize(this.counter).width)})));
      let labelHeight = this.label == null ? 0.0 : this.decoration.floatingLabelHeight;
      let topHeight = this.decoration.border.isOutline ? math.max(core.double, labelHeight - dart.nullCheck(boxToBaseline[S.$_get](this.label)), 0.0) : labelHeight;
      let counterHeight = this.counter == null ? 0.0 : dart.nullCheck(boxToBaseline[S.$_get](this.counter)) + 8;
      let helperErrorExists = (t42 = this.helperError, t42 == null ? null : t42.size) != null && dart.nullCheck(this.helperError).size.height > 0;
      let helperErrorHeight = !helperErrorExists ? 0.0 : dart.nullCheck(this.helperError).size.height + 8;
      let bottomHeight = math.max(core.double, counterHeight, helperErrorHeight);
      let densityOffset = this.decoration.visualDensity.baseSizeAdjustment;
      boxToBaseline[S.$_set](this.input, this[S$._layoutLineBox](this.input, boxConstraints.deflate(new edge_insets.EdgeInsets.only({top: this.contentPadding.top + topHeight + densityOffset.dy / 2, bottom: this.contentPadding.bottom + bottomHeight + densityOffset.dy / 2})).copyWith({minWidth: inputWidth, maxWidth: inputWidth})));
      let hintHeight = (t42$0 = (t42$ = this.hint, t42$ == null ? null : t42$.size.height), t42$0 == null ? 0.0 : t42$0);
      let inputDirectHeight = (t42$2 = (t42$1 = this.input, t42$1 == null ? null : t42$1.size.height), t42$2 == null ? 0.0 : t42$2);
      let inputHeight = math.max(core.double, hintHeight, inputDirectHeight);
      let inputInternalBaseline = math.max(core.double, dart.nullCheck(boxToBaseline[S.$_get](this.input)), dart.nullCheck(boxToBaseline[S.$_get](this.hint)));
      let prefixHeight = (t42$4 = (t42$3 = this.prefix, t42$3 == null ? null : t42$3.size.height), t42$4 == null ? 0.0 : t42$4);
      let suffixHeight = (t42$6 = (t42$5 = this.suffix, t42$5 == null ? null : t42$5.size.height), t42$6 == null ? 0.0 : t42$6);
      let fixHeight = math.max(core.double, dart.nullCheck(boxToBaseline[S.$_get](this.prefix)), dart.nullCheck(boxToBaseline[S.$_get](this.suffix)));
      let fixAboveInput = math.max(core.double, 0.0, fixHeight - inputInternalBaseline);
      let fixBelowBaseline = math.max(core.double, prefixHeight - dart.nullCheck(boxToBaseline[S.$_get](this.prefix)), suffixHeight - dart.nullCheck(boxToBaseline[S.$_get](this.suffix)));
      let fixBelowInput = math.max(core.double, 0.0, fixBelowBaseline - (inputHeight - inputInternalBaseline));
      let prefixIconHeight = (t42$8 = (t42$7 = this.prefixIcon, t42$7 == null ? null : t42$7.size.height), t42$8 == null ? 0.0 : t42$8);
      let suffixIconHeight = (t42$10 = (t42$9 = this.suffixIcon, t42$9 == null ? null : t42$9.size.height), t42$10 == null ? 0.0 : t42$10);
      let fixIconHeight = math.max(core.double, prefixIconHeight, suffixIconHeight);
      let contentHeight = math.max(core.double, fixIconHeight, topHeight + this.contentPadding.top + fixAboveInput + inputHeight + fixBelowInput + this.contentPadding.bottom + densityOffset.dy);
      let minContainerHeight = dart.nullCheck(this.decoration.isDense) || this.decoration.isCollapsed || this.expands ? 0.0 : 48;
      let maxContainerHeight = boxConstraints.maxHeight - bottomHeight;
      let containerHeight = this.expands ? maxContainerHeight : math.min(core.double, math.max(core.double, contentHeight, minContainerHeight), maxContainerHeight);
      let interactiveAdjustment = minContainerHeight > contentHeight ? (minContainerHeight - contentHeight) / 2.0 : 0.0;
      let overflow = math.max(core.double, 0.0, contentHeight - maxContainerHeight);
      let textAlignVerticalFactor = (this.textAlignVertical.y + 1.0) / 2.0;
      let baselineAdjustment = fixAboveInput - overflow * (1 - textAlignVerticalFactor);
      let topInputBaseline = this.contentPadding.top + topHeight + inputInternalBaseline + baselineAdjustment + interactiveAdjustment;
      let maxContentHeight = containerHeight - this.contentPadding.top - topHeight - this.contentPadding.bottom;
      let alignableHeight = fixAboveInput + inputHeight + fixBelowInput;
      let maxVerticalOffset = maxContentHeight - alignableHeight;
      let textAlignVerticalOffset = maxVerticalOffset * textAlignVerticalFactor;
      let inputBaseline = topInputBaseline + textAlignVerticalOffset + densityOffset.dy / 2.0;
      let outlineCenterBaseline = inputInternalBaseline + baselineAdjustment / 2.0 + (containerHeight - (2.0 + inputHeight)) / 2.0;
      let outlineTopBaseline = topInputBaseline;
      let outlineBottomBaseline = topInputBaseline + maxVerticalOffset;
      let outlineBaseline = this[S$._interpolateThree](outlineTopBaseline, outlineCenterBaseline, outlineBottomBaseline, this.textAlignVertical);
      let subtextCounterBaseline = 0.0;
      let subtextHelperBaseline = 0.0;
      let subtextCounterHeight = 0.0;
      let subtextHelperHeight = 0.0;
      if (this.counter != null) {
        subtextCounterBaseline = containerHeight + 8 + dart.nullCheck(boxToBaseline[S.$_get](this.counter));
        subtextCounterHeight = dart.nullCheck(this.counter).size.height + 8;
      }
      if (helperErrorExists) {
        subtextHelperBaseline = containerHeight + 8 + dart.nullCheck(boxToBaseline[S.$_get](this.helperError));
        subtextHelperHeight = helperErrorHeight;
      }
      let subtextBaseline = math.max(core.double, subtextCounterBaseline, subtextHelperBaseline);
      let subtextHeight = math.max(core.double, subtextCounterHeight, subtextHelperHeight);
      return new input_decorator._RenderDecorationLayout.new({boxToBaseline: boxToBaseline, containerHeight: containerHeight, inputBaseline: inputBaseline, outlineBaseline: outlineBaseline, subtextBaseline: subtextBaseline, subtextHeight: subtextHeight});
    }
    [S$._interpolateThree](begin, middle, end, textAlignVertical) {
      if (textAlignVertical.y <= 0) {
        if (begin >= middle) {
          return middle;
        }
        let t = textAlignVertical.y + 1;
        return begin + (middle - begin) * t;
      }
      if (middle >= end) {
        return middle;
      }
      let t = textAlignVertical.y;
      return middle + (end - middle) * t;
    }
    computeMinIntrinsicWidth(height) {
      return input_decorator._RenderDecoration._minWidth(this.icon, height) + this.contentPadding.left + input_decorator._RenderDecoration._minWidth(this.prefixIcon, height) + input_decorator._RenderDecoration._minWidth(this.prefix, height) + math.max(core.num, input_decorator._RenderDecoration._minWidth(this.input, height), input_decorator._RenderDecoration._minWidth(this.hint, height)) + input_decorator._RenderDecoration._minWidth(this.suffix, height) + input_decorator._RenderDecoration._minWidth(this.suffixIcon, height) + this.contentPadding.right;
    }
    computeMaxIntrinsicWidth(height) {
      return input_decorator._RenderDecoration._maxWidth(this.icon, height) + this.contentPadding.left + input_decorator._RenderDecoration._maxWidth(this.prefixIcon, height) + input_decorator._RenderDecoration._maxWidth(this.prefix, height) + math.max(core.num, input_decorator._RenderDecoration._maxWidth(this.input, height), input_decorator._RenderDecoration._maxWidth(this.hint, height)) + input_decorator._RenderDecoration._maxWidth(this.suffix, height) + input_decorator._RenderDecoration._maxWidth(this.suffixIcon, height) + this.contentPadding.right;
    }
    [S$._lineHeight](width, boxes) {
      let height = 0.0;
      for (let box of boxes) {
        if (box == null) {
          continue;
        }
        height = math.max(core.double, input_decorator._RenderDecoration._minHeight(box, width), height);
      }
      return height;
    }
    computeMinIntrinsicHeight(width) {
      let iconHeight = input_decorator._RenderDecoration._minHeight(this.icon, width);
      let iconWidth = input_decorator._RenderDecoration._minWidth(this.icon, iconHeight);
      width = math.max(core.double, width - iconWidth, 0.0);
      let prefixIconHeight = input_decorator._RenderDecoration._minHeight(this.prefixIcon, width);
      let prefixIconWidth = input_decorator._RenderDecoration._minWidth(this.prefixIcon, prefixIconHeight);
      let suffixIconHeight = input_decorator._RenderDecoration._minHeight(this.suffixIcon, width);
      let suffixIconWidth = input_decorator._RenderDecoration._minWidth(this.suffixIcon, suffixIconHeight);
      width = math.max(core.double, width - this.contentPadding.horizontal, 0.0);
      let counterHeight = input_decorator._RenderDecoration._minHeight(this.counter, width);
      let counterWidth = input_decorator._RenderDecoration._minWidth(this.counter, counterHeight);
      let helperErrorAvailableWidth = math.max(core.double, width - counterWidth, 0.0);
      let helperErrorHeight = input_decorator._RenderDecoration._minHeight(this.helperError, helperErrorAvailableWidth);
      let subtextHeight = math.max(core.double, counterHeight, helperErrorHeight);
      if (subtextHeight > 0.0) {
        subtextHeight = subtextHeight + 8;
      }
      let prefixHeight = input_decorator._RenderDecoration._minHeight(this.prefix, width);
      let prefixWidth = input_decorator._RenderDecoration._minWidth(this.prefix, prefixHeight);
      let suffixHeight = input_decorator._RenderDecoration._minHeight(this.suffix, width);
      let suffixWidth = input_decorator._RenderDecoration._minWidth(this.suffix, suffixHeight);
      let availableInputWidth = math.max(core.double, width - prefixWidth - suffixWidth - prefixIconWidth - suffixIconWidth, 0.0);
      let inputHeight = this[S$._lineHeight](availableInputWidth, T$.JSArrayOfRenderBoxN().of([this.input, this.hint]));
      let inputMaxHeight = T$.JSArrayOfdouble().of([inputHeight, prefixHeight, suffixHeight])[S$.$reduce](C[539] || CT.C539);
      let densityOffset = this.decoration.visualDensity.baseSizeAdjustment;
      let contentHeight = this.contentPadding.top + (this.label == null ? 0.0 : this.decoration.floatingLabelHeight) + inputMaxHeight + this.contentPadding.bottom + densityOffset.dy;
      let containerHeight = T$.JSArrayOfdouble().of([iconHeight, contentHeight, prefixIconHeight, suffixIconHeight])[S$.$reduce](C[539] || CT.C539);
      let minContainerHeight = dart.nullCheck(this.decoration.isDense) || this.expands ? 0.0 : 48;
      return math.max(core.double, containerHeight, minContainerHeight) + subtextHeight;
    }
    computeMaxIntrinsicHeight(width) {
      return this.computeMinIntrinsicHeight(width);
    }
    computeDistanceToActualBaseline(baseline) {
      return input_decorator._RenderDecoration._boxParentData(dart.nullCheck(this.input)).offset.dy + dart.nullCheck(dart.nullCheck(this.input).computeDistanceToActualBaseline(baseline));
    }
    computeDryLayout(constraints) {
      if (!this.debugCannotComputeDryLayout({reason: "Layout requires baseline metrics, which are only available after a full layout."})) dart.assertFailed(null, I[57], 1307, 12, "debugCannotComputeDryLayout(\n      reason: 'Layout requires baseline metrics, which are only available after a full layout.',\n    )");
      return ui.Size.zero;
    }
    performLayout() {
      let constraints = this.constraints;
      this[S$._labelTransform] = null;
      let layout = this[S$._layout](constraints);
      let overallWidth = constraints.maxWidth;
      let overallHeight = layout.containerHeight + layout.subtextHeight;
      if (this.container != null) {
        let containerConstraints = new box$.BoxConstraints.tightFor({height: layout.containerHeight, width: overallWidth - input_decorator._RenderDecoration._boxSize(this.icon).width});
        dart.nullCheck(this.container).layout(containerConstraints, {parentUsesSize: true});
        let x = null;
        switch (this.textDirection) {
          case C[154] || CT.C154:
            {
              x = 0.0;
              break;
            }
          case C[155] || CT.C155:
            {
              x = input_decorator._RenderDecoration._boxSize(this.icon).width;
              break;
            }
        }
        input_decorator._RenderDecoration._boxParentData(dart.nullCheck(this.container)).offset = new ui.Offset.new(x, 0.0);
      }
      let height = null;
      function height$35get() {
        let t43;
        t43 = height;
        return t43 == null ? dart.throw(new _internal.LateError.localNI("height")) : t43;
      }
      dart.fn(height$35get, T$.VoidTodouble());
      function height$35set(height$35param) {
        return height = height$35param;
      }
      dart.fn(height$35set, T$.doubleTodynamic());
      function centerLayout(box, x) {
        input_decorator._RenderDecoration._boxParentData(box).offset = new ui.Offset.new(x, (height$35get() - box.size.height) / 2.0);
        return box.size.width;
      }
      dart.fn(centerLayout, T$.RenderBoxAnddoubleTodouble());
      let baseline = null;
      function baseline$35get() {
        let t46;
        t46 = baseline;
        return t46 == null ? dart.throw(new _internal.LateError.localNI("baseline")) : t46;
      }
      dart.fn(baseline$35get, T$.VoidTodouble());
      function baseline$35set(baseline$35param) {
        return baseline = baseline$35param;
      }
      dart.fn(baseline$35set, T$.doubleTodynamic());
      function baselineLayout(box, x) {
        input_decorator._RenderDecoration._boxParentData(box).offset = new ui.Offset.new(x, baseline$35get() - dart.nullCheck(layout.boxToBaseline[S.$_get](box)));
        return box.size.width;
      }
      dart.fn(baselineLayout, T$.RenderBoxAnddoubleTodouble());
      let left = this.contentPadding.left;
      let right = overallWidth - this.contentPadding.right;
      height$35set(layout.containerHeight);
      baseline$35set(this[S$._isOutlineAligned] ? layout.outlineBaseline : layout.inputBaseline);
      if (this.icon != null) {
        let x = null;
        switch (this.textDirection) {
          case C[154] || CT.C154:
            {
              x = overallWidth - dart.nullCheck(this.icon).size.width;
              break;
            }
          case C[155] || CT.C155:
            {
              x = 0.0;
              break;
            }
        }
        centerLayout(dart.nullCheck(this.icon), x);
      }
      switch (this.textDirection) {
        case C[154] || CT.C154:
          {
            {
              let start = right - input_decorator._RenderDecoration._boxSize(this.icon).width;
              let end = left;
              if (this.prefixIcon != null) {
                start = start + this.contentPadding.left;
                start = start - centerLayout(dart.nullCheck(this.prefixIcon), start - dart.nullCheck(this.prefixIcon).size.width);
              }
              if (this.label != null) {
                if (this.decoration.alignLabelWithHint) {
                  baselineLayout(dart.nullCheck(this.label), start - dart.nullCheck(this.label).size.width);
                } else {
                  centerLayout(dart.nullCheck(this.label), start - dart.nullCheck(this.label).size.width);
                }
              }
              if (this.prefix != null) {
                start = start - baselineLayout(dart.nullCheck(this.prefix), start - dart.nullCheck(this.prefix).size.width);
              }
              if (this.input != null) {
                baselineLayout(dart.nullCheck(this.input), start - dart.nullCheck(this.input).size.width);
              }
              if (this.hint != null) {
                baselineLayout(dart.nullCheck(this.hint), start - dart.nullCheck(this.hint).size.width);
              }
              if (this.suffixIcon != null) {
                end = end - this.contentPadding.left;
                end = end + centerLayout(dart.nullCheck(this.suffixIcon), end);
              }
              if (this.suffix != null) {
                end = end + baselineLayout(dart.nullCheck(this.suffix), end);
              }
              break;
            }
          }
        case C[155] || CT.C155:
          {
            {
              let start = left + input_decorator._RenderDecoration._boxSize(this.icon).width;
              let end = right;
              if (this.prefixIcon != null) {
                start = start - this.contentPadding.left;
                start = start + centerLayout(dart.nullCheck(this.prefixIcon), start);
              }
              if (this.label != null) {
                if (this.decoration.alignLabelWithHint) {
                  baselineLayout(dart.nullCheck(this.label), start);
                } else {
                  centerLayout(dart.nullCheck(this.label), start);
                }
              }
              if (this.prefix != null) {
                start = start + baselineLayout(dart.nullCheck(this.prefix), start);
              }
              if (this.input != null) {
                baselineLayout(dart.nullCheck(this.input), start);
              }
              if (this.hint != null) {
                baselineLayout(dart.nullCheck(this.hint), start);
              }
              if (this.suffixIcon != null) {
                end = end + this.contentPadding.right;
                end = end - centerLayout(dart.nullCheck(this.suffixIcon), end - dart.nullCheck(this.suffixIcon).size.width);
              }
              if (this.suffix != null) {
                end = end - baselineLayout(dart.nullCheck(this.suffix), end - dart.nullCheck(this.suffix).size.width);
              }
              break;
            }
          }
      }
      if (this.helperError != null || this.counter != null) {
        height$35set(layout.subtextHeight);
        baseline$35set(layout.subtextBaseline);
        switch (this.textDirection) {
          case C[154] || CT.C154:
            {
              if (this.helperError != null) {
                baselineLayout(dart.nullCheck(this.helperError), right - dart.nullCheck(this.helperError).size.width - input_decorator._RenderDecoration._boxSize(this.icon).width);
              }
              if (this.counter != null) {
                baselineLayout(dart.nullCheck(this.counter), left);
              }
              break;
            }
          case C[155] || CT.C155:
            {
              if (this.helperError != null) {
                baselineLayout(dart.nullCheck(this.helperError), left + input_decorator._RenderDecoration._boxSize(this.icon).width);
              }
              if (this.counter != null) {
                baselineLayout(dart.nullCheck(this.counter), right - dart.nullCheck(this.counter).size.width);
              }
              break;
            }
        }
      }
      if (this.label != null) {
        let labelX = input_decorator._RenderDecoration._boxParentData(dart.nullCheck(this.label)).offset.dx;
        let floatAlign = this.decoration.floatingLabelAlignment[S$._x$1] + 1;
        let floatWidth = input_decorator._RenderDecoration._boxSize(this.label).width * 0.75;
        switch (this.textDirection) {
          case C[154] || CT.C154:
            {
              this.decoration.borderGap.start = ui.lerpDouble(labelX + input_decorator._RenderDecoration._boxSize(this.label).width, input_decorator._RenderDecoration._boxSize(this.container).width / 2.0 + floatWidth / 2.0, floatAlign);
              break;
            }
          case C[155] || CT.C155:
            {
              this.decoration.borderGap.start = ui.lerpDouble(labelX - input_decorator._RenderDecoration._boxSize(this.icon).width, input_decorator._RenderDecoration._boxSize(this.container).width / 2.0 - floatWidth / 2.0, floatAlign);
              break;
            }
        }
        this.decoration.borderGap.extent = dart.nullCheck(this.label).size.width * 0.75;
      } else {
        this.decoration.borderGap.start = null;
        this.decoration.borderGap.extent = 0.0;
      }
      this.size = constraints.constrain(new ui.Size.new(overallWidth, overallHeight));
      if (!(this.size.width === constraints.constrainWidth(overallWidth))) dart.assertFailed(null, I[57], 1492, 12, "size.width == constraints.constrainWidth(overallWidth)");
      if (!(this.size.height === constraints.constrainHeight(overallHeight))) dart.assertFailed(null, I[57], 1493, 12, "size.height == constraints.constrainHeight(overallHeight)");
    }
    [S$._paintLabel](context, offset) {
      context.paintChild(dart.nullCheck(this.label), offset);
    }
    paint(context, offset) {
      let t48;
      function doPaint(child) {
        if (child != null) {
          context.paintChild(child, input_decorator._RenderDecoration._boxParentData(child).offset['+'](offset));
        }
      }
      dart.fn(doPaint, T$.RenderBoxNTovoid());
      doPaint(this.container);
      if (this.label != null) {
        let labelOffset = input_decorator._RenderDecoration._boxParentData(dart.nullCheck(this.label)).offset;
        let labelHeight = input_decorator._RenderDecoration._boxSize(this.label).height;
        let labelWidth = input_decorator._RenderDecoration._boxSize(this.label).width;
        let floatAlign = this.decoration.floatingLabelAlignment[S$._x$1] + 1;
        let floatWidth = labelWidth * 0.75;
        let borderWeight = this.decoration.border.borderSide.width;
        let t = this.decoration.floatingLabelProgress;
        let isOutlineBorder = this.decoration.border !== null && this.decoration.border.isOutline;
        let floatingY = isOutlineBorder ? -labelHeight * 0.75 / 2.0 + borderWeight / 2.0 : this.contentPadding.top;
        let scale = dart.nullCheck(ui.lerpDouble(1.0, 0.75, t));
        let centeredFloatX = input_decorator._RenderDecoration._boxParentData(dart.nullCheck(this.container)).offset.dx + input_decorator._RenderDecoration._boxSize(this.container).width / 2.0 - floatWidth / 2.0;
        let floatStartX = null;
        switch (this.textDirection) {
          case C[154] || CT.C154:
            {
              floatStartX = labelOffset.dx + labelWidth * (1.0 - scale);
              break;
            }
          case C[155] || CT.C155:
            {
              floatStartX = labelOffset.dx;
              break;
            }
        }
        let floatEndX = dart.nullCheck(ui.lerpDouble(floatStartX, centeredFloatX, floatAlign));
        let dx = dart.nullCheck(ui.lerpDouble(floatStartX, floatEndX, t));
        let dy = dart.nullCheck(ui.lerpDouble(0.0, floatingY - labelOffset.dy, t));
        this[S$._labelTransform] = (t48 = vector_math_64.Matrix4.identity(), (() => {
          t48.translate(dx, labelOffset.dy + dy);
          t48.scale(scale);
          return t48;
        })());
        this.layer = context.pushTransform(this.needsCompositing, offset, dart.nullCheck(this[S$._labelTransform]), dart.bind(this, S$._paintLabel), {oldLayer: T$.TransformLayerN().as(this.layer)});
      } else {
        this.layer = null;
      }
      doPaint(this.icon);
      doPaint(this.prefix);
      doPaint(this.suffix);
      doPaint(this.prefixIcon);
      doPaint(this.suffixIcon);
      doPaint(this.hint);
      doPaint(this.input);
      doPaint(this.helperError);
      doPaint(this.counter);
    }
    hitTestSelf(position) {
      return true;
    }
    hitTestChildren(result, opts) {
      let position = opts && 'position' in opts ? opts.position : null;
      if (!(position !== null)) dart.assertFailed(null, I[57], 1569, 12, "position != null");
      for (let child of this.children) {
        let offset = input_decorator._RenderDecoration._boxParentData(child).offset;
        let isHit = result.addWithPaintOffset({offset: offset, position: position, hitTest: dart.fn((result, transformed) => {
            if (!transformed._equals(position['-'](offset))) dart.assertFailed(null, I[57], 1577, 18, "transformed == position - offset");
            return child.hitTest(result, {position: transformed});
          }, T$.BoxHitTestResultAndOffsetTobool())});
        if (isHit) {
          return true;
        }
      }
      return false;
    }
    applyPaintTransform(child, transform) {
      let t48;
      object.RenderObject.as(child);
      if (child[S.$_equals](this.label) && this[S$._labelTransform] != null) {
        let labelOffset = input_decorator._RenderDecoration._boxParentData(dart.nullCheck(this.label)).offset;
        t48 = transform;
        (() => {
          t48.multiply(dart.nullCheck(this[S$._labelTransform]));
          t48.translate(-labelOffset.dx, -labelOffset.dy);
          return t48;
        })();
      }
      super.applyPaintTransform(child, transform);
    }
  };
  (input_decorator._RenderDecoration.new = function(opts) {
    let decoration = opts && 'decoration' in opts ? opts.decoration : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : null;
    let isFocused = opts && 'isFocused' in opts ? opts.isFocused : null;
    let expands = opts && 'expands' in opts ? opts.expands : null;
    let textAlignVertical = opts && 'textAlignVertical' in opts ? opts.textAlignVertical : null;
    this[S$._expands] = false;
    this[S$._labelTransform] = null;
    if (!(decoration !== null)) dart.assertFailed(null, I[57], 701, 15, "decoration != null");
    if (!(textDirection !== null)) dart.assertFailed(null, I[57], 702, 15, "textDirection != null");
    if (!(textBaseline !== null)) dart.assertFailed(null, I[57], 703, 15, "textBaseline != null");
    if (!(expands !== null)) dart.assertFailed(null, I[57], 704, 15, "expands != null");
    this[S$._decoration] = decoration;
    this[S$._textDirection] = textDirection;
    this[S$._textBaseline] = textBaseline;
    this[S$._textAlignVertical] = textAlignVertical;
    this[S$._isFocused] = isFocused;
    this[S$._expands] = expands;
    input_decorator._RenderDecoration.__proto__.new.call(this);
    ;
  }).prototype = input_decorator._RenderDecoration.prototype;
  dart.addTypeTests(input_decorator._RenderDecoration);
  dart.addTypeCaches(input_decorator._RenderDecoration);
  dart.setMethodSignature(input_decorator._RenderDecoration, () => ({
    __proto__: dart.getMethods(input_decorator._RenderDecoration.__proto__),
    [S$._layoutLineBox]: dart.fnType(core.double, [dart.nullable(box$.RenderBox), box$.BoxConstraints]),
    [S$._layout]: dart.fnType(input_decorator._RenderDecorationLayout, [box$.BoxConstraints]),
    [S$._interpolateThree]: dart.fnType(core.double, [core.double, core.double, core.double, alignment.TextAlignVertical]),
    [S$._lineHeight]: dart.fnType(core.double, [core.double, core.List$(dart.nullable(box$.RenderBox))]),
    computeDistanceToActualBaseline: dart.fnType(core.double, [ui.TextBaseline]),
    [S$._paintLabel]: dart.fnType(dart.void, [object.PaintingContext, ui.Offset])
  }));
  dart.setStaticMethodSignature(input_decorator._RenderDecoration, () => ['_minWidth', '_maxWidth', '_minHeight', '_boxSize', '_boxParentData']);
  dart.setGetterSignature(input_decorator._RenderDecoration, () => ({
    __proto__: dart.getGetters(input_decorator._RenderDecoration.__proto__),
    icon: dart.nullable(box$.RenderBox),
    input: dart.nullable(box$.RenderBox),
    label: dart.nullable(box$.RenderBox),
    hint: dart.nullable(box$.RenderBox),
    prefix: dart.nullable(box$.RenderBox),
    suffix: dart.nullable(box$.RenderBox),
    prefixIcon: dart.nullable(box$.RenderBox),
    suffixIcon: dart.nullable(box$.RenderBox),
    helperError: dart.nullable(box$.RenderBox),
    counter: dart.nullable(box$.RenderBox),
    container: dart.nullable(box$.RenderBox),
    decoration: input_decorator._Decoration,
    textDirection: ui.TextDirection,
    textBaseline: ui.TextBaseline,
    [S$._defaultTextAlignVertical]: alignment.TextAlignVertical,
    textAlignVertical: alignment.TextAlignVertical,
    isFocused: core.bool,
    expands: core.bool,
    [S$._isOutlineAligned]: core.bool,
    contentPadding: edge_insets.EdgeInsets
  }));
  dart.setSetterSignature(input_decorator._RenderDecoration, () => ({
    __proto__: dart.getSetters(input_decorator._RenderDecoration.__proto__),
    decoration: input_decorator._Decoration,
    textDirection: ui.TextDirection,
    textBaseline: ui.TextBaseline,
    textAlignVertical: dart.nullable(alignment.TextAlignVertical),
    isFocused: core.bool,
    expands: core.bool
  }));
  dart.setLibraryUri(input_decorator._RenderDecoration, I[56]);
  dart.setFieldSignature(input_decorator._RenderDecoration, () => ({
    __proto__: dart.getFields(input_decorator._RenderDecoration.__proto__),
    [S$._decoration]: dart.fieldType(input_decorator._Decoration),
    [S$._textDirection]: dart.fieldType(ui.TextDirection),
    [S$._textBaseline]: dart.fieldType(ui.TextBaseline),
    [S$._textAlignVertical]: dart.fieldType(dart.nullable(alignment.TextAlignVertical)),
    [S$._isFocused]: dart.fieldType(core.bool),
    [S$._expands]: dart.fieldType(core.bool),
    [S$._labelTransform]: dart.fieldType(dart.nullable(vector_math_64.Matrix4))
  }));
  dart.setStaticFieldSignature(input_decorator._RenderDecoration, () => ['subtextGap']);
  dart.defineLazy(input_decorator._RenderDecoration, {
    /*input_decorator._RenderDecoration.subtextGap*/get subtextGap() {
      return 8;
    }
  }, false);
  const RenderObjectWidget_SlottedMultiChildRenderObjectWidgetMixin$36 = class RenderObjectWidget_SlottedMultiChildRenderObjectWidgetMixin extends framework.RenderObjectWidget {
    updateRenderObject(context, renderObject) {
      T$.SlottedContainerRenderObjectMixinOf_DecorationSlot().as(renderObject);
      return super.updateRenderObject(context, renderObject);
    }
  };
  (RenderObjectWidget_SlottedMultiChildRenderObjectWidgetMixin$36.new = function(opts) {
    RenderObjectWidget_SlottedMultiChildRenderObjectWidgetMixin$36.__proto__.new.call(this, opts);
  }).prototype = RenderObjectWidget_SlottedMultiChildRenderObjectWidgetMixin$36.prototype;
  dart.applyMixin(RenderObjectWidget_SlottedMultiChildRenderObjectWidgetMixin$36, slotted_render_object_widget.SlottedMultiChildRenderObjectWidgetMixin$(input_decorator._DecorationSlot));
  input_decorator._Decorator = class _Decorator extends RenderObjectWidget_SlottedMultiChildRenderObjectWidgetMixin$36 {
    get decoration() {
      return this[S$.decoration];
    }
    set decoration(value) {
      super.decoration = value;
    }
    get textDirection() {
      return this[S$.textDirection];
    }
    set textDirection(value) {
      super.textDirection = value;
    }
    get textBaseline() {
      return this[S$.textBaseline];
    }
    set textBaseline(value) {
      super.textBaseline = value;
    }
    get textAlignVertical() {
      return this[S$.textAlignVertical];
    }
    set textAlignVertical(value) {
      super.textAlignVertical = value;
    }
    get isFocused() {
      return this[S$.isFocused];
    }
    set isFocused(value) {
      super.isFocused = value;
    }
    get expands() {
      return this[S$.expands];
    }
    set expands(value) {
      super.expands = value;
    }
    static ['_#new#tearOff'](opts) {
      let textAlignVertical = opts && 'textAlignVertical' in opts ? opts.textAlignVertical : null;
      let decoration = opts && 'decoration' in opts ? opts.decoration : null;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : null;
      let isFocused = opts && 'isFocused' in opts ? opts.isFocused : null;
      let expands = opts && 'expands' in opts ? opts.expands : null;
      return new input_decorator._Decorator.new({textAlignVertical: textAlignVertical, decoration: decoration, textDirection: textDirection, textBaseline: textBaseline, isFocused: isFocused, expands: expands, $creationLocationd_0dea112b090073317d4: C[541] || CT.C541});
    }
    get slots() {
      return input_decorator._DecorationSlot.values;
    }
    childForSlot(slot) {
      input_decorator._DecorationSlot.as(slot);
      switch (slot) {
        case C[528] || CT.C528:
          {
            return this.decoration.icon;
          }
        case C[529] || CT.C529:
          {
            return this.decoration.input;
          }
        case C[530] || CT.C530:
          {
            return this.decoration.label;
          }
        case C[531] || CT.C531:
          {
            return this.decoration.hint;
          }
        case C[532] || CT.C532:
          {
            return this.decoration.prefix;
          }
        case C[533] || CT.C533:
          {
            return this.decoration.suffix;
          }
        case C[534] || CT.C534:
          {
            return this.decoration.prefixIcon;
          }
        case C[535] || CT.C535:
          {
            return this.decoration.suffixIcon;
          }
        case C[536] || CT.C536:
          {
            return this.decoration.helperError;
          }
        case C[537] || CT.C537:
          {
            return this.decoration.counter;
          }
        case C[538] || CT.C538:
          {
            return this.decoration.container;
          }
      }
    }
    createRenderObject(context) {
      return new input_decorator._RenderDecoration.new({decoration: this.decoration, textDirection: this.textDirection, textBaseline: this.textBaseline, textAlignVertical: this.textAlignVertical, isFocused: this.isFocused, expands: this.expands});
    }
    updateRenderObject(context, renderObject) {
      let t48;
      input_decorator._RenderDecoration.as(renderObject);
      t48 = renderObject;
      (() => {
        t48.decoration = this.decoration;
        t48.expands = this.expands;
        t48.isFocused = this.isFocused;
        t48.textAlignVertical = this.textAlignVertical;
        t48.textBaseline = this.textBaseline;
        t48.textDirection = this.textDirection;
        return t48;
      })();
    }
  };
  (input_decorator._Decorator.new = function(opts) {
    let textAlignVertical = opts && 'textAlignVertical' in opts ? opts.textAlignVertical : null;
    let decoration = opts && 'decoration' in opts ? opts.decoration : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let textBaseline = opts && 'textBaseline' in opts ? opts.textBaseline : null;
    let isFocused = opts && 'isFocused' in opts ? opts.isFocused : null;
    let expands = opts && 'expands' in opts ? opts.expands : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.textAlignVertical] = textAlignVertical;
    this[S$.decoration] = decoration;
    this[S$.textDirection] = textDirection;
    this[S$.textBaseline] = textBaseline;
    this[S$.isFocused] = isFocused;
    this[S$.expands] = expands;
    if (!(decoration !== null)) dart.assertFailed(null, I[57], 1608, 15, "decoration != null");
    if (!(textDirection !== null)) dart.assertFailed(null, I[57], 1609, 15, "textDirection != null");
    if (!(textBaseline !== null)) dart.assertFailed(null, I[57], 1610, 15, "textBaseline != null");
    if (!(expands !== null)) dart.assertFailed(null, I[57], 1611, 15, "expands != null");
    input_decorator._Decorator.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = input_decorator._Decorator.prototype;
  dart.addTypeTests(input_decorator._Decorator);
  dart.addTypeCaches(input_decorator._Decorator);
  dart.setMethodSignature(input_decorator._Decorator, () => ({
    __proto__: dart.getMethods(input_decorator._Decorator.__proto__),
    childForSlot: dart.fnType(dart.nullable(framework.Widget), [dart.nullable(core.Object)]),
    createRenderObject: dart.fnType(input_decorator._RenderDecoration, [framework.BuildContext])
  }));
  dart.setGetterSignature(input_decorator._Decorator, () => ({
    __proto__: dart.getGetters(input_decorator._Decorator.__proto__),
    slots: core.Iterable$(input_decorator._DecorationSlot)
  }));
  dart.setLibraryUri(input_decorator._Decorator, I[56]);
  dart.setFieldSignature(input_decorator._Decorator, () => ({
    __proto__: dart.getFields(input_decorator._Decorator.__proto__),
    decoration: dart.finalFieldType(input_decorator._Decoration),
    textDirection: dart.finalFieldType(ui.TextDirection),
    textBaseline: dart.finalFieldType(ui.TextBaseline),
    textAlignVertical: dart.finalFieldType(dart.nullable(alignment.TextAlignVertical)),
    isFocused: dart.finalFieldType(core.bool),
    expands: dart.finalFieldType(core.bool)
  }));
  input_decorator._AffixText = class _AffixText extends framework.StatelessWidget {
    get labelIsFloating() {
      return this[S$.labelIsFloating];
    }
    set labelIsFloating(value) {
      super.labelIsFloating = value;
    }
    get text() {
      return this[S$.text$1];
    }
    set text(value) {
      super.text = value;
    }
    get style() {
      return this[S$.style$5];
    }
    set style(value) {
      super.style = value;
    }
    get child() {
      return this[S$.child$15];
    }
    set child(value) {
      super.child = value;
    }
    static ['_#new#tearOff'](opts) {
      let labelIsFloating = opts && 'labelIsFloating' in opts ? opts.labelIsFloating : null;
      let text = opts && 'text' in opts ? opts.text : null;
      let style = opts && 'style' in opts ? opts.style : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new input_decorator._AffixText.new({labelIsFloating: labelIsFloating, text: text, style: style, child: child, $creationLocationd_0dea112b090073317d4: C[542] || CT.C542});
    }
    build(context) {
      let t48;
      return text$.DefaultTextStyle.merge({style: this.style, child: new implicit_animations.AnimatedOpacity.new({duration: input_decorator._kTransitionDuration, curve: input_decorator._kTransitionCurve, opacity: this.labelIsFloating ? 1.0 : 0.0, child: (t48 = this.child, t48 == null ? this.text == null ? null : new text$.Text.new(dart.nullCheck(this.text), {style: this.style, $creationLocationd_0dea112b090073317d4: C[543] || CT.C543}) : t48), $creationLocationd_0dea112b090073317d4: C[544] || CT.C544})});
    }
  };
  (input_decorator._AffixText.new = function(opts) {
    let labelIsFloating = opts && 'labelIsFloating' in opts ? opts.labelIsFloating : null;
    let text = opts && 'text' in opts ? opts.text : null;
    let style = opts && 'style' in opts ? opts.style : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.labelIsFloating] = labelIsFloating;
    this[S$.text$1] = text;
    this[S$.style$5] = style;
    this[S$.child$15] = child;
    input_decorator._AffixText.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = input_decorator._AffixText.prototype;
  dart.addTypeTests(input_decorator._AffixText);
  dart.addTypeCaches(input_decorator._AffixText);
  dart.setMethodSignature(input_decorator._AffixText, () => ({
    __proto__: dart.getMethods(input_decorator._AffixText.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(input_decorator._AffixText, I[56]);
  dart.setFieldSignature(input_decorator._AffixText, () => ({
    __proto__: dart.getFields(input_decorator._AffixText.__proto__),
    labelIsFloating: dart.finalFieldType(core.bool),
    text: dart.finalFieldType(dart.nullable(core.String)),
    style: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    child: dart.finalFieldType(dart.nullable(framework.Widget))
  }));
  input_decorator.InputDecorator = class InputDecorator extends framework.StatefulWidget {
    get decoration() {
      return this[S$.decoration$1];
    }
    set decoration(value) {
      super.decoration = value;
    }
    get baseStyle() {
      return this[S$.baseStyle];
    }
    set baseStyle(value) {
      super.baseStyle = value;
    }
    get textAlign() {
      return this[S$.textAlign$1];
    }
    set textAlign(value) {
      super.textAlign = value;
    }
    get textAlignVertical() {
      return this[S$.textAlignVertical$1];
    }
    set textAlignVertical(value) {
      super.textAlignVertical = value;
    }
    get isFocused() {
      return this[S$.isFocused$1];
    }
    set isFocused(value) {
      super.isFocused = value;
    }
    get isHovering() {
      return this[S$.isHovering$1];
    }
    set isHovering(value) {
      super.isHovering = value;
    }
    get expands() {
      return this[S$.expands$1];
    }
    set expands(value) {
      super.expands = value;
    }
    get isEmpty() {
      return this[S$.isEmpty];
    }
    set isEmpty(value) {
      super.isEmpty = value;
    }
    get child() {
      return this[S$.child$16];
    }
    set child(value) {
      super.child = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let decoration = opts && 'decoration' in opts ? opts.decoration : null;
      let baseStyle = opts && 'baseStyle' in opts ? opts.baseStyle : null;
      let textAlign = opts && 'textAlign' in opts ? opts.textAlign : null;
      let textAlignVertical = opts && 'textAlignVertical' in opts ? opts.textAlignVertical : null;
      let isFocused = opts && 'isFocused' in opts ? opts.isFocused : false;
      let isHovering = opts && 'isHovering' in opts ? opts.isHovering : false;
      let expands = opts && 'expands' in opts ? opts.expands : false;
      let isEmpty = opts && 'isEmpty' in opts ? opts.isEmpty : false;
      let child = opts && 'child' in opts ? opts.child : null;
      return new input_decorator.InputDecorator.new({key: key, decoration: decoration, baseStyle: baseStyle, textAlign: textAlign, textAlignVertical: textAlignVertical, isFocused: isFocused, isHovering: isHovering, expands: expands, isEmpty: isEmpty, child: child, $creationLocationd_0dea112b090073317d4: C[545] || CT.C545});
    }
    get [S$._labelShouldWithdraw]() {
      return !this.isEmpty || this.isFocused && this.decoration.enabled;
    }
    createState() {
      return new input_decorator._InputDecoratorState.new();
    }
    static containerOf(context) {
      let t48;
      let result = context.findAncestorRenderObjectOfType(input_decorator._RenderDecoration);
      t48 = result;
      return t48 == null ? null : t48.container;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfInputDecoration()).new("decoration", this.decoration));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("baseStyle", this.baseStyle, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("isFocused", this.isFocused));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("expands", this.expands, {defaultValue: false}));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("isEmpty", this.isEmpty));
    }
  };
  (input_decorator.InputDecorator.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let decoration = opts && 'decoration' in opts ? opts.decoration : null;
    let baseStyle = opts && 'baseStyle' in opts ? opts.baseStyle : null;
    let textAlign = opts && 'textAlign' in opts ? opts.textAlign : null;
    let textAlignVertical = opts && 'textAlignVertical' in opts ? opts.textAlignVertical : null;
    let isFocused = opts && 'isFocused' in opts ? opts.isFocused : false;
    let isHovering = opts && 'isHovering' in opts ? opts.isHovering : false;
    let expands = opts && 'expands' in opts ? opts.expands : false;
    let isEmpty = opts && 'isEmpty' in opts ? opts.isEmpty : false;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.decoration$1] = decoration;
    this[S$.baseStyle] = baseStyle;
    this[S$.textAlign$1] = textAlign;
    this[S$.textAlignVertical$1] = textAlignVertical;
    this[S$.isFocused$1] = isFocused;
    this[S$.isHovering$1] = isHovering;
    this[S$.expands$1] = expands;
    this[S$.isEmpty] = isEmpty;
    this[S$.child$16] = child;
    if (!(decoration !== null)) dart.assertFailed(null, I[57], 1741, 15, "decoration != null");
    if (!(isFocused !== null)) dart.assertFailed(null, I[57], 1742, 15, "isFocused != null");
    if (!(isHovering !== null)) dart.assertFailed(null, I[57], 1743, 15, "isHovering != null");
    if (!(expands !== null)) dart.assertFailed(null, I[57], 1744, 15, "expands != null");
    if (!(isEmpty !== null)) dart.assertFailed(null, I[57], 1745, 15, "isEmpty != null");
    input_decorator.InputDecorator.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = input_decorator.InputDecorator.prototype;
  dart.addTypeTests(input_decorator.InputDecorator);
  dart.addTypeCaches(input_decorator.InputDecorator);
  dart.setMethodSignature(input_decorator.InputDecorator, () => ({
    __proto__: dart.getMethods(input_decorator.InputDecorator.__proto__),
    createState: dart.fnType(framework.State$(input_decorator.InputDecorator), [])
  }));
  dart.setStaticMethodSignature(input_decorator.InputDecorator, () => ['containerOf']);
  dart.setGetterSignature(input_decorator.InputDecorator, () => ({
    __proto__: dart.getGetters(input_decorator.InputDecorator.__proto__),
    [S$._labelShouldWithdraw]: core.bool
  }));
  dart.setLibraryUri(input_decorator.InputDecorator, I[56]);
  dart.setFieldSignature(input_decorator.InputDecorator, () => ({
    __proto__: dart.getFields(input_decorator.InputDecorator.__proto__),
    decoration: dart.finalFieldType(input_decorator.InputDecoration),
    baseStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    textAlign: dart.finalFieldType(dart.nullable(ui.TextAlign)),
    textAlignVertical: dart.finalFieldType(dart.nullable(alignment.TextAlignVertical)),
    isFocused: dart.finalFieldType(core.bool),
    isHovering: dart.finalFieldType(core.bool),
    expands: dart.finalFieldType(core.bool),
    isEmpty: dart.finalFieldType(core.bool),
    child: dart.finalFieldType(dart.nullable(framework.Widget))
  }));
  const State_TickerProviderStateMixin$36$1 = class State_TickerProviderStateMixin extends framework.State$(input_decorator.InputDecorator) {};
  (State_TickerProviderStateMixin$36$1.new = function() {
    ticker_provider.TickerProviderStateMixin$(input_decorator.InputDecorator)[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36$1.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36$1.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36$1, ticker_provider.TickerProviderStateMixin$(input_decorator.InputDecorator));
  input_decorator._InputDecoratorState = class _InputDecoratorState extends State_TickerProviderStateMixin$36$1 {
    get [S$._floatingLabelController]() {
      let t48;
      t48 = this[S$.___InputDecoratorState__floatingLabelController];
      return t48 == null ? dart.throw(new _internal.LateError.fieldNI("_floatingLabelController")) : t48;
    }
    set [S$._floatingLabelController](library$32package$58flutter$47src$47material$47input_decorator$46dart$58$58_floatingLabelController$35param) {
      this[S$.___InputDecoratorState__floatingLabelController] = library$32package$58flutter$47src$47material$47input_decorator$46dart$58$58_floatingLabelController$35param;
    }
    get [S$._shakingLabelController]() {
      let t48;
      t48 = this[S$.___InputDecoratorState__shakingLabelController];
      return t48 == null ? dart.throw(new _internal.LateError.fieldNI("_shakingLabelController")) : t48;
    }
    set [S$._shakingLabelController](library$32package$58flutter$47src$47material$47input_decorator$46dart$58$58_shakingLabelController$35param) {
      this[S$.___InputDecoratorState__shakingLabelController] = library$32package$58flutter$47src$47material$47input_decorator$46dart$58$58_shakingLabelController$35param;
    }
    initState() {
      super.initState();
      let labelIsInitiallyFloating = this.widget.decoration.floatingLabelBehavior === input_decorator.FloatingLabelBehavior.always || this.widget.decoration.floatingLabelBehavior !== input_decorator.FloatingLabelBehavior.never && this.widget[S$._labelShouldWithdraw];
      this[S$._floatingLabelController] = new animation_controller.AnimationController.new({duration: input_decorator._kTransitionDuration, vsync: this, value: labelIsInitiallyFloating ? 1.0 : 0.0});
      this[S$._floatingLabelController].addListener(dart.bind(this, S$._handleChange));
      this[S$._shakingLabelController] = new animation_controller.AnimationController.new({duration: input_decorator._kTransitionDuration, vsync: this});
    }
    didChangeDependencies() {
      super.didChangeDependencies();
      this[S$._effectiveDecoration] = null;
    }
    dispose() {
      this[S$._floatingLabelController].dispose();
      this[S$._shakingLabelController].dispose();
      super.dispose();
    }
    [S$._handleChange]() {
      this.setState(dart.fn(() => {
      }, T$.VoidTovoid()));
    }
    get decoration() {
      let t48;
      t48 = this[S$._effectiveDecoration];
      return t48 == null ? this[S$._effectiveDecoration] = this.widget.decoration.applyDefaults(theme$.Theme.of(this.context).inputDecorationTheme) : t48;
    }
    get textAlign() {
      return this.widget.textAlign;
    }
    get isFocused() {
      return this.widget.isFocused;
    }
    get isHovering() {
      return this.widget.isHovering && this.decoration.enabled;
    }
    get isEmpty() {
      return this.widget.isEmpty;
    }
    get [S$._floatingLabelEnabled]() {
      return this.decoration.floatingLabelBehavior !== input_decorator.FloatingLabelBehavior.never;
    }
    didUpdateWidget(old) {
      let t48;
      input_decorator.InputDecorator.as(old);
      super.didUpdateWidget(old);
      if (!this.widget.decoration._equals(old.decoration)) {
        this[S$._effectiveDecoration] = null;
      }
      let floatBehaviorChanged = this.widget.decoration.floatingLabelBehavior != old.decoration.floatingLabelBehavior;
      if (this.widget[S$._labelShouldWithdraw] !== old[S$._labelShouldWithdraw] || floatBehaviorChanged) {
        if (this[S$._floatingLabelEnabled] && (this.widget[S$._labelShouldWithdraw] || this.widget.decoration.floatingLabelBehavior === input_decorator.FloatingLabelBehavior.always)) {
          this[S$._floatingLabelController].forward();
        } else {
          this[S$._floatingLabelController].reverse();
        }
      }
      let errorText = this.decoration.errorText;
      let oldErrorText = old.decoration.errorText;
      if (this[S$._floatingLabelController].isCompleted && errorText != null && errorText != oldErrorText) {
        t48 = this[S$._shakingLabelController];
        (() => {
          t48.value = 0.0;
          t48.forward();
          return t48;
        })();
      }
    }
    [S$._getActiveColor](themeData) {
      if (this.isFocused) {
        return themeData.colorScheme.primary;
      }
      return themeData.hintColor;
    }
    [S$._getDefaultBorderColor](themeData) {
      let t48, t48$;
      if (this.isFocused) {
        return themeData.colorScheme.primary;
      }
      if (dart.nullCheck(this.decoration.filled)) {
        return themeData.hintColor;
      }
      let enabledColor = themeData.colorScheme.onSurface.withOpacity(0.38);
      if (this.isHovering) {
        let hoverColor = (t48$ = (t48 = this.decoration.hoverColor, t48 == null ? themeData.inputDecorationTheme.hoverColor : t48), t48$ == null ? themeData.hoverColor : t48$);
        return ui.Color.alphaBlend(hoverColor.withOpacity(0.12), enabledColor);
      }
      return enabledColor;
    }
    [S$._getFillColor](themeData) {
      if (this.decoration.filled !== true) {
        return colors$.Colors.transparent;
      }
      if (this.decoration.fillColor != null) {
        return material_state.MaterialStateProperty.resolveAs(ui.Color, dart.nullCheck(this.decoration.fillColor), this.materialState);
      }
      let darkEnabled = C[546] || CT.C546;
      let darkDisabled = C[547] || CT.C547;
      let lightEnabled = C[548] || CT.C548;
      let lightDisabled = C[549] || CT.C549;
      switch (themeData.brightness) {
        case C[550] || CT.C550:
          {
            return this.decoration.enabled ? darkEnabled : darkDisabled;
          }
        case C[551] || CT.C551:
          {
            return this.decoration.enabled ? lightEnabled : lightDisabled;
          }
      }
    }
    [S$._getHoverColor](themeData) {
      let t48, t48$;
      if (this.decoration.filled == null || !dart.nullCheck(this.decoration.filled) || this.isFocused || !this.decoration.enabled) {
        return colors$.Colors.transparent;
      }
      t48$ = (t48 = this.decoration.hoverColor, t48 == null ? themeData.inputDecorationTheme.hoverColor : t48);
      return t48$ == null ? themeData.hoverColor : t48$;
    }
    [S$._getIconColor](themeData) {
      let t48;
      function resolveIconColor(states) {
        if (states.contains(material_state.MaterialState.disabled) && !states.contains(material_state.MaterialState.focused)) {
          return themeData.disabledColor;
        }
        if (states.contains(material_state.MaterialState.focused)) {
          return themeData.colorScheme.primary;
        }
        switch (themeData.brightness) {
          case C[550] || CT.C550:
            {
              return colors$.Colors.white70;
            }
          case C[551] || CT.C551:
            {
              return colors$.Colors.black45;
            }
        }
      }
      dart.fn(resolveIconColor, T$.SetOfMaterialStateToColor());
      t48 = material_state.MaterialStateProperty.resolveAs(T$.ColorN(), themeData.inputDecorationTheme.iconColor, this.materialState);
      return t48 == null ? material_state.MaterialStateProperty.resolveWith(ui.Color, resolveIconColor).resolve(this.materialState) : t48;
    }
    [S$._getPrefixIconColor](themeData) {
      let t48;
      t48 = material_state.MaterialStateProperty.resolveAs(T$.ColorN(), themeData.inputDecorationTheme.prefixIconColor, this.materialState);
      return t48 == null ? this[S$._getIconColor](themeData) : t48;
    }
    [S$._getSuffixIconColor](themeData) {
      let t48;
      t48 = material_state.MaterialStateProperty.resolveAs(T$.ColorN(), themeData.inputDecorationTheme.suffixIconColor, this.materialState);
      return t48 == null ? this[S$._getIconColor](themeData) : t48;
    }
    get [S$._hasInlineLabel]() {
      return !this.widget[S$._labelShouldWithdraw] && (this.decoration.labelText != null || this.decoration.label != null) && this.decoration.floatingLabelBehavior !== input_decorator.FloatingLabelBehavior.always;
    }
    get [S$._shouldShowLabel]() {
      return this[S$._hasInlineLabel] || this[S$._floatingLabelEnabled];
    }
    [S$._getInlineLabelStyle](themeData) {
      let t48;
      let defaultStyle = new text_style.TextStyle.new({color: this.decoration.enabled ? themeData.hintColor : themeData.disabledColor});
      let style = (t48 = material_state.MaterialStateProperty.resolveAs(T$.TextStyleN(), this.decoration.labelStyle, this.materialState), t48 == null ? material_state.MaterialStateProperty.resolveAs(T$.TextStyleN(), themeData.inputDecorationTheme.labelStyle, this.materialState) : t48);
      return dart.nullCheck(themeData.textTheme.subtitle1).merge(this.widget.baseStyle).merge(defaultStyle).merge(style).copyWith({height: 1.0});
    }
    [S$._getInlineHintStyle](themeData) {
      let t48;
      let defaultStyle = new text_style.TextStyle.new({color: this.decoration.enabled ? themeData.hintColor : themeData.disabledColor});
      let style = (t48 = material_state.MaterialStateProperty.resolveAs(T$.TextStyleN(), this.decoration.hintStyle, this.materialState), t48 == null ? material_state.MaterialStateProperty.resolveAs(T$.TextStyleN(), themeData.inputDecorationTheme.hintStyle, this.materialState) : t48);
      return dart.nullCheck(themeData.textTheme.subtitle1).merge(this.widget.baseStyle).merge(defaultStyle).merge(style);
    }
    [S$._getFloatingLabelStyle](themeData) {
      let t48;
      const getFallbackTextStyle = () => {
        let t48, t48$, t48$0;
        let color = this.decoration.errorText != null ? (t48$ = (t48 = this.decoration.errorStyle, t48 == null ? null : t48.color), t48$ == null ? themeData.errorColor : t48$) : this[S$._getActiveColor](themeData);
        return new text_style.TextStyle.new({color: this.decoration.enabled ? color : themeData.disabledColor}).merge((t48$0 = this.decoration.floatingLabelStyle, t48$0 == null ? this.decoration.labelStyle : t48$0));
      };
      dart.fn(getFallbackTextStyle, T$.VoidToTextStyle());
      let style = (t48 = material_state.MaterialStateProperty.resolveAs(T$.TextStyleN(), this.decoration.floatingLabelStyle, this.materialState), t48 == null ? material_state.MaterialStateProperty.resolveAs(T$.TextStyleN(), themeData.inputDecorationTheme.floatingLabelStyle, this.materialState) : t48);
      return dart.nullCheck(themeData.textTheme.subtitle1).merge(this.widget.baseStyle).copyWith({height: 1.0}).merge(getFallbackTextStyle()).merge(style);
    }
    [S$._getHelperStyle](themeData) {
      let color = this.decoration.enabled ? themeData.hintColor : colors$.Colors.transparent;
      return dart.nullCheck(themeData.textTheme.caption).copyWith({color: color}).merge(material_state.MaterialStateProperty.resolveAs(T$.TextStyleN(), this.decoration.helperStyle, this.materialState));
    }
    [S$._getErrorStyle](themeData) {
      let color = this.decoration.enabled ? themeData.errorColor : colors$.Colors.transparent;
      return dart.nullCheck(themeData.textTheme.caption).copyWith({color: color}).merge(this.decoration.errorStyle);
    }
    get materialState() {
      return (() => {
        let t48 = T$.LinkedHashSetOfMaterialState().new();
        if (!this.decoration.enabled) t48.add(material_state.MaterialState.disabled);
        if (this.isFocused) t48.add(material_state.MaterialState.focused);
        if (this.isHovering) t48.add(material_state.MaterialState.hovered);
        if (this.decoration.errorText != null) t48.add(material_state.MaterialState.error);
        return t48;
      })();
    }
    [S$._getDefaultBorder](themeData) {
      let t49, t49$, t49$0, t49$1;
      let border = (t49 = material_state.MaterialStateProperty.resolveAs(T$.InputBorderN(), this.decoration.border, this.materialState), t49 == null ? C[552] || CT.C552 : t49);
      if (T$.MaterialStatePropertyOfInputBorder().is(this.decoration.border)) {
        return border;
      }
      if (border.borderSide._equals(borders.BorderSide.none)) {
        return border;
      }
      let borderColor = null;
      if (this.decoration.enabled || this.isFocused) {
        borderColor = this.decoration.errorText == null ? this[S$._getDefaultBorderColor](themeData) : themeData.errorColor;
      } else {
        borderColor = dart.test((t49$ = this.decoration.filled, t49$ == null ? false : t49$)) && !dart.test((t49$1 = (t49$0 = this.decoration.border, t49$0 == null ? null : t49$0.isOutline), t49$1 == null ? false : t49$1)) ? colors$.Colors.transparent : themeData.disabledColor;
      }
      let borderWeight = null;
      if (this.decoration.isCollapsed || dart.equals(this.decoration.border, input_border.InputBorder.none) || !this.decoration.enabled) {
        borderWeight = 0.0;
      } else {
        borderWeight = this.isFocused ? 2.0 : 1.0;
      }
      return border.copyWith({borderSide: new borders.BorderSide.new({color: borderColor, width: borderWeight})});
    }
    build(context) {
      let t49, t49$, t49$0, t49$1, t49$2, t49$3, t49$4, t49$5, t49$6, t49$7, t49$8, t49$9, t49$10, t49$11;
      let themeData = theme$.Theme.of(context);
      let labelStyle = this[S$._getInlineLabelStyle](themeData);
      let textBaseline = dart.nullCheck(labelStyle.textBaseline);
      let hintStyle = this[S$._getInlineHintStyle](themeData);
      let hintText = this.decoration.hintText;
      let hint = hintText == null ? null : new implicit_animations.AnimatedOpacity.new({opacity: this.isEmpty && !this[S$._hasInlineLabel] ? 1.0 : 0.0, duration: input_decorator._kTransitionDuration, curve: input_decorator._kTransitionCurve, alwaysIncludeSemantics: true, child: new text$.Text.new(hintText, {style: hintStyle, textDirection: this.decoration.hintTextDirection, overflow: text_painter.TextOverflow.ellipsis, textAlign: this.textAlign, maxLines: this.decoration.hintMaxLines, $creationLocationd_0dea112b090073317d4: C[556] || CT.C556}), $creationLocationd_0dea112b090073317d4: C[557] || CT.C557});
      let isError = this.decoration.errorText != null;
      let border = null;
      if (!this.decoration.enabled) {
        border = isError ? this.decoration.errorBorder : this.decoration.disabledBorder;
      } else if (this.isFocused) {
        border = isError ? this.decoration.focusedErrorBorder : this.decoration.focusedBorder;
      } else {
        border = isError ? this.decoration.errorBorder : this.decoration.enabledBorder;
      }
      border == null ? border = this[S$._getDefaultBorder](themeData) : null;
      let container = new input_decorator._BorderContainer.new({border: border, gap: this[S$._borderGap], gapAnimation: this[S$._floatingLabelController].view, fillColor: this[S$._getFillColor](themeData), hoverColor: this[S$._getHoverColor](themeData), isHovering: this.isHovering, $creationLocationd_0dea112b090073317d4: C[558] || CT.C558});
      let label = this.decoration.labelText == null && this.decoration.label == null ? null : new input_decorator._Shaker.new({animation: this[S$._shakingLabelController].view, child: new implicit_animations.AnimatedOpacity.new({duration: input_decorator._kTransitionDuration, curve: input_decorator._kTransitionCurve, opacity: this[S$._shouldShowLabel] ? 1.0 : 0.0, child: new implicit_animations.AnimatedDefaultTextStyle.new({duration: input_decorator._kTransitionDuration, curve: input_decorator._kTransitionCurve, style: this.widget[S$._labelShouldWithdraw] ? this[S$._getFloatingLabelStyle](themeData) : labelStyle, child: (t49 = this.decoration.label, t49 == null ? new text$.Text.new(dart.nullCheck(this.decoration.labelText), {overflow: text_painter.TextOverflow.ellipsis, textAlign: this.textAlign, $creationLocationd_0dea112b090073317d4: C[559] || CT.C559}) : t49), $creationLocationd_0dea112b090073317d4: C[560] || CT.C560}), $creationLocationd_0dea112b090073317d4: C[561] || CT.C561}), $creationLocationd_0dea112b090073317d4: C[562] || CT.C562});
      let prefix = this.decoration.prefix == null && this.decoration.prefixText == null ? null : new input_decorator._AffixText.new({labelIsFloating: this.widget[S$._labelShouldWithdraw], text: this.decoration.prefixText, style: (t49$ = material_state.MaterialStateProperty.resolveAs(T$.TextStyleN(), this.decoration.prefixStyle, this.materialState), t49$ == null ? hintStyle : t49$), child: this.decoration.prefix, $creationLocationd_0dea112b090073317d4: C[563] || CT.C563});
      let suffix = this.decoration.suffix == null && this.decoration.suffixText == null ? null : new input_decorator._AffixText.new({labelIsFloating: this.widget[S$._labelShouldWithdraw], text: this.decoration.suffixText, style: (t49$0 = material_state.MaterialStateProperty.resolveAs(T$.TextStyleN(), this.decoration.suffixStyle, this.materialState), t49$0 == null ? hintStyle : t49$0), child: this.decoration.suffix, $creationLocationd_0dea112b090073317d4: C[564] || CT.C564});
      let decorationIsDense = (t49$1 = this.decoration.isDense, t49$1 == null ? false : t49$1);
      let iconSize = decorationIsDense ? 18.0 : 24.0;
      let icon = this.decoration.icon == null ? null : new basic.Padding.new({padding: C[565] || CT.C565, child: icon_theme.IconTheme.merge({data: new icon_theme_data.IconThemeData.new({color: this[S$._getIconColor](themeData), size: iconSize}), child: dart.nullCheck(this.decoration.icon)}), $creationLocationd_0dea112b090073317d4: C[566] || CT.C566});
      let prefixIcon = this.decoration.prefixIcon == null ? null : new basic.Center.new({widthFactor: 1.0, heightFactor: 1.0, child: new basic.ConstrainedBox.new({constraints: (t49$2 = this.decoration.prefixIconConstraints, t49$2 == null ? themeData.visualDensity.effectiveConstraints(C[3] || CT.C3) : t49$2), child: icon_theme.IconTheme.merge({data: new icon_theme_data.IconThemeData.new({color: this[S$._getPrefixIconColor](themeData), size: iconSize}), child: dart.nullCheck(this.decoration.prefixIcon)}), $creationLocationd_0dea112b090073317d4: C[567] || CT.C567}), $creationLocationd_0dea112b090073317d4: C[568] || CT.C568});
      let suffixIcon = this.decoration.suffixIcon == null ? null : new basic.Center.new({widthFactor: 1.0, heightFactor: 1.0, child: new basic.ConstrainedBox.new({constraints: (t49$3 = this.decoration.suffixIconConstraints, t49$3 == null ? themeData.visualDensity.effectiveConstraints(C[3] || CT.C3) : t49$3), child: icon_theme.IconTheme.merge({data: new icon_theme_data.IconThemeData.new({color: this[S$._getSuffixIconColor](themeData), size: iconSize}), child: dart.nullCheck(this.decoration.suffixIcon)}), $creationLocationd_0dea112b090073317d4: C[569] || CT.C569}), $creationLocationd_0dea112b090073317d4: C[570] || CT.C570});
      let helperError = new input_decorator._HelperError.new({textAlign: this.textAlign, helperText: this.decoration.helperText, helperStyle: this[S$._getHelperStyle](themeData), helperMaxLines: this.decoration.helperMaxLines, errorText: this.decoration.errorText, errorStyle: this[S$._getErrorStyle](themeData), errorMaxLines: this.decoration.errorMaxLines, $creationLocationd_0dea112b090073317d4: C[571] || CT.C571});
      let counter = null;
      if (this.decoration.counter != null) {
        counter = this.decoration.counter;
      } else if (this.decoration.counterText != null && this.decoration.counterText !== "") {
        counter = new basic.Semantics.new({container: true, liveRegion: this.isFocused, child: new text$.Text.new(dart.nullCheck(this.decoration.counterText), {style: this[S$._getHelperStyle](themeData).merge(material_state.MaterialStateProperty.resolveAs(T$.TextStyleN(), this.decoration.counterStyle, this.materialState)), overflow: text_painter.TextOverflow.ellipsis, semanticsLabel: this.decoration.semanticCounterText, $creationLocationd_0dea112b090073317d4: C[572] || CT.C572}), $creationLocationd_0dea112b090073317d4: C[573] || CT.C573});
      }
      let textDirection = basic.Directionality.of(context);
      let decorationContentPadding = (t49$4 = this.decoration.contentPadding, t49$4 == null ? null : t49$4.resolve(textDirection));
      let contentPadding = null;
      let floatingLabelHeight = null;
      if (this.decoration.isCollapsed) {
        floatingLabelHeight = 0.0;
        contentPadding = (t49$5 = decorationContentPadding, t49$5 == null ? edge_insets.EdgeInsets.zero : t49$5);
      } else if (!border.isOutline) {
        floatingLabelHeight = (4.0 + 0.75 * dart.nullCheck(labelStyle.fontSize)) * media_query.MediaQuery.textScaleFactorOf(context);
        if (dart.test((t49$6 = this.decoration.filled, t49$6 == null ? false : t49$6))) {
          contentPadding = (t49$7 = decorationContentPadding, t49$7 == null ? decorationIsDense ? C[574] || CT.C574 : C[575] || CT.C575 : t49$7);
        } else {
          contentPadding = (t49$8 = decorationContentPadding, t49$8 == null ? decorationIsDense ? C[576] || CT.C576 : C[577] || CT.C577 : t49$8);
        }
      } else {
        floatingLabelHeight = 0.0;
        contentPadding = (t49$9 = decorationContentPadding, t49$9 == null ? decorationIsDense ? C[578] || CT.C578 : C[579] || CT.C579 : t49$9);
      }
      let decorator = new input_decorator._Decorator.new({decoration: new input_decorator._Decoration.new({contentPadding: contentPadding, isCollapsed: this.decoration.isCollapsed, floatingLabelHeight: floatingLabelHeight, floatingLabelAlignment: dart.nullCheck(this.decoration.floatingLabelAlignment), floatingLabelProgress: this[S$._floatingLabelController].value, border: border, borderGap: this[S$._borderGap], alignLabelWithHint: (t49$10 = this.decoration.alignLabelWithHint, t49$10 == null ? false : t49$10), isDense: this.decoration.isDense, visualDensity: themeData.visualDensity, icon: icon, input: this.widget.child, label: label, hint: hint, prefix: prefix, suffix: suffix, prefixIcon: prefixIcon, suffixIcon: suffixIcon, helperError: helperError, counter: counter, container: container}), textDirection: textDirection, textBaseline: textBaseline, textAlignVertical: this.widget.textAlignVertical, isFocused: this.isFocused, expands: this.widget.expands, $creationLocationd_0dea112b090073317d4: C[580] || CT.C580});
      let constraints = (t49$11 = this.decoration.constraints, t49$11 == null ? themeData.inputDecorationTheme.constraints : t49$11);
      if (constraints != null) {
        return new basic.ConstrainedBox.new({constraints: constraints, child: decorator, $creationLocationd_0dea112b090073317d4: C[581] || CT.C581});
      }
      return decorator;
    }
    static ['_#new#tearOff']() {
      return new input_decorator._InputDecoratorState.new();
    }
  };
  (input_decorator._InputDecoratorState.new = function() {
    this[S$.___InputDecoratorState__floatingLabelController] = null;
    this[S$.___InputDecoratorState__shakingLabelController] = null;
    this[S$._borderGap] = new input_decorator._InputBorderGap.new();
    this[S$._effectiveDecoration] = null;
    input_decorator._InputDecoratorState.__proto__.new.call(this);
    ;
  }).prototype = input_decorator._InputDecoratorState.prototype;
  dart.addTypeTests(input_decorator._InputDecoratorState);
  dart.addTypeCaches(input_decorator._InputDecoratorState);
  dart.setMethodSignature(input_decorator._InputDecoratorState, () => ({
    __proto__: dart.getMethods(input_decorator._InputDecoratorState.__proto__),
    [S$._handleChange]: dart.fnType(dart.void, []),
    [S$._getActiveColor]: dart.fnType(ui.Color, [theme_data.ThemeData]),
    [S$._getDefaultBorderColor]: dart.fnType(ui.Color, [theme_data.ThemeData]),
    [S$._getFillColor]: dart.fnType(ui.Color, [theme_data.ThemeData]),
    [S$._getHoverColor]: dart.fnType(ui.Color, [theme_data.ThemeData]),
    [S$._getIconColor]: dart.fnType(ui.Color, [theme_data.ThemeData]),
    [S$._getPrefixIconColor]: dart.fnType(ui.Color, [theme_data.ThemeData]),
    [S$._getSuffixIconColor]: dart.fnType(ui.Color, [theme_data.ThemeData]),
    [S$._getInlineLabelStyle]: dart.fnType(text_style.TextStyle, [theme_data.ThemeData]),
    [S$._getInlineHintStyle]: dart.fnType(text_style.TextStyle, [theme_data.ThemeData]),
    [S$._getFloatingLabelStyle]: dart.fnType(text_style.TextStyle, [theme_data.ThemeData]),
    [S$._getHelperStyle]: dart.fnType(text_style.TextStyle, [theme_data.ThemeData]),
    [S$._getErrorStyle]: dart.fnType(text_style.TextStyle, [theme_data.ThemeData]),
    [S$._getDefaultBorder]: dart.fnType(input_border.InputBorder, [theme_data.ThemeData]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(input_decorator._InputDecoratorState, () => ({
    __proto__: dart.getGetters(input_decorator._InputDecoratorState.__proto__),
    [S$._floatingLabelController]: animation_controller.AnimationController,
    [S$._shakingLabelController]: animation_controller.AnimationController,
    decoration: input_decorator.InputDecoration,
    textAlign: dart.nullable(ui.TextAlign),
    isFocused: core.bool,
    isHovering: core.bool,
    isEmpty: core.bool,
    [S$._floatingLabelEnabled]: core.bool,
    [S$._hasInlineLabel]: core.bool,
    [S$._shouldShowLabel]: core.bool,
    materialState: core.Set$(material_state.MaterialState)
  }));
  dart.setSetterSignature(input_decorator._InputDecoratorState, () => ({
    __proto__: dart.getSetters(input_decorator._InputDecoratorState.__proto__),
    [S$._floatingLabelController]: animation_controller.AnimationController,
    [S$._shakingLabelController]: animation_controller.AnimationController
  }));
  dart.setLibraryUri(input_decorator._InputDecoratorState, I[56]);
  dart.setFieldSignature(input_decorator._InputDecoratorState, () => ({
    __proto__: dart.getFields(input_decorator._InputDecoratorState.__proto__),
    [S$.___InputDecoratorState__floatingLabelController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S$.___InputDecoratorState__shakingLabelController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S$._borderGap]: dart.finalFieldType(input_decorator._InputBorderGap),
    [S$._effectiveDecoration]: dart.fieldType(dart.nullable(input_decorator.InputDecoration))
  }));
  input_decorator.InputDecoration = class InputDecoration extends core.Object {
    get icon() {
      return this[S$.icon$7];
    }
    set icon(value) {
      super.icon = value;
    }
    get iconColor() {
      return this[S$.iconColor];
    }
    set iconColor(value) {
      super.iconColor = value;
    }
    get label() {
      return this[S$.label$7];
    }
    set label(value) {
      super.label = value;
    }
    get labelText() {
      return this[S$.labelText];
    }
    set labelText(value) {
      super.labelText = value;
    }
    get labelStyle() {
      return this[S$.labelStyle$3];
    }
    set labelStyle(value) {
      super.labelStyle = value;
    }
    get floatingLabelStyle() {
      return this[S$.floatingLabelStyle];
    }
    set floatingLabelStyle(value) {
      super.floatingLabelStyle = value;
    }
    get helperText() {
      return this[S$.helperText$1];
    }
    set helperText(value) {
      super.helperText = value;
    }
    get helperStyle() {
      return this[S$.helperStyle$1];
    }
    set helperStyle(value) {
      super.helperStyle = value;
    }
    get helperMaxLines() {
      return this[S$.helperMaxLines$1];
    }
    set helperMaxLines(value) {
      super.helperMaxLines = value;
    }
    get hintText() {
      return this[S$.hintText];
    }
    set hintText(value) {
      super.hintText = value;
    }
    get hintStyle() {
      return this[S$.hintStyle];
    }
    set hintStyle(value) {
      super.hintStyle = value;
    }
    get hintTextDirection() {
      return this[S$.hintTextDirection];
    }
    set hintTextDirection(value) {
      super.hintTextDirection = value;
    }
    get hintMaxLines() {
      return this[S$.hintMaxLines];
    }
    set hintMaxLines(value) {
      super.hintMaxLines = value;
    }
    get errorText() {
      return this[S$.errorText$1];
    }
    set errorText(value) {
      super.errorText = value;
    }
    get errorStyle() {
      return this[S$.errorStyle$1];
    }
    set errorStyle(value) {
      super.errorStyle = value;
    }
    get errorMaxLines() {
      return this[S$.errorMaxLines$1];
    }
    set errorMaxLines(value) {
      super.errorMaxLines = value;
    }
    get floatingLabelBehavior() {
      return this[S$.floatingLabelBehavior];
    }
    set floatingLabelBehavior(value) {
      super.floatingLabelBehavior = value;
    }
    get floatingLabelAlignment() {
      return this[S$.floatingLabelAlignment$1];
    }
    set floatingLabelAlignment(value) {
      super.floatingLabelAlignment = value;
    }
    get isDense() {
      return this[S$.isDense$1];
    }
    set isDense(value) {
      super.isDense = value;
    }
    get contentPadding() {
      return this[S$.contentPadding$1];
    }
    set contentPadding(value) {
      super.contentPadding = value;
    }
    get isCollapsed() {
      return this[S$.isCollapsed$1];
    }
    set isCollapsed(value) {
      super.isCollapsed = value;
    }
    get prefixIcon() {
      return this[S$.prefixIcon$1];
    }
    set prefixIcon(value) {
      super.prefixIcon = value;
    }
    get prefixIconConstraints() {
      return this[S$.prefixIconConstraints];
    }
    set prefixIconConstraints(value) {
      super.prefixIconConstraints = value;
    }
    get prefix() {
      return this[S$.prefix$1];
    }
    set prefix(value) {
      super.prefix = value;
    }
    get prefixText() {
      return this[S$.prefixText];
    }
    set prefixText(value) {
      super.prefixText = value;
    }
    get prefixStyle() {
      return this[S$.prefixStyle];
    }
    set prefixStyle(value) {
      super.prefixStyle = value;
    }
    get prefixIconColor() {
      return this[S$.prefixIconColor];
    }
    set prefixIconColor(value) {
      super.prefixIconColor = value;
    }
    get suffixIcon() {
      return this[S$.suffixIcon$1];
    }
    set suffixIcon(value) {
      super.suffixIcon = value;
    }
    get suffix() {
      return this[S$.suffix$1];
    }
    set suffix(value) {
      super.suffix = value;
    }
    get suffixText() {
      return this[S$.suffixText];
    }
    set suffixText(value) {
      super.suffixText = value;
    }
    get suffixStyle() {
      return this[S$.suffixStyle];
    }
    set suffixStyle(value) {
      super.suffixStyle = value;
    }
    get suffixIconColor() {
      return this[S$.suffixIconColor];
    }
    set suffixIconColor(value) {
      super.suffixIconColor = value;
    }
    get suffixIconConstraints() {
      return this[S$.suffixIconConstraints];
    }
    set suffixIconConstraints(value) {
      super.suffixIconConstraints = value;
    }
    get counterText() {
      return this[S$.counterText];
    }
    set counterText(value) {
      super.counterText = value;
    }
    get counter() {
      return this[S$.counter$1];
    }
    set counter(value) {
      super.counter = value;
    }
    get counterStyle() {
      return this[S$.counterStyle];
    }
    set counterStyle(value) {
      super.counterStyle = value;
    }
    get filled() {
      return this[S$.filled];
    }
    set filled(value) {
      super.filled = value;
    }
    get fillColor() {
      return this[S$.fillColor$3];
    }
    set fillColor(value) {
      super.fillColor = value;
    }
    get focusColor() {
      return this[S$.focusColor$3];
    }
    set focusColor(value) {
      super.focusColor = value;
    }
    get hoverColor() {
      return this[S$.hoverColor$4];
    }
    set hoverColor(value) {
      super.hoverColor = value;
    }
    get errorBorder() {
      return this[S$.errorBorder];
    }
    set errorBorder(value) {
      super.errorBorder = value;
    }
    get focusedBorder() {
      return this[S$.focusedBorder];
    }
    set focusedBorder(value) {
      super.focusedBorder = value;
    }
    get focusedErrorBorder() {
      return this[S$.focusedErrorBorder];
    }
    set focusedErrorBorder(value) {
      super.focusedErrorBorder = value;
    }
    get disabledBorder() {
      return this[S$.disabledBorder];
    }
    set disabledBorder(value) {
      super.disabledBorder = value;
    }
    get enabledBorder() {
      return this[S$.enabledBorder];
    }
    set enabledBorder(value) {
      super.enabledBorder = value;
    }
    get border() {
      return this[S$.border$2];
    }
    set border(value) {
      super.border = value;
    }
    get enabled() {
      return this[S$.enabled];
    }
    set enabled(value) {
      super.enabled = value;
    }
    get semanticCounterText() {
      return this[S$.semanticCounterText];
    }
    set semanticCounterText(value) {
      super.semanticCounterText = value;
    }
    get alignLabelWithHint() {
      return this[S$.alignLabelWithHint$1];
    }
    set alignLabelWithHint(value) {
      super.alignLabelWithHint = value;
    }
    get constraints() {
      return this[S$.constraints$2];
    }
    set constraints(value) {
      super.constraints = value;
    }
    static ['_#new#tearOff'](opts) {
      let icon = opts && 'icon' in opts ? opts.icon : null;
      let iconColor = opts && 'iconColor' in opts ? opts.iconColor : null;
      let label = opts && 'label' in opts ? opts.label : null;
      let labelText = opts && 'labelText' in opts ? opts.labelText : null;
      let labelStyle = opts && 'labelStyle' in opts ? opts.labelStyle : null;
      let floatingLabelStyle = opts && 'floatingLabelStyle' in opts ? opts.floatingLabelStyle : null;
      let helperText = opts && 'helperText' in opts ? opts.helperText : null;
      let helperStyle = opts && 'helperStyle' in opts ? opts.helperStyle : null;
      let helperMaxLines = opts && 'helperMaxLines' in opts ? opts.helperMaxLines : null;
      let hintText = opts && 'hintText' in opts ? opts.hintText : null;
      let hintStyle = opts && 'hintStyle' in opts ? opts.hintStyle : null;
      let hintTextDirection = opts && 'hintTextDirection' in opts ? opts.hintTextDirection : null;
      let hintMaxLines = opts && 'hintMaxLines' in opts ? opts.hintMaxLines : null;
      let errorText = opts && 'errorText' in opts ? opts.errorText : null;
      let errorStyle = opts && 'errorStyle' in opts ? opts.errorStyle : null;
      let errorMaxLines = opts && 'errorMaxLines' in opts ? opts.errorMaxLines : null;
      let floatingLabelBehavior = opts && 'floatingLabelBehavior' in opts ? opts.floatingLabelBehavior : null;
      let floatingLabelAlignment = opts && 'floatingLabelAlignment' in opts ? opts.floatingLabelAlignment : null;
      let isCollapsed = opts && 'isCollapsed' in opts ? opts.isCollapsed : false;
      let isDense = opts && 'isDense' in opts ? opts.isDense : null;
      let contentPadding = opts && 'contentPadding' in opts ? opts.contentPadding : null;
      let prefixIcon = opts && 'prefixIcon' in opts ? opts.prefixIcon : null;
      let prefixIconConstraints = opts && 'prefixIconConstraints' in opts ? opts.prefixIconConstraints : null;
      let prefix = opts && 'prefix' in opts ? opts.prefix : null;
      let prefixText = opts && 'prefixText' in opts ? opts.prefixText : null;
      let prefixStyle = opts && 'prefixStyle' in opts ? opts.prefixStyle : null;
      let prefixIconColor = opts && 'prefixIconColor' in opts ? opts.prefixIconColor : null;
      let suffixIcon = opts && 'suffixIcon' in opts ? opts.suffixIcon : null;
      let suffix = opts && 'suffix' in opts ? opts.suffix : null;
      let suffixText = opts && 'suffixText' in opts ? opts.suffixText : null;
      let suffixStyle = opts && 'suffixStyle' in opts ? opts.suffixStyle : null;
      let suffixIconColor = opts && 'suffixIconColor' in opts ? opts.suffixIconColor : null;
      let suffixIconConstraints = opts && 'suffixIconConstraints' in opts ? opts.suffixIconConstraints : null;
      let counter = opts && 'counter' in opts ? opts.counter : null;
      let counterText = opts && 'counterText' in opts ? opts.counterText : null;
      let counterStyle = opts && 'counterStyle' in opts ? opts.counterStyle : null;
      let filled = opts && 'filled' in opts ? opts.filled : null;
      let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
      let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
      let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
      let errorBorder = opts && 'errorBorder' in opts ? opts.errorBorder : null;
      let focusedBorder = opts && 'focusedBorder' in opts ? opts.focusedBorder : null;
      let focusedErrorBorder = opts && 'focusedErrorBorder' in opts ? opts.focusedErrorBorder : null;
      let disabledBorder = opts && 'disabledBorder' in opts ? opts.disabledBorder : null;
      let enabledBorder = opts && 'enabledBorder' in opts ? opts.enabledBorder : null;
      let border = opts && 'border' in opts ? opts.border : null;
      let enabled = opts && 'enabled' in opts ? opts.enabled : true;
      let semanticCounterText = opts && 'semanticCounterText' in opts ? opts.semanticCounterText : null;
      let alignLabelWithHint = opts && 'alignLabelWithHint' in opts ? opts.alignLabelWithHint : null;
      let constraints = opts && 'constraints' in opts ? opts.constraints : null;
      return new input_decorator.InputDecoration.new({icon: icon, iconColor: iconColor, label: label, labelText: labelText, labelStyle: labelStyle, floatingLabelStyle: floatingLabelStyle, helperText: helperText, helperStyle: helperStyle, helperMaxLines: helperMaxLines, hintText: hintText, hintStyle: hintStyle, hintTextDirection: hintTextDirection, hintMaxLines: hintMaxLines, errorText: errorText, errorStyle: errorStyle, errorMaxLines: errorMaxLines, floatingLabelBehavior: floatingLabelBehavior, floatingLabelAlignment: floatingLabelAlignment, isCollapsed: isCollapsed, isDense: isDense, contentPadding: contentPadding, prefixIcon: prefixIcon, prefixIconConstraints: prefixIconConstraints, prefix: prefix, prefixText: prefixText, prefixStyle: prefixStyle, prefixIconColor: prefixIconColor, suffixIcon: suffixIcon, suffix: suffix, suffixText: suffixText, suffixStyle: suffixStyle, suffixIconColor: suffixIconColor, suffixIconConstraints: suffixIconConstraints, counter: counter, counterText: counterText, counterStyle: counterStyle, filled: filled, fillColor: fillColor, focusColor: focusColor, hoverColor: hoverColor, errorBorder: errorBorder, focusedBorder: focusedBorder, focusedErrorBorder: focusedErrorBorder, disabledBorder: disabledBorder, enabledBorder: enabledBorder, border: border, enabled: enabled, semanticCounterText: semanticCounterText, alignLabelWithHint: alignLabelWithHint, constraints: constraints});
    }
    static ['_#collapsed#tearOff'](opts) {
      let hintText = opts && 'hintText' in opts ? opts.hintText : null;
      let floatingLabelBehavior = opts && 'floatingLabelBehavior' in opts ? opts.floatingLabelBehavior : null;
      let floatingLabelAlignment = opts && 'floatingLabelAlignment' in opts ? opts.floatingLabelAlignment : null;
      let hintStyle = opts && 'hintStyle' in opts ? opts.hintStyle : null;
      let hintTextDirection = opts && 'hintTextDirection' in opts ? opts.hintTextDirection : null;
      let filled = opts && 'filled' in opts ? opts.filled : false;
      let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
      let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
      let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
      let border = opts && 'border' in opts ? opts.border : C[582] || CT.C582;
      let enabled = opts && 'enabled' in opts ? opts.enabled : true;
      return new input_decorator.InputDecoration.collapsed({hintText: hintText, floatingLabelBehavior: floatingLabelBehavior, floatingLabelAlignment: floatingLabelAlignment, hintStyle: hintStyle, hintTextDirection: hintTextDirection, filled: filled, fillColor: fillColor, focusColor: focusColor, hoverColor: hoverColor, border: border, enabled: enabled});
    }
    copyWith(opts) {
      let t49, t49$, t49$0, t49$1, t49$2, t49$3, t49$4, t49$5, t49$6, t49$7, t49$8, t49$9, t49$10, t49$11, t49$12, t49$13, t49$14, t49$15, t49$16, t49$17, t49$18, t49$19, t49$20, t49$21, t49$22, t49$23, t49$24, t49$25, t49$26, t49$27, t49$28, t49$29, t49$30, t49$31, t49$32, t49$33, t49$34, t49$35, t49$36, t49$37, t49$38, t49$39, t49$40, t49$41, t49$42, t49$43, t49$44, t49$45, t49$46, t49$47;
      let icon = opts && 'icon' in opts ? opts.icon : null;
      let iconColor = opts && 'iconColor' in opts ? opts.iconColor : null;
      let label = opts && 'label' in opts ? opts.label : null;
      let labelText = opts && 'labelText' in opts ? opts.labelText : null;
      let labelStyle = opts && 'labelStyle' in opts ? opts.labelStyle : null;
      let floatingLabelStyle = opts && 'floatingLabelStyle' in opts ? opts.floatingLabelStyle : null;
      let helperText = opts && 'helperText' in opts ? opts.helperText : null;
      let helperStyle = opts && 'helperStyle' in opts ? opts.helperStyle : null;
      let helperMaxLines = opts && 'helperMaxLines' in opts ? opts.helperMaxLines : null;
      let hintText = opts && 'hintText' in opts ? opts.hintText : null;
      let hintStyle = opts && 'hintStyle' in opts ? opts.hintStyle : null;
      let hintTextDirection = opts && 'hintTextDirection' in opts ? opts.hintTextDirection : null;
      let hintMaxLines = opts && 'hintMaxLines' in opts ? opts.hintMaxLines : null;
      let errorText = opts && 'errorText' in opts ? opts.errorText : null;
      let errorStyle = opts && 'errorStyle' in opts ? opts.errorStyle : null;
      let errorMaxLines = opts && 'errorMaxLines' in opts ? opts.errorMaxLines : null;
      let floatingLabelBehavior = opts && 'floatingLabelBehavior' in opts ? opts.floatingLabelBehavior : null;
      let floatingLabelAlignment = opts && 'floatingLabelAlignment' in opts ? opts.floatingLabelAlignment : null;
      let isCollapsed = opts && 'isCollapsed' in opts ? opts.isCollapsed : null;
      let isDense = opts && 'isDense' in opts ? opts.isDense : null;
      let contentPadding = opts && 'contentPadding' in opts ? opts.contentPadding : null;
      let prefixIcon = opts && 'prefixIcon' in opts ? opts.prefixIcon : null;
      let prefix = opts && 'prefix' in opts ? opts.prefix : null;
      let prefixText = opts && 'prefixText' in opts ? opts.prefixText : null;
      let prefixIconConstraints = opts && 'prefixIconConstraints' in opts ? opts.prefixIconConstraints : null;
      let prefixStyle = opts && 'prefixStyle' in opts ? opts.prefixStyle : null;
      let prefixIconColor = opts && 'prefixIconColor' in opts ? opts.prefixIconColor : null;
      let suffixIcon = opts && 'suffixIcon' in opts ? opts.suffixIcon : null;
      let suffix = opts && 'suffix' in opts ? opts.suffix : null;
      let suffixText = opts && 'suffixText' in opts ? opts.suffixText : null;
      let suffixStyle = opts && 'suffixStyle' in opts ? opts.suffixStyle : null;
      let suffixIconColor = opts && 'suffixIconColor' in opts ? opts.suffixIconColor : null;
      let suffixIconConstraints = opts && 'suffixIconConstraints' in opts ? opts.suffixIconConstraints : null;
      let counter = opts && 'counter' in opts ? opts.counter : null;
      let counterText = opts && 'counterText' in opts ? opts.counterText : null;
      let counterStyle = opts && 'counterStyle' in opts ? opts.counterStyle : null;
      let filled = opts && 'filled' in opts ? opts.filled : null;
      let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
      let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
      let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
      let errorBorder = opts && 'errorBorder' in opts ? opts.errorBorder : null;
      let focusedBorder = opts && 'focusedBorder' in opts ? opts.focusedBorder : null;
      let focusedErrorBorder = opts && 'focusedErrorBorder' in opts ? opts.focusedErrorBorder : null;
      let disabledBorder = opts && 'disabledBorder' in opts ? opts.disabledBorder : null;
      let enabledBorder = opts && 'enabledBorder' in opts ? opts.enabledBorder : null;
      let border = opts && 'border' in opts ? opts.border : null;
      let enabled = opts && 'enabled' in opts ? opts.enabled : null;
      let semanticCounterText = opts && 'semanticCounterText' in opts ? opts.semanticCounterText : null;
      let alignLabelWithHint = opts && 'alignLabelWithHint' in opts ? opts.alignLabelWithHint : null;
      let constraints = opts && 'constraints' in opts ? opts.constraints : null;
      return new input_decorator.InputDecoration.new({icon: (t49 = icon, t49 == null ? this.icon : t49), iconColor: (t49$ = iconColor, t49$ == null ? this.iconColor : t49$), label: (t49$0 = label, t49$0 == null ? this.label : t49$0), labelText: (t49$1 = labelText, t49$1 == null ? this.labelText : t49$1), labelStyle: (t49$2 = labelStyle, t49$2 == null ? this.labelStyle : t49$2), floatingLabelStyle: (t49$3 = floatingLabelStyle, t49$3 == null ? this.floatingLabelStyle : t49$3), helperText: (t49$4 = helperText, t49$4 == null ? this.helperText : t49$4), helperStyle: (t49$5 = helperStyle, t49$5 == null ? this.helperStyle : t49$5), helperMaxLines: (t49$6 = helperMaxLines, t49$6 == null ? this.helperMaxLines : t49$6), hintText: (t49$7 = hintText, t49$7 == null ? this.hintText : t49$7), hintStyle: (t49$8 = hintStyle, t49$8 == null ? this.hintStyle : t49$8), hintTextDirection: (t49$9 = hintTextDirection, t49$9 == null ? this.hintTextDirection : t49$9), hintMaxLines: (t49$10 = hintMaxLines, t49$10 == null ? this.hintMaxLines : t49$10), errorText: (t49$11 = errorText, t49$11 == null ? this.errorText : t49$11), errorStyle: (t49$12 = errorStyle, t49$12 == null ? this.errorStyle : t49$12), errorMaxLines: (t49$13 = errorMaxLines, t49$13 == null ? this.errorMaxLines : t49$13), floatingLabelBehavior: (t49$14 = floatingLabelBehavior, t49$14 == null ? this.floatingLabelBehavior : t49$14), floatingLabelAlignment: (t49$15 = floatingLabelAlignment, t49$15 == null ? this.floatingLabelAlignment : t49$15), isCollapsed: (t49$16 = isCollapsed, t49$16 == null ? this.isCollapsed : t49$16), isDense: (t49$17 = isDense, t49$17 == null ? this.isDense : t49$17), contentPadding: (t49$18 = contentPadding, t49$18 == null ? this.contentPadding : t49$18), prefixIcon: (t49$19 = prefixIcon, t49$19 == null ? this.prefixIcon : t49$19), prefix: (t49$20 = prefix, t49$20 == null ? this.prefix : t49$20), prefixText: (t49$21 = prefixText, t49$21 == null ? this.prefixText : t49$21), prefixStyle: (t49$22 = prefixStyle, t49$22 == null ? this.prefixStyle : t49$22), prefixIconColor: (t49$23 = prefixIconColor, t49$23 == null ? this.prefixIconColor : t49$23), prefixIconConstraints: (t49$24 = prefixIconConstraints, t49$24 == null ? this.prefixIconConstraints : t49$24), suffixIcon: (t49$25 = suffixIcon, t49$25 == null ? this.suffixIcon : t49$25), suffix: (t49$26 = suffix, t49$26 == null ? this.suffix : t49$26), suffixText: (t49$27 = suffixText, t49$27 == null ? this.suffixText : t49$27), suffixStyle: (t49$28 = suffixStyle, t49$28 == null ? this.suffixStyle : t49$28), suffixIconColor: (t49$29 = suffixIconColor, t49$29 == null ? this.suffixIconColor : t49$29), suffixIconConstraints: (t49$30 = suffixIconConstraints, t49$30 == null ? this.suffixIconConstraints : t49$30), counter: (t49$31 = counter, t49$31 == null ? this.counter : t49$31), counterText: (t49$32 = counterText, t49$32 == null ? this.counterText : t49$32), counterStyle: (t49$33 = counterStyle, t49$33 == null ? this.counterStyle : t49$33), filled: (t49$34 = filled, t49$34 == null ? this.filled : t49$34), fillColor: (t49$35 = fillColor, t49$35 == null ? this.fillColor : t49$35), focusColor: (t49$36 = focusColor, t49$36 == null ? this.focusColor : t49$36), hoverColor: (t49$37 = hoverColor, t49$37 == null ? this.hoverColor : t49$37), errorBorder: (t49$38 = errorBorder, t49$38 == null ? this.errorBorder : t49$38), focusedBorder: (t49$39 = focusedBorder, t49$39 == null ? this.focusedBorder : t49$39), focusedErrorBorder: (t49$40 = focusedErrorBorder, t49$40 == null ? this.focusedErrorBorder : t49$40), disabledBorder: (t49$41 = disabledBorder, t49$41 == null ? this.disabledBorder : t49$41), enabledBorder: (t49$42 = enabledBorder, t49$42 == null ? this.enabledBorder : t49$42), border: (t49$43 = border, t49$43 == null ? this.border : t49$43), enabled: (t49$44 = enabled, t49$44 == null ? this.enabled : t49$44), semanticCounterText: (t49$45 = semanticCounterText, t49$45 == null ? this.semanticCounterText : t49$45), alignLabelWithHint: (t49$46 = alignLabelWithHint, t49$46 == null ? this.alignLabelWithHint : t49$46), constraints: (t49$47 = constraints, t49$47 == null ? this.constraints : t49$47)});
    }
    applyDefaults(theme) {
      let t49, t49$, t49$0, t49$1, t49$2, t49$3, t49$4, t49$5, t49$6, t49$7, t49$8, t49$9, t49$10, t49$11, t49$12, t49$13, t49$14, t49$15, t49$16, t49$17, t49$18, t49$19, t49$20, t49$21, t49$22, t49$23;
      return this.copyWith({labelStyle: (t49 = this.labelStyle, t49 == null ? theme.labelStyle : t49), floatingLabelStyle: (t49$ = this.floatingLabelStyle, t49$ == null ? theme.floatingLabelStyle : t49$), helperStyle: (t49$0 = this.helperStyle, t49$0 == null ? theme.helperStyle : t49$0), helperMaxLines: (t49$1 = this.helperMaxLines, t49$1 == null ? theme.helperMaxLines : t49$1), hintStyle: (t49$2 = this.hintStyle, t49$2 == null ? theme.hintStyle : t49$2), errorStyle: (t49$3 = this.errorStyle, t49$3 == null ? theme.errorStyle : t49$3), errorMaxLines: (t49$4 = this.errorMaxLines, t49$4 == null ? theme.errorMaxLines : t49$4), floatingLabelBehavior: (t49$5 = this.floatingLabelBehavior, t49$5 == null ? theme.floatingLabelBehavior : t49$5), floatingLabelAlignment: (t49$6 = this.floatingLabelAlignment, t49$6 == null ? theme.floatingLabelAlignment : t49$6), isCollapsed: this.isCollapsed, isDense: (t49$7 = this.isDense, t49$7 == null ? theme.isDense : t49$7), contentPadding: (t49$8 = this.contentPadding, t49$8 == null ? theme.contentPadding : t49$8), prefixStyle: (t49$9 = this.prefixStyle, t49$9 == null ? theme.prefixStyle : t49$9), suffixStyle: (t49$10 = this.suffixStyle, t49$10 == null ? theme.suffixStyle : t49$10), counterStyle: (t49$11 = this.counterStyle, t49$11 == null ? theme.counterStyle : t49$11), filled: (t49$12 = this.filled, t49$12 == null ? theme.filled : t49$12), fillColor: (t49$13 = this.fillColor, t49$13 == null ? theme.fillColor : t49$13), focusColor: (t49$14 = this.focusColor, t49$14 == null ? theme.focusColor : t49$14), hoverColor: (t49$15 = this.hoverColor, t49$15 == null ? theme.hoverColor : t49$15), errorBorder: (t49$16 = this.errorBorder, t49$16 == null ? theme.errorBorder : t49$16), focusedBorder: (t49$17 = this.focusedBorder, t49$17 == null ? theme.focusedBorder : t49$17), focusedErrorBorder: (t49$18 = this.focusedErrorBorder, t49$18 == null ? theme.focusedErrorBorder : t49$18), disabledBorder: (t49$19 = this.disabledBorder, t49$19 == null ? theme.disabledBorder : t49$19), enabledBorder: (t49$20 = this.enabledBorder, t49$20 == null ? theme.enabledBorder : t49$20), border: (t49$21 = this.border, t49$21 == null ? theme.border : t49$21), alignLabelWithHint: (t49$22 = this.alignLabelWithHint, t49$22 == null ? theme.alignLabelWithHint : t49$22), constraints: (t49$23 = this.constraints, t49$23 == null ? theme.constraints : t49$23)});
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      if (!other[S.$runtimeType]._equals(this[S.$runtimeType])) {
        return false;
      }
      return input_decorator.InputDecoration.is(other) && dart.equals(other.icon, this.icon) && dart.equals(other.iconColor, this.iconColor) && dart.equals(other.label, this.label) && other.labelText == this.labelText && dart.equals(other.labelStyle, this.labelStyle) && dart.equals(other.floatingLabelStyle, this.floatingLabelStyle) && other.helperText == this.helperText && dart.equals(other.helperStyle, this.helperStyle) && other.helperMaxLines == this.helperMaxLines && other.hintText == this.hintText && dart.equals(other.hintStyle, this.hintStyle) && other.hintTextDirection == this.hintTextDirection && other.hintMaxLines == this.hintMaxLines && other.errorText == this.errorText && dart.equals(other.errorStyle, this.errorStyle) && other.errorMaxLines == this.errorMaxLines && other.floatingLabelBehavior == this.floatingLabelBehavior && dart.equals(other.floatingLabelAlignment, this.floatingLabelAlignment) && other.isDense == this.isDense && dart.equals(other.contentPadding, this.contentPadding) && other.isCollapsed === this.isCollapsed && dart.equals(other.prefixIcon, this.prefixIcon) && dart.equals(other.prefixIconColor, this.prefixIconColor) && dart.equals(other.prefix, this.prefix) && other.prefixText == this.prefixText && dart.equals(other.prefixStyle, this.prefixStyle) && dart.equals(other.prefixIconConstraints, this.prefixIconConstraints) && dart.equals(other.suffixIcon, this.suffixIcon) && dart.equals(other.suffixIconColor, this.suffixIconColor) && dart.equals(other.suffix, this.suffix) && other.suffixText == this.suffixText && dart.equals(other.suffixStyle, this.suffixStyle) && dart.equals(other.suffixIconConstraints, this.suffixIconConstraints) && dart.equals(other.counter, this.counter) && other.counterText == this.counterText && dart.equals(other.counterStyle, this.counterStyle) && other.filled == this.filled && dart.equals(other.fillColor, this.fillColor) && dart.equals(other.focusColor, this.focusColor) && dart.equals(other.hoverColor, this.hoverColor) && dart.equals(other.errorBorder, this.errorBorder) && dart.equals(other.focusedBorder, this.focusedBorder) && dart.equals(other.focusedErrorBorder, this.focusedErrorBorder) && dart.equals(other.disabledBorder, this.disabledBorder) && dart.equals(other.enabledBorder, this.enabledBorder) && dart.equals(other.border, this.border) && other.enabled === this.enabled && other.semanticCounterText == this.semanticCounterText && other.alignLabelWithHint == this.alignLabelWithHint && dart.equals(other.constraints, this.constraints);
    }
    get hashCode() {
      let values = T$.JSArrayOfObjectN().of([this.icon, this.iconColor, this.label, this.labelText, this.floatingLabelStyle, this.labelStyle, this.helperText, this.helperStyle, this.helperMaxLines, this.hintText, this.hintStyle, this.hintTextDirection, this.hintMaxLines, this.errorText, this.errorStyle, this.errorMaxLines, this.floatingLabelBehavior, this.floatingLabelAlignment, this.isDense, this.contentPadding, this.isCollapsed, this.filled, this.fillColor, this.focusColor, this.hoverColor, this.prefixIcon, this.prefixIconColor, this.prefix, this.prefixText, this.prefixStyle, this.prefixIconConstraints, this.suffixIcon, this.suffixIconColor, this.suffix, this.suffixText, this.suffixStyle, this.suffixIconConstraints, this.counter, this.counterText, this.counterStyle, this.errorBorder, this.focusedBorder, this.focusedErrorBorder, this.disabledBorder, this.enabledBorder, this.border, this.enabled, this.semanticCounterText, this.alignLabelWithHint, this.constraints]);
      return core.Object.hashAll(values);
    }
    toString() {
      let t50, t50$;
      let description = (() => {
        let t49 = T$.JSArrayOfString().of([]);
        if (this.icon != null) t49.push("icon: " + dart.str(this.icon));
        if (this.iconColor != null) t49.push("iconColor: " + dart.str(this.iconColor));
        if (this.label != null) t49.push("label: " + dart.str(this.label));
        if (this.labelText != null) t49.push("labelText: \"" + dart.str(this.labelText) + "\"");
        if (this.floatingLabelStyle != null) t49.push("floatingLabelStyle: \"" + dart.str(this.floatingLabelStyle) + "\"");
        if (this.helperText != null) t49.push("helperText: \"" + dart.str(this.helperText) + "\"");
        if (this.helperMaxLines != null) t49.push("helperMaxLines: \"" + dart.str(this.helperMaxLines) + "\"");
        if (this.hintText != null) t49.push("hintText: \"" + dart.str(this.hintText) + "\"");
        if (this.hintMaxLines != null) t49.push("hintMaxLines: \"" + dart.str(this.hintMaxLines) + "\"");
        if (this.errorText != null) t49.push("errorText: \"" + dart.str(this.errorText) + "\"");
        if (this.errorStyle != null) t49.push("errorStyle: \"" + dart.str(this.errorStyle) + "\"");
        if (this.errorMaxLines != null) t49.push("errorMaxLines: \"" + dart.str(this.errorMaxLines) + "\"");
        if (this.floatingLabelBehavior != null) t49.push("floatingLabelBehavior: " + dart.str(this.floatingLabelBehavior));
        if (this.floatingLabelAlignment != null) t49.push("floatingLabelAlignment: " + dart.str(this.floatingLabelAlignment));
        if (dart.test((t50 = this.isDense, t50 == null ? false : t50))) t49.push("isDense: " + dart.str(this.isDense));
        if (this.contentPadding != null) t49.push("contentPadding: " + dart.str(this.contentPadding));
        if (this.isCollapsed) t49.push("isCollapsed: " + dart.str(this.isCollapsed));
        if (this.prefixIcon != null) t49.push("prefixIcon: " + dart.str(this.prefixIcon));
        if (this.prefixIconColor != null) t49.push("prefixIconColor: " + dart.str(this.prefixIconColor));
        if (this.prefix != null) t49.push("prefix: " + dart.str(this.prefix));
        if (this.prefixText != null) t49.push("prefixText: " + dart.str(this.prefixText));
        if (this.prefixStyle != null) t49.push("prefixStyle: " + dart.str(this.prefixStyle));
        if (this.prefixIconConstraints != null) t49.push("prefixIconConstraints: " + dart.str(this.prefixIconConstraints));
        if (this.suffixIcon != null) t49.push("suffixIcon: " + dart.str(this.suffixIcon));
        if (this.suffixIconColor != null) t49.push("suffixIconColor: " + dart.str(this.suffixIconColor));
        if (this.suffix != null) t49.push("suffix: " + dart.str(this.suffix));
        if (this.suffixText != null) t49.push("suffixText: " + dart.str(this.suffixText));
        if (this.suffixStyle != null) t49.push("suffixStyle: " + dart.str(this.suffixStyle));
        if (this.suffixIconConstraints != null) t49.push("suffixIconConstraints: " + dart.str(this.suffixIconConstraints));
        if (this.counter != null) t49.push("counter: " + dart.str(this.counter));
        if (this.counterText != null) t49.push("counterText: " + dart.str(this.counterText));
        if (this.counterStyle != null) t49.push("counterStyle: " + dart.str(this.counterStyle));
        if (dart.test((t50$ = this.filled, t50$ == null ? false : t50$))) t49.push("filled: true");
        if (this.fillColor != null) t49.push("fillColor: " + dart.str(this.fillColor));
        if (this.focusColor != null) t49.push("focusColor: " + dart.str(this.focusColor));
        if (this.hoverColor != null) t49.push("hoverColor: " + dart.str(this.hoverColor));
        if (this.errorBorder != null) t49.push("errorBorder: " + dart.str(this.errorBorder));
        if (this.focusedBorder != null) t49.push("focusedBorder: " + dart.str(this.focusedBorder));
        if (this.focusedErrorBorder != null) t49.push("focusedErrorBorder: " + dart.str(this.focusedErrorBorder));
        if (this.disabledBorder != null) t49.push("disabledBorder: " + dart.str(this.disabledBorder));
        if (this.enabledBorder != null) t49.push("enabledBorder: " + dart.str(this.enabledBorder));
        if (this.border != null) t49.push("border: " + dart.str(this.border));
        if (!this.enabled) t49.push("enabled: false");
        if (this.semanticCounterText != null) t49.push("semanticCounterText: " + dart.str(this.semanticCounterText));
        if (this.alignLabelWithHint != null) t49.push("alignLabelWithHint: " + dart.str(this.alignLabelWithHint));
        if (this.constraints != null) t49.push("constraints: " + dart.str(this.constraints));
        return t49;
      })();
      return "InputDecoration(" + description[S$.$join](", ") + ")";
    }
  };
  (input_decorator.InputDecoration.new = function(opts) {
    let icon = opts && 'icon' in opts ? opts.icon : null;
    let iconColor = opts && 'iconColor' in opts ? opts.iconColor : null;
    let label = opts && 'label' in opts ? opts.label : null;
    let labelText = opts && 'labelText' in opts ? opts.labelText : null;
    let labelStyle = opts && 'labelStyle' in opts ? opts.labelStyle : null;
    let floatingLabelStyle = opts && 'floatingLabelStyle' in opts ? opts.floatingLabelStyle : null;
    let helperText = opts && 'helperText' in opts ? opts.helperText : null;
    let helperStyle = opts && 'helperStyle' in opts ? opts.helperStyle : null;
    let helperMaxLines = opts && 'helperMaxLines' in opts ? opts.helperMaxLines : null;
    let hintText = opts && 'hintText' in opts ? opts.hintText : null;
    let hintStyle = opts && 'hintStyle' in opts ? opts.hintStyle : null;
    let hintTextDirection = opts && 'hintTextDirection' in opts ? opts.hintTextDirection : null;
    let hintMaxLines = opts && 'hintMaxLines' in opts ? opts.hintMaxLines : null;
    let errorText = opts && 'errorText' in opts ? opts.errorText : null;
    let errorStyle = opts && 'errorStyle' in opts ? opts.errorStyle : null;
    let errorMaxLines = opts && 'errorMaxLines' in opts ? opts.errorMaxLines : null;
    let floatingLabelBehavior = opts && 'floatingLabelBehavior' in opts ? opts.floatingLabelBehavior : null;
    let floatingLabelAlignment = opts && 'floatingLabelAlignment' in opts ? opts.floatingLabelAlignment : null;
    let isCollapsed = opts && 'isCollapsed' in opts ? opts.isCollapsed : false;
    let isDense = opts && 'isDense' in opts ? opts.isDense : null;
    let contentPadding = opts && 'contentPadding' in opts ? opts.contentPadding : null;
    let prefixIcon = opts && 'prefixIcon' in opts ? opts.prefixIcon : null;
    let prefixIconConstraints = opts && 'prefixIconConstraints' in opts ? opts.prefixIconConstraints : null;
    let prefix = opts && 'prefix' in opts ? opts.prefix : null;
    let prefixText = opts && 'prefixText' in opts ? opts.prefixText : null;
    let prefixStyle = opts && 'prefixStyle' in opts ? opts.prefixStyle : null;
    let prefixIconColor = opts && 'prefixIconColor' in opts ? opts.prefixIconColor : null;
    let suffixIcon = opts && 'suffixIcon' in opts ? opts.suffixIcon : null;
    let suffix = opts && 'suffix' in opts ? opts.suffix : null;
    let suffixText = opts && 'suffixText' in opts ? opts.suffixText : null;
    let suffixStyle = opts && 'suffixStyle' in opts ? opts.suffixStyle : null;
    let suffixIconColor = opts && 'suffixIconColor' in opts ? opts.suffixIconColor : null;
    let suffixIconConstraints = opts && 'suffixIconConstraints' in opts ? opts.suffixIconConstraints : null;
    let counter = opts && 'counter' in opts ? opts.counter : null;
    let counterText = opts && 'counterText' in opts ? opts.counterText : null;
    let counterStyle = opts && 'counterStyle' in opts ? opts.counterStyle : null;
    let filled = opts && 'filled' in opts ? opts.filled : null;
    let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let errorBorder = opts && 'errorBorder' in opts ? opts.errorBorder : null;
    let focusedBorder = opts && 'focusedBorder' in opts ? opts.focusedBorder : null;
    let focusedErrorBorder = opts && 'focusedErrorBorder' in opts ? opts.focusedErrorBorder : null;
    let disabledBorder = opts && 'disabledBorder' in opts ? opts.disabledBorder : null;
    let enabledBorder = opts && 'enabledBorder' in opts ? opts.enabledBorder : null;
    let border = opts && 'border' in opts ? opts.border : null;
    let enabled = opts && 'enabled' in opts ? opts.enabled : true;
    let semanticCounterText = opts && 'semanticCounterText' in opts ? opts.semanticCounterText : null;
    let alignLabelWithHint = opts && 'alignLabelWithHint' in opts ? opts.alignLabelWithHint : null;
    let constraints = opts && 'constraints' in opts ? opts.constraints : null;
    this[S$.icon$7] = icon;
    this[S$.iconColor] = iconColor;
    this[S$.label$7] = label;
    this[S$.labelText] = labelText;
    this[S$.labelStyle$3] = labelStyle;
    this[S$.floatingLabelStyle] = floatingLabelStyle;
    this[S$.helperText$1] = helperText;
    this[S$.helperStyle$1] = helperStyle;
    this[S$.helperMaxLines$1] = helperMaxLines;
    this[S$.hintText] = hintText;
    this[S$.hintStyle] = hintStyle;
    this[S$.hintTextDirection] = hintTextDirection;
    this[S$.hintMaxLines] = hintMaxLines;
    this[S$.errorText$1] = errorText;
    this[S$.errorStyle$1] = errorStyle;
    this[S$.errorMaxLines$1] = errorMaxLines;
    this[S$.floatingLabelBehavior] = floatingLabelBehavior;
    this[S$.floatingLabelAlignment$1] = floatingLabelAlignment;
    this[S$.isCollapsed$1] = isCollapsed;
    this[S$.isDense$1] = isDense;
    this[S$.contentPadding$1] = contentPadding;
    this[S$.prefixIcon$1] = prefixIcon;
    this[S$.prefixIconConstraints] = prefixIconConstraints;
    this[S$.prefix$1] = prefix;
    this[S$.prefixText] = prefixText;
    this[S$.prefixStyle] = prefixStyle;
    this[S$.prefixIconColor] = prefixIconColor;
    this[S$.suffixIcon$1] = suffixIcon;
    this[S$.suffix$1] = suffix;
    this[S$.suffixText] = suffixText;
    this[S$.suffixStyle] = suffixStyle;
    this[S$.suffixIconColor] = suffixIconColor;
    this[S$.suffixIconConstraints] = suffixIconConstraints;
    this[S$.counter$1] = counter;
    this[S$.counterText] = counterText;
    this[S$.counterStyle] = counterStyle;
    this[S$.filled] = filled;
    this[S$.fillColor$3] = fillColor;
    this[S$.focusColor$3] = focusColor;
    this[S$.hoverColor$4] = hoverColor;
    this[S$.errorBorder] = errorBorder;
    this[S$.focusedBorder] = focusedBorder;
    this[S$.focusedErrorBorder] = focusedErrorBorder;
    this[S$.disabledBorder] = disabledBorder;
    this[S$.enabledBorder] = enabledBorder;
    this[S$.border$2] = border;
    this[S$.enabled] = enabled;
    this[S$.semanticCounterText] = semanticCounterText;
    this[S$.alignLabelWithHint$1] = alignLabelWithHint;
    this[S$.constraints$2] = constraints;
    if (!(enabled !== null)) dart.assertFailed(null, I[57], 2525, 15, "enabled != null");
    if (!!(label != null && labelText != null)) dart.assertFailed("Declaring both label and labelText is not supported.", I[57], 2526, 15, "!(label != null && labelText != null)");
    if (!!(prefix != null && prefixText != null)) dart.assertFailed("Declaring both prefix and prefixText is not supported.", I[57], 2527, 15, "!(prefix != null && prefixText != null)");
    if (!!(suffix != null && suffixText != null)) dart.assertFailed("Declaring both suffix and suffixText is not supported.", I[57], 2528, 15, "!(suffix != null && suffixText != null)");
    ;
  }).prototype = input_decorator.InputDecoration.prototype;
  (input_decorator.InputDecoration.collapsed = function(opts) {
    let hintText = opts && 'hintText' in opts ? opts.hintText : null;
    let floatingLabelBehavior = opts && 'floatingLabelBehavior' in opts ? opts.floatingLabelBehavior : null;
    let floatingLabelAlignment = opts && 'floatingLabelAlignment' in opts ? opts.floatingLabelAlignment : null;
    let hintStyle = opts && 'hintStyle' in opts ? opts.hintStyle : null;
    let hintTextDirection = opts && 'hintTextDirection' in opts ? opts.hintTextDirection : null;
    let filled = opts && 'filled' in opts ? opts.filled : false;
    let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let border = opts && 'border' in opts ? opts.border : C[582] || CT.C582;
    let enabled = opts && 'enabled' in opts ? opts.enabled : true;
    this[S$.hintText] = hintText;
    this[S$.floatingLabelBehavior] = floatingLabelBehavior;
    this[S$.floatingLabelAlignment$1] = floatingLabelAlignment;
    this[S$.hintStyle] = hintStyle;
    this[S$.hintTextDirection] = hintTextDirection;
    this[S$.filled] = filled;
    this[S$.fillColor$3] = fillColor;
    this[S$.focusColor$3] = focusColor;
    this[S$.hoverColor$4] = hoverColor;
    this[S$.border$2] = border;
    this[S$.enabled] = enabled;
    if (!(enabled !== null)) dart.assertFailed(null, I[57], 2547, 15, "enabled != null");
    this[S$.icon$7] = null;
    this[S$.iconColor] = null;
    this[S$.label$7] = null;
    this[S$.labelText] = null;
    this[S$.labelStyle$3] = null;
    this[S$.floatingLabelStyle] = null;
    this[S$.helperText$1] = null;
    this[S$.helperStyle$1] = null;
    this[S$.helperMaxLines$1] = null;
    this[S$.hintMaxLines] = null;
    this[S$.errorText$1] = null;
    this[S$.errorStyle$1] = null;
    this[S$.errorMaxLines$1] = null;
    this[S$.isDense$1] = false;
    this[S$.contentPadding$1] = edge_insets.EdgeInsets.zero;
    this[S$.isCollapsed$1] = true;
    this[S$.prefixIcon$1] = null;
    this[S$.prefix$1] = null;
    this[S$.prefixText] = null;
    this[S$.prefixStyle] = null;
    this[S$.prefixIconColor] = null;
    this[S$.prefixIconConstraints] = null;
    this[S$.suffix$1] = null;
    this[S$.suffixIcon$1] = null;
    this[S$.suffixText] = null;
    this[S$.suffixStyle] = null;
    this[S$.suffixIconColor] = null;
    this[S$.suffixIconConstraints] = null;
    this[S$.counter$1] = null;
    this[S$.counterText] = null;
    this[S$.counterStyle] = null;
    this[S$.errorBorder] = null;
    this[S$.focusedBorder] = null;
    this[S$.focusedErrorBorder] = null;
    this[S$.disabledBorder] = null;
    this[S$.enabledBorder] = null;
    this[S$.semanticCounterText] = null;
    this[S$.alignLabelWithHint$1] = false;
    this[S$.constraints$2] = null;
    ;
  }).prototype = input_decorator.InputDecoration.prototype;
  dart.addTypeTests(input_decorator.InputDecoration);
  dart.addTypeCaches(input_decorator.InputDecoration);
  dart.setMethodSignature(input_decorator.InputDecoration, () => ({
    __proto__: dart.getMethods(input_decorator.InputDecoration.__proto__),
    copyWith: dart.fnType(input_decorator.InputDecoration, [], {alignLabelWithHint: dart.nullable(core.bool), border: dart.nullable(input_border.InputBorder), constraints: dart.nullable(box$.BoxConstraints), contentPadding: dart.nullable(edge_insets.EdgeInsetsGeometry), counter: dart.nullable(framework.Widget), counterStyle: dart.nullable(text_style.TextStyle), counterText: dart.nullable(core.String), disabledBorder: dart.nullable(input_border.InputBorder), enabled: dart.nullable(core.bool), enabledBorder: dart.nullable(input_border.InputBorder), errorBorder: dart.nullable(input_border.InputBorder), errorMaxLines: dart.nullable(core.int), errorStyle: dart.nullable(text_style.TextStyle), errorText: dart.nullable(core.String), fillColor: dart.nullable(ui.Color), filled: dart.nullable(core.bool), floatingLabelAlignment: dart.nullable(input_decorator.FloatingLabelAlignment), floatingLabelBehavior: dart.nullable(input_decorator.FloatingLabelBehavior), floatingLabelStyle: dart.nullable(text_style.TextStyle), focusColor: dart.nullable(ui.Color), focusedBorder: dart.nullable(input_border.InputBorder), focusedErrorBorder: dart.nullable(input_border.InputBorder), helperMaxLines: dart.nullable(core.int), helperStyle: dart.nullable(text_style.TextStyle), helperText: dart.nullable(core.String), hintMaxLines: dart.nullable(core.int), hintStyle: dart.nullable(text_style.TextStyle), hintText: dart.nullable(core.String), hintTextDirection: dart.nullable(ui.TextDirection), hoverColor: dart.nullable(ui.Color), icon: dart.nullable(framework.Widget), iconColor: dart.nullable(ui.Color), isCollapsed: dart.nullable(core.bool), isDense: dart.nullable(core.bool), label: dart.nullable(framework.Widget), labelStyle: dart.nullable(text_style.TextStyle), labelText: dart.nullable(core.String), prefix: dart.nullable(framework.Widget), prefixIcon: dart.nullable(framework.Widget), prefixIconColor: dart.nullable(ui.Color), prefixIconConstraints: dart.nullable(box$.BoxConstraints), prefixStyle: dart.nullable(text_style.TextStyle), prefixText: dart.nullable(core.String), semanticCounterText: dart.nullable(core.String), suffix: dart.nullable(framework.Widget), suffixIcon: dart.nullable(framework.Widget), suffixIconColor: dart.nullable(ui.Color), suffixIconConstraints: dart.nullable(box$.BoxConstraints), suffixStyle: dart.nullable(text_style.TextStyle), suffixText: dart.nullable(core.String)}, {}),
    applyDefaults: dart.fnType(input_decorator.InputDecoration, [input_decorator.InputDecorationTheme])
  }));
  dart.setLibraryUri(input_decorator.InputDecoration, I[56]);
  dart.setFieldSignature(input_decorator.InputDecoration, () => ({
    __proto__: dart.getFields(input_decorator.InputDecoration.__proto__),
    icon: dart.finalFieldType(dart.nullable(framework.Widget)),
    iconColor: dart.finalFieldType(dart.nullable(ui.Color)),
    label: dart.finalFieldType(dart.nullable(framework.Widget)),
    labelText: dart.finalFieldType(dart.nullable(core.String)),
    labelStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    floatingLabelStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    helperText: dart.finalFieldType(dart.nullable(core.String)),
    helperStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    helperMaxLines: dart.finalFieldType(dart.nullable(core.int)),
    hintText: dart.finalFieldType(dart.nullable(core.String)),
    hintStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    hintTextDirection: dart.finalFieldType(dart.nullable(ui.TextDirection)),
    hintMaxLines: dart.finalFieldType(dart.nullable(core.int)),
    errorText: dart.finalFieldType(dart.nullable(core.String)),
    errorStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    errorMaxLines: dart.finalFieldType(dart.nullable(core.int)),
    floatingLabelBehavior: dart.finalFieldType(dart.nullable(input_decorator.FloatingLabelBehavior)),
    floatingLabelAlignment: dart.finalFieldType(dart.nullable(input_decorator.FloatingLabelAlignment)),
    isDense: dart.finalFieldType(dart.nullable(core.bool)),
    contentPadding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    isCollapsed: dart.finalFieldType(core.bool),
    prefixIcon: dart.finalFieldType(dart.nullable(framework.Widget)),
    prefixIconConstraints: dart.finalFieldType(dart.nullable(box$.BoxConstraints)),
    prefix: dart.finalFieldType(dart.nullable(framework.Widget)),
    prefixText: dart.finalFieldType(dart.nullable(core.String)),
    prefixStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    prefixIconColor: dart.finalFieldType(dart.nullable(ui.Color)),
    suffixIcon: dart.finalFieldType(dart.nullable(framework.Widget)),
    suffix: dart.finalFieldType(dart.nullable(framework.Widget)),
    suffixText: dart.finalFieldType(dart.nullable(core.String)),
    suffixStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    suffixIconColor: dart.finalFieldType(dart.nullable(ui.Color)),
    suffixIconConstraints: dart.finalFieldType(dart.nullable(box$.BoxConstraints)),
    counterText: dart.finalFieldType(dart.nullable(core.String)),
    counter: dart.finalFieldType(dart.nullable(framework.Widget)),
    counterStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    filled: dart.finalFieldType(dart.nullable(core.bool)),
    fillColor: dart.finalFieldType(dart.nullable(ui.Color)),
    focusColor: dart.finalFieldType(dart.nullable(ui.Color)),
    hoverColor: dart.finalFieldType(dart.nullable(ui.Color)),
    errorBorder: dart.finalFieldType(dart.nullable(input_border.InputBorder)),
    focusedBorder: dart.finalFieldType(dart.nullable(input_border.InputBorder)),
    focusedErrorBorder: dart.finalFieldType(dart.nullable(input_border.InputBorder)),
    disabledBorder: dart.finalFieldType(dart.nullable(input_border.InputBorder)),
    enabledBorder: dart.finalFieldType(dart.nullable(input_border.InputBorder)),
    border: dart.finalFieldType(dart.nullable(input_border.InputBorder)),
    enabled: dart.finalFieldType(core.bool),
    semanticCounterText: dart.finalFieldType(dart.nullable(core.String)),
    alignLabelWithHint: dart.finalFieldType(dart.nullable(core.bool)),
    constraints: dart.finalFieldType(dart.nullable(box$.BoxConstraints))
  }));
  dart.defineExtensionMethods(input_decorator.InputDecoration, ['_equals', 'toString']);
  dart.defineExtensionAccessors(input_decorator.InputDecoration, ['hashCode']);
  const Object_Diagnosticable$36$15 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$15.new = function() {
  }).prototype = Object_Diagnosticable$36$15.prototype;
  dart.applyMixin(Object_Diagnosticable$36$15, diagnostics.Diagnosticable);
  input_decorator.InputDecorationTheme = class InputDecorationTheme extends Object_Diagnosticable$36$15 {
    get labelStyle() {
      return this[S$.labelStyle$4];
    }
    set labelStyle(value) {
      super.labelStyle = value;
    }
    get floatingLabelStyle() {
      return this[S$.floatingLabelStyle$1];
    }
    set floatingLabelStyle(value) {
      super.floatingLabelStyle = value;
    }
    get helperStyle() {
      return this[S$.helperStyle$2];
    }
    set helperStyle(value) {
      super.helperStyle = value;
    }
    get helperMaxLines() {
      return this[S$.helperMaxLines$2];
    }
    set helperMaxLines(value) {
      super.helperMaxLines = value;
    }
    get hintStyle() {
      return this[S$.hintStyle$1];
    }
    set hintStyle(value) {
      super.hintStyle = value;
    }
    get errorStyle() {
      return this[S$.errorStyle$2];
    }
    set errorStyle(value) {
      super.errorStyle = value;
    }
    get errorMaxLines() {
      return this[S$.errorMaxLines$2];
    }
    set errorMaxLines(value) {
      super.errorMaxLines = value;
    }
    get floatingLabelBehavior() {
      return this[S$.floatingLabelBehavior$1];
    }
    set floatingLabelBehavior(value) {
      super.floatingLabelBehavior = value;
    }
    get floatingLabelAlignment() {
      return this[S$.floatingLabelAlignment$2];
    }
    set floatingLabelAlignment(value) {
      super.floatingLabelAlignment = value;
    }
    get isDense() {
      return this[S$.isDense$2];
    }
    set isDense(value) {
      super.isDense = value;
    }
    get contentPadding() {
      return this[S$.contentPadding$2];
    }
    set contentPadding(value) {
      super.contentPadding = value;
    }
    get isCollapsed() {
      return this[S$.isCollapsed$2];
    }
    set isCollapsed(value) {
      super.isCollapsed = value;
    }
    get iconColor() {
      return this[S$.iconColor$1];
    }
    set iconColor(value) {
      super.iconColor = value;
    }
    get prefixStyle() {
      return this[S$.prefixStyle$1];
    }
    set prefixStyle(value) {
      super.prefixStyle = value;
    }
    get prefixIconColor() {
      return this[S$.prefixIconColor$1];
    }
    set prefixIconColor(value) {
      super.prefixIconColor = value;
    }
    get suffixStyle() {
      return this[S$.suffixStyle$1];
    }
    set suffixStyle(value) {
      super.suffixStyle = value;
    }
    get suffixIconColor() {
      return this[S$.suffixIconColor$1];
    }
    set suffixIconColor(value) {
      super.suffixIconColor = value;
    }
    get counterStyle() {
      return this[S$.counterStyle$1];
    }
    set counterStyle(value) {
      super.counterStyle = value;
    }
    get filled() {
      return this[S$.filled$1];
    }
    set filled(value) {
      super.filled = value;
    }
    get fillColor() {
      return this[S$.fillColor$4];
    }
    set fillColor(value) {
      super.fillColor = value;
    }
    get focusColor() {
      return this[S$.focusColor$4];
    }
    set focusColor(value) {
      super.focusColor = value;
    }
    get hoverColor() {
      return this[S$.hoverColor$5];
    }
    set hoverColor(value) {
      super.hoverColor = value;
    }
    get errorBorder() {
      return this[S$.errorBorder$1];
    }
    set errorBorder(value) {
      super.errorBorder = value;
    }
    get focusedBorder() {
      return this[S$.focusedBorder$1];
    }
    set focusedBorder(value) {
      super.focusedBorder = value;
    }
    get focusedErrorBorder() {
      return this[S$.focusedErrorBorder$1];
    }
    set focusedErrorBorder(value) {
      super.focusedErrorBorder = value;
    }
    get disabledBorder() {
      return this[S$.disabledBorder$1];
    }
    set disabledBorder(value) {
      super.disabledBorder = value;
    }
    get enabledBorder() {
      return this[S$.enabledBorder$1];
    }
    set enabledBorder(value) {
      super.enabledBorder = value;
    }
    get border() {
      return this[S$.border$3];
    }
    set border(value) {
      super.border = value;
    }
    get alignLabelWithHint() {
      return this[S$.alignLabelWithHint$2];
    }
    set alignLabelWithHint(value) {
      super.alignLabelWithHint = value;
    }
    get constraints() {
      return this[S$.constraints$3];
    }
    set constraints(value) {
      super.constraints = value;
    }
    static ['_#new#tearOff'](opts) {
      let labelStyle = opts && 'labelStyle' in opts ? opts.labelStyle : null;
      let floatingLabelStyle = opts && 'floatingLabelStyle' in opts ? opts.floatingLabelStyle : null;
      let helperStyle = opts && 'helperStyle' in opts ? opts.helperStyle : null;
      let helperMaxLines = opts && 'helperMaxLines' in opts ? opts.helperMaxLines : null;
      let hintStyle = opts && 'hintStyle' in opts ? opts.hintStyle : null;
      let errorStyle = opts && 'errorStyle' in opts ? opts.errorStyle : null;
      let errorMaxLines = opts && 'errorMaxLines' in opts ? opts.errorMaxLines : null;
      let floatingLabelBehavior = opts && 'floatingLabelBehavior' in opts ? opts.floatingLabelBehavior : C[523] || CT.C523;
      let floatingLabelAlignment = opts && 'floatingLabelAlignment' in opts ? opts.floatingLabelAlignment : C[525] || CT.C525;
      let isDense = opts && 'isDense' in opts ? opts.isDense : false;
      let contentPadding = opts && 'contentPadding' in opts ? opts.contentPadding : null;
      let isCollapsed = opts && 'isCollapsed' in opts ? opts.isCollapsed : false;
      let iconColor = opts && 'iconColor' in opts ? opts.iconColor : null;
      let prefixStyle = opts && 'prefixStyle' in opts ? opts.prefixStyle : null;
      let prefixIconColor = opts && 'prefixIconColor' in opts ? opts.prefixIconColor : null;
      let suffixStyle = opts && 'suffixStyle' in opts ? opts.suffixStyle : null;
      let suffixIconColor = opts && 'suffixIconColor' in opts ? opts.suffixIconColor : null;
      let counterStyle = opts && 'counterStyle' in opts ? opts.counterStyle : null;
      let filled = opts && 'filled' in opts ? opts.filled : false;
      let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
      let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
      let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
      let errorBorder = opts && 'errorBorder' in opts ? opts.errorBorder : null;
      let focusedBorder = opts && 'focusedBorder' in opts ? opts.focusedBorder : null;
      let focusedErrorBorder = opts && 'focusedErrorBorder' in opts ? opts.focusedErrorBorder : null;
      let disabledBorder = opts && 'disabledBorder' in opts ? opts.disabledBorder : null;
      let enabledBorder = opts && 'enabledBorder' in opts ? opts.enabledBorder : null;
      let border = opts && 'border' in opts ? opts.border : null;
      let alignLabelWithHint = opts && 'alignLabelWithHint' in opts ? opts.alignLabelWithHint : false;
      let constraints = opts && 'constraints' in opts ? opts.constraints : null;
      return new input_decorator.InputDecorationTheme.new({labelStyle: labelStyle, floatingLabelStyle: floatingLabelStyle, helperStyle: helperStyle, helperMaxLines: helperMaxLines, hintStyle: hintStyle, errorStyle: errorStyle, errorMaxLines: errorMaxLines, floatingLabelBehavior: floatingLabelBehavior, floatingLabelAlignment: floatingLabelAlignment, isDense: isDense, contentPadding: contentPadding, isCollapsed: isCollapsed, iconColor: iconColor, prefixStyle: prefixStyle, prefixIconColor: prefixIconColor, suffixStyle: suffixStyle, suffixIconColor: suffixIconColor, counterStyle: counterStyle, filled: filled, fillColor: fillColor, focusColor: focusColor, hoverColor: hoverColor, errorBorder: errorBorder, focusedBorder: focusedBorder, focusedErrorBorder: focusedErrorBorder, disabledBorder: disabledBorder, enabledBorder: enabledBorder, border: border, alignLabelWithHint: alignLabelWithHint, constraints: constraints});
    }
    copyWith(opts) {
      let t50, t50$, t50$0, t50$1, t50$2, t50$3, t50$4, t50$5, t50$6, t50$7, t50$8, t50$9, t50$10, t50$11, t50$12, t50$13, t50$14, t50$15, t50$16, t50$17, t50$18, t50$19, t50$20, t50$21, t50$22, t50$23, t50$24, t50$25, t50$26;
      let labelStyle = opts && 'labelStyle' in opts ? opts.labelStyle : null;
      let floatingLabelStyle = opts && 'floatingLabelStyle' in opts ? opts.floatingLabelStyle : null;
      let helperStyle = opts && 'helperStyle' in opts ? opts.helperStyle : null;
      let helperMaxLines = opts && 'helperMaxLines' in opts ? opts.helperMaxLines : null;
      let hintStyle = opts && 'hintStyle' in opts ? opts.hintStyle : null;
      let errorStyle = opts && 'errorStyle' in opts ? opts.errorStyle : null;
      let errorMaxLines = opts && 'errorMaxLines' in opts ? opts.errorMaxLines : null;
      let floatingLabelBehavior = opts && 'floatingLabelBehavior' in opts ? opts.floatingLabelBehavior : null;
      let floatingLabelAlignment = opts && 'floatingLabelAlignment' in opts ? opts.floatingLabelAlignment : null;
      let isDense = opts && 'isDense' in opts ? opts.isDense : null;
      let contentPadding = opts && 'contentPadding' in opts ? opts.contentPadding : null;
      let isCollapsed = opts && 'isCollapsed' in opts ? opts.isCollapsed : null;
      let iconColor = opts && 'iconColor' in opts ? opts.iconColor : null;
      let prefixStyle = opts && 'prefixStyle' in opts ? opts.prefixStyle : null;
      let prefixIconColor = opts && 'prefixIconColor' in opts ? opts.prefixIconColor : null;
      let suffixStyle = opts && 'suffixStyle' in opts ? opts.suffixStyle : null;
      let suffixIconColor = opts && 'suffixIconColor' in opts ? opts.suffixIconColor : null;
      let counterStyle = opts && 'counterStyle' in opts ? opts.counterStyle : null;
      let filled = opts && 'filled' in opts ? opts.filled : null;
      let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
      let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
      let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
      let errorBorder = opts && 'errorBorder' in opts ? opts.errorBorder : null;
      let focusedBorder = opts && 'focusedBorder' in opts ? opts.focusedBorder : null;
      let focusedErrorBorder = opts && 'focusedErrorBorder' in opts ? opts.focusedErrorBorder : null;
      let disabledBorder = opts && 'disabledBorder' in opts ? opts.disabledBorder : null;
      let enabledBorder = opts && 'enabledBorder' in opts ? opts.enabledBorder : null;
      let border = opts && 'border' in opts ? opts.border : null;
      let alignLabelWithHint = opts && 'alignLabelWithHint' in opts ? opts.alignLabelWithHint : null;
      let constraints = opts && 'constraints' in opts ? opts.constraints : null;
      return new input_decorator.InputDecorationTheme.new({labelStyle: (t50 = labelStyle, t50 == null ? this.labelStyle : t50), floatingLabelStyle: (t50$ = floatingLabelStyle, t50$ == null ? this.floatingLabelStyle : t50$), helperStyle: (t50$0 = helperStyle, t50$0 == null ? this.helperStyle : t50$0), helperMaxLines: (t50$1 = helperMaxLines, t50$1 == null ? this.helperMaxLines : t50$1), hintStyle: (t50$2 = hintStyle, t50$2 == null ? this.hintStyle : t50$2), errorStyle: (t50$3 = errorStyle, t50$3 == null ? this.errorStyle : t50$3), errorMaxLines: (t50$4 = errorMaxLines, t50$4 == null ? this.errorMaxLines : t50$4), floatingLabelBehavior: (t50$5 = floatingLabelBehavior, t50$5 == null ? this.floatingLabelBehavior : t50$5), floatingLabelAlignment: (t50$6 = floatingLabelAlignment, t50$6 == null ? this.floatingLabelAlignment : t50$6), isDense: (t50$7 = isDense, t50$7 == null ? this.isDense : t50$7), contentPadding: (t50$8 = contentPadding, t50$8 == null ? this.contentPadding : t50$8), iconColor: iconColor, isCollapsed: (t50$9 = isCollapsed, t50$9 == null ? this.isCollapsed : t50$9), prefixStyle: (t50$10 = prefixStyle, t50$10 == null ? this.prefixStyle : t50$10), prefixIconColor: (t50$11 = prefixIconColor, t50$11 == null ? this.prefixIconColor : t50$11), suffixStyle: (t50$12 = suffixStyle, t50$12 == null ? this.suffixStyle : t50$12), suffixIconColor: (t50$13 = suffixIconColor, t50$13 == null ? this.suffixIconColor : t50$13), counterStyle: (t50$14 = counterStyle, t50$14 == null ? this.counterStyle : t50$14), filled: (t50$15 = filled, t50$15 == null ? this.filled : t50$15), fillColor: (t50$16 = fillColor, t50$16 == null ? this.fillColor : t50$16), focusColor: (t50$17 = focusColor, t50$17 == null ? this.focusColor : t50$17), hoverColor: (t50$18 = hoverColor, t50$18 == null ? this.hoverColor : t50$18), errorBorder: (t50$19 = errorBorder, t50$19 == null ? this.errorBorder : t50$19), focusedBorder: (t50$20 = focusedBorder, t50$20 == null ? this.focusedBorder : t50$20), focusedErrorBorder: (t50$21 = focusedErrorBorder, t50$21 == null ? this.focusedErrorBorder : t50$21), disabledBorder: (t50$22 = disabledBorder, t50$22 == null ? this.disabledBorder : t50$22), enabledBorder: (t50$23 = enabledBorder, t50$23 == null ? this.enabledBorder : t50$23), border: (t50$24 = border, t50$24 == null ? this.border : t50$24), alignLabelWithHint: (t50$25 = alignLabelWithHint, t50$25 == null ? this.alignLabelWithHint : t50$25), constraints: (t50$26 = constraints, t50$26 == null ? this.constraints : t50$26)});
    }
    get hashCode() {
      return core.Object.hash(this.labelStyle, this.floatingLabelStyle, this.helperStyle, this.helperMaxLines, this.hintStyle, this.errorStyle, this.errorMaxLines, this.floatingLabelBehavior, this.floatingLabelAlignment, this.isDense, this.contentPadding, this.isCollapsed, this.iconColor, this.prefixStyle, this.prefixIconColor, this.suffixStyle, this.suffixIconColor, this.counterStyle, this.filled, core.Object.hash(this.fillColor, this.focusColor, this.hoverColor, this.errorBorder, this.focusedBorder, this.focusedErrorBorder, this.disabledBorder, this.enabledBorder, this.border, this.alignLabelWithHint, this.constraints));
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      if (!other[S.$runtimeType]._equals(this[S.$runtimeType])) {
        return false;
      }
      return input_decorator.InputDecorationTheme.is(other) && dart.equals(other.labelStyle, this.labelStyle) && dart.equals(other.floatingLabelStyle, this.floatingLabelStyle) && dart.equals(other.helperStyle, this.helperStyle) && other.helperMaxLines == this.helperMaxLines && dart.equals(other.hintStyle, this.hintStyle) && dart.equals(other.errorStyle, this.errorStyle) && other.errorMaxLines == this.errorMaxLines && other.isDense === this.isDense && dart.equals(other.contentPadding, this.contentPadding) && other.isCollapsed === this.isCollapsed && dart.equals(other.iconColor, this.iconColor) && dart.equals(other.prefixStyle, this.prefixStyle) && dart.equals(other.prefixIconColor, this.prefixIconColor) && dart.equals(other.suffixStyle, this.suffixStyle) && dart.equals(other.suffixIconColor, this.suffixIconColor) && dart.equals(other.counterStyle, this.counterStyle) && other.floatingLabelBehavior === this.floatingLabelBehavior && other.floatingLabelAlignment._equals(this.floatingLabelAlignment) && other.filled === this.filled && dart.equals(other.fillColor, this.fillColor) && dart.equals(other.focusColor, this.focusColor) && dart.equals(other.hoverColor, this.hoverColor) && dart.equals(other.errorBorder, this.errorBorder) && dart.equals(other.focusedBorder, this.focusedBorder) && dart.equals(other.focusedErrorBorder, this.focusedErrorBorder) && dart.equals(other.disabledBorder, this.disabledBorder) && dart.equals(other.enabledBorder, this.enabledBorder) && dart.equals(other.border, this.border) && other.alignLabelWithHint === this.alignLabelWithHint && dart.equals(other.constraints, this.constraints) && dart.equals(other.disabledBorder, this.disabledBorder);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      let defaultTheme = C[583] || CT.C583;
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("labelStyle", this.labelStyle, {defaultValue: defaultTheme.labelStyle}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("floatingLabelStyle", this.floatingLabelStyle, {defaultValue: defaultTheme.floatingLabelStyle}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("helperStyle", this.helperStyle, {defaultValue: defaultTheme.helperStyle}));
      properties.add(new diagnostics.IntProperty.new("helperMaxLines", this.helperMaxLines, {defaultValue: defaultTheme.helperMaxLines}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("hintStyle", this.hintStyle, {defaultValue: defaultTheme.hintStyle}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("errorStyle", this.errorStyle, {defaultValue: defaultTheme.errorStyle}));
      properties.add(new diagnostics.IntProperty.new("errorMaxLines", this.errorMaxLines, {defaultValue: defaultTheme.errorMaxLines}));
      properties.add(new (T$.DiagnosticsPropertyOfFloatingLabelBehavior()).new("floatingLabelBehavior", this.floatingLabelBehavior, {defaultValue: defaultTheme.floatingLabelBehavior}));
      properties.add(new (T$.DiagnosticsPropertyOfFloatingLabelAlignment()).new("floatingLabelAlignment", this.floatingLabelAlignment, {defaultValue: defaultTheme.floatingLabelAlignment}));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("isDense", this.isDense, {defaultValue: defaultTheme.isDense}));
      properties.add(new (T$.DiagnosticsPropertyOfEdgeInsetsGeometry()).new("contentPadding", this.contentPadding, {defaultValue: defaultTheme.contentPadding}));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("isCollapsed", this.isCollapsed, {defaultValue: defaultTheme.isCollapsed}));
      properties.add(new (T$.DiagnosticsPropertyOfColor()).new("iconColor", this.iconColor, {defaultValue: defaultTheme.iconColor}));
      properties.add(new (T$.DiagnosticsPropertyOfColor()).new("prefixIconColor", this.prefixIconColor, {defaultValue: defaultTheme.prefixIconColor}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("prefixStyle", this.prefixStyle, {defaultValue: defaultTheme.prefixStyle}));
      properties.add(new (T$.DiagnosticsPropertyOfColor()).new("suffixIconColor", this.suffixIconColor, {defaultValue: defaultTheme.suffixIconColor}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("suffixStyle", this.suffixStyle, {defaultValue: defaultTheme.suffixStyle}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("counterStyle", this.counterStyle, {defaultValue: defaultTheme.counterStyle}));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("filled", this.filled, {defaultValue: defaultTheme.filled}));
      properties.add(new colors.ColorProperty.new("fillColor", this.fillColor, {defaultValue: defaultTheme.fillColor}));
      properties.add(new colors.ColorProperty.new("focusColor", this.focusColor, {defaultValue: defaultTheme.focusColor}));
      properties.add(new colors.ColorProperty.new("hoverColor", this.hoverColor, {defaultValue: defaultTheme.hoverColor}));
      properties.add(new (T$.DiagnosticsPropertyOfInputBorder()).new("errorBorder", this.errorBorder, {defaultValue: defaultTheme.errorBorder}));
      properties.add(new (T$.DiagnosticsPropertyOfInputBorder()).new("focusedBorder", this.focusedBorder, {defaultValue: defaultTheme.focusedErrorBorder}));
      properties.add(new (T$.DiagnosticsPropertyOfInputBorder()).new("focusedErrorBorder", this.focusedErrorBorder, {defaultValue: defaultTheme.focusedErrorBorder}));
      properties.add(new (T$.DiagnosticsPropertyOfInputBorder()).new("disabledBorder", this.disabledBorder, {defaultValue: defaultTheme.disabledBorder}));
      properties.add(new (T$.DiagnosticsPropertyOfInputBorder()).new("enabledBorder", this.enabledBorder, {defaultValue: defaultTheme.enabledBorder}));
      properties.add(new (T$.DiagnosticsPropertyOfInputBorder()).new("border", this.border, {defaultValue: defaultTheme.border}));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("alignLabelWithHint", this.alignLabelWithHint, {defaultValue: defaultTheme.alignLabelWithHint}));
      properties.add(new (T$.DiagnosticsPropertyOfBoxConstraints()).new("constraints", this.constraints, {defaultValue: defaultTheme.constraints}));
    }
  };
  (input_decorator.InputDecorationTheme.new = function(opts) {
    let labelStyle = opts && 'labelStyle' in opts ? opts.labelStyle : null;
    let floatingLabelStyle = opts && 'floatingLabelStyle' in opts ? opts.floatingLabelStyle : null;
    let helperStyle = opts && 'helperStyle' in opts ? opts.helperStyle : null;
    let helperMaxLines = opts && 'helperMaxLines' in opts ? opts.helperMaxLines : null;
    let hintStyle = opts && 'hintStyle' in opts ? opts.hintStyle : null;
    let errorStyle = opts && 'errorStyle' in opts ? opts.errorStyle : null;
    let errorMaxLines = opts && 'errorMaxLines' in opts ? opts.errorMaxLines : null;
    let floatingLabelBehavior = opts && 'floatingLabelBehavior' in opts ? opts.floatingLabelBehavior : C[523] || CT.C523;
    let floatingLabelAlignment = opts && 'floatingLabelAlignment' in opts ? opts.floatingLabelAlignment : C[525] || CT.C525;
    let isDense = opts && 'isDense' in opts ? opts.isDense : false;
    let contentPadding = opts && 'contentPadding' in opts ? opts.contentPadding : null;
    let isCollapsed = opts && 'isCollapsed' in opts ? opts.isCollapsed : false;
    let iconColor = opts && 'iconColor' in opts ? opts.iconColor : null;
    let prefixStyle = opts && 'prefixStyle' in opts ? opts.prefixStyle : null;
    let prefixIconColor = opts && 'prefixIconColor' in opts ? opts.prefixIconColor : null;
    let suffixStyle = opts && 'suffixStyle' in opts ? opts.suffixStyle : null;
    let suffixIconColor = opts && 'suffixIconColor' in opts ? opts.suffixIconColor : null;
    let counterStyle = opts && 'counterStyle' in opts ? opts.counterStyle : null;
    let filled = opts && 'filled' in opts ? opts.filled : false;
    let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let errorBorder = opts && 'errorBorder' in opts ? opts.errorBorder : null;
    let focusedBorder = opts && 'focusedBorder' in opts ? opts.focusedBorder : null;
    let focusedErrorBorder = opts && 'focusedErrorBorder' in opts ? opts.focusedErrorBorder : null;
    let disabledBorder = opts && 'disabledBorder' in opts ? opts.disabledBorder : null;
    let enabledBorder = opts && 'enabledBorder' in opts ? opts.enabledBorder : null;
    let border = opts && 'border' in opts ? opts.border : null;
    let alignLabelWithHint = opts && 'alignLabelWithHint' in opts ? opts.alignLabelWithHint : false;
    let constraints = opts && 'constraints' in opts ? opts.constraints : null;
    this[S$.labelStyle$4] = labelStyle;
    this[S$.floatingLabelStyle$1] = floatingLabelStyle;
    this[S$.helperStyle$2] = helperStyle;
    this[S$.helperMaxLines$2] = helperMaxLines;
    this[S$.hintStyle$1] = hintStyle;
    this[S$.errorStyle$2] = errorStyle;
    this[S$.errorMaxLines$2] = errorMaxLines;
    this[S$.floatingLabelBehavior$1] = floatingLabelBehavior;
    this[S$.floatingLabelAlignment$2] = floatingLabelAlignment;
    this[S$.isDense$2] = isDense;
    this[S$.contentPadding$2] = contentPadding;
    this[S$.isCollapsed$2] = isCollapsed;
    this[S$.iconColor$1] = iconColor;
    this[S$.prefixStyle$1] = prefixStyle;
    this[S$.prefixIconColor$1] = prefixIconColor;
    this[S$.suffixStyle$1] = suffixStyle;
    this[S$.suffixIconColor$1] = suffixIconColor;
    this[S$.counterStyle$1] = counterStyle;
    this[S$.filled$1] = filled;
    this[S$.fillColor$4] = fillColor;
    this[S$.focusColor$4] = focusColor;
    this[S$.hoverColor$5] = hoverColor;
    this[S$.errorBorder$1] = errorBorder;
    this[S$.focusedBorder$1] = focusedBorder;
    this[S$.focusedErrorBorder$1] = focusedErrorBorder;
    this[S$.disabledBorder$1] = disabledBorder;
    this[S$.enabledBorder$1] = enabledBorder;
    this[S$.border$3] = border;
    this[S$.alignLabelWithHint$2] = alignLabelWithHint;
    this[S$.constraints$3] = constraints;
    if (!(isDense !== null)) dart.assertFailed(null, I[57], 3765, 15, "isDense != null");
    if (!(isCollapsed !== null)) dart.assertFailed(null, I[57], 3766, 15, "isCollapsed != null");
    if (!(floatingLabelAlignment !== null)) dart.assertFailed(null, I[57], 3767, 15, "floatingLabelAlignment != null");
    if (!(filled !== null)) dart.assertFailed(null, I[57], 3768, 15, "filled != null");
    if (!(alignLabelWithHint !== null)) dart.assertFailed(null, I[57], 3769, 15, "alignLabelWithHint != null");
    ;
  }).prototype = input_decorator.InputDecorationTheme.prototype;
  dart.addTypeTests(input_decorator.InputDecorationTheme);
  dart.addTypeCaches(input_decorator.InputDecorationTheme);
  dart.setMethodSignature(input_decorator.InputDecorationTheme, () => ({
    __proto__: dart.getMethods(input_decorator.InputDecorationTheme.__proto__),
    copyWith: dart.fnType(input_decorator.InputDecorationTheme, [], {alignLabelWithHint: dart.nullable(core.bool), border: dart.nullable(input_border.InputBorder), constraints: dart.nullable(box$.BoxConstraints), contentPadding: dart.nullable(edge_insets.EdgeInsetsGeometry), counterStyle: dart.nullable(text_style.TextStyle), disabledBorder: dart.nullable(input_border.InputBorder), enabledBorder: dart.nullable(input_border.InputBorder), errorBorder: dart.nullable(input_border.InputBorder), errorMaxLines: dart.nullable(core.int), errorStyle: dart.nullable(text_style.TextStyle), fillColor: dart.nullable(ui.Color), filled: dart.nullable(core.bool), floatingLabelAlignment: dart.nullable(input_decorator.FloatingLabelAlignment), floatingLabelBehavior: dart.nullable(input_decorator.FloatingLabelBehavior), floatingLabelStyle: dart.nullable(text_style.TextStyle), focusColor: dart.nullable(ui.Color), focusedBorder: dart.nullable(input_border.InputBorder), focusedErrorBorder: dart.nullable(input_border.InputBorder), helperMaxLines: dart.nullable(core.int), helperStyle: dart.nullable(text_style.TextStyle), hintStyle: dart.nullable(text_style.TextStyle), hoverColor: dart.nullable(ui.Color), iconColor: dart.nullable(ui.Color), isCollapsed: dart.nullable(core.bool), isDense: dart.nullable(core.bool), labelStyle: dart.nullable(text_style.TextStyle), prefixIconColor: dart.nullable(ui.Color), prefixStyle: dart.nullable(text_style.TextStyle), suffixIconColor: dart.nullable(ui.Color), suffixStyle: dart.nullable(text_style.TextStyle)}, {})
  }));
  dart.setLibraryUri(input_decorator.InputDecorationTheme, I[56]);
  dart.setFieldSignature(input_decorator.InputDecorationTheme, () => ({
    __proto__: dart.getFields(input_decorator.InputDecorationTheme.__proto__),
    labelStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    floatingLabelStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    helperStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    helperMaxLines: dart.finalFieldType(dart.nullable(core.int)),
    hintStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    errorStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    errorMaxLines: dart.finalFieldType(dart.nullable(core.int)),
    floatingLabelBehavior: dart.finalFieldType(input_decorator.FloatingLabelBehavior),
    floatingLabelAlignment: dart.finalFieldType(input_decorator.FloatingLabelAlignment),
    isDense: dart.finalFieldType(core.bool),
    contentPadding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    isCollapsed: dart.finalFieldType(core.bool),
    iconColor: dart.finalFieldType(dart.nullable(ui.Color)),
    prefixStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    prefixIconColor: dart.finalFieldType(dart.nullable(ui.Color)),
    suffixStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    suffixIconColor: dart.finalFieldType(dart.nullable(ui.Color)),
    counterStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    filled: dart.finalFieldType(core.bool),
    fillColor: dart.finalFieldType(dart.nullable(ui.Color)),
    focusColor: dart.finalFieldType(dart.nullable(ui.Color)),
    hoverColor: dart.finalFieldType(dart.nullable(ui.Color)),
    errorBorder: dart.finalFieldType(dart.nullable(input_border.InputBorder)),
    focusedBorder: dart.finalFieldType(dart.nullable(input_border.InputBorder)),
    focusedErrorBorder: dart.finalFieldType(dart.nullable(input_border.InputBorder)),
    disabledBorder: dart.finalFieldType(dart.nullable(input_border.InputBorder)),
    enabledBorder: dart.finalFieldType(dart.nullable(input_border.InputBorder)),
    border: dart.finalFieldType(dart.nullable(input_border.InputBorder)),
    alignLabelWithHint: dart.finalFieldType(core.bool),
    constraints: dart.finalFieldType(dart.nullable(box$.BoxConstraints))
  }));
  dart.defineExtensionMethods(input_decorator.InputDecorationTheme, ['_equals']);
  dart.defineExtensionAccessors(input_decorator.InputDecorationTheme, ['hashCode']);
  dart.defineLazy(input_decorator, {
    /*input_decorator._kTransitionDuration*/get _kTransitionDuration() {
      return C[160] || CT.C160;
    },
    /*input_decorator._kTransitionCurve*/get _kTransitionCurve() {
      return C[133] || CT.C133;
    },
    /*input_decorator._kFinalLabelScale*/get _kFinalLabelScale() {
      return 0.75;
    }
  }, false);
  ink_well.InteractiveInkFeatureFactory = class InteractiveInkFeatureFactory extends core.Object {};
  (ink_well.InteractiveInkFeatureFactory.new = function() {
    ;
  }).prototype = ink_well.InteractiveInkFeatureFactory.prototype;
  dart.addTypeTests(ink_well.InteractiveInkFeatureFactory);
  dart.addTypeCaches(ink_well.InteractiveInkFeatureFactory);
  dart.setLibraryUri(ink_well.InteractiveInkFeatureFactory, I[58]);
  ink_splash._InkSplashFactory = class _InkSplashFactory extends ink_well.InteractiveInkFeatureFactory {
    static ['_#new#tearOff']() {
      return new ink_splash._InkSplashFactory.new();
    }
    create(opts) {
      let controller = opts && 'controller' in opts ? opts.controller : null;
      let referenceBox = opts && 'referenceBox' in opts ? opts.referenceBox : null;
      let position = opts && 'position' in opts ? opts.position : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      let containedInkWell = opts && 'containedInkWell' in opts ? opts.containedInkWell : false;
      let rectCallback = opts && 'rectCallback' in opts ? opts.rectCallback : null;
      let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
      let customBorder = opts && 'customBorder' in opts ? opts.customBorder : null;
      let radius = opts && 'radius' in opts ? opts.radius : null;
      let onRemoved = opts && 'onRemoved' in opts ? opts.onRemoved : null;
      return new ink_splash.InkSplash.new({controller: controller, referenceBox: referenceBox, position: position, color: color, containedInkWell: containedInkWell, rectCallback: rectCallback, borderRadius: borderRadius, customBorder: customBorder, radius: radius, onRemoved: onRemoved, textDirection: textDirection});
    }
  };
  (ink_splash._InkSplashFactory.new = function() {
    ink_splash._InkSplashFactory.__proto__.new.call(this);
    ;
  }).prototype = ink_splash._InkSplashFactory.prototype;
  dart.addTypeTests(ink_splash._InkSplashFactory);
  dart.addTypeCaches(ink_splash._InkSplashFactory);
  dart.setMethodSignature(ink_splash._InkSplashFactory, () => ({
    __proto__: dart.getMethods(ink_splash._InkSplashFactory.__proto__),
    create: dart.fnType(ink_well.InteractiveInkFeature, [], {borderRadius: dart.nullable(border_radius.BorderRadius), containedInkWell: core.bool, customBorder: dart.nullable(borders.ShapeBorder), onRemoved: dart.nullable(dart.fnType(dart.void, [])), radius: dart.nullable(core.double), rectCallback: dart.nullable(dart.fnType(ui.Rect, []))}, {color: ui.Color, controller: material.MaterialInkController, position: ui.Offset, referenceBox: box$.RenderBox, textDirection: ui.TextDirection})
  }));
  dart.setLibraryUri(ink_splash._InkSplashFactory, I[59]);
  material.InkFeature = class InkFeature extends core.Object {
    get referenceBox() {
      return this[S$.referenceBox];
    }
    set referenceBox(value) {
      super.referenceBox = value;
    }
    get onRemoved() {
      return this[S$.onRemoved];
    }
    set onRemoved(value) {
      super.onRemoved = value;
    }
    get controller() {
      return this[S$._controller$3];
    }
    dispose() {
      let t50;
      if (!!this[S$._debugDisposed]) dart.assertFailed(null, I[62], 681, 12, "!_debugDisposed");
      if (!dart.fn(() => {
        this[S$._debugDisposed] = true;
        return true;
      }, T$.VoidTobool())()) dart.assertFailed(null, I[62], 682, 12, "() {\n      _debugDisposed = true;\n      return true;\n    }()");
      this[S$._controller$3][S$._removeFeature](this);
      t50 = this.onRemoved;
      t50 == null ? null : t50();
    }
    [S$._paint](canvas) {
      if (!this.referenceBox.attached) dart.assertFailed(null, I[62], 691, 12, "referenceBox.attached");
      if (!!this[S$._debugDisposed]) dart.assertFailed(null, I[62], 692, 12, "!_debugDisposed");
      let descendants = T$.JSArrayOfRenderObject().of([this.referenceBox]);
      let node = this.referenceBox;
      while (!node[S.$_equals](this[S$._controller$3])) {
        let childNode = node;
        node = object.RenderObject.as(dart.nullCheck(node.parent));
        if (!node.paintsChild(childNode)) {
          return;
        }
        descendants[S.$add](node);
      }
      let transform = vector_math_64.Matrix4.identity();
      if (!(descendants[S.$length] >= 2)) dart.assertFailed(null, I[62], 711, 12, "descendants.length >= 2");
      for (let index = descendants[S.$length] - 1; index > 0; index = index - 1) {
        descendants[S.$_get](index).applyPaintTransform(descendants[S.$_get](index - 1), transform);
      }
      this.paintFeature(canvas, transform);
    }
    toString() {
      return diagnostics.describeIdentity(this);
    }
  };
  (material.InkFeature.new = function(opts) {
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let referenceBox = opts && 'referenceBox' in opts ? opts.referenceBox : null;
    let onRemoved = opts && 'onRemoved' in opts ? opts.onRemoved : null;
    this[S$._debugDisposed] = false;
    this[S$.referenceBox] = referenceBox;
    this[S$.onRemoved] = onRemoved;
    if (!(controller !== null)) dart.assertFailed(null, I[62], 659, 15, "controller != null");
    if (!(referenceBox !== null)) dart.assertFailed(null, I[62], 660, 15, "referenceBox != null");
    this[S$._controller$3] = material._RenderInkFeatures.as(controller);
    ;
  }).prototype = material.InkFeature.prototype;
  dart.addTypeTests(material.InkFeature);
  dart.addTypeCaches(material.InkFeature);
  dart.setMethodSignature(material.InkFeature, () => ({
    __proto__: dart.getMethods(material.InkFeature.__proto__),
    dispose: dart.fnType(dart.void, []),
    [S$._paint]: dart.fnType(dart.void, [ui.Canvas])
  }));
  dart.setGetterSignature(material.InkFeature, () => ({
    __proto__: dart.getGetters(material.InkFeature.__proto__),
    controller: material.MaterialInkController
  }));
  dart.setLibraryUri(material.InkFeature, I[63]);
  dart.setFieldSignature(material.InkFeature, () => ({
    __proto__: dart.getFields(material.InkFeature.__proto__),
    [S$._controller$3]: dart.finalFieldType(material._RenderInkFeatures),
    referenceBox: dart.finalFieldType(box$.RenderBox),
    onRemoved: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    [S$._debugDisposed]: dart.fieldType(core.bool)
  }));
  dart.defineExtensionMethods(material.InkFeature, ['toString']);
  ink_well.InteractiveInkFeature = class InteractiveInkFeature extends material.InkFeature {
    confirm() {
    }
    cancel() {
    }
    get color() {
      return this[S$._color];
    }
    set color(value) {
      if (value._equals(this[S$._color])) {
        return;
      }
      this[S$._color] = value;
      this.controller.markNeedsPaint();
    }
    paintInkCircle(opts) {
      let canvas = opts && 'canvas' in opts ? opts.canvas : null;
      let transform = opts && 'transform' in opts ? opts.transform : null;
      let paint = opts && 'paint' in opts ? opts.paint : null;
      let center = opts && 'center' in opts ? opts.center : null;
      let radius = opts && 'radius' in opts ? opts.radius : null;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      let customBorder = opts && 'customBorder' in opts ? opts.customBorder : null;
      let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : C[584] || CT.C584;
      let clipCallback = opts && 'clipCallback' in opts ? opts.clipCallback : null;
      if (!(canvas !== null)) dart.assertFailed(null, I[61], 111, 12, "canvas != null");
      if (!(transform !== null)) dart.assertFailed(null, I[61], 112, 12, "transform != null");
      if (!(paint !== null)) dart.assertFailed(null, I[61], 113, 12, "paint != null");
      if (!(center !== null)) dart.assertFailed(null, I[61], 114, 12, "center != null");
      if (!(radius !== null)) dart.assertFailed(null, I[61], 115, 12, "radius != null");
      if (!(borderRadius !== null)) dart.assertFailed(null, I[61], 116, 12, "borderRadius != null");
      let originOffset = matrix_utils.MatrixUtils.getAsTranslation(transform);
      canvas.save();
      if (originOffset == null) {
        canvas.transform(transform.storage);
      } else {
        canvas.translate(originOffset.dx, originOffset.dy);
      }
      if (clipCallback != null) {
        let rect = clipCallback();
        if (customBorder != null) {
          canvas.clipPath(customBorder.getOuterPath(rect, {textDirection: textDirection}));
        } else if (!borderRadius._equals(border_radius.BorderRadius.zero)) {
          canvas.clipRRect(new ui.RRect.fromRectAndCorners(rect, {topLeft: borderRadius.topLeft, topRight: borderRadius.topRight, bottomLeft: borderRadius.bottomLeft, bottomRight: borderRadius.bottomRight}));
        } else {
          canvas.clipRect(rect);
        }
      }
      canvas.drawCircle(center, radius, paint);
      canvas.restore();
    }
  };
  (ink_well.InteractiveInkFeature.new = function(opts) {
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let referenceBox = opts && 'referenceBox' in opts ? opts.referenceBox : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let onRemoved = opts && 'onRemoved' in opts ? opts.onRemoved : null;
    if (!(controller !== null)) dart.assertFailed(null, I[61], 42, 15, "controller != null");
    if (!(referenceBox !== null)) dart.assertFailed(null, I[61], 43, 15, "referenceBox != null");
    this[S$._color] = color;
    ink_well.InteractiveInkFeature.__proto__.new.call(this, {controller: controller, referenceBox: referenceBox, onRemoved: onRemoved});
    ;
  }).prototype = ink_well.InteractiveInkFeature.prototype;
  dart.addTypeTests(ink_well.InteractiveInkFeature);
  dart.addTypeCaches(ink_well.InteractiveInkFeature);
  dart.setMethodSignature(ink_well.InteractiveInkFeature, () => ({
    __proto__: dart.getMethods(ink_well.InteractiveInkFeature.__proto__),
    confirm: dart.fnType(dart.void, []),
    cancel: dart.fnType(dart.void, []),
    paintInkCircle: dart.fnType(dart.void, [], {borderRadius: border_radius.BorderRadius, clipCallback: dart.nullable(dart.fnType(ui.Rect, [])), customBorder: dart.nullable(borders.ShapeBorder), textDirection: dart.nullable(ui.TextDirection)}, {canvas: ui.Canvas, center: ui.Offset, paint: ui.Paint, radius: core.double, transform: vector_math_64.Matrix4})
  }));
  dart.setGetterSignature(ink_well.InteractiveInkFeature, () => ({
    __proto__: dart.getGetters(ink_well.InteractiveInkFeature.__proto__),
    color: ui.Color
  }));
  dart.setSetterSignature(ink_well.InteractiveInkFeature, () => ({
    __proto__: dart.getSetters(ink_well.InteractiveInkFeature.__proto__),
    color: ui.Color
  }));
  dart.setLibraryUri(ink_well.InteractiveInkFeature, I[58]);
  dart.setFieldSignature(ink_well.InteractiveInkFeature, () => ({
    __proto__: dart.getFields(ink_well.InteractiveInkFeature.__proto__),
    [S$._color]: dart.fieldType(ui.Color)
  }));
  ink_splash.InkSplash = class InkSplash extends ink_well.InteractiveInkFeature {
    static ['_#new#tearOff'](opts) {
      let controller = opts && 'controller' in opts ? opts.controller : null;
      let referenceBox = opts && 'referenceBox' in opts ? opts.referenceBox : null;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      let position = opts && 'position' in opts ? opts.position : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let containedInkWell = opts && 'containedInkWell' in opts ? opts.containedInkWell : false;
      let rectCallback = opts && 'rectCallback' in opts ? opts.rectCallback : null;
      let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
      let customBorder = opts && 'customBorder' in opts ? opts.customBorder : null;
      let radius = opts && 'radius' in opts ? opts.radius : null;
      let onRemoved = opts && 'onRemoved' in opts ? opts.onRemoved : null;
      return new ink_splash.InkSplash.new({controller: controller, referenceBox: referenceBox, textDirection: textDirection, position: position, color: color, containedInkWell: containedInkWell, rectCallback: rectCallback, borderRadius: borderRadius, customBorder: customBorder, radius: radius, onRemoved: onRemoved});
    }
    get [S$._radius]() {
      let t50;
      t50 = this[S$.__InkSplash__radius];
      return t50 == null ? dart.throw(new _internal.LateError.fieldNI("_radius")) : t50;
    }
    set [S$._radius](library$32package$58flutter$47src$47material$47ink_splash$46dart$58$58_radius$35param) {
      this[S$.__InkSplash__radius] = library$32package$58flutter$47src$47material$47ink_splash$46dart$58$58_radius$35param;
    }
    get [S$._radiusController]() {
      let t50;
      t50 = this[S$.__InkSplash__radiusController];
      return t50 == null ? dart.throw(new _internal.LateError.fieldNI("_radiusController")) : t50;
    }
    set [S$._radiusController](library$32package$58flutter$47src$47material$47ink_splash$46dart$58$58_radiusController$35param) {
      this[S$.__InkSplash__radiusController] = library$32package$58flutter$47src$47material$47ink_splash$46dart$58$58_radiusController$35param;
    }
    get [S$._alpha]() {
      let t50;
      t50 = this[S$.__InkSplash__alpha];
      return t50 == null ? dart.throw(new _internal.LateError.fieldNI("_alpha")) : t50;
    }
    set [S$._alpha](library$32package$58flutter$47src$47material$47ink_splash$46dart$58$58_alpha$35param) {
      this[S$.__InkSplash__alpha] = library$32package$58flutter$47src$47material$47ink_splash$46dart$58$58_alpha$35param;
    }
    confirm() {
      let t50;
      let duration = (this[S$._targetRadius] / 1)[S.$floor]();
      t50 = this[S$._radiusController];
      (() => {
        t50.duration = new core.Duration.new({milliseconds: duration});
        t50.forward();
        return t50;
      })();
      dart.nullCheck(this[S$._alphaController]).forward();
    }
    cancel() {
      let t50;
      t50 = this[S$._alphaController];
      t50 == null ? null : t50.forward();
    }
    [S$._handleAlphaStatusChanged](status) {
      if (status === animation$.AnimationStatus.completed) {
        this.dispose();
      }
    }
    dispose() {
      this[S$._radiusController].dispose();
      dart.nullCheck(this[S$._alphaController]).dispose();
      this[S$._alphaController] = null;
      super.dispose();
    }
    paintFeature(canvas, transform) {
      let t50;
      let paint = (t50 = ui.Paint.new(), (() => {
        t50.color = this.color.withAlpha(this[S$._alpha].value);
        return t50;
      })());
      let center = this[S$._position];
      if (this[S$._repositionToReferenceBox]) {
        center = ui.Offset.lerp(center, this.referenceBox.size.center(ui.Offset.zero), this[S$._radiusController].value);
      }
      this.paintInkCircle({canvas: canvas, transform: transform, paint: paint, center: dart.nullCheck(center), textDirection: this[S$._textDirection$1], radius: this[S$._radius].value, customBorder: this[S$._customBorder], borderRadius: this[S$._borderRadius], clipCallback: this[S$._clipCallback]});
    }
  };
  (ink_splash.InkSplash.new = function(opts) {
    let t50, t50$, t50$0, t50$1;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let referenceBox = opts && 'referenceBox' in opts ? opts.referenceBox : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let position = opts && 'position' in opts ? opts.position : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let containedInkWell = opts && 'containedInkWell' in opts ? opts.containedInkWell : false;
    let rectCallback = opts && 'rectCallback' in opts ? opts.rectCallback : null;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
    let customBorder = opts && 'customBorder' in opts ? opts.customBorder : null;
    let radius = opts && 'radius' in opts ? opts.radius : null;
    let onRemoved = opts && 'onRemoved' in opts ? opts.onRemoved : null;
    this[S$.__InkSplash__radius] = null;
    this[S$.__InkSplash__radiusController] = null;
    this[S$.__InkSplash__alpha] = null;
    this[S$._alphaController] = null;
    if (!(textDirection !== null)) dart.assertFailed(null, I[60], 128, 15, "textDirection != null");
    this[S$._position] = position;
    this[S$._borderRadius] = (t50 = borderRadius, t50 == null ? border_radius.BorderRadius.zero : t50);
    this[S$._customBorder] = customBorder;
    this[S$._targetRadius] = (t50$ = radius, t50$ == null ? ink_splash._getTargetRadius(referenceBox, containedInkWell, rectCallback, dart.nullCheck(position)) : t50$);
    this[S$._clipCallback] = ink_splash._getClipCallback(referenceBox, containedInkWell, rectCallback);
    this[S$._repositionToReferenceBox] = !containedInkWell;
    this[S$._textDirection$1] = textDirection;
    ink_splash.InkSplash.__proto__.new.call(this, {controller: controller, color: color, referenceBox: referenceBox, onRemoved: onRemoved});
    if (!(this[S$._borderRadius] !== null)) dart.assertFailed(null, I[60], 137, 12, "_borderRadius != null");
    this[S$._radiusController] = (t50$0 = new animation_controller.AnimationController.new({duration: ink_splash._kUnconfirmedSplashDuration, vsync: controller.vsync}), (() => {
      t50$0.addListener(dart.bind(controller, 'markNeedsPaint'));
      t50$0.forward();
      return t50$0;
    })());
    this[S$._radius] = this[S$._radiusController].drive(core.double, new (T$.TweenOfdouble()).new({begin: 0, end: this[S$._targetRadius]}));
    this[S$._alphaController] = (t50$1 = new animation_controller.AnimationController.new({duration: ink_splash._kSplashFadeDuration, vsync: controller.vsync}), (() => {
      t50$1.addListener(dart.bind(controller, 'markNeedsPaint'));
      t50$1.addStatusListener(dart.bind(this, S$._handleAlphaStatusChanged));
      return t50$1;
    })());
    this[S$._alpha] = dart.nullCheck(this[S$._alphaController]).drive(core.int, new tween.IntTween.new({begin: color.alpha, end: 0}));
    controller.addInkFeature(this);
  }).prototype = ink_splash.InkSplash.prototype;
  dart.addTypeTests(ink_splash.InkSplash);
  dart.addTypeCaches(ink_splash.InkSplash);
  dart.setMethodSignature(ink_splash.InkSplash, () => ({
    __proto__: dart.getMethods(ink_splash.InkSplash.__proto__),
    [S$._handleAlphaStatusChanged]: dart.fnType(dart.void, [animation$.AnimationStatus]),
    paintFeature: dart.fnType(dart.void, [ui.Canvas, vector_math_64.Matrix4])
  }));
  dart.setGetterSignature(ink_splash.InkSplash, () => ({
    __proto__: dart.getGetters(ink_splash.InkSplash.__proto__),
    [S$._radius]: animation$.Animation$(core.double),
    [S$._radiusController]: animation_controller.AnimationController,
    [S$._alpha]: animation$.Animation$(core.int)
  }));
  dart.setSetterSignature(ink_splash.InkSplash, () => ({
    __proto__: dart.getSetters(ink_splash.InkSplash.__proto__),
    [S$._radius]: animation$.Animation$(core.double),
    [S$._radiusController]: animation_controller.AnimationController,
    [S$._alpha]: animation$.Animation$(core.int)
  }));
  dart.setLibraryUri(ink_splash.InkSplash, I[59]);
  dart.setFieldSignature(ink_splash.InkSplash, () => ({
    __proto__: dart.getFields(ink_splash.InkSplash.__proto__),
    [S$._position]: dart.finalFieldType(dart.nullable(ui.Offset)),
    [S$._borderRadius]: dart.finalFieldType(border_radius.BorderRadius),
    [S$._customBorder]: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    [S$._targetRadius]: dart.finalFieldType(core.double),
    [S$._clipCallback]: dart.finalFieldType(dart.nullable(dart.fnType(ui.Rect, []))),
    [S$._repositionToReferenceBox]: dart.finalFieldType(core.bool),
    [S$._textDirection$1]: dart.finalFieldType(ui.TextDirection),
    [S$.__InkSplash__radius]: dart.fieldType(dart.nullable(animation$.Animation$(core.double))),
    [S$.__InkSplash__radiusController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S$.__InkSplash__alpha]: dart.fieldType(dart.nullable(animation$.Animation$(core.int))),
    [S$._alphaController]: dart.fieldType(dart.nullable(animation_controller.AnimationController))
  }));
  dart.setStaticFieldSignature(ink_splash.InkSplash, () => ['splashFactory']);
  dart.defineLazy(ink_splash.InkSplash, {
    /*ink_splash.InkSplash.splashFactory*/get splashFactory() {
      return C[585] || CT.C585;
    }
  }, false);
  ink_splash._getClipCallback = function _getClipCallback(referenceBox, containedInkWell, rectCallback) {
    if (rectCallback != null) {
      if (!containedInkWell) dart.assertFailed(null, I[60], 20, 12, "containedInkWell");
      return rectCallback;
    }
    if (containedInkWell) {
      return dart.fn(() => ui.Offset.zero['&'](referenceBox.size), T$.VoidToRect());
    }
    return null;
  };
  ink_splash._getTargetRadius = function _getTargetRadius(referenceBox, containedInkWell, rectCallback, position) {
    if (containedInkWell) {
      let size = rectCallback != null ? rectCallback().size : referenceBox.size;
      return ink_splash._getSplashRadiusForPositionInSize(size, position);
    }
    return 35;
  };
  ink_splash._getSplashRadiusForPositionInSize = function _getSplashRadiusForPositionInSize(bounds, position) {
    let d1 = position['-'](bounds.topLeft(ui.Offset.zero)).distance;
    let d2 = position['-'](bounds.topRight(ui.Offset.zero)).distance;
    let d3 = position['-'](bounds.bottomLeft(ui.Offset.zero)).distance;
    let d4 = position['-'](bounds.bottomRight(ui.Offset.zero)).distance;
    return math.max(core.double, math.max(core.double, d1, d2), math.max(core.double, d3, d4))[S$.$ceilToDouble]();
  };
  dart.defineLazy(ink_splash, {
    /*ink_splash._kUnconfirmedSplashDuration*/get _kUnconfirmedSplashDuration() {
      return C[586] || CT.C586;
    },
    /*ink_splash._kSplashFadeDuration*/get _kSplashFadeDuration() {
      return C[160] || CT.C160;
    },
    /*ink_splash._kSplashInitialSize*/get _kSplashInitialSize() {
      return 0;
    },
    /*ink_splash._kSplashConfirmedVelocity*/get _kSplashConfirmedVelocity() {
      return 1;
    }
  }, false);
  ink_sparkle.InkSparkle = class InkSparkle extends ink_well.InteractiveInkFeature {
    static ['_#new#tearOff'](opts) {
      let controller = opts && 'controller' in opts ? opts.controller : null;
      let referenceBox = opts && 'referenceBox' in opts ? opts.referenceBox : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let position = opts && 'position' in opts ? opts.position : null;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      let containedInkWell = opts && 'containedInkWell' in opts ? opts.containedInkWell : true;
      let rectCallback = opts && 'rectCallback' in opts ? opts.rectCallback : null;
      let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
      let customBorder = opts && 'customBorder' in opts ? opts.customBorder : null;
      let radius = opts && 'radius' in opts ? opts.radius : null;
      let onRemoved = opts && 'onRemoved' in opts ? opts.onRemoved : null;
      let turbulenceSeed = opts && 'turbulenceSeed' in opts ? opts.turbulenceSeed : null;
      return new ink_sparkle.InkSparkle.new({controller: controller, referenceBox: referenceBox, color: color, position: position, textDirection: textDirection, containedInkWell: containedInkWell, rectCallback: rectCallback, borderRadius: borderRadius, customBorder: customBorder, radius: radius, onRemoved: onRemoved, turbulenceSeed: turbulenceSeed});
    }
    [S$._handleStatusChanged](status) {
      if (status === animation$.AnimationStatus.completed) {
        this.dispose();
      }
    }
    get [S$._animationController]() {
      let t50;
      t50 = this[S$.__InkSparkle__animationController];
      return t50 == null ? dart.throw(new _internal.LateError.fieldNI("_animationController")) : t50;
    }
    set [S$._animationController](library$32package$58flutter$47src$47material$47ink_sparkle$46dart$58$58_animationController$35param) {
      this[S$.__InkSparkle__animationController] = library$32package$58flutter$47src$47material$47ink_sparkle$46dart$58$58_animationController$35param;
    }
    get [S$._center]() {
      let t50;
      t50 = this[S$.__InkSparkle__center];
      return t50 == null ? dart.throw(new _internal.LateError.fieldNI("_center")) : t50;
    }
    set [S$._center](library$32package$58flutter$47src$47material$47ink_sparkle$46dart$58$58_center$35param) {
      this[S$.__InkSparkle__center] = library$32package$58flutter$47src$47material$47ink_sparkle$46dart$58$58_center$35param;
    }
    get [S$._radiusScale]() {
      let t50;
      t50 = this[S$.__InkSparkle__radiusScale];
      return t50 == null ? dart.throw(new _internal.LateError.fieldNI("_radiusScale")) : t50;
    }
    set [S$._radiusScale](library$32package$58flutter$47src$47material$47ink_sparkle$46dart$58$58_radiusScale$35param) {
      this[S$.__InkSparkle__radiusScale] = library$32package$58flutter$47src$47material$47ink_sparkle$46dart$58$58_radiusScale$35param;
    }
    get [S$._alpha$1]() {
      let t50;
      t50 = this[S$.__InkSparkle__alpha];
      return t50 == null ? dart.throw(new _internal.LateError.fieldNI("_alpha")) : t50;
    }
    set [S$._alpha$1](library$32package$58flutter$47src$47material$47ink_sparkle$46dart$58$58_alpha$35param) {
      this[S$.__InkSparkle__alpha] = library$32package$58flutter$47src$47material$47ink_sparkle$46dart$58$58_alpha$35param;
    }
    get [S$._sparkleAlpha]() {
      let t50;
      t50 = this[S$.__InkSparkle__sparkleAlpha];
      return t50 == null ? dart.throw(new _internal.LateError.fieldNI("_sparkleAlpha")) : t50;
    }
    set [S$._sparkleAlpha](library$32package$58flutter$47src$47material$47ink_sparkle$46dart$58$58_sparkleAlpha$35param) {
      this[S$.__InkSparkle__sparkleAlpha] = library$32package$58flutter$47src$47material$47ink_sparkle$46dart$58$58_sparkleAlpha$35param;
    }
    get [S$._turbulenceSeed]() {
      let t50;
      t50 = this[S$.__InkSparkle__turbulenceSeed];
      return t50 == null ? dart.throw(new _internal.LateError.fieldNI("_turbulenceSeed")) : t50;
    }
    set [S$._turbulenceSeed](library$32package$58flutter$47src$47material$47ink_sparkle$46dart$58$58_turbulenceSeed$35param) {
      this[S$.__InkSparkle__turbulenceSeed] = library$32package$58flutter$47src$47material$47ink_sparkle$46dart$58$58_turbulenceSeed$35param;
    }
    dispose() {
      this[S$._animationController].stop();
      this[S$._animationController].dispose();
      super.dispose();
    }
    paintFeature(canvas, transform) {
      let t50;
      if (!this[S$._animationController].isAnimating) dart.assertFailed(null, I[64], 270, 12, "_animationController.isAnimating");
      if (ink_sparkle._InkSparkleFactory._shaderManager == null) {
        return;
      }
      canvas.save();
      this[S$._transformCanvas]({canvas: canvas, transform: transform});
      if (this[S$._clipCallback$1] != null) {
        this[S$._clipCanvas]({canvas: canvas, clipCallback: dart.nullCheck(this[S$._clipCallback$1]), textDirection: this[S$._textDirection$2], customBorder: this[S$._customBorder$1], borderRadius: this[S$._borderRadius$1]});
      }
      let paint = (t50 = ui.Paint.new(), (() => {
        t50.shader = this[S$._createRippleShader]();
        return t50;
      })());
      if (this[S$._clipCallback$1] != null) {
        canvas.drawRect(dart.nullCheck(this[S$._clipCallback$1])(), paint);
      } else {
        canvas.drawPaint(paint);
      }
      canvas.restore();
    }
    get [S$._width]() {
      return this.referenceBox.size.width;
    }
    get [S$._height]() {
      return this.referenceBox.size.height;
    }
    [S$._createRippleShader]() {
      let turbulencePhase = this[S$._turbulenceSeed] + this[S$._radiusScale].value;
      let noisePhase = turbulencePhase;
      let rotation1 = turbulencePhase * 0.02454369260617026 + 1.7 * 3.141592653589793;
      let rotation2 = turbulencePhase * -0.02454369260617026 + 2.0 * 3.141592653589793;
      let rotation3 = turbulencePhase * 0.02454369260617026 + 2.75 * 3.141592653589793;
      return dart.nullCheck(ink_sparkle._InkSparkleFactory._shaderManager).shader({uColor: this[S$._colorToVector4](this[S$._color$1]), uSparkleColor: vector_math_64.Vector4.new(1.0, 1.0, 1.0, 1.0), uBlur: 1.0, uMaxRadius: this[S$._targetRadius$1], uResolutionScale: vector_math_64.Vector2.new(1.0 / this[S$._width], 1.0 / this[S$._height]), uNoiseScale: vector_math_64.Vector2.new(2.1 / this[S$._width], 2.1 / this[S$._height]), uCenter: this[S$._center].value, uRadiusScale: this[S$._radiusScale].value, uAlpha: this[S$._alpha$1].value, uSparkleAlpha: this[S$._sparkleAlpha].value, uTurbulencePhase: turbulencePhase, uNoisePhase: noisePhase / 1000.0, uCircle1: vector_math_64.Vector2.new(1.5 * 0.5 + turbulencePhase * 0.01 * math.cos(1.5 * 0.55), 1.5 * 0.5 + turbulencePhase * 0.01 * math.sin(1.5 * 0.55)), uCircle2: vector_math_64.Vector2.new(1.5 * 0.2 + turbulencePhase * -0.0066 * math.cos(1.5 * 0.45), 1.5 * 0.2 + turbulencePhase * -0.0066 * math.sin(1.5 * 0.45)), uCircle3: vector_math_64.Vector2.new(1.5 + turbulencePhase * -0.0066 * math.cos(1.5 * 0.35), 1.5 + turbulencePhase * -0.0066 * math.sin(1.5 * 0.35)), uRotation1: vector_math_64.Vector2.new(math.cos(rotation1), math.sin(rotation1)), uRotation2: vector_math_64.Vector2.new(math.cos(rotation2), math.sin(rotation2)), uRotation3: vector_math_64.Vector2.new(math.cos(rotation3), math.sin(rotation3))});
    }
    [S$._colorToVector4](color) {
      return vector_math_64.Vector4.new(color.red / 255.0, color.blue / 255.0, color.green / 255.0, color.alpha / 255.0);
    }
    [S$._transformCanvas](opts) {
      let canvas = opts && 'canvas' in opts ? opts.canvas : null;
      let transform = opts && 'transform' in opts ? opts.transform : null;
      let originOffset = matrix_utils.MatrixUtils.getAsTranslation(transform);
      if (originOffset == null) {
        canvas.transform(transform.storage);
      } else {
        canvas.translate(originOffset.dx, originOffset.dy);
      }
    }
    [S$._clipCanvas](opts) {
      let canvas = opts && 'canvas' in opts ? opts.canvas : null;
      let clipCallback = opts && 'clipCallback' in opts ? opts.clipCallback : null;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      let customBorder = opts && 'customBorder' in opts ? opts.customBorder : null;
      let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : C[584] || CT.C584;
      let rect = clipCallback();
      if (customBorder != null) {
        canvas.clipPath(customBorder.getOuterPath(rect, {textDirection: textDirection}));
      } else if (!borderRadius._equals(border_radius.BorderRadius.zero)) {
        canvas.clipRRect(new ui.RRect.fromRectAndCorners(rect, {topLeft: borderRadius.topLeft, topRight: borderRadius.topRight, bottomLeft: borderRadius.bottomLeft, bottomRight: borderRadius.bottomRight}));
      } else {
        canvas.clipRect(rect);
      }
    }
  };
  (ink_sparkle.InkSparkle.new = function(opts) {
    let t50, t50$, t50$0, t50$1;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let referenceBox = opts && 'referenceBox' in opts ? opts.referenceBox : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let position = opts && 'position' in opts ? opts.position : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let containedInkWell = opts && 'containedInkWell' in opts ? opts.containedInkWell : true;
    let rectCallback = opts && 'rectCallback' in opts ? opts.rectCallback : null;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
    let customBorder = opts && 'customBorder' in opts ? opts.customBorder : null;
    let radius = opts && 'radius' in opts ? opts.radius : null;
    let onRemoved = opts && 'onRemoved' in opts ? opts.onRemoved : null;
    let turbulenceSeed = opts && 'turbulenceSeed' in opts ? opts.turbulenceSeed : null;
    this[S$.__InkSparkle__animationController] = null;
    this[S$.__InkSparkle__center] = null;
    this[S$.__InkSparkle__radiusScale] = null;
    this[S$.__InkSparkle__alpha] = null;
    this[S$.__InkSparkle__sparkleAlpha] = null;
    this[S$.__InkSparkle__turbulenceSeed] = null;
    if (!(containedInkWell || rectCallback == null)) dart.assertFailed(null, I[64], 116, 15, "containedInkWell || rectCallback == null");
    this[S$._color$1] = color;
    this[S$._position$1] = position;
    this[S$._borderRadius$1] = (t50 = borderRadius, t50 == null ? border_radius.BorderRadius.zero : t50);
    this[S$._customBorder$1] = customBorder;
    this[S$._textDirection$2] = textDirection;
    this[S$._targetRadius$1] = dart.notNull((t50$ = radius, t50$ == null ? ink_sparkle._getTargetRadius(referenceBox, containedInkWell, rectCallback, position) : t50$)) * 2.3;
    this[S$._clipCallback$1] = ink_sparkle._getClipCallback(referenceBox, containedInkWell, rectCallback);
    ink_sparkle.InkSparkle.__proto__.new.call(this, {controller: controller, referenceBox: referenceBox, color: color, onRemoved: onRemoved});
    ink_sparkle._InkSparkleFactory.compileShaderIfNeccessary();
    controller.addInkFeature(this);
    this[S$._animationController] = (t50$0 = new animation_controller.AnimationController.new({duration: ink_sparkle.InkSparkle._animationDuration, vsync: controller.vsync}), (() => {
      t50$0.addListener(dart.bind(controller, 'markNeedsPaint'));
      t50$0.addStatusListener(dart.bind(this, S$._handleStatusChanged));
      t50$0.forward();
      return t50$0;
    })());
    this[S$._radiusScale] = new (T$.TweenSequenceOfdouble()).new(T$.JSArrayOfTweenSequenceItemOfdouble().of([new (T$.TweenSequenceItemOfdouble()).new({tween: new tween.CurveTween.new({curve: curves.Curves.fastOutSlowIn}), weight: 75.0}), new (T$.TweenSequenceItemOfdouble()).new({tween: new (T$.ConstantTweenOfdouble()).new(1.0), weight: 25.0})])).animate(this[S$._animationController]);
    let centerTween = new (T$.TweenOfVector2()).new({begin: vector_math_64.Vector2.array(T$.JSArrayOfdouble().of([this[S$._position$1].dx, this[S$._position$1].dy])), end: vector_math_64.Vector2.array(T$.JSArrayOfdouble().of([referenceBox.size.width / 2, referenceBox.size.height / 2]))});
    let centerProgress = new (T$.TweenSequenceOfdouble()).new(T$.JSArrayOfTweenSequenceItemOfdouble().of([new (T$.TweenSequenceItemOfdouble()).new({tween: new (T$.TweenOfdouble()).new({begin: 0.0, end: 1.0}), weight: 50.0}), new (T$.TweenSequenceItemOfdouble()).new({tween: new (T$.ConstantTweenOfdouble()).new(1.0), weight: 50.0})])).animate(this[S$._radiusScale]);
    this[S$._center] = centerTween.animate(centerProgress);
    this[S$._alpha$1] = new (T$.TweenSequenceOfdouble()).new(T$.JSArrayOfTweenSequenceItemOfdouble().of([new (T$.TweenSequenceItemOfdouble()).new({tween: new (T$.TweenOfdouble()).new({begin: 0.0, end: 1.0}), weight: 13.0}), new (T$.TweenSequenceItemOfdouble()).new({tween: new (T$.ConstantTweenOfdouble()).new(1.0), weight: 27.0}), new (T$.TweenSequenceItemOfdouble()).new({tween: new (T$.TweenOfdouble()).new({begin: 1.0, end: 0.0}), weight: 60.0})])).animate(this[S$._animationController]);
    this[S$._sparkleAlpha] = new (T$.TweenSequenceOfdouble()).new(T$.JSArrayOfTweenSequenceItemOfdouble().of([new (T$.TweenSequenceItemOfdouble()).new({tween: new (T$.TweenOfdouble()).new({begin: 0.0, end: 1.0}), weight: 13.0}), new (T$.TweenSequenceItemOfdouble()).new({tween: new (T$.ConstantTweenOfdouble()).new(1.0), weight: 27.0}), new (T$.TweenSequenceItemOfdouble()).new({tween: new (T$.TweenOfdouble()).new({begin: 1.0, end: 0.0}), weight: 50.0})])).animate(this[S$._animationController]);
    this[S$._turbulenceSeed] = (t50$1 = turbulenceSeed, t50$1 == null ? math.Random.new().nextDouble() * 1000.0 : t50$1);
  }).prototype = ink_sparkle.InkSparkle.prototype;
  dart.addTypeTests(ink_sparkle.InkSparkle);
  dart.addTypeCaches(ink_sparkle.InkSparkle);
  dart.setMethodSignature(ink_sparkle.InkSparkle, () => ({
    __proto__: dart.getMethods(ink_sparkle.InkSparkle.__proto__),
    [S$._handleStatusChanged]: dart.fnType(dart.void, [animation$.AnimationStatus]),
    paintFeature: dart.fnType(dart.void, [ui.Canvas, vector_math_64.Matrix4]),
    [S$._createRippleShader]: dart.fnType(ui.Shader, []),
    [S$._colorToVector4]: dart.fnType(vector_math_64.Vector4, [ui.Color]),
    [S$._transformCanvas]: dart.fnType(dart.void, [], {}, {canvas: ui.Canvas, transform: vector_math_64.Matrix4}),
    [S$._clipCanvas]: dart.fnType(dart.void, [], {borderRadius: border_radius.BorderRadius, customBorder: dart.nullable(borders.ShapeBorder), textDirection: dart.nullable(ui.TextDirection)}, {canvas: ui.Canvas, clipCallback: dart.fnType(ui.Rect, [])})
  }));
  dart.setGetterSignature(ink_sparkle.InkSparkle, () => ({
    __proto__: dart.getGetters(ink_sparkle.InkSparkle.__proto__),
    [S$._animationController]: animation_controller.AnimationController,
    [S$._center]: animation$.Animation$(vector_math_64.Vector2),
    [S$._radiusScale]: animation$.Animation$(core.double),
    [S$._alpha$1]: animation$.Animation$(core.double),
    [S$._sparkleAlpha]: animation$.Animation$(core.double),
    [S$._turbulenceSeed]: core.double,
    [S$._width]: core.double,
    [S$._height]: core.double
  }));
  dart.setSetterSignature(ink_sparkle.InkSparkle, () => ({
    __proto__: dart.getSetters(ink_sparkle.InkSparkle.__proto__),
    [S$._animationController]: animation_controller.AnimationController,
    [S$._center]: animation$.Animation$(vector_math_64.Vector2),
    [S$._radiusScale]: animation$.Animation$(core.double),
    [S$._alpha$1]: animation$.Animation$(core.double),
    [S$._sparkleAlpha]: animation$.Animation$(core.double),
    [S$._turbulenceSeed]: core.double
  }));
  dart.setLibraryUri(ink_sparkle.InkSparkle, I[65]);
  dart.setFieldSignature(ink_sparkle.InkSparkle, () => ({
    __proto__: dart.getFields(ink_sparkle.InkSparkle.__proto__),
    [S$.__InkSparkle__animationController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S$.__InkSparkle__center]: dart.fieldType(dart.nullable(animation$.Animation$(vector_math_64.Vector2))),
    [S$.__InkSparkle__radiusScale]: dart.fieldType(dart.nullable(animation$.Animation$(core.double))),
    [S$.__InkSparkle__alpha]: dart.fieldType(dart.nullable(animation$.Animation$(core.double))),
    [S$.__InkSparkle__sparkleAlpha]: dart.fieldType(dart.nullable(animation$.Animation$(core.double))),
    [S$.__InkSparkle__turbulenceSeed]: dart.fieldType(dart.nullable(core.double)),
    [S$._color$1]: dart.finalFieldType(ui.Color),
    [S$._position$1]: dart.finalFieldType(ui.Offset),
    [S$._borderRadius$1]: dart.finalFieldType(border_radius.BorderRadius),
    [S$._customBorder$1]: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    [S$._targetRadius$1]: dart.finalFieldType(core.double),
    [S$._clipCallback$1]: dart.finalFieldType(dart.nullable(dart.fnType(ui.Rect, []))),
    [S$._textDirection$2]: dart.finalFieldType(ui.TextDirection)
  }));
  dart.setStaticFieldSignature(ink_sparkle.InkSparkle, () => ['_animationDuration', '_targetRadiusMultiplier', '_rotateRight', '_rotateLeft', '_noiseDensity', 'splashFactory', 'constantTurbulenceSeedSplashFactory']);
  dart.defineLazy(ink_sparkle.InkSparkle, {
    /*ink_sparkle.InkSparkle._animationDuration*/get _animationDuration() {
      return C[587] || CT.C587;
    },
    /*ink_sparkle.InkSparkle._targetRadiusMultiplier*/get _targetRadiusMultiplier() {
      return 2.3;
    },
    /*ink_sparkle.InkSparkle._rotateRight*/get _rotateRight() {
      return 0.02454369260617026;
    },
    /*ink_sparkle.InkSparkle._rotateLeft*/get _rotateLeft() {
      return -0.02454369260617026;
    },
    /*ink_sparkle.InkSparkle._noiseDensity*/get _noiseDensity() {
      return 2.1;
    },
    /*ink_sparkle.InkSparkle.splashFactory*/get splashFactory() {
      return C[588] || CT.C588;
    },
    /*ink_sparkle.InkSparkle.constantTurbulenceSeedSplashFactory*/get constantTurbulenceSeedSplashFactory() {
      return C[589] || CT.C589;
    }
  }, false);
  ink_sparkle._InkSparkleFactory = class _InkSparkleFactory extends ink_well.InteractiveInkFeatureFactory {
    get turbulenceSeed() {
      return this[S$.turbulenceSeed];
    }
    set turbulenceSeed(value) {
      super.turbulenceSeed = value;
    }
    static ['_#new#tearOff']() {
      return new ink_sparkle._InkSparkleFactory.new();
    }
    static ['_#constantTurbulenceSeed#tearOff']() {
      return new ink_sparkle._InkSparkleFactory.constantTurbulenceSeed();
    }
    static compileShaderIfNeccessary() {
      if (!ink_sparkle._InkSparkleFactory._initCalled) {
        ink_sparkle.FragmentShaderManager.inkSparkle().then(core.Null, dart.fn(manager => {
          ink_sparkle._InkSparkleFactory._shaderManager = manager;
        }, T$.FragmentShaderManagerToNull()));
        ink_sparkle._InkSparkleFactory._initCalled = true;
      }
    }
    create(opts) {
      let controller = opts && 'controller' in opts ? opts.controller : null;
      let referenceBox = opts && 'referenceBox' in opts ? opts.referenceBox : null;
      let position = opts && 'position' in opts ? opts.position : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      let containedInkWell = opts && 'containedInkWell' in opts ? opts.containedInkWell : false;
      let rectCallback = opts && 'rectCallback' in opts ? opts.rectCallback : null;
      let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
      let customBorder = opts && 'customBorder' in opts ? opts.customBorder : null;
      let radius = opts && 'radius' in opts ? opts.radius : null;
      let onRemoved = opts && 'onRemoved' in opts ? opts.onRemoved : null;
      return new ink_sparkle.InkSparkle.new({controller: controller, referenceBox: referenceBox, position: position, color: color, textDirection: textDirection, containedInkWell: containedInkWell, rectCallback: rectCallback, borderRadius: borderRadius, customBorder: customBorder, radius: radius, onRemoved: onRemoved, turbulenceSeed: this.turbulenceSeed});
    }
  };
  (ink_sparkle._InkSparkleFactory.new = function() {
    this[S$.turbulenceSeed] = null;
    ink_sparkle._InkSparkleFactory.__proto__.new.call(this);
    ;
  }).prototype = ink_sparkle._InkSparkleFactory.prototype;
  (ink_sparkle._InkSparkleFactory.constantTurbulenceSeed = function() {
    this[S$.turbulenceSeed] = 1337.0;
    ink_sparkle._InkSparkleFactory.__proto__.new.call(this);
    ;
  }).prototype = ink_sparkle._InkSparkleFactory.prototype;
  dart.addTypeTests(ink_sparkle._InkSparkleFactory);
  dart.addTypeCaches(ink_sparkle._InkSparkleFactory);
  dart.setMethodSignature(ink_sparkle._InkSparkleFactory, () => ({
    __proto__: dart.getMethods(ink_sparkle._InkSparkleFactory.__proto__),
    create: dart.fnType(ink_well.InteractiveInkFeature, [], {borderRadius: dart.nullable(border_radius.BorderRadius), containedInkWell: core.bool, customBorder: dart.nullable(borders.ShapeBorder), onRemoved: dart.nullable(dart.fnType(dart.void, [])), radius: dart.nullable(core.double), rectCallback: dart.nullable(dart.fnType(ui.Rect, []))}, {color: ui.Color, controller: material.MaterialInkController, position: ui.Offset, referenceBox: box$.RenderBox, textDirection: ui.TextDirection})
  }));
  dart.setStaticMethodSignature(ink_sparkle._InkSparkleFactory, () => ['compileShaderIfNeccessary']);
  dart.setLibraryUri(ink_sparkle._InkSparkleFactory, I[65]);
  dart.setFieldSignature(ink_sparkle._InkSparkleFactory, () => ({
    __proto__: dart.getFields(ink_sparkle._InkSparkleFactory.__proto__),
    turbulenceSeed: dart.finalFieldType(dart.nullable(core.double))
  }));
  dart.setStaticFieldSignature(ink_sparkle._InkSparkleFactory, () => ['_initCalled', '_shaderManager']);
  dart.defineLazy(ink_sparkle._InkSparkleFactory, {
    /*ink_sparkle._InkSparkleFactory._initCalled*/get _initCalled() {
      return false;
    },
    set _initCalled(_) {},
    /*ink_sparkle._InkSparkleFactory._shaderManager*/get _shaderManager() {
      return null;
    },
    set _shaderManager(_) {}
  }, false);
  ink_sparkle.FragmentShaderManager = class FragmentShaderManager extends core.Object {
    static ['_#_#tearOff']() {
      return new ink_sparkle.FragmentShaderManager.__();
    }
    static get _program() {
      let t50;
      t50 = ink_sparkle.FragmentShaderManager['_#_program'];
      return t50 == null ? dart.throw(new _internal.LateError.fieldNI("_program")) : t50;
    }
    static set _program(library$32package$58flutter$47src$47material$47ink_sparkle$46dart$58$58_program$35param) {
      ink_sparkle.FragmentShaderManager['_#_program'] = library$32package$58flutter$47src$47material$47ink_sparkle$46dart$58$58_program$35param;
    }
    static inkSparkle() {
      return async.async(ink_sparkle.FragmentShaderManager, function* inkSparkle() {
        let manager = new ink_sparkle.FragmentShaderManager.__();
        yield manager[S$._compile]();
        return manager;
      });
    }
    [S$._compile]() {
      return async.async(dart.void, function* _compile() {
        let data = (yield asset_bundle.rootBundle.load("shaders/ink_sparkle.frag"));
        ink_sparkle.FragmentShaderManager._program = (yield ui.FragmentProgram.compile({spirv: data[S$.$buffer]}));
      });
    }
    shader(opts) {
      let uColor = opts && 'uColor' in opts ? opts.uColor : null;
      let uAlpha = opts && 'uAlpha' in opts ? opts.uAlpha : null;
      let uSparkleColor = opts && 'uSparkleColor' in opts ? opts.uSparkleColor : null;
      let uSparkleAlpha = opts && 'uSparkleAlpha' in opts ? opts.uSparkleAlpha : null;
      let uBlur = opts && 'uBlur' in opts ? opts.uBlur : null;
      let uCenter = opts && 'uCenter' in opts ? opts.uCenter : null;
      let uRadiusScale = opts && 'uRadiusScale' in opts ? opts.uRadiusScale : null;
      let uMaxRadius = opts && 'uMaxRadius' in opts ? opts.uMaxRadius : null;
      let uResolutionScale = opts && 'uResolutionScale' in opts ? opts.uResolutionScale : null;
      let uNoiseScale = opts && 'uNoiseScale' in opts ? opts.uNoiseScale : null;
      let uNoisePhase = opts && 'uNoisePhase' in opts ? opts.uNoisePhase : null;
      let uTurbulencePhase = opts && 'uTurbulencePhase' in opts ? opts.uTurbulencePhase : null;
      let uCircle1 = opts && 'uCircle1' in opts ? opts.uCircle1 : null;
      let uCircle2 = opts && 'uCircle2' in opts ? opts.uCircle2 : null;
      let uCircle3 = opts && 'uCircle3' in opts ? opts.uCircle3 : null;
      let uRotation1 = opts && 'uRotation1' in opts ? opts.uRotation1 : null;
      let uRotation2 = opts && 'uRotation2' in opts ? opts.uRotation2 : null;
      let uRotation3 = opts && 'uRotation3' in opts ? opts.uRotation3 : null;
      return ink_sparkle.FragmentShaderManager._program.shader({floatUniforms: _native_typed_data.NativeFloat32List.fromList((() => {
          let t50 = T$.ListOfdouble().of(uColor != null ? uColor.storage : T$.JSArrayOfdouble().of([0.0, 0.0, 0.0, 0.0]));
          t50[S.$addAll](uAlpha != null ? T$.JSArrayOfdouble().of([uAlpha]) : T$.JSArrayOfdouble().of([0.0]));
          t50[S.$addAll](uSparkleColor != null ? uSparkleColor.storage : T$.JSArrayOfdouble().of([0.0, 0.0, 0.0, 0.0]));
          t50[S.$addAll](uSparkleAlpha != null ? T$.JSArrayOfdouble().of([uSparkleAlpha]) : T$.JSArrayOfdouble().of([0.0]));
          t50[S.$addAll](uBlur != null ? T$.JSArrayOfdouble().of([uBlur]) : T$.JSArrayOfdouble().of([0.0]));
          t50[S.$addAll](uCenter != null ? uCenter.storage : T$.JSArrayOfdouble().of([0.0, 0.0]));
          t50[S.$addAll](uRadiusScale != null ? T$.JSArrayOfdouble().of([uRadiusScale]) : T$.JSArrayOfdouble().of([0.0]));
          t50[S.$addAll](uMaxRadius != null ? T$.JSArrayOfdouble().of([uMaxRadius]) : T$.JSArrayOfdouble().of([0.0]));
          t50[S.$addAll](uResolutionScale != null ? uResolutionScale.storage : T$.JSArrayOfdouble().of([0.0, 0.0]));
          t50[S.$addAll](uNoiseScale != null ? uNoiseScale.storage : T$.JSArrayOfdouble().of([0.0, 0.0]));
          t50[S.$addAll](uNoisePhase != null ? T$.JSArrayOfdouble().of([uNoisePhase]) : T$.JSArrayOfdouble().of([0.0]));
          t50[S.$addAll](uCircle1 != null ? uCircle1.storage : T$.JSArrayOfdouble().of([0.0, 0.0]));
          t50[S.$addAll](uCircle2 != null ? uCircle2.storage : T$.JSArrayOfdouble().of([0.0, 0.0]));
          t50[S.$addAll](uCircle3 != null ? uCircle3.storage : T$.JSArrayOfdouble().of([0.0, 0.0]));
          t50[S.$addAll](uRotation1 != null ? uRotation1.storage : T$.JSArrayOfdouble().of([0.0, 0.0]));
          t50[S.$addAll](uRotation2 != null ? uRotation2.storage : T$.JSArrayOfdouble().of([0.0, 0.0]));
          t50[S.$addAll](uRotation3 != null ? uRotation3.storage : T$.JSArrayOfdouble().of([0.0, 0.0]));
          return t50;
        })())});
    }
  };
  (ink_sparkle.FragmentShaderManager.__ = function() {
    ;
  }).prototype = ink_sparkle.FragmentShaderManager.prototype;
  dart.addTypeTests(ink_sparkle.FragmentShaderManager);
  dart.addTypeCaches(ink_sparkle.FragmentShaderManager);
  dart.setMethodSignature(ink_sparkle.FragmentShaderManager, () => ({
    __proto__: dart.getMethods(ink_sparkle.FragmentShaderManager.__proto__),
    [S$._compile]: dart.fnType(async.Future$(dart.void), []),
    shader: dart.fnType(ui.Shader, [], {uAlpha: dart.nullable(core.double), uBlur: dart.nullable(core.double), uCenter: dart.nullable(vector_math_64.Vector2), uCircle1: dart.nullable(vector_math_64.Vector2), uCircle2: dart.nullable(vector_math_64.Vector2), uCircle3: dart.nullable(vector_math_64.Vector2), uColor: dart.nullable(vector_math_64.Vector4), uMaxRadius: dart.nullable(core.double), uNoisePhase: dart.nullable(core.double), uNoiseScale: dart.nullable(vector_math_64.Vector2), uRadiusScale: dart.nullable(core.double), uResolutionScale: dart.nullable(vector_math_64.Vector2), uRotation1: dart.nullable(vector_math_64.Vector2), uRotation2: dart.nullable(vector_math_64.Vector2), uRotation3: dart.nullable(vector_math_64.Vector2), uSparkleAlpha: dart.nullable(core.double), uSparkleColor: dart.nullable(vector_math_64.Vector4), uTurbulencePhase: dart.nullable(core.double)}, {})
  }));
  dart.setStaticMethodSignature(ink_sparkle.FragmentShaderManager, () => ['inkSparkle']);
  dart.setStaticGetterSignature(ink_sparkle.FragmentShaderManager, () => ['_program']);
  dart.setStaticSetterSignature(ink_sparkle.FragmentShaderManager, () => ['_program']);
  dart.setLibraryUri(ink_sparkle.FragmentShaderManager, I[65]);
  dart.setStaticFieldSignature(ink_sparkle.FragmentShaderManager, () => ['_#_program']);
  dart.defineLazy(ink_sparkle.FragmentShaderManager, {
    /*ink_sparkle.FragmentShaderManager['_#_program']*/get ['_#_program']() {
      return null;
    },
    set ['_#_program'](_) {}
  }, false);
  ink_sparkle._getClipCallback = function _getClipCallback$(referenceBox, containedInkWell, rectCallback) {
    if (rectCallback != null) {
      if (!containedInkWell) dart.assertFailed(null, I[64], 486, 12, "containedInkWell");
      return rectCallback;
    }
    if (containedInkWell) {
      return dart.fn(() => ui.Offset.zero['&'](referenceBox.size), T$.VoidToRect());
    }
    return null;
  };
  ink_sparkle._getTargetRadius = function _getTargetRadius$(referenceBox, containedInkWell, rectCallback, position) {
    let size = rectCallback != null ? rectCallback().size : referenceBox.size;
    let d1 = size.bottomRight(ui.Offset.zero).distance;
    let d2 = size.topRight(ui.Offset.zero)['-'](size.bottomLeft(ui.Offset.zero)).distance;
    return math.max(core.double, d1, d2) / 2.0;
  };
  ink_ripple._InkRippleFactory = class _InkRippleFactory extends ink_well.InteractiveInkFeatureFactory {
    static ['_#new#tearOff']() {
      return new ink_ripple._InkRippleFactory.new();
    }
    create(opts) {
      let controller = opts && 'controller' in opts ? opts.controller : null;
      let referenceBox = opts && 'referenceBox' in opts ? opts.referenceBox : null;
      let position = opts && 'position' in opts ? opts.position : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      let containedInkWell = opts && 'containedInkWell' in opts ? opts.containedInkWell : false;
      let rectCallback = opts && 'rectCallback' in opts ? opts.rectCallback : null;
      let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
      let customBorder = opts && 'customBorder' in opts ? opts.customBorder : null;
      let radius = opts && 'radius' in opts ? opts.radius : null;
      let onRemoved = opts && 'onRemoved' in opts ? opts.onRemoved : null;
      return new ink_ripple.InkRipple.new({controller: controller, referenceBox: referenceBox, position: position, color: color, containedInkWell: containedInkWell, rectCallback: rectCallback, borderRadius: borderRadius, customBorder: customBorder, radius: radius, onRemoved: onRemoved, textDirection: textDirection});
    }
  };
  (ink_ripple._InkRippleFactory.new = function() {
    ink_ripple._InkRippleFactory.__proto__.new.call(this);
    ;
  }).prototype = ink_ripple._InkRippleFactory.prototype;
  dart.addTypeTests(ink_ripple._InkRippleFactory);
  dart.addTypeCaches(ink_ripple._InkRippleFactory);
  dart.setMethodSignature(ink_ripple._InkRippleFactory, () => ({
    __proto__: dart.getMethods(ink_ripple._InkRippleFactory.__proto__),
    create: dart.fnType(ink_well.InteractiveInkFeature, [], {borderRadius: dart.nullable(border_radius.BorderRadius), containedInkWell: core.bool, customBorder: dart.nullable(borders.ShapeBorder), onRemoved: dart.nullable(dart.fnType(dart.void, [])), radius: dart.nullable(core.double), rectCallback: dart.nullable(dart.fnType(ui.Rect, []))}, {color: ui.Color, controller: material.MaterialInkController, position: ui.Offset, referenceBox: box$.RenderBox, textDirection: ui.TextDirection})
  }));
  dart.setLibraryUri(ink_ripple._InkRippleFactory, I[66]);
  ink_ripple.InkRipple = class InkRipple extends ink_well.InteractiveInkFeature {
    static ['_#new#tearOff'](opts) {
      let controller = opts && 'controller' in opts ? opts.controller : null;
      let referenceBox = opts && 'referenceBox' in opts ? opts.referenceBox : null;
      let position = opts && 'position' in opts ? opts.position : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      let containedInkWell = opts && 'containedInkWell' in opts ? opts.containedInkWell : false;
      let rectCallback = opts && 'rectCallback' in opts ? opts.rectCallback : null;
      let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
      let customBorder = opts && 'customBorder' in opts ? opts.customBorder : null;
      let radius = opts && 'radius' in opts ? opts.radius : null;
      let onRemoved = opts && 'onRemoved' in opts ? opts.onRemoved : null;
      return new ink_ripple.InkRipple.new({controller: controller, referenceBox: referenceBox, position: position, color: color, textDirection: textDirection, containedInkWell: containedInkWell, rectCallback: rectCallback, borderRadius: borderRadius, customBorder: customBorder, radius: radius, onRemoved: onRemoved});
    }
    get [S$._radius$1]() {
      let t51;
      t51 = this[S$.__InkRipple__radius];
      return t51 == null ? dart.throw(new _internal.LateError.fieldNI("_radius")) : t51;
    }
    set [S$._radius$1](library$32package$58flutter$47src$47material$47ink_ripple$46dart$58$58_radius$35param) {
      this[S$.__InkRipple__radius] = library$32package$58flutter$47src$47material$47ink_ripple$46dart$58$58_radius$35param;
    }
    get [S$._radiusController$1]() {
      let t51;
      t51 = this[S$.__InkRipple__radiusController];
      return t51 == null ? dart.throw(new _internal.LateError.fieldNI("_radiusController")) : t51;
    }
    set [S$._radiusController$1](library$32package$58flutter$47src$47material$47ink_ripple$46dart$58$58_radiusController$35param) {
      this[S$.__InkRipple__radiusController] = library$32package$58flutter$47src$47material$47ink_ripple$46dart$58$58_radiusController$35param;
    }
    get [S$._fadeIn]() {
      let t51;
      t51 = this[S$.__InkRipple__fadeIn];
      return t51 == null ? dart.throw(new _internal.LateError.fieldNI("_fadeIn")) : t51;
    }
    set [S$._fadeIn](library$32package$58flutter$47src$47material$47ink_ripple$46dart$58$58_fadeIn$35param) {
      this[S$.__InkRipple__fadeIn] = library$32package$58flutter$47src$47material$47ink_ripple$46dart$58$58_fadeIn$35param;
    }
    get [S$._fadeInController]() {
      let t51;
      t51 = this[S$.__InkRipple__fadeInController];
      return t51 == null ? dart.throw(new _internal.LateError.fieldNI("_fadeInController")) : t51;
    }
    set [S$._fadeInController](library$32package$58flutter$47src$47material$47ink_ripple$46dart$58$58_fadeInController$35param) {
      this[S$.__InkRipple__fadeInController] = library$32package$58flutter$47src$47material$47ink_ripple$46dart$58$58_fadeInController$35param;
    }
    get [S$._fadeOut]() {
      let t51;
      t51 = this[S$.__InkRipple__fadeOut];
      return t51 == null ? dart.throw(new _internal.LateError.fieldNI("_fadeOut")) : t51;
    }
    set [S$._fadeOut](library$32package$58flutter$47src$47material$47ink_ripple$46dart$58$58_fadeOut$35param) {
      this[S$.__InkRipple__fadeOut] = library$32package$58flutter$47src$47material$47ink_ripple$46dart$58$58_fadeOut$35param;
    }
    get [S$._fadeOutController]() {
      let t51;
      t51 = this[S$.__InkRipple__fadeOutController];
      return t51 == null ? dart.throw(new _internal.LateError.fieldNI("_fadeOutController")) : t51;
    }
    set [S$._fadeOutController](library$32package$58flutter$47src$47material$47ink_ripple$46dart$58$58_fadeOutController$35param) {
      this[S$.__InkRipple__fadeOutController] = library$32package$58flutter$47src$47material$47ink_ripple$46dart$58$58_fadeOutController$35param;
    }
    confirm() {
      let t51;
      t51 = this[S$._radiusController$1];
      (() => {
        t51.duration = ink_ripple._kRadiusDuration;
        t51.forward();
        return t51;
      })();
      this[S$._fadeInController].forward();
      this[S$._fadeOutController].animateTo(1.0, {duration: ink_ripple._kFadeOutDuration});
    }
    cancel() {
      this[S$._fadeInController].stop();
      let fadeOutValue = 1.0 - this[S$._fadeInController].value;
      this[S$._fadeOutController].value = fadeOutValue;
      if (fadeOutValue < 1.0) {
        this[S$._fadeOutController].animateTo(1.0, {duration: ink_ripple._kCancelDuration});
      }
    }
    [S$._handleAlphaStatusChanged$1](status) {
      if (status === animation$.AnimationStatus.completed) {
        this.dispose();
      }
    }
    dispose() {
      this[S$._radiusController$1].dispose();
      this[S$._fadeInController].dispose();
      this[S$._fadeOutController].dispose();
      super.dispose();
    }
    paintFeature(canvas, transform) {
      let t51;
      let alpha = this[S$._fadeInController].isAnimating ? this[S$._fadeIn].value : this[S$._fadeOut].value;
      let paint = (t51 = ui.Paint.new(), (() => {
        t51.color = this.color.withAlpha(alpha);
        return t51;
      })());
      let center = dart.nullCheck(ui.Offset.lerp(this[S$._position$2], this.referenceBox.size.center(ui.Offset.zero), curves.Curves.ease.transform(this[S$._radiusController$1].value)));
      this.paintInkCircle({canvas: canvas, transform: transform, paint: paint, center: center, textDirection: this[S$._textDirection$3], radius: this[S$._radius$1].value, customBorder: this[S$._customBorder$2], borderRadius: this[S$._borderRadius$2], clipCallback: this[S$._clipCallback$2]});
    }
  };
  (ink_ripple.InkRipple.new = function(opts) {
    let t51, t51$, t51$0, t51$1, t51$2;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let referenceBox = opts && 'referenceBox' in opts ? opts.referenceBox : null;
    let position = opts && 'position' in opts ? opts.position : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let containedInkWell = opts && 'containedInkWell' in opts ? opts.containedInkWell : false;
    let rectCallback = opts && 'rectCallback' in opts ? opts.rectCallback : null;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
    let customBorder = opts && 'customBorder' in opts ? opts.customBorder : null;
    let radius = opts && 'radius' in opts ? opts.radius : null;
    let onRemoved = opts && 'onRemoved' in opts ? opts.onRemoved : null;
    this[S$.__InkRipple__radius] = null;
    this[S$.__InkRipple__radiusController] = null;
    this[S$.__InkRipple__fadeIn] = null;
    this[S$.__InkRipple__fadeInController] = null;
    this[S$.__InkRipple__fadeOut] = null;
    this[S$.__InkRipple__fadeOutController] = null;
    if (!(color !== null)) dart.assertFailed(null, I[67], 122, 15, "color != null");
    if (!(position !== null)) dart.assertFailed(null, I[67], 123, 15, "position != null");
    if (!(textDirection !== null)) dart.assertFailed(null, I[67], 124, 15, "textDirection != null");
    this[S$._position$2] = position;
    this[S$._borderRadius$2] = (t51 = borderRadius, t51 == null ? border_radius.BorderRadius.zero : t51);
    this[S$._customBorder$2] = customBorder;
    this[S$._textDirection$3] = textDirection;
    this[S$._targetRadius$2] = (t51$ = radius, t51$ == null ? ink_ripple._getTargetRadius(referenceBox, containedInkWell, rectCallback, position) : t51$);
    this[S$._clipCallback$2] = ink_ripple._getClipCallback(referenceBox, containedInkWell, rectCallback);
    ink_ripple.InkRipple.__proto__.new.call(this, {controller: controller, color: color, referenceBox: referenceBox, onRemoved: onRemoved});
    if (!(this[S$._borderRadius$2] !== null)) dart.assertFailed(null, I[67], 132, 12, "_borderRadius != null");
    this[S$._fadeInController] = (t51$0 = new animation_controller.AnimationController.new({duration: ink_ripple._kFadeInDuration, vsync: controller.vsync}), (() => {
      t51$0.addListener(dart.bind(controller, 'markNeedsPaint'));
      t51$0.forward();
      return t51$0;
    })());
    this[S$._fadeIn] = this[S$._fadeInController].drive(core.int, new tween.IntTween.new({begin: 0, end: color.alpha}));
    this[S$._radiusController$1] = (t51$1 = new animation_controller.AnimationController.new({duration: ink_ripple._kUnconfirmedRippleDuration, vsync: controller.vsync}), (() => {
      t51$1.addListener(dart.bind(controller, 'markNeedsPaint'));
      t51$1.forward();
      return t51$1;
    })());
    this[S$._radius$1] = this[S$._radiusController$1].drive(core.double, new (T$.TweenOfdouble()).new({begin: this[S$._targetRadius$2] * 0.3, end: this[S$._targetRadius$2] + 5.0}).chain(ink_ripple.InkRipple._easeCurveTween));
    this[S$._fadeOutController] = (t51$2 = new animation_controller.AnimationController.new({duration: ink_ripple._kFadeOutDuration, vsync: controller.vsync}), (() => {
      t51$2.addListener(dart.bind(controller, 'markNeedsPaint'));
      t51$2.addStatusListener(dart.bind(this, S$._handleAlphaStatusChanged$1));
      return t51$2;
    })());
    this[S$._fadeOut] = this[S$._fadeOutController].drive(core.int, new tween.IntTween.new({begin: color.alpha, end: 0}).chain(ink_ripple.InkRipple._fadeOutIntervalTween));
    controller.addInkFeature(this);
  }).prototype = ink_ripple.InkRipple.prototype;
  dart.addTypeTests(ink_ripple.InkRipple);
  dart.addTypeCaches(ink_ripple.InkRipple);
  dart.setMethodSignature(ink_ripple.InkRipple, () => ({
    __proto__: dart.getMethods(ink_ripple.InkRipple.__proto__),
    [S$._handleAlphaStatusChanged$1]: dart.fnType(dart.void, [animation$.AnimationStatus]),
    paintFeature: dart.fnType(dart.void, [ui.Canvas, vector_math_64.Matrix4])
  }));
  dart.setGetterSignature(ink_ripple.InkRipple, () => ({
    __proto__: dart.getGetters(ink_ripple.InkRipple.__proto__),
    [S$._radius$1]: animation$.Animation$(core.double),
    [S$._radiusController$1]: animation_controller.AnimationController,
    [S$._fadeIn]: animation$.Animation$(core.int),
    [S$._fadeInController]: animation_controller.AnimationController,
    [S$._fadeOut]: animation$.Animation$(core.int),
    [S$._fadeOutController]: animation_controller.AnimationController
  }));
  dart.setSetterSignature(ink_ripple.InkRipple, () => ({
    __proto__: dart.getSetters(ink_ripple.InkRipple.__proto__),
    [S$._radius$1]: animation$.Animation$(core.double),
    [S$._radiusController$1]: animation_controller.AnimationController,
    [S$._fadeIn]: animation$.Animation$(core.int),
    [S$._fadeInController]: animation_controller.AnimationController,
    [S$._fadeOut]: animation$.Animation$(core.int),
    [S$._fadeOutController]: animation_controller.AnimationController
  }));
  dart.setLibraryUri(ink_ripple.InkRipple, I[66]);
  dart.setFieldSignature(ink_ripple.InkRipple, () => ({
    __proto__: dart.getFields(ink_ripple.InkRipple.__proto__),
    [S$._position$2]: dart.finalFieldType(ui.Offset),
    [S$._borderRadius$2]: dart.finalFieldType(border_radius.BorderRadius),
    [S$._customBorder$2]: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    [S$._targetRadius$2]: dart.finalFieldType(core.double),
    [S$._clipCallback$2]: dart.finalFieldType(dart.nullable(dart.fnType(ui.Rect, []))),
    [S$._textDirection$3]: dart.finalFieldType(ui.TextDirection),
    [S$.__InkRipple__radius]: dart.fieldType(dart.nullable(animation$.Animation$(core.double))),
    [S$.__InkRipple__radiusController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S$.__InkRipple__fadeIn]: dart.fieldType(dart.nullable(animation$.Animation$(core.int))),
    [S$.__InkRipple__fadeInController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S$.__InkRipple__fadeOut]: dart.fieldType(dart.nullable(animation$.Animation$(core.int))),
    [S$.__InkRipple__fadeOutController]: dart.fieldType(dart.nullable(animation_controller.AnimationController))
  }));
  dart.setStaticFieldSignature(ink_ripple.InkRipple, () => ['splashFactory', '_easeCurveTween', '_fadeOutIntervalTween']);
  dart.defineLazy(ink_ripple.InkRipple, {
    /*ink_ripple.InkRipple.splashFactory*/get splashFactory() {
      return C[590] || CT.C590;
    },
    /*ink_ripple.InkRipple._easeCurveTween*/get _easeCurveTween() {
      return new tween.CurveTween.new({curve: curves.Curves.ease});
    },
    /*ink_ripple.InkRipple._fadeOutIntervalTween*/get _fadeOutIntervalTween() {
      return new tween.CurveTween.new({curve: C[591] || CT.C591});
    }
  }, false);
  ink_ripple._getClipCallback = function _getClipCallback$0(referenceBox, containedInkWell, rectCallback) {
    if (rectCallback != null) {
      if (!containedInkWell) dart.assertFailed(null, I[67], 23, 12, "containedInkWell");
      return rectCallback;
    }
    if (containedInkWell) {
      return dart.fn(() => ui.Offset.zero['&'](referenceBox.size), T$.VoidToRect());
    }
    return null;
  };
  ink_ripple._getTargetRadius = function _getTargetRadius$0(referenceBox, containedInkWell, rectCallback, position) {
    let size = rectCallback != null ? rectCallback().size : referenceBox.size;
    let d1 = size.bottomRight(ui.Offset.zero).distance;
    let d2 = size.topRight(ui.Offset.zero)['-'](size.bottomLeft(ui.Offset.zero)).distance;
    return math.max(core.double, d1, d2) / 2.0;
  };
  dart.defineLazy(ink_ripple, {
    /*ink_ripple._kUnconfirmedRippleDuration*/get _kUnconfirmedRippleDuration() {
      return C[586] || CT.C586;
    },
    /*ink_ripple._kFadeInDuration*/get _kFadeInDuration() {
      return C[592] || CT.C592;
    },
    /*ink_ripple._kRadiusDuration*/get _kRadiusDuration() {
      return C[593] || CT.C593;
    },
    /*ink_ripple._kFadeOutDuration*/get _kFadeOutDuration() {
      return C[594] || CT.C594;
    },
    /*ink_ripple._kCancelDuration*/get _kCancelDuration() {
      return C[592] || CT.C592;
    },
    /*ink_ripple._kFadeOutIntervalStart*/get _kFadeOutIntervalStart() {
      return 0.6;
    }
  }, false);
  const Object_Diagnosticable$36$16 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$16.new = function() {
  }).prototype = Object_Diagnosticable$36$16.prototype;
  dart.applyMixin(Object_Diagnosticable$36$16, diagnostics.Diagnosticable);
  expansion_tile_theme.ExpansionTileThemeData = class ExpansionTileThemeData extends Object_Diagnosticable$36$16 {
    get backgroundColor() {
      return this[S$.backgroundColor$10];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get collapsedBackgroundColor() {
      return this[S$.collapsedBackgroundColor];
    }
    set collapsedBackgroundColor(value) {
      super.collapsedBackgroundColor = value;
    }
    get tilePadding() {
      return this[S$.tilePadding];
    }
    set tilePadding(value) {
      super.tilePadding = value;
    }
    get expandedAlignment() {
      return this[S$.expandedAlignment];
    }
    set expandedAlignment(value) {
      super.expandedAlignment = value;
    }
    get childrenPadding() {
      return this[S$.childrenPadding];
    }
    set childrenPadding(value) {
      super.childrenPadding = value;
    }
    get iconColor() {
      return this[S$.iconColor$2];
    }
    set iconColor(value) {
      super.iconColor = value;
    }
    get collapsedIconColor() {
      return this[S$.collapsedIconColor];
    }
    set collapsedIconColor(value) {
      super.collapsedIconColor = value;
    }
    get textColor() {
      return this[S$.textColor$1];
    }
    set textColor(value) {
      super.textColor = value;
    }
    get collapsedTextColor() {
      return this[S$.collapsedTextColor];
    }
    set collapsedTextColor(value) {
      super.collapsedTextColor = value;
    }
    static ['_#new#tearOff'](opts) {
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let collapsedBackgroundColor = opts && 'collapsedBackgroundColor' in opts ? opts.collapsedBackgroundColor : null;
      let tilePadding = opts && 'tilePadding' in opts ? opts.tilePadding : null;
      let expandedAlignment = opts && 'expandedAlignment' in opts ? opts.expandedAlignment : null;
      let childrenPadding = opts && 'childrenPadding' in opts ? opts.childrenPadding : null;
      let iconColor = opts && 'iconColor' in opts ? opts.iconColor : null;
      let collapsedIconColor = opts && 'collapsedIconColor' in opts ? opts.collapsedIconColor : null;
      let textColor = opts && 'textColor' in opts ? opts.textColor : null;
      let collapsedTextColor = opts && 'collapsedTextColor' in opts ? opts.collapsedTextColor : null;
      return new expansion_tile_theme.ExpansionTileThemeData.new({backgroundColor: backgroundColor, collapsedBackgroundColor: collapsedBackgroundColor, tilePadding: tilePadding, expandedAlignment: expandedAlignment, childrenPadding: childrenPadding, iconColor: iconColor, collapsedIconColor: collapsedIconColor, textColor: textColor, collapsedTextColor: collapsedTextColor});
    }
    copyWith(opts) {
      let t51, t51$, t51$0, t51$1, t51$2, t51$3, t51$4, t51$5, t51$6;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let collapsedBackgroundColor = opts && 'collapsedBackgroundColor' in opts ? opts.collapsedBackgroundColor : null;
      let tilePadding = opts && 'tilePadding' in opts ? opts.tilePadding : null;
      let expandedAlignment = opts && 'expandedAlignment' in opts ? opts.expandedAlignment : null;
      let childrenPadding = opts && 'childrenPadding' in opts ? opts.childrenPadding : null;
      let iconColor = opts && 'iconColor' in opts ? opts.iconColor : null;
      let collapsedIconColor = opts && 'collapsedIconColor' in opts ? opts.collapsedIconColor : null;
      let textColor = opts && 'textColor' in opts ? opts.textColor : null;
      let collapsedTextColor = opts && 'collapsedTextColor' in opts ? opts.collapsedTextColor : null;
      return new expansion_tile_theme.ExpansionTileThemeData.new({backgroundColor: (t51 = backgroundColor, t51 == null ? this.backgroundColor : t51), collapsedBackgroundColor: (t51$ = collapsedBackgroundColor, t51$ == null ? this.collapsedBackgroundColor : t51$), tilePadding: (t51$0 = tilePadding, t51$0 == null ? this.tilePadding : t51$0), expandedAlignment: (t51$1 = expandedAlignment, t51$1 == null ? this.expandedAlignment : t51$1), childrenPadding: (t51$2 = childrenPadding, t51$2 == null ? this.childrenPadding : t51$2), iconColor: (t51$3 = iconColor, t51$3 == null ? this.iconColor : t51$3), collapsedIconColor: (t51$4 = collapsedIconColor, t51$4 == null ? this.collapsedIconColor : t51$4), textColor: (t51$5 = textColor, t51$5 == null ? this.textColor : t51$5), collapsedTextColor: (t51$6 = collapsedTextColor, t51$6 == null ? this.collapsedTextColor : t51$6)});
    }
    static lerp(a, b, t) {
      let t51, t51$, t51$0, t51$1, t51$2, t51$3, t51$4, t51$5, t51$6, t51$7, t51$8, t51$9, t51$10, t51$11, t51$12, t51$13, t51$14, t51$15;
      if (!(t !== null)) dart.assertFailed(null, I[68], 107, 13, "t != null");
      if (a == null && b == null) {
        return null;
      }
      return new expansion_tile_theme.ExpansionTileThemeData.new({backgroundColor: ui.Color.lerp((t51 = a, t51 == null ? null : t51.backgroundColor), (t51$ = b, t51$ == null ? null : t51$.backgroundColor), t), collapsedBackgroundColor: ui.Color.lerp((t51$0 = a, t51$0 == null ? null : t51$0.collapsedBackgroundColor), (t51$1 = b, t51$1 == null ? null : t51$1.collapsedBackgroundColor), t), tilePadding: edge_insets.EdgeInsetsGeometry.lerp((t51$2 = a, t51$2 == null ? null : t51$2.tilePadding), (t51$3 = b, t51$3 == null ? null : t51$3.tilePadding), t), expandedAlignment: alignment.AlignmentGeometry.lerp((t51$4 = a, t51$4 == null ? null : t51$4.expandedAlignment), (t51$5 = b, t51$5 == null ? null : t51$5.expandedAlignment), t), childrenPadding: edge_insets.EdgeInsetsGeometry.lerp((t51$6 = a, t51$6 == null ? null : t51$6.childrenPadding), (t51$7 = b, t51$7 == null ? null : t51$7.childrenPadding), t), iconColor: ui.Color.lerp((t51$8 = a, t51$8 == null ? null : t51$8.iconColor), (t51$9 = b, t51$9 == null ? null : t51$9.iconColor), t), collapsedIconColor: ui.Color.lerp((t51$10 = a, t51$10 == null ? null : t51$10.collapsedIconColor), (t51$11 = b, t51$11 == null ? null : t51$11.collapsedIconColor), t), textColor: ui.Color.lerp((t51$12 = a, t51$12 == null ? null : t51$12.textColor), (t51$13 = b, t51$13 == null ? null : t51$13.textColor), t), collapsedTextColor: ui.Color.lerp((t51$14 = a, t51$14 == null ? null : t51$14.collapsedTextColor), (t51$15 = b, t51$15 == null ? null : t51$15.collapsedTextColor), t)});
    }
    get hashCode() {
      return core.Object.hash(this.backgroundColor, this.collapsedBackgroundColor, this.tilePadding, this.expandedAlignment, this.childrenPadding, this.iconColor, this.collapsedIconColor, this.textColor, this.collapsedTextColor);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      if (!other[S.$runtimeType]._equals(this[S.$runtimeType])) {
        return false;
      }
      return expansion_tile_theme.ExpansionTileThemeData.is(other) && dart.equals(other.backgroundColor, this.backgroundColor) && dart.equals(other.collapsedBackgroundColor, this.collapsedBackgroundColor) && dart.equals(other.tilePadding, this.tilePadding) && dart.equals(other.expandedAlignment, this.expandedAlignment) && dart.equals(other.childrenPadding, this.childrenPadding) && dart.equals(other.iconColor, this.iconColor) && dart.equals(other.collapsedIconColor, this.collapsedIconColor) && dart.equals(other.textColor, this.textColor) && dart.equals(other.collapsedTextColor, this.collapsedTextColor);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new colors.ColorProperty.new("backgroundColor", this.backgroundColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("collapsedBackgroundColor", this.collapsedBackgroundColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfEdgeInsetsGeometry()).new("tilePadding", this.tilePadding, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfAlignmentGeometry()).new("expandedAlignment", this.expandedAlignment, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfEdgeInsetsGeometry()).new("childrenPadding", this.childrenPadding, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("iconColor", this.iconColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("collapsedIconColor", this.collapsedIconColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("textColor", this.textColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("collapsedTextColor", this.collapsedTextColor, {defaultValue: null}));
    }
  };
  (expansion_tile_theme.ExpansionTileThemeData.new = function(opts) {
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let collapsedBackgroundColor = opts && 'collapsedBackgroundColor' in opts ? opts.collapsedBackgroundColor : null;
    let tilePadding = opts && 'tilePadding' in opts ? opts.tilePadding : null;
    let expandedAlignment = opts && 'expandedAlignment' in opts ? opts.expandedAlignment : null;
    let childrenPadding = opts && 'childrenPadding' in opts ? opts.childrenPadding : null;
    let iconColor = opts && 'iconColor' in opts ? opts.iconColor : null;
    let collapsedIconColor = opts && 'collapsedIconColor' in opts ? opts.collapsedIconColor : null;
    let textColor = opts && 'textColor' in opts ? opts.textColor : null;
    let collapsedTextColor = opts && 'collapsedTextColor' in opts ? opts.collapsedTextColor : null;
    this[S$.backgroundColor$10] = backgroundColor;
    this[S$.collapsedBackgroundColor] = collapsedBackgroundColor;
    this[S$.tilePadding] = tilePadding;
    this[S$.expandedAlignment] = expandedAlignment;
    this[S$.childrenPadding] = childrenPadding;
    this[S$.iconColor$2] = iconColor;
    this[S$.collapsedIconColor] = collapsedIconColor;
    this[S$.textColor$1] = textColor;
    this[S$.collapsedTextColor] = collapsedTextColor;
    ;
  }).prototype = expansion_tile_theme.ExpansionTileThemeData.prototype;
  dart.addTypeTests(expansion_tile_theme.ExpansionTileThemeData);
  dart.addTypeCaches(expansion_tile_theme.ExpansionTileThemeData);
  dart.setMethodSignature(expansion_tile_theme.ExpansionTileThemeData, () => ({
    __proto__: dart.getMethods(expansion_tile_theme.ExpansionTileThemeData.__proto__),
    copyWith: dart.fnType(expansion_tile_theme.ExpansionTileThemeData, [], {backgroundColor: dart.nullable(ui.Color), childrenPadding: dart.nullable(edge_insets.EdgeInsetsGeometry), collapsedBackgroundColor: dart.nullable(ui.Color), collapsedIconColor: dart.nullable(ui.Color), collapsedTextColor: dart.nullable(ui.Color), expandedAlignment: dart.nullable(alignment.AlignmentGeometry), iconColor: dart.nullable(ui.Color), textColor: dart.nullable(ui.Color), tilePadding: dart.nullable(edge_insets.EdgeInsetsGeometry)}, {})
  }));
  dart.setStaticMethodSignature(expansion_tile_theme.ExpansionTileThemeData, () => ['lerp']);
  dart.setLibraryUri(expansion_tile_theme.ExpansionTileThemeData, I[69]);
  dart.setFieldSignature(expansion_tile_theme.ExpansionTileThemeData, () => ({
    __proto__: dart.getFields(expansion_tile_theme.ExpansionTileThemeData.__proto__),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    collapsedBackgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    tilePadding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    expandedAlignment: dart.finalFieldType(dart.nullable(alignment.AlignmentGeometry)),
    childrenPadding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    iconColor: dart.finalFieldType(dart.nullable(ui.Color)),
    collapsedIconColor: dart.finalFieldType(dart.nullable(ui.Color)),
    textColor: dart.finalFieldType(dart.nullable(ui.Color)),
    collapsedTextColor: dart.finalFieldType(dart.nullable(ui.Color))
  }));
  dart.defineExtensionMethods(expansion_tile_theme.ExpansionTileThemeData, ['_equals']);
  dart.defineExtensionAccessors(expansion_tile_theme.ExpansionTileThemeData, ['hashCode']);
  expansion_tile_theme.ExpansionTileTheme = class ExpansionTileTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[S$.data$13];
    }
    set data(value) {
      super.data = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let data = opts && 'data' in opts ? opts.data : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new expansion_tile_theme.ExpansionTileTheme.new({key: key, data: data, child: child, $creationLocationd_0dea112b090073317d4: C[595] || CT.C595});
    }
    static of(context) {
      let t51, t51$;
      let inheritedTheme = context.dependOnInheritedWidgetOfExactType(expansion_tile_theme.ExpansionTileTheme);
      t51$ = (t51 = inheritedTheme, t51 == null ? null : t51.data);
      return t51$ == null ? theme$.Theme.of(context).expansionTileTheme : t51$;
    }
    wrap(context, child) {
      return new expansion_tile_theme.ExpansionTileTheme.new({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C[596] || CT.C596});
    }
    updateShouldNotify(oldWidget) {
      expansion_tile_theme.ExpansionTileTheme.as(oldWidget);
      return !this.data._equals(oldWidget.data);
    }
  };
  (expansion_tile_theme.ExpansionTileTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.data$13] = data;
    if (!(child !== null)) dart.assertFailed(null, I[68], 189, 15, "child != null");
    if (!(data !== null)) dart.assertFailed(null, I[68], 190, 15, "data != null");
    expansion_tile_theme.ExpansionTileTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = expansion_tile_theme.ExpansionTileTheme.prototype;
  dart.addTypeTests(expansion_tile_theme.ExpansionTileTheme);
  dart.addTypeCaches(expansion_tile_theme.ExpansionTileTheme);
  dart.setMethodSignature(expansion_tile_theme.ExpansionTileTheme, () => ({
    __proto__: dart.getMethods(expansion_tile_theme.ExpansionTileTheme.__proto__),
    wrap: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget]),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setStaticMethodSignature(expansion_tile_theme.ExpansionTileTheme, () => ['of']);
  dart.setLibraryUri(expansion_tile_theme.ExpansionTileTheme, I[69]);
  dart.setFieldSignature(expansion_tile_theme.ExpansionTileTheme, () => ({
    __proto__: dart.getFields(expansion_tile_theme.ExpansionTileTheme.__proto__),
    data: dart.finalFieldType(expansion_tile_theme.ExpansionTileThemeData)
  }));
  const _is__LerpProperties_default = Symbol('_is__LerpProperties_default');
  button_style._LerpProperties$ = dart.generic(T => {
    class _LerpProperties extends core.Object {
      get a() {
        return this[S$.a$1];
      }
      set a(value) {
        super.a = value;
      }
      get b() {
        return this[S$.b$1];
      }
      set b(value) {
        super.b = value;
      }
      get t() {
        return this[S$.t$1];
      }
      set t(value) {
        super.t = value;
      }
      get lerpFunction() {
        return this[S$.lerpFunction];
      }
      set lerpFunction(value) {
        super.lerpFunction = value;
      }
      static ['_#new#tearOff'](T, a, b, t, lerpFunction) {
        return new (button_style._LerpProperties$(T)).new(a, b, t, lerpFunction);
      }
      resolve(states) {
        let t51, t51$, t53, t52, t51$0;
        let resolvedA = (t51 = this.a, t51 == null ? null : t51.resolve(states));
        let resolvedB = (t51$ = this.b, t51$ == null ? null : t51$.resolve(states));
        t51$0 = resolvedA;
        t52 = resolvedB;
        t53 = this.t;
        return this.lerpFunction(t51$0, t52, t53);
      }
    }
    (_LerpProperties.new = function(a, b, t, lerpFunction) {
      this[S$.a$1] = a;
      this[S$.b$1] = b;
      this[S$.t$1] = t;
      this[S$.lerpFunction] = lerpFunction;
      ;
    }).prototype = _LerpProperties.prototype;
    dart.addTypeTests(_LerpProperties);
    _LerpProperties.prototype[_is__LerpProperties_default] = true;
    dart.addTypeCaches(_LerpProperties);
    _LerpProperties[dart.implements] = () => [material_state.MaterialStateProperty$(dart.nullable(T))];
    dart.setMethodSignature(_LerpProperties, () => ({
      __proto__: dart.getMethods(_LerpProperties.__proto__),
      resolve: dart.fnType(dart.nullable(T), [core.Set$(material_state.MaterialState)])
    }));
    dart.setLibraryUri(_LerpProperties, I[5]);
    dart.setFieldSignature(_LerpProperties, () => ({
      __proto__: dart.getFields(_LerpProperties.__proto__),
      a: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(T))),
      b: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(T))),
      t: dart.finalFieldType(core.double),
      lerpFunction: dart.finalFieldType(dart.fnType(dart.nullable(T), [dart.nullable(T), dart.nullable(T), core.double]))
    }));
    return _LerpProperties;
  });
  button_style._LerpProperties = button_style._LerpProperties$();
  dart.addTypeTests(button_style._LerpProperties, _is__LerpProperties_default);
  button_style._LerpSides = class _LerpSides extends core.Object {
    get a() {
      return this[S$.a$2];
    }
    set a(value) {
      super.a = value;
    }
    get b() {
      return this[S$.b$2];
    }
    set b(value) {
      super.b = value;
    }
    get t() {
      return this[S$.t$2];
    }
    set t(value) {
      super.t = value;
    }
    static ['_#new#tearOff'](a, b, t) {
      return new button_style._LerpSides.new(a, b, t);
    }
    resolve(states) {
      let t51, t51$;
      let resolvedA = (t51 = this.a, t51 == null ? null : t51.resolve(states));
      let resolvedB = (t51$ = this.b, t51$ == null ? null : t51$.resolve(states));
      if (resolvedA == null && resolvedB == null) {
        return null;
      }
      if (resolvedA == null) {
        return borders.BorderSide.lerp(new borders.BorderSide.new({width: 0.0, color: dart.nullCheck(resolvedB).color.withAlpha(0)}), resolvedB, this.t);
      }
      if (resolvedB == null) {
        return borders.BorderSide.lerp(resolvedA, new borders.BorderSide.new({width: 0.0, color: resolvedA.color.withAlpha(0)}), this.t);
      }
      return borders.BorderSide.lerp(resolvedA, resolvedB, this.t);
    }
  };
  (button_style._LerpSides.new = function(a, b, t) {
    this[S$.a$2] = a;
    this[S$.b$2] = b;
    this[S$.t$2] = t;
    ;
  }).prototype = button_style._LerpSides.prototype;
  dart.addTypeTests(button_style._LerpSides);
  dart.addTypeCaches(button_style._LerpSides);
  button_style._LerpSides[dart.implements] = () => [material_state.MaterialStateProperty$(dart.nullable(borders.BorderSide))];
  dart.setMethodSignature(button_style._LerpSides, () => ({
    __proto__: dart.getMethods(button_style._LerpSides.__proto__),
    resolve: dart.fnType(dart.nullable(borders.BorderSide), [core.Set$(material_state.MaterialState)])
  }));
  dart.setLibraryUri(button_style._LerpSides, I[5]);
  dart.setFieldSignature(button_style._LerpSides, () => ({
    __proto__: dart.getFields(button_style._LerpSides.__proto__),
    a: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(borders.BorderSide)))),
    b: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(borders.BorderSide)))),
    t: dart.finalFieldType(core.double)
  }));
  const Object_Diagnosticable$36$17 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$17.new = function() {
  }).prototype = Object_Diagnosticable$36$17.prototype;
  dart.applyMixin(Object_Diagnosticable$36$17, diagnostics.Diagnosticable);
  elevated_button_theme.ElevatedButtonThemeData = class ElevatedButtonThemeData extends Object_Diagnosticable$36$17 {
    get style() {
      return this[S$.style$6];
    }
    set style(value) {
      super.style = value;
    }
    static ['_#new#tearOff'](opts) {
      let style = opts && 'style' in opts ? opts.style : null;
      return new elevated_button_theme.ElevatedButtonThemeData.new({style: style});
    }
    static lerp(a, b, t) {
      let t51, t51$;
      if (!(t !== null)) dart.assertFailed(null, I[70], 49, 13, "t != null");
      if (a == null && b == null) {
        return null;
      }
      return new elevated_button_theme.ElevatedButtonThemeData.new({style: button_style.ButtonStyle.lerp((t51 = a, t51 == null ? null : t51.style), (t51$ = b, t51$ == null ? null : t51$.style), t)});
    }
    get hashCode() {
      return dart.hashCode(this.style);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      if (!other[S.$runtimeType]._equals(this[S.$runtimeType])) {
        return false;
      }
      return elevated_button_theme.ElevatedButtonThemeData.is(other) && dart.equals(other.style, this.style);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfButtonStyle()).new("style", this.style, {defaultValue: null}));
    }
  };
  (elevated_button_theme.ElevatedButtonThemeData.new = function(opts) {
    let style = opts && 'style' in opts ? opts.style : null;
    this[S$.style$6] = style;
    ;
  }).prototype = elevated_button_theme.ElevatedButtonThemeData.prototype;
  dart.addTypeTests(elevated_button_theme.ElevatedButtonThemeData);
  dart.addTypeCaches(elevated_button_theme.ElevatedButtonThemeData);
  dart.setStaticMethodSignature(elevated_button_theme.ElevatedButtonThemeData, () => ['lerp']);
  dart.setLibraryUri(elevated_button_theme.ElevatedButtonThemeData, I[71]);
  dart.setFieldSignature(elevated_button_theme.ElevatedButtonThemeData, () => ({
    __proto__: dart.getFields(elevated_button_theme.ElevatedButtonThemeData.__proto__),
    style: dart.finalFieldType(dart.nullable(button_style.ButtonStyle))
  }));
  dart.defineExtensionMethods(elevated_button_theme.ElevatedButtonThemeData, ['_equals']);
  dart.defineExtensionAccessors(elevated_button_theme.ElevatedButtonThemeData, ['hashCode']);
  elevated_button_theme.ElevatedButtonTheme = class ElevatedButtonTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[S$.data$14];
    }
    set data(value) {
      super.data = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let data = opts && 'data' in opts ? opts.data : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new elevated_button_theme.ElevatedButtonTheme.new({key: key, data: data, child: child, $creationLocationd_0dea112b090073317d4: C[597] || CT.C597});
    }
    static of(context) {
      let t51, t51$;
      let buttonTheme = context.dependOnInheritedWidgetOfExactType(elevated_button_theme.ElevatedButtonTheme);
      t51$ = (t51 = buttonTheme, t51 == null ? null : t51.data);
      return t51$ == null ? theme$.Theme.of(context).elevatedButtonTheme : t51$;
    }
    wrap(context, child) {
      return new elevated_button_theme.ElevatedButtonTheme.new({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C[598] || CT.C598});
    }
    updateShouldNotify(oldWidget) {
      elevated_button_theme.ElevatedButtonTheme.as(oldWidget);
      return !this.data._equals(oldWidget.data);
    }
  };
  (elevated_button_theme.ElevatedButtonTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.data$14] = data;
    if (!(data !== null)) dart.assertFailed(null, I[70], 98, 15, "data != null");
    elevated_button_theme.ElevatedButtonTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = elevated_button_theme.ElevatedButtonTheme.prototype;
  dart.addTypeTests(elevated_button_theme.ElevatedButtonTheme);
  dart.addTypeCaches(elevated_button_theme.ElevatedButtonTheme);
  dart.setMethodSignature(elevated_button_theme.ElevatedButtonTheme, () => ({
    __proto__: dart.getMethods(elevated_button_theme.ElevatedButtonTheme.__proto__),
    wrap: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget]),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setStaticMethodSignature(elevated_button_theme.ElevatedButtonTheme, () => ['of']);
  dart.setLibraryUri(elevated_button_theme.ElevatedButtonTheme, I[71]);
  dart.setFieldSignature(elevated_button_theme.ElevatedButtonTheme, () => ({
    __proto__: dart.getFields(elevated_button_theme.ElevatedButtonTheme.__proto__),
    data: dart.finalFieldType(elevated_button_theme.ElevatedButtonThemeData)
  }));
  const Object_Diagnosticable$36$18 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$18.new = function() {
  }).prototype = Object_Diagnosticable$36$18.prototype;
  dart.applyMixin(Object_Diagnosticable$36$18, diagnostics.Diagnosticable);
  dialog_theme.DialogTheme = class DialogTheme extends Object_Diagnosticable$36$18 {
    get backgroundColor() {
      return this[S$.backgroundColor$11];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get elevation() {
      return this[S$.elevation$11];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get shape() {
      return this[S$.shape$7];
    }
    set shape(value) {
      super.shape = value;
    }
    get alignment() {
      return this[S$.alignment$2];
    }
    set alignment(value) {
      super.alignment = value;
    }
    get titleTextStyle() {
      return this[S$.titleTextStyle];
    }
    set titleTextStyle(value) {
      super.titleTextStyle = value;
    }
    get contentTextStyle() {
      return this[S$.contentTextStyle$1];
    }
    set contentTextStyle(value) {
      super.contentTextStyle = value;
    }
    get actionsPadding() {
      return this[S$.actionsPadding];
    }
    set actionsPadding(value) {
      super.actionsPadding = value;
    }
    get iconColor() {
      return this[S$.iconColor$3];
    }
    set iconColor(value) {
      super.iconColor = value;
    }
    static ['_#new#tearOff'](opts) {
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let alignment = opts && 'alignment' in opts ? opts.alignment : null;
      let iconColor = opts && 'iconColor' in opts ? opts.iconColor : null;
      let titleTextStyle = opts && 'titleTextStyle' in opts ? opts.titleTextStyle : null;
      let contentTextStyle = opts && 'contentTextStyle' in opts ? opts.contentTextStyle : null;
      let actionsPadding = opts && 'actionsPadding' in opts ? opts.actionsPadding : null;
      return new dialog_theme.DialogTheme.new({backgroundColor: backgroundColor, elevation: elevation, shape: shape, alignment: alignment, iconColor: iconColor, titleTextStyle: titleTextStyle, contentTextStyle: contentTextStyle, actionsPadding: actionsPadding});
    }
    copyWith(opts) {
      let t51, t51$, t51$0, t51$1, t51$2, t51$3, t51$4, t51$5;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let alignment = opts && 'alignment' in opts ? opts.alignment : null;
      let iconColor = opts && 'iconColor' in opts ? opts.iconColor : null;
      let titleTextStyle = opts && 'titleTextStyle' in opts ? opts.titleTextStyle : null;
      let contentTextStyle = opts && 'contentTextStyle' in opts ? opts.contentTextStyle : null;
      let actionsPadding = opts && 'actionsPadding' in opts ? opts.actionsPadding : null;
      return new dialog_theme.DialogTheme.new({backgroundColor: (t51 = backgroundColor, t51 == null ? this.backgroundColor : t51), elevation: (t51$ = elevation, t51$ == null ? this.elevation : t51$), shape: (t51$0 = shape, t51$0 == null ? this.shape : t51$0), alignment: (t51$1 = alignment, t51$1 == null ? this.alignment : t51$1), iconColor: (t51$2 = iconColor, t51$2 == null ? this.iconColor : t51$2), titleTextStyle: (t51$3 = titleTextStyle, t51$3 == null ? this.titleTextStyle : t51$3), contentTextStyle: (t51$4 = contentTextStyle, t51$4 == null ? this.contentTextStyle : t51$4), actionsPadding: (t51$5 = actionsPadding, t51$5 == null ? this.actionsPadding : t51$5)});
    }
    static of(context) {
      return theme$.Theme.of(context).dialogTheme;
    }
    static lerp(a, b, t) {
      let t51, t51$, t51$0, t51$1, t51$2, t51$3, t51$4, t51$5, t51$6, t51$7, t51$8, t51$9, t51$10, t51$11, t51$12, t51$13;
      if (!(t !== null)) dart.assertFailed(null, I[72], 102, 12, "t != null");
      return new dialog_theme.DialogTheme.new({backgroundColor: ui.Color.lerp((t51 = a, t51 == null ? null : t51.backgroundColor), (t51$ = b, t51$ == null ? null : t51$.backgroundColor), t), elevation: ui.lerpDouble((t51$0 = a, t51$0 == null ? null : t51$0.elevation), (t51$1 = b, t51$1 == null ? null : t51$1.elevation), t), shape: borders.ShapeBorder.lerp((t51$2 = a, t51$2 == null ? null : t51$2.shape), (t51$3 = b, t51$3 == null ? null : t51$3.shape), t), alignment: alignment.AlignmentGeometry.lerp((t51$4 = a, t51$4 == null ? null : t51$4.alignment), (t51$5 = b, t51$5 == null ? null : t51$5.alignment), t), iconColor: ui.Color.lerp((t51$6 = a, t51$6 == null ? null : t51$6.iconColor), (t51$7 = b, t51$7 == null ? null : t51$7.iconColor), t), titleTextStyle: text_style.TextStyle.lerp((t51$8 = a, t51$8 == null ? null : t51$8.titleTextStyle), (t51$9 = b, t51$9 == null ? null : t51$9.titleTextStyle), t), contentTextStyle: text_style.TextStyle.lerp((t51$10 = a, t51$10 == null ? null : t51$10.contentTextStyle), (t51$11 = b, t51$11 == null ? null : t51$11.contentTextStyle), t), actionsPadding: edge_insets.EdgeInsetsGeometry.lerp((t51$12 = a, t51$12 == null ? null : t51$12.actionsPadding), (t51$13 = b, t51$13 == null ? null : t51$13.actionsPadding), t)});
    }
    get hashCode() {
      return dart.hashCode(this.shape);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      if (!other[S.$runtimeType]._equals(this[S.$runtimeType])) {
        return false;
      }
      return dialog_theme.DialogTheme.is(other) && dart.equals(other.backgroundColor, this.backgroundColor) && other.elevation == this.elevation && dart.equals(other.shape, this.shape) && dart.equals(other.alignment, this.alignment) && dart.equals(other.iconColor, this.iconColor) && dart.equals(other.titleTextStyle, this.titleTextStyle) && dart.equals(other.contentTextStyle, this.contentTextStyle) && dart.equals(other.actionsPadding, this.actionsPadding);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new colors.ColorProperty.new("backgroundColor", this.backgroundColor));
      properties.add(new diagnostics.DoubleProperty.new("elevation", this.elevation));
      properties.add(new (T$.DiagnosticsPropertyOfShapeBorder()).new("shape", this.shape, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfAlignmentGeometry()).new("alignment", this.alignment, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("iconColor", this.iconColor));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("titleTextStyle", this.titleTextStyle, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("contentTextStyle", this.contentTextStyle, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfEdgeInsetsGeometry()).new("actionsPadding", this.actionsPadding, {defaultValue: null}));
    }
  };
  (dialog_theme.DialogTheme.new = function(opts) {
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : null;
    let iconColor = opts && 'iconColor' in opts ? opts.iconColor : null;
    let titleTextStyle = opts && 'titleTextStyle' in opts ? opts.titleTextStyle : null;
    let contentTextStyle = opts && 'contentTextStyle' in opts ? opts.contentTextStyle : null;
    let actionsPadding = opts && 'actionsPadding' in opts ? opts.actionsPadding : null;
    this[S$.backgroundColor$11] = backgroundColor;
    this[S$.elevation$11] = elevation;
    this[S$.shape$7] = shape;
    this[S$.alignment$2] = alignment;
    this[S$.iconColor$3] = iconColor;
    this[S$.titleTextStyle] = titleTextStyle;
    this[S$.contentTextStyle$1] = contentTextStyle;
    this[S$.actionsPadding] = actionsPadding;
    ;
  }).prototype = dialog_theme.DialogTheme.prototype;
  dart.addTypeTests(dialog_theme.DialogTheme);
  dart.addTypeCaches(dialog_theme.DialogTheme);
  dart.setMethodSignature(dialog_theme.DialogTheme, () => ({
    __proto__: dart.getMethods(dialog_theme.DialogTheme.__proto__),
    copyWith: dart.fnType(dialog_theme.DialogTheme, [], {actionsPadding: dart.nullable(edge_insets.EdgeInsetsGeometry), alignment: dart.nullable(alignment.AlignmentGeometry), backgroundColor: dart.nullable(ui.Color), contentTextStyle: dart.nullable(text_style.TextStyle), elevation: dart.nullable(core.double), iconColor: dart.nullable(ui.Color), shape: dart.nullable(borders.ShapeBorder), titleTextStyle: dart.nullable(text_style.TextStyle)}, {})
  }));
  dart.setStaticMethodSignature(dialog_theme.DialogTheme, () => ['of', 'lerp']);
  dart.setLibraryUri(dialog_theme.DialogTheme, I[73]);
  dart.setFieldSignature(dialog_theme.DialogTheme, () => ({
    __proto__: dart.getFields(dialog_theme.DialogTheme.__proto__),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    alignment: dart.finalFieldType(dart.nullable(alignment.AlignmentGeometry)),
    titleTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    contentTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    actionsPadding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    iconColor: dart.finalFieldType(dart.nullable(ui.Color))
  }));
  dart.defineExtensionMethods(dialog_theme.DialogTheme, ['_equals']);
  dart.defineExtensionAccessors(dialog_theme.DialogTheme, ['hashCode']);
  const Object_Diagnosticable$36$19 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$19.new = function() {
  }).prototype = Object_Diagnosticable$36$19.prototype;
  dart.applyMixin(Object_Diagnosticable$36$19, diagnostics.Diagnosticable);
  data_table_theme.DataTableThemeData = class DataTableThemeData extends Object_Diagnosticable$36$19 {
    get decoration() {
      return this[S$.decoration$2];
    }
    set decoration(value) {
      super.decoration = value;
    }
    get dataRowColor() {
      return this[S$.dataRowColor];
    }
    set dataRowColor(value) {
      super.dataRowColor = value;
    }
    get dataRowHeight() {
      return this[S$.dataRowHeight];
    }
    set dataRowHeight(value) {
      super.dataRowHeight = value;
    }
    get dataTextStyle() {
      return this[S$.dataTextStyle];
    }
    set dataTextStyle(value) {
      super.dataTextStyle = value;
    }
    get headingRowColor() {
      return this[S$.headingRowColor];
    }
    set headingRowColor(value) {
      super.headingRowColor = value;
    }
    get headingRowHeight() {
      return this[S$.headingRowHeight];
    }
    set headingRowHeight(value) {
      super.headingRowHeight = value;
    }
    get headingTextStyle() {
      return this[S$.headingTextStyle];
    }
    set headingTextStyle(value) {
      super.headingTextStyle = value;
    }
    get horizontalMargin() {
      return this[S$.horizontalMargin];
    }
    set horizontalMargin(value) {
      super.horizontalMargin = value;
    }
    get columnSpacing() {
      return this[S$.columnSpacing];
    }
    set columnSpacing(value) {
      super.columnSpacing = value;
    }
    get dividerThickness() {
      return this[S$.dividerThickness];
    }
    set dividerThickness(value) {
      super.dividerThickness = value;
    }
    get checkboxHorizontalMargin() {
      return this[S$.checkboxHorizontalMargin];
    }
    set checkboxHorizontalMargin(value) {
      super.checkboxHorizontalMargin = value;
    }
    static ['_#new#tearOff'](opts) {
      let decoration = opts && 'decoration' in opts ? opts.decoration : null;
      let dataRowColor = opts && 'dataRowColor' in opts ? opts.dataRowColor : null;
      let dataRowHeight = opts && 'dataRowHeight' in opts ? opts.dataRowHeight : null;
      let dataTextStyle = opts && 'dataTextStyle' in opts ? opts.dataTextStyle : null;
      let headingRowColor = opts && 'headingRowColor' in opts ? opts.headingRowColor : null;
      let headingRowHeight = opts && 'headingRowHeight' in opts ? opts.headingRowHeight : null;
      let headingTextStyle = opts && 'headingTextStyle' in opts ? opts.headingTextStyle : null;
      let horizontalMargin = opts && 'horizontalMargin' in opts ? opts.horizontalMargin : null;
      let columnSpacing = opts && 'columnSpacing' in opts ? opts.columnSpacing : null;
      let dividerThickness = opts && 'dividerThickness' in opts ? opts.dividerThickness : null;
      let checkboxHorizontalMargin = opts && 'checkboxHorizontalMargin' in opts ? opts.checkboxHorizontalMargin : null;
      return new data_table_theme.DataTableThemeData.new({decoration: decoration, dataRowColor: dataRowColor, dataRowHeight: dataRowHeight, dataTextStyle: dataTextStyle, headingRowColor: headingRowColor, headingRowHeight: headingRowHeight, headingTextStyle: headingTextStyle, horizontalMargin: horizontalMargin, columnSpacing: columnSpacing, dividerThickness: dividerThickness, checkboxHorizontalMargin: checkboxHorizontalMargin});
    }
    copyWith(opts) {
      let t51, t51$, t51$0, t51$1, t51$2, t51$3, t51$4, t51$5, t51$6, t51$7, t51$8;
      let decoration = opts && 'decoration' in opts ? opts.decoration : null;
      let dataRowColor = opts && 'dataRowColor' in opts ? opts.dataRowColor : null;
      let dataRowHeight = opts && 'dataRowHeight' in opts ? opts.dataRowHeight : null;
      let dataTextStyle = opts && 'dataTextStyle' in opts ? opts.dataTextStyle : null;
      let headingRowColor = opts && 'headingRowColor' in opts ? opts.headingRowColor : null;
      let headingRowHeight = opts && 'headingRowHeight' in opts ? opts.headingRowHeight : null;
      let headingTextStyle = opts && 'headingTextStyle' in opts ? opts.headingTextStyle : null;
      let horizontalMargin = opts && 'horizontalMargin' in opts ? opts.horizontalMargin : null;
      let columnSpacing = opts && 'columnSpacing' in opts ? opts.columnSpacing : null;
      let dividerThickness = opts && 'dividerThickness' in opts ? opts.dividerThickness : null;
      let checkboxHorizontalMargin = opts && 'checkboxHorizontalMargin' in opts ? opts.checkboxHorizontalMargin : null;
      return new data_table_theme.DataTableThemeData.new({decoration: (t51 = decoration, t51 == null ? this.decoration : t51), dataRowColor: (t51$ = dataRowColor, t51$ == null ? this.dataRowColor : t51$), dataRowHeight: (t51$0 = dataRowHeight, t51$0 == null ? this.dataRowHeight : t51$0), dataTextStyle: (t51$1 = dataTextStyle, t51$1 == null ? this.dataTextStyle : t51$1), headingRowColor: (t51$2 = headingRowColor, t51$2 == null ? this.headingRowColor : t51$2), headingRowHeight: (t51$3 = headingRowHeight, t51$3 == null ? this.headingRowHeight : t51$3), headingTextStyle: (t51$4 = headingTextStyle, t51$4 == null ? this.headingTextStyle : t51$4), horizontalMargin: (t51$5 = horizontalMargin, t51$5 == null ? this.horizontalMargin : t51$5), columnSpacing: (t51$6 = columnSpacing, t51$6 == null ? this.columnSpacing : t51$6), dividerThickness: (t51$7 = dividerThickness, t51$7 == null ? this.dividerThickness : t51$7), checkboxHorizontalMargin: (t51$8 = checkboxHorizontalMargin, t51$8 == null ? this.checkboxHorizontalMargin : t51$8)});
    }
    static lerp(a, b, t) {
      if (!(t !== null)) dart.assertFailed(null, I[74], 122, 12, "t != null");
      return new data_table_theme.DataTableThemeData.new({decoration: decoration.Decoration.lerp(a.decoration, b.decoration, t), dataRowColor: material_state.MaterialStateProperty.lerp(T$.ColorN(), a.dataRowColor, b.dataRowColor, t, C[23] || CT.C23), dataRowHeight: ui.lerpDouble(a.dataRowHeight, b.dataRowHeight, t), dataTextStyle: text_style.TextStyle.lerp(a.dataTextStyle, b.dataTextStyle, t), headingRowColor: material_state.MaterialStateProperty.lerp(T$.ColorN(), a.headingRowColor, b.headingRowColor, t, C[23] || CT.C23), headingRowHeight: ui.lerpDouble(a.headingRowHeight, b.headingRowHeight, t), headingTextStyle: text_style.TextStyle.lerp(a.headingTextStyle, b.headingTextStyle, t), horizontalMargin: ui.lerpDouble(a.horizontalMargin, b.horizontalMargin, t), columnSpacing: ui.lerpDouble(a.columnSpacing, b.columnSpacing, t), dividerThickness: ui.lerpDouble(a.dividerThickness, b.dividerThickness, t), checkboxHorizontalMargin: ui.lerpDouble(a.checkboxHorizontalMargin, b.checkboxHorizontalMargin, t)});
    }
    get hashCode() {
      return core.Object.hash(this.decoration, this.dataRowColor, this.dataRowHeight, this.dataTextStyle, this.headingRowColor, this.headingRowHeight, this.headingTextStyle, this.horizontalMargin, this.columnSpacing, this.dividerThickness, this.checkboxHorizontalMargin);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      if (!other[S.$runtimeType]._equals(this[S.$runtimeType])) {
        return false;
      }
      return data_table_theme.DataTableThemeData.is(other) && dart.equals(other.decoration, this.decoration) && dart.equals(other.dataRowColor, this.dataRowColor) && other.dataRowHeight == this.dataRowHeight && dart.equals(other.dataTextStyle, this.dataTextStyle) && dart.equals(other.headingRowColor, this.headingRowColor) && other.headingRowHeight == this.headingRowHeight && dart.equals(other.headingTextStyle, this.headingTextStyle) && other.horizontalMargin == this.horizontalMargin && other.columnSpacing == this.columnSpacing && other.dividerThickness == this.dividerThickness && other.checkboxHorizontalMargin == this.checkboxHorizontalMargin;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfDecoration()).new("decoration", this.decoration, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfColorN()).new("dataRowColor", this.dataRowColor, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("dataRowHeight", this.dataRowHeight, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("dataTextStyle", this.dataTextStyle, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfColorN()).new("headingRowColor", this.headingRowColor, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("headingRowHeight", this.headingRowHeight, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("headingTextStyle", this.headingTextStyle, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("horizontalMargin", this.horizontalMargin, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("columnSpacing", this.columnSpacing, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("dividerThickness", this.dividerThickness, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("checkboxHorizontalMargin", this.checkboxHorizontalMargin, {defaultValue: null}));
    }
  };
  (data_table_theme.DataTableThemeData.new = function(opts) {
    let decoration = opts && 'decoration' in opts ? opts.decoration : null;
    let dataRowColor = opts && 'dataRowColor' in opts ? opts.dataRowColor : null;
    let dataRowHeight = opts && 'dataRowHeight' in opts ? opts.dataRowHeight : null;
    let dataTextStyle = opts && 'dataTextStyle' in opts ? opts.dataTextStyle : null;
    let headingRowColor = opts && 'headingRowColor' in opts ? opts.headingRowColor : null;
    let headingRowHeight = opts && 'headingRowHeight' in opts ? opts.headingRowHeight : null;
    let headingTextStyle = opts && 'headingTextStyle' in opts ? opts.headingTextStyle : null;
    let horizontalMargin = opts && 'horizontalMargin' in opts ? opts.horizontalMargin : null;
    let columnSpacing = opts && 'columnSpacing' in opts ? opts.columnSpacing : null;
    let dividerThickness = opts && 'dividerThickness' in opts ? opts.dividerThickness : null;
    let checkboxHorizontalMargin = opts && 'checkboxHorizontalMargin' in opts ? opts.checkboxHorizontalMargin : null;
    this[S$.decoration$2] = decoration;
    this[S$.dataRowColor] = dataRowColor;
    this[S$.dataRowHeight] = dataRowHeight;
    this[S$.dataTextStyle] = dataTextStyle;
    this[S$.headingRowColor] = headingRowColor;
    this[S$.headingRowHeight] = headingRowHeight;
    this[S$.headingTextStyle] = headingTextStyle;
    this[S$.horizontalMargin] = horizontalMargin;
    this[S$.columnSpacing] = columnSpacing;
    this[S$.dividerThickness] = dividerThickness;
    this[S$.checkboxHorizontalMargin] = checkboxHorizontalMargin;
    ;
  }).prototype = data_table_theme.DataTableThemeData.prototype;
  dart.addTypeTests(data_table_theme.DataTableThemeData);
  dart.addTypeCaches(data_table_theme.DataTableThemeData);
  dart.setMethodSignature(data_table_theme.DataTableThemeData, () => ({
    __proto__: dart.getMethods(data_table_theme.DataTableThemeData.__proto__),
    copyWith: dart.fnType(data_table_theme.DataTableThemeData, [], {checkboxHorizontalMargin: dart.nullable(core.double), columnSpacing: dart.nullable(core.double), dataRowColor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color))), dataRowHeight: dart.nullable(core.double), dataTextStyle: dart.nullable(text_style.TextStyle), decoration: dart.nullable(decoration.Decoration), dividerThickness: dart.nullable(core.double), headingRowColor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color))), headingRowHeight: dart.nullable(core.double), headingTextStyle: dart.nullable(text_style.TextStyle), horizontalMargin: dart.nullable(core.double)}, {})
  }));
  dart.setStaticMethodSignature(data_table_theme.DataTableThemeData, () => ['lerp']);
  dart.setLibraryUri(data_table_theme.DataTableThemeData, I[75]);
  dart.setFieldSignature(data_table_theme.DataTableThemeData, () => ({
    __proto__: dart.getFields(data_table_theme.DataTableThemeData.__proto__),
    decoration: dart.finalFieldType(dart.nullable(decoration.Decoration)),
    dataRowColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    dataRowHeight: dart.finalFieldType(dart.nullable(core.double)),
    dataTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    headingRowColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    headingRowHeight: dart.finalFieldType(dart.nullable(core.double)),
    headingTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    horizontalMargin: dart.finalFieldType(dart.nullable(core.double)),
    columnSpacing: dart.finalFieldType(dart.nullable(core.double)),
    dividerThickness: dart.finalFieldType(dart.nullable(core.double)),
    checkboxHorizontalMargin: dart.finalFieldType(dart.nullable(core.double))
  }));
  dart.defineExtensionMethods(data_table_theme.DataTableThemeData, ['_equals']);
  dart.defineExtensionAccessors(data_table_theme.DataTableThemeData, ['hashCode']);
  data_table_theme.DataTableTheme = class DataTableTheme extends framework.InheritedWidget {
    get data() {
      return this[S$.data$15];
    }
    set data(value) {
      super.data = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let data = opts && 'data' in opts ? opts.data : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new data_table_theme.DataTableTheme.new({key: key, data: data, child: child, $creationLocationd_0dea112b090073317d4: C[599] || CT.C599});
    }
    static of(context) {
      let t51, t51$;
      let dataTableTheme = context.dependOnInheritedWidgetOfExactType(data_table_theme.DataTableTheme);
      t51$ = (t51 = dataTableTheme, t51 == null ? null : t51.data);
      return t51$ == null ? theme$.Theme.of(context).dataTableTheme : t51$;
    }
    updateShouldNotify(oldWidget) {
      data_table_theme.DataTableTheme.as(oldWidget);
      return !this.data._equals(oldWidget.data);
    }
  };
  (data_table_theme.DataTableTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.data$15] = data;
    if (!(data !== null)) dart.assertFailed(null, I[74], 214, 15, "data != null");
    data_table_theme.DataTableTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = data_table_theme.DataTableTheme.prototype;
  dart.addTypeTests(data_table_theme.DataTableTheme);
  dart.addTypeCaches(data_table_theme.DataTableTheme);
  dart.setMethodSignature(data_table_theme.DataTableTheme, () => ({
    __proto__: dart.getMethods(data_table_theme.DataTableTheme.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setStaticMethodSignature(data_table_theme.DataTableTheme, () => ['of']);
  dart.setLibraryUri(data_table_theme.DataTableTheme, I[75]);
  dart.setFieldSignature(data_table_theme.DataTableTheme, () => ({
    __proto__: dart.getFields(data_table_theme.DataTableTheme.__proto__),
    data: dart.finalFieldType(data_table_theme.DataTableThemeData)
  }));
  chip_theme.ChipTheme = class ChipTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[S$.data$16];
    }
    set data(value) {
      super.data = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let data = opts && 'data' in opts ? opts.data : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new chip_theme.ChipTheme.new({key: key, data: data, child: child, $creationLocationd_0dea112b090073317d4: C[600] || CT.C600});
    }
    static of(context) {
      let t51, t51$;
      let inheritedTheme = context.dependOnInheritedWidgetOfExactType(chip_theme.ChipTheme);
      t51$ = (t51 = inheritedTheme, t51 == null ? null : t51.data);
      return t51$ == null ? theme$.Theme.of(context).chipTheme : t51$;
    }
    wrap(context, child) {
      return new chip_theme.ChipTheme.new({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C[601] || CT.C601});
    }
    updateShouldNotify(oldWidget) {
      chip_theme.ChipTheme.as(oldWidget);
      return !this.data._equals(oldWidget.data);
    }
  };
  (chip_theme.ChipTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.data$16] = data;
    if (!(child !== null)) dart.assertFailed(null, I[76], 50, 15, "child != null");
    if (!(data !== null)) dart.assertFailed(null, I[76], 51, 15, "data != null");
    chip_theme.ChipTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = chip_theme.ChipTheme.prototype;
  dart.addTypeTests(chip_theme.ChipTheme);
  dart.addTypeCaches(chip_theme.ChipTheme);
  dart.setMethodSignature(chip_theme.ChipTheme, () => ({
    __proto__: dart.getMethods(chip_theme.ChipTheme.__proto__),
    wrap: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget]),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setStaticMethodSignature(chip_theme.ChipTheme, () => ['of']);
  dart.setLibraryUri(chip_theme.ChipTheme, I[77]);
  dart.setFieldSignature(chip_theme.ChipTheme, () => ({
    __proto__: dart.getFields(chip_theme.ChipTheme.__proto__),
    data: dart.finalFieldType(chip_theme.ChipThemeData)
  }));
  const Object_Diagnosticable$36$20 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$20.new = function() {
  }).prototype = Object_Diagnosticable$36$20.prototype;
  dart.applyMixin(Object_Diagnosticable$36$20, diagnostics.Diagnosticable);
  chip_theme.ChipThemeData = class ChipThemeData extends Object_Diagnosticable$36$20 {
    get backgroundColor() {
      return this[S$.backgroundColor$12];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get deleteIconColor() {
      return this[S$.deleteIconColor];
    }
    set deleteIconColor(value) {
      super.deleteIconColor = value;
    }
    get disabledColor() {
      return this[S$.disabledColor$2];
    }
    set disabledColor(value) {
      super.disabledColor = value;
    }
    get selectedColor() {
      return this[S$.selectedColor$2];
    }
    set selectedColor(value) {
      super.selectedColor = value;
    }
    get secondarySelectedColor() {
      return this[S$.secondarySelectedColor];
    }
    set secondarySelectedColor(value) {
      super.secondarySelectedColor = value;
    }
    get shadowColor() {
      return this[S$.shadowColor$1];
    }
    set shadowColor(value) {
      super.shadowColor = value;
    }
    get surfaceTintColor() {
      return this[S$.surfaceTintColor$3];
    }
    set surfaceTintColor(value) {
      super.surfaceTintColor = value;
    }
    get selectedShadowColor() {
      return this[S$.selectedShadowColor];
    }
    set selectedShadowColor(value) {
      super.selectedShadowColor = value;
    }
    get showCheckmark() {
      return this[S$.showCheckmark];
    }
    set showCheckmark(value) {
      super.showCheckmark = value;
    }
    get checkmarkColor() {
      return this[S$.checkmarkColor];
    }
    set checkmarkColor(value) {
      super.checkmarkColor = value;
    }
    get labelPadding() {
      return this[S$.labelPadding$2];
    }
    set labelPadding(value) {
      super.labelPadding = value;
    }
    get padding() {
      return this[S$.padding$5];
    }
    set padding(value) {
      super.padding = value;
    }
    get side() {
      return this[S$.side$1];
    }
    set side(value) {
      super.side = value;
    }
    get shape() {
      return this[S$.shape$8];
    }
    set shape(value) {
      super.shape = value;
    }
    get labelStyle() {
      return this[S$.labelStyle$5];
    }
    set labelStyle(value) {
      super.labelStyle = value;
    }
    get secondaryLabelStyle() {
      return this[S$.secondaryLabelStyle];
    }
    set secondaryLabelStyle(value) {
      super.secondaryLabelStyle = value;
    }
    get brightness() {
      return this[S$.brightness];
    }
    set brightness(value) {
      super.brightness = value;
    }
    get elevation() {
      return this[S$.elevation$12];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get pressElevation() {
      return this[S$.pressElevation];
    }
    set pressElevation(value) {
      super.pressElevation = value;
    }
    get iconTheme() {
      return this[S$.iconTheme$1];
    }
    set iconTheme(value) {
      super.iconTheme = value;
    }
    static ['_#new#tearOff'](opts) {
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let deleteIconColor = opts && 'deleteIconColor' in opts ? opts.deleteIconColor : null;
      let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
      let selectedColor = opts && 'selectedColor' in opts ? opts.selectedColor : null;
      let secondarySelectedColor = opts && 'secondarySelectedColor' in opts ? opts.secondarySelectedColor : null;
      let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
      let surfaceTintColor = opts && 'surfaceTintColor' in opts ? opts.surfaceTintColor : null;
      let selectedShadowColor = opts && 'selectedShadowColor' in opts ? opts.selectedShadowColor : null;
      let showCheckmark = opts && 'showCheckmark' in opts ? opts.showCheckmark : null;
      let checkmarkColor = opts && 'checkmarkColor' in opts ? opts.checkmarkColor : null;
      let labelPadding = opts && 'labelPadding' in opts ? opts.labelPadding : null;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let side = opts && 'side' in opts ? opts.side : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let labelStyle = opts && 'labelStyle' in opts ? opts.labelStyle : null;
      let secondaryLabelStyle = opts && 'secondaryLabelStyle' in opts ? opts.secondaryLabelStyle : null;
      let brightness = opts && 'brightness' in opts ? opts.brightness : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let pressElevation = opts && 'pressElevation' in opts ? opts.pressElevation : null;
      let iconTheme = opts && 'iconTheme' in opts ? opts.iconTheme : null;
      return new chip_theme.ChipThemeData.new({backgroundColor: backgroundColor, deleteIconColor: deleteIconColor, disabledColor: disabledColor, selectedColor: selectedColor, secondarySelectedColor: secondarySelectedColor, shadowColor: shadowColor, surfaceTintColor: surfaceTintColor, selectedShadowColor: selectedShadowColor, showCheckmark: showCheckmark, checkmarkColor: checkmarkColor, labelPadding: labelPadding, padding: padding, side: side, shape: shape, labelStyle: labelStyle, secondaryLabelStyle: secondaryLabelStyle, brightness: brightness, elevation: elevation, pressElevation: pressElevation, iconTheme: iconTheme});
    }
    static fromDefaults(opts) {
      let t51;
      let brightness = opts && 'brightness' in opts ? opts.brightness : null;
      let primaryColor = opts && 'primaryColor' in opts ? opts.primaryColor : null;
      let secondaryColor = opts && 'secondaryColor' in opts ? opts.secondaryColor : null;
      let labelStyle = opts && 'labelStyle' in opts ? opts.labelStyle : null;
      if (!(primaryColor != null || brightness != null)) dart.assertFailed("One of primaryColor or brightness must be specified", I[76], 226, 12, "primaryColor != null || brightness != null");
      if (!(primaryColor == null || brightness == null)) dart.assertFailed("Only one of primaryColor or brightness may be specified", I[76], 227, 12, "primaryColor == null || brightness == null");
      if (!(secondaryColor !== null)) dart.assertFailed(null, I[76], 228, 12, "secondaryColor != null");
      if (!(labelStyle !== null)) dart.assertFailed(null, I[76], 229, 12, "labelStyle != null");
      if (primaryColor != null) {
        brightness = theme_data.ThemeData.estimateBrightnessForColor(primaryColor);
      }
      let padding = C[280] || CT.C280;
      primaryColor = (t51 = primaryColor, t51 == null ? brightness === ui.Brightness.light ? colors$.Colors.black : colors$.Colors.white : t51);
      let backgroundColor = primaryColor.withAlpha(31);
      let deleteIconColor = primaryColor.withAlpha(222);
      let disabledColor = primaryColor.withAlpha(12);
      let selectedColor = primaryColor.withAlpha(61);
      let secondarySelectedColor = secondaryColor.withAlpha(61);
      let secondaryLabelStyle = labelStyle.copyWith({color: secondaryColor.withAlpha(222)});
      labelStyle = labelStyle.copyWith({color: primaryColor.withAlpha(222)});
      return new chip_theme.ChipThemeData.new({backgroundColor: backgroundColor, deleteIconColor: deleteIconColor, disabledColor: disabledColor, selectedColor: selectedColor, secondarySelectedColor: secondarySelectedColor, shadowColor: colors$.Colors.black, selectedShadowColor: colors$.Colors.black, showCheckmark: true, padding: padding, labelStyle: labelStyle, secondaryLabelStyle: secondaryLabelStyle, brightness: brightness, elevation: 0.0, pressElevation: 8.0});
    }
    static ['_#fromDefaults#tearOff'](opts) {
      let brightness = opts && 'brightness' in opts ? opts.brightness : null;
      let primaryColor = opts && 'primaryColor' in opts ? opts.primaryColor : null;
      let secondaryColor = opts && 'secondaryColor' in opts ? opts.secondaryColor : null;
      let labelStyle = opts && 'labelStyle' in opts ? opts.labelStyle : null;
      return chip_theme.ChipThemeData.fromDefaults({brightness: brightness, primaryColor: primaryColor, secondaryColor: secondaryColor, labelStyle: labelStyle});
    }
    copyWith(opts) {
      let t51, t51$, t51$0, t51$1, t51$2, t51$3, t51$4, t51$5, t51$6, t51$7, t51$8, t51$9, t51$10, t51$11, t51$12, t51$13, t51$14, t51$15, t51$16, t51$17;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let deleteIconColor = opts && 'deleteIconColor' in opts ? opts.deleteIconColor : null;
      let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
      let selectedColor = opts && 'selectedColor' in opts ? opts.selectedColor : null;
      let secondarySelectedColor = opts && 'secondarySelectedColor' in opts ? opts.secondarySelectedColor : null;
      let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
      let surfaceTintColor = opts && 'surfaceTintColor' in opts ? opts.surfaceTintColor : null;
      let selectedShadowColor = opts && 'selectedShadowColor' in opts ? opts.selectedShadowColor : null;
      let showCheckmark = opts && 'showCheckmark' in opts ? opts.showCheckmark : null;
      let checkmarkColor = opts && 'checkmarkColor' in opts ? opts.checkmarkColor : null;
      let labelPadding = opts && 'labelPadding' in opts ? opts.labelPadding : null;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let side = opts && 'side' in opts ? opts.side : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let labelStyle = opts && 'labelStyle' in opts ? opts.labelStyle : null;
      let secondaryLabelStyle = opts && 'secondaryLabelStyle' in opts ? opts.secondaryLabelStyle : null;
      let brightness = opts && 'brightness' in opts ? opts.brightness : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let pressElevation = opts && 'pressElevation' in opts ? opts.pressElevation : null;
      let iconTheme = opts && 'iconTheme' in opts ? opts.iconTheme : null;
      return new chip_theme.ChipThemeData.new({backgroundColor: (t51 = backgroundColor, t51 == null ? this.backgroundColor : t51), deleteIconColor: (t51$ = deleteIconColor, t51$ == null ? this.deleteIconColor : t51$), disabledColor: (t51$0 = disabledColor, t51$0 == null ? this.disabledColor : t51$0), selectedColor: (t51$1 = selectedColor, t51$1 == null ? this.selectedColor : t51$1), secondarySelectedColor: (t51$2 = secondarySelectedColor, t51$2 == null ? this.secondarySelectedColor : t51$2), shadowColor: (t51$3 = shadowColor, t51$3 == null ? this.shadowColor : t51$3), surfaceTintColor: (t51$4 = surfaceTintColor, t51$4 == null ? this.surfaceTintColor : t51$4), selectedShadowColor: (t51$5 = selectedShadowColor, t51$5 == null ? this.selectedShadowColor : t51$5), showCheckmark: (t51$6 = showCheckmark, t51$6 == null ? this.showCheckmark : t51$6), checkmarkColor: (t51$7 = checkmarkColor, t51$7 == null ? this.checkmarkColor : t51$7), labelPadding: (t51$8 = labelPadding, t51$8 == null ? this.labelPadding : t51$8), padding: (t51$9 = padding, t51$9 == null ? this.padding : t51$9), side: (t51$10 = side, t51$10 == null ? this.side : t51$10), shape: (t51$11 = shape, t51$11 == null ? this.shape : t51$11), labelStyle: (t51$12 = labelStyle, t51$12 == null ? this.labelStyle : t51$12), secondaryLabelStyle: (t51$13 = secondaryLabelStyle, t51$13 == null ? this.secondaryLabelStyle : t51$13), brightness: (t51$14 = brightness, t51$14 == null ? this.brightness : t51$14), elevation: (t51$15 = elevation, t51$15 == null ? this.elevation : t51$15), pressElevation: (t51$16 = pressElevation, t51$16 == null ? this.pressElevation : t51$16), iconTheme: (t51$17 = iconTheme, t51$17 == null ? this.iconTheme : t51$17)});
    }
    static lerp(a, b, t) {
      let t51, t51$, t51$0, t51$1, t51$2, t51$3, t51$4, t51$5, t51$6, t51$7, t51$8, t51$9, t51$10, t51$11, t51$12, t51$13, t51$14, t51$15, t51$16, t51$17, t51$18, t51$19, t51$20, t51$21, t51$22, t51$23, t51$24, t51$25, t51$26, t51$27, t51$28, t51$29, t51$30, t51$31, t51$32, t51$33, t51$34, t51$35, t51$36, t51$37, t51$38, t51$39, t51$40, t51$41;
      if (!(t !== null)) dart.assertFailed(null, I[76], 489, 12, "t != null");
      if (a == null && b == null) {
        return null;
      }
      return new chip_theme.ChipThemeData.new({backgroundColor: ui.Color.lerp((t51 = a, t51 == null ? null : t51.backgroundColor), (t51$ = b, t51$ == null ? null : t51$.backgroundColor), t), deleteIconColor: ui.Color.lerp((t51$0 = a, t51$0 == null ? null : t51$0.deleteIconColor), (t51$1 = b, t51$1 == null ? null : t51$1.deleteIconColor), t), disabledColor: ui.Color.lerp((t51$2 = a, t51$2 == null ? null : t51$2.disabledColor), (t51$3 = b, t51$3 == null ? null : t51$3.disabledColor), t), selectedColor: ui.Color.lerp((t51$4 = a, t51$4 == null ? null : t51$4.selectedColor), (t51$5 = b, t51$5 == null ? null : t51$5.selectedColor), t), secondarySelectedColor: ui.Color.lerp((t51$6 = a, t51$6 == null ? null : t51$6.secondarySelectedColor), (t51$7 = b, t51$7 == null ? null : t51$7.secondarySelectedColor), t), shadowColor: ui.Color.lerp((t51$8 = a, t51$8 == null ? null : t51$8.shadowColor), (t51$9 = b, t51$9 == null ? null : t51$9.shadowColor), t), surfaceTintColor: ui.Color.lerp((t51$10 = a, t51$10 == null ? null : t51$10.surfaceTintColor), (t51$11 = b, t51$11 == null ? null : t51$11.surfaceTintColor), t), selectedShadowColor: ui.Color.lerp((t51$12 = a, t51$12 == null ? null : t51$12.selectedShadowColor), (t51$13 = b, t51$13 == null ? null : t51$13.selectedShadowColor), t), showCheckmark: t < 0.5 ? (t51$15 = (t51$14 = a, t51$14 == null ? null : t51$14.showCheckmark), t51$15 == null ? true : t51$15) : (t51$17 = (t51$16 = b, t51$16 == null ? null : t51$16.showCheckmark), t51$17 == null ? true : t51$17), checkmarkColor: ui.Color.lerp((t51$18 = a, t51$18 == null ? null : t51$18.checkmarkColor), (t51$19 = b, t51$19 == null ? null : t51$19.checkmarkColor), t), labelPadding: edge_insets.EdgeInsetsGeometry.lerp((t51$20 = a, t51$20 == null ? null : t51$20.labelPadding), (t51$21 = b, t51$21 == null ? null : t51$21.labelPadding), t), padding: edge_insets.EdgeInsetsGeometry.lerp((t51$22 = a, t51$22 == null ? null : t51$22.padding), (t51$23 = b, t51$23 == null ? null : t51$23.padding), t), side: chip_theme.ChipThemeData._lerpSides((t51$24 = a, t51$24 == null ? null : t51$24.side), (t51$25 = b, t51$25 == null ? null : t51$25.side), t), shape: chip_theme.ChipThemeData._lerpShapes((t51$26 = a, t51$26 == null ? null : t51$26.shape), (t51$27 = b, t51$27 == null ? null : t51$27.shape), t), labelStyle: text_style.TextStyle.lerp((t51$28 = a, t51$28 == null ? null : t51$28.labelStyle), (t51$29 = b, t51$29 == null ? null : t51$29.labelStyle), t), secondaryLabelStyle: text_style.TextStyle.lerp((t51$30 = a, t51$30 == null ? null : t51$30.secondaryLabelStyle), (t51$31 = b, t51$31 == null ? null : t51$31.secondaryLabelStyle), t), brightness: t < 0.5 ? (t51$33 = (t51$32 = a, t51$32 == null ? null : t51$32.brightness), t51$33 == null ? ui.Brightness.light : t51$33) : (t51$35 = (t51$34 = b, t51$34 == null ? null : t51$34.brightness), t51$35 == null ? ui.Brightness.light : t51$35), elevation: ui.lerpDouble((t51$36 = a, t51$36 == null ? null : t51$36.elevation), (t51$37 = b, t51$37 == null ? null : t51$37.elevation), t), pressElevation: ui.lerpDouble((t51$38 = a, t51$38 == null ? null : t51$38.pressElevation), (t51$39 = b, t51$39 == null ? null : t51$39.pressElevation), t), iconTheme: icon_theme_data.IconThemeData.lerp((t51$40 = a, t51$40 == null ? null : t51$40.iconTheme), (t51$41 = b, t51$41 == null ? null : t51$41.iconTheme), t)});
    }
    static _lerpSides(a, b, t) {
      if (a == null && b == null) {
        return null;
      }
      if (a == null) {
        return borders.BorderSide.lerp(new borders.BorderSide.new({width: 0.0, color: dart.nullCheck(b).color.withAlpha(0)}), b, t);
      }
      if (b == null) {
        return borders.BorderSide.lerp(new borders.BorderSide.new({width: 0.0, color: a.color.withAlpha(0)}), a, t);
      }
      return borders.BorderSide.lerp(a, b, t);
    }
    static _lerpShapes(a, b, t) {
      if (a == null && b == null) {
        return null;
      }
      return T$.OutlinedBorderN().as(borders.ShapeBorder.lerp(a, b, t));
    }
    get hashCode() {
      return core.Object.hashAll(T$.JSArrayOfObjectN().of([this.backgroundColor, this.deleteIconColor, this.disabledColor, this.selectedColor, this.secondarySelectedColor, this.shadowColor, this.surfaceTintColor, this.selectedShadowColor, this.showCheckmark, this.checkmarkColor, this.labelPadding, this.padding, this.side, this.shape, this.labelStyle, this.secondaryLabelStyle, this.brightness, this.elevation, this.pressElevation, this.iconTheme]));
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      if (!other[S.$runtimeType]._equals(this[S.$runtimeType])) {
        return false;
      }
      return chip_theme.ChipThemeData.is(other) && dart.equals(other.backgroundColor, this.backgroundColor) && dart.equals(other.deleteIconColor, this.deleteIconColor) && dart.equals(other.disabledColor, this.disabledColor) && dart.equals(other.selectedColor, this.selectedColor) && dart.equals(other.secondarySelectedColor, this.secondarySelectedColor) && dart.equals(other.shadowColor, this.shadowColor) && dart.equals(other.surfaceTintColor, this.surfaceTintColor) && dart.equals(other.selectedShadowColor, this.selectedShadowColor) && other.showCheckmark == this.showCheckmark && dart.equals(other.checkmarkColor, this.checkmarkColor) && dart.equals(other.labelPadding, this.labelPadding) && dart.equals(other.padding, this.padding) && dart.equals(other.side, this.side) && dart.equals(other.shape, this.shape) && dart.equals(other.labelStyle, this.labelStyle) && dart.equals(other.secondaryLabelStyle, this.secondaryLabelStyle) && other.brightness == this.brightness && other.elevation == this.elevation && other.pressElevation == this.pressElevation && dart.equals(other.iconTheme, this.iconTheme);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new colors.ColorProperty.new("backgroundColor", this.backgroundColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("deleteIconColor", this.deleteIconColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("disabledColor", this.disabledColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("selectedColor", this.selectedColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("secondarySelectedColor", this.secondarySelectedColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("shadowColor", this.shadowColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("surfaceTintColor", this.surfaceTintColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("selectedShadowColor", this.selectedShadowColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("showCheckmark", this.showCheckmark, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("checkMarkColor", this.checkmarkColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfEdgeInsetsGeometry()).new("labelPadding", this.labelPadding, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfEdgeInsetsGeometry()).new("padding", this.padding, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfBorderSide()).new("side", this.side, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfShapeBorder()).new("shape", this.shape, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("labelStyle", this.labelStyle, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("secondaryLabelStyle", this.secondaryLabelStyle, {defaultValue: null}));
      properties.add(new (T$.EnumPropertyOfBrightness()).new("brightness", this.brightness, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("elevation", this.elevation, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("pressElevation", this.pressElevation, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfIconThemeData()).new("iconTheme", this.iconTheme, {defaultValue: null}));
    }
  };
  (chip_theme.ChipThemeData.new = function(opts) {
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let deleteIconColor = opts && 'deleteIconColor' in opts ? opts.deleteIconColor : null;
    let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
    let selectedColor = opts && 'selectedColor' in opts ? opts.selectedColor : null;
    let secondarySelectedColor = opts && 'secondarySelectedColor' in opts ? opts.secondarySelectedColor : null;
    let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
    let surfaceTintColor = opts && 'surfaceTintColor' in opts ? opts.surfaceTintColor : null;
    let selectedShadowColor = opts && 'selectedShadowColor' in opts ? opts.selectedShadowColor : null;
    let showCheckmark = opts && 'showCheckmark' in opts ? opts.showCheckmark : null;
    let checkmarkColor = opts && 'checkmarkColor' in opts ? opts.checkmarkColor : null;
    let labelPadding = opts && 'labelPadding' in opts ? opts.labelPadding : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let side = opts && 'side' in opts ? opts.side : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let labelStyle = opts && 'labelStyle' in opts ? opts.labelStyle : null;
    let secondaryLabelStyle = opts && 'secondaryLabelStyle' in opts ? opts.secondaryLabelStyle : null;
    let brightness = opts && 'brightness' in opts ? opts.brightness : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let pressElevation = opts && 'pressElevation' in opts ? opts.pressElevation : null;
    let iconTheme = opts && 'iconTheme' in opts ? opts.iconTheme : null;
    this[S$.backgroundColor$12] = backgroundColor;
    this[S$.deleteIconColor] = deleteIconColor;
    this[S$.disabledColor$2] = disabledColor;
    this[S$.selectedColor$2] = selectedColor;
    this[S$.secondarySelectedColor] = secondarySelectedColor;
    this[S$.shadowColor$1] = shadowColor;
    this[S$.surfaceTintColor$3] = surfaceTintColor;
    this[S$.selectedShadowColor] = selectedShadowColor;
    this[S$.showCheckmark] = showCheckmark;
    this[S$.checkmarkColor] = checkmarkColor;
    this[S$.labelPadding$2] = labelPadding;
    this[S$.padding$5] = padding;
    this[S$.side$1] = side;
    this[S$.shape$8] = shape;
    this[S$.labelStyle$5] = labelStyle;
    this[S$.secondaryLabelStyle] = secondaryLabelStyle;
    this[S$.brightness] = brightness;
    this[S$.elevation$12] = elevation;
    this[S$.pressElevation] = pressElevation;
    this[S$.iconTheme$1] = iconTheme;
    ;
  }).prototype = chip_theme.ChipThemeData.prototype;
  dart.addTypeTests(chip_theme.ChipThemeData);
  dart.addTypeCaches(chip_theme.ChipThemeData);
  dart.setMethodSignature(chip_theme.ChipThemeData, () => ({
    __proto__: dart.getMethods(chip_theme.ChipThemeData.__proto__),
    copyWith: dart.fnType(chip_theme.ChipThemeData, [], {backgroundColor: dart.nullable(ui.Color), brightness: dart.nullable(ui.Brightness), checkmarkColor: dart.nullable(ui.Color), deleteIconColor: dart.nullable(ui.Color), disabledColor: dart.nullable(ui.Color), elevation: dart.nullable(core.double), iconTheme: dart.nullable(icon_theme_data.IconThemeData), labelPadding: dart.nullable(edge_insets.EdgeInsetsGeometry), labelStyle: dart.nullable(text_style.TextStyle), padding: dart.nullable(edge_insets.EdgeInsetsGeometry), pressElevation: dart.nullable(core.double), secondaryLabelStyle: dart.nullable(text_style.TextStyle), secondarySelectedColor: dart.nullable(ui.Color), selectedColor: dart.nullable(ui.Color), selectedShadowColor: dart.nullable(ui.Color), shadowColor: dart.nullable(ui.Color), shape: dart.nullable(borders.OutlinedBorder), showCheckmark: dart.nullable(core.bool), side: dart.nullable(borders.BorderSide), surfaceTintColor: dart.nullable(ui.Color)}, {})
  }));
  dart.setStaticMethodSignature(chip_theme.ChipThemeData, () => ['fromDefaults', 'lerp', '_lerpSides', '_lerpShapes']);
  dart.setLibraryUri(chip_theme.ChipThemeData, I[77]);
  dart.setFieldSignature(chip_theme.ChipThemeData, () => ({
    __proto__: dart.getFields(chip_theme.ChipThemeData.__proto__),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    deleteIconColor: dart.finalFieldType(dart.nullable(ui.Color)),
    disabledColor: dart.finalFieldType(dart.nullable(ui.Color)),
    selectedColor: dart.finalFieldType(dart.nullable(ui.Color)),
    secondarySelectedColor: dart.finalFieldType(dart.nullable(ui.Color)),
    shadowColor: dart.finalFieldType(dart.nullable(ui.Color)),
    surfaceTintColor: dart.finalFieldType(dart.nullable(ui.Color)),
    selectedShadowColor: dart.finalFieldType(dart.nullable(ui.Color)),
    showCheckmark: dart.finalFieldType(dart.nullable(core.bool)),
    checkmarkColor: dart.finalFieldType(dart.nullable(ui.Color)),
    labelPadding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    padding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    side: dart.finalFieldType(dart.nullable(borders.BorderSide)),
    shape: dart.finalFieldType(dart.nullable(borders.OutlinedBorder)),
    labelStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    secondaryLabelStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    brightness: dart.finalFieldType(dart.nullable(ui.Brightness)),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    pressElevation: dart.finalFieldType(dart.nullable(core.double)),
    iconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData))
  }));
  dart.defineExtensionMethods(chip_theme.ChipThemeData, ['_equals']);
  dart.defineExtensionAccessors(chip_theme.ChipThemeData, ['hashCode']);
  const Object_Diagnosticable$36$21 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$21.new = function() {
  }).prototype = Object_Diagnosticable$36$21.prototype;
  dart.applyMixin(Object_Diagnosticable$36$21, diagnostics.Diagnosticable);
  checkbox_theme.CheckboxThemeData = class CheckboxThemeData extends Object_Diagnosticable$36$21 {
    get mouseCursor() {
      return this[S$.mouseCursor$9];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    get fillColor() {
      return this[S$.fillColor$5];
    }
    set fillColor(value) {
      super.fillColor = value;
    }
    get checkColor() {
      return this[S$.checkColor];
    }
    set checkColor(value) {
      super.checkColor = value;
    }
    get overlayColor() {
      return this[S$.overlayColor$6];
    }
    set overlayColor(value) {
      super.overlayColor = value;
    }
    get splashRadius() {
      return this[S$.splashRadius$3];
    }
    set splashRadius(value) {
      super.splashRadius = value;
    }
    get materialTapTargetSize() {
      return this[S$.materialTapTargetSize$3];
    }
    set materialTapTargetSize(value) {
      super.materialTapTargetSize = value;
    }
    get visualDensity() {
      return this[S$.visualDensity$4];
    }
    set visualDensity(value) {
      super.visualDensity = value;
    }
    get shape() {
      return this[S$.shape$9];
    }
    set shape(value) {
      super.shape = value;
    }
    get side() {
      return this[S$.side$2];
    }
    set side(value) {
      super.side = value;
    }
    static ['_#new#tearOff'](opts) {
      let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
      let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
      let checkColor = opts && 'checkColor' in opts ? opts.checkColor : null;
      let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
      let splashRadius = opts && 'splashRadius' in opts ? opts.splashRadius : null;
      let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
      let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let side = opts && 'side' in opts ? opts.side : null;
      return new checkbox_theme.CheckboxThemeData.new({mouseCursor: mouseCursor, fillColor: fillColor, checkColor: checkColor, overlayColor: overlayColor, splashRadius: splashRadius, materialTapTargetSize: materialTapTargetSize, visualDensity: visualDensity, shape: shape, side: side});
    }
    copyWith(opts) {
      let t51, t51$, t51$0, t51$1, t51$2, t51$3, t51$4, t51$5, t51$6;
      let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
      let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
      let checkColor = opts && 'checkColor' in opts ? opts.checkColor : null;
      let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
      let splashRadius = opts && 'splashRadius' in opts ? opts.splashRadius : null;
      let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
      let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let side = opts && 'side' in opts ? opts.side : null;
      return new checkbox_theme.CheckboxThemeData.new({mouseCursor: (t51 = mouseCursor, t51 == null ? this.mouseCursor : t51), fillColor: (t51$ = fillColor, t51$ == null ? this.fillColor : t51$), checkColor: (t51$0 = checkColor, t51$0 == null ? this.checkColor : t51$0), overlayColor: (t51$1 = overlayColor, t51$1 == null ? this.overlayColor : t51$1), splashRadius: (t51$2 = splashRadius, t51$2 == null ? this.splashRadius : t51$2), materialTapTargetSize: (t51$3 = materialTapTargetSize, t51$3 == null ? this.materialTapTargetSize : t51$3), visualDensity: (t51$4 = visualDensity, t51$4 == null ? this.visualDensity : t51$4), shape: (t51$5 = shape, t51$5 == null ? this.shape : t51$5), side: (t51$6 = side, t51$6 == null ? this.side : t51$6)});
    }
    static lerp(a, b, t) {
      let t51, t51$, t51$0, t51$1, t51$2, t51$3, t51$4, t51$5, t51$6, t51$7, t51$8, t51$9, t51$10, t51$11, t51$12, t51$13, t51$14, t51$15;
      return new checkbox_theme.CheckboxThemeData.new({mouseCursor: t < 0.5 ? (t51 = a, t51 == null ? null : t51.mouseCursor) : (t51$ = b, t51$ == null ? null : t51$.mouseCursor), fillColor: material_state.MaterialStateProperty.lerp(T$.ColorN(), (t51$0 = a, t51$0 == null ? null : t51$0.fillColor), (t51$1 = b, t51$1 == null ? null : t51$1.fillColor), t, C[23] || CT.C23), checkColor: material_state.MaterialStateProperty.lerp(T$.ColorN(), (t51$2 = a, t51$2 == null ? null : t51$2.checkColor), (t51$3 = b, t51$3 == null ? null : t51$3.checkColor), t, C[23] || CT.C23), overlayColor: material_state.MaterialStateProperty.lerp(T$.ColorN(), (t51$4 = a, t51$4 == null ? null : t51$4.overlayColor), (t51$5 = b, t51$5 == null ? null : t51$5.overlayColor), t, C[23] || CT.C23), splashRadius: ui.lerpDouble((t51$6 = a, t51$6 == null ? null : t51$6.splashRadius), (t51$7 = b, t51$7 == null ? null : t51$7.splashRadius), t), materialTapTargetSize: t < 0.5 ? (t51$8 = a, t51$8 == null ? null : t51$8.materialTapTargetSize) : (t51$9 = b, t51$9 == null ? null : t51$9.materialTapTargetSize), visualDensity: t < 0.5 ? (t51$10 = a, t51$10 == null ? null : t51$10.visualDensity) : (t51$11 = b, t51$11 == null ? null : t51$11.visualDensity), shape: T$.OutlinedBorderN().as(borders.ShapeBorder.lerp((t51$12 = a, t51$12 == null ? null : t51$12.shape), (t51$13 = b, t51$13 == null ? null : t51$13.shape), t)), side: checkbox_theme.CheckboxThemeData._lerpSides((t51$14 = a, t51$14 == null ? null : t51$14.side), (t51$15 = b, t51$15 == null ? null : t51$15.side), t)});
    }
    get hashCode() {
      return core.Object.hash(this.mouseCursor, this.fillColor, this.checkColor, this.overlayColor, this.splashRadius, this.materialTapTargetSize, this.visualDensity, this.shape, this.side);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      if (!other[S.$runtimeType]._equals(this[S.$runtimeType])) {
        return false;
      }
      return checkbox_theme.CheckboxThemeData.is(other) && dart.equals(other.mouseCursor, this.mouseCursor) && dart.equals(other.fillColor, this.fillColor) && dart.equals(other.checkColor, this.checkColor) && dart.equals(other.overlayColor, this.overlayColor) && other.splashRadius == this.splashRadius && other.materialTapTargetSize == this.materialTapTargetSize && dart.equals(other.visualDensity, this.visualDensity) && dart.equals(other.shape, this.shape) && dart.equals(other.side, this.side);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfMouseCursorN()).new("mouseCursor", this.mouseCursor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfColorN()).new("fillColor", this.fillColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfColorN()).new("checkColor", this.checkColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfColorN()).new("overlayColor", this.overlayColor, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("splashRadius", this.splashRadius, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialTapTargetSize()).new("materialTapTargetSize", this.materialTapTargetSize, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfVisualDensity()).new("visualDensity", this.visualDensity, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfOutlinedBorder()).new("shape", this.shape, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfBorderSide()).new("side", this.side, {defaultValue: null}));
    }
    static _lerpSides(a, b, t) {
      if (a == null && b == null) {
        return null;
      }
      return borders.BorderSide.lerp(dart.nullCheck(a), dart.nullCheck(b), t);
    }
  };
  (checkbox_theme.CheckboxThemeData.new = function(opts) {
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
    let checkColor = opts && 'checkColor' in opts ? opts.checkColor : null;
    let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
    let splashRadius = opts && 'splashRadius' in opts ? opts.splashRadius : null;
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let side = opts && 'side' in opts ? opts.side : null;
    this[S$.mouseCursor$9] = mouseCursor;
    this[S$.fillColor$5] = fillColor;
    this[S$.checkColor] = checkColor;
    this[S$.overlayColor$6] = overlayColor;
    this[S$.splashRadius$3] = splashRadius;
    this[S$.materialTapTargetSize$3] = materialTapTargetSize;
    this[S$.visualDensity$4] = visualDensity;
    this[S$.shape$9] = shape;
    this[S$.side$2] = side;
    ;
  }).prototype = checkbox_theme.CheckboxThemeData.prototype;
  dart.addTypeTests(checkbox_theme.CheckboxThemeData);
  dart.addTypeCaches(checkbox_theme.CheckboxThemeData);
  dart.setMethodSignature(checkbox_theme.CheckboxThemeData, () => ({
    __proto__: dart.getMethods(checkbox_theme.CheckboxThemeData.__proto__),
    copyWith: dart.fnType(checkbox_theme.CheckboxThemeData, [], {checkColor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color))), fillColor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color))), materialTapTargetSize: dart.nullable(theme_data.MaterialTapTargetSize), mouseCursor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(mouse_cursor.MouseCursor))), overlayColor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color))), shape: dart.nullable(borders.OutlinedBorder), side: dart.nullable(borders.BorderSide), splashRadius: dart.nullable(core.double), visualDensity: dart.nullable(theme_data.VisualDensity)}, {})
  }));
  dart.setStaticMethodSignature(checkbox_theme.CheckboxThemeData, () => ['lerp', '_lerpSides']);
  dart.setLibraryUri(checkbox_theme.CheckboxThemeData, I[78]);
  dart.setFieldSignature(checkbox_theme.CheckboxThemeData, () => ({
    __proto__: dart.getFields(checkbox_theme.CheckboxThemeData.__proto__),
    mouseCursor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(mouse_cursor.MouseCursor)))),
    fillColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    checkColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    overlayColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    splashRadius: dart.finalFieldType(dart.nullable(core.double)),
    materialTapTargetSize: dart.finalFieldType(dart.nullable(theme_data.MaterialTapTargetSize)),
    visualDensity: dart.finalFieldType(dart.nullable(theme_data.VisualDensity)),
    shape: dart.finalFieldType(dart.nullable(borders.OutlinedBorder)),
    side: dart.finalFieldType(dart.nullable(borders.BorderSide))
  }));
  dart.defineExtensionMethods(checkbox_theme.CheckboxThemeData, ['_equals']);
  dart.defineExtensionAccessors(checkbox_theme.CheckboxThemeData, ['hashCode']);
  checkbox_theme.CheckboxTheme = class CheckboxTheme extends framework.InheritedWidget {
    get data() {
      return this[S$.data$17];
    }
    set data(value) {
      super.data = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let data = opts && 'data' in opts ? opts.data : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new checkbox_theme.CheckboxTheme.new({key: key, data: data, child: child, $creationLocationd_0dea112b090073317d4: C[602] || CT.C602});
    }
    static of(context) {
      let t51, t51$;
      let checkboxTheme = context.dependOnInheritedWidgetOfExactType(checkbox_theme.CheckboxTheme);
      t51$ = (t51 = checkboxTheme, t51 == null ? null : t51.data);
      return t51$ == null ? theme$.Theme.of(context).checkboxTheme : t51$;
    }
    updateShouldNotify(oldWidget) {
      checkbox_theme.CheckboxTheme.as(oldWidget);
      return !this.data._equals(oldWidget.data);
    }
  };
  (checkbox_theme.CheckboxTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.data$17] = data;
    checkbox_theme.CheckboxTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = checkbox_theme.CheckboxTheme.prototype;
  dart.addTypeTests(checkbox_theme.CheckboxTheme);
  dart.addTypeCaches(checkbox_theme.CheckboxTheme);
  dart.setMethodSignature(checkbox_theme.CheckboxTheme, () => ({
    __proto__: dart.getMethods(checkbox_theme.CheckboxTheme.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setStaticMethodSignature(checkbox_theme.CheckboxTheme, () => ['of']);
  dart.setLibraryUri(checkbox_theme.CheckboxTheme, I[78]);
  dart.setFieldSignature(checkbox_theme.CheckboxTheme, () => ({
    __proto__: dart.getFields(checkbox_theme.CheckboxTheme.__proto__),
    data: dart.finalFieldType(checkbox_theme.CheckboxThemeData)
  }));
  const Object_Diagnosticable$36$22 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$22.new = function() {
  }).prototype = Object_Diagnosticable$36$22.prototype;
  dart.applyMixin(Object_Diagnosticable$36$22, diagnostics.Diagnosticable);
  card_theme.CardTheme = class CardTheme extends Object_Diagnosticable$36$22 {
    get clipBehavior() {
      return this[S$.clipBehavior$4];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    get color() {
      return this[S$.color$8];
    }
    set color(value) {
      super.color = value;
    }
    get shadowColor() {
      return this[S$.shadowColor$2];
    }
    set shadowColor(value) {
      super.shadowColor = value;
    }
    get surfaceTintColor() {
      return this[S$.surfaceTintColor$4];
    }
    set surfaceTintColor(value) {
      super.surfaceTintColor = value;
    }
    get elevation() {
      return this[S$.elevation$13];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get margin() {
      return this[S$.margin$1];
    }
    set margin(value) {
      super.margin = value;
    }
    get shape() {
      return this[S$.shape$10];
    }
    set shape(value) {
      super.shape = value;
    }
    static ['_#new#tearOff'](opts) {
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
      let surfaceTintColor = opts && 'surfaceTintColor' in opts ? opts.surfaceTintColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let margin = opts && 'margin' in opts ? opts.margin : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      return new card_theme.CardTheme.new({clipBehavior: clipBehavior, color: color, shadowColor: shadowColor, surfaceTintColor: surfaceTintColor, elevation: elevation, margin: margin, shape: shape});
    }
    copyWith(opts) {
      let t51, t51$, t51$0, t51$1, t51$2, t51$3, t51$4;
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
      let surfaceTintColor = opts && 'surfaceTintColor' in opts ? opts.surfaceTintColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let margin = opts && 'margin' in opts ? opts.margin : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      return new card_theme.CardTheme.new({clipBehavior: (t51 = clipBehavior, t51 == null ? this.clipBehavior : t51), color: (t51$ = color, t51$ == null ? this.color : t51$), shadowColor: (t51$0 = shadowColor, t51$0 == null ? this.shadowColor : t51$0), surfaceTintColor: (t51$1 = surfaceTintColor, t51$1 == null ? this.surfaceTintColor : t51$1), elevation: (t51$2 = elevation, t51$2 == null ? this.elevation : t51$2), margin: (t51$3 = margin, t51$3 == null ? this.margin : t51$3), shape: (t51$4 = shape, t51$4 == null ? this.shape : t51$4)});
    }
    static of(context) {
      return theme$.Theme.of(context).cardTheme;
    }
    static lerp(a, b, t) {
      let t51, t51$, t51$0, t51$1, t51$2, t51$3, t51$4, t51$5, t51$6, t51$7, t51$8, t51$9, t51$10, t51$11;
      if (!(t !== null)) dart.assertFailed(null, I[79], 117, 12, "t != null");
      return new card_theme.CardTheme.new({clipBehavior: t < 0.5 ? (t51 = a, t51 == null ? null : t51.clipBehavior) : (t51$ = b, t51$ == null ? null : t51$.clipBehavior), color: ui.Color.lerp((t51$0 = a, t51$0 == null ? null : t51$0.color), (t51$1 = b, t51$1 == null ? null : t51$1.color), t), shadowColor: ui.Color.lerp((t51$2 = a, t51$2 == null ? null : t51$2.shadowColor), (t51$3 = b, t51$3 == null ? null : t51$3.shadowColor), t), surfaceTintColor: ui.Color.lerp((t51$4 = a, t51$4 == null ? null : t51$4.surfaceTintColor), (t51$5 = b, t51$5 == null ? null : t51$5.surfaceTintColor), t), elevation: ui.lerpDouble((t51$6 = a, t51$6 == null ? null : t51$6.elevation), (t51$7 = b, t51$7 == null ? null : t51$7.elevation), t), margin: edge_insets.EdgeInsetsGeometry.lerp((t51$8 = a, t51$8 == null ? null : t51$8.margin), (t51$9 = b, t51$9 == null ? null : t51$9.margin), t), shape: borders.ShapeBorder.lerp((t51$10 = a, t51$10 == null ? null : t51$10.shape), (t51$11 = b, t51$11 == null ? null : t51$11.shape), t)});
    }
    get hashCode() {
      return core.Object.hash(this.clipBehavior, this.color, this.shadowColor, this.surfaceTintColor, this.elevation, this.margin, this.shape);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      if (!other[S.$runtimeType]._equals(this[S.$runtimeType])) {
        return false;
      }
      return card_theme.CardTheme.is(other) && other.clipBehavior == this.clipBehavior && dart.equals(other.color, this.color) && dart.equals(other.shadowColor, this.shadowColor) && dart.equals(other.surfaceTintColor, this.surfaceTintColor) && other.elevation == this.elevation && dart.equals(other.margin, this.margin) && dart.equals(other.shape, this.shape);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfClip()).new("clipBehavior", this.clipBehavior, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("color", this.color, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("shadowColor", this.shadowColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("surfaceTintColor", this.surfaceTintColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfdouble()).new("elevation", this.elevation, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfEdgeInsetsGeometry()).new("margin", this.margin, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfShapeBorder()).new("shape", this.shape, {defaultValue: null}));
    }
  };
  (card_theme.CardTheme.new = function(opts) {
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
    let surfaceTintColor = opts && 'surfaceTintColor' in opts ? opts.surfaceTintColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let margin = opts && 'margin' in opts ? opts.margin : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    this[S$.clipBehavior$4] = clipBehavior;
    this[S$.color$8] = color;
    this[S$.shadowColor$2] = shadowColor;
    this[S$.surfaceTintColor$4] = surfaceTintColor;
    this[S$.elevation$13] = elevation;
    this[S$.margin$1] = margin;
    this[S$.shape$10] = shape;
    if (!(elevation == null || dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, I[79], 43, 15, "elevation == null || elevation >= 0.0");
    ;
  }).prototype = card_theme.CardTheme.prototype;
  dart.addTypeTests(card_theme.CardTheme);
  dart.addTypeCaches(card_theme.CardTheme);
  dart.setMethodSignature(card_theme.CardTheme, () => ({
    __proto__: dart.getMethods(card_theme.CardTheme.__proto__),
    copyWith: dart.fnType(card_theme.CardTheme, [], {clipBehavior: dart.nullable(ui.Clip), color: dart.nullable(ui.Color), elevation: dart.nullable(core.double), margin: dart.nullable(edge_insets.EdgeInsetsGeometry), shadowColor: dart.nullable(ui.Color), shape: dart.nullable(borders.ShapeBorder), surfaceTintColor: dart.nullable(ui.Color)}, {})
  }));
  dart.setStaticMethodSignature(card_theme.CardTheme, () => ['of', 'lerp']);
  dart.setLibraryUri(card_theme.CardTheme, I[80]);
  dart.setFieldSignature(card_theme.CardTheme, () => ({
    __proto__: dart.getFields(card_theme.CardTheme.__proto__),
    clipBehavior: dart.finalFieldType(dart.nullable(ui.Clip)),
    color: dart.finalFieldType(dart.nullable(ui.Color)),
    shadowColor: dart.finalFieldType(dart.nullable(ui.Color)),
    surfaceTintColor: dart.finalFieldType(dart.nullable(ui.Color)),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    margin: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder))
  }));
  dart.defineExtensionMethods(card_theme.CardTheme, ['_equals']);
  dart.defineExtensionAccessors(card_theme.CardTheme, ['hashCode']);
  button.RawMaterialButton = class RawMaterialButton extends framework.StatefulWidget {
    get onPressed() {
      return this[S$.onPressed$7];
    }
    set onPressed(value) {
      super.onPressed = value;
    }
    get onLongPress() {
      return this[S$.onLongPress$1];
    }
    set onLongPress(value) {
      super.onLongPress = value;
    }
    get onHighlightChanged() {
      return this[S$.onHighlightChanged];
    }
    set onHighlightChanged(value) {
      super.onHighlightChanged = value;
    }
    get mouseCursor() {
      return this[S$.mouseCursor$10];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    get textStyle() {
      return this[S$.textStyle$3];
    }
    set textStyle(value) {
      super.textStyle = value;
    }
    get fillColor() {
      return this[S$.fillColor$6];
    }
    set fillColor(value) {
      super.fillColor = value;
    }
    get focusColor() {
      return this[S$.focusColor$5];
    }
    set focusColor(value) {
      super.focusColor = value;
    }
    get hoverColor() {
      return this[S$.hoverColor$6];
    }
    set hoverColor(value) {
      super.hoverColor = value;
    }
    get highlightColor() {
      return this[S$.highlightColor$2];
    }
    set highlightColor(value) {
      super.highlightColor = value;
    }
    get splashColor() {
      return this[S$.splashColor$3];
    }
    set splashColor(value) {
      super.splashColor = value;
    }
    get elevation() {
      return this[S$.elevation$14];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get hoverElevation() {
      return this[S$.hoverElevation$1];
    }
    set hoverElevation(value) {
      super.hoverElevation = value;
    }
    get focusElevation() {
      return this[S$0.focusElevation$1];
    }
    set focusElevation(value) {
      super.focusElevation = value;
    }
    get highlightElevation() {
      return this[S$0.highlightElevation$1];
    }
    set highlightElevation(value) {
      super.highlightElevation = value;
    }
    get disabledElevation() {
      return this[S$0.disabledElevation$1];
    }
    set disabledElevation(value) {
      super.disabledElevation = value;
    }
    get padding() {
      return this[S$0.padding$6];
    }
    set padding(value) {
      super.padding = value;
    }
    get visualDensity() {
      return this[S$0.visualDensity$5];
    }
    set visualDensity(value) {
      super.visualDensity = value;
    }
    get constraints() {
      return this[S$0.constraints$4];
    }
    set constraints(value) {
      super.constraints = value;
    }
    get shape() {
      return this[S$0.shape$11];
    }
    set shape(value) {
      super.shape = value;
    }
    get animationDuration() {
      return this[S$0.animationDuration$2];
    }
    set animationDuration(value) {
      super.animationDuration = value;
    }
    get child() {
      return this[S$0.child$17];
    }
    set child(value) {
      super.child = value;
    }
    get materialTapTargetSize() {
      return this[S$0.materialTapTargetSize$4];
    }
    set materialTapTargetSize(value) {
      super.materialTapTargetSize = value;
    }
    get focusNode() {
      return this[S$0.focusNode$4];
    }
    set focusNode(value) {
      super.focusNode = value;
    }
    get autofocus() {
      return this[S$0.autofocus$4];
    }
    set autofocus(value) {
      super.autofocus = value;
    }
    get clipBehavior() {
      return this[S$0.clipBehavior$5];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    get enableFeedback() {
      return this[S$0.enableFeedback$5];
    }
    set enableFeedback(value) {
      super.enableFeedback = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
      let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
      let onHighlightChanged = opts && 'onHighlightChanged' in opts ? opts.onHighlightChanged : null;
      let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
      let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
      let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
      let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
      let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : 2;
      let focusElevation = opts && 'focusElevation' in opts ? opts.focusElevation : 4;
      let hoverElevation = opts && 'hoverElevation' in opts ? opts.hoverElevation : 4;
      let highlightElevation = opts && 'highlightElevation' in opts ? opts.highlightElevation : 8;
      let disabledElevation = opts && 'disabledElevation' in opts ? opts.disabledElevation : 0;
      let padding = opts && 'padding' in opts ? opts.padding : C[253] || CT.C253;
      let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : C[603] || CT.C603;
      let constraints = opts && 'constraints' in opts ? opts.constraints : C[604] || CT.C604;
      let shape = opts && 'shape' in opts ? opts.shape : C[605] || CT.C605;
      let animationDuration = opts && 'animationDuration' in opts ? opts.animationDuration : C[160] || CT.C160;
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[71] || CT.C71;
      let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
      let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
      let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
      let child = opts && 'child' in opts ? opts.child : null;
      let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : true;
      return new button.RawMaterialButton.new({key: key, onPressed: onPressed, onLongPress: onLongPress, onHighlightChanged: onHighlightChanged, mouseCursor: mouseCursor, textStyle: textStyle, fillColor: fillColor, focusColor: focusColor, hoverColor: hoverColor, highlightColor: highlightColor, splashColor: splashColor, elevation: elevation, focusElevation: focusElevation, hoverElevation: hoverElevation, highlightElevation: highlightElevation, disabledElevation: disabledElevation, padding: padding, visualDensity: visualDensity, constraints: constraints, shape: shape, animationDuration: animationDuration, clipBehavior: clipBehavior, focusNode: focusNode, autofocus: autofocus, materialTapTargetSize: materialTapTargetSize, child: child, enableFeedback: enableFeedback, $creationLocationd_0dea112b090073317d4: C[606] || CT.C606});
    }
    get enabled() {
      return this.onPressed != null || this.onLongPress != null;
    }
    createState() {
      return new button._RawMaterialButtonState.new();
    }
  };
  (button.RawMaterialButton.new = function(opts) {
    let t51;
    let key = opts && 'key' in opts ? opts.key : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let onHighlightChanged = opts && 'onHighlightChanged' in opts ? opts.onHighlightChanged : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
    let fillColor = opts && 'fillColor' in opts ? opts.fillColor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : 2;
    let focusElevation = opts && 'focusElevation' in opts ? opts.focusElevation : 4;
    let hoverElevation = opts && 'hoverElevation' in opts ? opts.hoverElevation : 4;
    let highlightElevation = opts && 'highlightElevation' in opts ? opts.highlightElevation : 8;
    let disabledElevation = opts && 'disabledElevation' in opts ? opts.disabledElevation : 0;
    let padding = opts && 'padding' in opts ? opts.padding : C[253] || CT.C253;
    let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : C[603] || CT.C603;
    let constraints = opts && 'constraints' in opts ? opts.constraints : C[604] || CT.C604;
    let shape = opts && 'shape' in opts ? opts.shape : C[605] || CT.C605;
    let animationDuration = opts && 'animationDuration' in opts ? opts.animationDuration : C[160] || CT.C160;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[71] || CT.C71;
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : true;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$.onPressed$7] = onPressed;
    this[S$.onLongPress$1] = onLongPress;
    this[S$.onHighlightChanged] = onHighlightChanged;
    this[S$.mouseCursor$10] = mouseCursor;
    this[S$.textStyle$3] = textStyle;
    this[S$.fillColor$6] = fillColor;
    this[S$.focusColor$5] = focusColor;
    this[S$.hoverColor$6] = hoverColor;
    this[S$.highlightColor$2] = highlightColor;
    this[S$.splashColor$3] = splashColor;
    this[S$.elevation$14] = elevation;
    this[S$0.focusElevation$1] = focusElevation;
    this[S$.hoverElevation$1] = hoverElevation;
    this[S$0.highlightElevation$1] = highlightElevation;
    this[S$0.disabledElevation$1] = disabledElevation;
    this[S$0.padding$6] = padding;
    this[S$0.visualDensity$5] = visualDensity;
    this[S$0.constraints$4] = constraints;
    this[S$0.shape$11] = shape;
    this[S$0.animationDuration$2] = animationDuration;
    this[S$0.clipBehavior$5] = clipBehavior;
    this[S$0.focusNode$4] = focusNode;
    this[S$0.autofocus$4] = autofocus;
    this[S$0.child$17] = child;
    this[S$0.enableFeedback$5] = enableFeedback;
    this[S$0.materialTapTargetSize$4] = (t51 = materialTapTargetSize, t51 == null ? theme_data.MaterialTapTargetSize.padded : t51);
    if (!(shape !== null)) dart.assertFailed(null, I[81], 75, 15, "shape != null");
    if (!(elevation !== null && elevation >= 0.0)) dart.assertFailed(null, I[81], 76, 15, "elevation != null && elevation >= 0.0");
    if (!(focusElevation !== null && focusElevation >= 0.0)) dart.assertFailed(null, I[81], 77, 15, "focusElevation != null && focusElevation >= 0.0");
    if (!(hoverElevation !== null && hoverElevation >= 0.0)) dart.assertFailed(null, I[81], 78, 15, "hoverElevation != null && hoverElevation >= 0.0");
    if (!(highlightElevation !== null && highlightElevation >= 0.0)) dart.assertFailed(null, I[81], 79, 15, "highlightElevation != null && highlightElevation >= 0.0");
    if (!(disabledElevation !== null && disabledElevation >= 0.0)) dart.assertFailed(null, I[81], 80, 15, "disabledElevation != null && disabledElevation >= 0.0");
    if (!(padding !== null)) dart.assertFailed(null, I[81], 81, 15, "padding != null");
    if (!(constraints !== null)) dart.assertFailed(null, I[81], 82, 15, "constraints != null");
    if (!(animationDuration !== null)) dart.assertFailed(null, I[81], 83, 15, "animationDuration != null");
    if (!(clipBehavior !== null)) dart.assertFailed(null, I[81], 84, 15, "clipBehavior != null");
    if (!(autofocus !== null)) dart.assertFailed(null, I[81], 85, 15, "autofocus != null");
    button.RawMaterialButton.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = button.RawMaterialButton.prototype;
  dart.addTypeTests(button.RawMaterialButton);
  dart.addTypeCaches(button.RawMaterialButton);
  dart.setMethodSignature(button.RawMaterialButton, () => ({
    __proto__: dart.getMethods(button.RawMaterialButton.__proto__),
    createState: dart.fnType(framework.State$(button.RawMaterialButton), [])
  }));
  dart.setGetterSignature(button.RawMaterialButton, () => ({
    __proto__: dart.getGetters(button.RawMaterialButton.__proto__),
    enabled: core.bool
  }));
  dart.setLibraryUri(button.RawMaterialButton, I[82]);
  dart.setFieldSignature(button.RawMaterialButton, () => ({
    __proto__: dart.getFields(button.RawMaterialButton.__proto__),
    onPressed: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onLongPress: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onHighlightChanged: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.bool]))),
    mouseCursor: dart.finalFieldType(dart.nullable(mouse_cursor.MouseCursor)),
    textStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    fillColor: dart.finalFieldType(dart.nullable(ui.Color)),
    focusColor: dart.finalFieldType(dart.nullable(ui.Color)),
    hoverColor: dart.finalFieldType(dart.nullable(ui.Color)),
    highlightColor: dart.finalFieldType(dart.nullable(ui.Color)),
    splashColor: dart.finalFieldType(dart.nullable(ui.Color)),
    elevation: dart.finalFieldType(core.double),
    hoverElevation: dart.finalFieldType(core.double),
    focusElevation: dart.finalFieldType(core.double),
    highlightElevation: dart.finalFieldType(core.double),
    disabledElevation: dart.finalFieldType(core.double),
    padding: dart.finalFieldType(edge_insets.EdgeInsetsGeometry),
    visualDensity: dart.finalFieldType(theme_data.VisualDensity),
    constraints: dart.finalFieldType(box$.BoxConstraints),
    shape: dart.finalFieldType(borders.ShapeBorder),
    animationDuration: dart.finalFieldType(core.Duration),
    child: dart.finalFieldType(dart.nullable(framework.Widget)),
    materialTapTargetSize: dart.finalFieldType(theme_data.MaterialTapTargetSize),
    focusNode: dart.finalFieldType(dart.nullable(focus_manager.FocusNode)),
    autofocus: dart.finalFieldType(core.bool),
    clipBehavior: dart.finalFieldType(ui.Clip),
    enableFeedback: dart.finalFieldType(core.bool)
  }));
  const State_MaterialStateMixin$36 = class State_MaterialStateMixin extends framework.State$(button.RawMaterialButton) {};
  (State_MaterialStateMixin$36.new = function() {
    material_state_mixin.MaterialStateMixin$(button.RawMaterialButton)[dart.mixinNew].call(this);
    State_MaterialStateMixin$36.__proto__.new.call(this);
  }).prototype = State_MaterialStateMixin$36.prototype;
  dart.applyMixin(State_MaterialStateMixin$36, material_state_mixin.MaterialStateMixin$(button.RawMaterialButton));
  button._RawMaterialButtonState = class _RawMaterialButtonState extends State_MaterialStateMixin$36 {
    initState() {
      super.initState();
      this.setMaterialState(material_state.MaterialState.disabled, !this.widget.enabled);
    }
    didUpdateWidget(oldWidget) {
      button.RawMaterialButton.as(oldWidget);
      super.didUpdateWidget(oldWidget);
      this.setMaterialState(material_state.MaterialState.disabled, !this.widget.enabled);
      if (this.isDisabled && this.isPressed) {
        this.removeMaterialState(material_state.MaterialState.pressed);
      }
    }
    get [S$0._effectiveElevation]() {
      if (this.isDisabled) {
        return this.widget.disabledElevation;
      }
      if (this.isPressed) {
        return this.widget.highlightElevation;
      }
      if (this.isHovered) {
        return this.widget.hoverElevation;
      }
      if (this.isFocused) {
        return this.widget.focusElevation;
      }
      return this.widget.elevation;
    }
    build(context) {
      let t51, t51$, t51$0;
      let effectiveTextColor = material_state.MaterialStateProperty.resolveAs(T$.ColorN(), (t51 = this.widget.textStyle, t51 == null ? null : t51.color), this.materialStates);
      let effectiveShape = material_state.MaterialStateProperty.resolveAs(T$.ShapeBorderN(), this.widget.shape, this.materialStates);
      let densityAdjustment = this.widget.visualDensity.baseSizeAdjustment;
      let effectiveConstraints = this.widget.visualDensity.effectiveConstraints(this.widget.constraints);
      let effectiveMouseCursor = material_state.MaterialStateProperty.resolveAs(T$.MouseCursorN(), (t51$ = this.widget.mouseCursor, t51$ == null ? material_state.MaterialStateMouseCursor.clickable : t51$), this.materialStates);
      let padding = this.widget.padding.add(new edge_insets.EdgeInsets.only({left: densityAdjustment.dx, top: densityAdjustment.dy, right: densityAdjustment.dx, bottom: densityAdjustment.dy})).clamp(edge_insets.EdgeInsets.zero, edge_insets.EdgeInsetsGeometry.infinity);
      let result = new basic.ConstrainedBox.new({constraints: effectiveConstraints, child: new material.Material.new({elevation: this[S$0._effectiveElevation], textStyle: (t51$0 = this.widget.textStyle, t51$0 == null ? null : t51$0.copyWith({color: effectiveTextColor})), shape: effectiveShape, color: this.widget.fillColor, shadowColor: theme$.Theme.of(context).useMaterial3 ? theme$.Theme.of(context).shadowColor : null, type: this.widget.fillColor == null ? material.MaterialType.transparency : material.MaterialType.button, animationDuration: this.widget.animationDuration, clipBehavior: this.widget.clipBehavior, child: new ink_well.InkWell.new({focusNode: this.widget.focusNode, canRequestFocus: this.widget.enabled, onFocusChange: this.updateMaterialState(material_state.MaterialState.focused), autofocus: this.widget.autofocus, onHighlightChanged: this.updateMaterialState(material_state.MaterialState.pressed, {onChanged: this.widget.onHighlightChanged}), splashColor: this.widget.splashColor, highlightColor: this.widget.highlightColor, focusColor: this.widget.focusColor, hoverColor: this.widget.hoverColor, onHover: this.updateMaterialState(material_state.MaterialState.hovered), onTap: this.widget.onPressed, onLongPress: this.widget.onLongPress, enableFeedback: this.widget.enableFeedback, customBorder: effectiveShape, mouseCursor: effectiveMouseCursor, child: icon_theme.IconTheme.merge({data: new icon_theme_data.IconThemeData.new({color: effectiveTextColor}), child: new container.Container.new({padding: padding, child: new basic.Center.new({widthFactor: 1.0, heightFactor: 1.0, child: this.widget.child, $creationLocationd_0dea112b090073317d4: C[607] || CT.C607}), $creationLocationd_0dea112b090073317d4: C[608] || CT.C608})}), $creationLocationd_0dea112b090073317d4: C[609] || CT.C609}), $creationLocationd_0dea112b090073317d4: C[610] || CT.C610}), $creationLocationd_0dea112b090073317d4: C[611] || CT.C611});
      let minSize = null;
      switch (this.widget.materialTapTargetSize) {
        case C[64] || CT.C64:
          {
            minSize = new ui.Size.new(48 + densityAdjustment.dx, 48 + densityAdjustment.dy);
            if (!(minSize.width >= 0.0)) dart.assertFailed(null, I[81], 420, 16, "minSize.width >= 0.0");
            if (!(minSize.height >= 0.0)) dart.assertFailed(null, I[81], 421, 16, "minSize.height >= 0.0");
            break;
          }
        case C[65] || CT.C65:
          {
            minSize = ui.Size.zero;
            break;
          }
      }
      return new basic.Semantics.new({container: true, button: true, enabled: this.widget.enabled, child: new button._InputPadding.new({minSize: minSize, child: result, $creationLocationd_0dea112b090073317d4: C[612] || CT.C612}), $creationLocationd_0dea112b090073317d4: C[613] || CT.C613});
    }
    static ['_#new#tearOff']() {
      return new button._RawMaterialButtonState.new();
    }
  };
  (button._RawMaterialButtonState.new = function() {
    button._RawMaterialButtonState.__proto__.new.call(this);
    ;
  }).prototype = button._RawMaterialButtonState.prototype;
  dart.addTypeTests(button._RawMaterialButtonState);
  dart.addTypeCaches(button._RawMaterialButtonState);
  dart.setMethodSignature(button._RawMaterialButtonState, () => ({
    __proto__: dart.getMethods(button._RawMaterialButtonState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(button._RawMaterialButtonState, () => ({
    __proto__: dart.getGetters(button._RawMaterialButtonState.__proto__),
    [S$0._effectiveElevation]: core.double
  }));
  dart.setLibraryUri(button._RawMaterialButtonState, I[82]);
  button._InputPadding = class _InputPadding extends framework.SingleChildRenderObjectWidget {
    get minSize() {
      return this[S$0.minSize$1];
    }
    set minSize(value) {
      super.minSize = value;
    }
    static ['_#new#tearOff'](opts) {
      let child = opts && 'child' in opts ? opts.child : null;
      let minSize = opts && 'minSize' in opts ? opts.minSize : null;
      return new button._InputPadding.new({child: child, minSize: minSize, $creationLocationd_0dea112b090073317d4: C[614] || CT.C614});
    }
    createRenderObject(context) {
      return new button._RenderInputPadding.new(this.minSize);
    }
    updateRenderObject(context, renderObject) {
      button._RenderInputPadding.as(renderObject);
      renderObject.minSize = this.minSize;
    }
  };
  (button._InputPadding.new = function(opts) {
    let child = opts && 'child' in opts ? opts.child : null;
    let minSize = opts && 'minSize' in opts ? opts.minSize : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$0.minSize$1] = minSize;
    button._InputPadding.__proto__.new.call(this, {child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = button._InputPadding.prototype;
  dart.addTypeTests(button._InputPadding);
  dart.addTypeCaches(button._InputPadding);
  dart.setMethodSignature(button._InputPadding, () => ({
    __proto__: dart.getMethods(button._InputPadding.__proto__),
    createRenderObject: dart.fnType(object.RenderObject, [framework.BuildContext])
  }));
  dart.setLibraryUri(button._InputPadding, I[82]);
  dart.setFieldSignature(button._InputPadding, () => ({
    __proto__: dart.getFields(button._InputPadding.__proto__),
    minSize: dart.finalFieldType(ui.Size)
  }));
  button._RenderInputPadding = class _RenderInputPadding extends shifted_box.RenderShiftedBox {
    static ['_#new#tearOff'](_minSize, child = null) {
      return new button._RenderInputPadding.new(_minSize, child);
    }
    get minSize() {
      return this[S$0._minSize$1];
    }
    set minSize(value) {
      if (this[S$0._minSize$1]._equals(value)) {
        return;
      }
      this[S$0._minSize$1] = value;
      this.markNeedsLayout();
    }
    computeMinIntrinsicWidth(height) {
      if (this.child != null) {
        return math.max(core.double, dart.nullCheck(this.child).getMinIntrinsicWidth(height), this.minSize.width);
      }
      return 0.0;
    }
    computeMinIntrinsicHeight(width) {
      if (this.child != null) {
        return math.max(core.double, dart.nullCheck(this.child).getMinIntrinsicHeight(width), this.minSize.height);
      }
      return 0.0;
    }
    computeMaxIntrinsicWidth(height) {
      if (this.child != null) {
        return math.max(core.double, dart.nullCheck(this.child).getMaxIntrinsicWidth(height), this.minSize.width);
      }
      return 0.0;
    }
    computeMaxIntrinsicHeight(width) {
      if (this.child != null) {
        return math.max(core.double, dart.nullCheck(this.child).getMaxIntrinsicHeight(width), this.minSize.height);
      }
      return 0.0;
    }
    [S$0._computeSize$1](opts) {
      let constraints = opts && 'constraints' in opts ? opts.constraints : null;
      let layoutChild = opts && 'layoutChild' in opts ? opts.layoutChild : null;
      if (this.child != null) {
        let childSize = layoutChild(dart.nullCheck(this.child), constraints);
        let height = math.max(core.double, childSize.width, this.minSize.width);
        let width = math.max(core.double, childSize.height, this.minSize.height);
        return constraints.constrain(new ui.Size.new(height, width));
      }
      return ui.Size.zero;
    }
    computeDryLayout(constraints) {
      return this[S$0._computeSize$1]({constraints: constraints, layoutChild: C[69] || CT.C69});
    }
    performLayout() {
      this.size = this[S$0._computeSize$1]({constraints: this.constraints, layoutChild: C[70] || CT.C70});
      if (this.child != null) {
        let childParentData = box$.BoxParentData.as(dart.nullCheck(dart.nullCheck(this.child).parentData));
        childParentData.offset = alignment.Alignment.center.alongOffset(ui.Offset.as(this.size['-'](dart.nullCheck(this.child).size)));
      }
    }
    hitTest(result, opts) {
      let position = opts && 'position' in opts ? opts.position : null;
      if (super.hitTest(result, {position: position})) {
        return true;
      }
      let center = dart.nullCheck(this.child).size.center(ui.Offset.zero);
      return result.addWithRawTransform({transform: matrix_utils.MatrixUtils.forceToPoint(center), position: center, hitTest: dart.fn((result, position) => {
          if (!position._equals(center)) dart.assertFailed(null, I[81], 549, 16, "position == center");
          return dart.nullCheck(this.child).hitTest(result, {position: center});
        }, T$.BoxHitTestResultAndOffsetTobool())});
    }
  };
  (button._RenderInputPadding.new = function(_minSize, child = null) {
    this[S$0._minSize$1] = _minSize;
    button._RenderInputPadding.__proto__.new.call(this, child);
    ;
  }).prototype = button._RenderInputPadding.prototype;
  dart.addTypeTests(button._RenderInputPadding);
  dart.addTypeCaches(button._RenderInputPadding);
  dart.setMethodSignature(button._RenderInputPadding, () => ({
    __proto__: dart.getMethods(button._RenderInputPadding.__proto__),
    [S$0._computeSize$1]: dart.fnType(ui.Size, [], {}, {constraints: box$.BoxConstraints, layoutChild: dart.fnType(ui.Size, [box$.RenderBox, box$.BoxConstraints])})
  }));
  dart.setGetterSignature(button._RenderInputPadding, () => ({
    __proto__: dart.getGetters(button._RenderInputPadding.__proto__),
    minSize: ui.Size
  }));
  dart.setSetterSignature(button._RenderInputPadding, () => ({
    __proto__: dart.getSetters(button._RenderInputPadding.__proto__),
    minSize: ui.Size
  }));
  dart.setLibraryUri(button._RenderInputPadding, I[82]);
  dart.setFieldSignature(button._RenderInputPadding, () => ({
    __proto__: dart.getFields(button._RenderInputPadding.__proto__),
    [S$0._minSize$1]: dart.fieldType(ui.Size)
  }));
  material_button.MaterialButton = class MaterialButton extends framework.StatelessWidget {
    get onPressed() {
      return this[S$0.onPressed$8];
    }
    set onPressed(value) {
      super.onPressed = value;
    }
    get onLongPress() {
      return this[S$0.onLongPress$2];
    }
    set onLongPress(value) {
      super.onLongPress = value;
    }
    get onHighlightChanged() {
      return this[S$0.onHighlightChanged$1];
    }
    set onHighlightChanged(value) {
      super.onHighlightChanged = value;
    }
    get mouseCursor() {
      return this[S$0.mouseCursor$11];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    get textTheme() {
      return this[S$0.textTheme];
    }
    set textTheme(value) {
      super.textTheme = value;
    }
    get textColor() {
      return this[S$0.textColor$2];
    }
    set textColor(value) {
      super.textColor = value;
    }
    get disabledTextColor() {
      return this[S$0.disabledTextColor$1];
    }
    set disabledTextColor(value) {
      super.disabledTextColor = value;
    }
    get color() {
      return this[S$0.color$9];
    }
    set color(value) {
      super.color = value;
    }
    get disabledColor() {
      return this[S$0.disabledColor$3];
    }
    set disabledColor(value) {
      super.disabledColor = value;
    }
    get splashColor() {
      return this[S$0.splashColor$4];
    }
    set splashColor(value) {
      super.splashColor = value;
    }
    get focusColor() {
      return this[S$0.focusColor$6];
    }
    set focusColor(value) {
      super.focusColor = value;
    }
    get hoverColor() {
      return this[S$0.hoverColor$7];
    }
    set hoverColor(value) {
      super.hoverColor = value;
    }
    get highlightColor() {
      return this[S$0.highlightColor$3];
    }
    set highlightColor(value) {
      super.highlightColor = value;
    }
    get elevation() {
      return this[S$0.elevation$15];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get hoverElevation() {
      return this[S$0.hoverElevation$2];
    }
    set hoverElevation(value) {
      super.hoverElevation = value;
    }
    get focusElevation() {
      return this[S$0.focusElevation$2];
    }
    set focusElevation(value) {
      super.focusElevation = value;
    }
    get highlightElevation() {
      return this[S$0.highlightElevation$2];
    }
    set highlightElevation(value) {
      super.highlightElevation = value;
    }
    get disabledElevation() {
      return this[S$0.disabledElevation$2];
    }
    set disabledElevation(value) {
      super.disabledElevation = value;
    }
    get colorBrightness() {
      return this[S$0.colorBrightness];
    }
    set colorBrightness(value) {
      super.colorBrightness = value;
    }
    get child() {
      return this[S$0.child$18];
    }
    set child(value) {
      super.child = value;
    }
    get padding() {
      return this[S$0.padding$7];
    }
    set padding(value) {
      super.padding = value;
    }
    get visualDensity() {
      return this[S$0.visualDensity$6];
    }
    set visualDensity(value) {
      super.visualDensity = value;
    }
    get shape() {
      return this[S$0.shape$12];
    }
    set shape(value) {
      super.shape = value;
    }
    get clipBehavior() {
      return this[S$0.clipBehavior$6];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    get focusNode() {
      return this[S$0.focusNode$5];
    }
    set focusNode(value) {
      super.focusNode = value;
    }
    get autofocus() {
      return this[S$0.autofocus$5];
    }
    set autofocus(value) {
      super.autofocus = value;
    }
    get animationDuration() {
      return this[S$0.animationDuration$3];
    }
    set animationDuration(value) {
      super.animationDuration = value;
    }
    get materialTapTargetSize() {
      return this[S$0.materialTapTargetSize$5];
    }
    set materialTapTargetSize(value) {
      super.materialTapTargetSize = value;
    }
    get minWidth() {
      return this[S$0.minWidth$2];
    }
    set minWidth(value) {
      super.minWidth = value;
    }
    get height() {
      return this[S$0.height$4];
    }
    set height(value) {
      super.height = value;
    }
    get enableFeedback() {
      return this[S$0.enableFeedback$6];
    }
    set enableFeedback(value) {
      super.enableFeedback = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
      let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
      let onHighlightChanged = opts && 'onHighlightChanged' in opts ? opts.onHighlightChanged : null;
      let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
      let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
      let textColor = opts && 'textColor' in opts ? opts.textColor : null;
      let disabledTextColor = opts && 'disabledTextColor' in opts ? opts.disabledTextColor : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
      let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
      let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
      let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
      let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
      let colorBrightness = opts && 'colorBrightness' in opts ? opts.colorBrightness : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let focusElevation = opts && 'focusElevation' in opts ? opts.focusElevation : null;
      let hoverElevation = opts && 'hoverElevation' in opts ? opts.hoverElevation : null;
      let highlightElevation = opts && 'highlightElevation' in opts ? opts.highlightElevation : null;
      let disabledElevation = opts && 'disabledElevation' in opts ? opts.disabledElevation : null;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[71] || CT.C71;
      let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
      let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
      let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
      let animationDuration = opts && 'animationDuration' in opts ? opts.animationDuration : null;
      let minWidth = opts && 'minWidth' in opts ? opts.minWidth : null;
      let height = opts && 'height' in opts ? opts.height : null;
      let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : true;
      let child = opts && 'child' in opts ? opts.child : null;
      return new material_button.MaterialButton.new({key: key, onPressed: onPressed, onLongPress: onLongPress, onHighlightChanged: onHighlightChanged, mouseCursor: mouseCursor, textTheme: textTheme, textColor: textColor, disabledTextColor: disabledTextColor, color: color, disabledColor: disabledColor, focusColor: focusColor, hoverColor: hoverColor, highlightColor: highlightColor, splashColor: splashColor, colorBrightness: colorBrightness, elevation: elevation, focusElevation: focusElevation, hoverElevation: hoverElevation, highlightElevation: highlightElevation, disabledElevation: disabledElevation, padding: padding, visualDensity: visualDensity, shape: shape, clipBehavior: clipBehavior, focusNode: focusNode, autofocus: autofocus, materialTapTargetSize: materialTapTargetSize, animationDuration: animationDuration, minWidth: minWidth, height: height, enableFeedback: enableFeedback, child: child, $creationLocationd_0dea112b090073317d4: C[615] || CT.C615});
    }
    get enabled() {
      return this.onPressed != null || this.onLongPress != null;
    }
    build(context) {
      let t51, t51$, t51$0, t51$1, t51$2, t51$3, t51$4;
      let theme = theme$.Theme.of(context);
      let buttonTheme = button_theme.ButtonTheme.of(context);
      return new button.RawMaterialButton.new({onPressed: this.onPressed, onLongPress: this.onLongPress, enableFeedback: this.enableFeedback, onHighlightChanged: this.onHighlightChanged, mouseCursor: this.mouseCursor, fillColor: buttonTheme.getFillColor(this), textStyle: dart.nullCheck(theme.textTheme.button).copyWith({color: buttonTheme.getTextColor(this)}), focusColor: (t51 = this.focusColor, t51 == null ? buttonTheme.getFocusColor(this) : t51), hoverColor: (t51$ = this.hoverColor, t51$ == null ? buttonTheme.getHoverColor(this) : t51$), highlightColor: (t51$0 = this.highlightColor, t51$0 == null ? theme.highlightColor : t51$0), splashColor: (t51$1 = this.splashColor, t51$1 == null ? theme.splashColor : t51$1), elevation: buttonTheme.getElevation(this), focusElevation: buttonTheme.getFocusElevation(this), hoverElevation: buttonTheme.getHoverElevation(this), highlightElevation: buttonTheme.getHighlightElevation(this), padding: buttonTheme.getPadding(this), visualDensity: (t51$2 = this.visualDensity, t51$2 == null ? theme.visualDensity : t51$2), constraints: buttonTheme.getConstraints(this).copyWith({minWidth: this.minWidth, minHeight: this.height}), shape: buttonTheme.getShape(this), clipBehavior: this.clipBehavior, focusNode: this.focusNode, autofocus: this.autofocus, animationDuration: buttonTheme.getAnimationDuration(this), materialTapTargetSize: (t51$3 = this.materialTapTargetSize, t51$3 == null ? theme.materialTapTargetSize : t51$3), disabledElevation: (t51$4 = this.disabledElevation, t51$4 == null ? 0.0 : t51$4), child: this.child, $creationLocationd_0dea112b090073317d4: C[616] || CT.C616});
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new diagnostics.FlagProperty.new("enabled", {value: this.enabled, ifFalse: "disabled"}));
      properties.add(new (T$.DiagnosticsPropertyOfButtonTextTheme()).new("textTheme", this.textTheme, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("textColor", this.textColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("disabledTextColor", this.disabledTextColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("color", this.color, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("disabledColor", this.disabledColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("focusColor", this.focusColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("hoverColor", this.hoverColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("highlightColor", this.highlightColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("splashColor", this.splashColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfBrightness()).new("colorBrightness", this.colorBrightness, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfEdgeInsetsGeometry()).new("padding", this.padding, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfVisualDensity()).new("visualDensity", this.visualDensity, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfShapeBorder()).new("shape", this.shape, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfFocusNode()).new("focusNode", this.focusNode, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialTapTargetSize()).new("materialTapTargetSize", this.materialTapTargetSize, {defaultValue: null}));
    }
  };
  (material_button.MaterialButton.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let onHighlightChanged = opts && 'onHighlightChanged' in opts ? opts.onHighlightChanged : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
    let textColor = opts && 'textColor' in opts ? opts.textColor : null;
    let disabledTextColor = opts && 'disabledTextColor' in opts ? opts.disabledTextColor : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let colorBrightness = opts && 'colorBrightness' in opts ? opts.colorBrightness : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let focusElevation = opts && 'focusElevation' in opts ? opts.focusElevation : null;
    let hoverElevation = opts && 'hoverElevation' in opts ? opts.hoverElevation : null;
    let highlightElevation = opts && 'highlightElevation' in opts ? opts.highlightElevation : null;
    let disabledElevation = opts && 'disabledElevation' in opts ? opts.disabledElevation : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[71] || CT.C71;
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    let animationDuration = opts && 'animationDuration' in opts ? opts.animationDuration : null;
    let minWidth = opts && 'minWidth' in opts ? opts.minWidth : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : true;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$0.onPressed$8] = onPressed;
    this[S$0.onLongPress$2] = onLongPress;
    this[S$0.onHighlightChanged$1] = onHighlightChanged;
    this[S$0.mouseCursor$11] = mouseCursor;
    this[S$0.textTheme] = textTheme;
    this[S$0.textColor$2] = textColor;
    this[S$0.disabledTextColor$1] = disabledTextColor;
    this[S$0.color$9] = color;
    this[S$0.disabledColor$3] = disabledColor;
    this[S$0.focusColor$6] = focusColor;
    this[S$0.hoverColor$7] = hoverColor;
    this[S$0.highlightColor$3] = highlightColor;
    this[S$0.splashColor$4] = splashColor;
    this[S$0.colorBrightness] = colorBrightness;
    this[S$0.elevation$15] = elevation;
    this[S$0.focusElevation$2] = focusElevation;
    this[S$0.hoverElevation$2] = hoverElevation;
    this[S$0.highlightElevation$2] = highlightElevation;
    this[S$0.disabledElevation$2] = disabledElevation;
    this[S$0.padding$7] = padding;
    this[S$0.visualDensity$6] = visualDensity;
    this[S$0.shape$12] = shape;
    this[S$0.clipBehavior$6] = clipBehavior;
    this[S$0.focusNode$5] = focusNode;
    this[S$0.autofocus$5] = autofocus;
    this[S$0.materialTapTargetSize$5] = materialTapTargetSize;
    this[S$0.animationDuration$3] = animationDuration;
    this[S$0.minWidth$2] = minWidth;
    this[S$0.height$4] = height;
    this[S$0.enableFeedback$6] = enableFeedback;
    this[S$0.child$18] = child;
    if (!(clipBehavior !== null)) dart.assertFailed(null, I[83], 85, 15, "clipBehavior != null");
    if (!(autofocus !== null)) dart.assertFailed(null, I[83], 86, 15, "autofocus != null");
    if (!(elevation == null || dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, I[83], 87, 15, "elevation == null || elevation >= 0.0");
    if (!(focusElevation == null || dart.notNull(focusElevation) >= 0.0)) dart.assertFailed(null, I[83], 88, 15, "focusElevation == null || focusElevation >= 0.0");
    if (!(hoverElevation == null || dart.notNull(hoverElevation) >= 0.0)) dart.assertFailed(null, I[83], 89, 15, "hoverElevation == null || hoverElevation >= 0.0");
    if (!(highlightElevation == null || dart.notNull(highlightElevation) >= 0.0)) dart.assertFailed(null, I[83], 90, 15, "highlightElevation == null || highlightElevation >= 0.0");
    if (!(disabledElevation == null || dart.notNull(disabledElevation) >= 0.0)) dart.assertFailed(null, I[83], 91, 15, "disabledElevation == null || disabledElevation >= 0.0");
    material_button.MaterialButton.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = material_button.MaterialButton.prototype;
  dart.addTypeTests(material_button.MaterialButton);
  dart.addTypeCaches(material_button.MaterialButton);
  dart.setMethodSignature(material_button.MaterialButton, () => ({
    __proto__: dart.getMethods(material_button.MaterialButton.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(material_button.MaterialButton, () => ({
    __proto__: dart.getGetters(material_button.MaterialButton.__proto__),
    enabled: core.bool
  }));
  dart.setLibraryUri(material_button.MaterialButton, I[84]);
  dart.setFieldSignature(material_button.MaterialButton, () => ({
    __proto__: dart.getFields(material_button.MaterialButton.__proto__),
    onPressed: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onLongPress: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onHighlightChanged: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.bool]))),
    mouseCursor: dart.finalFieldType(dart.nullable(mouse_cursor.MouseCursor)),
    textTheme: dart.finalFieldType(dart.nullable(button_theme.ButtonTextTheme)),
    textColor: dart.finalFieldType(dart.nullable(ui.Color)),
    disabledTextColor: dart.finalFieldType(dart.nullable(ui.Color)),
    color: dart.finalFieldType(dart.nullable(ui.Color)),
    disabledColor: dart.finalFieldType(dart.nullable(ui.Color)),
    splashColor: dart.finalFieldType(dart.nullable(ui.Color)),
    focusColor: dart.finalFieldType(dart.nullable(ui.Color)),
    hoverColor: dart.finalFieldType(dart.nullable(ui.Color)),
    highlightColor: dart.finalFieldType(dart.nullable(ui.Color)),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    hoverElevation: dart.finalFieldType(dart.nullable(core.double)),
    focusElevation: dart.finalFieldType(dart.nullable(core.double)),
    highlightElevation: dart.finalFieldType(dart.nullable(core.double)),
    disabledElevation: dart.finalFieldType(dart.nullable(core.double)),
    colorBrightness: dart.finalFieldType(dart.nullable(ui.Brightness)),
    child: dart.finalFieldType(dart.nullable(framework.Widget)),
    padding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    visualDensity: dart.finalFieldType(dart.nullable(theme_data.VisualDensity)),
    shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    clipBehavior: dart.finalFieldType(ui.Clip),
    focusNode: dart.finalFieldType(dart.nullable(focus_manager.FocusNode)),
    autofocus: dart.finalFieldType(core.bool),
    animationDuration: dart.finalFieldType(dart.nullable(core.Duration)),
    materialTapTargetSize: dart.finalFieldType(dart.nullable(theme_data.MaterialTapTargetSize)),
    minWidth: dart.finalFieldType(dart.nullable(core.double)),
    height: dart.finalFieldType(dart.nullable(core.double)),
    enableFeedback: dart.finalFieldType(core.bool)
  }));
  material_button.MaterialButtonWithIconMixin = class MaterialButtonWithIconMixin extends core.Object {};
  material_button.MaterialButtonWithIconMixin[dart.mixinOn] = Object => class MaterialButtonWithIconMixin extends Object {};
  (material_button.MaterialButtonWithIconMixin[dart.mixinNew] = function() {
  }).prototype = material_button.MaterialButtonWithIconMixin.prototype;
  dart.addTypeTests(material_button.MaterialButtonWithIconMixin);
  dart.addTypeCaches(material_button.MaterialButtonWithIconMixin);
  material_button.MaterialButtonWithIconMixin[dart.implements] = () => [core.Object];
  dart.setLibraryUri(material_button.MaterialButtonWithIconMixin, I[84]);
  const Object_Diagnosticable$36$23 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$23.new = function() {
  }).prototype = Object_Diagnosticable$36$23.prototype;
  dart.applyMixin(Object_Diagnosticable$36$23, diagnostics.Diagnosticable);
  color_scheme.ColorScheme = class ColorScheme extends Object_Diagnosticable$36$23 {
    get brightness() {
      return this[S$0.brightness$1];
    }
    set brightness(value) {
      super.brightness = value;
    }
    get primary() {
      return this[S$0.primary];
    }
    set primary(value) {
      super.primary = value;
    }
    get onPrimary() {
      return this[S$0.onPrimary];
    }
    set onPrimary(value) {
      super.onPrimary = value;
    }
    get [S$0._primaryContainer$1]() {
      return this[S$0._primaryContainer];
    }
    set [S$0._primaryContainer$1](value) {
      super[S$0._primaryContainer$1] = value;
    }
    get [S$0._onPrimaryContainer$1]() {
      return this[S$0._onPrimaryContainer];
    }
    set [S$0._onPrimaryContainer$1](value) {
      super[S$0._onPrimaryContainer$1] = value;
    }
    get secondary() {
      return this[S$0.secondary];
    }
    set secondary(value) {
      super.secondary = value;
    }
    get onSecondary() {
      return this[S$0.onSecondary];
    }
    set onSecondary(value) {
      super.onSecondary = value;
    }
    get [S$0._secondaryContainer$1]() {
      return this[S$0._secondaryContainer];
    }
    set [S$0._secondaryContainer$1](value) {
      super[S$0._secondaryContainer$1] = value;
    }
    get [S$0._onSecondaryContainer$1]() {
      return this[S$0._onSecondaryContainer];
    }
    set [S$0._onSecondaryContainer$1](value) {
      super[S$0._onSecondaryContainer$1] = value;
    }
    get [S$0._tertiary$1]() {
      return this[S$0._tertiary];
    }
    set [S$0._tertiary$1](value) {
      super[S$0._tertiary$1] = value;
    }
    get [S$0._onTertiary$1]() {
      return this[S$0._onTertiary];
    }
    set [S$0._onTertiary$1](value) {
      super[S$0._onTertiary$1] = value;
    }
    get [S$0._tertiaryContainer$1]() {
      return this[S$0._tertiaryContainer];
    }
    set [S$0._tertiaryContainer$1](value) {
      super[S$0._tertiaryContainer$1] = value;
    }
    get [S$0._onTertiaryContainer$1]() {
      return this[S$0._onTertiaryContainer];
    }
    set [S$0._onTertiaryContainer$1](value) {
      super[S$0._onTertiaryContainer$1] = value;
    }
    get error() {
      return this[S$0.error];
    }
    set error(value) {
      super.error = value;
    }
    get onError() {
      return this[S$0.onError];
    }
    set onError(value) {
      super.onError = value;
    }
    get [S$0._errorContainer$1]() {
      return this[S$0._errorContainer];
    }
    set [S$0._errorContainer$1](value) {
      super[S$0._errorContainer$1] = value;
    }
    get [S$0._onErrorContainer$1]() {
      return this[S$0._onErrorContainer];
    }
    set [S$0._onErrorContainer$1](value) {
      super[S$0._onErrorContainer$1] = value;
    }
    get background() {
      return this[S$0.background$1];
    }
    set background(value) {
      super.background = value;
    }
    get onBackground() {
      return this[S$0.onBackground];
    }
    set onBackground(value) {
      super.onBackground = value;
    }
    get surface() {
      return this[S$0.surface];
    }
    set surface(value) {
      super.surface = value;
    }
    get onSurface() {
      return this[S$0.onSurface];
    }
    set onSurface(value) {
      super.onSurface = value;
    }
    get [S$0._surfaceVariant$1]() {
      return this[S$0._surfaceVariant];
    }
    set [S$0._surfaceVariant$1](value) {
      super[S$0._surfaceVariant$1] = value;
    }
    get [S$0._onSurfaceVariant$1]() {
      return this[S$0._onSurfaceVariant];
    }
    set [S$0._onSurfaceVariant$1](value) {
      super[S$0._onSurfaceVariant$1] = value;
    }
    get [S$0._outline$1]() {
      return this[S$0._outline];
    }
    set [S$0._outline$1](value) {
      super[S$0._outline$1] = value;
    }
    get [S$0._shadow$1]() {
      return this[S$0._shadow];
    }
    set [S$0._shadow$1](value) {
      super[S$0._shadow$1] = value;
    }
    get [S$0._inverseSurface$1]() {
      return this[S$0._inverseSurface];
    }
    set [S$0._inverseSurface$1](value) {
      super[S$0._inverseSurface$1] = value;
    }
    get [S$0._onInverseSurface$1]() {
      return this[S$0._onInverseSurface];
    }
    set [S$0._onInverseSurface$1](value) {
      super[S$0._onInverseSurface$1] = value;
    }
    get [S$0._inversePrimary$1]() {
      return this[S$0._inversePrimary];
    }
    set [S$0._inversePrimary$1](value) {
      super[S$0._inversePrimary$1] = value;
    }
    get [S$0._surfaceTint$1]() {
      return this[S$0._surfaceTint];
    }
    set [S$0._surfaceTint$1](value) {
      super[S$0._surfaceTint$1] = value;
    }
    get [S$0._primaryVariant$1]() {
      return this[S$0._primaryVariant];
    }
    set [S$0._primaryVariant$1](value) {
      super[S$0._primaryVariant$1] = value;
    }
    get [S$0._secondaryVariant$1]() {
      return this[S$0._secondaryVariant];
    }
    set [S$0._secondaryVariant$1](value) {
      super[S$0._secondaryVariant$1] = value;
    }
    static ['_#new#tearOff'](opts) {
      let brightness = opts && 'brightness' in opts ? opts.brightness : null;
      let primary = opts && 'primary' in opts ? opts.primary : null;
      let onPrimary = opts && 'onPrimary' in opts ? opts.onPrimary : null;
      let primaryContainer = opts && 'primaryContainer' in opts ? opts.primaryContainer : null;
      let onPrimaryContainer = opts && 'onPrimaryContainer' in opts ? opts.onPrimaryContainer : null;
      let secondary = opts && 'secondary' in opts ? opts.secondary : null;
      let onSecondary = opts && 'onSecondary' in opts ? opts.onSecondary : null;
      let secondaryContainer = opts && 'secondaryContainer' in opts ? opts.secondaryContainer : null;
      let onSecondaryContainer = opts && 'onSecondaryContainer' in opts ? opts.onSecondaryContainer : null;
      let tertiary = opts && 'tertiary' in opts ? opts.tertiary : null;
      let onTertiary = opts && 'onTertiary' in opts ? opts.onTertiary : null;
      let tertiaryContainer = opts && 'tertiaryContainer' in opts ? opts.tertiaryContainer : null;
      let onTertiaryContainer = opts && 'onTertiaryContainer' in opts ? opts.onTertiaryContainer : null;
      let error = opts && 'error' in opts ? opts.error : null;
      let onError = opts && 'onError' in opts ? opts.onError : null;
      let errorContainer = opts && 'errorContainer' in opts ? opts.errorContainer : null;
      let onErrorContainer = opts && 'onErrorContainer' in opts ? opts.onErrorContainer : null;
      let background = opts && 'background' in opts ? opts.background : null;
      let onBackground = opts && 'onBackground' in opts ? opts.onBackground : null;
      let surface = opts && 'surface' in opts ? opts.surface : null;
      let onSurface = opts && 'onSurface' in opts ? opts.onSurface : null;
      let surfaceVariant = opts && 'surfaceVariant' in opts ? opts.surfaceVariant : null;
      let onSurfaceVariant = opts && 'onSurfaceVariant' in opts ? opts.onSurfaceVariant : null;
      let outline = opts && 'outline' in opts ? opts.outline : null;
      let shadow = opts && 'shadow' in opts ? opts.shadow : null;
      let inverseSurface = opts && 'inverseSurface' in opts ? opts.inverseSurface : null;
      let onInverseSurface = opts && 'onInverseSurface' in opts ? opts.onInverseSurface : null;
      let inversePrimary = opts && 'inversePrimary' in opts ? opts.inversePrimary : null;
      let surfaceTint = opts && 'surfaceTint' in opts ? opts.surfaceTint : null;
      let primaryVariant = opts && 'primaryVariant' in opts ? opts.primaryVariant : null;
      let secondaryVariant = opts && 'secondaryVariant' in opts ? opts.secondaryVariant : null;
      return new color_scheme.ColorScheme.new({brightness: brightness, primary: primary, onPrimary: onPrimary, primaryContainer: primaryContainer, onPrimaryContainer: onPrimaryContainer, secondary: secondary, onSecondary: onSecondary, secondaryContainer: secondaryContainer, onSecondaryContainer: onSecondaryContainer, tertiary: tertiary, onTertiary: onTertiary, tertiaryContainer: tertiaryContainer, onTertiaryContainer: onTertiaryContainer, error: error, onError: onError, errorContainer: errorContainer, onErrorContainer: onErrorContainer, background: background, onBackground: onBackground, surface: surface, onSurface: onSurface, surfaceVariant: surfaceVariant, onSurfaceVariant: onSurfaceVariant, outline: outline, shadow: shadow, inverseSurface: inverseSurface, onInverseSurface: onInverseSurface, inversePrimary: inversePrimary, surfaceTint: surfaceTint, primaryVariant: primaryVariant, secondaryVariant: secondaryVariant});
    }
    static ['_#fromSeed#tearOff'](opts) {
      let seedColor = opts && 'seedColor' in opts ? opts.seedColor : null;
      let brightness = opts && 'brightness' in opts ? opts.brightness : C[551] || CT.C551;
      let primary = opts && 'primary' in opts ? opts.primary : null;
      let onPrimary = opts && 'onPrimary' in opts ? opts.onPrimary : null;
      let primaryContainer = opts && 'primaryContainer' in opts ? opts.primaryContainer : null;
      let onPrimaryContainer = opts && 'onPrimaryContainer' in opts ? opts.onPrimaryContainer : null;
      let secondary = opts && 'secondary' in opts ? opts.secondary : null;
      let onSecondary = opts && 'onSecondary' in opts ? opts.onSecondary : null;
      let secondaryContainer = opts && 'secondaryContainer' in opts ? opts.secondaryContainer : null;
      let onSecondaryContainer = opts && 'onSecondaryContainer' in opts ? opts.onSecondaryContainer : null;
      let tertiary = opts && 'tertiary' in opts ? opts.tertiary : null;
      let onTertiary = opts && 'onTertiary' in opts ? opts.onTertiary : null;
      let tertiaryContainer = opts && 'tertiaryContainer' in opts ? opts.tertiaryContainer : null;
      let onTertiaryContainer = opts && 'onTertiaryContainer' in opts ? opts.onTertiaryContainer : null;
      let error = opts && 'error' in opts ? opts.error : null;
      let onError = opts && 'onError' in opts ? opts.onError : null;
      let errorContainer = opts && 'errorContainer' in opts ? opts.errorContainer : null;
      let onErrorContainer = opts && 'onErrorContainer' in opts ? opts.onErrorContainer : null;
      let outline = opts && 'outline' in opts ? opts.outline : null;
      let background = opts && 'background' in opts ? opts.background : null;
      let onBackground = opts && 'onBackground' in opts ? opts.onBackground : null;
      let surface = opts && 'surface' in opts ? opts.surface : null;
      let onSurface = opts && 'onSurface' in opts ? opts.onSurface : null;
      let surfaceVariant = opts && 'surfaceVariant' in opts ? opts.surfaceVariant : null;
      let onSurfaceVariant = opts && 'onSurfaceVariant' in opts ? opts.onSurfaceVariant : null;
      let inverseSurface = opts && 'inverseSurface' in opts ? opts.inverseSurface : null;
      let onInverseSurface = opts && 'onInverseSurface' in opts ? opts.onInverseSurface : null;
      let inversePrimary = opts && 'inversePrimary' in opts ? opts.inversePrimary : null;
      let shadow = opts && 'shadow' in opts ? opts.shadow : null;
      let surfaceTint = opts && 'surfaceTint' in opts ? opts.surfaceTint : null;
      return color_scheme.ColorScheme.fromSeed({seedColor: seedColor, brightness: brightness, primary: primary, onPrimary: onPrimary, primaryContainer: primaryContainer, onPrimaryContainer: onPrimaryContainer, secondary: secondary, onSecondary: onSecondary, secondaryContainer: secondaryContainer, onSecondaryContainer: onSecondaryContainer, tertiary: tertiary, onTertiary: onTertiary, tertiaryContainer: tertiaryContainer, onTertiaryContainer: onTertiaryContainer, error: error, onError: onError, errorContainer: errorContainer, onErrorContainer: onErrorContainer, outline: outline, background: background, onBackground: onBackground, surface: surface, onSurface: onSurface, surfaceVariant: surfaceVariant, onSurfaceVariant: onSurfaceVariant, inverseSurface: inverseSurface, onInverseSurface: onInverseSurface, inversePrimary: inversePrimary, shadow: shadow, surfaceTint: surfaceTint});
    }
    static fromSeed(opts) {
      let t51, t51$, t51$0, t51$1, t51$2, t51$3, t51$4, t51$5, t51$6, t51$7, t51$8, t51$9, t51$10, t51$11, t51$12, t51$13, t51$14, t51$15, t51$16, t51$17, t51$18, t51$19, t51$20, t51$21, t51$22, t51$23, t51$24, t51$25;
      let seedColor = opts && 'seedColor' in opts ? opts.seedColor : null;
      let brightness = opts && 'brightness' in opts ? opts.brightness : C[551] || CT.C551;
      let primary = opts && 'primary' in opts ? opts.primary : null;
      let onPrimary = opts && 'onPrimary' in opts ? opts.onPrimary : null;
      let primaryContainer = opts && 'primaryContainer' in opts ? opts.primaryContainer : null;
      let onPrimaryContainer = opts && 'onPrimaryContainer' in opts ? opts.onPrimaryContainer : null;
      let secondary = opts && 'secondary' in opts ? opts.secondary : null;
      let onSecondary = opts && 'onSecondary' in opts ? opts.onSecondary : null;
      let secondaryContainer = opts && 'secondaryContainer' in opts ? opts.secondaryContainer : null;
      let onSecondaryContainer = opts && 'onSecondaryContainer' in opts ? opts.onSecondaryContainer : null;
      let tertiary = opts && 'tertiary' in opts ? opts.tertiary : null;
      let onTertiary = opts && 'onTertiary' in opts ? opts.onTertiary : null;
      let tertiaryContainer = opts && 'tertiaryContainer' in opts ? opts.tertiaryContainer : null;
      let onTertiaryContainer = opts && 'onTertiaryContainer' in opts ? opts.onTertiaryContainer : null;
      let error = opts && 'error' in opts ? opts.error : null;
      let onError = opts && 'onError' in opts ? opts.onError : null;
      let errorContainer = opts && 'errorContainer' in opts ? opts.errorContainer : null;
      let onErrorContainer = opts && 'onErrorContainer' in opts ? opts.onErrorContainer : null;
      let outline = opts && 'outline' in opts ? opts.outline : null;
      let background = opts && 'background' in opts ? opts.background : null;
      let onBackground = opts && 'onBackground' in opts ? opts.onBackground : null;
      let surface = opts && 'surface' in opts ? opts.surface : null;
      let onSurface = opts && 'onSurface' in opts ? opts.onSurface : null;
      let surfaceVariant = opts && 'surfaceVariant' in opts ? opts.surfaceVariant : null;
      let onSurfaceVariant = opts && 'onSurfaceVariant' in opts ? opts.onSurfaceVariant : null;
      let inverseSurface = opts && 'inverseSurface' in opts ? opts.inverseSurface : null;
      let onInverseSurface = opts && 'onInverseSurface' in opts ? opts.onInverseSurface : null;
      let inversePrimary = opts && 'inversePrimary' in opts ? opts.inversePrimary : null;
      let shadow = opts && 'shadow' in opts ? opts.shadow : null;
      let surfaceTint = opts && 'surfaceTint' in opts ? opts.surfaceTint : null;
      let scheme = null;
      switch (brightness) {
        case C[551] || CT.C551:
          {
            scheme = scheme$.Scheme.light(seedColor.value);
            break;
          }
        case C[550] || CT.C550:
          {
            scheme = scheme$.Scheme.dark(seedColor.value);
            break;
          }
      }
      return new color_scheme.ColorScheme.new({primary: (t51 = primary, t51 == null ? new ui.Color.new(scheme.primary) : t51), onPrimary: (t51$ = onPrimary, t51$ == null ? new ui.Color.new(scheme.onPrimary) : t51$), primaryContainer: (t51$0 = primaryContainer, t51$0 == null ? new ui.Color.new(scheme.primaryContainer) : t51$0), onPrimaryContainer: (t51$1 = onPrimaryContainer, t51$1 == null ? new ui.Color.new(scheme.onPrimaryContainer) : t51$1), secondary: (t51$2 = secondary, t51$2 == null ? new ui.Color.new(scheme.secondary) : t51$2), onSecondary: (t51$3 = onSecondary, t51$3 == null ? new ui.Color.new(scheme.onSecondary) : t51$3), secondaryContainer: (t51$4 = secondaryContainer, t51$4 == null ? new ui.Color.new(scheme.secondaryContainer) : t51$4), onSecondaryContainer: (t51$5 = onSecondaryContainer, t51$5 == null ? new ui.Color.new(scheme.onSecondaryContainer) : t51$5), tertiary: (t51$6 = tertiary, t51$6 == null ? new ui.Color.new(scheme.tertiary) : t51$6), onTertiary: (t51$7 = onTertiary, t51$7 == null ? new ui.Color.new(scheme.onTertiary) : t51$7), tertiaryContainer: (t51$8 = tertiaryContainer, t51$8 == null ? new ui.Color.new(scheme.tertiaryContainer) : t51$8), onTertiaryContainer: (t51$9 = onTertiaryContainer, t51$9 == null ? new ui.Color.new(scheme.onTertiaryContainer) : t51$9), error: (t51$10 = error, t51$10 == null ? new ui.Color.new(scheme.error) : t51$10), onError: (t51$11 = onError, t51$11 == null ? new ui.Color.new(scheme.onError) : t51$11), errorContainer: (t51$12 = errorContainer, t51$12 == null ? new ui.Color.new(scheme.errorContainer) : t51$12), onErrorContainer: (t51$13 = onErrorContainer, t51$13 == null ? new ui.Color.new(scheme.onErrorContainer) : t51$13), outline: (t51$14 = outline, t51$14 == null ? new ui.Color.new(scheme.outline) : t51$14), background: (t51$15 = background, t51$15 == null ? new ui.Color.new(scheme.background) : t51$15), onBackground: (t51$16 = onBackground, t51$16 == null ? new ui.Color.new(scheme.onBackground) : t51$16), surface: (t51$17 = surface, t51$17 == null ? new ui.Color.new(scheme.surface) : t51$17), onSurface: (t51$18 = onSurface, t51$18 == null ? new ui.Color.new(scheme.onSurface) : t51$18), surfaceVariant: (t51$19 = surfaceVariant, t51$19 == null ? new ui.Color.new(scheme.surfaceVariant) : t51$19), onSurfaceVariant: (t51$20 = onSurfaceVariant, t51$20 == null ? new ui.Color.new(scheme.onSurfaceVariant) : t51$20), inverseSurface: (t51$21 = inverseSurface, t51$21 == null ? new ui.Color.new(scheme.inverseSurface) : t51$21), onInverseSurface: (t51$22 = onInverseSurface, t51$22 == null ? new ui.Color.new(scheme.inverseOnSurface) : t51$22), inversePrimary: (t51$23 = inversePrimary, t51$23 == null ? new ui.Color.new(scheme.inversePrimary) : t51$23), shadow: (t51$24 = shadow, t51$24 == null ? new ui.Color.new(scheme.shadow) : t51$24), surfaceTint: (t51$25 = surfaceTint, t51$25 == null ? new ui.Color.new(scheme.primary) : t51$25), brightness: brightness});
    }
    static ['_#light#tearOff'](opts) {
      let brightness = opts && 'brightness' in opts ? opts.brightness : C[551] || CT.C551;
      let primary = opts && 'primary' in opts ? opts.primary : C[617] || CT.C617;
      let onPrimary = opts && 'onPrimary' in opts ? opts.onPrimary : C[618] || CT.C618;
      let primaryContainer = opts && 'primaryContainer' in opts ? opts.primaryContainer : null;
      let onPrimaryContainer = opts && 'onPrimaryContainer' in opts ? opts.onPrimaryContainer : null;
      let secondary = opts && 'secondary' in opts ? opts.secondary : C[619] || CT.C619;
      let onSecondary = opts && 'onSecondary' in opts ? opts.onSecondary : C[21] || CT.C21;
      let secondaryContainer = opts && 'secondaryContainer' in opts ? opts.secondaryContainer : null;
      let onSecondaryContainer = opts && 'onSecondaryContainer' in opts ? opts.onSecondaryContainer : null;
      let tertiary = opts && 'tertiary' in opts ? opts.tertiary : null;
      let onTertiary = opts && 'onTertiary' in opts ? opts.onTertiary : null;
      let tertiaryContainer = opts && 'tertiaryContainer' in opts ? opts.tertiaryContainer : null;
      let onTertiaryContainer = opts && 'onTertiaryContainer' in opts ? opts.onTertiaryContainer : null;
      let error = opts && 'error' in opts ? opts.error : C[620] || CT.C620;
      let onError = opts && 'onError' in opts ? opts.onError : C[618] || CT.C618;
      let errorContainer = opts && 'errorContainer' in opts ? opts.errorContainer : null;
      let onErrorContainer = opts && 'onErrorContainer' in opts ? opts.onErrorContainer : null;
      let background = opts && 'background' in opts ? opts.background : C[618] || CT.C618;
      let onBackground = opts && 'onBackground' in opts ? opts.onBackground : C[21] || CT.C21;
      let surface = opts && 'surface' in opts ? opts.surface : C[618] || CT.C618;
      let onSurface = opts && 'onSurface' in opts ? opts.onSurface : C[21] || CT.C21;
      let surfaceVariant = opts && 'surfaceVariant' in opts ? opts.surfaceVariant : null;
      let onSurfaceVariant = opts && 'onSurfaceVariant' in opts ? opts.onSurfaceVariant : null;
      let outline = opts && 'outline' in opts ? opts.outline : null;
      let shadow = opts && 'shadow' in opts ? opts.shadow : null;
      let inverseSurface = opts && 'inverseSurface' in opts ? opts.inverseSurface : null;
      let onInverseSurface = opts && 'onInverseSurface' in opts ? opts.onInverseSurface : null;
      let inversePrimary = opts && 'inversePrimary' in opts ? opts.inversePrimary : null;
      let surfaceTint = opts && 'surfaceTint' in opts ? opts.surfaceTint : null;
      let primaryVariant = opts && 'primaryVariant' in opts ? opts.primaryVariant : C[621] || CT.C621;
      let secondaryVariant = opts && 'secondaryVariant' in opts ? opts.secondaryVariant : C[622] || CT.C622;
      return new color_scheme.ColorScheme.light({brightness: brightness, primary: primary, onPrimary: onPrimary, primaryContainer: primaryContainer, onPrimaryContainer: onPrimaryContainer, secondary: secondary, onSecondary: onSecondary, secondaryContainer: secondaryContainer, onSecondaryContainer: onSecondaryContainer, tertiary: tertiary, onTertiary: onTertiary, tertiaryContainer: tertiaryContainer, onTertiaryContainer: onTertiaryContainer, error: error, onError: onError, errorContainer: errorContainer, onErrorContainer: onErrorContainer, background: background, onBackground: onBackground, surface: surface, onSurface: onSurface, surfaceVariant: surfaceVariant, onSurfaceVariant: onSurfaceVariant, outline: outline, shadow: shadow, inverseSurface: inverseSurface, onInverseSurface: onInverseSurface, inversePrimary: inversePrimary, surfaceTint: surfaceTint, primaryVariant: primaryVariant, secondaryVariant: secondaryVariant});
    }
    static ['_#dark#tearOff'](opts) {
      let brightness = opts && 'brightness' in opts ? opts.brightness : C[550] || CT.C550;
      let primary = opts && 'primary' in opts ? opts.primary : C[623] || CT.C623;
      let onPrimary = opts && 'onPrimary' in opts ? opts.onPrimary : C[21] || CT.C21;
      let primaryContainer = opts && 'primaryContainer' in opts ? opts.primaryContainer : null;
      let onPrimaryContainer = opts && 'onPrimaryContainer' in opts ? opts.onPrimaryContainer : null;
      let secondary = opts && 'secondary' in opts ? opts.secondary : C[619] || CT.C619;
      let onSecondary = opts && 'onSecondary' in opts ? opts.onSecondary : C[21] || CT.C21;
      let secondaryContainer = opts && 'secondaryContainer' in opts ? opts.secondaryContainer : null;
      let onSecondaryContainer = opts && 'onSecondaryContainer' in opts ? opts.onSecondaryContainer : null;
      let tertiary = opts && 'tertiary' in opts ? opts.tertiary : null;
      let onTertiary = opts && 'onTertiary' in opts ? opts.onTertiary : null;
      let tertiaryContainer = opts && 'tertiaryContainer' in opts ? opts.tertiaryContainer : null;
      let onTertiaryContainer = opts && 'onTertiaryContainer' in opts ? opts.onTertiaryContainer : null;
      let error = opts && 'error' in opts ? opts.error : C[624] || CT.C624;
      let onError = opts && 'onError' in opts ? opts.onError : C[21] || CT.C21;
      let errorContainer = opts && 'errorContainer' in opts ? opts.errorContainer : null;
      let onErrorContainer = opts && 'onErrorContainer' in opts ? opts.onErrorContainer : null;
      let background = opts && 'background' in opts ? opts.background : C[625] || CT.C625;
      let onBackground = opts && 'onBackground' in opts ? opts.onBackground : C[618] || CT.C618;
      let surface = opts && 'surface' in opts ? opts.surface : C[625] || CT.C625;
      let onSurface = opts && 'onSurface' in opts ? opts.onSurface : C[618] || CT.C618;
      let surfaceVariant = opts && 'surfaceVariant' in opts ? opts.surfaceVariant : null;
      let onSurfaceVariant = opts && 'onSurfaceVariant' in opts ? opts.onSurfaceVariant : null;
      let outline = opts && 'outline' in opts ? opts.outline : null;
      let shadow = opts && 'shadow' in opts ? opts.shadow : null;
      let inverseSurface = opts && 'inverseSurface' in opts ? opts.inverseSurface : null;
      let onInverseSurface = opts && 'onInverseSurface' in opts ? opts.onInverseSurface : null;
      let inversePrimary = opts && 'inversePrimary' in opts ? opts.inversePrimary : null;
      let surfaceTint = opts && 'surfaceTint' in opts ? opts.surfaceTint : null;
      let primaryVariant = opts && 'primaryVariant' in opts ? opts.primaryVariant : C[621] || CT.C621;
      let secondaryVariant = opts && 'secondaryVariant' in opts ? opts.secondaryVariant : C[619] || CT.C619;
      return new color_scheme.ColorScheme.dark({brightness: brightness, primary: primary, onPrimary: onPrimary, primaryContainer: primaryContainer, onPrimaryContainer: onPrimaryContainer, secondary: secondary, onSecondary: onSecondary, secondaryContainer: secondaryContainer, onSecondaryContainer: onSecondaryContainer, tertiary: tertiary, onTertiary: onTertiary, tertiaryContainer: tertiaryContainer, onTertiaryContainer: onTertiaryContainer, error: error, onError: onError, errorContainer: errorContainer, onErrorContainer: onErrorContainer, background: background, onBackground: onBackground, surface: surface, onSurface: onSurface, surfaceVariant: surfaceVariant, onSurfaceVariant: onSurfaceVariant, outline: outline, shadow: shadow, inverseSurface: inverseSurface, onInverseSurface: onInverseSurface, inversePrimary: inversePrimary, surfaceTint: surfaceTint, primaryVariant: primaryVariant, secondaryVariant: secondaryVariant});
    }
    static ['_#highContrastLight#tearOff'](opts) {
      let brightness = opts && 'brightness' in opts ? opts.brightness : C[551] || CT.C551;
      let primary = opts && 'primary' in opts ? opts.primary : C[626] || CT.C626;
      let onPrimary = opts && 'onPrimary' in opts ? opts.onPrimary : C[618] || CT.C618;
      let primaryContainer = opts && 'primaryContainer' in opts ? opts.primaryContainer : null;
      let onPrimaryContainer = opts && 'onPrimaryContainer' in opts ? opts.onPrimaryContainer : null;
      let secondary = opts && 'secondary' in opts ? opts.secondary : C[627] || CT.C627;
      let onSecondary = opts && 'onSecondary' in opts ? opts.onSecondary : C[21] || CT.C21;
      let secondaryContainer = opts && 'secondaryContainer' in opts ? opts.secondaryContainer : null;
      let onSecondaryContainer = opts && 'onSecondaryContainer' in opts ? opts.onSecondaryContainer : null;
      let tertiary = opts && 'tertiary' in opts ? opts.tertiary : null;
      let onTertiary = opts && 'onTertiary' in opts ? opts.onTertiary : null;
      let tertiaryContainer = opts && 'tertiaryContainer' in opts ? opts.tertiaryContainer : null;
      let onTertiaryContainer = opts && 'onTertiaryContainer' in opts ? opts.onTertiaryContainer : null;
      let error = opts && 'error' in opts ? opts.error : C[628] || CT.C628;
      let onError = opts && 'onError' in opts ? opts.onError : C[618] || CT.C618;
      let errorContainer = opts && 'errorContainer' in opts ? opts.errorContainer : null;
      let onErrorContainer = opts && 'onErrorContainer' in opts ? opts.onErrorContainer : null;
      let background = opts && 'background' in opts ? opts.background : C[618] || CT.C618;
      let onBackground = opts && 'onBackground' in opts ? opts.onBackground : C[21] || CT.C21;
      let surface = opts && 'surface' in opts ? opts.surface : C[618] || CT.C618;
      let onSurface = opts && 'onSurface' in opts ? opts.onSurface : C[21] || CT.C21;
      let surfaceVariant = opts && 'surfaceVariant' in opts ? opts.surfaceVariant : null;
      let onSurfaceVariant = opts && 'onSurfaceVariant' in opts ? opts.onSurfaceVariant : null;
      let outline = opts && 'outline' in opts ? opts.outline : null;
      let shadow = opts && 'shadow' in opts ? opts.shadow : null;
      let inverseSurface = opts && 'inverseSurface' in opts ? opts.inverseSurface : null;
      let onInverseSurface = opts && 'onInverseSurface' in opts ? opts.onInverseSurface : null;
      let inversePrimary = opts && 'inversePrimary' in opts ? opts.inversePrimary : null;
      let surfaceTint = opts && 'surfaceTint' in opts ? opts.surfaceTint : null;
      let primaryVariant = opts && 'primaryVariant' in opts ? opts.primaryVariant : C[629] || CT.C629;
      let secondaryVariant = opts && 'secondaryVariant' in opts ? opts.secondaryVariant : C[622] || CT.C622;
      return new color_scheme.ColorScheme.highContrastLight({brightness: brightness, primary: primary, onPrimary: onPrimary, primaryContainer: primaryContainer, onPrimaryContainer: onPrimaryContainer, secondary: secondary, onSecondary: onSecondary, secondaryContainer: secondaryContainer, onSecondaryContainer: onSecondaryContainer, tertiary: tertiary, onTertiary: onTertiary, tertiaryContainer: tertiaryContainer, onTertiaryContainer: onTertiaryContainer, error: error, onError: onError, errorContainer: errorContainer, onErrorContainer: onErrorContainer, background: background, onBackground: onBackground, surface: surface, onSurface: onSurface, surfaceVariant: surfaceVariant, onSurfaceVariant: onSurfaceVariant, outline: outline, shadow: shadow, inverseSurface: inverseSurface, onInverseSurface: onInverseSurface, inversePrimary: inversePrimary, surfaceTint: surfaceTint, primaryVariant: primaryVariant, secondaryVariant: secondaryVariant});
    }
    static ['_#highContrastDark#tearOff'](opts) {
      let brightness = opts && 'brightness' in opts ? opts.brightness : C[550] || CT.C550;
      let primary = opts && 'primary' in opts ? opts.primary : C[630] || CT.C630;
      let onPrimary = opts && 'onPrimary' in opts ? opts.onPrimary : C[21] || CT.C21;
      let primaryContainer = opts && 'primaryContainer' in opts ? opts.primaryContainer : null;
      let onPrimaryContainer = opts && 'onPrimaryContainer' in opts ? opts.onPrimaryContainer : null;
      let secondary = opts && 'secondary' in opts ? opts.secondary : C[627] || CT.C627;
      let onSecondary = opts && 'onSecondary' in opts ? opts.onSecondary : C[21] || CT.C21;
      let secondaryContainer = opts && 'secondaryContainer' in opts ? opts.secondaryContainer : null;
      let onSecondaryContainer = opts && 'onSecondaryContainer' in opts ? opts.onSecondaryContainer : null;
      let tertiary = opts && 'tertiary' in opts ? opts.tertiary : null;
      let onTertiary = opts && 'onTertiary' in opts ? opts.onTertiary : null;
      let tertiaryContainer = opts && 'tertiaryContainer' in opts ? opts.tertiaryContainer : null;
      let onTertiaryContainer = opts && 'onTertiaryContainer' in opts ? opts.onTertiaryContainer : null;
      let error = opts && 'error' in opts ? opts.error : C[631] || CT.C631;
      let onError = opts && 'onError' in opts ? opts.onError : C[21] || CT.C21;
      let errorContainer = opts && 'errorContainer' in opts ? opts.errorContainer : null;
      let onErrorContainer = opts && 'onErrorContainer' in opts ? opts.onErrorContainer : null;
      let background = opts && 'background' in opts ? opts.background : C[625] || CT.C625;
      let onBackground = opts && 'onBackground' in opts ? opts.onBackground : C[618] || CT.C618;
      let surface = opts && 'surface' in opts ? opts.surface : C[625] || CT.C625;
      let onSurface = opts && 'onSurface' in opts ? opts.onSurface : C[618] || CT.C618;
      let surfaceVariant = opts && 'surfaceVariant' in opts ? opts.surfaceVariant : null;
      let onSurfaceVariant = opts && 'onSurfaceVariant' in opts ? opts.onSurfaceVariant : null;
      let outline = opts && 'outline' in opts ? opts.outline : null;
      let shadow = opts && 'shadow' in opts ? opts.shadow : null;
      let inverseSurface = opts && 'inverseSurface' in opts ? opts.inverseSurface : null;
      let onInverseSurface = opts && 'onInverseSurface' in opts ? opts.onInverseSurface : null;
      let inversePrimary = opts && 'inversePrimary' in opts ? opts.inversePrimary : null;
      let surfaceTint = opts && 'surfaceTint' in opts ? opts.surfaceTint : null;
      let primaryVariant = opts && 'primaryVariant' in opts ? opts.primaryVariant : C[632] || CT.C632;
      let secondaryVariant = opts && 'secondaryVariant' in opts ? opts.secondaryVariant : C[627] || CT.C627;
      return new color_scheme.ColorScheme.highContrastDark({brightness: brightness, primary: primary, onPrimary: onPrimary, primaryContainer: primaryContainer, onPrimaryContainer: onPrimaryContainer, secondary: secondary, onSecondary: onSecondary, secondaryContainer: secondaryContainer, onSecondaryContainer: onSecondaryContainer, tertiary: tertiary, onTertiary: onTertiary, tertiaryContainer: tertiaryContainer, onTertiaryContainer: onTertiaryContainer, error: error, onError: onError, errorContainer: errorContainer, onErrorContainer: onErrorContainer, background: background, onBackground: onBackground, surface: surface, onSurface: onSurface, surfaceVariant: surfaceVariant, onSurfaceVariant: onSurfaceVariant, outline: outline, shadow: shadow, inverseSurface: inverseSurface, onInverseSurface: onInverseSurface, inversePrimary: inversePrimary, surfaceTint: surfaceTint, primaryVariant: primaryVariant, secondaryVariant: secondaryVariant});
    }
    static fromSwatch(opts) {
      let t51, t51$, t51$0, t51$1, t51$2;
      let primarySwatch = opts && 'primarySwatch' in opts ? opts.primarySwatch : C[633] || CT.C633;
      let primaryColorDark = opts && 'primaryColorDark' in opts ? opts.primaryColorDark : null;
      let accentColor = opts && 'accentColor' in opts ? opts.accentColor : null;
      let cardColor = opts && 'cardColor' in opts ? opts.cardColor : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let errorColor = opts && 'errorColor' in opts ? opts.errorColor : null;
      let brightness = opts && 'brightness' in opts ? opts.brightness : C[551] || CT.C551;
      if (!(primarySwatch !== null)) dart.assertFailed(null, I[85], 555, 12, "primarySwatch != null");
      if (!(brightness !== null)) dart.assertFailed(null, I[85], 556, 12, "brightness != null");
      let isDark = brightness === ui.Brightness.dark;
      let primaryIsDark = color_scheme.ColorScheme._brightnessFor(primarySwatch) === ui.Brightness.dark;
      let secondary = (t51 = accentColor, t51 == null ? isDark ? dart.nullCheck(colors$.Colors.tealAccent._get(200)) : primarySwatch : t51);
      let secondaryIsDark = color_scheme.ColorScheme._brightnessFor(secondary) === ui.Brightness.dark;
      return new color_scheme.ColorScheme.new({primary: primarySwatch, primaryVariant: (t51$ = primaryColorDark, t51$ == null ? isDark ? colors$.Colors.black : dart.nullCheck(primarySwatch._get(700)) : t51$), secondary: secondary, secondaryVariant: isDark ? dart.nullCheck(colors$.Colors.tealAccent._get(700)) : dart.nullCheck(primarySwatch._get(700)), surface: (t51$0 = cardColor, t51$0 == null ? isDark ? dart.nullCheck(colors$.Colors.grey._get(800)) : colors$.Colors.white : t51$0), background: (t51$1 = backgroundColor, t51$1 == null ? isDark ? dart.nullCheck(colors$.Colors.grey._get(700)) : dart.nullCheck(primarySwatch._get(200)) : t51$1), error: (t51$2 = errorColor, t51$2 == null ? dart.nullCheck(colors$.Colors.red._get(700)) : t51$2), onPrimary: primaryIsDark ? colors$.Colors.white : colors$.Colors.black, onSecondary: secondaryIsDark ? colors$.Colors.white : colors$.Colors.black, onSurface: isDark ? colors$.Colors.white : colors$.Colors.black, onBackground: primaryIsDark ? colors$.Colors.white : colors$.Colors.black, onError: isDark ? colors$.Colors.black : colors$.Colors.white, brightness: brightness});
    }
    static ['_#fromSwatch#tearOff'](opts) {
      let primarySwatch = opts && 'primarySwatch' in opts ? opts.primarySwatch : C[633] || CT.C633;
      let primaryColorDark = opts && 'primaryColorDark' in opts ? opts.primaryColorDark : null;
      let accentColor = opts && 'accentColor' in opts ? opts.accentColor : null;
      let cardColor = opts && 'cardColor' in opts ? opts.cardColor : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let errorColor = opts && 'errorColor' in opts ? opts.errorColor : null;
      let brightness = opts && 'brightness' in opts ? opts.brightness : C[551] || CT.C551;
      return color_scheme.ColorScheme.fromSwatch({primarySwatch: primarySwatch, primaryColorDark: primaryColorDark, accentColor: accentColor, cardColor: cardColor, backgroundColor: backgroundColor, errorColor: errorColor, brightness: brightness});
    }
    static _brightnessFor(color) {
      return theme_data.ThemeData.estimateBrightnessForColor(color);
    }
    get primaryContainer() {
      let t51;
      t51 = this[S$0._primaryContainer$1];
      return t51 == null ? this.primary : t51;
    }
    get onPrimaryContainer() {
      let t51;
      t51 = this[S$0._onPrimaryContainer$1];
      return t51 == null ? this.onPrimary : t51;
    }
    get secondaryContainer() {
      let t51;
      t51 = this[S$0._secondaryContainer$1];
      return t51 == null ? this.secondary : t51;
    }
    get onSecondaryContainer() {
      let t51;
      t51 = this[S$0._onSecondaryContainer$1];
      return t51 == null ? this.onSecondary : t51;
    }
    get tertiary() {
      let t51;
      t51 = this[S$0._tertiary$1];
      return t51 == null ? this.secondary : t51;
    }
    get onTertiary() {
      let t51;
      t51 = this[S$0._onTertiary$1];
      return t51 == null ? this.onSecondary : t51;
    }
    get tertiaryContainer() {
      let t51;
      t51 = this[S$0._tertiaryContainer$1];
      return t51 == null ? this.tertiary : t51;
    }
    get onTertiaryContainer() {
      let t51;
      t51 = this[S$0._onTertiaryContainer$1];
      return t51 == null ? this.onTertiary : t51;
    }
    get errorContainer() {
      let t51;
      t51 = this[S$0._errorContainer$1];
      return t51 == null ? this.error : t51;
    }
    get onErrorContainer() {
      let t51;
      t51 = this[S$0._onErrorContainer$1];
      return t51 == null ? this.onError : t51;
    }
    get surfaceVariant() {
      let t51;
      t51 = this[S$0._surfaceVariant$1];
      return t51 == null ? this.surface : t51;
    }
    get onSurfaceVariant() {
      let t51;
      t51 = this[S$0._onSurfaceVariant$1];
      return t51 == null ? this.onSurface : t51;
    }
    get outline() {
      let t51;
      t51 = this[S$0._outline$1];
      return t51 == null ? this.onBackground : t51;
    }
    get shadow() {
      let t51;
      t51 = this[S$0._shadow$1];
      return t51 == null ? C[21] || CT.C21 : t51;
    }
    get inverseSurface() {
      let t51;
      t51 = this[S$0._inverseSurface$1];
      return t51 == null ? this.onSurface : t51;
    }
    get onInverseSurface() {
      let t51;
      t51 = this[S$0._onInverseSurface$1];
      return t51 == null ? this.surface : t51;
    }
    get inversePrimary() {
      let t51;
      t51 = this[S$0._inversePrimary$1];
      return t51 == null ? this.onPrimary : t51;
    }
    get surfaceTint() {
      let t51;
      t51 = this[S$0._surfaceTint$1];
      return t51 == null ? this.primary : t51;
    }
    get primaryVariant() {
      let t51;
      t51 = this[S$0._primaryVariant$1];
      return t51 == null ? this.primary : t51;
    }
    get secondaryVariant() {
      let t51;
      t51 = this[S$0._secondaryVariant$1];
      return t51 == null ? this.secondary : t51;
    }
    copyWith(opts) {
      let t51, t51$, t51$0, t51$1, t51$2, t51$3, t51$4, t51$5, t51$6, t51$7, t51$8, t51$9, t51$10, t51$11, t51$12, t51$13, t51$14, t51$15, t51$16, t51$17, t51$18, t51$19, t51$20, t51$21, t51$22, t51$23, t51$24, t51$25, t51$26, t51$27, t51$28;
      let brightness = opts && 'brightness' in opts ? opts.brightness : null;
      let primary = opts && 'primary' in opts ? opts.primary : null;
      let onPrimary = opts && 'onPrimary' in opts ? opts.onPrimary : null;
      let primaryContainer = opts && 'primaryContainer' in opts ? opts.primaryContainer : null;
      let onPrimaryContainer = opts && 'onPrimaryContainer' in opts ? opts.onPrimaryContainer : null;
      let secondary = opts && 'secondary' in opts ? opts.secondary : null;
      let onSecondary = opts && 'onSecondary' in opts ? opts.onSecondary : null;
      let secondaryContainer = opts && 'secondaryContainer' in opts ? opts.secondaryContainer : null;
      let onSecondaryContainer = opts && 'onSecondaryContainer' in opts ? opts.onSecondaryContainer : null;
      let tertiary = opts && 'tertiary' in opts ? opts.tertiary : null;
      let onTertiary = opts && 'onTertiary' in opts ? opts.onTertiary : null;
      let tertiaryContainer = opts && 'tertiaryContainer' in opts ? opts.tertiaryContainer : null;
      let onTertiaryContainer = opts && 'onTertiaryContainer' in opts ? opts.onTertiaryContainer : null;
      let error = opts && 'error' in opts ? opts.error : null;
      let onError = opts && 'onError' in opts ? opts.onError : null;
      let errorContainer = opts && 'errorContainer' in opts ? opts.errorContainer : null;
      let onErrorContainer = opts && 'onErrorContainer' in opts ? opts.onErrorContainer : null;
      let background = opts && 'background' in opts ? opts.background : null;
      let onBackground = opts && 'onBackground' in opts ? opts.onBackground : null;
      let surface = opts && 'surface' in opts ? opts.surface : null;
      let onSurface = opts && 'onSurface' in opts ? opts.onSurface : null;
      let surfaceVariant = opts && 'surfaceVariant' in opts ? opts.surfaceVariant : null;
      let onSurfaceVariant = opts && 'onSurfaceVariant' in opts ? opts.onSurfaceVariant : null;
      let outline = opts && 'outline' in opts ? opts.outline : null;
      let shadow = opts && 'shadow' in opts ? opts.shadow : null;
      let inverseSurface = opts && 'inverseSurface' in opts ? opts.inverseSurface : null;
      let onInverseSurface = opts && 'onInverseSurface' in opts ? opts.onInverseSurface : null;
      let inversePrimary = opts && 'inversePrimary' in opts ? opts.inversePrimary : null;
      let surfaceTint = opts && 'surfaceTint' in opts ? opts.surfaceTint : null;
      let primaryVariant = opts && 'primaryVariant' in opts ? opts.primaryVariant : null;
      let secondaryVariant = opts && 'secondaryVariant' in opts ? opts.secondaryVariant : null;
      return new color_scheme.ColorScheme.new({brightness: (t51 = brightness, t51 == null ? this.brightness : t51), primary: (t51$ = primary, t51$ == null ? this.primary : t51$), onPrimary: (t51$0 = onPrimary, t51$0 == null ? this.onPrimary : t51$0), primaryContainer: (t51$1 = primaryContainer, t51$1 == null ? this.primaryContainer : t51$1), onPrimaryContainer: (t51$2 = onPrimaryContainer, t51$2 == null ? this.onPrimaryContainer : t51$2), secondary: (t51$3 = secondary, t51$3 == null ? this.secondary : t51$3), onSecondary: (t51$4 = onSecondary, t51$4 == null ? this.onSecondary : t51$4), secondaryContainer: (t51$5 = secondaryContainer, t51$5 == null ? this.secondaryContainer : t51$5), onSecondaryContainer: (t51$6 = onSecondaryContainer, t51$6 == null ? this.onSecondaryContainer : t51$6), tertiary: (t51$7 = tertiary, t51$7 == null ? this.tertiary : t51$7), onTertiary: (t51$8 = onTertiary, t51$8 == null ? this.onTertiary : t51$8), tertiaryContainer: (t51$9 = tertiaryContainer, t51$9 == null ? this.tertiaryContainer : t51$9), onTertiaryContainer: (t51$10 = onTertiaryContainer, t51$10 == null ? this.onTertiaryContainer : t51$10), error: (t51$11 = error, t51$11 == null ? this.error : t51$11), onError: (t51$12 = onError, t51$12 == null ? this.onError : t51$12), errorContainer: (t51$13 = errorContainer, t51$13 == null ? this.errorContainer : t51$13), onErrorContainer: (t51$14 = onErrorContainer, t51$14 == null ? this.onErrorContainer : t51$14), background: (t51$15 = background, t51$15 == null ? this.background : t51$15), onBackground: (t51$16 = onBackground, t51$16 == null ? this.onBackground : t51$16), surface: (t51$17 = surface, t51$17 == null ? this.surface : t51$17), onSurface: (t51$18 = onSurface, t51$18 == null ? this.onSurface : t51$18), surfaceVariant: (t51$19 = surfaceVariant, t51$19 == null ? this.surfaceVariant : t51$19), onSurfaceVariant: (t51$20 = onSurfaceVariant, t51$20 == null ? this.onSurfaceVariant : t51$20), outline: (t51$21 = outline, t51$21 == null ? this.outline : t51$21), shadow: (t51$22 = shadow, t51$22 == null ? this.shadow : t51$22), inverseSurface: (t51$23 = inverseSurface, t51$23 == null ? this.inverseSurface : t51$23), onInverseSurface: (t51$24 = onInverseSurface, t51$24 == null ? this.onInverseSurface : t51$24), inversePrimary: (t51$25 = inversePrimary, t51$25 == null ? this.inversePrimary : t51$25), primaryVariant: (t51$26 = primaryVariant, t51$26 == null ? this.primaryVariant : t51$26), secondaryVariant: (t51$27 = secondaryVariant, t51$27 == null ? this.secondaryVariant : t51$27), surfaceTint: (t51$28 = surfaceTint, t51$28 == null ? this.surfaceTint : t51$28)});
    }
    static lerp(a, b, t) {
      return new color_scheme.ColorScheme.new({brightness: t < 0.5 ? a.brightness : b.brightness, primary: dart.nullCheck(ui.Color.lerp(a.primary, b.primary, t)), onPrimary: dart.nullCheck(ui.Color.lerp(a.onPrimary, b.onPrimary, t)), primaryContainer: ui.Color.lerp(a.primaryContainer, b.primaryContainer, t), onPrimaryContainer: ui.Color.lerp(a.onPrimaryContainer, b.onPrimaryContainer, t), secondary: dart.nullCheck(ui.Color.lerp(a.secondary, b.secondary, t)), onSecondary: dart.nullCheck(ui.Color.lerp(a.onSecondary, b.onSecondary, t)), secondaryContainer: ui.Color.lerp(a.secondaryContainer, b.secondaryContainer, t), onSecondaryContainer: ui.Color.lerp(a.onSecondaryContainer, b.onSecondaryContainer, t), tertiary: ui.Color.lerp(a.tertiary, b.tertiary, t), onTertiary: ui.Color.lerp(a.onTertiary, b.onTertiary, t), tertiaryContainer: ui.Color.lerp(a.tertiaryContainer, b.tertiaryContainer, t), onTertiaryContainer: ui.Color.lerp(a.onTertiaryContainer, b.onTertiaryContainer, t), error: dart.nullCheck(ui.Color.lerp(a.error, b.error, t)), onError: dart.nullCheck(ui.Color.lerp(a.onError, b.onError, t)), errorContainer: ui.Color.lerp(a.errorContainer, b.errorContainer, t), onErrorContainer: ui.Color.lerp(a.onErrorContainer, b.onErrorContainer, t), background: dart.nullCheck(ui.Color.lerp(a.background, b.background, t)), onBackground: dart.nullCheck(ui.Color.lerp(a.onBackground, b.onBackground, t)), surface: dart.nullCheck(ui.Color.lerp(a.surface, b.surface, t)), onSurface: dart.nullCheck(ui.Color.lerp(a.onSurface, b.onSurface, t)), surfaceVariant: ui.Color.lerp(a.surfaceVariant, b.surfaceVariant, t), onSurfaceVariant: ui.Color.lerp(a.onSurfaceVariant, b.onSurfaceVariant, t), outline: ui.Color.lerp(a.outline, b.outline, t), shadow: ui.Color.lerp(a.shadow, b.shadow, t), inverseSurface: ui.Color.lerp(a.inverseSurface, b.inverseSurface, t), onInverseSurface: ui.Color.lerp(a.onInverseSurface, b.onInverseSurface, t), inversePrimary: ui.Color.lerp(a.inversePrimary, b.inversePrimary, t), primaryVariant: ui.Color.lerp(a.primaryVariant, b.primaryVariant, t), secondaryVariant: ui.Color.lerp(a.secondaryVariant, b.secondaryVariant, t), surfaceTint: ui.Color.lerp(a.surfaceTint, b.surfaceTint, t)});
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      if (!other[S.$runtimeType]._equals(this[S.$runtimeType])) {
        return false;
      }
      return color_scheme.ColorScheme.is(other) && other.brightness === this.brightness && other.primary._equals(this.primary) && other.onPrimary._equals(this.onPrimary) && other.primaryContainer._equals(this.primaryContainer) && other.onPrimaryContainer._equals(this.onPrimaryContainer) && other.secondary._equals(this.secondary) && other.onSecondary._equals(this.onSecondary) && other.secondaryContainer._equals(this.secondaryContainer) && other.onSecondaryContainer._equals(this.onSecondaryContainer) && other.tertiary._equals(this.tertiary) && other.onTertiary._equals(this.onTertiary) && other.tertiaryContainer._equals(this.tertiaryContainer) && other.onTertiaryContainer._equals(this.onTertiaryContainer) && other.error._equals(this.error) && other.onError._equals(this.onError) && other.errorContainer._equals(this.errorContainer) && other.onErrorContainer._equals(this.onErrorContainer) && other.background._equals(this.background) && other.onBackground._equals(this.onBackground) && other.surface._equals(this.surface) && other.onSurface._equals(this.onSurface) && other.surfaceVariant._equals(this.surfaceVariant) && other.onSurfaceVariant._equals(this.onSurfaceVariant) && other.outline._equals(this.outline) && other.shadow._equals(this.shadow) && other.inverseSurface._equals(this.inverseSurface) && other.onInverseSurface._equals(this.onInverseSurface) && other.inversePrimary._equals(this.inversePrimary) && other.primaryVariant._equals(this.primaryVariant) && other.secondaryVariant._equals(this.secondaryVariant) && other.surfaceTint._equals(this.surfaceTint);
    }
    get hashCode() {
      return core.Object.hash(this.brightness, this.primary, this.onPrimary, this.primaryContainer, this.onPrimaryContainer, this.secondary, this.onSecondary, this.secondaryContainer, this.onSecondaryContainer, this.tertiary, this.onTertiary, this.tertiaryContainer, this.onTertiaryContainer, this.error, this.onError, this.errorContainer, this.onErrorContainer, this.background, this.onBackground, core.Object.hash(this.surface, this.onSurface, this.surfaceVariant, this.onSurfaceVariant, this.outline, this.shadow, this.inverseSurface, this.onInverseSurface, this.inversePrimary, this.primaryVariant, this.secondaryVariant, this.surfaceTint));
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      let defaultScheme = C[645] || CT.C645;
      properties.add(new (T$.DiagnosticsPropertyOfBrightness()).new("brightness", this.brightness, {defaultValue: defaultScheme.brightness}));
      properties.add(new colors.ColorProperty.new("primary", this.primary, {defaultValue: defaultScheme.primary}));
      properties.add(new colors.ColorProperty.new("onPrimary", this.onPrimary, {defaultValue: defaultScheme.onPrimary}));
      properties.add(new colors.ColorProperty.new("primaryContainer", this.primaryContainer, {defaultValue: defaultScheme.primaryContainer}));
      properties.add(new colors.ColorProperty.new("onPrimaryContainer", this.onPrimaryContainer, {defaultValue: defaultScheme.onPrimaryContainer}));
      properties.add(new colors.ColorProperty.new("secondary", this.secondary, {defaultValue: defaultScheme.secondary}));
      properties.add(new colors.ColorProperty.new("onSecondary", this.onSecondary, {defaultValue: defaultScheme.onSecondary}));
      properties.add(new colors.ColorProperty.new("secondaryContainer", this.secondaryContainer, {defaultValue: defaultScheme.secondaryContainer}));
      properties.add(new colors.ColorProperty.new("onSecondaryContainer", this.onSecondaryContainer, {defaultValue: defaultScheme.onSecondaryContainer}));
      properties.add(new colors.ColorProperty.new("tertiary", this.tertiary, {defaultValue: defaultScheme.tertiary}));
      properties.add(new colors.ColorProperty.new("onTertiary", this.onTertiary, {defaultValue: defaultScheme.onTertiary}));
      properties.add(new colors.ColorProperty.new("tertiaryContainer", this.tertiaryContainer, {defaultValue: defaultScheme.tertiaryContainer}));
      properties.add(new colors.ColorProperty.new("onTertiaryContainer", this.onTertiaryContainer, {defaultValue: defaultScheme.onTertiaryContainer}));
      properties.add(new colors.ColorProperty.new("error", this.error, {defaultValue: defaultScheme.error}));
      properties.add(new colors.ColorProperty.new("onError", this.onError, {defaultValue: defaultScheme.onError}));
      properties.add(new colors.ColorProperty.new("errorContainer", this.errorContainer, {defaultValue: defaultScheme.errorContainer}));
      properties.add(new colors.ColorProperty.new("onErrorContainer", this.onErrorContainer, {defaultValue: defaultScheme.onErrorContainer}));
      properties.add(new colors.ColorProperty.new("background", this.background, {defaultValue: defaultScheme.background}));
      properties.add(new colors.ColorProperty.new("onBackground", this.onBackground, {defaultValue: defaultScheme.onBackground}));
      properties.add(new colors.ColorProperty.new("surface", this.surface, {defaultValue: defaultScheme.surface}));
      properties.add(new colors.ColorProperty.new("onSurface", this.onSurface, {defaultValue: defaultScheme.onSurface}));
      properties.add(new colors.ColorProperty.new("surfaceVariant", this.surfaceVariant, {defaultValue: defaultScheme.surfaceVariant}));
      properties.add(new colors.ColorProperty.new("onSurfaceVariant", this.onSurfaceVariant, {defaultValue: defaultScheme.onSurfaceVariant}));
      properties.add(new colors.ColorProperty.new("outline", this.outline, {defaultValue: defaultScheme.outline}));
      properties.add(new colors.ColorProperty.new("shadow", this.shadow, {defaultValue: defaultScheme.shadow}));
      properties.add(new colors.ColorProperty.new("inverseSurface", this.inverseSurface, {defaultValue: defaultScheme.inverseSurface}));
      properties.add(new colors.ColorProperty.new("onInverseSurface", this.onInverseSurface, {defaultValue: defaultScheme.onInverseSurface}));
      properties.add(new colors.ColorProperty.new("inversePrimary", this.inversePrimary, {defaultValue: defaultScheme.inversePrimary}));
      properties.add(new colors.ColorProperty.new("primaryVariant", this.primaryVariant, {defaultValue: defaultScheme.primaryVariant}));
      properties.add(new colors.ColorProperty.new("secondaryVariant", this.secondaryVariant, {defaultValue: defaultScheme.secondaryVariant}));
      properties.add(new colors.ColorProperty.new("surfaceTint", this.surfaceTint, {defaultValue: defaultScheme.surfaceTint}));
    }
  };
  (color_scheme.ColorScheme.new = function(opts) {
    let brightness = opts && 'brightness' in opts ? opts.brightness : null;
    let primary = opts && 'primary' in opts ? opts.primary : null;
    let onPrimary = opts && 'onPrimary' in opts ? opts.onPrimary : null;
    let primaryContainer = opts && 'primaryContainer' in opts ? opts.primaryContainer : null;
    let onPrimaryContainer = opts && 'onPrimaryContainer' in opts ? opts.onPrimaryContainer : null;
    let secondary = opts && 'secondary' in opts ? opts.secondary : null;
    let onSecondary = opts && 'onSecondary' in opts ? opts.onSecondary : null;
    let secondaryContainer = opts && 'secondaryContainer' in opts ? opts.secondaryContainer : null;
    let onSecondaryContainer = opts && 'onSecondaryContainer' in opts ? opts.onSecondaryContainer : null;
    let tertiary = opts && 'tertiary' in opts ? opts.tertiary : null;
    let onTertiary = opts && 'onTertiary' in opts ? opts.onTertiary : null;
    let tertiaryContainer = opts && 'tertiaryContainer' in opts ? opts.tertiaryContainer : null;
    let onTertiaryContainer = opts && 'onTertiaryContainer' in opts ? opts.onTertiaryContainer : null;
    let error = opts && 'error' in opts ? opts.error : null;
    let onError = opts && 'onError' in opts ? opts.onError : null;
    let errorContainer = opts && 'errorContainer' in opts ? opts.errorContainer : null;
    let onErrorContainer = opts && 'onErrorContainer' in opts ? opts.onErrorContainer : null;
    let background = opts && 'background' in opts ? opts.background : null;
    let onBackground = opts && 'onBackground' in opts ? opts.onBackground : null;
    let surface = opts && 'surface' in opts ? opts.surface : null;
    let onSurface = opts && 'onSurface' in opts ? opts.onSurface : null;
    let surfaceVariant = opts && 'surfaceVariant' in opts ? opts.surfaceVariant : null;
    let onSurfaceVariant = opts && 'onSurfaceVariant' in opts ? opts.onSurfaceVariant : null;
    let outline = opts && 'outline' in opts ? opts.outline : null;
    let shadow = opts && 'shadow' in opts ? opts.shadow : null;
    let inverseSurface = opts && 'inverseSurface' in opts ? opts.inverseSurface : null;
    let onInverseSurface = opts && 'onInverseSurface' in opts ? opts.onInverseSurface : null;
    let inversePrimary = opts && 'inversePrimary' in opts ? opts.inversePrimary : null;
    let surfaceTint = opts && 'surfaceTint' in opts ? opts.surfaceTint : null;
    let primaryVariant = opts && 'primaryVariant' in opts ? opts.primaryVariant : null;
    let secondaryVariant = opts && 'secondaryVariant' in opts ? opts.secondaryVariant : null;
    this[S$0.brightness$1] = brightness;
    this[S$0.primary] = primary;
    this[S$0.onPrimary] = onPrimary;
    this[S$0.secondary] = secondary;
    this[S$0.onSecondary] = onSecondary;
    this[S$0.error] = error;
    this[S$0.onError] = onError;
    this[S$0.background$1] = background;
    this[S$0.onBackground] = onBackground;
    this[S$0.surface] = surface;
    this[S$0.onSurface] = onSurface;
    if (!(brightness !== null)) dart.assertFailed(null, I[85], 118, 15, "brightness != null");
    if (!(primary !== null)) dart.assertFailed(null, I[85], 119, 15, "primary != null");
    if (!(onPrimary !== null)) dart.assertFailed(null, I[85], 120, 15, "onPrimary != null");
    if (!(secondary !== null)) dart.assertFailed(null, I[85], 121, 15, "secondary != null");
    if (!(onSecondary !== null)) dart.assertFailed(null, I[85], 122, 15, "onSecondary != null");
    if (!(error !== null)) dart.assertFailed(null, I[85], 123, 15, "error != null");
    if (!(onError !== null)) dart.assertFailed(null, I[85], 124, 15, "onError != null");
    if (!(background !== null)) dart.assertFailed(null, I[85], 125, 15, "background != null");
    if (!(onBackground !== null)) dart.assertFailed(null, I[85], 126, 15, "onBackground != null");
    if (!(surface !== null)) dart.assertFailed(null, I[85], 127, 15, "surface != null");
    if (!(onSurface !== null)) dart.assertFailed(null, I[85], 128, 15, "onSurface != null");
    this[S$0._primaryContainer] = primaryContainer;
    this[S$0._onPrimaryContainer] = onPrimaryContainer;
    this[S$0._secondaryContainer] = secondaryContainer;
    this[S$0._onSecondaryContainer] = onSecondaryContainer;
    this[S$0._tertiary] = tertiary;
    this[S$0._onTertiary] = onTertiary;
    this[S$0._tertiaryContainer] = tertiaryContainer;
    this[S$0._onTertiaryContainer] = onTertiaryContainer;
    this[S$0._errorContainer] = errorContainer;
    this[S$0._onErrorContainer] = onErrorContainer;
    this[S$0._surfaceVariant] = surfaceVariant;
    this[S$0._onSurfaceVariant] = onSurfaceVariant;
    this[S$0._outline] = outline;
    this[S$0._shadow] = shadow;
    this[S$0._inverseSurface] = inverseSurface;
    this[S$0._onInverseSurface] = onInverseSurface;
    this[S$0._inversePrimary] = inversePrimary;
    this[S$0._primaryVariant] = primaryVariant;
    this[S$0._secondaryVariant] = secondaryVariant;
    this[S$0._surfaceTint] = surfaceTint;
    ;
  }).prototype = color_scheme.ColorScheme.prototype;
  (color_scheme.ColorScheme.light = function(opts) {
    let brightness = opts && 'brightness' in opts ? opts.brightness : C[551] || CT.C551;
    let primary = opts && 'primary' in opts ? opts.primary : C[617] || CT.C617;
    let onPrimary = opts && 'onPrimary' in opts ? opts.onPrimary : C[618] || CT.C618;
    let primaryContainer = opts && 'primaryContainer' in opts ? opts.primaryContainer : null;
    let onPrimaryContainer = opts && 'onPrimaryContainer' in opts ? opts.onPrimaryContainer : null;
    let secondary = opts && 'secondary' in opts ? opts.secondary : C[619] || CT.C619;
    let onSecondary = opts && 'onSecondary' in opts ? opts.onSecondary : C[21] || CT.C21;
    let secondaryContainer = opts && 'secondaryContainer' in opts ? opts.secondaryContainer : null;
    let onSecondaryContainer = opts && 'onSecondaryContainer' in opts ? opts.onSecondaryContainer : null;
    let tertiary = opts && 'tertiary' in opts ? opts.tertiary : null;
    let onTertiary = opts && 'onTertiary' in opts ? opts.onTertiary : null;
    let tertiaryContainer = opts && 'tertiaryContainer' in opts ? opts.tertiaryContainer : null;
    let onTertiaryContainer = opts && 'onTertiaryContainer' in opts ? opts.onTertiaryContainer : null;
    let error = opts && 'error' in opts ? opts.error : C[620] || CT.C620;
    let onError = opts && 'onError' in opts ? opts.onError : C[618] || CT.C618;
    let errorContainer = opts && 'errorContainer' in opts ? opts.errorContainer : null;
    let onErrorContainer = opts && 'onErrorContainer' in opts ? opts.onErrorContainer : null;
    let background = opts && 'background' in opts ? opts.background : C[618] || CT.C618;
    let onBackground = opts && 'onBackground' in opts ? opts.onBackground : C[21] || CT.C21;
    let surface = opts && 'surface' in opts ? opts.surface : C[618] || CT.C618;
    let onSurface = opts && 'onSurface' in opts ? opts.onSurface : C[21] || CT.C21;
    let surfaceVariant = opts && 'surfaceVariant' in opts ? opts.surfaceVariant : null;
    let onSurfaceVariant = opts && 'onSurfaceVariant' in opts ? opts.onSurfaceVariant : null;
    let outline = opts && 'outline' in opts ? opts.outline : null;
    let shadow = opts && 'shadow' in opts ? opts.shadow : null;
    let inverseSurface = opts && 'inverseSurface' in opts ? opts.inverseSurface : null;
    let onInverseSurface = opts && 'onInverseSurface' in opts ? opts.onInverseSurface : null;
    let inversePrimary = opts && 'inversePrimary' in opts ? opts.inversePrimary : null;
    let surfaceTint = opts && 'surfaceTint' in opts ? opts.surfaceTint : null;
    let primaryVariant = opts && 'primaryVariant' in opts ? opts.primaryVariant : C[621] || CT.C621;
    let secondaryVariant = opts && 'secondaryVariant' in opts ? opts.secondaryVariant : C[622] || CT.C622;
    this[S$0.brightness$1] = brightness;
    this[S$0.primary] = primary;
    this[S$0.onPrimary] = onPrimary;
    this[S$0.secondary] = secondary;
    this[S$0.onSecondary] = onSecondary;
    this[S$0.error] = error;
    this[S$0.onError] = onError;
    this[S$0.background$1] = background;
    this[S$0.onBackground] = onBackground;
    this[S$0.surface] = surface;
    this[S$0.onSurface] = onSurface;
    if (!(brightness !== null)) dart.assertFailed(null, I[85], 288, 15, "brightness != null");
    if (!(primary !== null)) dart.assertFailed(null, I[85], 289, 15, "primary != null");
    if (!(onPrimary !== null)) dart.assertFailed(null, I[85], 290, 15, "onPrimary != null");
    if (!(secondary !== null)) dart.assertFailed(null, I[85], 291, 15, "secondary != null");
    if (!(onSecondary !== null)) dart.assertFailed(null, I[85], 292, 15, "onSecondary != null");
    if (!(error !== null)) dart.assertFailed(null, I[85], 293, 15, "error != null");
    if (!(onError !== null)) dart.assertFailed(null, I[85], 294, 15, "onError != null");
    if (!(background !== null)) dart.assertFailed(null, I[85], 295, 15, "background != null");
    if (!(onBackground !== null)) dart.assertFailed(null, I[85], 296, 15, "onBackground != null");
    if (!(surface !== null)) dart.assertFailed(null, I[85], 297, 15, "surface != null");
    if (!(onSurface !== null)) dart.assertFailed(null, I[85], 298, 15, "onSurface != null");
    this[S$0._primaryContainer] = primaryContainer;
    this[S$0._onPrimaryContainer] = onPrimaryContainer;
    this[S$0._secondaryContainer] = secondaryContainer;
    this[S$0._onSecondaryContainer] = onSecondaryContainer;
    this[S$0._tertiary] = tertiary;
    this[S$0._onTertiary] = onTertiary;
    this[S$0._tertiaryContainer] = tertiaryContainer;
    this[S$0._onTertiaryContainer] = onTertiaryContainer;
    this[S$0._errorContainer] = errorContainer;
    this[S$0._onErrorContainer] = onErrorContainer;
    this[S$0._surfaceVariant] = surfaceVariant;
    this[S$0._onSurfaceVariant] = onSurfaceVariant;
    this[S$0._outline] = outline;
    this[S$0._shadow] = shadow;
    this[S$0._inverseSurface] = inverseSurface;
    this[S$0._onInverseSurface] = onInverseSurface;
    this[S$0._inversePrimary] = inversePrimary;
    this[S$0._primaryVariant] = primaryVariant;
    this[S$0._secondaryVariant] = secondaryVariant;
    this[S$0._surfaceTint] = surfaceTint;
    ;
  }).prototype = color_scheme.ColorScheme.prototype;
  (color_scheme.ColorScheme.dark = function(opts) {
    let brightness = opts && 'brightness' in opts ? opts.brightness : C[550] || CT.C550;
    let primary = opts && 'primary' in opts ? opts.primary : C[623] || CT.C623;
    let onPrimary = opts && 'onPrimary' in opts ? opts.onPrimary : C[21] || CT.C21;
    let primaryContainer = opts && 'primaryContainer' in opts ? opts.primaryContainer : null;
    let onPrimaryContainer = opts && 'onPrimaryContainer' in opts ? opts.onPrimaryContainer : null;
    let secondary = opts && 'secondary' in opts ? opts.secondary : C[619] || CT.C619;
    let onSecondary = opts && 'onSecondary' in opts ? opts.onSecondary : C[21] || CT.C21;
    let secondaryContainer = opts && 'secondaryContainer' in opts ? opts.secondaryContainer : null;
    let onSecondaryContainer = opts && 'onSecondaryContainer' in opts ? opts.onSecondaryContainer : null;
    let tertiary = opts && 'tertiary' in opts ? opts.tertiary : null;
    let onTertiary = opts && 'onTertiary' in opts ? opts.onTertiary : null;
    let tertiaryContainer = opts && 'tertiaryContainer' in opts ? opts.tertiaryContainer : null;
    let onTertiaryContainer = opts && 'onTertiaryContainer' in opts ? opts.onTertiaryContainer : null;
    let error = opts && 'error' in opts ? opts.error : C[624] || CT.C624;
    let onError = opts && 'onError' in opts ? opts.onError : C[21] || CT.C21;
    let errorContainer = opts && 'errorContainer' in opts ? opts.errorContainer : null;
    let onErrorContainer = opts && 'onErrorContainer' in opts ? opts.onErrorContainer : null;
    let background = opts && 'background' in opts ? opts.background : C[625] || CT.C625;
    let onBackground = opts && 'onBackground' in opts ? opts.onBackground : C[618] || CT.C618;
    let surface = opts && 'surface' in opts ? opts.surface : C[625] || CT.C625;
    let onSurface = opts && 'onSurface' in opts ? opts.onSurface : C[618] || CT.C618;
    let surfaceVariant = opts && 'surfaceVariant' in opts ? opts.surfaceVariant : null;
    let onSurfaceVariant = opts && 'onSurfaceVariant' in opts ? opts.onSurfaceVariant : null;
    let outline = opts && 'outline' in opts ? opts.outline : null;
    let shadow = opts && 'shadow' in opts ? opts.shadow : null;
    let inverseSurface = opts && 'inverseSurface' in opts ? opts.inverseSurface : null;
    let onInverseSurface = opts && 'onInverseSurface' in opts ? opts.onInverseSurface : null;
    let inversePrimary = opts && 'inversePrimary' in opts ? opts.inversePrimary : null;
    let surfaceTint = opts && 'surfaceTint' in opts ? opts.surfaceTint : null;
    let primaryVariant = opts && 'primaryVariant' in opts ? opts.primaryVariant : C[621] || CT.C621;
    let secondaryVariant = opts && 'secondaryVariant' in opts ? opts.secondaryVariant : C[619] || CT.C619;
    this[S$0.brightness$1] = brightness;
    this[S$0.primary] = primary;
    this[S$0.onPrimary] = onPrimary;
    this[S$0.secondary] = secondary;
    this[S$0.onSecondary] = onSecondary;
    this[S$0.error] = error;
    this[S$0.onError] = onError;
    this[S$0.background$1] = background;
    this[S$0.onBackground] = onBackground;
    this[S$0.surface] = surface;
    this[S$0.onSurface] = onSurface;
    if (!(brightness !== null)) dart.assertFailed(null, I[85], 362, 15, "brightness != null");
    if (!(primary !== null)) dart.assertFailed(null, I[85], 363, 15, "primary != null");
    if (!(onPrimary !== null)) dart.assertFailed(null, I[85], 364, 15, "onPrimary != null");
    if (!(secondary !== null)) dart.assertFailed(null, I[85], 365, 15, "secondary != null");
    if (!(onSecondary !== null)) dart.assertFailed(null, I[85], 366, 15, "onSecondary != null");
    if (!(error !== null)) dart.assertFailed(null, I[85], 367, 15, "error != null");
    if (!(onError !== null)) dart.assertFailed(null, I[85], 368, 15, "onError != null");
    if (!(background !== null)) dart.assertFailed(null, I[85], 369, 15, "background != null");
    if (!(onBackground !== null)) dart.assertFailed(null, I[85], 370, 15, "onBackground != null");
    if (!(surface !== null)) dart.assertFailed(null, I[85], 371, 15, "surface != null");
    if (!(onSurface !== null)) dart.assertFailed(null, I[85], 372, 15, "onSurface != null");
    this[S$0._primaryContainer] = primaryContainer;
    this[S$0._onPrimaryContainer] = onPrimaryContainer;
    this[S$0._secondaryContainer] = secondaryContainer;
    this[S$0._onSecondaryContainer] = onSecondaryContainer;
    this[S$0._tertiary] = tertiary;
    this[S$0._onTertiary] = onTertiary;
    this[S$0._tertiaryContainer] = tertiaryContainer;
    this[S$0._onTertiaryContainer] = onTertiaryContainer;
    this[S$0._errorContainer] = errorContainer;
    this[S$0._onErrorContainer] = onErrorContainer;
    this[S$0._surfaceVariant] = surfaceVariant;
    this[S$0._onSurfaceVariant] = onSurfaceVariant;
    this[S$0._outline] = outline;
    this[S$0._shadow] = shadow;
    this[S$0._inverseSurface] = inverseSurface;
    this[S$0._onInverseSurface] = onInverseSurface;
    this[S$0._inversePrimary] = inversePrimary;
    this[S$0._primaryVariant] = primaryVariant;
    this[S$0._secondaryVariant] = secondaryVariant;
    this[S$0._surfaceTint] = surfaceTint;
    ;
  }).prototype = color_scheme.ColorScheme.prototype;
  (color_scheme.ColorScheme.highContrastLight = function(opts) {
    let brightness = opts && 'brightness' in opts ? opts.brightness : C[551] || CT.C551;
    let primary = opts && 'primary' in opts ? opts.primary : C[626] || CT.C626;
    let onPrimary = opts && 'onPrimary' in opts ? opts.onPrimary : C[618] || CT.C618;
    let primaryContainer = opts && 'primaryContainer' in opts ? opts.primaryContainer : null;
    let onPrimaryContainer = opts && 'onPrimaryContainer' in opts ? opts.onPrimaryContainer : null;
    let secondary = opts && 'secondary' in opts ? opts.secondary : C[627] || CT.C627;
    let onSecondary = opts && 'onSecondary' in opts ? opts.onSecondary : C[21] || CT.C21;
    let secondaryContainer = opts && 'secondaryContainer' in opts ? opts.secondaryContainer : null;
    let onSecondaryContainer = opts && 'onSecondaryContainer' in opts ? opts.onSecondaryContainer : null;
    let tertiary = opts && 'tertiary' in opts ? opts.tertiary : null;
    let onTertiary = opts && 'onTertiary' in opts ? opts.onTertiary : null;
    let tertiaryContainer = opts && 'tertiaryContainer' in opts ? opts.tertiaryContainer : null;
    let onTertiaryContainer = opts && 'onTertiaryContainer' in opts ? opts.onTertiaryContainer : null;
    let error = opts && 'error' in opts ? opts.error : C[628] || CT.C628;
    let onError = opts && 'onError' in opts ? opts.onError : C[618] || CT.C618;
    let errorContainer = opts && 'errorContainer' in opts ? opts.errorContainer : null;
    let onErrorContainer = opts && 'onErrorContainer' in opts ? opts.onErrorContainer : null;
    let background = opts && 'background' in opts ? opts.background : C[618] || CT.C618;
    let onBackground = opts && 'onBackground' in opts ? opts.onBackground : C[21] || CT.C21;
    let surface = opts && 'surface' in opts ? opts.surface : C[618] || CT.C618;
    let onSurface = opts && 'onSurface' in opts ? opts.onSurface : C[21] || CT.C21;
    let surfaceVariant = opts && 'surfaceVariant' in opts ? opts.surfaceVariant : null;
    let onSurfaceVariant = opts && 'onSurfaceVariant' in opts ? opts.onSurfaceVariant : null;
    let outline = opts && 'outline' in opts ? opts.outline : null;
    let shadow = opts && 'shadow' in opts ? opts.shadow : null;
    let inverseSurface = opts && 'inverseSurface' in opts ? opts.inverseSurface : null;
    let onInverseSurface = opts && 'onInverseSurface' in opts ? opts.onInverseSurface : null;
    let inversePrimary = opts && 'inversePrimary' in opts ? opts.inversePrimary : null;
    let surfaceTint = opts && 'surfaceTint' in opts ? opts.surfaceTint : null;
    let primaryVariant = opts && 'primaryVariant' in opts ? opts.primaryVariant : C[629] || CT.C629;
    let secondaryVariant = opts && 'secondaryVariant' in opts ? opts.secondaryVariant : C[622] || CT.C622;
    this[S$0.brightness$1] = brightness;
    this[S$0.primary] = primary;
    this[S$0.onPrimary] = onPrimary;
    this[S$0.secondary] = secondary;
    this[S$0.onSecondary] = onSecondary;
    this[S$0.error] = error;
    this[S$0.onError] = onError;
    this[S$0.background$1] = background;
    this[S$0.onBackground] = onBackground;
    this[S$0.surface] = surface;
    this[S$0.onSurface] = onSurface;
    if (!(brightness !== null)) dart.assertFailed(null, I[85], 436, 15, "brightness != null");
    if (!(primary !== null)) dart.assertFailed(null, I[85], 437, 15, "primary != null");
    if (!(onPrimary !== null)) dart.assertFailed(null, I[85], 438, 15, "onPrimary != null");
    if (!(secondary !== null)) dart.assertFailed(null, I[85], 439, 15, "secondary != null");
    if (!(onSecondary !== null)) dart.assertFailed(null, I[85], 440, 15, "onSecondary != null");
    if (!(error !== null)) dart.assertFailed(null, I[85], 441, 15, "error != null");
    if (!(onError !== null)) dart.assertFailed(null, I[85], 442, 15, "onError != null");
    if (!(background !== null)) dart.assertFailed(null, I[85], 443, 15, "background != null");
    if (!(onBackground !== null)) dart.assertFailed(null, I[85], 444, 15, "onBackground != null");
    if (!(surface !== null)) dart.assertFailed(null, I[85], 445, 15, "surface != null");
    if (!(onSurface !== null)) dart.assertFailed(null, I[85], 446, 15, "onSurface != null");
    this[S$0._primaryContainer] = primaryContainer;
    this[S$0._onPrimaryContainer] = onPrimaryContainer;
    this[S$0._secondaryContainer] = secondaryContainer;
    this[S$0._onSecondaryContainer] = onSecondaryContainer;
    this[S$0._tertiary] = tertiary;
    this[S$0._onTertiary] = onTertiary;
    this[S$0._tertiaryContainer] = tertiaryContainer;
    this[S$0._onTertiaryContainer] = onTertiaryContainer;
    this[S$0._errorContainer] = errorContainer;
    this[S$0._onErrorContainer] = onErrorContainer;
    this[S$0._surfaceVariant] = surfaceVariant;
    this[S$0._onSurfaceVariant] = onSurfaceVariant;
    this[S$0._outline] = outline;
    this[S$0._shadow] = shadow;
    this[S$0._inverseSurface] = inverseSurface;
    this[S$0._onInverseSurface] = onInverseSurface;
    this[S$0._inversePrimary] = inversePrimary;
    this[S$0._primaryVariant] = primaryVariant;
    this[S$0._secondaryVariant] = secondaryVariant;
    this[S$0._surfaceTint] = surfaceTint;
    ;
  }).prototype = color_scheme.ColorScheme.prototype;
  (color_scheme.ColorScheme.highContrastDark = function(opts) {
    let brightness = opts && 'brightness' in opts ? opts.brightness : C[550] || CT.C550;
    let primary = opts && 'primary' in opts ? opts.primary : C[630] || CT.C630;
    let onPrimary = opts && 'onPrimary' in opts ? opts.onPrimary : C[21] || CT.C21;
    let primaryContainer = opts && 'primaryContainer' in opts ? opts.primaryContainer : null;
    let onPrimaryContainer = opts && 'onPrimaryContainer' in opts ? opts.onPrimaryContainer : null;
    let secondary = opts && 'secondary' in opts ? opts.secondary : C[627] || CT.C627;
    let onSecondary = opts && 'onSecondary' in opts ? opts.onSecondary : C[21] || CT.C21;
    let secondaryContainer = opts && 'secondaryContainer' in opts ? opts.secondaryContainer : null;
    let onSecondaryContainer = opts && 'onSecondaryContainer' in opts ? opts.onSecondaryContainer : null;
    let tertiary = opts && 'tertiary' in opts ? opts.tertiary : null;
    let onTertiary = opts && 'onTertiary' in opts ? opts.onTertiary : null;
    let tertiaryContainer = opts && 'tertiaryContainer' in opts ? opts.tertiaryContainer : null;
    let onTertiaryContainer = opts && 'onTertiaryContainer' in opts ? opts.onTertiaryContainer : null;
    let error = opts && 'error' in opts ? opts.error : C[631] || CT.C631;
    let onError = opts && 'onError' in opts ? opts.onError : C[21] || CT.C21;
    let errorContainer = opts && 'errorContainer' in opts ? opts.errorContainer : null;
    let onErrorContainer = opts && 'onErrorContainer' in opts ? opts.onErrorContainer : null;
    let background = opts && 'background' in opts ? opts.background : C[625] || CT.C625;
    let onBackground = opts && 'onBackground' in opts ? opts.onBackground : C[618] || CT.C618;
    let surface = opts && 'surface' in opts ? opts.surface : C[625] || CT.C625;
    let onSurface = opts && 'onSurface' in opts ? opts.onSurface : C[618] || CT.C618;
    let surfaceVariant = opts && 'surfaceVariant' in opts ? opts.surfaceVariant : null;
    let onSurfaceVariant = opts && 'onSurfaceVariant' in opts ? opts.onSurfaceVariant : null;
    let outline = opts && 'outline' in opts ? opts.outline : null;
    let shadow = opts && 'shadow' in opts ? opts.shadow : null;
    let inverseSurface = opts && 'inverseSurface' in opts ? opts.inverseSurface : null;
    let onInverseSurface = opts && 'onInverseSurface' in opts ? opts.onInverseSurface : null;
    let inversePrimary = opts && 'inversePrimary' in opts ? opts.inversePrimary : null;
    let surfaceTint = opts && 'surfaceTint' in opts ? opts.surfaceTint : null;
    let primaryVariant = opts && 'primaryVariant' in opts ? opts.primaryVariant : C[632] || CT.C632;
    let secondaryVariant = opts && 'secondaryVariant' in opts ? opts.secondaryVariant : C[627] || CT.C627;
    this[S$0.brightness$1] = brightness;
    this[S$0.primary] = primary;
    this[S$0.onPrimary] = onPrimary;
    this[S$0.secondary] = secondary;
    this[S$0.onSecondary] = onSecondary;
    this[S$0.error] = error;
    this[S$0.onError] = onError;
    this[S$0.background$1] = background;
    this[S$0.onBackground] = onBackground;
    this[S$0.surface] = surface;
    this[S$0.onSurface] = onSurface;
    if (!(brightness !== null)) dart.assertFailed(null, I[85], 510, 15, "brightness != null");
    if (!(primary !== null)) dart.assertFailed(null, I[85], 511, 15, "primary != null");
    if (!(onPrimary !== null)) dart.assertFailed(null, I[85], 512, 15, "onPrimary != null");
    if (!(secondary !== null)) dart.assertFailed(null, I[85], 513, 15, "secondary != null");
    if (!(onSecondary !== null)) dart.assertFailed(null, I[85], 514, 15, "onSecondary != null");
    if (!(error !== null)) dart.assertFailed(null, I[85], 515, 15, "error != null");
    if (!(onError !== null)) dart.assertFailed(null, I[85], 516, 15, "onError != null");
    if (!(background !== null)) dart.assertFailed(null, I[85], 517, 15, "background != null");
    if (!(onBackground !== null)) dart.assertFailed(null, I[85], 518, 15, "onBackground != null");
    if (!(surface !== null)) dart.assertFailed(null, I[85], 519, 15, "surface != null");
    if (!(onSurface !== null)) dart.assertFailed(null, I[85], 520, 15, "onSurface != null");
    this[S$0._primaryContainer] = primaryContainer;
    this[S$0._onPrimaryContainer] = onPrimaryContainer;
    this[S$0._secondaryContainer] = secondaryContainer;
    this[S$0._onSecondaryContainer] = onSecondaryContainer;
    this[S$0._tertiary] = tertiary;
    this[S$0._onTertiary] = onTertiary;
    this[S$0._tertiaryContainer] = tertiaryContainer;
    this[S$0._onTertiaryContainer] = onTertiaryContainer;
    this[S$0._errorContainer] = errorContainer;
    this[S$0._onErrorContainer] = onErrorContainer;
    this[S$0._surfaceVariant] = surfaceVariant;
    this[S$0._onSurfaceVariant] = onSurfaceVariant;
    this[S$0._outline] = outline;
    this[S$0._shadow] = shadow;
    this[S$0._inverseSurface] = inverseSurface;
    this[S$0._onInverseSurface] = onInverseSurface;
    this[S$0._inversePrimary] = inversePrimary;
    this[S$0._primaryVariant] = primaryVariant;
    this[S$0._secondaryVariant] = secondaryVariant;
    this[S$0._surfaceTint] = surfaceTint;
    ;
  }).prototype = color_scheme.ColorScheme.prototype;
  dart.addTypeTests(color_scheme.ColorScheme);
  dart.addTypeCaches(color_scheme.ColorScheme);
  dart.setMethodSignature(color_scheme.ColorScheme, () => ({
    __proto__: dart.getMethods(color_scheme.ColorScheme.__proto__),
    copyWith: dart.fnType(color_scheme.ColorScheme, [], {background: dart.nullable(ui.Color), brightness: dart.nullable(ui.Brightness), error: dart.nullable(ui.Color), errorContainer: dart.nullable(ui.Color), inversePrimary: dart.nullable(ui.Color), inverseSurface: dart.nullable(ui.Color), onBackground: dart.nullable(ui.Color), onError: dart.nullable(ui.Color), onErrorContainer: dart.nullable(ui.Color), onInverseSurface: dart.nullable(ui.Color), onPrimary: dart.nullable(ui.Color), onPrimaryContainer: dart.nullable(ui.Color), onSecondary: dart.nullable(ui.Color), onSecondaryContainer: dart.nullable(ui.Color), onSurface: dart.nullable(ui.Color), onSurfaceVariant: dart.nullable(ui.Color), onTertiary: dart.nullable(ui.Color), onTertiaryContainer: dart.nullable(ui.Color), outline: dart.nullable(ui.Color), primary: dart.nullable(ui.Color), primaryContainer: dart.nullable(ui.Color), primaryVariant: dart.nullable(ui.Color), secondary: dart.nullable(ui.Color), secondaryContainer: dart.nullable(ui.Color), secondaryVariant: dart.nullable(ui.Color), shadow: dart.nullable(ui.Color), surface: dart.nullable(ui.Color), surfaceTint: dart.nullable(ui.Color), surfaceVariant: dart.nullable(ui.Color), tertiary: dart.nullable(ui.Color), tertiaryContainer: dart.nullable(ui.Color)}, {})
  }));
  dart.setStaticMethodSignature(color_scheme.ColorScheme, () => ['fromSeed', 'fromSwatch', '_brightnessFor', 'lerp']);
  dart.setGetterSignature(color_scheme.ColorScheme, () => ({
    __proto__: dart.getGetters(color_scheme.ColorScheme.__proto__),
    primaryContainer: ui.Color,
    onPrimaryContainer: ui.Color,
    secondaryContainer: ui.Color,
    onSecondaryContainer: ui.Color,
    tertiary: ui.Color,
    onTertiary: ui.Color,
    tertiaryContainer: ui.Color,
    onTertiaryContainer: ui.Color,
    errorContainer: ui.Color,
    onErrorContainer: ui.Color,
    surfaceVariant: ui.Color,
    onSurfaceVariant: ui.Color,
    outline: ui.Color,
    shadow: ui.Color,
    inverseSurface: ui.Color,
    onInverseSurface: ui.Color,
    inversePrimary: ui.Color,
    surfaceTint: ui.Color,
    primaryVariant: ui.Color,
    secondaryVariant: ui.Color
  }));
  dart.setLibraryUri(color_scheme.ColorScheme, I[86]);
  dart.setFieldSignature(color_scheme.ColorScheme, () => ({
    __proto__: dart.getFields(color_scheme.ColorScheme.__proto__),
    brightness: dart.finalFieldType(ui.Brightness),
    primary: dart.finalFieldType(ui.Color),
    onPrimary: dart.finalFieldType(ui.Color),
    [S$0._primaryContainer$1]: dart.finalFieldType(dart.nullable(ui.Color)),
    [S$0._onPrimaryContainer$1]: dart.finalFieldType(dart.nullable(ui.Color)),
    secondary: dart.finalFieldType(ui.Color),
    onSecondary: dart.finalFieldType(ui.Color),
    [S$0._secondaryContainer$1]: dart.finalFieldType(dart.nullable(ui.Color)),
    [S$0._onSecondaryContainer$1]: dart.finalFieldType(dart.nullable(ui.Color)),
    [S$0._tertiary$1]: dart.finalFieldType(dart.nullable(ui.Color)),
    [S$0._onTertiary$1]: dart.finalFieldType(dart.nullable(ui.Color)),
    [S$0._tertiaryContainer$1]: dart.finalFieldType(dart.nullable(ui.Color)),
    [S$0._onTertiaryContainer$1]: dart.finalFieldType(dart.nullable(ui.Color)),
    error: dart.finalFieldType(ui.Color),
    onError: dart.finalFieldType(ui.Color),
    [S$0._errorContainer$1]: dart.finalFieldType(dart.nullable(ui.Color)),
    [S$0._onErrorContainer$1]: dart.finalFieldType(dart.nullable(ui.Color)),
    background: dart.finalFieldType(ui.Color),
    onBackground: dart.finalFieldType(ui.Color),
    surface: dart.finalFieldType(ui.Color),
    onSurface: dart.finalFieldType(ui.Color),
    [S$0._surfaceVariant$1]: dart.finalFieldType(dart.nullable(ui.Color)),
    [S$0._onSurfaceVariant$1]: dart.finalFieldType(dart.nullable(ui.Color)),
    [S$0._outline$1]: dart.finalFieldType(dart.nullable(ui.Color)),
    [S$0._shadow$1]: dart.finalFieldType(dart.nullable(ui.Color)),
    [S$0._inverseSurface$1]: dart.finalFieldType(dart.nullable(ui.Color)),
    [S$0._onInverseSurface$1]: dart.finalFieldType(dart.nullable(ui.Color)),
    [S$0._inversePrimary$1]: dart.finalFieldType(dart.nullable(ui.Color)),
    [S$0._surfaceTint$1]: dart.finalFieldType(dart.nullable(ui.Color)),
    [S$0._primaryVariant$1]: dart.finalFieldType(dart.nullable(ui.Color)),
    [S$0._secondaryVariant$1]: dart.finalFieldType(dart.nullable(ui.Color))
  }));
  dart.defineExtensionMethods(color_scheme.ColorScheme, ['_equals']);
  dart.defineExtensionAccessors(color_scheme.ColorScheme, ['hashCode']);
  button_theme.ButtonTextTheme = class ButtonTextTheme extends core._Enum {
    toString() {
      return "ButtonTextTheme." + this[S._name];
    }
  };
  (button_theme.ButtonTextTheme.new = function(index, name) {
    button_theme.ButtonTextTheme.__proto__.new.call(this, index, name);
    ;
  }).prototype = button_theme.ButtonTextTheme.prototype;
  dart.addTypeTests(button_theme.ButtonTextTheme);
  dart.addTypeCaches(button_theme.ButtonTextTheme);
  dart.setLibraryUri(button_theme.ButtonTextTheme, I[87]);
  dart.setStaticFieldSignature(button_theme.ButtonTextTheme, () => ['values', 'normal', 'accent', 'primary']);
  dart.defineExtensionMethods(button_theme.ButtonTextTheme, ['toString']);
  dart.defineLazy(button_theme.ButtonTextTheme, {
    /*button_theme.ButtonTextTheme.values*/get values() {
      return C[646] || CT.C646;
    },
    /*button_theme.ButtonTextTheme.normal*/get normal() {
      return C[647] || CT.C647;
    },
    /*button_theme.ButtonTextTheme.accent*/get accent() {
      return C[648] || CT.C648;
    },
    /*button_theme.ButtonTextTheme.primary*/get primary() {
      return C[649] || CT.C649;
    }
  }, false);
  button_theme.ButtonBarLayoutBehavior = class ButtonBarLayoutBehavior extends core._Enum {
    toString() {
      return "ButtonBarLayoutBehavior." + this[S._name];
    }
  };
  (button_theme.ButtonBarLayoutBehavior.new = function(index, name) {
    button_theme.ButtonBarLayoutBehavior.__proto__.new.call(this, index, name);
    ;
  }).prototype = button_theme.ButtonBarLayoutBehavior.prototype;
  dart.addTypeTests(button_theme.ButtonBarLayoutBehavior);
  dart.addTypeCaches(button_theme.ButtonBarLayoutBehavior);
  dart.setLibraryUri(button_theme.ButtonBarLayoutBehavior, I[87]);
  dart.setStaticFieldSignature(button_theme.ButtonBarLayoutBehavior, () => ['values', 'constrained', 'padded']);
  dart.defineExtensionMethods(button_theme.ButtonBarLayoutBehavior, ['toString']);
  dart.defineLazy(button_theme.ButtonBarLayoutBehavior, {
    /*button_theme.ButtonBarLayoutBehavior.values*/get values() {
      return C[650] || CT.C650;
    },
    /*button_theme.ButtonBarLayoutBehavior.constrained*/get constrained() {
      return C[651] || CT.C651;
    },
    /*button_theme.ButtonBarLayoutBehavior.padded*/get padded() {
      return C[652] || CT.C652;
    }
  }, false);
  button_theme.ButtonTheme = class ButtonTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[S$0.data$18];
    }
    set data(value) {
      super.data = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let textTheme = opts && 'textTheme' in opts ? opts.textTheme : C[647] || CT.C647;
      let layoutBehavior = opts && 'layoutBehavior' in opts ? opts.layoutBehavior : C[652] || CT.C652;
      let minWidth = opts && 'minWidth' in opts ? opts.minWidth : 88;
      let height = opts && 'height' in opts ? opts.height : 36;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let alignedDropdown = opts && 'alignedDropdown' in opts ? opts.alignedDropdown : false;
      let buttonColor = opts && 'buttonColor' in opts ? opts.buttonColor : null;
      let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
      let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
      let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
      let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
      let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
      let colorScheme = opts && 'colorScheme' in opts ? opts.colorScheme : null;
      let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new button_theme.ButtonTheme.new({key: key, textTheme: textTheme, layoutBehavior: layoutBehavior, minWidth: minWidth, height: height, padding: padding, shape: shape, alignedDropdown: alignedDropdown, buttonColor: buttonColor, disabledColor: disabledColor, focusColor: focusColor, hoverColor: hoverColor, highlightColor: highlightColor, splashColor: splashColor, colorScheme: colorScheme, materialTapTargetSize: materialTapTargetSize, child: child, $creationLocationd_0dea112b090073317d4: C[653] || CT.C653});
    }
    static ['_#fromButtonThemeData#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let data = opts && 'data' in opts ? opts.data : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new button_theme.ButtonTheme.fromButtonThemeData({key: key, data: data, child: child, $creationLocationd_0dea112b090073317d4: C[654] || CT.C654});
    }
    static of(context) {
      let t55, t55$, t55$0;
      let inheritedButtonTheme = context.dependOnInheritedWidgetOfExactType(button_theme.ButtonTheme);
      let buttonTheme = (t55 = inheritedButtonTheme, t55 == null ? null : t55.data);
      if ((t55$ = buttonTheme, t55$ == null ? null : t55$.colorScheme) == null) {
        let theme = theme$.Theme.of(context);
        buttonTheme == null ? buttonTheme = theme.buttonTheme : null;
        if (buttonTheme.colorScheme == null) {
          buttonTheme = buttonTheme.copyWith({colorScheme: (t55$0 = theme.buttonTheme.colorScheme, t55$0 == null ? theme.colorScheme : t55$0)});
          if (!(buttonTheme.colorScheme != null)) dart.assertFailed(null, I[88], 138, 16, "buttonTheme.colorScheme != null");
        }
      }
      return dart.nullCheck(buttonTheme);
    }
    wrap(context, child) {
      return new button_theme.ButtonTheme.fromButtonThemeData({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C[655] || CT.C655});
    }
    updateShouldNotify(oldWidget) {
      button_theme.ButtonTheme.as(oldWidget);
      return !this.data._equals(oldWidget.data);
    }
  };
  (button_theme.ButtonTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let textTheme = opts && 'textTheme' in opts ? opts.textTheme : C[647] || CT.C647;
    let layoutBehavior = opts && 'layoutBehavior' in opts ? opts.layoutBehavior : C[652] || CT.C652;
    let minWidth = opts && 'minWidth' in opts ? opts.minWidth : 88;
    let height = opts && 'height' in opts ? opts.height : 36;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let alignedDropdown = opts && 'alignedDropdown' in opts ? opts.alignedDropdown : false;
    let buttonColor = opts && 'buttonColor' in opts ? opts.buttonColor : null;
    let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let colorScheme = opts && 'colorScheme' in opts ? opts.colorScheme : null;
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    if (!(textTheme !== null)) dart.assertFailed(null, I[88], 86, 15, "textTheme != null");
    if (!(minWidth !== null && minWidth >= 0.0)) dart.assertFailed(null, I[88], 87, 15, "minWidth != null && minWidth >= 0.0");
    if (!(height !== null && height >= 0.0)) dart.assertFailed(null, I[88], 88, 15, "height != null && height >= 0.0");
    if (!(alignedDropdown !== null)) dart.assertFailed(null, I[88], 89, 15, "alignedDropdown != null");
    if (!(layoutBehavior !== null)) dart.assertFailed(null, I[88], 90, 15, "layoutBehavior != null");
    this[S$0.data$18] = new button_theme.ButtonThemeData.new({textTheme: textTheme, minWidth: minWidth, height: height, padding: padding, shape: shape, alignedDropdown: alignedDropdown, layoutBehavior: layoutBehavior, buttonColor: buttonColor, disabledColor: disabledColor, focusColor: focusColor, hoverColor: hoverColor, highlightColor: highlightColor, splashColor: splashColor, colorScheme: colorScheme, materialTapTargetSize: materialTapTargetSize});
    button_theme.ButtonTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = button_theme.ButtonTheme.prototype;
  (button_theme.ButtonTheme.fromButtonThemeData = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$0.data$18] = data;
    if (!(data !== null)) dart.assertFailed(null, I[88], 116, 15, "data != null");
    button_theme.ButtonTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = button_theme.ButtonTheme.prototype;
  dart.addTypeTests(button_theme.ButtonTheme);
  dart.addTypeCaches(button_theme.ButtonTheme);
  dart.setMethodSignature(button_theme.ButtonTheme, () => ({
    __proto__: dart.getMethods(button_theme.ButtonTheme.__proto__),
    wrap: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget]),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setStaticMethodSignature(button_theme.ButtonTheme, () => ['of']);
  dart.setLibraryUri(button_theme.ButtonTheme, I[87]);
  dart.setFieldSignature(button_theme.ButtonTheme, () => ({
    __proto__: dart.getFields(button_theme.ButtonTheme.__proto__),
    data: dart.finalFieldType(button_theme.ButtonThemeData)
  }));
  const Object_Diagnosticable$36$24 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$24.new = function() {
  }).prototype = Object_Diagnosticable$36$24.prototype;
  dart.applyMixin(Object_Diagnosticable$36$24, diagnostics.Diagnosticable);
  button_theme.ButtonThemeData = class ButtonThemeData extends Object_Diagnosticable$36$24 {
    get minWidth() {
      return this[S$0.minWidth$3];
    }
    set minWidth(value) {
      super.minWidth = value;
    }
    get height() {
      return this[S$0.height$5];
    }
    set height(value) {
      super.height = value;
    }
    get textTheme() {
      return this[S$0.textTheme$1];
    }
    set textTheme(value) {
      super.textTheme = value;
    }
    get layoutBehavior() {
      return this[S$0.layoutBehavior];
    }
    set layoutBehavior(value) {
      super.layoutBehavior = value;
    }
    get [S$0._padding$1]() {
      return this[S$0._padding];
    }
    set [S$0._padding$1](value) {
      super[S$0._padding$1] = value;
    }
    get [S$0._shape$1]() {
      return this[S$0._shape];
    }
    set [S$0._shape$1](value) {
      super[S$0._shape$1] = value;
    }
    get alignedDropdown() {
      return this[S$0.alignedDropdown];
    }
    set alignedDropdown(value) {
      super.alignedDropdown = value;
    }
    get [S$0._buttonColor$1]() {
      return this[S$0._buttonColor];
    }
    set [S$0._buttonColor$1](value) {
      super[S$0._buttonColor$1] = value;
    }
    get [S$0._disabledColor$1]() {
      return this[S$0._disabledColor];
    }
    set [S$0._disabledColor$1](value) {
      super[S$0._disabledColor$1] = value;
    }
    get [S$0._focusColor$1]() {
      return this[S$0._focusColor];
    }
    set [S$0._focusColor$1](value) {
      super[S$0._focusColor$1] = value;
    }
    get [S$0._hoverColor$1]() {
      return this[S$0._hoverColor];
    }
    set [S$0._hoverColor$1](value) {
      super[S$0._hoverColor$1] = value;
    }
    get [S$0._highlightColor$1]() {
      return this[S$0._highlightColor];
    }
    set [S$0._highlightColor$1](value) {
      super[S$0._highlightColor$1] = value;
    }
    get [S$0._splashColor$1]() {
      return this[S$0._splashColor];
    }
    set [S$0._splashColor$1](value) {
      super[S$0._splashColor$1] = value;
    }
    get colorScheme() {
      return this[S$0.colorScheme];
    }
    set colorScheme(value) {
      super.colorScheme = value;
    }
    get [S$0._materialTapTargetSize$1]() {
      return this[S$0._materialTapTargetSize];
    }
    set [S$0._materialTapTargetSize$1](value) {
      super[S$0._materialTapTargetSize$1] = value;
    }
    static ['_#new#tearOff'](opts) {
      let textTheme = opts && 'textTheme' in opts ? opts.textTheme : C[647] || CT.C647;
      let minWidth = opts && 'minWidth' in opts ? opts.minWidth : 88;
      let height = opts && 'height' in opts ? opts.height : 36;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let layoutBehavior = opts && 'layoutBehavior' in opts ? opts.layoutBehavior : C[652] || CT.C652;
      let alignedDropdown = opts && 'alignedDropdown' in opts ? opts.alignedDropdown : false;
      let buttonColor = opts && 'buttonColor' in opts ? opts.buttonColor : null;
      let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
      let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
      let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
      let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
      let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
      let colorScheme = opts && 'colorScheme' in opts ? opts.colorScheme : null;
      let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
      return new button_theme.ButtonThemeData.new({textTheme: textTheme, minWidth: minWidth, height: height, padding: padding, shape: shape, layoutBehavior: layoutBehavior, alignedDropdown: alignedDropdown, buttonColor: buttonColor, disabledColor: disabledColor, focusColor: focusColor, hoverColor: hoverColor, highlightColor: highlightColor, splashColor: splashColor, colorScheme: colorScheme, materialTapTargetSize: materialTapTargetSize});
    }
    get constraints() {
      return new box$.BoxConstraints.new({minWidth: this.minWidth, minHeight: this.height});
    }
    get padding() {
      if (this[S$0._padding$1] != null) {
        return dart.nullCheck(this[S$0._padding$1]);
      }
      switch (this.textTheme) {
        case C[647] || CT.C647:
        case C[648] || CT.C648:
          {
            return C[656] || CT.C656;
          }
        case C[649] || CT.C649:
          {
            return C[657] || CT.C657;
          }
      }
    }
    get shape() {
      if (this[S$0._shape$1] != null) {
        return dart.nullCheck(this[S$0._shape$1]);
      }
      switch (this.textTheme) {
        case C[647] || CT.C647:
        case C[648] || CT.C648:
          {
            return C[658] || CT.C658;
          }
        case C[649] || CT.C649:
          {
            return C[75] || CT.C75;
          }
      }
    }
    getBrightness(button) {
      let t55;
      t55 = button.colorBrightness;
      return t55 == null ? dart.nullCheck(this.colorScheme).brightness : t55;
    }
    getTextTheme(button) {
      let t55;
      t55 = button.textTheme;
      return t55 == null ? this.textTheme : t55;
    }
    getDisabledTextColor(button) {
      let t55, t55$;
      t55$ = (t55 = button.textColor, t55 == null ? button.disabledTextColor : t55);
      return t55$ == null ? dart.nullCheck(this.colorScheme).onSurface.withOpacity(0.38) : t55$;
    }
    getDisabledFillColor(button) {
      let t55, t55$;
      t55$ = (t55 = button.disabledColor, t55 == null ? this[S$0._disabledColor$1] : t55);
      return t55$ == null ? dart.nullCheck(this.colorScheme).onSurface.withOpacity(0.38) : t55$;
    }
    getFillColor(button) {
      let t55;
      let fillColor = button.enabled ? button.color : button.disabledColor;
      if (fillColor != null) {
        return fillColor;
      }
      if (button[S.$runtimeType]._equals(dart.wrapType(material_button.MaterialButton))) {
        return null;
      }
      if (button.enabled && this[S$0._buttonColor$1] != null) {
        return this[S$0._buttonColor$1];
      }
      switch (this.getTextTheme(button)) {
        case C[647] || CT.C647:
        case C[648] || CT.C648:
          {
            return button.enabled ? dart.nullCheck(this.colorScheme).primary : this.getDisabledFillColor(button);
          }
        case C[649] || CT.C649:
          {
            return button.enabled ? (t55 = this[S$0._buttonColor$1], t55 == null ? dart.nullCheck(this.colorScheme).primary : t55) : dart.nullCheck(this.colorScheme).onSurface.withOpacity(0.12);
          }
      }
    }
    getTextColor(button) {
      if (!button.enabled) {
        return this.getDisabledTextColor(button);
      }
      if (button.textColor != null) {
        return dart.nullCheck(button.textColor);
      }
      switch (this.getTextTheme(button)) {
        case C[647] || CT.C647:
          {
            return this.getBrightness(button) === ui.Brightness.dark ? colors$.Colors.white : colors$.Colors.black87;
          }
        case C[648] || CT.C648:
          {
            return dart.nullCheck(this.colorScheme).secondary;
          }
        case C[649] || CT.C649:
          {
            let fillColor = this.getFillColor(button);
            let fillIsDark = fillColor != null ? theme_data.ThemeData.estimateBrightnessForColor(fillColor) === ui.Brightness.dark : this.getBrightness(button) === ui.Brightness.dark;
            return fillIsDark ? colors$.Colors.white : colors$.Colors.black;
          }
      }
    }
    getSplashColor(button) {
      if (button.splashColor != null) {
        return dart.nullCheck(button.splashColor);
      }
      if (this[S$0._splashColor$1] != null) {
        switch (this.getTextTheme(button)) {
          case C[647] || CT.C647:
          case C[648] || CT.C648:
            {
              return dart.nullCheck(this[S$0._splashColor$1]);
            }
          case C[649] || CT.C649:
            {
              break;
            }
        }
      }
      return this.getTextColor(button).withOpacity(0.12);
    }
    getFocusColor(button) {
      let t55, t55$;
      t55$ = (t55 = button.focusColor, t55 == null ? this[S$0._focusColor$1] : t55);
      return t55$ == null ? this.getTextColor(button).withOpacity(0.12) : t55$;
    }
    getHoverColor(button) {
      let t55, t55$;
      t55$ = (t55 = button.hoverColor, t55 == null ? this[S$0._hoverColor$1] : t55);
      return t55$ == null ? this.getTextColor(button).withOpacity(0.04) : t55$;
    }
    getHighlightColor(button) {
      let t55;
      if (button.highlightColor != null) {
        return dart.nullCheck(button.highlightColor);
      }
      switch (this.getTextTheme(button)) {
        case C[647] || CT.C647:
        case C[648] || CT.C648:
          {
            t55 = this[S$0._highlightColor$1];
            return t55 == null ? this.getTextColor(button).withOpacity(0.16) : t55;
          }
        case C[649] || CT.C649:
          {
            return colors$.Colors.transparent;
          }
      }
    }
    getElevation(button) {
      let t55;
      t55 = button.elevation;
      return t55 == null ? 2.0 : t55;
    }
    getFocusElevation(button) {
      let t55;
      t55 = button.focusElevation;
      return t55 == null ? 4.0 : t55;
    }
    getHoverElevation(button) {
      let t55;
      t55 = button.hoverElevation;
      return t55 == null ? 4.0 : t55;
    }
    getHighlightElevation(button) {
      let t55;
      t55 = button.highlightElevation;
      return t55 == null ? 8.0 : t55;
    }
    getDisabledElevation(button) {
      let t55;
      t55 = button.disabledElevation;
      return t55 == null ? 0.0 : t55;
    }
    getPadding(button) {
      if (button.padding != null) {
        return dart.nullCheck(button.padding);
      }
      if (material_button.MaterialButtonWithIconMixin.is(button)) {
        return C[661] || CT.C661;
      }
      if (this[S$0._padding$1] != null) {
        return dart.nullCheck(this[S$0._padding$1]);
      }
      switch (this.getTextTheme(button)) {
        case C[647] || CT.C647:
        case C[648] || CT.C648:
          {
            return C[656] || CT.C656;
          }
        case C[649] || CT.C649:
          {
            return C[657] || CT.C657;
          }
      }
    }
    getShape(button) {
      let t55;
      t55 = button.shape;
      return t55 == null ? this.shape : t55;
    }
    getAnimationDuration(button) {
      let t55;
      t55 = button.animationDuration;
      return t55 == null ? constants.kThemeChangeDuration : t55;
    }
    getConstraints(button) {
      return this.constraints;
    }
    getMaterialTapTargetSize(button) {
      let t55, t55$;
      t55$ = (t55 = button.materialTapTargetSize, t55 == null ? this[S$0._materialTapTargetSize$1] : t55);
      return t55$ == null ? theme_data.MaterialTapTargetSize.padded : t55$;
    }
    copyWith(opts) {
      let t55, t55$, t55$0, t55$1, t55$2, t55$3, t55$4, t55$5, t55$6, t55$7, t55$8, t55$9, t55$10, t55$11, t55$12;
      let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
      let layoutBehavior = opts && 'layoutBehavior' in opts ? opts.layoutBehavior : null;
      let minWidth = opts && 'minWidth' in opts ? opts.minWidth : null;
      let height = opts && 'height' in opts ? opts.height : null;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let alignedDropdown = opts && 'alignedDropdown' in opts ? opts.alignedDropdown : null;
      let buttonColor = opts && 'buttonColor' in opts ? opts.buttonColor : null;
      let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
      let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
      let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
      let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
      let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
      let colorScheme = opts && 'colorScheme' in opts ? opts.colorScheme : null;
      let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
      return new button_theme.ButtonThemeData.new({textTheme: (t55 = textTheme, t55 == null ? this.textTheme : t55), layoutBehavior: (t55$ = layoutBehavior, t55$ == null ? this.layoutBehavior : t55$), minWidth: (t55$0 = minWidth, t55$0 == null ? this.minWidth : t55$0), height: (t55$1 = height, t55$1 == null ? this.height : t55$1), padding: (t55$2 = padding, t55$2 == null ? this.padding : t55$2), shape: (t55$3 = shape, t55$3 == null ? this.shape : t55$3), alignedDropdown: (t55$4 = alignedDropdown, t55$4 == null ? this.alignedDropdown : t55$4), buttonColor: (t55$5 = buttonColor, t55$5 == null ? this[S$0._buttonColor$1] : t55$5), disabledColor: (t55$6 = disabledColor, t55$6 == null ? this[S$0._disabledColor$1] : t55$6), focusColor: (t55$7 = focusColor, t55$7 == null ? this[S$0._focusColor$1] : t55$7), hoverColor: (t55$8 = hoverColor, t55$8 == null ? this[S$0._hoverColor$1] : t55$8), highlightColor: (t55$9 = highlightColor, t55$9 == null ? this[S$0._highlightColor$1] : t55$9), splashColor: (t55$10 = splashColor, t55$10 == null ? this[S$0._splashColor$1] : t55$10), colorScheme: (t55$11 = colorScheme, t55$11 == null ? this.colorScheme : t55$11), materialTapTargetSize: (t55$12 = materialTapTargetSize, t55$12 == null ? this[S$0._materialTapTargetSize$1] : t55$12)});
    }
    _equals(other) {
      if (other == null) return false;
      if (!other[S.$runtimeType]._equals(this[S.$runtimeType])) {
        return false;
      }
      return button_theme.ButtonThemeData.is(other) && other.textTheme === this.textTheme && other.minWidth === this.minWidth && other.height === this.height && other.padding._equals(this.padding) && other.shape[S.$_equals](this.shape) && other.alignedDropdown === this.alignedDropdown && dart.equals(other[S$0._buttonColor$1], this[S$0._buttonColor$1]) && dart.equals(other[S$0._disabledColor$1], this[S$0._disabledColor$1]) && dart.equals(other[S$0._focusColor$1], this[S$0._focusColor$1]) && dart.equals(other[S$0._hoverColor$1], this[S$0._hoverColor$1]) && dart.equals(other[S$0._highlightColor$1], this[S$0._highlightColor$1]) && dart.equals(other[S$0._splashColor$1], this[S$0._splashColor$1]) && dart.equals(other.colorScheme, this.colorScheme) && other[S$0._materialTapTargetSize$1] == this[S$0._materialTapTargetSize$1];
    }
    get hashCode() {
      return core.Object.hash(this.textTheme, this.minWidth, this.height, this.padding, this.shape, this.alignedDropdown, this[S$0._buttonColor$1], this[S$0._disabledColor$1], this[S$0._focusColor$1], this[S$0._hoverColor$1], this[S$0._highlightColor$1], this[S$0._splashColor$1], this.colorScheme, this[S$0._materialTapTargetSize$1]);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      let defaultTheme = C[662] || CT.C662;
      properties.add(new (T$.EnumPropertyOfButtonTextTheme()).new("textTheme", this.textTheme, {defaultValue: defaultTheme.textTheme}));
      properties.add(new diagnostics.DoubleProperty.new("minWidth", this.minWidth, {defaultValue: defaultTheme.minWidth}));
      properties.add(new diagnostics.DoubleProperty.new("height", this.height, {defaultValue: defaultTheme.height}));
      properties.add(new (T$.DiagnosticsPropertyOfEdgeInsetsGeometry()).new("padding", this.padding, {defaultValue: defaultTheme.padding}));
      properties.add(new (T$.DiagnosticsPropertyOfShapeBorder()).new("shape", this.shape, {defaultValue: defaultTheme.shape}));
      properties.add(new diagnostics.FlagProperty.new("alignedDropdown", {value: this.alignedDropdown, defaultValue: defaultTheme.alignedDropdown, ifTrue: "dropdown width matches button"}));
      properties.add(new colors.ColorProperty.new("buttonColor", this[S$0._buttonColor$1], {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("disabledColor", this[S$0._disabledColor$1], {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("focusColor", this[S$0._focusColor$1], {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("hoverColor", this[S$0._hoverColor$1], {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("highlightColor", this[S$0._highlightColor$1], {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("splashColor", this[S$0._splashColor$1], {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfColorScheme()).new("colorScheme", this.colorScheme, {defaultValue: defaultTheme.colorScheme}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialTapTargetSize()).new("materialTapTargetSize", this[S$0._materialTapTargetSize$1], {defaultValue: null}));
    }
  };
  (button_theme.ButtonThemeData.new = function(opts) {
    let textTheme = opts && 'textTheme' in opts ? opts.textTheme : C[647] || CT.C647;
    let minWidth = opts && 'minWidth' in opts ? opts.minWidth : 88;
    let height = opts && 'height' in opts ? opts.height : 36;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let layoutBehavior = opts && 'layoutBehavior' in opts ? opts.layoutBehavior : C[652] || CT.C652;
    let alignedDropdown = opts && 'alignedDropdown' in opts ? opts.alignedDropdown : false;
    let buttonColor = opts && 'buttonColor' in opts ? opts.buttonColor : null;
    let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let colorScheme = opts && 'colorScheme' in opts ? opts.colorScheme : null;
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    this[S$0.textTheme$1] = textTheme;
    this[S$0.minWidth$3] = minWidth;
    this[S$0.height$5] = height;
    this[S$0.layoutBehavior] = layoutBehavior;
    this[S$0.alignedDropdown] = alignedDropdown;
    this[S$0.colorScheme] = colorScheme;
    if (!(textTheme !== null)) dart.assertFailed(null, I[88], 193, 15, "textTheme != null");
    if (!(minWidth !== null && minWidth >= 0.0)) dart.assertFailed(null, I[88], 194, 15, "minWidth != null && minWidth >= 0.0");
    if (!(height !== null && height >= 0.0)) dart.assertFailed(null, I[88], 195, 15, "height != null && height >= 0.0");
    if (!(alignedDropdown !== null)) dart.assertFailed(null, I[88], 196, 15, "alignedDropdown != null");
    if (!(layoutBehavior !== null)) dart.assertFailed(null, I[88], 197, 15, "layoutBehavior != null");
    this[S$0._buttonColor] = buttonColor;
    this[S$0._disabledColor] = disabledColor;
    this[S$0._focusColor] = focusColor;
    this[S$0._hoverColor] = hoverColor;
    this[S$0._highlightColor] = highlightColor;
    this[S$0._splashColor] = splashColor;
    this[S$0._padding] = padding;
    this[S$0._shape] = shape;
    this[S$0._materialTapTargetSize] = materialTapTargetSize;
    ;
  }).prototype = button_theme.ButtonThemeData.prototype;
  dart.addTypeTests(button_theme.ButtonThemeData);
  dart.addTypeCaches(button_theme.ButtonThemeData);
  dart.setMethodSignature(button_theme.ButtonThemeData, () => ({
    __proto__: dart.getMethods(button_theme.ButtonThemeData.__proto__),
    getBrightness: dart.fnType(ui.Brightness, [material_button.MaterialButton]),
    getTextTheme: dart.fnType(button_theme.ButtonTextTheme, [material_button.MaterialButton]),
    getDisabledTextColor: dart.fnType(ui.Color, [material_button.MaterialButton]),
    getDisabledFillColor: dart.fnType(ui.Color, [material_button.MaterialButton]),
    getFillColor: dart.fnType(dart.nullable(ui.Color), [material_button.MaterialButton]),
    getTextColor: dart.fnType(ui.Color, [material_button.MaterialButton]),
    getSplashColor: dart.fnType(ui.Color, [material_button.MaterialButton]),
    getFocusColor: dart.fnType(ui.Color, [material_button.MaterialButton]),
    getHoverColor: dart.fnType(ui.Color, [material_button.MaterialButton]),
    getHighlightColor: dart.fnType(ui.Color, [material_button.MaterialButton]),
    getElevation: dart.fnType(core.double, [material_button.MaterialButton]),
    getFocusElevation: dart.fnType(core.double, [material_button.MaterialButton]),
    getHoverElevation: dart.fnType(core.double, [material_button.MaterialButton]),
    getHighlightElevation: dart.fnType(core.double, [material_button.MaterialButton]),
    getDisabledElevation: dart.fnType(core.double, [material_button.MaterialButton]),
    getPadding: dart.fnType(edge_insets.EdgeInsetsGeometry, [material_button.MaterialButton]),
    getShape: dart.fnType(borders.ShapeBorder, [material_button.MaterialButton]),
    getAnimationDuration: dart.fnType(core.Duration, [material_button.MaterialButton]),
    getConstraints: dart.fnType(box$.BoxConstraints, [material_button.MaterialButton]),
    getMaterialTapTargetSize: dart.fnType(theme_data.MaterialTapTargetSize, [material_button.MaterialButton]),
    copyWith: dart.fnType(button_theme.ButtonThemeData, [], {alignedDropdown: dart.nullable(core.bool), buttonColor: dart.nullable(ui.Color), colorScheme: dart.nullable(color_scheme.ColorScheme), disabledColor: dart.nullable(ui.Color), focusColor: dart.nullable(ui.Color), height: dart.nullable(core.double), highlightColor: dart.nullable(ui.Color), hoverColor: dart.nullable(ui.Color), layoutBehavior: dart.nullable(button_theme.ButtonBarLayoutBehavior), materialTapTargetSize: dart.nullable(theme_data.MaterialTapTargetSize), minWidth: dart.nullable(core.double), padding: dart.nullable(edge_insets.EdgeInsetsGeometry), shape: dart.nullable(borders.ShapeBorder), splashColor: dart.nullable(ui.Color), textTheme: dart.nullable(button_theme.ButtonTextTheme)}, {})
  }));
  dart.setGetterSignature(button_theme.ButtonThemeData, () => ({
    __proto__: dart.getGetters(button_theme.ButtonThemeData.__proto__),
    constraints: box$.BoxConstraints,
    padding: edge_insets.EdgeInsetsGeometry,
    shape: borders.ShapeBorder
  }));
  dart.setLibraryUri(button_theme.ButtonThemeData, I[87]);
  dart.setFieldSignature(button_theme.ButtonThemeData, () => ({
    __proto__: dart.getFields(button_theme.ButtonThemeData.__proto__),
    minWidth: dart.finalFieldType(core.double),
    height: dart.finalFieldType(core.double),
    textTheme: dart.finalFieldType(button_theme.ButtonTextTheme),
    layoutBehavior: dart.finalFieldType(button_theme.ButtonBarLayoutBehavior),
    [S$0._padding$1]: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    [S$0._shape$1]: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    alignedDropdown: dart.finalFieldType(core.bool),
    [S$0._buttonColor$1]: dart.finalFieldType(dart.nullable(ui.Color)),
    [S$0._disabledColor$1]: dart.finalFieldType(dart.nullable(ui.Color)),
    [S$0._focusColor$1]: dart.finalFieldType(dart.nullable(ui.Color)),
    [S$0._hoverColor$1]: dart.finalFieldType(dart.nullable(ui.Color)),
    [S$0._highlightColor$1]: dart.finalFieldType(dart.nullable(ui.Color)),
    [S$0._splashColor$1]: dart.finalFieldType(dart.nullable(ui.Color)),
    colorScheme: dart.finalFieldType(dart.nullable(color_scheme.ColorScheme)),
    [S$0._materialTapTargetSize$1]: dart.finalFieldType(dart.nullable(theme_data.MaterialTapTargetSize))
  }));
  dart.defineExtensionMethods(button_theme.ButtonThemeData, ['_equals']);
  dart.defineExtensionAccessors(button_theme.ButtonThemeData, ['hashCode']);
  const Object_Diagnosticable$36$25 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$25.new = function() {
  }).prototype = Object_Diagnosticable$36$25.prototype;
  dart.applyMixin(Object_Diagnosticable$36$25, diagnostics.Diagnosticable);
  button_bar_theme.ButtonBarThemeData = class ButtonBarThemeData extends Object_Diagnosticable$36$25 {
    get alignment() {
      return this[S$0.alignment$3];
    }
    set alignment(value) {
      super.alignment = value;
    }
    get mainAxisSize() {
      return this[S$0.mainAxisSize];
    }
    set mainAxisSize(value) {
      super.mainAxisSize = value;
    }
    get buttonTextTheme() {
      return this[S$0.buttonTextTheme];
    }
    set buttonTextTheme(value) {
      super.buttonTextTheme = value;
    }
    get buttonMinWidth() {
      return this[S$0.buttonMinWidth];
    }
    set buttonMinWidth(value) {
      super.buttonMinWidth = value;
    }
    get buttonHeight() {
      return this[S$0.buttonHeight];
    }
    set buttonHeight(value) {
      super.buttonHeight = value;
    }
    get buttonPadding() {
      return this[S$0.buttonPadding];
    }
    set buttonPadding(value) {
      super.buttonPadding = value;
    }
    get buttonAlignedDropdown() {
      return this[S$0.buttonAlignedDropdown];
    }
    set buttonAlignedDropdown(value) {
      super.buttonAlignedDropdown = value;
    }
    get layoutBehavior() {
      return this[S$0.layoutBehavior$1];
    }
    set layoutBehavior(value) {
      super.layoutBehavior = value;
    }
    get overflowDirection() {
      return this[S$0.overflowDirection];
    }
    set overflowDirection(value) {
      super.overflowDirection = value;
    }
    static ['_#new#tearOff'](opts) {
      let alignment = opts && 'alignment' in opts ? opts.alignment : null;
      let mainAxisSize = opts && 'mainAxisSize' in opts ? opts.mainAxisSize : null;
      let buttonTextTheme = opts && 'buttonTextTheme' in opts ? opts.buttonTextTheme : null;
      let buttonMinWidth = opts && 'buttonMinWidth' in opts ? opts.buttonMinWidth : null;
      let buttonHeight = opts && 'buttonHeight' in opts ? opts.buttonHeight : null;
      let buttonPadding = opts && 'buttonPadding' in opts ? opts.buttonPadding : null;
      let buttonAlignedDropdown = opts && 'buttonAlignedDropdown' in opts ? opts.buttonAlignedDropdown : null;
      let layoutBehavior = opts && 'layoutBehavior' in opts ? opts.layoutBehavior : null;
      let overflowDirection = opts && 'overflowDirection' in opts ? opts.overflowDirection : null;
      return new button_bar_theme.ButtonBarThemeData.new({alignment: alignment, mainAxisSize: mainAxisSize, buttonTextTheme: buttonTextTheme, buttonMinWidth: buttonMinWidth, buttonHeight: buttonHeight, buttonPadding: buttonPadding, buttonAlignedDropdown: buttonAlignedDropdown, layoutBehavior: layoutBehavior, overflowDirection: overflowDirection});
    }
    copyWith(opts) {
      let t55, t55$, t55$0, t55$1, t55$2, t55$3, t55$4, t55$5, t55$6;
      let alignment = opts && 'alignment' in opts ? opts.alignment : null;
      let mainAxisSize = opts && 'mainAxisSize' in opts ? opts.mainAxisSize : null;
      let buttonTextTheme = opts && 'buttonTextTheme' in opts ? opts.buttonTextTheme : null;
      let buttonMinWidth = opts && 'buttonMinWidth' in opts ? opts.buttonMinWidth : null;
      let buttonHeight = opts && 'buttonHeight' in opts ? opts.buttonHeight : null;
      let buttonPadding = opts && 'buttonPadding' in opts ? opts.buttonPadding : null;
      let buttonAlignedDropdown = opts && 'buttonAlignedDropdown' in opts ? opts.buttonAlignedDropdown : null;
      let layoutBehavior = opts && 'layoutBehavior' in opts ? opts.layoutBehavior : null;
      let overflowDirection = opts && 'overflowDirection' in opts ? opts.overflowDirection : null;
      return new button_bar_theme.ButtonBarThemeData.new({alignment: (t55 = alignment, t55 == null ? this.alignment : t55), mainAxisSize: (t55$ = mainAxisSize, t55$ == null ? this.mainAxisSize : t55$), buttonTextTheme: (t55$0 = buttonTextTheme, t55$0 == null ? this.buttonTextTheme : t55$0), buttonMinWidth: (t55$1 = buttonMinWidth, t55$1 == null ? this.buttonMinWidth : t55$1), buttonHeight: (t55$2 = buttonHeight, t55$2 == null ? this.buttonHeight : t55$2), buttonPadding: (t55$3 = buttonPadding, t55$3 == null ? this.buttonPadding : t55$3), buttonAlignedDropdown: (t55$4 = buttonAlignedDropdown, t55$4 == null ? this.buttonAlignedDropdown : t55$4), layoutBehavior: (t55$5 = layoutBehavior, t55$5 == null ? this.layoutBehavior : t55$5), overflowDirection: (t55$6 = overflowDirection, t55$6 == null ? this.overflowDirection : t55$6)});
    }
    static lerp(a, b, t) {
      let t55, t55$, t55$0, t55$1, t55$2, t55$3, t55$4, t55$5, t55$6, t55$7, t55$8, t55$9, t55$10, t55$11, t55$12, t55$13, t55$14, t55$15;
      if (!(t !== null)) dart.assertFailed(null, I[89], 146, 12, "t != null");
      if (a == null && b == null) {
        return null;
      }
      return new button_bar_theme.ButtonBarThemeData.new({alignment: t < 0.5 ? (t55 = a, t55 == null ? null : t55.alignment) : (t55$ = b, t55$ == null ? null : t55$.alignment), mainAxisSize: t < 0.5 ? (t55$0 = a, t55$0 == null ? null : t55$0.mainAxisSize) : (t55$1 = b, t55$1 == null ? null : t55$1.mainAxisSize), buttonTextTheme: t < 0.5 ? (t55$2 = a, t55$2 == null ? null : t55$2.buttonTextTheme) : (t55$3 = b, t55$3 == null ? null : t55$3.buttonTextTheme), buttonMinWidth: ui.lerpDouble((t55$4 = a, t55$4 == null ? null : t55$4.buttonMinWidth), (t55$5 = b, t55$5 == null ? null : t55$5.buttonMinWidth), t), buttonHeight: ui.lerpDouble((t55$6 = a, t55$6 == null ? null : t55$6.buttonHeight), (t55$7 = b, t55$7 == null ? null : t55$7.buttonHeight), t), buttonPadding: edge_insets.EdgeInsetsGeometry.lerp((t55$8 = a, t55$8 == null ? null : t55$8.buttonPadding), (t55$9 = b, t55$9 == null ? null : t55$9.buttonPadding), t), buttonAlignedDropdown: t < 0.5 ? (t55$10 = a, t55$10 == null ? null : t55$10.buttonAlignedDropdown) : (t55$11 = b, t55$11 == null ? null : t55$11.buttonAlignedDropdown), layoutBehavior: t < 0.5 ? (t55$12 = a, t55$12 == null ? null : t55$12.layoutBehavior) : (t55$13 = b, t55$13 == null ? null : t55$13.layoutBehavior), overflowDirection: t < 0.5 ? (t55$14 = a, t55$14 == null ? null : t55$14.overflowDirection) : (t55$15 = b, t55$15 == null ? null : t55$15.overflowDirection)});
    }
    get hashCode() {
      return core.Object.hash(this.alignment, this.mainAxisSize, this.buttonTextTheme, this.buttonMinWidth, this.buttonHeight, this.buttonPadding, this.buttonAlignedDropdown, this.layoutBehavior, this.overflowDirection);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      if (!other[S.$runtimeType]._equals(this[S.$runtimeType])) {
        return false;
      }
      return button_bar_theme.ButtonBarThemeData.is(other) && other.alignment == this.alignment && other.mainAxisSize == this.mainAxisSize && other.buttonTextTheme == this.buttonTextTheme && other.buttonMinWidth == this.buttonMinWidth && other.buttonHeight == this.buttonHeight && dart.equals(other.buttonPadding, this.buttonPadding) && other.buttonAlignedDropdown == this.buttonAlignedDropdown && other.layoutBehavior == this.layoutBehavior && other.overflowDirection == this.overflowDirection;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfMainAxisAlignment()).new("alignment", this.alignment, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMainAxisSize()).new("mainAxisSize", this.mainAxisSize, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfButtonTextTheme()).new("textTheme", this.buttonTextTheme, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("minWidth", this.buttonMinWidth, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("height", this.buttonHeight, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfEdgeInsetsGeometry()).new("padding", this.buttonPadding, {defaultValue: null}));
      properties.add(new diagnostics.FlagProperty.new("buttonAlignedDropdown", {value: this.buttonAlignedDropdown, ifTrue: "dropdown width matches button"}));
      properties.add(new (T$.DiagnosticsPropertyOfButtonBarLayoutBehavior()).new("layoutBehavior", this.layoutBehavior, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfVerticalDirection()).new("overflowDirection", this.overflowDirection, {defaultValue: null}));
    }
  };
  (button_bar_theme.ButtonBarThemeData.new = function(opts) {
    let alignment = opts && 'alignment' in opts ? opts.alignment : null;
    let mainAxisSize = opts && 'mainAxisSize' in opts ? opts.mainAxisSize : null;
    let buttonTextTheme = opts && 'buttonTextTheme' in opts ? opts.buttonTextTheme : null;
    let buttonMinWidth = opts && 'buttonMinWidth' in opts ? opts.buttonMinWidth : null;
    let buttonHeight = opts && 'buttonHeight' in opts ? opts.buttonHeight : null;
    let buttonPadding = opts && 'buttonPadding' in opts ? opts.buttonPadding : null;
    let buttonAlignedDropdown = opts && 'buttonAlignedDropdown' in opts ? opts.buttonAlignedDropdown : null;
    let layoutBehavior = opts && 'layoutBehavior' in opts ? opts.layoutBehavior : null;
    let overflowDirection = opts && 'overflowDirection' in opts ? opts.overflowDirection : null;
    this[S$0.alignment$3] = alignment;
    this[S$0.mainAxisSize] = mainAxisSize;
    this[S$0.buttonTextTheme] = buttonTextTheme;
    this[S$0.buttonMinWidth] = buttonMinWidth;
    this[S$0.buttonHeight] = buttonHeight;
    this[S$0.buttonPadding] = buttonPadding;
    this[S$0.buttonAlignedDropdown] = buttonAlignedDropdown;
    this[S$0.layoutBehavior$1] = layoutBehavior;
    this[S$0.overflowDirection] = overflowDirection;
    if (!(buttonMinWidth == null || dart.notNull(buttonMinWidth) >= 0.0)) dart.assertFailed(null, I[89], 43, 15, "buttonMinWidth == null || buttonMinWidth >= 0.0");
    if (!(buttonHeight == null || dart.notNull(buttonHeight) >= 0.0)) dart.assertFailed(null, I[89], 44, 15, "buttonHeight == null || buttonHeight >= 0.0");
    ;
  }).prototype = button_bar_theme.ButtonBarThemeData.prototype;
  dart.addTypeTests(button_bar_theme.ButtonBarThemeData);
  dart.addTypeCaches(button_bar_theme.ButtonBarThemeData);
  dart.setMethodSignature(button_bar_theme.ButtonBarThemeData, () => ({
    __proto__: dart.getMethods(button_bar_theme.ButtonBarThemeData.__proto__),
    copyWith: dart.fnType(button_bar_theme.ButtonBarThemeData, [], {alignment: dart.nullable(flex.MainAxisAlignment), buttonAlignedDropdown: dart.nullable(core.bool), buttonHeight: dart.nullable(core.double), buttonMinWidth: dart.nullable(core.double), buttonPadding: dart.nullable(edge_insets.EdgeInsetsGeometry), buttonTextTheme: dart.nullable(button_theme.ButtonTextTheme), layoutBehavior: dart.nullable(button_theme.ButtonBarLayoutBehavior), mainAxisSize: dart.nullable(flex.MainAxisSize), overflowDirection: dart.nullable(basic_types.VerticalDirection)}, {})
  }));
  dart.setStaticMethodSignature(button_bar_theme.ButtonBarThemeData, () => ['lerp']);
  dart.setLibraryUri(button_bar_theme.ButtonBarThemeData, I[90]);
  dart.setFieldSignature(button_bar_theme.ButtonBarThemeData, () => ({
    __proto__: dart.getFields(button_bar_theme.ButtonBarThemeData.__proto__),
    alignment: dart.finalFieldType(dart.nullable(flex.MainAxisAlignment)),
    mainAxisSize: dart.finalFieldType(dart.nullable(flex.MainAxisSize)),
    buttonTextTheme: dart.finalFieldType(dart.nullable(button_theme.ButtonTextTheme)),
    buttonMinWidth: dart.finalFieldType(dart.nullable(core.double)),
    buttonHeight: dart.finalFieldType(dart.nullable(core.double)),
    buttonPadding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    buttonAlignedDropdown: dart.finalFieldType(dart.nullable(core.bool)),
    layoutBehavior: dart.finalFieldType(dart.nullable(button_theme.ButtonBarLayoutBehavior)),
    overflowDirection: dart.finalFieldType(dart.nullable(basic_types.VerticalDirection))
  }));
  dart.defineExtensionMethods(button_bar_theme.ButtonBarThemeData, ['_equals']);
  dart.defineExtensionAccessors(button_bar_theme.ButtonBarThemeData, ['hashCode']);
  button_bar_theme.ButtonBarTheme = class ButtonBarTheme extends framework.InheritedWidget {
    get data() {
      return this[S$0.data$19];
    }
    set data(value) {
      super.data = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let data = opts && 'data' in opts ? opts.data : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new button_bar_theme.ButtonBarTheme.new({key: key, data: data, child: child, $creationLocationd_0dea112b090073317d4: C[663] || CT.C663});
    }
    static of(context) {
      let t55, t55$;
      let buttonBarTheme = context.dependOnInheritedWidgetOfExactType(button_bar_theme.ButtonBarTheme);
      t55$ = (t55 = buttonBarTheme, t55 == null ? null : t55.data);
      return t55$ == null ? theme$.Theme.of(context).buttonBarTheme : t55$;
    }
    updateShouldNotify(oldWidget) {
      button_bar_theme.ButtonBarTheme.as(oldWidget);
      return !this.data._equals(oldWidget.data);
    }
  };
  (button_bar_theme.ButtonBarTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$0.data$19] = data;
    if (!(data !== null)) dart.assertFailed(null, I[89], 240, 15, "data != null");
    button_bar_theme.ButtonBarTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = button_bar_theme.ButtonBarTheme.prototype;
  dart.addTypeTests(button_bar_theme.ButtonBarTheme);
  dart.addTypeCaches(button_bar_theme.ButtonBarTheme);
  dart.setMethodSignature(button_bar_theme.ButtonBarTheme, () => ({
    __proto__: dart.getMethods(button_bar_theme.ButtonBarTheme.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setStaticMethodSignature(button_bar_theme.ButtonBarTheme, () => ['of']);
  dart.setLibraryUri(button_bar_theme.ButtonBarTheme, I[90]);
  dart.setFieldSignature(button_bar_theme.ButtonBarTheme, () => ({
    __proto__: dart.getFields(button_bar_theme.ButtonBarTheme.__proto__),
    data: dart.finalFieldType(button_bar_theme.ButtonBarThemeData)
  }));
  const Object_Diagnosticable$36$26 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$26.new = function() {
  }).prototype = Object_Diagnosticable$36$26.prototype;
  dart.applyMixin(Object_Diagnosticable$36$26, diagnostics.Diagnosticable);
  tooltip_theme.TooltipThemeData = class TooltipThemeData extends Object_Diagnosticable$36$26 {
    get height() {
      return this[S$0.height$6];
    }
    set height(value) {
      super.height = value;
    }
    get padding() {
      return this[S$0.padding$8];
    }
    set padding(value) {
      super.padding = value;
    }
    get margin() {
      return this[S$0.margin$2];
    }
    set margin(value) {
      super.margin = value;
    }
    get verticalOffset() {
      return this[S$0.verticalOffset];
    }
    set verticalOffset(value) {
      super.verticalOffset = value;
    }
    get preferBelow() {
      return this[S$0.preferBelow];
    }
    set preferBelow(value) {
      super.preferBelow = value;
    }
    get excludeFromSemantics() {
      return this[S$0.excludeFromSemantics];
    }
    set excludeFromSemantics(value) {
      super.excludeFromSemantics = value;
    }
    get decoration() {
      return this[S$0.decoration$3];
    }
    set decoration(value) {
      super.decoration = value;
    }
    get textStyle() {
      return this[S$0.textStyle$4];
    }
    set textStyle(value) {
      super.textStyle = value;
    }
    get textAlign() {
      return this[S$0.textAlign$2];
    }
    set textAlign(value) {
      super.textAlign = value;
    }
    get waitDuration() {
      return this[S$0.waitDuration];
    }
    set waitDuration(value) {
      super.waitDuration = value;
    }
    get showDuration() {
      return this[S$0.showDuration];
    }
    set showDuration(value) {
      super.showDuration = value;
    }
    get triggerMode() {
      return this[S$0.triggerMode];
    }
    set triggerMode(value) {
      super.triggerMode = value;
    }
    get enableFeedback() {
      return this[S$0.enableFeedback$7];
    }
    set enableFeedback(value) {
      super.enableFeedback = value;
    }
    static ['_#new#tearOff'](opts) {
      let height = opts && 'height' in opts ? opts.height : null;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let margin = opts && 'margin' in opts ? opts.margin : null;
      let verticalOffset = opts && 'verticalOffset' in opts ? opts.verticalOffset : null;
      let preferBelow = opts && 'preferBelow' in opts ? opts.preferBelow : null;
      let excludeFromSemantics = opts && 'excludeFromSemantics' in opts ? opts.excludeFromSemantics : null;
      let decoration = opts && 'decoration' in opts ? opts.decoration : null;
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let textAlign = opts && 'textAlign' in opts ? opts.textAlign : null;
      let waitDuration = opts && 'waitDuration' in opts ? opts.waitDuration : null;
      let showDuration = opts && 'showDuration' in opts ? opts.showDuration : null;
      let triggerMode = opts && 'triggerMode' in opts ? opts.triggerMode : null;
      let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
      return new tooltip_theme.TooltipThemeData.new({height: height, padding: padding, margin: margin, verticalOffset: verticalOffset, preferBelow: preferBelow, excludeFromSemantics: excludeFromSemantics, decoration: decoration, textStyle: textStyle, textAlign: textAlign, waitDuration: waitDuration, showDuration: showDuration, triggerMode: triggerMode, enableFeedback: enableFeedback});
    }
    copyWith(opts) {
      let t55, t55$, t55$0, t55$1, t55$2, t55$3, t55$4, t55$5, t55$6, t55$7, t55$8, t55$9, t55$10;
      let height = opts && 'height' in opts ? opts.height : null;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let margin = opts && 'margin' in opts ? opts.margin : null;
      let verticalOffset = opts && 'verticalOffset' in opts ? opts.verticalOffset : null;
      let preferBelow = opts && 'preferBelow' in opts ? opts.preferBelow : null;
      let excludeFromSemantics = opts && 'excludeFromSemantics' in opts ? opts.excludeFromSemantics : null;
      let decoration = opts && 'decoration' in opts ? opts.decoration : null;
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let textAlign = opts && 'textAlign' in opts ? opts.textAlign : null;
      let waitDuration = opts && 'waitDuration' in opts ? opts.waitDuration : null;
      let showDuration = opts && 'showDuration' in opts ? opts.showDuration : null;
      let triggerMode = opts && 'triggerMode' in opts ? opts.triggerMode : null;
      let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
      return new tooltip_theme.TooltipThemeData.new({height: (t55 = height, t55 == null ? this.height : t55), padding: (t55$ = padding, t55$ == null ? this.padding : t55$), margin: (t55$0 = margin, t55$0 == null ? this.margin : t55$0), verticalOffset: (t55$1 = verticalOffset, t55$1 == null ? this.verticalOffset : t55$1), preferBelow: (t55$2 = preferBelow, t55$2 == null ? this.preferBelow : t55$2), excludeFromSemantics: (t55$3 = excludeFromSemantics, t55$3 == null ? this.excludeFromSemantics : t55$3), decoration: (t55$4 = decoration, t55$4 == null ? this.decoration : t55$4), textStyle: (t55$5 = textStyle, t55$5 == null ? this.textStyle : t55$5), textAlign: (t55$6 = textAlign, t55$6 == null ? this.textAlign : t55$6), waitDuration: (t55$7 = waitDuration, t55$7 == null ? this.waitDuration : t55$7), showDuration: (t55$8 = showDuration, t55$8 == null ? this.showDuration : t55$8), triggerMode: (t55$9 = triggerMode, t55$9 == null ? this.triggerMode : t55$9), enableFeedback: (t55$10 = enableFeedback, t55$10 == null ? this.enableFeedback : t55$10)});
    }
    static lerp(a, b, t) {
      let t55, t55$, t55$0, t55$1, t55$2, t55$3, t55$4, t55$5, t55$6, t55$7, t55$8, t55$9, t55$10, t55$11, t55$12, t55$13, t55$14, t55$15;
      if (a == null && b == null) {
        return null;
      }
      if (!(t !== null)) dart.assertFailed(null, I[91], 152, 12, "t != null");
      return new tooltip_theme.TooltipThemeData.new({height: ui.lerpDouble((t55 = a, t55 == null ? null : t55.height), (t55$ = b, t55$ == null ? null : t55$.height), t), padding: edge_insets.EdgeInsetsGeometry.lerp((t55$0 = a, t55$0 == null ? null : t55$0.padding), (t55$1 = b, t55$1 == null ? null : t55$1.padding), t), margin: edge_insets.EdgeInsetsGeometry.lerp((t55$2 = a, t55$2 == null ? null : t55$2.margin), (t55$3 = b, t55$3 == null ? null : t55$3.margin), t), verticalOffset: ui.lerpDouble((t55$4 = a, t55$4 == null ? null : t55$4.verticalOffset), (t55$5 = b, t55$5 == null ? null : t55$5.verticalOffset), t), preferBelow: t < 0.5 ? (t55$6 = a, t55$6 == null ? null : t55$6.preferBelow) : (t55$7 = b, t55$7 == null ? null : t55$7.preferBelow), excludeFromSemantics: t < 0.5 ? (t55$8 = a, t55$8 == null ? null : t55$8.excludeFromSemantics) : (t55$9 = b, t55$9 == null ? null : t55$9.excludeFromSemantics), decoration: decoration.Decoration.lerp((t55$10 = a, t55$10 == null ? null : t55$10.decoration), (t55$11 = b, t55$11 == null ? null : t55$11.decoration), t), textStyle: text_style.TextStyle.lerp((t55$12 = a, t55$12 == null ? null : t55$12.textStyle), (t55$13 = b, t55$13 == null ? null : t55$13.textStyle), t), textAlign: t < 0.5 ? (t55$14 = a, t55$14 == null ? null : t55$14.textAlign) : (t55$15 = b, t55$15 == null ? null : t55$15.textAlign)});
    }
    get hashCode() {
      return core.Object.hash(this.height, this.padding, this.margin, this.verticalOffset, this.preferBelow, this.excludeFromSemantics, this.decoration, this.textStyle, this.textAlign, this.waitDuration, this.showDuration, this.triggerMode, this.enableFeedback);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      if (!other[S.$runtimeType]._equals(this[S.$runtimeType])) {
        return false;
      }
      return tooltip_theme.TooltipThemeData.is(other) && other.height == this.height && dart.equals(other.padding, this.padding) && dart.equals(other.margin, this.margin) && other.verticalOffset == this.verticalOffset && other.preferBelow == this.preferBelow && other.excludeFromSemantics == this.excludeFromSemantics && dart.equals(other.decoration, this.decoration) && dart.equals(other.textStyle, this.textStyle) && other.textAlign == this.textAlign && dart.equals(other.waitDuration, this.waitDuration) && dart.equals(other.showDuration, this.showDuration) && other.triggerMode == this.triggerMode && other.enableFeedback == this.enableFeedback;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new diagnostics.DoubleProperty.new("height", this.height, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfEdgeInsetsGeometry()).new("padding", this.padding, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfEdgeInsetsGeometry()).new("margin", this.margin, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("vertical offset", this.verticalOffset, {defaultValue: null}));
      properties.add(new diagnostics.FlagProperty.new("position", {value: this.preferBelow, ifTrue: "below", ifFalse: "above", showName: true}));
      properties.add(new diagnostics.FlagProperty.new("semantics", {value: this.excludeFromSemantics, ifTrue: "excluded", showName: true}));
      properties.add(new (T$.DiagnosticsPropertyOfDecoration()).new("decoration", this.decoration, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("textStyle", this.textStyle, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfTextAlign()).new("textAlign", this.textAlign, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfDuration()).new("wait duration", this.waitDuration, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfDuration()).new("show duration", this.showDuration, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfTooltipTriggerMode()).new("triggerMode", this.triggerMode, {defaultValue: null}));
      properties.add(new diagnostics.FlagProperty.new("enableFeedback", {value: this.enableFeedback, ifTrue: "true", showName: true}));
    }
  };
  (tooltip_theme.TooltipThemeData.new = function(opts) {
    let height = opts && 'height' in opts ? opts.height : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let margin = opts && 'margin' in opts ? opts.margin : null;
    let verticalOffset = opts && 'verticalOffset' in opts ? opts.verticalOffset : null;
    let preferBelow = opts && 'preferBelow' in opts ? opts.preferBelow : null;
    let excludeFromSemantics = opts && 'excludeFromSemantics' in opts ? opts.excludeFromSemantics : null;
    let decoration = opts && 'decoration' in opts ? opts.decoration : null;
    let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
    let textAlign = opts && 'textAlign' in opts ? opts.textAlign : null;
    let waitDuration = opts && 'waitDuration' in opts ? opts.waitDuration : null;
    let showDuration = opts && 'showDuration' in opts ? opts.showDuration : null;
    let triggerMode = opts && 'triggerMode' in opts ? opts.triggerMode : null;
    let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
    this[S$0.height$6] = height;
    this[S$0.padding$8] = padding;
    this[S$0.margin$2] = margin;
    this[S$0.verticalOffset] = verticalOffset;
    this[S$0.preferBelow] = preferBelow;
    this[S$0.excludeFromSemantics] = excludeFromSemantics;
    this[S$0.decoration$3] = decoration;
    this[S$0.textStyle$4] = textStyle;
    this[S$0.textAlign$2] = textAlign;
    this[S$0.waitDuration] = waitDuration;
    this[S$0.showDuration] = showDuration;
    this[S$0.triggerMode] = triggerMode;
    this[S$0.enableFeedback$7] = enableFeedback;
    ;
  }).prototype = tooltip_theme.TooltipThemeData.prototype;
  dart.addTypeTests(tooltip_theme.TooltipThemeData);
  dart.addTypeCaches(tooltip_theme.TooltipThemeData);
  dart.setMethodSignature(tooltip_theme.TooltipThemeData, () => ({
    __proto__: dart.getMethods(tooltip_theme.TooltipThemeData.__proto__),
    copyWith: dart.fnType(tooltip_theme.TooltipThemeData, [], {decoration: dart.nullable(decoration.Decoration), enableFeedback: dart.nullable(core.bool), excludeFromSemantics: dart.nullable(core.bool), height: dart.nullable(core.double), margin: dart.nullable(edge_insets.EdgeInsetsGeometry), padding: dart.nullable(edge_insets.EdgeInsetsGeometry), preferBelow: dart.nullable(core.bool), showDuration: dart.nullable(core.Duration), textAlign: dart.nullable(ui.TextAlign), textStyle: dart.nullable(text_style.TextStyle), triggerMode: dart.nullable(tooltip_theme.TooltipTriggerMode), verticalOffset: dart.nullable(core.double), waitDuration: dart.nullable(core.Duration)}, {})
  }));
  dart.setStaticMethodSignature(tooltip_theme.TooltipThemeData, () => ['lerp']);
  dart.setLibraryUri(tooltip_theme.TooltipThemeData, I[92]);
  dart.setFieldSignature(tooltip_theme.TooltipThemeData, () => ({
    __proto__: dart.getFields(tooltip_theme.TooltipThemeData.__proto__),
    height: dart.finalFieldType(dart.nullable(core.double)),
    padding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    margin: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    verticalOffset: dart.finalFieldType(dart.nullable(core.double)),
    preferBelow: dart.finalFieldType(dart.nullable(core.bool)),
    excludeFromSemantics: dart.finalFieldType(dart.nullable(core.bool)),
    decoration: dart.finalFieldType(dart.nullable(decoration.Decoration)),
    textStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    textAlign: dart.finalFieldType(dart.nullable(ui.TextAlign)),
    waitDuration: dart.finalFieldType(dart.nullable(core.Duration)),
    showDuration: dart.finalFieldType(dart.nullable(core.Duration)),
    triggerMode: dart.finalFieldType(dart.nullable(tooltip_theme.TooltipTriggerMode)),
    enableFeedback: dart.finalFieldType(dart.nullable(core.bool))
  }));
  dart.defineExtensionMethods(tooltip_theme.TooltipThemeData, ['_equals']);
  dart.defineExtensionAccessors(tooltip_theme.TooltipThemeData, ['hashCode']);
  tooltip_theme.TooltipTheme = class TooltipTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[S$0.data$20];
    }
    set data(value) {
      super.data = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let data = opts && 'data' in opts ? opts.data : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new tooltip_theme.TooltipTheme.new({key: key, data: data, child: child, $creationLocationd_0dea112b090073317d4: C[664] || CT.C664});
    }
    static of(context) {
      let t55, t55$;
      let tooltipTheme = context.dependOnInheritedWidgetOfExactType(tooltip_theme.TooltipTheme);
      t55$ = (t55 = tooltipTheme, t55 == null ? null : t55.data);
      return t55$ == null ? theme$.Theme.of(context).tooltipTheme : t55$;
    }
    wrap(context, child) {
      return new tooltip_theme.TooltipTheme.new({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C[665] || CT.C665});
    }
    updateShouldNotify(oldWidget) {
      tooltip_theme.TooltipTheme.as(oldWidget);
      return !this.data._equals(oldWidget.data);
    }
  };
  (tooltip_theme.TooltipTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$0.data$20] = data;
    if (!(data !== null)) dart.assertFailed(null, I[91], 269, 15, "data != null");
    tooltip_theme.TooltipTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = tooltip_theme.TooltipTheme.prototype;
  dart.addTypeTests(tooltip_theme.TooltipTheme);
  dart.addTypeCaches(tooltip_theme.TooltipTheme);
  dart.setMethodSignature(tooltip_theme.TooltipTheme, () => ({
    __proto__: dart.getMethods(tooltip_theme.TooltipTheme.__proto__),
    wrap: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget]),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setStaticMethodSignature(tooltip_theme.TooltipTheme, () => ['of']);
  dart.setLibraryUri(tooltip_theme.TooltipTheme, I[92]);
  dart.setFieldSignature(tooltip_theme.TooltipTheme, () => ({
    __proto__: dart.getFields(tooltip_theme.TooltipTheme.__proto__),
    data: dart.finalFieldType(tooltip_theme.TooltipThemeData)
  }));
  tooltip_theme.TooltipTriggerMode = class TooltipTriggerMode extends core._Enum {
    toString() {
      return "TooltipTriggerMode." + this[S._name];
    }
  };
  (tooltip_theme.TooltipTriggerMode.new = function(index, name) {
    tooltip_theme.TooltipTriggerMode.__proto__.new.call(this, index, name);
    ;
  }).prototype = tooltip_theme.TooltipTriggerMode.prototype;
  dart.addTypeTests(tooltip_theme.TooltipTriggerMode);
  dart.addTypeCaches(tooltip_theme.TooltipTriggerMode);
  dart.setLibraryUri(tooltip_theme.TooltipTriggerMode, I[92]);
  dart.setStaticFieldSignature(tooltip_theme.TooltipTriggerMode, () => ['values', 'manual', 'longPress', 'tap']);
  dart.defineExtensionMethods(tooltip_theme.TooltipTriggerMode, ['toString']);
  dart.defineLazy(tooltip_theme.TooltipTriggerMode, {
    /*tooltip_theme.TooltipTriggerMode.values*/get values() {
      return C[666] || CT.C666;
    },
    /*tooltip_theme.TooltipTriggerMode.manual*/get manual() {
      return C[667] || CT.C667;
    },
    /*tooltip_theme.TooltipTriggerMode.longPress*/get longPress() {
      return C[668] || CT.C668;
    },
    /*tooltip_theme.TooltipTriggerMode.tap*/get tap() {
      return C[669] || CT.C669;
    }
  }, false);
  tooltip.Tooltip = class Tooltip extends framework.StatefulWidget {
    get message() {
      return this[S$0.message$1];
    }
    set message(value) {
      super.message = value;
    }
    get richMessage() {
      return this[S$0.richMessage];
    }
    set richMessage(value) {
      super.richMessage = value;
    }
    get height() {
      return this[S$0.height$7];
    }
    set height(value) {
      super.height = value;
    }
    get padding() {
      return this[S$0.padding$9];
    }
    set padding(value) {
      super.padding = value;
    }
    get margin() {
      return this[S$0.margin$3];
    }
    set margin(value) {
      super.margin = value;
    }
    get verticalOffset() {
      return this[S$0.verticalOffset$1];
    }
    set verticalOffset(value) {
      super.verticalOffset = value;
    }
    get preferBelow() {
      return this[S$0.preferBelow$1];
    }
    set preferBelow(value) {
      super.preferBelow = value;
    }
    get excludeFromSemantics() {
      return this[S$0.excludeFromSemantics$1];
    }
    set excludeFromSemantics(value) {
      super.excludeFromSemantics = value;
    }
    get child() {
      return this[S$0.child$19];
    }
    set child(value) {
      super.child = value;
    }
    get decoration() {
      return this[S$0.decoration$4];
    }
    set decoration(value) {
      super.decoration = value;
    }
    get textStyle() {
      return this[S$0.textStyle$5];
    }
    set textStyle(value) {
      super.textStyle = value;
    }
    get textAlign() {
      return this[S$0.textAlign$3];
    }
    set textAlign(value) {
      super.textAlign = value;
    }
    get waitDuration() {
      return this[S$0.waitDuration$1];
    }
    set waitDuration(value) {
      super.waitDuration = value;
    }
    get showDuration() {
      return this[S$0.showDuration$1];
    }
    set showDuration(value) {
      super.showDuration = value;
    }
    get triggerMode() {
      return this[S$0.triggerMode$1];
    }
    set triggerMode(value) {
      super.triggerMode = value;
    }
    get enableFeedback() {
      return this[S$0.enableFeedback$8];
    }
    set enableFeedback(value) {
      super.enableFeedback = value;
    }
    get onTriggered() {
      return this[S$0.onTriggered];
    }
    set onTriggered(value) {
      super.onTriggered = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let message = opts && 'message' in opts ? opts.message : null;
      let richMessage = opts && 'richMessage' in opts ? opts.richMessage : null;
      let height = opts && 'height' in opts ? opts.height : null;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let margin = opts && 'margin' in opts ? opts.margin : null;
      let verticalOffset = opts && 'verticalOffset' in opts ? opts.verticalOffset : null;
      let preferBelow = opts && 'preferBelow' in opts ? opts.preferBelow : null;
      let excludeFromSemantics = opts && 'excludeFromSemantics' in opts ? opts.excludeFromSemantics : null;
      let decoration = opts && 'decoration' in opts ? opts.decoration : null;
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let textAlign = opts && 'textAlign' in opts ? opts.textAlign : null;
      let waitDuration = opts && 'waitDuration' in opts ? opts.waitDuration : null;
      let showDuration = opts && 'showDuration' in opts ? opts.showDuration : null;
      let triggerMode = opts && 'triggerMode' in opts ? opts.triggerMode : null;
      let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
      let onTriggered = opts && 'onTriggered' in opts ? opts.onTriggered : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new tooltip.Tooltip.new({key: key, message: message, richMessage: richMessage, height: height, padding: padding, margin: margin, verticalOffset: verticalOffset, preferBelow: preferBelow, excludeFromSemantics: excludeFromSemantics, decoration: decoration, textStyle: textStyle, textAlign: textAlign, waitDuration: waitDuration, showDuration: showDuration, triggerMode: triggerMode, enableFeedback: enableFeedback, onTriggered: onTriggered, child: child, $creationLocationd_0dea112b090073317d4: C[670] || CT.C670});
    }
    static _concealOtherTooltips(current) {
      if (tooltip.Tooltip._openedTooltips[S.$isNotEmpty]) {
        let openedTooltips = tooltip.Tooltip._openedTooltips[S.$toList]();
        for (let state of openedTooltips) {
          if (state[S.$_equals](current)) {
            continue;
          }
          state[S$0._concealTooltip]();
        }
      }
    }
    static _revealLastTooltip() {
      if (tooltip.Tooltip._openedTooltips[S.$isNotEmpty]) {
        tooltip.Tooltip._openedTooltips[S$0.$last][S$0._revealTooltip]();
      }
    }
    static dismissAllToolTips() {
      if (tooltip.Tooltip._openedTooltips[S.$isNotEmpty]) {
        let openedTooltips = tooltip.Tooltip._openedTooltips[S.$toList]();
        for (let state of openedTooltips) {
          state[S$0._dismissTooltip]({immediately: true});
        }
        return true;
      }
      return false;
    }
    createState() {
      return new tooltip.TooltipState.new();
    }
    debugFillProperties(properties) {
      let t57;
      super.debugFillProperties(properties);
      properties.add(new diagnostics.StringProperty.new("message", this.message, {showName: this.message == null, defaultValue: this.message == null ? null : diagnostics.kNoDefaultValue}));
      properties.add(new diagnostics.StringProperty.new("richMessage", (t57 = this.richMessage, t57 == null ? null : t57.toPlainText()), {showName: this.richMessage == null, defaultValue: this.richMessage == null ? null : diagnostics.kNoDefaultValue}));
      properties.add(new diagnostics.DoubleProperty.new("height", this.height, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfEdgeInsetsGeometry()).new("padding", this.padding, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfEdgeInsetsGeometry()).new("margin", this.margin, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("vertical offset", this.verticalOffset, {defaultValue: null}));
      properties.add(new diagnostics.FlagProperty.new("position", {value: this.preferBelow, ifTrue: "below", ifFalse: "above", showName: true}));
      properties.add(new diagnostics.FlagProperty.new("semantics", {value: this.excludeFromSemantics, ifTrue: "excluded", showName: true}));
      properties.add(new (T$.DiagnosticsPropertyOfDuration()).new("wait duration", this.waitDuration, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfDuration()).new("show duration", this.showDuration, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfTooltipTriggerMode()).new("triggerMode", this.triggerMode, {defaultValue: null}));
      properties.add(new diagnostics.FlagProperty.new("enableFeedback", {value: this.enableFeedback, ifTrue: "true", showName: true}));
      properties.add(new (T$.DiagnosticsPropertyOfTextAlign()).new("textAlign", this.textAlign, {defaultValue: null}));
    }
  };
  (tooltip.Tooltip.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let message = opts && 'message' in opts ? opts.message : null;
    let richMessage = opts && 'richMessage' in opts ? opts.richMessage : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let margin = opts && 'margin' in opts ? opts.margin : null;
    let verticalOffset = opts && 'verticalOffset' in opts ? opts.verticalOffset : null;
    let preferBelow = opts && 'preferBelow' in opts ? opts.preferBelow : null;
    let excludeFromSemantics = opts && 'excludeFromSemantics' in opts ? opts.excludeFromSemantics : null;
    let decoration = opts && 'decoration' in opts ? opts.decoration : null;
    let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
    let textAlign = opts && 'textAlign' in opts ? opts.textAlign : null;
    let waitDuration = opts && 'waitDuration' in opts ? opts.waitDuration : null;
    let showDuration = opts && 'showDuration' in opts ? opts.showDuration : null;
    let triggerMode = opts && 'triggerMode' in opts ? opts.triggerMode : null;
    let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
    let onTriggered = opts && 'onTriggered' in opts ? opts.onTriggered : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$0.message$1] = message;
    this[S$0.richMessage] = richMessage;
    this[S$0.height$7] = height;
    this[S$0.padding$9] = padding;
    this[S$0.margin$3] = margin;
    this[S$0.verticalOffset$1] = verticalOffset;
    this[S$0.preferBelow$1] = preferBelow;
    this[S$0.excludeFromSemantics$1] = excludeFromSemantics;
    this[S$0.decoration$4] = decoration;
    this[S$0.textStyle$5] = textStyle;
    this[S$0.textAlign$3] = textAlign;
    this[S$0.waitDuration$1] = waitDuration;
    this[S$0.showDuration$1] = showDuration;
    this[S$0.triggerMode$1] = triggerMode;
    this[S$0.enableFeedback$8] = enableFeedback;
    this[S$0.onTriggered] = onTriggered;
    this[S$0.child$19] = child;
    if (!(message == null !== (richMessage == null))) dart.assertFailed("Either `message` or `richMessage` must be specified", I[93], 116, 16, "(message == null) != (richMessage == null)");
    if (!(richMessage == null || textStyle == null)) dart.assertFailed("If `richMessage` is specified, `textStyle` will have no effect. " + "If you wish to provide a `textStyle` for a rich tooltip, add the " + "`textStyle` directly to the `richMessage` InlineSpan.", I[93], 118, 11, "richMessage == null || textStyle == null");
    tooltip.Tooltip.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = tooltip.Tooltip.prototype;
  dart.addTypeTests(tooltip.Tooltip);
  dart.addTypeCaches(tooltip.Tooltip);
  dart.setMethodSignature(tooltip.Tooltip, () => ({
    __proto__: dart.getMethods(tooltip.Tooltip.__proto__),
    createState: dart.fnType(framework.State$(tooltip.Tooltip), [])
  }));
  dart.setStaticMethodSignature(tooltip.Tooltip, () => ['_concealOtherTooltips', '_revealLastTooltip', 'dismissAllToolTips']);
  dart.setLibraryUri(tooltip.Tooltip, I[94]);
  dart.setFieldSignature(tooltip.Tooltip, () => ({
    __proto__: dart.getFields(tooltip.Tooltip.__proto__),
    message: dart.finalFieldType(dart.nullable(core.String)),
    richMessage: dart.finalFieldType(dart.nullable(inline_span.InlineSpan)),
    height: dart.finalFieldType(dart.nullable(core.double)),
    padding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    margin: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    verticalOffset: dart.finalFieldType(dart.nullable(core.double)),
    preferBelow: dart.finalFieldType(dart.nullable(core.bool)),
    excludeFromSemantics: dart.finalFieldType(dart.nullable(core.bool)),
    child: dart.finalFieldType(dart.nullable(framework.Widget)),
    decoration: dart.finalFieldType(dart.nullable(decoration.Decoration)),
    textStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    textAlign: dart.finalFieldType(dart.nullable(ui.TextAlign)),
    waitDuration: dart.finalFieldType(dart.nullable(core.Duration)),
    showDuration: dart.finalFieldType(dart.nullable(core.Duration)),
    triggerMode: dart.finalFieldType(dart.nullable(tooltip_theme.TooltipTriggerMode)),
    enableFeedback: dart.finalFieldType(dart.nullable(core.bool)),
    onTriggered: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [])))
  }));
  dart.setStaticFieldSignature(tooltip.Tooltip, () => ['_openedTooltips']);
  dart.defineLazy(tooltip.Tooltip, {
    /*tooltip.Tooltip._openedTooltips*/get _openedTooltips() {
      return T$.JSArrayOfTooltipState().of([]);
    }
  }, false);
  const State_SingleTickerProviderStateMixin$36$0 = class State_SingleTickerProviderStateMixin extends framework.State$(tooltip.Tooltip) {};
  (State_SingleTickerProviderStateMixin$36$0.new = function() {
    ticker_provider.SingleTickerProviderStateMixin$(tooltip.Tooltip)[dart.mixinNew].call(this);
    State_SingleTickerProviderStateMixin$36$0.__proto__.new.call(this);
  }).prototype = State_SingleTickerProviderStateMixin$36$0.prototype;
  dart.applyMixin(State_SingleTickerProviderStateMixin$36$0, ticker_provider.SingleTickerProviderStateMixin$(tooltip.Tooltip));
  tooltip.TooltipState = class TooltipState extends State_SingleTickerProviderStateMixin$36$0 {
    get [S$0._height$1]() {
      let t57;
      t57 = this[S$0.__TooltipState__height];
      return t57 == null ? dart.throw(new _internal.LateError.fieldNI("_height")) : t57;
    }
    set [S$0._height$1](library$32package$58flutter$47src$47material$47tooltip$46dart$58$58_height$35param) {
      this[S$0.__TooltipState__height] = library$32package$58flutter$47src$47material$47tooltip$46dart$58$58_height$35param;
    }
    get [S$0._padding$2]() {
      let t57;
      t57 = this[S$0.__TooltipState__padding];
      return t57 == null ? dart.throw(new _internal.LateError.fieldNI("_padding")) : t57;
    }
    set [S$0._padding$2](library$32package$58flutter$47src$47material$47tooltip$46dart$58$58_padding$35param) {
      this[S$0.__TooltipState__padding] = library$32package$58flutter$47src$47material$47tooltip$46dart$58$58_padding$35param;
    }
    get [S$0._margin]() {
      let t57;
      t57 = this[S$0.__TooltipState__margin];
      return t57 == null ? dart.throw(new _internal.LateError.fieldNI("_margin")) : t57;
    }
    set [S$0._margin](library$32package$58flutter$47src$47material$47tooltip$46dart$58$58_margin$35param) {
      this[S$0.__TooltipState__margin] = library$32package$58flutter$47src$47material$47tooltip$46dart$58$58_margin$35param;
    }
    get [S$0._decoration$1]() {
      let t57;
      t57 = this[S$0.__TooltipState__decoration];
      return t57 == null ? dart.throw(new _internal.LateError.fieldNI("_decoration")) : t57;
    }
    set [S$0._decoration$1](library$32package$58flutter$47src$47material$47tooltip$46dart$58$58_decoration$35param) {
      this[S$0.__TooltipState__decoration] = library$32package$58flutter$47src$47material$47tooltip$46dart$58$58_decoration$35param;
    }
    get [S$0._textStyle]() {
      let t57;
      t57 = this[S$0.__TooltipState__textStyle];
      return t57 == null ? dart.throw(new _internal.LateError.fieldNI("_textStyle")) : t57;
    }
    set [S$0._textStyle](library$32package$58flutter$47src$47material$47tooltip$46dart$58$58_textStyle$35param) {
      this[S$0.__TooltipState__textStyle] = library$32package$58flutter$47src$47material$47tooltip$46dart$58$58_textStyle$35param;
    }
    get [S$0._textAlign]() {
      let t57;
      t57 = this[S$0.__TooltipState__textAlign];
      return t57 == null ? dart.throw(new _internal.LateError.fieldNI("_textAlign")) : t57;
    }
    set [S$0._textAlign](library$32package$58flutter$47src$47material$47tooltip$46dart$58$58_textAlign$35param) {
      this[S$0.__TooltipState__textAlign] = library$32package$58flutter$47src$47material$47tooltip$46dart$58$58_textAlign$35param;
    }
    get [S$0._verticalOffset]() {
      let t57;
      t57 = this[S$0.__TooltipState__verticalOffset];
      return t57 == null ? dart.throw(new _internal.LateError.fieldNI("_verticalOffset")) : t57;
    }
    set [S$0._verticalOffset](library$32package$58flutter$47src$47material$47tooltip$46dart$58$58_verticalOffset$35param) {
      this[S$0.__TooltipState__verticalOffset] = library$32package$58flutter$47src$47material$47tooltip$46dart$58$58_verticalOffset$35param;
    }
    get [S$0._preferBelow]() {
      let t57;
      t57 = this[S$0.__TooltipState__preferBelow];
      return t57 == null ? dart.throw(new _internal.LateError.fieldNI("_preferBelow")) : t57;
    }
    set [S$0._preferBelow](library$32package$58flutter$47src$47material$47tooltip$46dart$58$58_preferBelow$35param) {
      this[S$0.__TooltipState__preferBelow] = library$32package$58flutter$47src$47material$47tooltip$46dart$58$58_preferBelow$35param;
    }
    get [S$0._excludeFromSemantics]() {
      let t57;
      t57 = this[S$0.__TooltipState__excludeFromSemantics];
      return t57 == null ? dart.throw(new _internal.LateError.fieldNI("_excludeFromSemantics")) : t57;
    }
    set [S$0._excludeFromSemantics](library$32package$58flutter$47src$47material$47tooltip$46dart$58$58_excludeFromSemantics$35param) {
      this[S$0.__TooltipState__excludeFromSemantics] = library$32package$58flutter$47src$47material$47tooltip$46dart$58$58_excludeFromSemantics$35param;
    }
    get [S$0._controller$4]() {
      let t57;
      t57 = this[S$0.__TooltipState__controller];
      return t57 == null ? dart.throw(new _internal.LateError.fieldNI("_controller")) : t57;
    }
    set [S$0._controller$4](library$32package$58flutter$47src$47material$47tooltip$46dart$58$58_controller$35param) {
      this[S$0.__TooltipState__controller] = library$32package$58flutter$47src$47material$47tooltip$46dart$58$58_controller$35param;
    }
    get [S$0._showDuration]() {
      let t57;
      t57 = this[S$0.__TooltipState__showDuration];
      return t57 == null ? dart.throw(new _internal.LateError.fieldNI("_showDuration")) : t57;
    }
    set [S$0._showDuration](library$32package$58flutter$47src$47material$47tooltip$46dart$58$58_showDuration$35param) {
      this[S$0.__TooltipState__showDuration] = library$32package$58flutter$47src$47material$47tooltip$46dart$58$58_showDuration$35param;
    }
    get [S$0._hoverShowDuration]() {
      let t57;
      t57 = this[S$0.__TooltipState__hoverShowDuration];
      return t57 == null ? dart.throw(new _internal.LateError.fieldNI("_hoverShowDuration")) : t57;
    }
    set [S$0._hoverShowDuration](library$32package$58flutter$47src$47material$47tooltip$46dart$58$58_hoverShowDuration$35param) {
      this[S$0.__TooltipState__hoverShowDuration] = library$32package$58flutter$47src$47material$47tooltip$46dart$58$58_hoverShowDuration$35param;
    }
    get [S$0._waitDuration]() {
      let t57;
      t57 = this[S$0.__TooltipState__waitDuration];
      return t57 == null ? dart.throw(new _internal.LateError.fieldNI("_waitDuration")) : t57;
    }
    set [S$0._waitDuration](library$32package$58flutter$47src$47material$47tooltip$46dart$58$58_waitDuration$35param) {
      this[S$0.__TooltipState__waitDuration] = library$32package$58flutter$47src$47material$47tooltip$46dart$58$58_waitDuration$35param;
    }
    get [S$0._mouseIsConnected]() {
      let t57;
      t57 = this[S$0.__TooltipState__mouseIsConnected];
      return t57 == null ? dart.throw(new _internal.LateError.fieldNI("_mouseIsConnected")) : t57;
    }
    set [S$0._mouseIsConnected](library$32package$58flutter$47src$47material$47tooltip$46dart$58$58_mouseIsConnected$35param) {
      this[S$0.__TooltipState__mouseIsConnected] = library$32package$58flutter$47src$47material$47tooltip$46dart$58$58_mouseIsConnected$35param;
    }
    get [S$0._triggerMode]() {
      let t57;
      t57 = this[S$0.__TooltipState__triggerMode];
      return t57 == null ? dart.throw(new _internal.LateError.fieldNI("_triggerMode")) : t57;
    }
    set [S$0._triggerMode](library$32package$58flutter$47src$47material$47tooltip$46dart$58$58_triggerMode$35param) {
      this[S$0.__TooltipState__triggerMode] = library$32package$58flutter$47src$47material$47tooltip$46dart$58$58_triggerMode$35param;
    }
    get [S$0._enableFeedback]() {
      let t57;
      t57 = this[S$0.__TooltipState__enableFeedback];
      return t57 == null ? dart.throw(new _internal.LateError.fieldNI("_enableFeedback")) : t57;
    }
    set [S$0._enableFeedback](library$32package$58flutter$47src$47material$47tooltip$46dart$58$58_enableFeedback$35param) {
      this[S$0.__TooltipState__enableFeedback] = library$32package$58flutter$47src$47material$47tooltip$46dart$58$58_enableFeedback$35param;
    }
    get [S$0._isConcealed]() {
      let t57;
      t57 = this[S$0.__TooltipState__isConcealed];
      return t57 == null ? dart.throw(new _internal.LateError.fieldNI("_isConcealed")) : t57;
    }
    set [S$0._isConcealed](library$32package$58flutter$47src$47material$47tooltip$46dart$58$58_isConcealed$35param) {
      this[S$0.__TooltipState__isConcealed] = library$32package$58flutter$47src$47material$47tooltip$46dart$58$58_isConcealed$35param;
    }
    get [S$0._forceRemoval]() {
      let t57;
      t57 = this[S$0.__TooltipState__forceRemoval];
      return t57 == null ? dart.throw(new _internal.LateError.fieldNI("_forceRemoval")) : t57;
    }
    set [S$0._forceRemoval](library$32package$58flutter$47src$47material$47tooltip$46dart$58$58_forceRemoval$35param) {
      this[S$0.__TooltipState__forceRemoval] = library$32package$58flutter$47src$47material$47tooltip$46dart$58$58_forceRemoval$35param;
    }
    get [S$0._visible]() {
      let t57;
      t57 = this[S$0.__TooltipState__visible];
      return t57 == null ? dart.throw(new _internal.LateError.fieldNI("_visible")) : t57;
    }
    set [S$0._visible](library$32package$58flutter$47src$47material$47tooltip$46dart$58$58_visible$35param) {
      this[S$0.__TooltipState__visible] = library$32package$58flutter$47src$47material$47tooltip$46dart$58$58_visible$35param;
    }
    get [S$0._tooltipMessage]() {
      let t57;
      t57 = this.widget.message;
      return t57 == null ? dart.nullCheck(this.widget.richMessage).toPlainText() : t57;
    }
    initState() {
      let t57;
      super.initState();
      this[S$0._isConcealed] = false;
      this[S$0._forceRemoval] = false;
      this[S$0._mouseIsConnected] = binding$.RendererBinding.instance.mouseTracker.mouseIsConnected;
      this[S$0._controller$4] = (t57 = new animation_controller.AnimationController.new({duration: tooltip.TooltipState._fadeInDuration, reverseDuration: tooltip.TooltipState._fadeOutDuration, vsync: this}), (() => {
        t57.addStatusListener(dart.bind(this, S$0._handleStatusChanged$1));
        return t57;
      })());
      binding$.RendererBinding.instance.mouseTracker.addListener(dart.bind(this, S$0._handleMouseTrackerChange));
      binding$0.GestureBinding.instance.pointerRouter.addGlobalRoute(dart.bind(this, S$0._handlePointerEvent));
    }
    didChangeDependencies() {
      super.didChangeDependencies();
      this[S$0._visible] = tooltip_visibility.TooltipVisibility.of(this.context);
    }
    [S$0._getDefaultTooltipHeight]() {
      let theme = theme$.Theme.of(this.context);
      switch (theme.platform) {
        case C[34] || CT.C34:
        case C[31] || CT.C31:
        case C[32] || CT.C32:
          {
            return 24.0;
          }
        case C[29] || CT.C29:
        case C[30] || CT.C30:
        case C[33] || CT.C33:
          {
            return 32.0;
          }
      }
    }
    [S$0._getDefaultPadding]() {
      let theme = theme$.Theme.of(this.context);
      switch (theme.platform) {
        case C[34] || CT.C34:
        case C[31] || CT.C31:
        case C[32] || CT.C32:
          {
            return C[671] || CT.C671;
          }
        case C[29] || CT.C29:
        case C[30] || CT.C30:
        case C[33] || CT.C33:
          {
            return C[672] || CT.C672;
          }
      }
    }
    [S$0._getDefaultFontSize]() {
      let theme = theme$.Theme.of(this.context);
      switch (theme.platform) {
        case C[34] || CT.C34:
        case C[31] || CT.C31:
        case C[32] || CT.C32:
          {
            return 12.0;
          }
        case C[29] || CT.C29:
        case C[30] || CT.C30:
        case C[33] || CT.C33:
          {
            return 14.0;
          }
      }
    }
    [S$0._handleMouseTrackerChange]() {
      if (!this.mounted) {
        return;
      }
      let mouseIsConnected = binding$.RendererBinding.instance.mouseTracker.mouseIsConnected;
      if (mouseIsConnected !== this[S$0._mouseIsConnected]) {
        this.setState(dart.fn(() => {
          this[S$0._mouseIsConnected] = mouseIsConnected;
        }, T$.VoidTovoid()));
      }
    }
    [S$0._handleStatusChanged$1](status) {
      if (status === animation$.AnimationStatus.dismissed && (this[S$0._forceRemoval] || !this[S$0._isConcealed])) {
        this[S$0._removeEntry]();
      }
    }
    [S$0._dismissTooltip](opts) {
      let t57;
      let immediately = opts && 'immediately' in opts ? opts.immediately : false;
      t57 = this[S$0._showTimer];
      t57 == null ? null : t57.cancel();
      this[S$0._showTimer] = null;
      if (immediately) {
        this[S$0._removeEntry]();
        return;
      }
      this[S$0._forceRemoval] = true;
      if (this[S$0._pressActivated]) {
        this[S$0._dismissTimer] == null ? this[S$0._dismissTimer] = async.Timer.new(this[S$0._showDuration], dart.bind(this[S$0._controller$4], 'reverse')) : null;
      } else {
        this[S$0._dismissTimer] == null ? this[S$0._dismissTimer] = async.Timer.new(this[S$0._hoverShowDuration], dart.bind(this[S$0._controller$4], 'reverse')) : null;
      }
      this[S$0._pressActivated] = false;
    }
    [S$0._showTooltip](opts) {
      let t57;
      let immediately = opts && 'immediately' in opts ? opts.immediately : false;
      t57 = this[S$0._dismissTimer];
      t57 == null ? null : t57.cancel();
      this[S$0._dismissTimer] = null;
      if (immediately) {
        this.ensureTooltipVisible();
        return;
      }
      this[S$0._showTimer] == null ? this[S$0._showTimer] = async.Timer.new(this[S$0._waitDuration], dart.bind(this, 'ensureTooltipVisible')) : null;
    }
    [S$0._concealTooltip]() {
      let t57, t57$;
      if (this[S$0._isConcealed] || this[S$0._forceRemoval]) {
        return;
      }
      this[S$0._isConcealed] = true;
      t57 = this[S$0._dismissTimer];
      t57 == null ? null : t57.cancel();
      this[S$0._dismissTimer] = null;
      t57$ = this[S$0._showTimer];
      t57$ == null ? null : t57$.cancel();
      this[S$0._showTimer] = null;
      if (this[S$0._entry] != null) {
        dart.nullCheck(this[S$0._entry]).remove();
      }
      this[S$0._controller$4].reverse();
    }
    [S$0._revealTooltip]() {
      let t57, t57$;
      if (!this[S$0._isConcealed]) {
        return;
      }
      this[S$0._isConcealed] = false;
      t57 = this[S$0._dismissTimer];
      t57 == null ? null : t57.cancel();
      this[S$0._dismissTimer] = null;
      t57$ = this[S$0._showTimer];
      t57$ == null ? null : t57$.cancel();
      this[S$0._showTimer] = null;
      if (!dart.nullCheck(this[S$0._entry]).mounted) {
        let overlayState = dart.nullCheck(overlay$.Overlay.of(this.context, {debugRequiredFor: this.widget}));
        overlayState.insert(dart.nullCheck(this[S$0._entry]));
      }
      semantics_service.SemanticsService.tooltip(this[S$0._tooltipMessage]);
      this[S$0._controller$4].forward();
    }
    ensureTooltipVisible() {
      let t57, t57$;
      if (!this[S$0._visible] || !this.mounted) {
        return false;
      }
      t57 = this[S$0._showTimer];
      t57 == null ? null : t57.cancel();
      this[S$0._showTimer] = null;
      this[S$0._forceRemoval] = false;
      if (this[S$0._isConcealed]) {
        if (this[S$0._mouseIsConnected]) {
          tooltip.Tooltip._concealOtherTooltips(this);
        }
        this[S$0._revealTooltip]();
        return true;
      }
      if (this[S$0._entry] != null) {
        t57$ = this[S$0._dismissTimer];
        t57$ == null ? null : t57$.cancel();
        this[S$0._dismissTimer] = null;
        this[S$0._controller$4].forward();
        return false;
      }
      this[S$0._createNewEntry]();
      this[S$0._controller$4].forward();
      return true;
    }
    [S$0._handleMouseEnter]() {
      if (this.mounted) {
        this[S$0._showTooltip]();
      }
    }
    [S$0._handleMouseExit](opts) {
      let immediately = opts && 'immediately' in opts ? opts.immediately : false;
      if (this.mounted) {
        this[S$0._dismissTooltip]({immediately: this[S$0._isConcealed] || immediately});
      }
    }
    [S$0._createNewEntry]() {
      let t57;
      let overlayState = dart.nullCheck(overlay$.Overlay.of(this.context, {debugRequiredFor: this.widget}));
      let box = box$.RenderBox.as(dart.nullCheck(this.context.findRenderObject()));
      let target = box.localToGlobal(box.size.center(ui.Offset.zero), {ancestor: overlayState.context.findRenderObject()});
      let overlay = new basic.Directionality.new({textDirection: basic.Directionality.of(this.context), child: new tooltip._TooltipOverlay.new({richMessage: (t57 = this.widget.richMessage, t57 == null ? new text_span.TextSpan.new({text: this.widget.message}) : t57), height: this[S$0._height$1], padding: this[S$0._padding$2], margin: this[S$0._margin], onEnter: this[S$0._mouseIsConnected] ? dart.fn(_ => this[S$0._handleMouseEnter](), T$.PointerEnterEventTovoid()) : null, onExit: this[S$0._mouseIsConnected] ? dart.fn(_ => this[S$0._handleMouseExit](), T$.PointerExitEventTovoid()) : null, decoration: this[S$0._decoration$1], textStyle: this[S$0._textStyle], textAlign: this[S$0._textAlign], animation: new animations.CurvedAnimation.new({parent: this[S$0._controller$4], curve: curves.Curves.fastOutSlowIn}), target: target, verticalOffset: this[S$0._verticalOffset], preferBelow: this[S$0._preferBelow], $creationLocationd_0dea112b090073317d4: C[673] || CT.C673}), $creationLocationd_0dea112b090073317d4: C[674] || CT.C674});
      this[S$0._entry] = new overlay$.OverlayEntry.new({builder: dart.fn(context => overlay, T$.BuildContextToWidget())});
      this[S$0._isConcealed] = false;
      overlayState.insert(dart.nullCheck(this[S$0._entry]));
      semantics_service.SemanticsService.tooltip(this[S$0._tooltipMessage]);
      if (this[S$0._mouseIsConnected]) {
        tooltip.Tooltip._concealOtherTooltips(this);
      }
      if (!!tooltip.Tooltip._openedTooltips[S.$contains](this)) dart.assertFailed(null, I[93], 618, 12, "!Tooltip._openedTooltips.contains(this)");
      tooltip.Tooltip._openedTooltips[S.$add](this);
    }
    [S$0._removeEntry]() {
      let t57, t57$, t57$0;
      tooltip.Tooltip._openedTooltips[S$0.$remove](this);
      tooltip.TooltipState._mouseIn.remove(this);
      t57 = this[S$0._dismissTimer];
      t57 == null ? null : t57.cancel();
      this[S$0._dismissTimer] = null;
      t57$ = this[S$0._showTimer];
      t57$ == null ? null : t57$.cancel();
      this[S$0._showTimer] = null;
      if (!this[S$0._isConcealed]) {
        t57$0 = this[S$0._entry];
        t57$0 == null ? null : t57$0.remove();
      }
      this[S$0._isConcealed] = false;
      this[S$0._entry] = null;
      if (this[S$0._mouseIsConnected]) {
        tooltip.Tooltip._revealLastTooltip();
      }
    }
    [S$0._handlePointerEvent](event) {
      if (this[S$0._entry] == null) {
        return;
      }
      if (events.PointerUpEvent.is(event) || events.PointerCancelEvent.is(event)) {
        this[S$0._handleMouseExit]();
      } else if (events.PointerDownEvent.is(event)) {
        this[S$0._handleMouseExit]({immediately: true});
      }
    }
    deactivate() {
      let t57;
      if (this[S$0._entry] != null) {
        this[S$0._dismissTooltip]({immediately: true});
      }
      t57 = this[S$0._showTimer];
      t57 == null ? null : t57.cancel();
      super.deactivate();
    }
    dispose() {
      binding$0.GestureBinding.instance.pointerRouter.removeGlobalRoute(dart.bind(this, S$0._handlePointerEvent));
      binding$.RendererBinding.instance.mouseTracker.removeListener(dart.bind(this, S$0._handleMouseTrackerChange));
      this[S$0._removeEntry]();
      this[S$0._controller$4].dispose();
      super.dispose();
    }
    [S$0._handlePress]() {
      let t57;
      this[S$0._pressActivated] = true;
      let tooltipCreated = this.ensureTooltipVisible();
      if (tooltipCreated && this[S$0._enableFeedback]) {
        if (this[S$0._triggerMode] === tooltip_theme.TooltipTriggerMode.longPress) {
          feedback.Feedback.forLongPress(this.context);
        } else {
          feedback.Feedback.forTap(this.context);
        }
      }
      t57 = this.widget.onTriggered;
      t57 == null ? null : t57();
    }
    [S$0._handleTap$2]() {
      this[S$0._handlePress]();
      this[S$0._handleMouseExit]();
    }
    build(context) {
      let t57, t57$, t57$0, t57$1, t57$2, t57$3, t57$4, t57$5, t57$6, t57$7, t57$8, t57$9, t57$10, t57$11, t57$12, t57$13, t57$14, t57$15, t57$16, t57$17, t57$18, t57$19, t57$20, t57$21, t57$22, t57$23, t57$24, t57$25, t57$26;
      if (this[S$0._tooltipMessage][S$0.$isEmpty]) {
        t57 = this.widget.child;
        return t57 == null ? C[675] || CT.C675 : t57;
      }
      if (!(overlay$.Overlay.of(context, {debugRequiredFor: this.widget}) != null)) dart.assertFailed(null, I[93], 701, 12, "Overlay.of(context, debugRequiredFor: widget) != null");
      let theme = theme$.Theme.of(context);
      let tooltipTheme = tooltip_theme.TooltipTheme.of(context);
      let defaultTextStyle = null;
      let defaultDecoration = null;
      if (theme.brightness === ui.Brightness.dark) {
        defaultTextStyle = dart.nullCheck(theme.textTheme.bodyText2).copyWith({color: colors$.Colors.black, fontSize: this[S$0._getDefaultFontSize]()});
        defaultDecoration = new box_decoration.BoxDecoration.new({color: colors$.Colors.white.withOpacity(0.9), borderRadius: C[76] || CT.C76});
      } else {
        defaultTextStyle = dart.nullCheck(theme.textTheme.bodyText2).copyWith({color: colors$.Colors.white, fontSize: this[S$0._getDefaultFontSize]()});
        defaultDecoration = new box_decoration.BoxDecoration.new({color: dart.nullCheck(colors$.Colors.grey._get(700)).withOpacity(0.9), borderRadius: C[76] || CT.C76});
      }
      this[S$0._height$1] = (t57$0 = (t57$ = this.widget.height, t57$ == null ? tooltipTheme.height : t57$), t57$0 == null ? this[S$0._getDefaultTooltipHeight]() : t57$0);
      this[S$0._padding$2] = (t57$2 = (t57$1 = this.widget.padding, t57$1 == null ? tooltipTheme.padding : t57$1), t57$2 == null ? this[S$0._getDefaultPadding]() : t57$2);
      this[S$0._margin] = (t57$4 = (t57$3 = this.widget.margin, t57$3 == null ? tooltipTheme.margin : t57$3), t57$4 == null ? tooltip.TooltipState._defaultMargin : t57$4);
      this[S$0._verticalOffset] = (t57$6 = (t57$5 = this.widget.verticalOffset, t57$5 == null ? tooltipTheme.verticalOffset : t57$5), t57$6 == null ? 24 : t57$6);
      this[S$0._preferBelow] = (t57$8 = (t57$7 = this.widget.preferBelow, t57$7 == null ? tooltipTheme.preferBelow : t57$7), t57$8 == null ? true : t57$8);
      this[S$0._excludeFromSemantics] = (t57$10 = (t57$9 = this.widget.excludeFromSemantics, t57$9 == null ? tooltipTheme.excludeFromSemantics : t57$9), t57$10 == null ? false : t57$10);
      this[S$0._decoration$1] = (t57$12 = (t57$11 = this.widget.decoration, t57$11 == null ? tooltipTheme.decoration : t57$11), t57$12 == null ? defaultDecoration : t57$12);
      this[S$0._textStyle] = (t57$14 = (t57$13 = this.widget.textStyle, t57$13 == null ? tooltipTheme.textStyle : t57$13), t57$14 == null ? defaultTextStyle : t57$14);
      this[S$0._textAlign] = (t57$16 = (t57$15 = this.widget.textAlign, t57$15 == null ? tooltipTheme.textAlign : t57$15), t57$16 == null ? tooltip.TooltipState._defaultTextAlign : t57$16);
      this[S$0._waitDuration] = (t57$18 = (t57$17 = this.widget.waitDuration, t57$17 == null ? tooltipTheme.waitDuration : t57$17), t57$18 == null ? tooltip.TooltipState._defaultWaitDuration : t57$18);
      this[S$0._showDuration] = (t57$20 = (t57$19 = this.widget.showDuration, t57$19 == null ? tooltipTheme.showDuration : t57$19), t57$20 == null ? tooltip.TooltipState._defaultShowDuration : t57$20);
      this[S$0._hoverShowDuration] = (t57$22 = (t57$21 = this.widget.showDuration, t57$21 == null ? tooltipTheme.showDuration : t57$21), t57$22 == null ? tooltip.TooltipState._defaultHoverShowDuration : t57$22);
      this[S$0._triggerMode] = (t57$24 = (t57$23 = this.widget.triggerMode, t57$23 == null ? tooltipTheme.triggerMode : t57$23), t57$24 == null ? tooltip.TooltipState._defaultTriggerMode : t57$24);
      this[S$0._enableFeedback] = (t57$26 = (t57$25 = this.widget.enableFeedback, t57$25 == null ? tooltipTheme.enableFeedback : t57$25), t57$26 == null ? true : t57$26);
      let result = new basic.Semantics.new({tooltip: this[S$0._excludeFromSemantics] ? null : this[S$0._tooltipMessage], child: this.widget.child, $creationLocationd_0dea112b090073317d4: C[677] || CT.C677});
      if (this[S$0._visible]) {
        result = new gesture_detector.GestureDetector.new({behavior: proxy_box.HitTestBehavior.opaque, onLongPress: this[S$0._triggerMode] === tooltip_theme.TooltipTriggerMode.longPress ? dart.bind(this, S$0._handlePress) : null, onTap: this[S$0._triggerMode] === tooltip_theme.TooltipTriggerMode.tap ? dart.bind(this, S$0._handleTap$2) : null, excludeFromSemantics: true, child: result, $creationLocationd_0dea112b090073317d4: C[678] || CT.C678});
        if (this[S$0._mouseIsConnected]) {
          result = new basic.MouseRegion.new({onEnter: dart.fn(_ => this[S$0._handleMouseEnter](), T$.PointerEnterEventTovoid()), onExit: dart.fn(_ => this[S$0._handleMouseExit](), T$.PointerExitEventTovoid()), child: result, $creationLocationd_0dea112b090073317d4: C[679] || CT.C679});
        }
      }
      return result;
    }
    static ['_#new#tearOff']() {
      return new tooltip.TooltipState.new();
    }
  };
  (tooltip.TooltipState.new = function() {
    this[S$0.__TooltipState__height] = null;
    this[S$0.__TooltipState__padding] = null;
    this[S$0.__TooltipState__margin] = null;
    this[S$0.__TooltipState__decoration] = null;
    this[S$0.__TooltipState__textStyle] = null;
    this[S$0.__TooltipState__textAlign] = null;
    this[S$0.__TooltipState__verticalOffset] = null;
    this[S$0.__TooltipState__preferBelow] = null;
    this[S$0.__TooltipState__excludeFromSemantics] = null;
    this[S$0.__TooltipState__controller] = null;
    this[S$0._entry] = null;
    this[S$0._dismissTimer] = null;
    this[S$0._showTimer] = null;
    this[S$0.__TooltipState__showDuration] = null;
    this[S$0.__TooltipState__hoverShowDuration] = null;
    this[S$0.__TooltipState__waitDuration] = null;
    this[S$0.__TooltipState__mouseIsConnected] = null;
    this[S$0._pressActivated] = false;
    this[S$0.__TooltipState__triggerMode] = null;
    this[S$0.__TooltipState__enableFeedback] = null;
    this[S$0.__TooltipState__isConcealed] = null;
    this[S$0.__TooltipState__forceRemoval] = null;
    this[S$0.__TooltipState__visible] = null;
    tooltip.TooltipState.__proto__.new.call(this);
    ;
  }).prototype = tooltip.TooltipState.prototype;
  dart.addTypeTests(tooltip.TooltipState);
  dart.addTypeCaches(tooltip.TooltipState);
  dart.setMethodSignature(tooltip.TooltipState, () => ({
    __proto__: dart.getMethods(tooltip.TooltipState.__proto__),
    [S$0._getDefaultTooltipHeight]: dart.fnType(core.double, []),
    [S$0._getDefaultPadding]: dart.fnType(edge_insets.EdgeInsets, []),
    [S$0._getDefaultFontSize]: dart.fnType(core.double, []),
    [S$0._handleMouseTrackerChange]: dart.fnType(dart.void, []),
    [S$0._handleStatusChanged$1]: dart.fnType(dart.void, [animation$.AnimationStatus]),
    [S$0._dismissTooltip]: dart.fnType(dart.void, [], {immediately: core.bool}, {}),
    [S$0._showTooltip]: dart.fnType(dart.void, [], {immediately: core.bool}, {}),
    [S$0._concealTooltip]: dart.fnType(dart.void, []),
    [S$0._revealTooltip]: dart.fnType(dart.void, []),
    ensureTooltipVisible: dart.fnType(core.bool, []),
    [S$0._handleMouseEnter]: dart.fnType(dart.void, []),
    [S$0._handleMouseExit]: dart.fnType(dart.void, [], {immediately: core.bool}, {}),
    [S$0._createNewEntry]: dart.fnType(dart.void, []),
    [S$0._removeEntry]: dart.fnType(dart.void, []),
    [S$0._handlePointerEvent]: dart.fnType(dart.void, [events.PointerEvent]),
    [S$0._handlePress]: dart.fnType(dart.void, []),
    [S$0._handleTap$2]: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(tooltip.TooltipState, () => ({
    __proto__: dart.getGetters(tooltip.TooltipState.__proto__),
    [S$0._height$1]: core.double,
    [S$0._padding$2]: edge_insets.EdgeInsetsGeometry,
    [S$0._margin]: edge_insets.EdgeInsetsGeometry,
    [S$0._decoration$1]: decoration.Decoration,
    [S$0._textStyle]: text_style.TextStyle,
    [S$0._textAlign]: ui.TextAlign,
    [S$0._verticalOffset]: core.double,
    [S$0._preferBelow]: core.bool,
    [S$0._excludeFromSemantics]: core.bool,
    [S$0._controller$4]: animation_controller.AnimationController,
    [S$0._showDuration]: core.Duration,
    [S$0._hoverShowDuration]: core.Duration,
    [S$0._waitDuration]: core.Duration,
    [S$0._mouseIsConnected]: core.bool,
    [S$0._triggerMode]: tooltip_theme.TooltipTriggerMode,
    [S$0._enableFeedback]: core.bool,
    [S$0._isConcealed]: core.bool,
    [S$0._forceRemoval]: core.bool,
    [S$0._visible]: core.bool,
    [S$0._tooltipMessage]: core.String
  }));
  dart.setSetterSignature(tooltip.TooltipState, () => ({
    __proto__: dart.getSetters(tooltip.TooltipState.__proto__),
    [S$0._height$1]: core.double,
    [S$0._padding$2]: edge_insets.EdgeInsetsGeometry,
    [S$0._margin]: edge_insets.EdgeInsetsGeometry,
    [S$0._decoration$1]: decoration.Decoration,
    [S$0._textStyle]: text_style.TextStyle,
    [S$0._textAlign]: ui.TextAlign,
    [S$0._verticalOffset]: core.double,
    [S$0._preferBelow]: core.bool,
    [S$0._excludeFromSemantics]: core.bool,
    [S$0._controller$4]: animation_controller.AnimationController,
    [S$0._showDuration]: core.Duration,
    [S$0._hoverShowDuration]: core.Duration,
    [S$0._waitDuration]: core.Duration,
    [S$0._mouseIsConnected]: core.bool,
    [S$0._triggerMode]: tooltip_theme.TooltipTriggerMode,
    [S$0._enableFeedback]: core.bool,
    [S$0._isConcealed]: core.bool,
    [S$0._forceRemoval]: core.bool,
    [S$0._visible]: core.bool
  }));
  dart.setLibraryUri(tooltip.TooltipState, I[94]);
  dart.setFieldSignature(tooltip.TooltipState, () => ({
    __proto__: dart.getFields(tooltip.TooltipState.__proto__),
    [S$0.__TooltipState__height]: dart.fieldType(dart.nullable(core.double)),
    [S$0.__TooltipState__padding]: dart.fieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    [S$0.__TooltipState__margin]: dart.fieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    [S$0.__TooltipState__decoration]: dart.fieldType(dart.nullable(decoration.Decoration)),
    [S$0.__TooltipState__textStyle]: dart.fieldType(dart.nullable(text_style.TextStyle)),
    [S$0.__TooltipState__textAlign]: dart.fieldType(dart.nullable(ui.TextAlign)),
    [S$0.__TooltipState__verticalOffset]: dart.fieldType(dart.nullable(core.double)),
    [S$0.__TooltipState__preferBelow]: dart.fieldType(dart.nullable(core.bool)),
    [S$0.__TooltipState__excludeFromSemantics]: dart.fieldType(dart.nullable(core.bool)),
    [S$0.__TooltipState__controller]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S$0._entry]: dart.fieldType(dart.nullable(overlay$.OverlayEntry)),
    [S$0._dismissTimer]: dart.fieldType(dart.nullable(async.Timer)),
    [S$0._showTimer]: dart.fieldType(dart.nullable(async.Timer)),
    [S$0.__TooltipState__showDuration]: dart.fieldType(dart.nullable(core.Duration)),
    [S$0.__TooltipState__hoverShowDuration]: dart.fieldType(dart.nullable(core.Duration)),
    [S$0.__TooltipState__waitDuration]: dart.fieldType(dart.nullable(core.Duration)),
    [S$0.__TooltipState__mouseIsConnected]: dart.fieldType(dart.nullable(core.bool)),
    [S$0._pressActivated]: dart.fieldType(core.bool),
    [S$0.__TooltipState__triggerMode]: dart.fieldType(dart.nullable(tooltip_theme.TooltipTriggerMode)),
    [S$0.__TooltipState__enableFeedback]: dart.fieldType(dart.nullable(core.bool)),
    [S$0.__TooltipState__isConcealed]: dart.fieldType(dart.nullable(core.bool)),
    [S$0.__TooltipState__forceRemoval]: dart.fieldType(dart.nullable(core.bool)),
    [S$0.__TooltipState__visible]: dart.fieldType(dart.nullable(core.bool))
  }));
  dart.setStaticFieldSignature(tooltip.TooltipState, () => ['_defaultVerticalOffset', '_defaultPreferBelow', '_defaultMargin', '_fadeInDuration', '_fadeOutDuration', '_defaultShowDuration', '_defaultHoverShowDuration', '_defaultWaitDuration', '_defaultExcludeFromSemantics', '_defaultTriggerMode', '_defaultEnableFeedback', '_defaultTextAlign', '_mouseIn']);
  dart.defineLazy(tooltip.TooltipState, {
    /*tooltip.TooltipState._defaultVerticalOffset*/get _defaultVerticalOffset() {
      return 24;
    },
    /*tooltip.TooltipState._defaultPreferBelow*/get _defaultPreferBelow() {
      return true;
    },
    /*tooltip.TooltipState._defaultMargin*/get _defaultMargin() {
      return C[253] || CT.C253;
    },
    /*tooltip.TooltipState._fadeInDuration*/get _fadeInDuration() {
      return C[680] || CT.C680;
    },
    /*tooltip.TooltipState._fadeOutDuration*/get _fadeOutDuration() {
      return C[592] || CT.C592;
    },
    /*tooltip.TooltipState._defaultShowDuration*/get _defaultShowDuration() {
      return C[681] || CT.C681;
    },
    /*tooltip.TooltipState._defaultHoverShowDuration*/get _defaultHoverShowDuration() {
      return C[470] || CT.C470;
    },
    /*tooltip.TooltipState._defaultWaitDuration*/get _defaultWaitDuration() {
      return C[682] || CT.C682;
    },
    /*tooltip.TooltipState._defaultExcludeFromSemantics*/get _defaultExcludeFromSemantics() {
      return false;
    },
    /*tooltip.TooltipState._defaultTriggerMode*/get _defaultTriggerMode() {
      return C[668] || CT.C668;
    },
    /*tooltip.TooltipState._defaultEnableFeedback*/get _defaultEnableFeedback() {
      return true;
    },
    /*tooltip.TooltipState._defaultTextAlign*/get _defaultTextAlign() {
      return C[683] || CT.C683;
    },
    /*tooltip.TooltipState._mouseIn*/get _mouseIn() {
      return T$.LinkedHashSetOfTooltipState().new();
    }
  }, false);
  tooltip._TooltipPositionDelegate = class _TooltipPositionDelegate extends shifted_box.SingleChildLayoutDelegate {
    static ['_#new#tearOff'](opts) {
      let target = opts && 'target' in opts ? opts.target : null;
      let verticalOffset = opts && 'verticalOffset' in opts ? opts.verticalOffset : null;
      let preferBelow = opts && 'preferBelow' in opts ? opts.preferBelow : null;
      return new tooltip._TooltipPositionDelegate.new({target: target, verticalOffset: verticalOffset, preferBelow: preferBelow});
    }
    getConstraintsForChild(constraints) {
      return constraints.loosen();
    }
    getPositionForChild(size, childSize) {
      return geometry.positionDependentBox({size: size, childSize: childSize, target: this.target, verticalOffset: this.verticalOffset, preferBelow: this.preferBelow});
    }
    shouldRelayout(oldDelegate) {
      tooltip._TooltipPositionDelegate.as(oldDelegate);
      return !this.target._equals(oldDelegate.target) || this.verticalOffset !== oldDelegate.verticalOffset || this.preferBelow !== oldDelegate.preferBelow;
    }
  };
  (tooltip._TooltipPositionDelegate.new = function(opts) {
    let target = opts && 'target' in opts ? opts.target : null;
    let verticalOffset = opts && 'verticalOffset' in opts ? opts.verticalOffset : null;
    let preferBelow = opts && 'preferBelow' in opts ? opts.preferBelow : null;
    this.target = target;
    this.verticalOffset = verticalOffset;
    this.preferBelow = preferBelow;
    if (!(target !== null)) dart.assertFailed(null, I[93], 781, 15, "target != null");
    if (!(verticalOffset !== null)) dart.assertFailed(null, I[93], 782, 15, "verticalOffset != null");
    if (!(preferBelow !== null)) dart.assertFailed(null, I[93], 783, 15, "preferBelow != null");
    tooltip._TooltipPositionDelegate.__proto__.new.call(this);
    ;
  }).prototype = tooltip._TooltipPositionDelegate.prototype;
  dart.addTypeTests(tooltip._TooltipPositionDelegate);
  dart.addTypeCaches(tooltip._TooltipPositionDelegate);
  dart.setMethodSignature(tooltip._TooltipPositionDelegate, () => ({
    __proto__: dart.getMethods(tooltip._TooltipPositionDelegate.__proto__),
    shouldRelayout: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(tooltip._TooltipPositionDelegate, I[94]);
  dart.setFieldSignature(tooltip._TooltipPositionDelegate, () => ({
    __proto__: dart.getFields(tooltip._TooltipPositionDelegate.__proto__),
    target: dart.finalFieldType(ui.Offset),
    verticalOffset: dart.finalFieldType(core.double),
    preferBelow: dart.finalFieldType(core.bool)
  }));
  tooltip._TooltipOverlay = class _TooltipOverlay extends framework.StatelessWidget {
    get richMessage() {
      return this[S$0.richMessage$1];
    }
    set richMessage(value) {
      super.richMessage = value;
    }
    get height() {
      return this[S$0.height$8];
    }
    set height(value) {
      super.height = value;
    }
    get padding() {
      return this[S$0.padding$10];
    }
    set padding(value) {
      super.padding = value;
    }
    get margin() {
      return this[S$0.margin$4];
    }
    set margin(value) {
      super.margin = value;
    }
    get decoration() {
      return this[S$0.decoration$5];
    }
    set decoration(value) {
      super.decoration = value;
    }
    get textStyle() {
      return this[S$0.textStyle$6];
    }
    set textStyle(value) {
      super.textStyle = value;
    }
    get textAlign() {
      return this[S$0.textAlign$4];
    }
    set textAlign(value) {
      super.textAlign = value;
    }
    get animation() {
      return this[S$0.animation$8];
    }
    set animation(value) {
      super.animation = value;
    }
    get target() {
      return this[S$0.target];
    }
    set target(value) {
      super.target = value;
    }
    get verticalOffset() {
      return this[S$0.verticalOffset$2];
    }
    set verticalOffset(value) {
      super.verticalOffset = value;
    }
    get preferBelow() {
      return this[S$0.preferBelow$2];
    }
    set preferBelow(value) {
      super.preferBelow = value;
    }
    get onEnter() {
      return this[S$0.onEnter];
    }
    set onEnter(value) {
      super.onEnter = value;
    }
    get onExit() {
      return this[S$0.onExit];
    }
    set onExit(value) {
      super.onExit = value;
    }
    static ['_#new#tearOff'](opts) {
      let height = opts && 'height' in opts ? opts.height : null;
      let richMessage = opts && 'richMessage' in opts ? opts.richMessage : null;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let margin = opts && 'margin' in opts ? opts.margin : null;
      let decoration = opts && 'decoration' in opts ? opts.decoration : null;
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let textAlign = opts && 'textAlign' in opts ? opts.textAlign : null;
      let animation = opts && 'animation' in opts ? opts.animation : null;
      let target = opts && 'target' in opts ? opts.target : null;
      let verticalOffset = opts && 'verticalOffset' in opts ? opts.verticalOffset : null;
      let preferBelow = opts && 'preferBelow' in opts ? opts.preferBelow : null;
      let onEnter = opts && 'onEnter' in opts ? opts.onEnter : null;
      let onExit = opts && 'onExit' in opts ? opts.onExit : null;
      return new tooltip._TooltipOverlay.new({height: height, richMessage: richMessage, padding: padding, margin: margin, decoration: decoration, textStyle: textStyle, textAlign: textAlign, animation: animation, target: target, verticalOffset: verticalOffset, preferBelow: preferBelow, onEnter: onEnter, onExit: onExit, $creationLocationd_0dea112b090073317d4: C[684] || CT.C684});
    }
    build(context) {
      let t57, t57$;
      let result = new basic.IgnorePointer.new({child: new transitions.FadeTransition.new({opacity: this.animation, child: new basic.ConstrainedBox.new({constraints: new box$.BoxConstraints.new({minHeight: this.height}), child: new text$.DefaultTextStyle.new({style: dart.nullCheck(theme$.Theme.of(context).textTheme.bodyText2), child: new container.Container.new({decoration: this.decoration, padding: this.padding, margin: this.margin, child: new basic.Center.new({widthFactor: 1.0, heightFactor: 1.0, child: new text$.Text.rich(this.richMessage, {style: this.textStyle, textAlign: this.textAlign, $creationLocationd_0dea112b090073317d4: C[685] || CT.C685}), $creationLocationd_0dea112b090073317d4: C[686] || CT.C686}), $creationLocationd_0dea112b090073317d4: C[687] || CT.C687}), $creationLocationd_0dea112b090073317d4: C[688] || CT.C688}), $creationLocationd_0dea112b090073317d4: C[689] || CT.C689}), $creationLocationd_0dea112b090073317d4: C[690] || CT.C690}), $creationLocationd_0dea112b090073317d4: C[691] || CT.C691});
      if (this.onEnter != null || this.onExit != null) {
        result = new basic.MouseRegion.new({onEnter: this.onEnter, onExit: this.onExit, child: result, $creationLocationd_0dea112b090073317d4: C[692] || CT.C692});
      }
      return new basic.Positioned.fill({bottom: (t57$ = (t57 = media_query.MediaQuery.maybeOf(context), t57 == null ? null : t57.viewInsets.bottom), t57$ == null ? 0.0 : t57$), child: new basic.CustomSingleChildLayout.new({delegate: new tooltip._TooltipPositionDelegate.new({target: this.target, verticalOffset: this.verticalOffset, preferBelow: this.preferBelow}), child: result, $creationLocationd_0dea112b090073317d4: C[693] || CT.C693}), $creationLocationd_0dea112b090073317d4: C[694] || CT.C694});
    }
  };
  (tooltip._TooltipOverlay.new = function(opts) {
    let height = opts && 'height' in opts ? opts.height : null;
    let richMessage = opts && 'richMessage' in opts ? opts.richMessage : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let margin = opts && 'margin' in opts ? opts.margin : null;
    let decoration = opts && 'decoration' in opts ? opts.decoration : null;
    let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
    let textAlign = opts && 'textAlign' in opts ? opts.textAlign : null;
    let animation = opts && 'animation' in opts ? opts.animation : null;
    let target = opts && 'target' in opts ? opts.target : null;
    let verticalOffset = opts && 'verticalOffset' in opts ? opts.verticalOffset : null;
    let preferBelow = opts && 'preferBelow' in opts ? opts.preferBelow : null;
    let onEnter = opts && 'onEnter' in opts ? opts.onEnter : null;
    let onExit = opts && 'onExit' in opts ? opts.onExit : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$0.height$8] = height;
    this[S$0.richMessage$1] = richMessage;
    this[S$0.padding$10] = padding;
    this[S$0.margin$4] = margin;
    this[S$0.decoration$5] = decoration;
    this[S$0.textStyle$6] = textStyle;
    this[S$0.textAlign$4] = textAlign;
    this[S$0.animation$8] = animation;
    this[S$0.target] = target;
    this[S$0.verticalOffset$2] = verticalOffset;
    this[S$0.preferBelow$2] = preferBelow;
    this[S$0.onEnter] = onEnter;
    this[S$0.onExit] = onExit;
    tooltip._TooltipOverlay.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = tooltip._TooltipOverlay.prototype;
  dart.addTypeTests(tooltip._TooltipOverlay);
  dart.addTypeCaches(tooltip._TooltipOverlay);
  dart.setMethodSignature(tooltip._TooltipOverlay, () => ({
    __proto__: dart.getMethods(tooltip._TooltipOverlay.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(tooltip._TooltipOverlay, I[94]);
  dart.setFieldSignature(tooltip._TooltipOverlay, () => ({
    __proto__: dart.getFields(tooltip._TooltipOverlay.__proto__),
    richMessage: dart.finalFieldType(inline_span.InlineSpan),
    height: dart.finalFieldType(core.double),
    padding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    margin: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    decoration: dart.finalFieldType(dart.nullable(decoration.Decoration)),
    textStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    textAlign: dart.finalFieldType(dart.nullable(ui.TextAlign)),
    animation: dart.finalFieldType(animation$.Animation$(core.double)),
    target: dart.finalFieldType(ui.Offset),
    verticalOffset: dart.finalFieldType(core.double),
    preferBelow: dart.finalFieldType(core.bool),
    onEnter: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [events.PointerEnterEvent]))),
    onExit: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [events.PointerExitEvent])))
  }));
  bottom_navigation_bar.BottomNavigationBarType = class BottomNavigationBarType extends core._Enum {
    toString() {
      return "BottomNavigationBarType." + this[S._name];
    }
  };
  (bottom_navigation_bar.BottomNavigationBarType.new = function(index, name) {
    bottom_navigation_bar.BottomNavigationBarType.__proto__.new.call(this, index, name);
    ;
  }).prototype = bottom_navigation_bar.BottomNavigationBarType.prototype;
  dart.addTypeTests(bottom_navigation_bar.BottomNavigationBarType);
  dart.addTypeCaches(bottom_navigation_bar.BottomNavigationBarType);
  dart.setLibraryUri(bottom_navigation_bar.BottomNavigationBarType, I[95]);
  dart.setStaticFieldSignature(bottom_navigation_bar.BottomNavigationBarType, () => ['values', 'fixed', 'shifting']);
  dart.defineExtensionMethods(bottom_navigation_bar.BottomNavigationBarType, ['toString']);
  dart.defineLazy(bottom_navigation_bar.BottomNavigationBarType, {
    /*bottom_navigation_bar.BottomNavigationBarType.values*/get values() {
      return C[695] || CT.C695;
    },
    /*bottom_navigation_bar.BottomNavigationBarType.fixed*/get fixed() {
      return C[696] || CT.C696;
    },
    /*bottom_navigation_bar.BottomNavigationBarType.shifting*/get shifting() {
      return C[697] || CT.C697;
    }
  }, false);
  bottom_navigation_bar.BottomNavigationBarLandscapeLayout = class BottomNavigationBarLandscapeLayout extends core._Enum {
    toString() {
      return "BottomNavigationBarLandscapeLayout." + this[S._name];
    }
  };
  (bottom_navigation_bar.BottomNavigationBarLandscapeLayout.new = function(index, name) {
    bottom_navigation_bar.BottomNavigationBarLandscapeLayout.__proto__.new.call(this, index, name);
    ;
  }).prototype = bottom_navigation_bar.BottomNavigationBarLandscapeLayout.prototype;
  dart.addTypeTests(bottom_navigation_bar.BottomNavigationBarLandscapeLayout);
  dart.addTypeCaches(bottom_navigation_bar.BottomNavigationBarLandscapeLayout);
  dart.setLibraryUri(bottom_navigation_bar.BottomNavigationBarLandscapeLayout, I[95]);
  dart.setStaticFieldSignature(bottom_navigation_bar.BottomNavigationBarLandscapeLayout, () => ['values', 'spread', 'centered', 'linear']);
  dart.defineExtensionMethods(bottom_navigation_bar.BottomNavigationBarLandscapeLayout, ['toString']);
  dart.defineLazy(bottom_navigation_bar.BottomNavigationBarLandscapeLayout, {
    /*bottom_navigation_bar.BottomNavigationBarLandscapeLayout.values*/get values() {
      return C[698] || CT.C698;
    },
    /*bottom_navigation_bar.BottomNavigationBarLandscapeLayout.spread*/get spread() {
      return C[699] || CT.C699;
    },
    /*bottom_navigation_bar.BottomNavigationBarLandscapeLayout.centered*/get centered() {
      return C[700] || CT.C700;
    },
    /*bottom_navigation_bar.BottomNavigationBarLandscapeLayout.linear*/get linear() {
      return C[701] || CT.C701;
    }
  }, false);
  bottom_navigation_bar.BottomNavigationBar = class BottomNavigationBar extends framework.StatefulWidget {
    get items() {
      return this[S$0.items];
    }
    set items(value) {
      super.items = value;
    }
    get onTap() {
      return this[S$0.onTap$2];
    }
    set onTap(value) {
      super.onTap = value;
    }
    get currentIndex() {
      return this[S$0.currentIndex];
    }
    set currentIndex(value) {
      super.currentIndex = value;
    }
    get elevation() {
      return this[S$0.elevation$16];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get type() {
      return this[S$0.type];
    }
    set type(value) {
      super.type = value;
    }
    get backgroundColor() {
      return this[S$0.backgroundColor$13];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get iconSize() {
      return this[S$0.iconSize$1];
    }
    set iconSize(value) {
      super.iconSize = value;
    }
    get selectedItemColor() {
      return this[S$0.selectedItemColor];
    }
    set selectedItemColor(value) {
      super.selectedItemColor = value;
    }
    get unselectedItemColor() {
      return this[S$0.unselectedItemColor];
    }
    set unselectedItemColor(value) {
      super.unselectedItemColor = value;
    }
    get selectedIconTheme() {
      return this[S$0.selectedIconTheme$2];
    }
    set selectedIconTheme(value) {
      super.selectedIconTheme = value;
    }
    get unselectedIconTheme() {
      return this[S$0.unselectedIconTheme$2];
    }
    set unselectedIconTheme(value) {
      super.unselectedIconTheme = value;
    }
    get selectedLabelStyle() {
      return this[S$0.selectedLabelStyle];
    }
    set selectedLabelStyle(value) {
      super.selectedLabelStyle = value;
    }
    get unselectedLabelStyle() {
      return this[S$0.unselectedLabelStyle$3];
    }
    set unselectedLabelStyle(value) {
      super.unselectedLabelStyle = value;
    }
    get selectedFontSize() {
      return this[S$0.selectedFontSize];
    }
    set selectedFontSize(value) {
      super.selectedFontSize = value;
    }
    get unselectedFontSize() {
      return this[S$0.unselectedFontSize];
    }
    set unselectedFontSize(value) {
      super.unselectedFontSize = value;
    }
    get showUnselectedLabels() {
      return this[S$0.showUnselectedLabels];
    }
    set showUnselectedLabels(value) {
      super.showUnselectedLabels = value;
    }
    get showSelectedLabels() {
      return this[S$0.showSelectedLabels];
    }
    set showSelectedLabels(value) {
      super.showSelectedLabels = value;
    }
    get mouseCursor() {
      return this[S$0.mouseCursor$12];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    get enableFeedback() {
      return this[S$0.enableFeedback$9];
    }
    set enableFeedback(value) {
      super.enableFeedback = value;
    }
    get landscapeLayout() {
      return this[S$0.landscapeLayout];
    }
    set landscapeLayout(value) {
      super.landscapeLayout = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let items = opts && 'items' in opts ? opts.items : null;
      let onTap = opts && 'onTap' in opts ? opts.onTap : null;
      let currentIndex = opts && 'currentIndex' in opts ? opts.currentIndex : 0;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let type = opts && 'type' in opts ? opts.type : null;
      let fixedColor = opts && 'fixedColor' in opts ? opts.fixedColor : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let iconSize = opts && 'iconSize' in opts ? opts.iconSize : 24;
      let selectedItemColor = opts && 'selectedItemColor' in opts ? opts.selectedItemColor : null;
      let unselectedItemColor = opts && 'unselectedItemColor' in opts ? opts.unselectedItemColor : null;
      let selectedIconTheme = opts && 'selectedIconTheme' in opts ? opts.selectedIconTheme : null;
      let unselectedIconTheme = opts && 'unselectedIconTheme' in opts ? opts.unselectedIconTheme : null;
      let selectedFontSize = opts && 'selectedFontSize' in opts ? opts.selectedFontSize : 14;
      let unselectedFontSize = opts && 'unselectedFontSize' in opts ? opts.unselectedFontSize : 12;
      let selectedLabelStyle = opts && 'selectedLabelStyle' in opts ? opts.selectedLabelStyle : null;
      let unselectedLabelStyle = opts && 'unselectedLabelStyle' in opts ? opts.unselectedLabelStyle : null;
      let showSelectedLabels = opts && 'showSelectedLabels' in opts ? opts.showSelectedLabels : null;
      let showUnselectedLabels = opts && 'showUnselectedLabels' in opts ? opts.showUnselectedLabels : null;
      let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
      let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
      let landscapeLayout = opts && 'landscapeLayout' in opts ? opts.landscapeLayout : null;
      return new bottom_navigation_bar.BottomNavigationBar.new({key: key, items: items, onTap: onTap, currentIndex: currentIndex, elevation: elevation, type: type, fixedColor: fixedColor, backgroundColor: backgroundColor, iconSize: iconSize, selectedItemColor: selectedItemColor, unselectedItemColor: unselectedItemColor, selectedIconTheme: selectedIconTheme, unselectedIconTheme: unselectedIconTheme, selectedFontSize: selectedFontSize, unselectedFontSize: unselectedFontSize, selectedLabelStyle: selectedLabelStyle, unselectedLabelStyle: unselectedLabelStyle, showSelectedLabels: showSelectedLabels, showUnselectedLabels: showUnselectedLabels, mouseCursor: mouseCursor, enableFeedback: enableFeedback, landscapeLayout: landscapeLayout, $creationLocationd_0dea112b090073317d4: C[702] || CT.C702});
    }
    get fixedColor() {
      return this.selectedItemColor;
    }
    createState() {
      return new bottom_navigation_bar._BottomNavigationBarState.new();
    }
  };
  (bottom_navigation_bar.BottomNavigationBar.new = function(opts) {
    let t61;
    let key = opts && 'key' in opts ? opts.key : null;
    let items = opts && 'items' in opts ? opts.items : null;
    let onTap = opts && 'onTap' in opts ? opts.onTap : null;
    let currentIndex = opts && 'currentIndex' in opts ? opts.currentIndex : 0;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let type = opts && 'type' in opts ? opts.type : null;
    let fixedColor = opts && 'fixedColor' in opts ? opts.fixedColor : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let iconSize = opts && 'iconSize' in opts ? opts.iconSize : 24;
    let selectedItemColor = opts && 'selectedItemColor' in opts ? opts.selectedItemColor : null;
    let unselectedItemColor = opts && 'unselectedItemColor' in opts ? opts.unselectedItemColor : null;
    let selectedIconTheme = opts && 'selectedIconTheme' in opts ? opts.selectedIconTheme : null;
    let unselectedIconTheme = opts && 'unselectedIconTheme' in opts ? opts.unselectedIconTheme : null;
    let selectedFontSize = opts && 'selectedFontSize' in opts ? opts.selectedFontSize : 14;
    let unselectedFontSize = opts && 'unselectedFontSize' in opts ? opts.unselectedFontSize : 12;
    let selectedLabelStyle = opts && 'selectedLabelStyle' in opts ? opts.selectedLabelStyle : null;
    let unselectedLabelStyle = opts && 'unselectedLabelStyle' in opts ? opts.unselectedLabelStyle : null;
    let showSelectedLabels = opts && 'showSelectedLabels' in opts ? opts.showSelectedLabels : null;
    let showUnselectedLabels = opts && 'showUnselectedLabels' in opts ? opts.showUnselectedLabels : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
    let landscapeLayout = opts && 'landscapeLayout' in opts ? opts.landscapeLayout : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$0.items] = items;
    this[S$0.onTap$2] = onTap;
    this[S$0.currentIndex] = currentIndex;
    this[S$0.elevation$16] = elevation;
    this[S$0.type] = type;
    this[S$0.backgroundColor$13] = backgroundColor;
    this[S$0.iconSize$1] = iconSize;
    this[S$0.unselectedItemColor] = unselectedItemColor;
    this[S$0.selectedIconTheme$2] = selectedIconTheme;
    this[S$0.unselectedIconTheme$2] = unselectedIconTheme;
    this[S$0.selectedFontSize] = selectedFontSize;
    this[S$0.unselectedFontSize] = unselectedFontSize;
    this[S$0.selectedLabelStyle] = selectedLabelStyle;
    this[S$0.unselectedLabelStyle$3] = unselectedLabelStyle;
    this[S$0.showSelectedLabels] = showSelectedLabels;
    this[S$0.showUnselectedLabels] = showUnselectedLabels;
    this[S$0.mouseCursor$12] = mouseCursor;
    this[S$0.enableFeedback$9] = enableFeedback;
    this[S$0.landscapeLayout] = landscapeLayout;
    if (!(items !== null)) dart.assertFailed(null, I[96], 196, 15, "items != null");
    if (!(items[S.$length] >= 2)) dart.assertFailed(null, I[96], 197, 15, "items.length >= 2");
    if (!items[S$0.$every](dart.fn(item => item.label != null, T$.BottomNavigationBarItemTobool()))) dart.assertFailed("Every item must have a non-null label", I[96], 199, 9, "items.every((BottomNavigationBarItem item) => item.label != null)");
    if (!(0 <= currentIndex && currentIndex < items[S.$length])) dart.assertFailed(null, I[96], 202, 15, "0 <= currentIndex && currentIndex < items.length");
    if (!(elevation == null || dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, I[96], 203, 15, "elevation == null || elevation >= 0.0");
    if (!(iconSize !== null && iconSize >= 0.0)) dart.assertFailed(null, I[96], 204, 15, "iconSize != null && iconSize >= 0.0");
    if (!(selectedItemColor == null || fixedColor == null)) dart.assertFailed("Either selectedItemColor or fixedColor can be specified, but not both", I[96], 206, 10, "selectedItemColor == null || fixedColor == null");
    if (!(selectedFontSize !== null && selectedFontSize >= 0.0)) dart.assertFailed(null, I[96], 209, 15, "selectedFontSize != null && selectedFontSize >= 0.0");
    if (!(unselectedFontSize !== null && unselectedFontSize >= 0.0)) dart.assertFailed(null, I[96], 210, 15, "unselectedFontSize != null && unselectedFontSize >= 0.0");
    this[S$0.selectedItemColor] = (t61 = selectedItemColor, t61 == null ? fixedColor : t61);
    bottom_navigation_bar.BottomNavigationBar.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = bottom_navigation_bar.BottomNavigationBar.prototype;
  dart.addTypeTests(bottom_navigation_bar.BottomNavigationBar);
  dart.addTypeCaches(bottom_navigation_bar.BottomNavigationBar);
  dart.setMethodSignature(bottom_navigation_bar.BottomNavigationBar, () => ({
    __proto__: dart.getMethods(bottom_navigation_bar.BottomNavigationBar.__proto__),
    createState: dart.fnType(framework.State$(bottom_navigation_bar.BottomNavigationBar), [])
  }));
  dart.setGetterSignature(bottom_navigation_bar.BottomNavigationBar, () => ({
    __proto__: dart.getGetters(bottom_navigation_bar.BottomNavigationBar.__proto__),
    fixedColor: dart.nullable(ui.Color)
  }));
  dart.setLibraryUri(bottom_navigation_bar.BottomNavigationBar, I[95]);
  dart.setFieldSignature(bottom_navigation_bar.BottomNavigationBar, () => ({
    __proto__: dart.getFields(bottom_navigation_bar.BottomNavigationBar.__proto__),
    items: dart.finalFieldType(core.List$(bottom_navigation_bar_item.BottomNavigationBarItem)),
    onTap: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.int]))),
    currentIndex: dart.finalFieldType(core.int),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    type: dart.finalFieldType(dart.nullable(bottom_navigation_bar.BottomNavigationBarType)),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    iconSize: dart.finalFieldType(core.double),
    selectedItemColor: dart.finalFieldType(dart.nullable(ui.Color)),
    unselectedItemColor: dart.finalFieldType(dart.nullable(ui.Color)),
    selectedIconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData)),
    unselectedIconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData)),
    selectedLabelStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    unselectedLabelStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    selectedFontSize: dart.finalFieldType(core.double),
    unselectedFontSize: dart.finalFieldType(core.double),
    showUnselectedLabels: dart.finalFieldType(dart.nullable(core.bool)),
    showSelectedLabels: dart.finalFieldType(dart.nullable(core.bool)),
    mouseCursor: dart.finalFieldType(dart.nullable(mouse_cursor.MouseCursor)),
    enableFeedback: dart.finalFieldType(dart.nullable(core.bool)),
    landscapeLayout: dart.finalFieldType(dart.nullable(bottom_navigation_bar.BottomNavigationBarLandscapeLayout))
  }));
  bottom_navigation_bar._BottomNavigationTile = class _BottomNavigationTile extends framework.StatelessWidget {
    get type() {
      return this[S$0.type$1];
    }
    set type(value) {
      super.type = value;
    }
    get item() {
      return this[S$0.item];
    }
    set item(value) {
      super.item = value;
    }
    get animation() {
      return this[S$0.animation$9];
    }
    set animation(value) {
      super.animation = value;
    }
    get iconSize() {
      return this[S$0.iconSize$2];
    }
    set iconSize(value) {
      super.iconSize = value;
    }
    get onTap() {
      return this[S$0.onTap$3];
    }
    set onTap(value) {
      super.onTap = value;
    }
    get colorTween() {
      return this[S$0.colorTween];
    }
    set colorTween(value) {
      super.colorTween = value;
    }
    get flex() {
      return this[S$0.flex];
    }
    set flex(value) {
      super.flex = value;
    }
    get selected() {
      return this[S$0.selected$1];
    }
    set selected(value) {
      super.selected = value;
    }
    get selectedIconTheme() {
      return this[S$0.selectedIconTheme$3];
    }
    set selectedIconTheme(value) {
      super.selectedIconTheme = value;
    }
    get unselectedIconTheme() {
      return this[S$0.unselectedIconTheme$3];
    }
    set unselectedIconTheme(value) {
      super.unselectedIconTheme = value;
    }
    get selectedLabelStyle() {
      return this[S$0.selectedLabelStyle$1];
    }
    set selectedLabelStyle(value) {
      super.selectedLabelStyle = value;
    }
    get unselectedLabelStyle() {
      return this[S$0.unselectedLabelStyle$4];
    }
    set unselectedLabelStyle(value) {
      super.unselectedLabelStyle = value;
    }
    get indexLabel() {
      return this[S$0.indexLabel];
    }
    set indexLabel(value) {
      super.indexLabel = value;
    }
    get showSelectedLabels() {
      return this[S$0.showSelectedLabels$1];
    }
    set showSelectedLabels(value) {
      super.showSelectedLabels = value;
    }
    get showUnselectedLabels() {
      return this[S$0.showUnselectedLabels$1];
    }
    set showUnselectedLabels(value) {
      super.showUnselectedLabels = value;
    }
    get mouseCursor() {
      return this[S$0.mouseCursor$13];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    get enableFeedback() {
      return this[S$0.enableFeedback$10];
    }
    set enableFeedback(value) {
      super.enableFeedback = value;
    }
    get layout() {
      return this[S$0.layout];
    }
    set layout(value) {
      super.layout = value;
    }
    static ['_#new#tearOff'](type, item, animation, iconSize, opts) {
      let onTap = opts && 'onTap' in opts ? opts.onTap : null;
      let colorTween = opts && 'colorTween' in opts ? opts.colorTween : null;
      let flex = opts && 'flex' in opts ? opts.flex : null;
      let selected = opts && 'selected' in opts ? opts.selected : false;
      let selectedLabelStyle = opts && 'selectedLabelStyle' in opts ? opts.selectedLabelStyle : null;
      let unselectedLabelStyle = opts && 'unselectedLabelStyle' in opts ? opts.unselectedLabelStyle : null;
      let selectedIconTheme = opts && 'selectedIconTheme' in opts ? opts.selectedIconTheme : null;
      let unselectedIconTheme = opts && 'unselectedIconTheme' in opts ? opts.unselectedIconTheme : null;
      let showSelectedLabels = opts && 'showSelectedLabels' in opts ? opts.showSelectedLabels : null;
      let showUnselectedLabels = opts && 'showUnselectedLabels' in opts ? opts.showUnselectedLabels : null;
      let indexLabel = opts && 'indexLabel' in opts ? opts.indexLabel : null;
      let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
      let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
      let layout = opts && 'layout' in opts ? opts.layout : null;
      return new bottom_navigation_bar._BottomNavigationTile.new(type, item, animation, iconSize, {onTap: onTap, colorTween: colorTween, flex: flex, selected: selected, selectedLabelStyle: selectedLabelStyle, unselectedLabelStyle: unselectedLabelStyle, selectedIconTheme: selectedIconTheme, unselectedIconTheme: unselectedIconTheme, showSelectedLabels: showSelectedLabels, showUnselectedLabels: showUnselectedLabels, indexLabel: indexLabel, mouseCursor: mouseCursor, enableFeedback: enableFeedback, layout: layout, $creationLocationd_0dea112b090073317d4: C[703] || CT.C703});
    }
    build(context) {
      let t61, t61$, t61$0, t61$1, t61$2;
      let size = null;
      let selectedFontSize = dart.nullCheck(this.selectedLabelStyle.fontSize);
      let selectedIconSize = (t61$ = (t61 = this.selectedIconTheme, t61 == null ? null : t61.size), t61$ == null ? this.iconSize : t61$);
      let unselectedIconSize = (t61$1 = (t61$0 = this.unselectedIconTheme, t61$0 == null ? null : t61$0.size), t61$1 == null ? this.iconSize : t61$1);
      let selectedIconDiff = math.max(core.double, selectedIconSize - unselectedIconSize, 0.0);
      let unselectedIconDiff = math.max(core.double, unselectedIconSize - selectedIconSize, 0.0);
      let effectiveTooltip = this.item.tooltip === "" ? null : (t61$2 = this.item.tooltip, t61$2 == null ? this.item.label : t61$2);
      let bottomPadding = null;
      let topPadding = null;
      if (this.showSelectedLabels && !this.showUnselectedLabels) {
        bottomPadding = new (T$.TweenOfdouble()).new({begin: selectedIconDiff / 2.0, end: selectedFontSize / 2.0 - unselectedIconDiff / 2.0}).evaluate(this.animation);
        topPadding = new (T$.TweenOfdouble()).new({begin: selectedFontSize + selectedIconDiff / 2.0, end: selectedFontSize / 2.0 - unselectedIconDiff / 2.0}).evaluate(this.animation);
      } else if (!this.showSelectedLabels && !this.showUnselectedLabels) {
        bottomPadding = new (T$.TweenOfdouble()).new({begin: selectedIconDiff / 2.0, end: unselectedIconDiff / 2.0}).evaluate(this.animation);
        topPadding = new (T$.TweenOfdouble()).new({begin: selectedFontSize + selectedIconDiff / 2.0, end: selectedFontSize + unselectedIconDiff / 2.0}).evaluate(this.animation);
      } else {
        bottomPadding = new (T$.TweenOfdouble()).new({begin: selectedFontSize / 2.0 + selectedIconDiff / 2.0, end: selectedFontSize / 2.0 + unselectedIconDiff / 2.0}).evaluate(this.animation);
        topPadding = new (T$.TweenOfdouble()).new({begin: selectedFontSize / 2.0 + selectedIconDiff / 2.0, end: selectedFontSize / 2.0 + unselectedIconDiff / 2.0}).evaluate(this.animation);
      }
      switch (this.type) {
        case C[696] || CT.C696:
          {
            size = 1;
            break;
          }
        case C[697] || CT.C697:
          {
            size = (dart.nullCheck(this.flex) * 1000.0)[S.$round]();
            break;
          }
      }
      let result = new ink_well.InkResponse.new({onTap: this.onTap, mouseCursor: this.mouseCursor, enableFeedback: this.enableFeedback, child: new basic.Padding.new({padding: new edge_insets.EdgeInsets.only({top: topPadding, bottom: bottomPadding}), child: new bottom_navigation_bar._Tile.new({layout: this.layout, icon: new bottom_navigation_bar._TileIcon.new({colorTween: dart.nullCheck(this.colorTween), animation: this.animation, iconSize: this.iconSize, selected: this.selected, item: this.item, selectedIconTheme: this.selectedIconTheme, unselectedIconTheme: this.unselectedIconTheme, $creationLocationd_0dea112b090073317d4: C[704] || CT.C704}), label: new bottom_navigation_bar._Label.new({colorTween: dart.nullCheck(this.colorTween), animation: this.animation, item: this.item, selectedLabelStyle: this.selectedLabelStyle, unselectedLabelStyle: this.unselectedLabelStyle, showSelectedLabels: this.showSelectedLabels, showUnselectedLabels: this.showUnselectedLabels, $creationLocationd_0dea112b090073317d4: C[705] || CT.C705}), $creationLocationd_0dea112b090073317d4: C[706] || CT.C706}), $creationLocationd_0dea112b090073317d4: C[707] || CT.C707}), $creationLocationd_0dea112b090073317d4: C[708] || CT.C708});
      if (effectiveTooltip != null) {
        result = new tooltip.Tooltip.new({message: effectiveTooltip, preferBelow: false, verticalOffset: selectedIconSize + selectedFontSize, excludeFromSemantics: true, child: result, $creationLocationd_0dea112b090073317d4: C[709] || CT.C709});
      }
      result = new basic.Semantics.new({selected: this.selected, container: true, child: new basic.Stack.new({children: T$.JSArrayOfWidget().of([result, new basic.Semantics.new({label: this.indexLabel, $creationLocationd_0dea112b090073317d4: C[710] || CT.C710})]), $creationLocationd_0dea112b090073317d4: C[711] || CT.C711}), $creationLocationd_0dea112b090073317d4: C[712] || CT.C712});
      return new basic.Expanded.new({flex: size, child: result, $creationLocationd_0dea112b090073317d4: C[713] || CT.C713});
    }
  };
  (bottom_navigation_bar._BottomNavigationTile.new = function(type, item, animation, iconSize, opts) {
    let onTap = opts && 'onTap' in opts ? opts.onTap : null;
    let colorTween = opts && 'colorTween' in opts ? opts.colorTween : null;
    let flex = opts && 'flex' in opts ? opts.flex : null;
    let selected = opts && 'selected' in opts ? opts.selected : false;
    let selectedLabelStyle = opts && 'selectedLabelStyle' in opts ? opts.selectedLabelStyle : null;
    let unselectedLabelStyle = opts && 'unselectedLabelStyle' in opts ? opts.unselectedLabelStyle : null;
    let selectedIconTheme = opts && 'selectedIconTheme' in opts ? opts.selectedIconTheme : null;
    let unselectedIconTheme = opts && 'unselectedIconTheme' in opts ? opts.unselectedIconTheme : null;
    let showSelectedLabels = opts && 'showSelectedLabels' in opts ? opts.showSelectedLabels : null;
    let showUnselectedLabels = opts && 'showUnselectedLabels' in opts ? opts.showUnselectedLabels : null;
    let indexLabel = opts && 'indexLabel' in opts ? opts.indexLabel : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
    let layout = opts && 'layout' in opts ? opts.layout : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$0.type$1] = type;
    this[S$0.item] = item;
    this[S$0.animation$9] = animation;
    this[S$0.iconSize$2] = iconSize;
    this[S$0.onTap$3] = onTap;
    this[S$0.colorTween] = colorTween;
    this[S$0.flex] = flex;
    this[S$0.selected$1] = selected;
    this[S$0.selectedLabelStyle$1] = selectedLabelStyle;
    this[S$0.unselectedLabelStyle$4] = unselectedLabelStyle;
    this[S$0.selectedIconTheme$3] = selectedIconTheme;
    this[S$0.unselectedIconTheme$3] = unselectedIconTheme;
    this[S$0.showSelectedLabels$1] = showSelectedLabels;
    this[S$0.showUnselectedLabels$1] = showUnselectedLabels;
    this[S$0.indexLabel] = indexLabel;
    this[S$0.mouseCursor$13] = mouseCursor;
    this[S$0.enableFeedback$10] = enableFeedback;
    this[S$0.layout] = layout;
    if (!(type !== null)) dart.assertFailed(null, I[96], 410, 15, "type != null");
    if (!(item !== null)) dart.assertFailed(null, I[96], 411, 15, "item != null");
    if (!(animation !== null)) dart.assertFailed(null, I[96], 412, 15, "animation != null");
    if (!(selected !== null)) dart.assertFailed(null, I[96], 413, 15, "selected != null");
    if (!(selectedLabelStyle !== null)) dart.assertFailed(null, I[96], 414, 15, "selectedLabelStyle != null");
    if (!(unselectedLabelStyle !== null)) dart.assertFailed(null, I[96], 415, 15, "unselectedLabelStyle != null");
    if (!(mouseCursor !== null)) dart.assertFailed(null, I[96], 416, 15, "mouseCursor != null");
    bottom_navigation_bar._BottomNavigationTile.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = bottom_navigation_bar._BottomNavigationTile.prototype;
  dart.addTypeTests(bottom_navigation_bar._BottomNavigationTile);
  dart.addTypeCaches(bottom_navigation_bar._BottomNavigationTile);
  dart.setMethodSignature(bottom_navigation_bar._BottomNavigationTile, () => ({
    __proto__: dart.getMethods(bottom_navigation_bar._BottomNavigationTile.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(bottom_navigation_bar._BottomNavigationTile, I[95]);
  dart.setFieldSignature(bottom_navigation_bar._BottomNavigationTile, () => ({
    __proto__: dart.getFields(bottom_navigation_bar._BottomNavigationTile.__proto__),
    type: dart.finalFieldType(bottom_navigation_bar.BottomNavigationBarType),
    item: dart.finalFieldType(bottom_navigation_bar_item.BottomNavigationBarItem),
    animation: dart.finalFieldType(animation$.Animation$(core.double)),
    iconSize: dart.finalFieldType(core.double),
    onTap: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    colorTween: dart.finalFieldType(dart.nullable(tween.ColorTween)),
    flex: dart.finalFieldType(dart.nullable(core.double)),
    selected: dart.finalFieldType(core.bool),
    selectedIconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData)),
    unselectedIconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData)),
    selectedLabelStyle: dart.finalFieldType(text_style.TextStyle),
    unselectedLabelStyle: dart.finalFieldType(text_style.TextStyle),
    indexLabel: dart.finalFieldType(dart.nullable(core.String)),
    showSelectedLabels: dart.finalFieldType(core.bool),
    showUnselectedLabels: dart.finalFieldType(core.bool),
    mouseCursor: dart.finalFieldType(mouse_cursor.MouseCursor),
    enableFeedback: dart.finalFieldType(core.bool),
    layout: dart.finalFieldType(bottom_navigation_bar.BottomNavigationBarLandscapeLayout)
  }));
  bottom_navigation_bar._Tile = class _Tile extends framework.StatelessWidget {
    get layout() {
      return this[S$0.layout$1];
    }
    set layout(value) {
      super.layout = value;
    }
    get icon() {
      return this[S$0.icon$8];
    }
    set icon(value) {
      super.icon = value;
    }
    get label() {
      return this[S$0.label$8];
    }
    set label(value) {
      super.label = value;
    }
    static ['_#new#tearOff'](opts) {
      let layout = opts && 'layout' in opts ? opts.layout : null;
      let icon = opts && 'icon' in opts ? opts.icon : null;
      let label = opts && 'label' in opts ? opts.label : null;
      return new bottom_navigation_bar._Tile.new({layout: layout, icon: icon, label: label, $creationLocationd_0dea112b090073317d4: C[714] || CT.C714});
    }
    build(context) {
      let data = media_query.MediaQuery.of(context);
      if (data.orientation === media_query.Orientation.landscape && this.layout === bottom_navigation_bar.BottomNavigationBarLandscapeLayout.linear) {
        return new basic.Align.new({heightFactor: 1.0, child: new basic.Row.new({mainAxisSize: flex.MainAxisSize.min, children: T$.JSArrayOfWidget().of([this.icon, C[715] || CT.C715, this.label]), $creationLocationd_0dea112b090073317d4: C[717] || CT.C717}), $creationLocationd_0dea112b090073317d4: C[718] || CT.C718});
      }
      return new basic.Column.new({mainAxisAlignment: flex.MainAxisAlignment.spaceBetween, mainAxisSize: flex.MainAxisSize.min, children: T$.JSArrayOfWidget().of([this.icon, this.label]), $creationLocationd_0dea112b090073317d4: C[719] || CT.C719});
    }
  };
  (bottom_navigation_bar._Tile.new = function(opts) {
    let layout = opts && 'layout' in opts ? opts.layout : null;
    let icon = opts && 'icon' in opts ? opts.icon : null;
    let label = opts && 'label' in opts ? opts.label : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$0.layout$1] = layout;
    this[S$0.icon$8] = icon;
    this[S$0.label$8] = label;
    bottom_navigation_bar._Tile.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = bottom_navigation_bar._Tile.prototype;
  dart.addTypeTests(bottom_navigation_bar._Tile);
  dart.addTypeCaches(bottom_navigation_bar._Tile);
  dart.setMethodSignature(bottom_navigation_bar._Tile, () => ({
    __proto__: dart.getMethods(bottom_navigation_bar._Tile.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(bottom_navigation_bar._Tile, I[95]);
  dart.setFieldSignature(bottom_navigation_bar._Tile, () => ({
    __proto__: dart.getFields(bottom_navigation_bar._Tile.__proto__),
    layout: dart.finalFieldType(bottom_navigation_bar.BottomNavigationBarLandscapeLayout),
    icon: dart.finalFieldType(framework.Widget),
    label: dart.finalFieldType(framework.Widget)
  }));
  bottom_navigation_bar._TileIcon = class _TileIcon extends framework.StatelessWidget {
    get colorTween() {
      return this[S$0.colorTween$1];
    }
    set colorTween(value) {
      super.colorTween = value;
    }
    get animation() {
      return this[S$0.animation$10];
    }
    set animation(value) {
      super.animation = value;
    }
    get iconSize() {
      return this[S$0.iconSize$3];
    }
    set iconSize(value) {
      super.iconSize = value;
    }
    get selected() {
      return this[S$0.selected$2];
    }
    set selected(value) {
      super.selected = value;
    }
    get item() {
      return this[S$0.item$1];
    }
    set item(value) {
      super.item = value;
    }
    get selectedIconTheme() {
      return this[S$0.selectedIconTheme$4];
    }
    set selectedIconTheme(value) {
      super.selectedIconTheme = value;
    }
    get unselectedIconTheme() {
      return this[S$0.unselectedIconTheme$4];
    }
    set unselectedIconTheme(value) {
      super.unselectedIconTheme = value;
    }
    static ['_#new#tearOff'](opts) {
      let colorTween = opts && 'colorTween' in opts ? opts.colorTween : null;
      let animation = opts && 'animation' in opts ? opts.animation : null;
      let iconSize = opts && 'iconSize' in opts ? opts.iconSize : null;
      let selected = opts && 'selected' in opts ? opts.selected : null;
      let item = opts && 'item' in opts ? opts.item : null;
      let selectedIconTheme = opts && 'selectedIconTheme' in opts ? opts.selectedIconTheme : null;
      let unselectedIconTheme = opts && 'unselectedIconTheme' in opts ? opts.unselectedIconTheme : null;
      return new bottom_navigation_bar._TileIcon.new({colorTween: colorTween, animation: animation, iconSize: iconSize, selected: selected, item: item, selectedIconTheme: selectedIconTheme, unselectedIconTheme: unselectedIconTheme, $creationLocationd_0dea112b090073317d4: C[720] || CT.C720});
    }
    build(context) {
      let iconColor = this.colorTween.evaluate(this.animation);
      let defaultIconTheme = new icon_theme_data.IconThemeData.new({color: iconColor, size: this.iconSize});
      let iconThemeData = icon_theme_data.IconThemeData.lerp(defaultIconTheme.merge(this.unselectedIconTheme), defaultIconTheme.merge(this.selectedIconTheme), this.animation.value);
      return new basic.Align.new({alignment: alignment.Alignment.topCenter, heightFactor: 1.0, child: new icon_theme.IconTheme.new({data: iconThemeData, child: this.selected ? this.item.activeIcon : this.item.icon, $creationLocationd_0dea112b090073317d4: C[721] || CT.C721}), $creationLocationd_0dea112b090073317d4: C[722] || CT.C722});
    }
  };
  (bottom_navigation_bar._TileIcon.new = function(opts) {
    let colorTween = opts && 'colorTween' in opts ? opts.colorTween : null;
    let animation = opts && 'animation' in opts ? opts.animation : null;
    let iconSize = opts && 'iconSize' in opts ? opts.iconSize : null;
    let selected = opts && 'selected' in opts ? opts.selected : null;
    let item = opts && 'item' in opts ? opts.item : null;
    let selectedIconTheme = opts && 'selectedIconTheme' in opts ? opts.selectedIconTheme : null;
    let unselectedIconTheme = opts && 'unselectedIconTheme' in opts ? opts.unselectedIconTheme : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$0.colorTween$1] = colorTween;
    this[S$0.animation$10] = animation;
    this[S$0.iconSize$3] = iconSize;
    this[S$0.selected$2] = selected;
    this[S$0.item$1] = item;
    this[S$0.selectedIconTheme$4] = selectedIconTheme;
    this[S$0.unselectedIconTheme$4] = unselectedIconTheme;
    if (!(selected !== null)) dart.assertFailed(null, I[96], 622, 15, "selected != null");
    if (!(item !== null)) dart.assertFailed(null, I[96], 623, 15, "item != null");
    bottom_navigation_bar._TileIcon.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = bottom_navigation_bar._TileIcon.prototype;
  dart.addTypeTests(bottom_navigation_bar._TileIcon);
  dart.addTypeCaches(bottom_navigation_bar._TileIcon);
  dart.setMethodSignature(bottom_navigation_bar._TileIcon, () => ({
    __proto__: dart.getMethods(bottom_navigation_bar._TileIcon.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(bottom_navigation_bar._TileIcon, I[95]);
  dart.setFieldSignature(bottom_navigation_bar._TileIcon, () => ({
    __proto__: dart.getFields(bottom_navigation_bar._TileIcon.__proto__),
    colorTween: dart.finalFieldType(tween.ColorTween),
    animation: dart.finalFieldType(animation$.Animation$(core.double)),
    iconSize: dart.finalFieldType(core.double),
    selected: dart.finalFieldType(core.bool),
    item: dart.finalFieldType(bottom_navigation_bar_item.BottomNavigationBarItem),
    selectedIconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData)),
    unselectedIconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData))
  }));
  bottom_navigation_bar._Label = class _Label extends framework.StatelessWidget {
    get colorTween() {
      return this[S$0.colorTween$2];
    }
    set colorTween(value) {
      super.colorTween = value;
    }
    get animation() {
      return this[S$0.animation$11];
    }
    set animation(value) {
      super.animation = value;
    }
    get item() {
      return this[S$0.item$2];
    }
    set item(value) {
      super.item = value;
    }
    get selectedLabelStyle() {
      return this[S$0.selectedLabelStyle$2];
    }
    set selectedLabelStyle(value) {
      super.selectedLabelStyle = value;
    }
    get unselectedLabelStyle() {
      return this[S$0.unselectedLabelStyle$5];
    }
    set unselectedLabelStyle(value) {
      super.unselectedLabelStyle = value;
    }
    get showSelectedLabels() {
      return this[S$0.showSelectedLabels$2];
    }
    set showSelectedLabels(value) {
      super.showSelectedLabels = value;
    }
    get showUnselectedLabels() {
      return this[S$0.showUnselectedLabels$2];
    }
    set showUnselectedLabels(value) {
      super.showUnselectedLabels = value;
    }
    static ['_#new#tearOff'](opts) {
      let colorTween = opts && 'colorTween' in opts ? opts.colorTween : null;
      let animation = opts && 'animation' in opts ? opts.animation : null;
      let item = opts && 'item' in opts ? opts.item : null;
      let selectedLabelStyle = opts && 'selectedLabelStyle' in opts ? opts.selectedLabelStyle : null;
      let unselectedLabelStyle = opts && 'unselectedLabelStyle' in opts ? opts.unselectedLabelStyle : null;
      let showSelectedLabels = opts && 'showSelectedLabels' in opts ? opts.showSelectedLabels : null;
      let showUnselectedLabels = opts && 'showUnselectedLabels' in opts ? opts.showUnselectedLabels : null;
      return new bottom_navigation_bar._Label.new({colorTween: colorTween, animation: animation, item: item, selectedLabelStyle: selectedLabelStyle, unselectedLabelStyle: unselectedLabelStyle, showSelectedLabels: showSelectedLabels, showUnselectedLabels: showUnselectedLabels, $creationLocationd_0dea112b090073317d4: C[723] || CT.C723});
    }
    build(context) {
      let selectedFontSize = this.selectedLabelStyle.fontSize;
      let unselectedFontSize = this.unselectedLabelStyle.fontSize;
      let customStyle = dart.nullCheck(text_style.TextStyle.lerp(this.unselectedLabelStyle, this.selectedLabelStyle, this.animation.value));
      let text = text$.DefaultTextStyle.merge({style: customStyle.copyWith({fontSize: selectedFontSize, color: this.colorTween.evaluate(this.animation)}), child: new basic.Transform.new({transform: vector_math_64.Matrix4.diagonal3(vector_math_64.Vector3.all(new (T$.TweenOfdouble()).new({begin: dart.nullCheck(unselectedFontSize) / dart.nullCheck(selectedFontSize), end: 1.0}).evaluate(this.animation))), alignment: alignment.Alignment.bottomCenter, child: new text$.Text.new(dart.nullCheck(this.item.label), {$creationLocationd_0dea112b090073317d4: C[724] || CT.C724}), $creationLocationd_0dea112b090073317d4: C[725] || CT.C725})});
      if (!this.showUnselectedLabels && !this.showSelectedLabels) {
        text = new basic.Opacity.new({alwaysIncludeSemantics: true, opacity: 0.0, child: text, $creationLocationd_0dea112b090073317d4: C[726] || CT.C726});
      } else if (!this.showUnselectedLabels) {
        text = new transitions.FadeTransition.new({alwaysIncludeSemantics: true, opacity: this.animation, child: text, $creationLocationd_0dea112b090073317d4: C[727] || CT.C727});
      } else if (!this.showSelectedLabels) {
        text = new transitions.FadeTransition.new({alwaysIncludeSemantics: true, opacity: new (T$.TweenOfdouble()).new({begin: 1.0, end: 0.0}).animate(this.animation), child: text, $creationLocationd_0dea112b090073317d4: C[728] || CT.C728});
      }
      text = new basic.Align.new({alignment: alignment.Alignment.bottomCenter, heightFactor: 1.0, child: new container.Container.new({child: text, $creationLocationd_0dea112b090073317d4: C[729] || CT.C729}), $creationLocationd_0dea112b090073317d4: C[730] || CT.C730});
      if (this.item.label != null) {
        let mediaQueryData = media_query.MediaQuery.of(context);
        text = new media_query.MediaQuery.new({data: mediaQueryData.copyWith({textScaleFactor: math.min(core.double, 1.0, mediaQueryData.textScaleFactor)}), child: text, $creationLocationd_0dea112b090073317d4: C[731] || CT.C731});
      }
      return text;
    }
  };
  (bottom_navigation_bar._Label.new = function(opts) {
    let colorTween = opts && 'colorTween' in opts ? opts.colorTween : null;
    let animation = opts && 'animation' in opts ? opts.animation : null;
    let item = opts && 'item' in opts ? opts.item : null;
    let selectedLabelStyle = opts && 'selectedLabelStyle' in opts ? opts.selectedLabelStyle : null;
    let unselectedLabelStyle = opts && 'unselectedLabelStyle' in opts ? opts.unselectedLabelStyle : null;
    let showSelectedLabels = opts && 'showSelectedLabels' in opts ? opts.showSelectedLabels : null;
    let showUnselectedLabels = opts && 'showUnselectedLabels' in opts ? opts.showUnselectedLabels : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$0.colorTween$2] = colorTween;
    this[S$0.animation$11] = animation;
    this[S$0.item$2] = item;
    this[S$0.selectedLabelStyle$2] = selectedLabelStyle;
    this[S$0.unselectedLabelStyle$5] = unselectedLabelStyle;
    this[S$0.showSelectedLabels$2] = showSelectedLabels;
    this[S$0.showUnselectedLabels$2] = showUnselectedLabels;
    if (!(colorTween !== null)) dart.assertFailed(null, I[96], 666, 15, "colorTween != null");
    if (!(animation !== null)) dart.assertFailed(null, I[96], 667, 15, "animation != null");
    if (!(item !== null)) dart.assertFailed(null, I[96], 668, 15, "item != null");
    if (!(selectedLabelStyle !== null)) dart.assertFailed(null, I[96], 669, 15, "selectedLabelStyle != null");
    if (!(unselectedLabelStyle !== null)) dart.assertFailed(null, I[96], 670, 15, "unselectedLabelStyle != null");
    if (!(showSelectedLabels !== null)) dart.assertFailed(null, I[96], 671, 15, "showSelectedLabels != null");
    if (!(showUnselectedLabels !== null)) dart.assertFailed(null, I[96], 672, 15, "showUnselectedLabels != null");
    bottom_navigation_bar._Label.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = bottom_navigation_bar._Label.prototype;
  dart.addTypeTests(bottom_navigation_bar._Label);
  dart.addTypeCaches(bottom_navigation_bar._Label);
  dart.setMethodSignature(bottom_navigation_bar._Label, () => ({
    __proto__: dart.getMethods(bottom_navigation_bar._Label.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(bottom_navigation_bar._Label, I[95]);
  dart.setFieldSignature(bottom_navigation_bar._Label, () => ({
    __proto__: dart.getFields(bottom_navigation_bar._Label.__proto__),
    colorTween: dart.finalFieldType(tween.ColorTween),
    animation: dart.finalFieldType(animation$.Animation$(core.double)),
    item: dart.finalFieldType(bottom_navigation_bar_item.BottomNavigationBarItem),
    selectedLabelStyle: dart.finalFieldType(text_style.TextStyle),
    unselectedLabelStyle: dart.finalFieldType(text_style.TextStyle),
    showSelectedLabels: dart.finalFieldType(core.bool),
    showUnselectedLabels: dart.finalFieldType(core.bool)
  }));
  const State_TickerProviderStateMixin$36$2 = class State_TickerProviderStateMixin extends framework.State$(bottom_navigation_bar.BottomNavigationBar) {};
  (State_TickerProviderStateMixin$36$2.new = function() {
    ticker_provider.TickerProviderStateMixin$(bottom_navigation_bar.BottomNavigationBar)[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36$2.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36$2.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36$2, ticker_provider.TickerProviderStateMixin$(bottom_navigation_bar.BottomNavigationBar));
  bottom_navigation_bar._BottomNavigationBarState = class _BottomNavigationBarState extends State_TickerProviderStateMixin$36$2 {
    get [S$0._animations]() {
      let t61;
      t61 = this[S$0.___BottomNavigationBarState__animations];
      return t61 == null ? dart.throw(new _internal.LateError.fieldNI("_animations")) : t61;
    }
    set [S$0._animations](library$32package$58flutter$47src$47material$47bottom_navigation_bar$46dart$58$58_animations$35param) {
      this[S$0.___BottomNavigationBarState__animations] = library$32package$58flutter$47src$47material$47bottom_navigation_bar$46dart$58$58_animations$35param;
    }
    [S$0._resetState$1]() {
      for (let controller of this[S$0._controllers]) {
        controller.dispose();
      }
      for (let circle of this[S$0._circles]) {
        circle.dispose();
      }
      this[S$0._circles].clear();
      this[S$0._controllers] = T$.ListOfAnimationController().generate(this.widget.items[S.$length], dart.fn(index => {
        let t61;
        t61 = new animation_controller.AnimationController.new({duration: theme$.kThemeAnimationDuration, vsync: this});
        return (() => {
          t61.addListener(dart.bind(this, S$0._rebuild$1));
          return t61;
        })();
      }, T$.intToAnimationController()));
      this[S$0._animations] = T$.ListOfCurvedAnimation().generate(this.widget.items[S.$length], dart.fn(index => new animations.CurvedAnimation.new({parent: this[S$0._controllers][S.$_get](index), curve: curves.Curves.fastOutSlowIn, reverseCurve: curves.Curves.fastOutSlowIn.flipped}), T$.intToCurvedAnimation()));
      this[S$0._controllers][S.$_get](this.widget.currentIndex).value = 1.0;
      this[S$0._backgroundColor] = this.widget.items[S.$_get](this.widget.currentIndex).backgroundColor;
    }
    get [S$0._effectiveType]() {
      let t61, t61$;
      t61$ = (t61 = this.widget.type, t61 == null ? bottom_navigation_bar_theme.BottomNavigationBarTheme.of(this.context).type : t61);
      return t61$ == null ? this.widget.items[S.$length] <= 3 ? bottom_navigation_bar.BottomNavigationBarType.fixed : bottom_navigation_bar.BottomNavigationBarType.shifting : t61$;
    }
    get [S$0._defaultShowUnselected]() {
      switch (this[S$0._effectiveType]) {
        case C[697] || CT.C697:
          {
            return false;
          }
        case C[696] || CT.C696:
          {
            return true;
          }
      }
    }
    initState() {
      super.initState();
      this[S$0._resetState$1]();
    }
    [S$0._rebuild$1]() {
      this.setState(dart.fn(() => {
      }, T$.VoidTovoid()));
    }
    dispose() {
      for (let controller of this[S$0._controllers]) {
        controller.dispose();
      }
      for (let circle of this[S$0._circles]) {
        circle.dispose();
      }
      super.dispose();
    }
    [S$0._evaluateFlex](animation) {
      return bottom_navigation_bar._BottomNavigationBarState._flexTween.evaluate(animation);
    }
    [S$0._pushCircle](index) {
      let t61;
      if (this.widget.items[S.$_get](index).backgroundColor != null) {
        this[S$0._circles].add((t61 = new bottom_navigation_bar._Circle.new({state: this, index: index, color: dart.nullCheck(this.widget.items[S.$_get](index).backgroundColor), vsync: this}), (() => {
          t61.controller.addStatusListener(dart.fn(status => {
            switch (status) {
              case C[105] || CT.C105:
                {
                  this.setState(dart.fn(() => {
                    let circle = this[S$0._circles].removeFirst();
                    this[S$0._backgroundColor] = circle.color;
                    circle.dispose();
                  }, T$.VoidTovoid()));
                  break;
                }
              case C[102] || CT.C102:
              case C[103] || CT.C103:
              case C[104] || CT.C104:
                {
                  break;
                }
            }
          }, T$.AnimationStatusTovoid()));
          return t61;
        })()));
      }
    }
    didUpdateWidget(oldWidget) {
      bottom_navigation_bar.BottomNavigationBar.as(oldWidget);
      super.didUpdateWidget(oldWidget);
      if (this.widget.items[S.$length] !== oldWidget.items[S.$length]) {
        this[S$0._resetState$1]();
        return;
      }
      if (this.widget.currentIndex !== oldWidget.currentIndex) {
        switch (this[S$0._effectiveType]) {
          case C[696] || CT.C696:
            {
              break;
            }
          case C[697] || CT.C697:
            {
              this[S$0._pushCircle](this.widget.currentIndex);
              break;
            }
        }
        this[S$0._controllers][S.$_get](oldWidget.currentIndex).reverse();
        this[S$0._controllers][S.$_get](this.widget.currentIndex).forward();
      } else {
        if (!dart.equals(this[S$0._backgroundColor], this.widget.items[S.$_get](this.widget.currentIndex).backgroundColor)) {
          this[S$0._backgroundColor] = this.widget.items[S.$_get](this.widget.currentIndex).backgroundColor;
        }
      }
    }
    static _effectiveTextStyle(textStyle, fontSize) {
      textStyle == null ? textStyle = C[732] || CT.C732 : null;
      return textStyle.fontSize == null ? textStyle.copyWith({fontSize: fontSize}) : textStyle;
    }
    [S$0._createTiles](layout) {
      let t61, t61$, t61$0, t61$1, t61$2, t61$3, t61$4, t61$5, t61$6, t61$7, t61$8, t63, t62, t62$, t62$0, t62$1, t62$2, t62$3, t62$4, t62$5, t62$6, t62$7;
      let localizations = material_localizations.MaterialLocalizations.of(this.context);
      if (!(localizations !== null)) dart.assertFailed(null, I[96], 915, 12, "localizations != null");
      let themeData = theme$.Theme.of(this.context);
      let bottomTheme = bottom_navigation_bar_theme.BottomNavigationBarTheme.of(this.context);
      let effectiveSelectedLabelStyle = bottom_navigation_bar._BottomNavigationBarState._effectiveTextStyle((t61 = this.widget.selectedLabelStyle, t61 == null ? bottomTheme.selectedLabelStyle : t61), this.widget.selectedFontSize);
      let effectiveUnselectedLabelStyle = bottom_navigation_bar._BottomNavigationBarState._effectiveTextStyle((t61$ = this.widget.unselectedLabelStyle, t61$ == null ? bottomTheme.unselectedLabelStyle : t61$), this.widget.unselectedFontSize);
      let themeColor = null;
      switch (themeData.brightness) {
        case C[551] || CT.C551:
          {
            themeColor = themeData.colorScheme.primary;
            break;
          }
        case C[550] || CT.C550:
          {
            themeColor = themeData.colorScheme.secondary;
            break;
          }
      }
      let colorTween = null;
      switch (this[S$0._effectiveType]) {
        case C[696] || CT.C696:
          {
            colorTween = new tween.ColorTween.new({begin: (t61$1 = (t61$0 = this.widget.unselectedItemColor, t61$0 == null ? bottomTheme.unselectedItemColor : t61$0), t61$1 == null ? themeData.unselectedWidgetColor : t61$1), end: (t61$4 = (t61$3 = (t61$2 = this.widget.selectedItemColor, t61$2 == null ? bottomTheme.selectedItemColor : t61$2), t61$3 == null ? this.widget.fixedColor : t61$3), t61$4 == null ? themeColor : t61$4)});
            break;
          }
        case C[697] || CT.C697:
          {
            colorTween = new tween.ColorTween.new({begin: (t61$6 = (t61$5 = this.widget.unselectedItemColor, t61$5 == null ? bottomTheme.unselectedItemColor : t61$5), t61$6 == null ? themeData.colorScheme.surface : t61$6), end: (t61$8 = (t61$7 = this.widget.selectedItemColor, t61$7 == null ? bottomTheme.selectedItemColor : t61$7), t61$8 == null ? themeData.colorScheme.surface : t61$8)});
            break;
          }
      }
      let tiles = T$.JSArrayOfWidget().of([]);
      for (let i = 0; i < this.widget.items[S.$length]; i = i + 1) {
        let states = (() => {
          let t61 = T$.LinkedHashSetOfMaterialState().new();
          if (i === this.widget.currentIndex) t61.add(material_state.MaterialState.selected);
          return t61;
        })();
        let effectiveMouseCursor = (t62$ = (t62 = material_state.MaterialStateProperty.resolveAs(T$.MouseCursorN(), this.widget.mouseCursor, states), t62 == null ? (t63 = bottomTheme.mouseCursor, t63 == null ? null : t63.resolve(states)) : t62), t62$ == null ? material_state.MaterialStateMouseCursor.clickable.resolve(states) : t62$);
        tiles[S.$add](new bottom_navigation_bar._BottomNavigationTile.new(this[S$0._effectiveType], this.widget.items[S.$_get](i), this[S$0._animations][S.$_get](i), this.widget.iconSize, {selectedIconTheme: (t62$0 = this.widget.selectedIconTheme, t62$0 == null ? bottomTheme.selectedIconTheme : t62$0), unselectedIconTheme: (t62$1 = this.widget.unselectedIconTheme, t62$1 == null ? bottomTheme.unselectedIconTheme : t62$1), selectedLabelStyle: effectiveSelectedLabelStyle, unselectedLabelStyle: effectiveUnselectedLabelStyle, enableFeedback: (t62$3 = (t62$2 = this.widget.enableFeedback, t62$2 == null ? bottomTheme.enableFeedback : t62$2), t62$3 == null ? true : t62$3), onTap: dart.fn(() => {
            let t62;
            t62 = this.widget.onTap;
            t62 == null ? null : t62(i);
          }, T$.VoidTovoid()), colorTween: colorTween, flex: this[S$0._evaluateFlex](this[S$0._animations][S.$_get](i)), selected: i === this.widget.currentIndex, showSelectedLabels: (t62$5 = (t62$4 = this.widget.showSelectedLabels, t62$4 == null ? bottomTheme.showSelectedLabels : t62$4), t62$5 == null ? true : t62$5), showUnselectedLabels: (t62$7 = (t62$6 = this.widget.showUnselectedLabels, t62$6 == null ? bottomTheme.showUnselectedLabels : t62$6), t62$7 == null ? this[S$0._defaultShowUnselected] : t62$7), indexLabel: localizations.tabLabel({tabIndex: i + 1, tabCount: this.widget.items[S.$length]}), mouseCursor: effectiveMouseCursor, layout: layout, $creationLocationd_0dea112b090073317d4: C[733] || CT.C733}));
      }
      return tiles;
    }
    build(context) {
      let t62, t62$, t62$0, t62$1, t62$2;
      if (!debug.debugCheckHasDirectionality(context)) dart.assertFailed(null, I[96], 1004, 12, "debugCheckHasDirectionality(context)");
      if (!debug$1.debugCheckHasMaterialLocalizations(context)) dart.assertFailed(null, I[96], 1005, 12, "debugCheckHasMaterialLocalizations(context)");
      if (!debug.debugCheckHasMediaQuery(context)) dart.assertFailed(null, I[96], 1006, 12, "debugCheckHasMediaQuery(context)");
      if (!(overlay$.Overlay.of(context, {debugRequiredFor: this.widget}) != null)) dart.assertFailed(null, I[96], 1007, 12, "Overlay.of(context, debugRequiredFor: widget) != null");
      let bottomTheme = bottom_navigation_bar_theme.BottomNavigationBarTheme.of(context);
      let layout = (t62$ = (t62 = this.widget.landscapeLayout, t62 == null ? bottomTheme.landscapeLayout : t62), t62$ == null ? bottom_navigation_bar.BottomNavigationBarLandscapeLayout.spread : t62$);
      let additionalBottomPadding = media_query.MediaQuery.of(context).padding.bottom;
      let backgroundColor = null;
      switch (this[S$0._effectiveType]) {
        case C[696] || CT.C696:
          {
            backgroundColor = (t62$0 = this.widget.backgroundColor, t62$0 == null ? bottomTheme.backgroundColor : t62$0);
            break;
          }
        case C[697] || CT.C697:
          {
            backgroundColor = this[S$0._backgroundColor];
            break;
          }
      }
      return new basic.Semantics.new({explicitChildNodes: true, child: new bottom_navigation_bar._Bar.new({layout: layout, elevation: (t62$2 = (t62$1 = this.widget.elevation, t62$1 == null ? bottomTheme.elevation : t62$1), t62$2 == null ? 8.0 : t62$2), color: backgroundColor, child: new basic.ConstrainedBox.new({constraints: new box$.BoxConstraints.new({minHeight: 56 + additionalBottomPadding}), child: new basic.CustomPaint.new({painter: new bottom_navigation_bar._RadialPainter.new({circles: this[S$0._circles][S.$toList](), textDirection: basic.Directionality.of(context)}), child: new material.Material.new({type: material.MaterialType.transparency, child: new basic.Padding.new({padding: new edge_insets.EdgeInsets.only({bottom: additionalBottomPadding}), child: media_query.MediaQuery.removePadding({context: context, removeBottom: true, child: text$.DefaultTextStyle.merge({overflow: text_painter.TextOverflow.ellipsis, child: new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.spaceBetween, children: this[S$0._createTiles](layout), $creationLocationd_0dea112b090073317d4: C[734] || CT.C734})}), $creationLocationd_0dea112b090073317d4: C[735] || CT.C735}), $creationLocationd_0dea112b090073317d4: C[736] || CT.C736}), $creationLocationd_0dea112b090073317d4: C[737] || CT.C737}), $creationLocationd_0dea112b090073317d4: C[738] || CT.C738}), $creationLocationd_0dea112b090073317d4: C[739] || CT.C739}), $creationLocationd_0dea112b090073317d4: C[740] || CT.C740}), $creationLocationd_0dea112b090073317d4: C[741] || CT.C741});
    }
    static ['_#new#tearOff']() {
      return new bottom_navigation_bar._BottomNavigationBarState.new();
    }
  };
  (bottom_navigation_bar._BottomNavigationBarState.new = function() {
    this[S$0._controllers] = T$.JSArrayOfAnimationController().of([]);
    this[S$0.___BottomNavigationBarState__animations] = null;
    this[S$0._circles] = new (T$.ListQueueOf_Circle()).new();
    this[S$0._backgroundColor] = null;
    bottom_navigation_bar._BottomNavigationBarState.__proto__.new.call(this);
    ;
  }).prototype = bottom_navigation_bar._BottomNavigationBarState.prototype;
  dart.addTypeTests(bottom_navigation_bar._BottomNavigationBarState);
  dart.addTypeCaches(bottom_navigation_bar._BottomNavigationBarState);
  dart.setMethodSignature(bottom_navigation_bar._BottomNavigationBarState, () => ({
    __proto__: dart.getMethods(bottom_navigation_bar._BottomNavigationBarState.__proto__),
    [S$0._resetState$1]: dart.fnType(dart.void, []),
    [S$0._rebuild$1]: dart.fnType(dart.void, []),
    [S$0._evaluateFlex]: dart.fnType(core.double, [animation$.Animation$(core.double)]),
    [S$0._pushCircle]: dart.fnType(dart.void, [core.int]),
    [S$0._createTiles]: dart.fnType(core.List$(framework.Widget), [bottom_navigation_bar.BottomNavigationBarLandscapeLayout]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setStaticMethodSignature(bottom_navigation_bar._BottomNavigationBarState, () => ['_effectiveTextStyle']);
  dart.setGetterSignature(bottom_navigation_bar._BottomNavigationBarState, () => ({
    __proto__: dart.getGetters(bottom_navigation_bar._BottomNavigationBarState.__proto__),
    [S$0._animations]: core.List$(animations.CurvedAnimation),
    [S$0._effectiveType]: bottom_navigation_bar.BottomNavigationBarType,
    [S$0._defaultShowUnselected]: core.bool
  }));
  dart.setSetterSignature(bottom_navigation_bar._BottomNavigationBarState, () => ({
    __proto__: dart.getSetters(bottom_navigation_bar._BottomNavigationBarState.__proto__),
    [S$0._animations]: core.List$(animations.CurvedAnimation)
  }));
  dart.setLibraryUri(bottom_navigation_bar._BottomNavigationBarState, I[95]);
  dart.setFieldSignature(bottom_navigation_bar._BottomNavigationBarState, () => ({
    __proto__: dart.getFields(bottom_navigation_bar._BottomNavigationBarState.__proto__),
    [S$0._controllers]: dart.fieldType(core.List$(animation_controller.AnimationController)),
    [S$0.___BottomNavigationBarState__animations]: dart.fieldType(dart.nullable(core.List$(animations.CurvedAnimation))),
    [S$0._circles]: dart.finalFieldType(collection.Queue$(bottom_navigation_bar._Circle)),
    [S$0._backgroundColor]: dart.fieldType(dart.nullable(ui.Color))
  }));
  dart.setStaticFieldSignature(bottom_navigation_bar._BottomNavigationBarState, () => ['_flexTween']);
  dart.defineLazy(bottom_navigation_bar._BottomNavigationBarState, {
    /*bottom_navigation_bar._BottomNavigationBarState._flexTween*/get _flexTween() {
      return new (T$.TweenOfdouble()).new({begin: 1.0, end: 1.5});
    }
  }, false);
  bottom_navigation_bar._Bar = class _Bar extends framework.StatelessWidget {
    get child() {
      return this[S$0.child$20];
    }
    set child(value) {
      super.child = value;
    }
    get layout() {
      return this[S$0.layout$2];
    }
    set layout(value) {
      super.layout = value;
    }
    get elevation() {
      return this[S$0.elevation$17];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get color() {
      return this[S$0.color$10];
    }
    set color(value) {
      super.color = value;
    }
    static ['_#new#tearOff'](opts) {
      let child = opts && 'child' in opts ? opts.child : null;
      let layout = opts && 'layout' in opts ? opts.layout : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let color = opts && 'color' in opts ? opts.color : null;
      return new bottom_navigation_bar._Bar.new({child: child, layout: layout, elevation: elevation, color: color, $creationLocationd_0dea112b090073317d4: C[742] || CT.C742});
    }
    build(context) {
      let data = media_query.MediaQuery.of(context);
      let alignedChild = this.child;
      if (data.orientation === media_query.Orientation.landscape && this.layout === bottom_navigation_bar.BottomNavigationBarLandscapeLayout.centered) {
        alignedChild = new basic.Align.new({alignment: alignment.Alignment.bottomCenter, heightFactor: 1.0, child: new basic.SizedBox.new({width: data.size.height, child: this.child, $creationLocationd_0dea112b090073317d4: C[743] || CT.C743}), $creationLocationd_0dea112b090073317d4: C[744] || CT.C744});
      }
      return new material.Material.new({elevation: this.elevation, color: this.color, child: alignedChild, $creationLocationd_0dea112b090073317d4: C[745] || CT.C745});
    }
  };
  (bottom_navigation_bar._Bar.new = function(opts) {
    let child = opts && 'child' in opts ? opts.child : null;
    let layout = opts && 'layout' in opts ? opts.layout : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$0.child$20] = child;
    this[S$0.layout$2] = layout;
    this[S$0.elevation$17] = elevation;
    this[S$0.color$10] = color;
    bottom_navigation_bar._Bar.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = bottom_navigation_bar._Bar.prototype;
  dart.addTypeTests(bottom_navigation_bar._Bar);
  dart.addTypeCaches(bottom_navigation_bar._Bar);
  dart.setMethodSignature(bottom_navigation_bar._Bar, () => ({
    __proto__: dart.getMethods(bottom_navigation_bar._Bar.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(bottom_navigation_bar._Bar, I[95]);
  dart.setFieldSignature(bottom_navigation_bar._Bar, () => ({
    __proto__: dart.getFields(bottom_navigation_bar._Bar.__proto__),
    child: dart.finalFieldType(framework.Widget),
    layout: dart.finalFieldType(bottom_navigation_bar.BottomNavigationBarLandscapeLayout),
    elevation: dart.finalFieldType(core.double),
    color: dart.finalFieldType(dart.nullable(ui.Color))
  }));
  bottom_navigation_bar._Circle = class _Circle extends core.Object {
    static ['_#new#tearOff'](opts) {
      let state = opts && 'state' in opts ? opts.state : null;
      let index = opts && 'index' in opts ? opts.index : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let vsync = opts && 'vsync' in opts ? opts.vsync : null;
      return new bottom_navigation_bar._Circle.new({state: state, index: index, color: color, vsync: vsync});
    }
    get controller() {
      let t62;
      t62 = this[S$0.___Circle_controller];
      return t62 == null ? dart.throw(new _internal.LateError.fieldNI("controller")) : t62;
    }
    set controller(controller$35param) {
      this[S$0.___Circle_controller] = controller$35param;
    }
    get animation() {
      let t62;
      t62 = this[S$0.___Circle_animation];
      return t62 == null ? dart.throw(new _internal.LateError.fieldNI("animation")) : t62;
    }
    set animation(animation$35param) {
      this[S$0.___Circle_animation] = animation$35param;
    }
    get horizontalLeadingOffset() {
      const weightSum = animations => {
        return animations[S.$map](core.double, dart.bind(this.state, S$0._evaluateFlex))[S$0.$fold](core.double, 0.0, dart.fn((sum, value) => sum + value, T$.doubleAnddoubleTodouble()));
      };
      dart.fn(weightSum, T$.IterableOfAnimationOfdoubleTodouble());
      let allWeights = weightSum(this.state[S$0._animations]);
      let leadingWeights = weightSum(this.state[S$0._animations][S$0.$sublist](0, this.index));
      return (leadingWeights + this.state[S$0._evaluateFlex](this.state[S$0._animations][S.$_get](this.index)) / 2.0) / allWeights;
    }
    dispose() {
      this.controller.dispose();
    }
  };
  (bottom_navigation_bar._Circle.new = function(opts) {
    let state = opts && 'state' in opts ? opts.state : null;
    let index = opts && 'index' in opts ? opts.index : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let vsync = opts && 'vsync' in opts ? opts.vsync : null;
    this[S$0.___Circle_controller] = null;
    this[S$0.___Circle_animation] = null;
    this.state = state;
    this.index = index;
    this.color = color;
    if (!(state !== null)) dart.assertFailed(null, I[96], 1106, 15, "state != null");
    if (!(index !== null)) dart.assertFailed(null, I[96], 1107, 15, "index != null");
    if (!(color !== null)) dart.assertFailed(null, I[96], 1108, 15, "color != null");
    this.controller = new animation_controller.AnimationController.new({duration: theme$.kThemeAnimationDuration, vsync: vsync});
    this.animation = new animations.CurvedAnimation.new({parent: this.controller, curve: curves.Curves.fastOutSlowIn});
    this.controller.forward();
  }).prototype = bottom_navigation_bar._Circle.prototype;
  dart.addTypeTests(bottom_navigation_bar._Circle);
  dart.addTypeCaches(bottom_navigation_bar._Circle);
  dart.setMethodSignature(bottom_navigation_bar._Circle, () => ({
    __proto__: dart.getMethods(bottom_navigation_bar._Circle.__proto__),
    dispose: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(bottom_navigation_bar._Circle, () => ({
    __proto__: dart.getGetters(bottom_navigation_bar._Circle.__proto__),
    controller: animation_controller.AnimationController,
    animation: animations.CurvedAnimation,
    horizontalLeadingOffset: core.double
  }));
  dart.setSetterSignature(bottom_navigation_bar._Circle, () => ({
    __proto__: dart.getSetters(bottom_navigation_bar._Circle.__proto__),
    controller: animation_controller.AnimationController,
    animation: animations.CurvedAnimation
  }));
  dart.setLibraryUri(bottom_navigation_bar._Circle, I[95]);
  dart.setFieldSignature(bottom_navigation_bar._Circle, () => ({
    __proto__: dart.getFields(bottom_navigation_bar._Circle.__proto__),
    state: dart.finalFieldType(bottom_navigation_bar._BottomNavigationBarState),
    index: dart.finalFieldType(core.int),
    color: dart.finalFieldType(ui.Color),
    [S$0.___Circle_controller]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S$0.___Circle_animation]: dart.fieldType(dart.nullable(animations.CurvedAnimation))
  }));
  bottom_navigation_bar._RadialPainter = class _RadialPainter extends custom_paint.CustomPainter {
    static ['_#new#tearOff'](opts) {
      let circles = opts && 'circles' in opts ? opts.circles : null;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      return new bottom_navigation_bar._RadialPainter.new({circles: circles, textDirection: textDirection});
    }
    static _maxRadius(center, size) {
      let maxX = math.max(core.double, center.dx, size.width - center.dx);
      let maxY = math.max(core.double, center.dy, size.height - center.dy);
      return math.sqrt(maxX * maxX + maxY * maxY);
    }
    shouldRepaint(oldPainter) {
      bottom_navigation_bar._RadialPainter.as(oldPainter);
      if (this.textDirection !== oldPainter.textDirection) {
        return true;
      }
      if (this.circles[S.$_equals](oldPainter.circles)) {
        return false;
      }
      if (this.circles[S.$length] !== oldPainter.circles[S.$length]) {
        return true;
      }
      for (let i = 0; i < this.circles[S.$length]; i = i + 1) {
        if (!this.circles[S.$_get](i)[S.$_equals](oldPainter.circles[S.$_get](i))) {
          return true;
        }
      }
      return false;
    }
    paint(canvas, size) {
      let t62;
      for (let circle of this.circles) {
        let paint = (t62 = ui.Paint.new(), (() => {
          t62.color = circle.color;
          return t62;
        })());
        let rect = new ui.Rect.fromLTWH(0.0, 0.0, size.width, size.height);
        canvas.clipRect(rect);
        let leftFraction = null;
        switch (this.textDirection) {
          case C[154] || CT.C154:
            {
              leftFraction = 1.0 - circle.horizontalLeadingOffset;
              break;
            }
          case C[155] || CT.C155:
            {
              leftFraction = circle.horizontalLeadingOffset;
              break;
            }
        }
        let center = new ui.Offset.new(leftFraction * size.width, size.height / 2.0);
        let radiusTween = new (T$.TweenOfdouble()).new({begin: 0.0, end: bottom_navigation_bar._RadialPainter._maxRadius(center, size)});
        canvas.drawCircle(center, radiusTween.transform(circle.animation.value), paint);
      }
    }
  };
  (bottom_navigation_bar._RadialPainter.new = function(opts) {
    let circles = opts && 'circles' in opts ? opts.circles : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    this.circles = circles;
    this.textDirection = textDirection;
    if (!(circles !== null)) dart.assertFailed(null, I[96], 1151, 15, "circles != null");
    if (!(textDirection !== null)) dart.assertFailed(null, I[96], 1152, 15, "textDirection != null");
    bottom_navigation_bar._RadialPainter.__proto__.new.call(this);
    ;
  }).prototype = bottom_navigation_bar._RadialPainter.prototype;
  dart.addTypeTests(bottom_navigation_bar._RadialPainter);
  dart.addTypeCaches(bottom_navigation_bar._RadialPainter);
  dart.setMethodSignature(bottom_navigation_bar._RadialPainter, () => ({
    __proto__: dart.getMethods(bottom_navigation_bar._RadialPainter.__proto__),
    shouldRepaint: dart.fnType(core.bool, [dart.nullable(core.Object)]),
    paint: dart.fnType(dart.void, [ui.Canvas, ui.Size])
  }));
  dart.setStaticMethodSignature(bottom_navigation_bar._RadialPainter, () => ['_maxRadius']);
  dart.setLibraryUri(bottom_navigation_bar._RadialPainter, I[95]);
  dart.setFieldSignature(bottom_navigation_bar._RadialPainter, () => ({
    __proto__: dart.getFields(bottom_navigation_bar._RadialPainter.__proto__),
    circles: dart.finalFieldType(core.List$(bottom_navigation_bar._Circle)),
    textDirection: dart.finalFieldType(ui.TextDirection)
  }));
  const Object_Diagnosticable$36$27 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$27.new = function() {
  }).prototype = Object_Diagnosticable$36$27.prototype;
  dart.applyMixin(Object_Diagnosticable$36$27, diagnostics.Diagnosticable);
  bottom_navigation_bar_theme.BottomNavigationBarThemeData = class BottomNavigationBarThemeData extends Object_Diagnosticable$36$27 {
    get backgroundColor() {
      return this[S$0.backgroundColor$14];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get elevation() {
      return this[S$0.elevation$18];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get selectedIconTheme() {
      return this[S$0.selectedIconTheme$5];
    }
    set selectedIconTheme(value) {
      super.selectedIconTheme = value;
    }
    get unselectedIconTheme() {
      return this[S$0.unselectedIconTheme$5];
    }
    set unselectedIconTheme(value) {
      super.unselectedIconTheme = value;
    }
    get selectedItemColor() {
      return this[S$0.selectedItemColor$1];
    }
    set selectedItemColor(value) {
      super.selectedItemColor = value;
    }
    get unselectedItemColor() {
      return this[S$0.unselectedItemColor$1];
    }
    set unselectedItemColor(value) {
      super.unselectedItemColor = value;
    }
    get selectedLabelStyle() {
      return this[S$0.selectedLabelStyle$3];
    }
    set selectedLabelStyle(value) {
      super.selectedLabelStyle = value;
    }
    get unselectedLabelStyle() {
      return this[S$0.unselectedLabelStyle$6];
    }
    set unselectedLabelStyle(value) {
      super.unselectedLabelStyle = value;
    }
    get showSelectedLabels() {
      return this[S$0.showSelectedLabels$3];
    }
    set showSelectedLabels(value) {
      super.showSelectedLabels = value;
    }
    get showUnselectedLabels() {
      return this[S$0.showUnselectedLabels$3];
    }
    set showUnselectedLabels(value) {
      super.showUnselectedLabels = value;
    }
    get type() {
      return this[S$0.type$2];
    }
    set type(value) {
      super.type = value;
    }
    get enableFeedback() {
      return this[S$0.enableFeedback$11];
    }
    set enableFeedback(value) {
      super.enableFeedback = value;
    }
    get landscapeLayout() {
      return this[S$0.landscapeLayout$1];
    }
    set landscapeLayout(value) {
      super.landscapeLayout = value;
    }
    get mouseCursor() {
      return this[S$0.mouseCursor$14];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    static ['_#new#tearOff'](opts) {
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let selectedIconTheme = opts && 'selectedIconTheme' in opts ? opts.selectedIconTheme : null;
      let unselectedIconTheme = opts && 'unselectedIconTheme' in opts ? opts.unselectedIconTheme : null;
      let selectedItemColor = opts && 'selectedItemColor' in opts ? opts.selectedItemColor : null;
      let unselectedItemColor = opts && 'unselectedItemColor' in opts ? opts.unselectedItemColor : null;
      let selectedLabelStyle = opts && 'selectedLabelStyle' in opts ? opts.selectedLabelStyle : null;
      let unselectedLabelStyle = opts && 'unselectedLabelStyle' in opts ? opts.unselectedLabelStyle : null;
      let showSelectedLabels = opts && 'showSelectedLabels' in opts ? opts.showSelectedLabels : null;
      let showUnselectedLabels = opts && 'showUnselectedLabels' in opts ? opts.showUnselectedLabels : null;
      let type = opts && 'type' in opts ? opts.type : null;
      let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
      let landscapeLayout = opts && 'landscapeLayout' in opts ? opts.landscapeLayout : null;
      let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
      return new bottom_navigation_bar_theme.BottomNavigationBarThemeData.new({backgroundColor: backgroundColor, elevation: elevation, selectedIconTheme: selectedIconTheme, unselectedIconTheme: unselectedIconTheme, selectedItemColor: selectedItemColor, unselectedItemColor: unselectedItemColor, selectedLabelStyle: selectedLabelStyle, unselectedLabelStyle: unselectedLabelStyle, showSelectedLabels: showSelectedLabels, showUnselectedLabels: showUnselectedLabels, type: type, enableFeedback: enableFeedback, landscapeLayout: landscapeLayout, mouseCursor: mouseCursor});
    }
    copyWith(opts) {
      let t62, t62$, t62$0, t62$1, t62$2, t62$3, t62$4, t62$5, t62$6, t62$7, t62$8, t62$9, t62$10, t62$11;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let selectedIconTheme = opts && 'selectedIconTheme' in opts ? opts.selectedIconTheme : null;
      let unselectedIconTheme = opts && 'unselectedIconTheme' in opts ? opts.unselectedIconTheme : null;
      let selectedItemColor = opts && 'selectedItemColor' in opts ? opts.selectedItemColor : null;
      let unselectedItemColor = opts && 'unselectedItemColor' in opts ? opts.unselectedItemColor : null;
      let selectedLabelStyle = opts && 'selectedLabelStyle' in opts ? opts.selectedLabelStyle : null;
      let unselectedLabelStyle = opts && 'unselectedLabelStyle' in opts ? opts.unselectedLabelStyle : null;
      let showSelectedLabels = opts && 'showSelectedLabels' in opts ? opts.showSelectedLabels : null;
      let showUnselectedLabels = opts && 'showUnselectedLabels' in opts ? opts.showUnselectedLabels : null;
      let type = opts && 'type' in opts ? opts.type : null;
      let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
      let landscapeLayout = opts && 'landscapeLayout' in opts ? opts.landscapeLayout : null;
      let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
      return new bottom_navigation_bar_theme.BottomNavigationBarThemeData.new({backgroundColor: (t62 = backgroundColor, t62 == null ? this.backgroundColor : t62), elevation: (t62$ = elevation, t62$ == null ? this.elevation : t62$), selectedIconTheme: (t62$0 = selectedIconTheme, t62$0 == null ? this.selectedIconTheme : t62$0), unselectedIconTheme: (t62$1 = unselectedIconTheme, t62$1 == null ? this.unselectedIconTheme : t62$1), selectedItemColor: (t62$2 = selectedItemColor, t62$2 == null ? this.selectedItemColor : t62$2), unselectedItemColor: (t62$3 = unselectedItemColor, t62$3 == null ? this.unselectedItemColor : t62$3), selectedLabelStyle: (t62$4 = selectedLabelStyle, t62$4 == null ? this.selectedLabelStyle : t62$4), unselectedLabelStyle: (t62$5 = unselectedLabelStyle, t62$5 == null ? this.unselectedLabelStyle : t62$5), showSelectedLabels: (t62$6 = showSelectedLabels, t62$6 == null ? this.showSelectedLabels : t62$6), showUnselectedLabels: (t62$7 = showUnselectedLabels, t62$7 == null ? this.showUnselectedLabels : t62$7), type: (t62$8 = type, t62$8 == null ? this.type : t62$8), enableFeedback: (t62$9 = enableFeedback, t62$9 == null ? this.enableFeedback : t62$9), landscapeLayout: (t62$10 = landscapeLayout, t62$10 == null ? this.landscapeLayout : t62$10), mouseCursor: (t62$11 = mouseCursor, t62$11 == null ? this.mouseCursor : t62$11)});
    }
    static lerp(a, b, t) {
      let t62, t62$, t62$0, t62$1, t62$2, t62$3, t62$4, t62$5, t62$6, t62$7, t62$8, t62$9, t62$10, t62$11, t62$12, t62$13, t62$14, t62$15, t62$16, t62$17, t62$18, t62$19, t62$20, t62$21, t62$22, t62$23, t62$24, t62$25;
      if (!(t !== null)) dart.assertFailed(null, I[97], 174, 12, "t != null");
      return new bottom_navigation_bar_theme.BottomNavigationBarThemeData.new({backgroundColor: ui.Color.lerp((t62 = a, t62 == null ? null : t62.backgroundColor), (t62$ = b, t62$ == null ? null : t62$.backgroundColor), t), elevation: ui.lerpDouble((t62$0 = a, t62$0 == null ? null : t62$0.elevation), (t62$1 = b, t62$1 == null ? null : t62$1.elevation), t), selectedIconTheme: icon_theme_data.IconThemeData.lerp((t62$2 = a, t62$2 == null ? null : t62$2.selectedIconTheme), (t62$3 = b, t62$3 == null ? null : t62$3.selectedIconTheme), t), unselectedIconTheme: icon_theme_data.IconThemeData.lerp((t62$4 = a, t62$4 == null ? null : t62$4.unselectedIconTheme), (t62$5 = b, t62$5 == null ? null : t62$5.unselectedIconTheme), t), selectedItemColor: ui.Color.lerp((t62$6 = a, t62$6 == null ? null : t62$6.selectedItemColor), (t62$7 = b, t62$7 == null ? null : t62$7.selectedItemColor), t), unselectedItemColor: ui.Color.lerp((t62$8 = a, t62$8 == null ? null : t62$8.unselectedItemColor), (t62$9 = b, t62$9 == null ? null : t62$9.unselectedItemColor), t), selectedLabelStyle: text_style.TextStyle.lerp((t62$10 = a, t62$10 == null ? null : t62$10.selectedLabelStyle), (t62$11 = b, t62$11 == null ? null : t62$11.selectedLabelStyle), t), unselectedLabelStyle: text_style.TextStyle.lerp((t62$12 = a, t62$12 == null ? null : t62$12.unselectedLabelStyle), (t62$13 = b, t62$13 == null ? null : t62$13.unselectedLabelStyle), t), showSelectedLabels: t < 0.5 ? (t62$14 = a, t62$14 == null ? null : t62$14.showSelectedLabels) : (t62$15 = b, t62$15 == null ? null : t62$15.showSelectedLabels), showUnselectedLabels: t < 0.5 ? (t62$16 = a, t62$16 == null ? null : t62$16.showUnselectedLabels) : (t62$17 = b, t62$17 == null ? null : t62$17.showUnselectedLabels), type: t < 0.5 ? (t62$18 = a, t62$18 == null ? null : t62$18.type) : (t62$19 = b, t62$19 == null ? null : t62$19.type), enableFeedback: t < 0.5 ? (t62$20 = a, t62$20 == null ? null : t62$20.enableFeedback) : (t62$21 = b, t62$21 == null ? null : t62$21.enableFeedback), landscapeLayout: t < 0.5 ? (t62$22 = a, t62$22 == null ? null : t62$22.landscapeLayout) : (t62$23 = b, t62$23 == null ? null : t62$23.landscapeLayout), mouseCursor: t < 0.5 ? (t62$24 = a, t62$24 == null ? null : t62$24.mouseCursor) : (t62$25 = b, t62$25 == null ? null : t62$25.mouseCursor)});
    }
    get hashCode() {
      return core.Object.hash(this.backgroundColor, this.elevation, this.selectedIconTheme, this.unselectedIconTheme, this.selectedItemColor, this.unselectedItemColor, this.selectedLabelStyle, this.unselectedLabelStyle, this.showSelectedLabels, this.showUnselectedLabels, this.type, this.enableFeedback, this.landscapeLayout, this.mouseCursor);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      if (!other[S.$runtimeType]._equals(this[S.$runtimeType])) {
        return false;
      }
      return bottom_navigation_bar_theme.BottomNavigationBarThemeData.is(other) && dart.equals(other.backgroundColor, this.backgroundColor) && other.elevation == this.elevation && dart.equals(other.selectedIconTheme, this.selectedIconTheme) && dart.equals(other.unselectedIconTheme, this.unselectedIconTheme) && dart.equals(other.selectedItemColor, this.selectedItemColor) && dart.equals(other.unselectedItemColor, this.unselectedItemColor) && dart.equals(other.selectedLabelStyle, this.selectedLabelStyle) && dart.equals(other.unselectedLabelStyle, this.unselectedLabelStyle) && other.showSelectedLabels == this.showSelectedLabels && other.showUnselectedLabels == this.showUnselectedLabels && other.type == this.type && other.enableFeedback == this.enableFeedback && other.landscapeLayout == this.landscapeLayout && dart.equals(other.mouseCursor, this.mouseCursor);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new colors.ColorProperty.new("backgroundColor", this.backgroundColor, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("elevation", this.elevation, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfIconThemeData()).new("selectedIconTheme", this.selectedIconTheme, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfIconThemeData()).new("unselectedIconTheme", this.unselectedIconTheme, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("selectedItemColor", this.selectedItemColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("unselectedItemColor", this.unselectedItemColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("selectedLabelStyle", this.selectedLabelStyle, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("unselectedLabelStyle", this.unselectedLabelStyle, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("showSelectedLabels", this.showSelectedLabels, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("showUnselectedLabels", this.showUnselectedLabels, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfBottomNavigationBarType()).new("type", this.type, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("enableFeedback", this.enableFeedback, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfBottomNavigationBarLandscapeLayout()).new("landscapeLayout", this.landscapeLayout, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfMouseCursorN()).new("mouseCursor", this.mouseCursor, {defaultValue: null}));
    }
  };
  (bottom_navigation_bar_theme.BottomNavigationBarThemeData.new = function(opts) {
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let selectedIconTheme = opts && 'selectedIconTheme' in opts ? opts.selectedIconTheme : null;
    let unselectedIconTheme = opts && 'unselectedIconTheme' in opts ? opts.unselectedIconTheme : null;
    let selectedItemColor = opts && 'selectedItemColor' in opts ? opts.selectedItemColor : null;
    let unselectedItemColor = opts && 'unselectedItemColor' in opts ? opts.unselectedItemColor : null;
    let selectedLabelStyle = opts && 'selectedLabelStyle' in opts ? opts.selectedLabelStyle : null;
    let unselectedLabelStyle = opts && 'unselectedLabelStyle' in opts ? opts.unselectedLabelStyle : null;
    let showSelectedLabels = opts && 'showSelectedLabels' in opts ? opts.showSelectedLabels : null;
    let showUnselectedLabels = opts && 'showUnselectedLabels' in opts ? opts.showUnselectedLabels : null;
    let type = opts && 'type' in opts ? opts.type : null;
    let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
    let landscapeLayout = opts && 'landscapeLayout' in opts ? opts.landscapeLayout : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    this[S$0.backgroundColor$14] = backgroundColor;
    this[S$0.elevation$18] = elevation;
    this[S$0.selectedIconTheme$5] = selectedIconTheme;
    this[S$0.unselectedIconTheme$5] = unselectedIconTheme;
    this[S$0.selectedItemColor$1] = selectedItemColor;
    this[S$0.unselectedItemColor$1] = unselectedItemColor;
    this[S$0.selectedLabelStyle$3] = selectedLabelStyle;
    this[S$0.unselectedLabelStyle$6] = unselectedLabelStyle;
    this[S$0.showSelectedLabels$3] = showSelectedLabels;
    this[S$0.showUnselectedLabels$3] = showUnselectedLabels;
    this[S$0.type$2] = type;
    this[S$0.enableFeedback$11] = enableFeedback;
    this[S$0.landscapeLayout$1] = landscapeLayout;
    this[S$0.mouseCursor$14] = mouseCursor;
    ;
  }).prototype = bottom_navigation_bar_theme.BottomNavigationBarThemeData.prototype;
  dart.addTypeTests(bottom_navigation_bar_theme.BottomNavigationBarThemeData);
  dart.addTypeCaches(bottom_navigation_bar_theme.BottomNavigationBarThemeData);
  dart.setMethodSignature(bottom_navigation_bar_theme.BottomNavigationBarThemeData, () => ({
    __proto__: dart.getMethods(bottom_navigation_bar_theme.BottomNavigationBarThemeData.__proto__),
    copyWith: dart.fnType(bottom_navigation_bar_theme.BottomNavigationBarThemeData, [], {backgroundColor: dart.nullable(ui.Color), elevation: dart.nullable(core.double), enableFeedback: dart.nullable(core.bool), landscapeLayout: dart.nullable(bottom_navigation_bar.BottomNavigationBarLandscapeLayout), mouseCursor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(mouse_cursor.MouseCursor))), selectedIconTheme: dart.nullable(icon_theme_data.IconThemeData), selectedItemColor: dart.nullable(ui.Color), selectedLabelStyle: dart.nullable(text_style.TextStyle), showSelectedLabels: dart.nullable(core.bool), showUnselectedLabels: dart.nullable(core.bool), type: dart.nullable(bottom_navigation_bar.BottomNavigationBarType), unselectedIconTheme: dart.nullable(icon_theme_data.IconThemeData), unselectedItemColor: dart.nullable(ui.Color), unselectedLabelStyle: dart.nullable(text_style.TextStyle)}, {})
  }));
  dart.setStaticMethodSignature(bottom_navigation_bar_theme.BottomNavigationBarThemeData, () => ['lerp']);
  dart.setLibraryUri(bottom_navigation_bar_theme.BottomNavigationBarThemeData, I[98]);
  dart.setFieldSignature(bottom_navigation_bar_theme.BottomNavigationBarThemeData, () => ({
    __proto__: dart.getFields(bottom_navigation_bar_theme.BottomNavigationBarThemeData.__proto__),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    selectedIconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData)),
    unselectedIconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData)),
    selectedItemColor: dart.finalFieldType(dart.nullable(ui.Color)),
    unselectedItemColor: dart.finalFieldType(dart.nullable(ui.Color)),
    selectedLabelStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    unselectedLabelStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    showSelectedLabels: dart.finalFieldType(dart.nullable(core.bool)),
    showUnselectedLabels: dart.finalFieldType(dart.nullable(core.bool)),
    type: dart.finalFieldType(dart.nullable(bottom_navigation_bar.BottomNavigationBarType)),
    enableFeedback: dart.finalFieldType(dart.nullable(core.bool)),
    landscapeLayout: dart.finalFieldType(dart.nullable(bottom_navigation_bar.BottomNavigationBarLandscapeLayout)),
    mouseCursor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(mouse_cursor.MouseCursor))))
  }));
  dart.defineExtensionMethods(bottom_navigation_bar_theme.BottomNavigationBarThemeData, ['_equals']);
  dart.defineExtensionAccessors(bottom_navigation_bar_theme.BottomNavigationBarThemeData, ['hashCode']);
  bottom_navigation_bar_theme.BottomNavigationBarTheme = class BottomNavigationBarTheme extends framework.InheritedWidget {
    get data() {
      return this[S$0.data$21];
    }
    set data(value) {
      super.data = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let data = opts && 'data' in opts ? opts.data : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new bottom_navigation_bar_theme.BottomNavigationBarTheme.new({key: key, data: data, child: child, $creationLocationd_0dea112b090073317d4: C[746] || CT.C746});
    }
    static of(context) {
      let t62, t62$;
      let bottomNavTheme = context.dependOnInheritedWidgetOfExactType(bottom_navigation_bar_theme.BottomNavigationBarTheme);
      t62$ = (t62 = bottomNavTheme, t62 == null ? null : t62.data);
      return t62$ == null ? theme$.Theme.of(context).bottomNavigationBarTheme : t62$;
    }
    updateShouldNotify(oldWidget) {
      bottom_navigation_bar_theme.BottomNavigationBarTheme.as(oldWidget);
      return !this.data._equals(oldWidget.data);
    }
  };
  (bottom_navigation_bar_theme.BottomNavigationBarTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$0.data$21] = data;
    if (!(data !== null)) dart.assertFailed(null, I[97], 280, 15, "data != null");
    bottom_navigation_bar_theme.BottomNavigationBarTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = bottom_navigation_bar_theme.BottomNavigationBarTheme.prototype;
  dart.addTypeTests(bottom_navigation_bar_theme.BottomNavigationBarTheme);
  dart.addTypeCaches(bottom_navigation_bar_theme.BottomNavigationBarTheme);
  dart.setMethodSignature(bottom_navigation_bar_theme.BottomNavigationBarTheme, () => ({
    __proto__: dart.getMethods(bottom_navigation_bar_theme.BottomNavigationBarTheme.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setStaticMethodSignature(bottom_navigation_bar_theme.BottomNavigationBarTheme, () => ['of']);
  dart.setLibraryUri(bottom_navigation_bar_theme.BottomNavigationBarTheme, I[98]);
  dart.setFieldSignature(bottom_navigation_bar_theme.BottomNavigationBarTheme, () => ({
    __proto__: dart.getFields(bottom_navigation_bar_theme.BottomNavigationBarTheme.__proto__),
    data: dart.finalFieldType(bottom_navigation_bar_theme.BottomNavigationBarThemeData)
  }));
  const Object_Diagnosticable$36$28 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$28.new = function() {
  }).prototype = Object_Diagnosticable$36$28.prototype;
  dart.applyMixin(Object_Diagnosticable$36$28, diagnostics.Diagnosticable);
  bottom_app_bar_theme.BottomAppBarTheme = class BottomAppBarTheme extends Object_Diagnosticable$36$28 {
    get color() {
      return this[S$0.color$11];
    }
    set color(value) {
      super.color = value;
    }
    get elevation() {
      return this[S$0.elevation$19];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get shape() {
      return this[S$0.shape$13];
    }
    set shape(value) {
      super.shape = value;
    }
    static ['_#new#tearOff'](opts) {
      let color = opts && 'color' in opts ? opts.color : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      return new bottom_app_bar_theme.BottomAppBarTheme.new({color: color, elevation: elevation, shape: shape});
    }
    copyWith(opts) {
      let t62, t62$, t62$0;
      let color = opts && 'color' in opts ? opts.color : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      return new bottom_app_bar_theme.BottomAppBarTheme.new({color: (t62 = color, t62 == null ? this.color : t62), elevation: (t62$ = elevation, t62$ == null ? this.elevation : t62$), shape: (t62$0 = shape, t62$0 == null ? this.shape : t62$0)});
    }
    static of(context) {
      return theme$.Theme.of(context).bottomAppBarTheme;
    }
    static lerp(a, b, t) {
      let t62, t62$, t62$0, t62$1, t62$2, t62$3;
      if (!(t !== null)) dart.assertFailed(null, I[99], 73, 12, "t != null");
      return new bottom_app_bar_theme.BottomAppBarTheme.new({color: ui.Color.lerp((t62 = a, t62 == null ? null : t62.color), (t62$ = b, t62$ == null ? null : t62$.color), t), elevation: ui.lerpDouble((t62$0 = a, t62$0 == null ? null : t62$0.elevation), (t62$1 = b, t62$1 == null ? null : t62$1.elevation), t), shape: t < 0.5 ? (t62$2 = a, t62$2 == null ? null : t62$2.shape) : (t62$3 = b, t62$3 == null ? null : t62$3.shape)});
    }
    get hashCode() {
      return core.Object.hash(this.color, this.elevation, this.shape);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      if (!other[S.$runtimeType]._equals(this[S.$runtimeType])) {
        return false;
      }
      return bottom_app_bar_theme.BottomAppBarTheme.is(other) && dart.equals(other.color, this.color) && other.elevation == this.elevation && dart.equals(other.shape, this.shape);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new colors.ColorProperty.new("color", this.color, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfdouble()).new("elevation", this.elevation, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfNotchedShape()).new("shape", this.shape, {defaultValue: null}));
    }
  };
  (bottom_app_bar_theme.BottomAppBarTheme.new = function(opts) {
    let color = opts && 'color' in opts ? opts.color : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    this[S$0.color$11] = color;
    this[S$0.elevation$19] = elevation;
    this[S$0.shape$13] = shape;
    ;
  }).prototype = bottom_app_bar_theme.BottomAppBarTheme.prototype;
  dart.addTypeTests(bottom_app_bar_theme.BottomAppBarTheme);
  dart.addTypeCaches(bottom_app_bar_theme.BottomAppBarTheme);
  dart.setMethodSignature(bottom_app_bar_theme.BottomAppBarTheme, () => ({
    __proto__: dart.getMethods(bottom_app_bar_theme.BottomAppBarTheme.__proto__),
    copyWith: dart.fnType(bottom_app_bar_theme.BottomAppBarTheme, [], {color: dart.nullable(ui.Color), elevation: dart.nullable(core.double), shape: dart.nullable(notched_shapes.NotchedShape)}, {})
  }));
  dart.setStaticMethodSignature(bottom_app_bar_theme.BottomAppBarTheme, () => ['of', 'lerp']);
  dart.setLibraryUri(bottom_app_bar_theme.BottomAppBarTheme, I[100]);
  dart.setFieldSignature(bottom_app_bar_theme.BottomAppBarTheme, () => ({
    __proto__: dart.getFields(bottom_app_bar_theme.BottomAppBarTheme.__proto__),
    color: dart.finalFieldType(dart.nullable(ui.Color)),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    shape: dart.finalFieldType(dart.nullable(notched_shapes.NotchedShape))
  }));
  dart.defineExtensionMethods(bottom_app_bar_theme.BottomAppBarTheme, ['_equals']);
  dart.defineExtensionAccessors(bottom_app_bar_theme.BottomAppBarTheme, ['hashCode']);
  const _is_ThemeExtension_default = Symbol('_is_ThemeExtension_default');
  theme_data.ThemeExtension$ = dart.generic(T => {
    class ThemeExtension extends core.Object {
      get type() {
        return dart.wrapType(T);
      }
    }
    (ThemeExtension.new = function() {
      ;
    }).prototype = ThemeExtension.prototype;
    dart.addTypeTests(ThemeExtension);
    ThemeExtension.prototype[_is_ThemeExtension_default] = true;
    dart.addTypeCaches(ThemeExtension);
    dart.setGetterSignature(ThemeExtension, () => ({
      __proto__: dart.getGetters(ThemeExtension.__proto__),
      type: core.Object
    }));
    dart.setLibraryUri(ThemeExtension, I[101]);
    return ThemeExtension;
  });
  theme_data.ThemeExtension = theme_data.ThemeExtension$();
  dart.addTypeTests(theme_data.ThemeExtension, _is_ThemeExtension_default);
  theme_data.MaterialTapTargetSize = class MaterialTapTargetSize extends core._Enum {
    toString() {
      return "MaterialTapTargetSize." + this[S._name];
    }
  };
  (theme_data.MaterialTapTargetSize.new = function(index, name) {
    theme_data.MaterialTapTargetSize.__proto__.new.call(this, index, name);
    ;
  }).prototype = theme_data.MaterialTapTargetSize.prototype;
  dart.addTypeTests(theme_data.MaterialTapTargetSize);
  dart.addTypeCaches(theme_data.MaterialTapTargetSize);
  dart.setLibraryUri(theme_data.MaterialTapTargetSize, I[101]);
  dart.setStaticFieldSignature(theme_data.MaterialTapTargetSize, () => ['values', 'padded', 'shrinkWrap']);
  dart.defineExtensionMethods(theme_data.MaterialTapTargetSize, ['toString']);
  dart.defineLazy(theme_data.MaterialTapTargetSize, {
    /*theme_data.MaterialTapTargetSize.values*/get values() {
      return C[747] || CT.C747;
    },
    /*theme_data.MaterialTapTargetSize.padded*/get padded() {
      return C[64] || CT.C64;
    },
    /*theme_data.MaterialTapTargetSize.shrinkWrap*/get shrinkWrap() {
      return C[65] || CT.C65;
    }
  }, false);
  const Object_Diagnosticable$36$29 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$29.new = function() {
  }).prototype = Object_Diagnosticable$36$29.prototype;
  dart.applyMixin(Object_Diagnosticable$36$29, diagnostics.Diagnosticable);
  theme_data.ThemeData = class ThemeData extends Object_Diagnosticable$36$29 {
    get applyElevationOverlayColor() {
      return this[S$0.applyElevationOverlayColor];
    }
    set applyElevationOverlayColor(value) {
      super.applyElevationOverlayColor = value;
    }
    get cupertinoOverrideTheme() {
      return this[S$0.cupertinoOverrideTheme];
    }
    set cupertinoOverrideTheme(value) {
      super.cupertinoOverrideTheme = value;
    }
    get extensions() {
      return this[S$0.extensions];
    }
    set extensions(value) {
      super.extensions = value;
    }
    get inputDecorationTheme() {
      return this[S$0.inputDecorationTheme$1];
    }
    set inputDecorationTheme(value) {
      super.inputDecorationTheme = value;
    }
    get materialTapTargetSize() {
      return this[S$0.materialTapTargetSize$6];
    }
    set materialTapTargetSize(value) {
      super.materialTapTargetSize = value;
    }
    get pageTransitionsTheme() {
      return this[S$0.pageTransitionsTheme];
    }
    set pageTransitionsTheme(value) {
      super.pageTransitionsTheme = value;
    }
    get platform() {
      return this[S$0.platform];
    }
    set platform(value) {
      super.platform = value;
    }
    get scrollbarTheme() {
      return this[S$0.scrollbarTheme];
    }
    set scrollbarTheme(value) {
      super.scrollbarTheme = value;
    }
    get splashFactory() {
      return this[S$0.splashFactory$3];
    }
    set splashFactory(value) {
      super.splashFactory = value;
    }
    get useMaterial3() {
      return this[S$0.useMaterial3];
    }
    set useMaterial3(value) {
      super.useMaterial3 = value;
    }
    get visualDensity() {
      return this[S$0.visualDensity$7];
    }
    set visualDensity(value) {
      super.visualDensity = value;
    }
    get backgroundColor() {
      return this[S$0.backgroundColor$15];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get bottomAppBarColor() {
      return this[S$0.bottomAppBarColor];
    }
    set bottomAppBarColor(value) {
      super.bottomAppBarColor = value;
    }
    get canvasColor() {
      return this[S$0.canvasColor];
    }
    set canvasColor(value) {
      super.canvasColor = value;
    }
    get cardColor() {
      return this[S$0.cardColor];
    }
    set cardColor(value) {
      super.cardColor = value;
    }
    get colorScheme() {
      return this[S$0.colorScheme$1];
    }
    set colorScheme(value) {
      super.colorScheme = value;
    }
    get dialogBackgroundColor() {
      return this[S$0.dialogBackgroundColor];
    }
    set dialogBackgroundColor(value) {
      super.dialogBackgroundColor = value;
    }
    get disabledColor() {
      return this[S$0.disabledColor$4];
    }
    set disabledColor(value) {
      super.disabledColor = value;
    }
    get dividerColor() {
      return this[S$0.dividerColor];
    }
    set dividerColor(value) {
      super.dividerColor = value;
    }
    get errorColor() {
      return this[S$0.errorColor];
    }
    set errorColor(value) {
      super.errorColor = value;
    }
    get focusColor() {
      return this[S$0.focusColor$7];
    }
    set focusColor(value) {
      super.focusColor = value;
    }
    get highlightColor() {
      return this[S$0.highlightColor$4];
    }
    set highlightColor(value) {
      super.highlightColor = value;
    }
    get hintColor() {
      return this[S$0.hintColor];
    }
    set hintColor(value) {
      super.hintColor = value;
    }
    get hoverColor() {
      return this[S$0.hoverColor$8];
    }
    set hoverColor(value) {
      super.hoverColor = value;
    }
    get indicatorColor() {
      return this[S$0.indicatorColor$5];
    }
    set indicatorColor(value) {
      super.indicatorColor = value;
    }
    get primaryColor() {
      return this[S$0.primaryColor];
    }
    set primaryColor(value) {
      super.primaryColor = value;
    }
    get primaryColorDark() {
      return this[S$0.primaryColorDark];
    }
    set primaryColorDark(value) {
      super.primaryColorDark = value;
    }
    get primaryColorLight() {
      return this[S$0.primaryColorLight];
    }
    set primaryColorLight(value) {
      super.primaryColorLight = value;
    }
    get scaffoldBackgroundColor() {
      return this[S$0.scaffoldBackgroundColor];
    }
    set scaffoldBackgroundColor(value) {
      super.scaffoldBackgroundColor = value;
    }
    get secondaryHeaderColor() {
      return this[S$0.secondaryHeaderColor];
    }
    set secondaryHeaderColor(value) {
      super.secondaryHeaderColor = value;
    }
    get selectedRowColor() {
      return this[S$0.selectedRowColor];
    }
    set selectedRowColor(value) {
      super.selectedRowColor = value;
    }
    get shadowColor() {
      return this[S$0.shadowColor$3];
    }
    set shadowColor(value) {
      super.shadowColor = value;
    }
    get splashColor() {
      return this[S$0.splashColor$5];
    }
    set splashColor(value) {
      super.splashColor = value;
    }
    get toggleableActiveColor() {
      return this[S$0.toggleableActiveColor];
    }
    set toggleableActiveColor(value) {
      super.toggleableActiveColor = value;
    }
    get unselectedWidgetColor() {
      return this[S$0.unselectedWidgetColor];
    }
    set unselectedWidgetColor(value) {
      super.unselectedWidgetColor = value;
    }
    get iconTheme() {
      return this[S$0.iconTheme$2];
    }
    set iconTheme(value) {
      super.iconTheme = value;
    }
    get primaryIconTheme() {
      return this[S$0.primaryIconTheme];
    }
    set primaryIconTheme(value) {
      super.primaryIconTheme = value;
    }
    get primaryTextTheme() {
      return this[S$0.primaryTextTheme];
    }
    set primaryTextTheme(value) {
      super.primaryTextTheme = value;
    }
    get textTheme() {
      return this[S$0.textTheme$2];
    }
    set textTheme(value) {
      super.textTheme = value;
    }
    get typography() {
      return this[S$0.typography];
    }
    set typography(value) {
      super.typography = value;
    }
    get appBarTheme() {
      return this[S$0.appBarTheme];
    }
    set appBarTheme(value) {
      super.appBarTheme = value;
    }
    get bannerTheme() {
      return this[S$0.bannerTheme];
    }
    set bannerTheme(value) {
      super.bannerTheme = value;
    }
    get bottomAppBarTheme() {
      return this[S$0.bottomAppBarTheme];
    }
    set bottomAppBarTheme(value) {
      super.bottomAppBarTheme = value;
    }
    get bottomNavigationBarTheme() {
      return this[S$0.bottomNavigationBarTheme];
    }
    set bottomNavigationBarTheme(value) {
      super.bottomNavigationBarTheme = value;
    }
    get bottomSheetTheme() {
      return this[S$0.bottomSheetTheme];
    }
    set bottomSheetTheme(value) {
      super.bottomSheetTheme = value;
    }
    get buttonBarTheme() {
      return this[S$0.buttonBarTheme];
    }
    set buttonBarTheme(value) {
      super.buttonBarTheme = value;
    }
    get buttonTheme() {
      return this[S$0.buttonTheme];
    }
    set buttonTheme(value) {
      super.buttonTheme = value;
    }
    get cardTheme() {
      return this[S$0.cardTheme];
    }
    set cardTheme(value) {
      super.cardTheme = value;
    }
    get checkboxTheme() {
      return this[S$0.checkboxTheme];
    }
    set checkboxTheme(value) {
      super.checkboxTheme = value;
    }
    get chipTheme() {
      return this[S$0.chipTheme];
    }
    set chipTheme(value) {
      super.chipTheme = value;
    }
    get dataTableTheme() {
      return this[S$0.dataTableTheme];
    }
    set dataTableTheme(value) {
      super.dataTableTheme = value;
    }
    get dialogTheme() {
      return this[S$0.dialogTheme];
    }
    set dialogTheme(value) {
      super.dialogTheme = value;
    }
    get dividerTheme() {
      return this[S$0.dividerTheme];
    }
    set dividerTheme(value) {
      super.dividerTheme = value;
    }
    get drawerTheme() {
      return this[S$0.drawerTheme];
    }
    set drawerTheme(value) {
      super.drawerTheme = value;
    }
    get elevatedButtonTheme() {
      return this[S$0.elevatedButtonTheme];
    }
    set elevatedButtonTheme(value) {
      super.elevatedButtonTheme = value;
    }
    get expansionTileTheme() {
      return this[S$0.expansionTileTheme];
    }
    set expansionTileTheme(value) {
      super.expansionTileTheme = value;
    }
    get floatingActionButtonTheme() {
      return this[S$0.floatingActionButtonTheme];
    }
    set floatingActionButtonTheme(value) {
      super.floatingActionButtonTheme = value;
    }
    get listTileTheme() {
      return this[S$0.listTileTheme];
    }
    set listTileTheme(value) {
      super.listTileTheme = value;
    }
    get navigationBarTheme() {
      return this[S$0.navigationBarTheme];
    }
    set navigationBarTheme(value) {
      super.navigationBarTheme = value;
    }
    get navigationRailTheme() {
      return this[S$0.navigationRailTheme];
    }
    set navigationRailTheme(value) {
      super.navigationRailTheme = value;
    }
    get outlinedButtonTheme() {
      return this[S$0.outlinedButtonTheme];
    }
    set outlinedButtonTheme(value) {
      super.outlinedButtonTheme = value;
    }
    get popupMenuTheme() {
      return this[S$0.popupMenuTheme];
    }
    set popupMenuTheme(value) {
      super.popupMenuTheme = value;
    }
    get progressIndicatorTheme() {
      return this[S$0.progressIndicatorTheme];
    }
    set progressIndicatorTheme(value) {
      super.progressIndicatorTheme = value;
    }
    get radioTheme() {
      return this[S$0.radioTheme];
    }
    set radioTheme(value) {
      super.radioTheme = value;
    }
    get sliderTheme() {
      return this[S$0.sliderTheme];
    }
    set sliderTheme(value) {
      super.sliderTheme = value;
    }
    get snackBarTheme() {
      return this[S$0.snackBarTheme];
    }
    set snackBarTheme(value) {
      super.snackBarTheme = value;
    }
    get switchTheme() {
      return this[S$0.switchTheme];
    }
    set switchTheme(value) {
      super.switchTheme = value;
    }
    get tabBarTheme() {
      return this[S$0.tabBarTheme];
    }
    set tabBarTheme(value) {
      super.tabBarTheme = value;
    }
    get textButtonTheme() {
      return this[S$0.textButtonTheme];
    }
    set textButtonTheme(value) {
      super.textButtonTheme = value;
    }
    get textSelectionTheme() {
      return this[S$0.textSelectionTheme];
    }
    set textSelectionTheme(value) {
      super.textSelectionTheme = value;
    }
    get timePickerTheme() {
      return this[S$0.timePickerTheme];
    }
    set timePickerTheme(value) {
      super.timePickerTheme = value;
    }
    get toggleButtonsTheme() {
      return this[S$0.toggleButtonsTheme];
    }
    set toggleButtonsTheme(value) {
      super.toggleButtonsTheme = value;
    }
    get tooltipTheme() {
      return this[S$0.tooltipTheme];
    }
    set tooltipTheme(value) {
      super.tooltipTheme = value;
    }
    get [S$0._accentColor$1]() {
      return this[S$0._accentColor];
    }
    set [S$0._accentColor$1](value) {
      super[S$0._accentColor$1] = value;
    }
    get [S$0._accentColorBrightness$1]() {
      return this[S$0._accentColorBrightness];
    }
    set [S$0._accentColorBrightness$1](value) {
      super[S$0._accentColorBrightness$1] = value;
    }
    get [S$0._accentTextTheme$1]() {
      return this[S$0._accentTextTheme];
    }
    set [S$0._accentTextTheme$1](value) {
      super[S$0._accentTextTheme$1] = value;
    }
    get [S$0._accentIconTheme$1]() {
      return this[S$0._accentIconTheme];
    }
    set [S$0._accentIconTheme$1](value) {
      super[S$0._accentIconTheme$1] = value;
    }
    get [S$0._buttonColor$3]() {
      return this[S$0._buttonColor$2];
    }
    set [S$0._buttonColor$3](value) {
      super[S$0._buttonColor$3] = value;
    }
    get [S$0._fixTextFieldOutlineLabel$1]() {
      return this[S$0._fixTextFieldOutlineLabel];
    }
    set [S$0._fixTextFieldOutlineLabel$1](value) {
      super[S$0._fixTextFieldOutlineLabel$1] = value;
    }
    get [S$0._primaryColorBrightness$1]() {
      return this[S$0._primaryColorBrightness];
    }
    set [S$0._primaryColorBrightness$1](value) {
      super[S$0._primaryColorBrightness$1] = value;
    }
    get androidOverscrollIndicator() {
      return this[S$0.androidOverscrollIndicator];
    }
    set androidOverscrollIndicator(value) {
      super.androidOverscrollIndicator = value;
    }
    static new(opts) {
      let t64, t64$, t65, t64$0, t64$1, t64$2, t64$3;
      let applyElevationOverlayColor = opts && 'applyElevationOverlayColor' in opts ? opts.applyElevationOverlayColor : null;
      let cupertinoOverrideTheme = opts && 'cupertinoOverrideTheme' in opts ? opts.cupertinoOverrideTheme : null;
      let extensions = opts && 'extensions' in opts ? opts.extensions : null;
      let inputDecorationTheme = opts && 'inputDecorationTheme' in opts ? opts.inputDecorationTheme : null;
      let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
      let pageTransitionsTheme = opts && 'pageTransitionsTheme' in opts ? opts.pageTransitionsTheme : null;
      let platform = opts && 'platform' in opts ? opts.platform : null;
      let scrollbarTheme = opts && 'scrollbarTheme' in opts ? opts.scrollbarTheme : null;
      let splashFactory = opts && 'splashFactory' in opts ? opts.splashFactory : null;
      let useMaterial3 = opts && 'useMaterial3' in opts ? opts.useMaterial3 : null;
      let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let bottomAppBarColor = opts && 'bottomAppBarColor' in opts ? opts.bottomAppBarColor : null;
      let brightness = opts && 'brightness' in opts ? opts.brightness : null;
      let canvasColor = opts && 'canvasColor' in opts ? opts.canvasColor : null;
      let cardColor = opts && 'cardColor' in opts ? opts.cardColor : null;
      let colorScheme = opts && 'colorScheme' in opts ? opts.colorScheme : null;
      let colorSchemeSeed = opts && 'colorSchemeSeed' in opts ? opts.colorSchemeSeed : null;
      let dialogBackgroundColor = opts && 'dialogBackgroundColor' in opts ? opts.dialogBackgroundColor : null;
      let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
      let dividerColor = opts && 'dividerColor' in opts ? opts.dividerColor : null;
      let errorColor = opts && 'errorColor' in opts ? opts.errorColor : null;
      let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
      let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
      let hintColor = opts && 'hintColor' in opts ? opts.hintColor : null;
      let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
      let indicatorColor = opts && 'indicatorColor' in opts ? opts.indicatorColor : null;
      let primaryColor = opts && 'primaryColor' in opts ? opts.primaryColor : null;
      let primaryColorDark = opts && 'primaryColorDark' in opts ? opts.primaryColorDark : null;
      let primaryColorLight = opts && 'primaryColorLight' in opts ? opts.primaryColorLight : null;
      let primarySwatch = opts && 'primarySwatch' in opts ? opts.primarySwatch : null;
      let scaffoldBackgroundColor = opts && 'scaffoldBackgroundColor' in opts ? opts.scaffoldBackgroundColor : null;
      let secondaryHeaderColor = opts && 'secondaryHeaderColor' in opts ? opts.secondaryHeaderColor : null;
      let selectedRowColor = opts && 'selectedRowColor' in opts ? opts.selectedRowColor : null;
      let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
      let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
      let toggleableActiveColor = opts && 'toggleableActiveColor' in opts ? opts.toggleableActiveColor : null;
      let unselectedWidgetColor = opts && 'unselectedWidgetColor' in opts ? opts.unselectedWidgetColor : null;
      let fontFamily = opts && 'fontFamily' in opts ? opts.fontFamily : null;
      let iconTheme = opts && 'iconTheme' in opts ? opts.iconTheme : null;
      let primaryIconTheme = opts && 'primaryIconTheme' in opts ? opts.primaryIconTheme : null;
      let primaryTextTheme = opts && 'primaryTextTheme' in opts ? opts.primaryTextTheme : null;
      let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
      let typography = opts && 'typography' in opts ? opts.typography : null;
      let appBarTheme = opts && 'appBarTheme' in opts ? opts.appBarTheme : null;
      let bannerTheme = opts && 'bannerTheme' in opts ? opts.bannerTheme : null;
      let bottomAppBarTheme = opts && 'bottomAppBarTheme' in opts ? opts.bottomAppBarTheme : null;
      let bottomNavigationBarTheme = opts && 'bottomNavigationBarTheme' in opts ? opts.bottomNavigationBarTheme : null;
      let bottomSheetTheme = opts && 'bottomSheetTheme' in opts ? opts.bottomSheetTheme : null;
      let buttonBarTheme = opts && 'buttonBarTheme' in opts ? opts.buttonBarTheme : null;
      let buttonTheme = opts && 'buttonTheme' in opts ? opts.buttonTheme : null;
      let cardTheme = opts && 'cardTheme' in opts ? opts.cardTheme : null;
      let checkboxTheme = opts && 'checkboxTheme' in opts ? opts.checkboxTheme : null;
      let chipTheme = opts && 'chipTheme' in opts ? opts.chipTheme : null;
      let dataTableTheme = opts && 'dataTableTheme' in opts ? opts.dataTableTheme : null;
      let dialogTheme = opts && 'dialogTheme' in opts ? opts.dialogTheme : null;
      let dividerTheme = opts && 'dividerTheme' in opts ? opts.dividerTheme : null;
      let drawerTheme = opts && 'drawerTheme' in opts ? opts.drawerTheme : null;
      let elevatedButtonTheme = opts && 'elevatedButtonTheme' in opts ? opts.elevatedButtonTheme : null;
      let expansionTileTheme = opts && 'expansionTileTheme' in opts ? opts.expansionTileTheme : null;
      let floatingActionButtonTheme = opts && 'floatingActionButtonTheme' in opts ? opts.floatingActionButtonTheme : null;
      let listTileTheme = opts && 'listTileTheme' in opts ? opts.listTileTheme : null;
      let navigationBarTheme = opts && 'navigationBarTheme' in opts ? opts.navigationBarTheme : null;
      let navigationRailTheme = opts && 'navigationRailTheme' in opts ? opts.navigationRailTheme : null;
      let outlinedButtonTheme = opts && 'outlinedButtonTheme' in opts ? opts.outlinedButtonTheme : null;
      let popupMenuTheme = opts && 'popupMenuTheme' in opts ? opts.popupMenuTheme : null;
      let progressIndicatorTheme = opts && 'progressIndicatorTheme' in opts ? opts.progressIndicatorTheme : null;
      let radioTheme = opts && 'radioTheme' in opts ? opts.radioTheme : null;
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      let snackBarTheme = opts && 'snackBarTheme' in opts ? opts.snackBarTheme : null;
      let switchTheme = opts && 'switchTheme' in opts ? opts.switchTheme : null;
      let tabBarTheme = opts && 'tabBarTheme' in opts ? opts.tabBarTheme : null;
      let textButtonTheme = opts && 'textButtonTheme' in opts ? opts.textButtonTheme : null;
      let textSelectionTheme = opts && 'textSelectionTheme' in opts ? opts.textSelectionTheme : null;
      let timePickerTheme = opts && 'timePickerTheme' in opts ? opts.timePickerTheme : null;
      let toggleButtonsTheme = opts && 'toggleButtonsTheme' in opts ? opts.toggleButtonsTheme : null;
      let tooltipTheme = opts && 'tooltipTheme' in opts ? opts.tooltipTheme : null;
      let accentColor = opts && 'accentColor' in opts ? opts.accentColor : null;
      let accentColorBrightness = opts && 'accentColorBrightness' in opts ? opts.accentColorBrightness : null;
      let accentTextTheme = opts && 'accentTextTheme' in opts ? opts.accentTextTheme : null;
      let accentIconTheme = opts && 'accentIconTheme' in opts ? opts.accentIconTheme : null;
      let buttonColor = opts && 'buttonColor' in opts ? opts.buttonColor : null;
      let fixTextFieldOutlineLabel = opts && 'fixTextFieldOutlineLabel' in opts ? opts.fixTextFieldOutlineLabel : null;
      let primaryColorBrightness = opts && 'primaryColorBrightness' in opts ? opts.primaryColorBrightness : null;
      let androidOverscrollIndicator = opts && 'androidOverscrollIndicator' in opts ? opts.androidOverscrollIndicator : null;
      cupertinoOverrideTheme = (t64 = cupertinoOverrideTheme, t64 == null ? null : t64.noDefault());
      extensions == null ? extensions = T$.JSArrayOfThemeExtensionOfThemeExtension().of([]) : null;
      inputDecorationTheme == null ? inputDecorationTheme = C[583] || CT.C583 : null;
      platform == null ? platform = platform$.defaultTargetPlatform : null;
      switch (platform) {
        case C[29] || CT.C29:
        case C[30] || CT.C30:
        case C[33] || CT.C33:
          {
            materialTapTargetSize == null ? materialTapTargetSize = theme_data.MaterialTapTargetSize.padded : null;
            break;
          }
        case C[31] || CT.C31:
        case C[34] || CT.C34:
        case C[32] || CT.C32:
          {
            materialTapTargetSize == null ? materialTapTargetSize = theme_data.MaterialTapTargetSize.shrinkWrap : null;
            break;
          }
      }
      pageTransitionsTheme == null ? pageTransitionsTheme = C[748] || CT.C748 : null;
      scrollbarTheme == null ? scrollbarTheme = C[749] || CT.C749 : null;
      visualDensity == null ? visualDensity = theme_data.VisualDensity.adaptivePlatformDensity : null;
      useMaterial3 == null ? useMaterial3 = false : null;
      let useInkSparkle = platform === platform$.TargetPlatform.android && false;
      splashFactory == null ? splashFactory = dart.test(useMaterial3) ? useInkSparkle ? ink_sparkle.InkSparkle.splashFactory : ink_ripple.InkRipple.splashFactory : ink_splash.InkSplash.splashFactory : null;
      if (!((t64$ = colorScheme, t64$ == null ? null : t64$.brightness) == null || brightness == null || dart.nullCheck(colorScheme).brightness === brightness)) dart.assertFailed(null, I[102], 436, 12, "colorScheme?.brightness == null || brightness == null || colorScheme!.brightness == brightness");
      if (!(colorSchemeSeed == null || colorScheme == null)) dart.assertFailed(null, I[102], 437, 12, "colorSchemeSeed == null || colorScheme == null");
      if (!(colorSchemeSeed == null || primarySwatch == null)) dart.assertFailed(null, I[102], 438, 12, "colorSchemeSeed == null || primarySwatch == null");
      if (!(colorSchemeSeed == null || primaryColor == null)) dart.assertFailed(null, I[102], 439, 12, "colorSchemeSeed == null || primaryColor == null");
      let effectiveBrightness = (t64$1 = (t64$0 = brightness, t64$0 == null ? (t65 = colorScheme, t65 == null ? null : t65.brightness) : t64$0), t64$1 == null ? ui.Brightness.light : t64$1);
      let isDark = effectiveBrightness === ui.Brightness.dark;
      if (colorSchemeSeed != null) {
        colorScheme = color_scheme.ColorScheme.fromSeed({seedColor: colorSchemeSeed, brightness: effectiveBrightness});
        let primarySurfaceColor = isDark ? colorScheme.surface : colorScheme.primary;
        let onPrimarySurfaceColor = isDark ? colorScheme.onSurface : colorScheme.onPrimary;
        primaryColor = primarySurfaceColor;
        primaryColorBrightness = theme_data.ThemeData.estimateBrightnessForColor(primarySurfaceColor);
        canvasColor == null ? canvasColor = colorScheme.background : null;
        accentColor == null ? accentColor = colorScheme.secondary : null;
        accentColorBrightness == null ? accentColorBrightness = theme_data.ThemeData.estimateBrightnessForColor(colorScheme.secondary) : null;
        scaffoldBackgroundColor == null ? scaffoldBackgroundColor = colorScheme.background : null;
        bottomAppBarColor == null ? bottomAppBarColor = colorScheme.surface : null;
        cardColor == null ? cardColor = colorScheme.surface : null;
        dividerColor == null ? dividerColor = colorScheme.outline : null;
        backgroundColor == null ? backgroundColor = colorScheme.background : null;
        dialogBackgroundColor == null ? dialogBackgroundColor = colorScheme.background : null;
        indicatorColor == null ? indicatorColor = onPrimarySurfaceColor : null;
        errorColor == null ? errorColor = colorScheme.error : null;
        applyElevationOverlayColor == null ? applyElevationOverlayColor = brightness === ui.Brightness.dark : null;
      }
      applyElevationOverlayColor == null ? applyElevationOverlayColor = false : null;
      primarySwatch == null ? primarySwatch = colors$.Colors.blue : null;
      primaryColor == null ? primaryColor = isDark ? dart.nullCheck(colors$.Colors.grey._get(900)) : primarySwatch : null;
      let estimatedPrimaryColorBrightness = theme_data.ThemeData.estimateBrightnessForColor(primaryColor);
      primaryColorLight == null ? primaryColorLight = isDark ? dart.nullCheck(colors$.Colors.grey._get(500)) : dart.nullCheck(primarySwatch._get(100)) : null;
      primaryColorDark == null ? primaryColorDark = isDark ? colors$.Colors.black : dart.nullCheck(primarySwatch._get(700)) : null;
      let primaryIsDark = estimatedPrimaryColorBrightness === ui.Brightness.dark;
      toggleableActiveColor == null ? toggleableActiveColor = isDark ? dart.nullCheck(colors$.Colors.tealAccent._get(200)) : (t64$2 = accentColor, t64$2 == null ? dart.nullCheck(primarySwatch._get(600)) : t64$2) : null;
      accentColor == null ? accentColor = isDark ? dart.nullCheck(colors$.Colors.tealAccent._get(200)) : dart.nullCheck(primarySwatch._get(500)) : null;
      accentColorBrightness == null ? accentColorBrightness = theme_data.ThemeData.estimateBrightnessForColor(accentColor) : null;
      let accentIsDark = accentColorBrightness === ui.Brightness.dark;
      focusColor == null ? focusColor = isDark ? colors$.Colors.white.withOpacity(0.12) : colors$.Colors.black.withOpacity(0.12) : null;
      hoverColor == null ? hoverColor = isDark ? colors$.Colors.white.withOpacity(0.04) : colors$.Colors.black.withOpacity(0.04) : null;
      shadowColor == null ? shadowColor = colors$.Colors.black : null;
      canvasColor == null ? canvasColor = isDark ? dart.nullCheck(colors$.Colors.grey._get(850)) : dart.nullCheck(colors$.Colors.grey._get(50)) : null;
      scaffoldBackgroundColor == null ? scaffoldBackgroundColor = canvasColor : null;
      bottomAppBarColor == null ? bottomAppBarColor = isDark ? dart.nullCheck(colors$.Colors.grey._get(800)) : colors$.Colors.white : null;
      cardColor == null ? cardColor = isDark ? dart.nullCheck(colors$.Colors.grey._get(800)) : colors$.Colors.white : null;
      dividerColor == null ? dividerColor = isDark ? C[750] || CT.C750 : C[751] || CT.C751 : null;
      colorScheme == null ? colorScheme = color_scheme.ColorScheme.fromSwatch({primarySwatch: primarySwatch, primaryColorDark: primaryColorDark, accentColor: accentColor, cardColor: cardColor, backgroundColor: backgroundColor, errorColor: errorColor, brightness: effectiveBrightness}) : null;
      selectedRowColor == null ? selectedRowColor = dart.nullCheck(colors$.Colors.grey._get(100)) : null;
      unselectedWidgetColor == null ? unselectedWidgetColor = isDark ? colors$.Colors.white70 : colors$.Colors.black54 : null;
      secondaryHeaderColor == null ? secondaryHeaderColor = isDark ? dart.nullCheck(colors$.Colors.grey._get(700)) : dart.nullCheck(primarySwatch._get(50)) : null;
      backgroundColor == null ? backgroundColor = isDark ? dart.nullCheck(colors$.Colors.grey._get(700)) : dart.nullCheck(primarySwatch._get(200)) : null;
      dialogBackgroundColor == null ? dialogBackgroundColor = isDark ? dart.nullCheck(colors$.Colors.grey._get(800)) : colors$.Colors.white : null;
      indicatorColor == null ? indicatorColor = dart.equals(accentColor, primaryColor) ? colors$.Colors.white : accentColor : null;
      hintColor == null ? hintColor = isDark ? colors$.Colors.white60 : colors$.Colors.black.withOpacity(0.6) : null;
      errorColor == null ? errorColor = dart.nullCheck(colors$.Colors.red._get(700)) : null;
      buttonTheme == null ? buttonTheme = new button_theme.ButtonThemeData.new({colorScheme: colorScheme, buttonColor: (t64$3 = buttonColor, t64$3 == null ? isDark ? dart.nullCheck(primarySwatch._get(600)) : dart.nullCheck(colors$.Colors.grey._get(300)) : t64$3), disabledColor: disabledColor, focusColor: focusColor, hoverColor: hoverColor, highlightColor: highlightColor, splashColor: splashColor, materialTapTargetSize: materialTapTargetSize}) : null;
      disabledColor == null ? disabledColor = isDark ? colors$.Colors.white38 : colors$.Colors.black38 : null;
      highlightColor == null ? highlightColor = isDark ? theme_data._kDarkThemeHighlightColor : theme_data._kLightThemeHighlightColor : null;
      splashColor == null ? splashColor = isDark ? theme_data._kDarkThemeSplashColor : theme_data._kLightThemeSplashColor : null;
      typography == null ? typography = dart.test(useMaterial3) ? typography$.Typography.material2021({platform: platform}) : typography$.Typography.material2014({platform: platform}) : null;
      let defaultTextTheme = isDark ? typography.white : typography.black;
      let defaultPrimaryTextTheme = primaryIsDark ? typography.white : typography.black;
      let defaultAccentTextTheme = accentIsDark ? typography.white : typography.black;
      if (fontFamily != null) {
        defaultTextTheme = defaultTextTheme.apply({fontFamily: fontFamily});
        defaultPrimaryTextTheme = defaultPrimaryTextTheme.apply({fontFamily: fontFamily});
        defaultAccentTextTheme = defaultAccentTextTheme.apply({fontFamily: fontFamily});
      }
      textTheme = defaultTextTheme.merge(textTheme);
      primaryTextTheme = defaultPrimaryTextTheme.merge(primaryTextTheme);
      iconTheme == null ? iconTheme = isDark ? C[752] || CT.C752 : C[753] || CT.C753 : null;
      primaryIconTheme == null ? primaryIconTheme = primaryIsDark ? C[752] || CT.C752 : C[755] || CT.C755 : null;
      appBarTheme == null ? appBarTheme = C[756] || CT.C756 : null;
      bannerTheme == null ? bannerTheme = C[757] || CT.C757 : null;
      bottomAppBarTheme == null ? bottomAppBarTheme = C[758] || CT.C758 : null;
      bottomNavigationBarTheme == null ? bottomNavigationBarTheme = C[759] || CT.C759 : null;
      bottomSheetTheme == null ? bottomSheetTheme = C[760] || CT.C760 : null;
      buttonBarTheme == null ? buttonBarTheme = C[761] || CT.C761 : null;
      cardTheme == null ? cardTheme = C[762] || CT.C762 : null;
      chipTheme == null ? chipTheme = C[763] || CT.C763 : null;
      checkboxTheme == null ? checkboxTheme = C[764] || CT.C764 : null;
      dataTableTheme == null ? dataTableTheme = C[765] || CT.C765 : null;
      dialogTheme == null ? dialogTheme = C[766] || CT.C766 : null;
      dividerTheme == null ? dividerTheme = C[767] || CT.C767 : null;
      drawerTheme == null ? drawerTheme = C[768] || CT.C768 : null;
      elevatedButtonTheme == null ? elevatedButtonTheme = C[769] || CT.C769 : null;
      floatingActionButtonTheme == null ? floatingActionButtonTheme = C[770] || CT.C770 : null;
      listTileTheme == null ? listTileTheme = C[771] || CT.C771 : null;
      navigationBarTheme == null ? navigationBarTheme = C[772] || CT.C772 : null;
      navigationRailTheme == null ? navigationRailTheme = C[430] || CT.C430 : null;
      outlinedButtonTheme == null ? outlinedButtonTheme = C[773] || CT.C773 : null;
      popupMenuTheme == null ? popupMenuTheme = C[774] || CT.C774 : null;
      progressIndicatorTheme == null ? progressIndicatorTheme = C[775] || CT.C775 : null;
      radioTheme == null ? radioTheme = C[776] || CT.C776 : null;
      sliderTheme == null ? sliderTheme = C[310] || CT.C310 : null;
      snackBarTheme == null ? snackBarTheme = C[777] || CT.C777 : null;
      switchTheme == null ? switchTheme = C[778] || CT.C778 : null;
      tabBarTheme == null ? tabBarTheme = C[779] || CT.C779 : null;
      textButtonTheme == null ? textButtonTheme = C[780] || CT.C780 : null;
      textSelectionTheme == null ? textSelectionTheme = C[781] || CT.C781 : null;
      timePickerTheme == null ? timePickerTheme = C[782] || CT.C782 : null;
      toggleButtonsTheme == null ? toggleButtonsTheme = C[783] || CT.C783 : null;
      tooltipTheme == null ? tooltipTheme = C[784] || CT.C784 : null;
      expansionTileTheme == null ? expansionTileTheme = C[785] || CT.C785 : null;
      accentTextTheme = defaultAccentTextTheme.merge(accentTextTheme);
      accentIconTheme == null ? accentIconTheme = accentIsDark ? C[752] || CT.C752 : C[755] || CT.C755 : null;
      buttonColor == null ? buttonColor = isDark ? dart.nullCheck(primarySwatch._get(600)) : dart.nullCheck(colors$.Colors.grey._get(300)) : null;
      fixTextFieldOutlineLabel == null ? fixTextFieldOutlineLabel = true : null;
      primaryColorBrightness = estimatedPrimaryColorBrightness;
      return new theme_data.ThemeData.raw({applyElevationOverlayColor: applyElevationOverlayColor, cupertinoOverrideTheme: cupertinoOverrideTheme, extensions: theme_data.ThemeData._themeExtensionIterableToMap(extensions), inputDecorationTheme: inputDecorationTheme, materialTapTargetSize: materialTapTargetSize, pageTransitionsTheme: pageTransitionsTheme, platform: platform, scrollbarTheme: scrollbarTheme, splashFactory: splashFactory, useMaterial3: useMaterial3, visualDensity: visualDensity, backgroundColor: backgroundColor, bottomAppBarColor: bottomAppBarColor, canvasColor: canvasColor, cardColor: cardColor, colorScheme: colorScheme, dialogBackgroundColor: dialogBackgroundColor, disabledColor: disabledColor, dividerColor: dividerColor, errorColor: errorColor, focusColor: focusColor, highlightColor: highlightColor, hintColor: hintColor, hoverColor: hoverColor, indicatorColor: indicatorColor, primaryColor: primaryColor, primaryColorDark: primaryColorDark, primaryColorLight: primaryColorLight, scaffoldBackgroundColor: scaffoldBackgroundColor, secondaryHeaderColor: secondaryHeaderColor, selectedRowColor: selectedRowColor, shadowColor: shadowColor, splashColor: splashColor, toggleableActiveColor: toggleableActiveColor, unselectedWidgetColor: unselectedWidgetColor, iconTheme: iconTheme, primaryTextTheme: primaryTextTheme, textTheme: textTheme, typography: typography, primaryIconTheme: primaryIconTheme, appBarTheme: appBarTheme, bannerTheme: bannerTheme, bottomAppBarTheme: bottomAppBarTheme, bottomNavigationBarTheme: bottomNavigationBarTheme, bottomSheetTheme: bottomSheetTheme, buttonBarTheme: buttonBarTheme, buttonTheme: buttonTheme, cardTheme: cardTheme, checkboxTheme: checkboxTheme, chipTheme: chipTheme, dataTableTheme: dataTableTheme, dialogTheme: dialogTheme, dividerTheme: dividerTheme, drawerTheme: drawerTheme, elevatedButtonTheme: elevatedButtonTheme, expansionTileTheme: expansionTileTheme, floatingActionButtonTheme: floatingActionButtonTheme, listTileTheme: listTileTheme, navigationBarTheme: navigationBarTheme, navigationRailTheme: navigationRailTheme, outlinedButtonTheme: outlinedButtonTheme, popupMenuTheme: popupMenuTheme, progressIndicatorTheme: progressIndicatorTheme, radioTheme: radioTheme, sliderTheme: sliderTheme, snackBarTheme: snackBarTheme, switchTheme: switchTheme, tabBarTheme: tabBarTheme, textButtonTheme: textButtonTheme, textSelectionTheme: textSelectionTheme, timePickerTheme: timePickerTheme, toggleButtonsTheme: toggleButtonsTheme, tooltipTheme: tooltipTheme, accentColor: accentColor, accentColorBrightness: accentColorBrightness, accentTextTheme: accentTextTheme, accentIconTheme: accentIconTheme, buttonColor: buttonColor, fixTextFieldOutlineLabel: fixTextFieldOutlineLabel, primaryColorBrightness: primaryColorBrightness, androidOverscrollIndicator: androidOverscrollIndicator});
    }
    static ['_#new#tearOff'](opts) {
      let applyElevationOverlayColor = opts && 'applyElevationOverlayColor' in opts ? opts.applyElevationOverlayColor : null;
      let cupertinoOverrideTheme = opts && 'cupertinoOverrideTheme' in opts ? opts.cupertinoOverrideTheme : null;
      let extensions = opts && 'extensions' in opts ? opts.extensions : null;
      let inputDecorationTheme = opts && 'inputDecorationTheme' in opts ? opts.inputDecorationTheme : null;
      let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
      let pageTransitionsTheme = opts && 'pageTransitionsTheme' in opts ? opts.pageTransitionsTheme : null;
      let platform = opts && 'platform' in opts ? opts.platform : null;
      let scrollbarTheme = opts && 'scrollbarTheme' in opts ? opts.scrollbarTheme : null;
      let splashFactory = opts && 'splashFactory' in opts ? opts.splashFactory : null;
      let useMaterial3 = opts && 'useMaterial3' in opts ? opts.useMaterial3 : null;
      let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let bottomAppBarColor = opts && 'bottomAppBarColor' in opts ? opts.bottomAppBarColor : null;
      let brightness = opts && 'brightness' in opts ? opts.brightness : null;
      let canvasColor = opts && 'canvasColor' in opts ? opts.canvasColor : null;
      let cardColor = opts && 'cardColor' in opts ? opts.cardColor : null;
      let colorScheme = opts && 'colorScheme' in opts ? opts.colorScheme : null;
      let colorSchemeSeed = opts && 'colorSchemeSeed' in opts ? opts.colorSchemeSeed : null;
      let dialogBackgroundColor = opts && 'dialogBackgroundColor' in opts ? opts.dialogBackgroundColor : null;
      let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
      let dividerColor = opts && 'dividerColor' in opts ? opts.dividerColor : null;
      let errorColor = opts && 'errorColor' in opts ? opts.errorColor : null;
      let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
      let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
      let hintColor = opts && 'hintColor' in opts ? opts.hintColor : null;
      let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
      let indicatorColor = opts && 'indicatorColor' in opts ? opts.indicatorColor : null;
      let primaryColor = opts && 'primaryColor' in opts ? opts.primaryColor : null;
      let primaryColorDark = opts && 'primaryColorDark' in opts ? opts.primaryColorDark : null;
      let primaryColorLight = opts && 'primaryColorLight' in opts ? opts.primaryColorLight : null;
      let primarySwatch = opts && 'primarySwatch' in opts ? opts.primarySwatch : null;
      let scaffoldBackgroundColor = opts && 'scaffoldBackgroundColor' in opts ? opts.scaffoldBackgroundColor : null;
      let secondaryHeaderColor = opts && 'secondaryHeaderColor' in opts ? opts.secondaryHeaderColor : null;
      let selectedRowColor = opts && 'selectedRowColor' in opts ? opts.selectedRowColor : null;
      let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
      let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
      let toggleableActiveColor = opts && 'toggleableActiveColor' in opts ? opts.toggleableActiveColor : null;
      let unselectedWidgetColor = opts && 'unselectedWidgetColor' in opts ? opts.unselectedWidgetColor : null;
      let fontFamily = opts && 'fontFamily' in opts ? opts.fontFamily : null;
      let iconTheme = opts && 'iconTheme' in opts ? opts.iconTheme : null;
      let primaryIconTheme = opts && 'primaryIconTheme' in opts ? opts.primaryIconTheme : null;
      let primaryTextTheme = opts && 'primaryTextTheme' in opts ? opts.primaryTextTheme : null;
      let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
      let typography = opts && 'typography' in opts ? opts.typography : null;
      let appBarTheme = opts && 'appBarTheme' in opts ? opts.appBarTheme : null;
      let bannerTheme = opts && 'bannerTheme' in opts ? opts.bannerTheme : null;
      let bottomAppBarTheme = opts && 'bottomAppBarTheme' in opts ? opts.bottomAppBarTheme : null;
      let bottomNavigationBarTheme = opts && 'bottomNavigationBarTheme' in opts ? opts.bottomNavigationBarTheme : null;
      let bottomSheetTheme = opts && 'bottomSheetTheme' in opts ? opts.bottomSheetTheme : null;
      let buttonBarTheme = opts && 'buttonBarTheme' in opts ? opts.buttonBarTheme : null;
      let buttonTheme = opts && 'buttonTheme' in opts ? opts.buttonTheme : null;
      let cardTheme = opts && 'cardTheme' in opts ? opts.cardTheme : null;
      let checkboxTheme = opts && 'checkboxTheme' in opts ? opts.checkboxTheme : null;
      let chipTheme = opts && 'chipTheme' in opts ? opts.chipTheme : null;
      let dataTableTheme = opts && 'dataTableTheme' in opts ? opts.dataTableTheme : null;
      let dialogTheme = opts && 'dialogTheme' in opts ? opts.dialogTheme : null;
      let dividerTheme = opts && 'dividerTheme' in opts ? opts.dividerTheme : null;
      let drawerTheme = opts && 'drawerTheme' in opts ? opts.drawerTheme : null;
      let elevatedButtonTheme = opts && 'elevatedButtonTheme' in opts ? opts.elevatedButtonTheme : null;
      let expansionTileTheme = opts && 'expansionTileTheme' in opts ? opts.expansionTileTheme : null;
      let floatingActionButtonTheme = opts && 'floatingActionButtonTheme' in opts ? opts.floatingActionButtonTheme : null;
      let listTileTheme = opts && 'listTileTheme' in opts ? opts.listTileTheme : null;
      let navigationBarTheme = opts && 'navigationBarTheme' in opts ? opts.navigationBarTheme : null;
      let navigationRailTheme = opts && 'navigationRailTheme' in opts ? opts.navigationRailTheme : null;
      let outlinedButtonTheme = opts && 'outlinedButtonTheme' in opts ? opts.outlinedButtonTheme : null;
      let popupMenuTheme = opts && 'popupMenuTheme' in opts ? opts.popupMenuTheme : null;
      let progressIndicatorTheme = opts && 'progressIndicatorTheme' in opts ? opts.progressIndicatorTheme : null;
      let radioTheme = opts && 'radioTheme' in opts ? opts.radioTheme : null;
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      let snackBarTheme = opts && 'snackBarTheme' in opts ? opts.snackBarTheme : null;
      let switchTheme = opts && 'switchTheme' in opts ? opts.switchTheme : null;
      let tabBarTheme = opts && 'tabBarTheme' in opts ? opts.tabBarTheme : null;
      let textButtonTheme = opts && 'textButtonTheme' in opts ? opts.textButtonTheme : null;
      let textSelectionTheme = opts && 'textSelectionTheme' in opts ? opts.textSelectionTheme : null;
      let timePickerTheme = opts && 'timePickerTheme' in opts ? opts.timePickerTheme : null;
      let toggleButtonsTheme = opts && 'toggleButtonsTheme' in opts ? opts.toggleButtonsTheme : null;
      let tooltipTheme = opts && 'tooltipTheme' in opts ? opts.tooltipTheme : null;
      let accentColor = opts && 'accentColor' in opts ? opts.accentColor : null;
      let accentColorBrightness = opts && 'accentColorBrightness' in opts ? opts.accentColorBrightness : null;
      let accentTextTheme = opts && 'accentTextTheme' in opts ? opts.accentTextTheme : null;
      let accentIconTheme = opts && 'accentIconTheme' in opts ? opts.accentIconTheme : null;
      let buttonColor = opts && 'buttonColor' in opts ? opts.buttonColor : null;
      let fixTextFieldOutlineLabel = opts && 'fixTextFieldOutlineLabel' in opts ? opts.fixTextFieldOutlineLabel : null;
      let primaryColorBrightness = opts && 'primaryColorBrightness' in opts ? opts.primaryColorBrightness : null;
      let androidOverscrollIndicator = opts && 'androidOverscrollIndicator' in opts ? opts.androidOverscrollIndicator : null;
      return theme_data.ThemeData.new({applyElevationOverlayColor: applyElevationOverlayColor, cupertinoOverrideTheme: cupertinoOverrideTheme, extensions: extensions, inputDecorationTheme: inputDecorationTheme, materialTapTargetSize: materialTapTargetSize, pageTransitionsTheme: pageTransitionsTheme, platform: platform, scrollbarTheme: scrollbarTheme, splashFactory: splashFactory, useMaterial3: useMaterial3, visualDensity: visualDensity, backgroundColor: backgroundColor, bottomAppBarColor: bottomAppBarColor, brightness: brightness, canvasColor: canvasColor, cardColor: cardColor, colorScheme: colorScheme, colorSchemeSeed: colorSchemeSeed, dialogBackgroundColor: dialogBackgroundColor, disabledColor: disabledColor, dividerColor: dividerColor, errorColor: errorColor, focusColor: focusColor, highlightColor: highlightColor, hintColor: hintColor, hoverColor: hoverColor, indicatorColor: indicatorColor, primaryColor: primaryColor, primaryColorDark: primaryColorDark, primaryColorLight: primaryColorLight, primarySwatch: primarySwatch, scaffoldBackgroundColor: scaffoldBackgroundColor, secondaryHeaderColor: secondaryHeaderColor, selectedRowColor: selectedRowColor, shadowColor: shadowColor, splashColor: splashColor, toggleableActiveColor: toggleableActiveColor, unselectedWidgetColor: unselectedWidgetColor, fontFamily: fontFamily, iconTheme: iconTheme, primaryIconTheme: primaryIconTheme, primaryTextTheme: primaryTextTheme, textTheme: textTheme, typography: typography, appBarTheme: appBarTheme, bannerTheme: bannerTheme, bottomAppBarTheme: bottomAppBarTheme, bottomNavigationBarTheme: bottomNavigationBarTheme, bottomSheetTheme: bottomSheetTheme, buttonBarTheme: buttonBarTheme, buttonTheme: buttonTheme, cardTheme: cardTheme, checkboxTheme: checkboxTheme, chipTheme: chipTheme, dataTableTheme: dataTableTheme, dialogTheme: dialogTheme, dividerTheme: dividerTheme, drawerTheme: drawerTheme, elevatedButtonTheme: elevatedButtonTheme, expansionTileTheme: expansionTileTheme, floatingActionButtonTheme: floatingActionButtonTheme, listTileTheme: listTileTheme, navigationBarTheme: navigationBarTheme, navigationRailTheme: navigationRailTheme, outlinedButtonTheme: outlinedButtonTheme, popupMenuTheme: popupMenuTheme, progressIndicatorTheme: progressIndicatorTheme, radioTheme: radioTheme, sliderTheme: sliderTheme, snackBarTheme: snackBarTheme, switchTheme: switchTheme, tabBarTheme: tabBarTheme, textButtonTheme: textButtonTheme, textSelectionTheme: textSelectionTheme, timePickerTheme: timePickerTheme, toggleButtonsTheme: toggleButtonsTheme, tooltipTheme: tooltipTheme, accentColor: accentColor, accentColorBrightness: accentColorBrightness, accentTextTheme: accentTextTheme, accentIconTheme: accentIconTheme, buttonColor: buttonColor, fixTextFieldOutlineLabel: fixTextFieldOutlineLabel, primaryColorBrightness: primaryColorBrightness, androidOverscrollIndicator: androidOverscrollIndicator});
    }
    static ['_#raw#tearOff'](opts) {
      let applyElevationOverlayColor = opts && 'applyElevationOverlayColor' in opts ? opts.applyElevationOverlayColor : null;
      let cupertinoOverrideTheme = opts && 'cupertinoOverrideTheme' in opts ? opts.cupertinoOverrideTheme : null;
      let extensions = opts && 'extensions' in opts ? opts.extensions : null;
      let inputDecorationTheme = opts && 'inputDecorationTheme' in opts ? opts.inputDecorationTheme : null;
      let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
      let pageTransitionsTheme = opts && 'pageTransitionsTheme' in opts ? opts.pageTransitionsTheme : null;
      let platform = opts && 'platform' in opts ? opts.platform : null;
      let scrollbarTheme = opts && 'scrollbarTheme' in opts ? opts.scrollbarTheme : null;
      let splashFactory = opts && 'splashFactory' in opts ? opts.splashFactory : null;
      let useMaterial3 = opts && 'useMaterial3' in opts ? opts.useMaterial3 : null;
      let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let bottomAppBarColor = opts && 'bottomAppBarColor' in opts ? opts.bottomAppBarColor : null;
      let canvasColor = opts && 'canvasColor' in opts ? opts.canvasColor : null;
      let cardColor = opts && 'cardColor' in opts ? opts.cardColor : null;
      let colorScheme = opts && 'colorScheme' in opts ? opts.colorScheme : null;
      let dialogBackgroundColor = opts && 'dialogBackgroundColor' in opts ? opts.dialogBackgroundColor : null;
      let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
      let dividerColor = opts && 'dividerColor' in opts ? opts.dividerColor : null;
      let errorColor = opts && 'errorColor' in opts ? opts.errorColor : null;
      let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
      let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
      let hintColor = opts && 'hintColor' in opts ? opts.hintColor : null;
      let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
      let indicatorColor = opts && 'indicatorColor' in opts ? opts.indicatorColor : null;
      let primaryColor = opts && 'primaryColor' in opts ? opts.primaryColor : null;
      let primaryColorDark = opts && 'primaryColorDark' in opts ? opts.primaryColorDark : null;
      let primaryColorLight = opts && 'primaryColorLight' in opts ? opts.primaryColorLight : null;
      let scaffoldBackgroundColor = opts && 'scaffoldBackgroundColor' in opts ? opts.scaffoldBackgroundColor : null;
      let secondaryHeaderColor = opts && 'secondaryHeaderColor' in opts ? opts.secondaryHeaderColor : null;
      let selectedRowColor = opts && 'selectedRowColor' in opts ? opts.selectedRowColor : null;
      let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
      let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
      let toggleableActiveColor = opts && 'toggleableActiveColor' in opts ? opts.toggleableActiveColor : null;
      let unselectedWidgetColor = opts && 'unselectedWidgetColor' in opts ? opts.unselectedWidgetColor : null;
      let iconTheme = opts && 'iconTheme' in opts ? opts.iconTheme : null;
      let primaryIconTheme = opts && 'primaryIconTheme' in opts ? opts.primaryIconTheme : null;
      let primaryTextTheme = opts && 'primaryTextTheme' in opts ? opts.primaryTextTheme : null;
      let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
      let typography = opts && 'typography' in opts ? opts.typography : null;
      let appBarTheme = opts && 'appBarTheme' in opts ? opts.appBarTheme : null;
      let bannerTheme = opts && 'bannerTheme' in opts ? opts.bannerTheme : null;
      let bottomAppBarTheme = opts && 'bottomAppBarTheme' in opts ? opts.bottomAppBarTheme : null;
      let bottomNavigationBarTheme = opts && 'bottomNavigationBarTheme' in opts ? opts.bottomNavigationBarTheme : null;
      let bottomSheetTheme = opts && 'bottomSheetTheme' in opts ? opts.bottomSheetTheme : null;
      let buttonBarTheme = opts && 'buttonBarTheme' in opts ? opts.buttonBarTheme : null;
      let buttonTheme = opts && 'buttonTheme' in opts ? opts.buttonTheme : null;
      let cardTheme = opts && 'cardTheme' in opts ? opts.cardTheme : null;
      let checkboxTheme = opts && 'checkboxTheme' in opts ? opts.checkboxTheme : null;
      let chipTheme = opts && 'chipTheme' in opts ? opts.chipTheme : null;
      let dataTableTheme = opts && 'dataTableTheme' in opts ? opts.dataTableTheme : null;
      let dialogTheme = opts && 'dialogTheme' in opts ? opts.dialogTheme : null;
      let dividerTheme = opts && 'dividerTheme' in opts ? opts.dividerTheme : null;
      let drawerTheme = opts && 'drawerTheme' in opts ? opts.drawerTheme : null;
      let elevatedButtonTheme = opts && 'elevatedButtonTheme' in opts ? opts.elevatedButtonTheme : null;
      let expansionTileTheme = opts && 'expansionTileTheme' in opts ? opts.expansionTileTheme : null;
      let floatingActionButtonTheme = opts && 'floatingActionButtonTheme' in opts ? opts.floatingActionButtonTheme : null;
      let listTileTheme = opts && 'listTileTheme' in opts ? opts.listTileTheme : null;
      let navigationBarTheme = opts && 'navigationBarTheme' in opts ? opts.navigationBarTheme : null;
      let navigationRailTheme = opts && 'navigationRailTheme' in opts ? opts.navigationRailTheme : null;
      let outlinedButtonTheme = opts && 'outlinedButtonTheme' in opts ? opts.outlinedButtonTheme : null;
      let popupMenuTheme = opts && 'popupMenuTheme' in opts ? opts.popupMenuTheme : null;
      let progressIndicatorTheme = opts && 'progressIndicatorTheme' in opts ? opts.progressIndicatorTheme : null;
      let radioTheme = opts && 'radioTheme' in opts ? opts.radioTheme : null;
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      let snackBarTheme = opts && 'snackBarTheme' in opts ? opts.snackBarTheme : null;
      let switchTheme = opts && 'switchTheme' in opts ? opts.switchTheme : null;
      let tabBarTheme = opts && 'tabBarTheme' in opts ? opts.tabBarTheme : null;
      let textButtonTheme = opts && 'textButtonTheme' in opts ? opts.textButtonTheme : null;
      let textSelectionTheme = opts && 'textSelectionTheme' in opts ? opts.textSelectionTheme : null;
      let timePickerTheme = opts && 'timePickerTheme' in opts ? opts.timePickerTheme : null;
      let toggleButtonsTheme = opts && 'toggleButtonsTheme' in opts ? opts.toggleButtonsTheme : null;
      let tooltipTheme = opts && 'tooltipTheme' in opts ? opts.tooltipTheme : null;
      let accentColor = opts && 'accentColor' in opts ? opts.accentColor : null;
      let accentColorBrightness = opts && 'accentColorBrightness' in opts ? opts.accentColorBrightness : null;
      let accentTextTheme = opts && 'accentTextTheme' in opts ? opts.accentTextTheme : null;
      let accentIconTheme = opts && 'accentIconTheme' in opts ? opts.accentIconTheme : null;
      let buttonColor = opts && 'buttonColor' in opts ? opts.buttonColor : null;
      let fixTextFieldOutlineLabel = opts && 'fixTextFieldOutlineLabel' in opts ? opts.fixTextFieldOutlineLabel : null;
      let primaryColorBrightness = opts && 'primaryColorBrightness' in opts ? opts.primaryColorBrightness : null;
      let androidOverscrollIndicator = opts && 'androidOverscrollIndicator' in opts ? opts.androidOverscrollIndicator : null;
      return new theme_data.ThemeData.raw({applyElevationOverlayColor: applyElevationOverlayColor, cupertinoOverrideTheme: cupertinoOverrideTheme, extensions: extensions, inputDecorationTheme: inputDecorationTheme, materialTapTargetSize: materialTapTargetSize, pageTransitionsTheme: pageTransitionsTheme, platform: platform, scrollbarTheme: scrollbarTheme, splashFactory: splashFactory, useMaterial3: useMaterial3, visualDensity: visualDensity, backgroundColor: backgroundColor, bottomAppBarColor: bottomAppBarColor, canvasColor: canvasColor, cardColor: cardColor, colorScheme: colorScheme, dialogBackgroundColor: dialogBackgroundColor, disabledColor: disabledColor, dividerColor: dividerColor, errorColor: errorColor, focusColor: focusColor, highlightColor: highlightColor, hintColor: hintColor, hoverColor: hoverColor, indicatorColor: indicatorColor, primaryColor: primaryColor, primaryColorDark: primaryColorDark, primaryColorLight: primaryColorLight, scaffoldBackgroundColor: scaffoldBackgroundColor, secondaryHeaderColor: secondaryHeaderColor, selectedRowColor: selectedRowColor, shadowColor: shadowColor, splashColor: splashColor, toggleableActiveColor: toggleableActiveColor, unselectedWidgetColor: unselectedWidgetColor, iconTheme: iconTheme, primaryIconTheme: primaryIconTheme, primaryTextTheme: primaryTextTheme, textTheme: textTheme, typography: typography, appBarTheme: appBarTheme, bannerTheme: bannerTheme, bottomAppBarTheme: bottomAppBarTheme, bottomNavigationBarTheme: bottomNavigationBarTheme, bottomSheetTheme: bottomSheetTheme, buttonBarTheme: buttonBarTheme, buttonTheme: buttonTheme, cardTheme: cardTheme, checkboxTheme: checkboxTheme, chipTheme: chipTheme, dataTableTheme: dataTableTheme, dialogTheme: dialogTheme, dividerTheme: dividerTheme, drawerTheme: drawerTheme, elevatedButtonTheme: elevatedButtonTheme, expansionTileTheme: expansionTileTheme, floatingActionButtonTheme: floatingActionButtonTheme, listTileTheme: listTileTheme, navigationBarTheme: navigationBarTheme, navigationRailTheme: navigationRailTheme, outlinedButtonTheme: outlinedButtonTheme, popupMenuTheme: popupMenuTheme, progressIndicatorTheme: progressIndicatorTheme, radioTheme: radioTheme, sliderTheme: sliderTheme, snackBarTheme: snackBarTheme, switchTheme: switchTheme, tabBarTheme: tabBarTheme, textButtonTheme: textButtonTheme, textSelectionTheme: textSelectionTheme, timePickerTheme: timePickerTheme, toggleButtonsTheme: toggleButtonsTheme, tooltipTheme: tooltipTheme, accentColor: accentColor, accentColorBrightness: accentColorBrightness, accentTextTheme: accentTextTheme, accentIconTheme: accentIconTheme, buttonColor: buttonColor, fixTextFieldOutlineLabel: fixTextFieldOutlineLabel, primaryColorBrightness: primaryColorBrightness, androidOverscrollIndicator: androidOverscrollIndicator});
    }
    static from(opts) {
      let colorScheme = opts && 'colorScheme' in opts ? opts.colorScheme : null;
      let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
      let useMaterial3 = opts && 'useMaterial3' in opts ? opts.useMaterial3 : null;
      let isDark = colorScheme.brightness === ui.Brightness.dark;
      let primarySurfaceColor = isDark ? colorScheme.surface : colorScheme.primary;
      let onPrimarySurfaceColor = isDark ? colorScheme.onSurface : colorScheme.onPrimary;
      return theme_data.ThemeData.new({colorScheme: colorScheme, brightness: colorScheme.brightness, primaryColor: primarySurfaceColor, primaryColorBrightness: theme_data.ThemeData.estimateBrightnessForColor(primarySurfaceColor), canvasColor: colorScheme.background, accentColor: colorScheme.secondary, accentColorBrightness: theme_data.ThemeData.estimateBrightnessForColor(colorScheme.secondary), scaffoldBackgroundColor: colorScheme.background, bottomAppBarColor: colorScheme.surface, cardColor: colorScheme.surface, dividerColor: colorScheme.onSurface.withOpacity(0.12), backgroundColor: colorScheme.background, dialogBackgroundColor: colorScheme.background, indicatorColor: onPrimarySurfaceColor, errorColor: colorScheme.error, textTheme: textTheme, applyElevationOverlayColor: isDark, useMaterial3: useMaterial3});
    }
    static ['_#from#tearOff'](opts) {
      let colorScheme = opts && 'colorScheme' in opts ? opts.colorScheme : null;
      let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
      let useMaterial3 = opts && 'useMaterial3' in opts ? opts.useMaterial3 : null;
      return theme_data.ThemeData.from({colorScheme: colorScheme, textTheme: textTheme, useMaterial3: useMaterial3});
    }
    static light(opts) {
      let useMaterial3 = opts && 'useMaterial3' in opts ? opts.useMaterial3 : null;
      return theme_data.ThemeData.new({brightness: ui.Brightness.light, useMaterial3: useMaterial3});
    }
    static ['_#light#tearOff'](opts) {
      let useMaterial3 = opts && 'useMaterial3' in opts ? opts.useMaterial3 : null;
      return theme_data.ThemeData.light({useMaterial3: useMaterial3});
    }
    static dark(opts) {
      let useMaterial3 = opts && 'useMaterial3' in opts ? opts.useMaterial3 : null;
      return theme_data.ThemeData.new({brightness: ui.Brightness.dark, useMaterial3: useMaterial3});
    }
    static ['_#dark#tearOff'](opts) {
      let useMaterial3 = opts && 'useMaterial3' in opts ? opts.useMaterial3 : null;
      return theme_data.ThemeData.dark({useMaterial3: useMaterial3});
    }
    static fallback(opts) {
      let useMaterial3 = opts && 'useMaterial3' in opts ? opts.useMaterial3 : null;
      return theme_data.ThemeData.light({useMaterial3: useMaterial3});
    }
    static ['_#fallback#tearOff'](opts) {
      let useMaterial3 = opts && 'useMaterial3' in opts ? opts.useMaterial3 : null;
      return theme_data.ThemeData.fallback({useMaterial3: useMaterial3});
    }
    get brightness() {
      return this.colorScheme.brightness;
    }
    extension(T) {
      return dart.nullable(T).as(this.extensions[S.$_get](dart.wrapType(T)));
    }
    get accentColor() {
      return dart.nullCheck(this[S$0._accentColor$1]);
    }
    get accentColorBrightness() {
      return dart.nullCheck(this[S$0._accentColorBrightness$1]);
    }
    get accentTextTheme() {
      return dart.nullCheck(this[S$0._accentTextTheme$1]);
    }
    get accentIconTheme() {
      return dart.nullCheck(this[S$0._accentIconTheme$1]);
    }
    get buttonColor() {
      return dart.nullCheck(this[S$0._buttonColor$3]);
    }
    get fixTextFieldOutlineLabel() {
      return dart.nullCheck(this[S$0._fixTextFieldOutlineLabel$1]);
    }
    get primaryColorBrightness() {
      return dart.nullCheck(this[S$0._primaryColorBrightness$1]);
    }
    copyWith(opts) {
      let t64, t64$, t64$0, t64$1, t64$2, t64$3, t64$4, t64$5, t64$6, t64$7, t64$8, t64$9, t64$10, t64$11, t64$12, t64$13, t64$14, t64$15, t64$16, t64$17, t64$18, t64$19, t64$20, t64$21, t64$22, t64$23, t64$24, t64$25, t64$26, t64$27, t64$28, t64$29, t64$30, t64$31, t64$32, t64$33, t64$34, t64$35, t64$36, t64$37, t64$38, t64$39, t64$40, t64$41, t64$42, t64$43, t64$44, t64$45, t64$46, t64$47, t64$48, t64$49, t64$50, t64$51, t64$52, t64$53, t64$54, t64$55, t64$56, t64$57, t64$58, t64$59, t64$60, t64$61, t64$62, t64$63, t64$64, t64$65, t64$66, t64$67, t64$68, t64$69, t64$70, t64$71, t64$72, t64$73, t64$74, t64$75, t64$76, t64$77, t64$78;
      let applyElevationOverlayColor = opts && 'applyElevationOverlayColor' in opts ? opts.applyElevationOverlayColor : null;
      let cupertinoOverrideTheme = opts && 'cupertinoOverrideTheme' in opts ? opts.cupertinoOverrideTheme : null;
      let extensions = opts && 'extensions' in opts ? opts.extensions : null;
      let inputDecorationTheme = opts && 'inputDecorationTheme' in opts ? opts.inputDecorationTheme : null;
      let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
      let pageTransitionsTheme = opts && 'pageTransitionsTheme' in opts ? opts.pageTransitionsTheme : null;
      let platform = opts && 'platform' in opts ? opts.platform : null;
      let scrollbarTheme = opts && 'scrollbarTheme' in opts ? opts.scrollbarTheme : null;
      let splashFactory = opts && 'splashFactory' in opts ? opts.splashFactory : null;
      let useMaterial3 = opts && 'useMaterial3' in opts ? opts.useMaterial3 : null;
      let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let bottomAppBarColor = opts && 'bottomAppBarColor' in opts ? opts.bottomAppBarColor : null;
      let brightness = opts && 'brightness' in opts ? opts.brightness : null;
      let canvasColor = opts && 'canvasColor' in opts ? opts.canvasColor : null;
      let cardColor = opts && 'cardColor' in opts ? opts.cardColor : null;
      let colorScheme = opts && 'colorScheme' in opts ? opts.colorScheme : null;
      let dialogBackgroundColor = opts && 'dialogBackgroundColor' in opts ? opts.dialogBackgroundColor : null;
      let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
      let dividerColor = opts && 'dividerColor' in opts ? opts.dividerColor : null;
      let errorColor = opts && 'errorColor' in opts ? opts.errorColor : null;
      let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
      let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
      let hintColor = opts && 'hintColor' in opts ? opts.hintColor : null;
      let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
      let indicatorColor = opts && 'indicatorColor' in opts ? opts.indicatorColor : null;
      let primaryColor = opts && 'primaryColor' in opts ? opts.primaryColor : null;
      let primaryColorDark = opts && 'primaryColorDark' in opts ? opts.primaryColorDark : null;
      let primaryColorLight = opts && 'primaryColorLight' in opts ? opts.primaryColorLight : null;
      let scaffoldBackgroundColor = opts && 'scaffoldBackgroundColor' in opts ? opts.scaffoldBackgroundColor : null;
      let secondaryHeaderColor = opts && 'secondaryHeaderColor' in opts ? opts.secondaryHeaderColor : null;
      let selectedRowColor = opts && 'selectedRowColor' in opts ? opts.selectedRowColor : null;
      let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
      let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
      let toggleableActiveColor = opts && 'toggleableActiveColor' in opts ? opts.toggleableActiveColor : null;
      let unselectedWidgetColor = opts && 'unselectedWidgetColor' in opts ? opts.unselectedWidgetColor : null;
      let iconTheme = opts && 'iconTheme' in opts ? opts.iconTheme : null;
      let primaryIconTheme = opts && 'primaryIconTheme' in opts ? opts.primaryIconTheme : null;
      let primaryTextTheme = opts && 'primaryTextTheme' in opts ? opts.primaryTextTheme : null;
      let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
      let typography = opts && 'typography' in opts ? opts.typography : null;
      let appBarTheme = opts && 'appBarTheme' in opts ? opts.appBarTheme : null;
      let bannerTheme = opts && 'bannerTheme' in opts ? opts.bannerTheme : null;
      let bottomAppBarTheme = opts && 'bottomAppBarTheme' in opts ? opts.bottomAppBarTheme : null;
      let bottomNavigationBarTheme = opts && 'bottomNavigationBarTheme' in opts ? opts.bottomNavigationBarTheme : null;
      let bottomSheetTheme = opts && 'bottomSheetTheme' in opts ? opts.bottomSheetTheme : null;
      let buttonBarTheme = opts && 'buttonBarTheme' in opts ? opts.buttonBarTheme : null;
      let buttonTheme = opts && 'buttonTheme' in opts ? opts.buttonTheme : null;
      let cardTheme = opts && 'cardTheme' in opts ? opts.cardTheme : null;
      let checkboxTheme = opts && 'checkboxTheme' in opts ? opts.checkboxTheme : null;
      let chipTheme = opts && 'chipTheme' in opts ? opts.chipTheme : null;
      let dataTableTheme = opts && 'dataTableTheme' in opts ? opts.dataTableTheme : null;
      let dialogTheme = opts && 'dialogTheme' in opts ? opts.dialogTheme : null;
      let dividerTheme = opts && 'dividerTheme' in opts ? opts.dividerTheme : null;
      let drawerTheme = opts && 'drawerTheme' in opts ? opts.drawerTheme : null;
      let elevatedButtonTheme = opts && 'elevatedButtonTheme' in opts ? opts.elevatedButtonTheme : null;
      let expansionTileTheme = opts && 'expansionTileTheme' in opts ? opts.expansionTileTheme : null;
      let floatingActionButtonTheme = opts && 'floatingActionButtonTheme' in opts ? opts.floatingActionButtonTheme : null;
      let listTileTheme = opts && 'listTileTheme' in opts ? opts.listTileTheme : null;
      let navigationBarTheme = opts && 'navigationBarTheme' in opts ? opts.navigationBarTheme : null;
      let navigationRailTheme = opts && 'navigationRailTheme' in opts ? opts.navigationRailTheme : null;
      let outlinedButtonTheme = opts && 'outlinedButtonTheme' in opts ? opts.outlinedButtonTheme : null;
      let popupMenuTheme = opts && 'popupMenuTheme' in opts ? opts.popupMenuTheme : null;
      let progressIndicatorTheme = opts && 'progressIndicatorTheme' in opts ? opts.progressIndicatorTheme : null;
      let radioTheme = opts && 'radioTheme' in opts ? opts.radioTheme : null;
      let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
      let snackBarTheme = opts && 'snackBarTheme' in opts ? opts.snackBarTheme : null;
      let switchTheme = opts && 'switchTheme' in opts ? opts.switchTheme : null;
      let tabBarTheme = opts && 'tabBarTheme' in opts ? opts.tabBarTheme : null;
      let textButtonTheme = opts && 'textButtonTheme' in opts ? opts.textButtonTheme : null;
      let textSelectionTheme = opts && 'textSelectionTheme' in opts ? opts.textSelectionTheme : null;
      let timePickerTheme = opts && 'timePickerTheme' in opts ? opts.timePickerTheme : null;
      let toggleButtonsTheme = opts && 'toggleButtonsTheme' in opts ? opts.toggleButtonsTheme : null;
      let tooltipTheme = opts && 'tooltipTheme' in opts ? opts.tooltipTheme : null;
      let accentColor = opts && 'accentColor' in opts ? opts.accentColor : null;
      let accentColorBrightness = opts && 'accentColorBrightness' in opts ? opts.accentColorBrightness : null;
      let accentTextTheme = opts && 'accentTextTheme' in opts ? opts.accentTextTheme : null;
      let accentIconTheme = opts && 'accentIconTheme' in opts ? opts.accentIconTheme : null;
      let buttonColor = opts && 'buttonColor' in opts ? opts.buttonColor : null;
      let fixTextFieldOutlineLabel = opts && 'fixTextFieldOutlineLabel' in opts ? opts.fixTextFieldOutlineLabel : null;
      let primaryColorBrightness = opts && 'primaryColorBrightness' in opts ? opts.primaryColorBrightness : null;
      let androidOverscrollIndicator = opts && 'androidOverscrollIndicator' in opts ? opts.androidOverscrollIndicator : null;
      cupertinoOverrideTheme = (t64 = cupertinoOverrideTheme, t64 == null ? null : t64.noDefault());
      return new theme_data.ThemeData.raw({applyElevationOverlayColor: (t64$ = applyElevationOverlayColor, t64$ == null ? this.applyElevationOverlayColor : t64$), cupertinoOverrideTheme: (t64$0 = cupertinoOverrideTheme, t64$0 == null ? this.cupertinoOverrideTheme : t64$0), extensions: extensions != null ? theme_data.ThemeData._themeExtensionIterableToMap(extensions) : this.extensions, inputDecorationTheme: (t64$1 = inputDecorationTheme, t64$1 == null ? this.inputDecorationTheme : t64$1), materialTapTargetSize: (t64$2 = materialTapTargetSize, t64$2 == null ? this.materialTapTargetSize : t64$2), pageTransitionsTheme: (t64$3 = pageTransitionsTheme, t64$3 == null ? this.pageTransitionsTheme : t64$3), platform: (t64$4 = platform, t64$4 == null ? this.platform : t64$4), scrollbarTheme: (t64$5 = scrollbarTheme, t64$5 == null ? this.scrollbarTheme : t64$5), splashFactory: (t64$6 = splashFactory, t64$6 == null ? this.splashFactory : t64$6), useMaterial3: (t64$7 = useMaterial3, t64$7 == null ? this.useMaterial3 : t64$7), visualDensity: (t64$8 = visualDensity, t64$8 == null ? this.visualDensity : t64$8), backgroundColor: (t64$9 = backgroundColor, t64$9 == null ? this.backgroundColor : t64$9), bottomAppBarColor: (t64$10 = bottomAppBarColor, t64$10 == null ? this.bottomAppBarColor : t64$10), canvasColor: (t64$11 = canvasColor, t64$11 == null ? this.canvasColor : t64$11), cardColor: (t64$12 = cardColor, t64$12 == null ? this.cardColor : t64$12), colorScheme: (t64$13 = colorScheme, t64$13 == null ? this.colorScheme : t64$13).copyWith({brightness: brightness}), dialogBackgroundColor: (t64$14 = dialogBackgroundColor, t64$14 == null ? this.dialogBackgroundColor : t64$14), disabledColor: (t64$15 = disabledColor, t64$15 == null ? this.disabledColor : t64$15), dividerColor: (t64$16 = dividerColor, t64$16 == null ? this.dividerColor : t64$16), errorColor: (t64$17 = errorColor, t64$17 == null ? this.errorColor : t64$17), focusColor: (t64$18 = focusColor, t64$18 == null ? this.focusColor : t64$18), highlightColor: (t64$19 = highlightColor, t64$19 == null ? this.highlightColor : t64$19), hintColor: (t64$20 = hintColor, t64$20 == null ? this.hintColor : t64$20), hoverColor: (t64$21 = hoverColor, t64$21 == null ? this.hoverColor : t64$21), indicatorColor: (t64$22 = indicatorColor, t64$22 == null ? this.indicatorColor : t64$22), primaryColor: (t64$23 = primaryColor, t64$23 == null ? this.primaryColor : t64$23), primaryColorDark: (t64$24 = primaryColorDark, t64$24 == null ? this.primaryColorDark : t64$24), primaryColorLight: (t64$25 = primaryColorLight, t64$25 == null ? this.primaryColorLight : t64$25), scaffoldBackgroundColor: (t64$26 = scaffoldBackgroundColor, t64$26 == null ? this.scaffoldBackgroundColor : t64$26), secondaryHeaderColor: (t64$27 = secondaryHeaderColor, t64$27 == null ? this.secondaryHeaderColor : t64$27), selectedRowColor: (t64$28 = selectedRowColor, t64$28 == null ? this.selectedRowColor : t64$28), shadowColor: (t64$29 = shadowColor, t64$29 == null ? this.shadowColor : t64$29), splashColor: (t64$30 = splashColor, t64$30 == null ? this.splashColor : t64$30), toggleableActiveColor: (t64$31 = toggleableActiveColor, t64$31 == null ? this.toggleableActiveColor : t64$31), unselectedWidgetColor: (t64$32 = unselectedWidgetColor, t64$32 == null ? this.unselectedWidgetColor : t64$32), iconTheme: (t64$33 = iconTheme, t64$33 == null ? this.iconTheme : t64$33), primaryIconTheme: (t64$34 = primaryIconTheme, t64$34 == null ? this.primaryIconTheme : t64$34), primaryTextTheme: (t64$35 = primaryTextTheme, t64$35 == null ? this.primaryTextTheme : t64$35), textTheme: (t64$36 = textTheme, t64$36 == null ? this.textTheme : t64$36), typography: (t64$37 = typography, t64$37 == null ? this.typography : t64$37), appBarTheme: (t64$38 = appBarTheme, t64$38 == null ? this.appBarTheme : t64$38), bannerTheme: (t64$39 = bannerTheme, t64$39 == null ? this.bannerTheme : t64$39), bottomAppBarTheme: (t64$40 = bottomAppBarTheme, t64$40 == null ? this.bottomAppBarTheme : t64$40), bottomNavigationBarTheme: (t64$41 = bottomNavigationBarTheme, t64$41 == null ? this.bottomNavigationBarTheme : t64$41), bottomSheetTheme: (t64$42 = bottomSheetTheme, t64$42 == null ? this.bottomSheetTheme : t64$42), buttonBarTheme: (t64$43 = buttonBarTheme, t64$43 == null ? this.buttonBarTheme : t64$43), buttonTheme: (t64$44 = buttonTheme, t64$44 == null ? this.buttonTheme : t64$44), cardTheme: (t64$45 = cardTheme, t64$45 == null ? this.cardTheme : t64$45), checkboxTheme: (t64$46 = checkboxTheme, t64$46 == null ? this.checkboxTheme : t64$46), chipTheme: (t64$47 = chipTheme, t64$47 == null ? this.chipTheme : t64$47), dataTableTheme: (t64$48 = dataTableTheme, t64$48 == null ? this.dataTableTheme : t64$48), dialogTheme: (t64$49 = dialogTheme, t64$49 == null ? this.dialogTheme : t64$49), dividerTheme: (t64$50 = dividerTheme, t64$50 == null ? this.dividerTheme : t64$50), drawerTheme: (t64$51 = drawerTheme, t64$51 == null ? this.drawerTheme : t64$51), elevatedButtonTheme: (t64$52 = elevatedButtonTheme, t64$52 == null ? this.elevatedButtonTheme : t64$52), expansionTileTheme: (t64$53 = expansionTileTheme, t64$53 == null ? this.expansionTileTheme : t64$53), floatingActionButtonTheme: (t64$54 = floatingActionButtonTheme, t64$54 == null ? this.floatingActionButtonTheme : t64$54), listTileTheme: (t64$55 = listTileTheme, t64$55 == null ? this.listTileTheme : t64$55), navigationBarTheme: (t64$56 = navigationBarTheme, t64$56 == null ? this.navigationBarTheme : t64$56), navigationRailTheme: (t64$57 = navigationRailTheme, t64$57 == null ? this.navigationRailTheme : t64$57), outlinedButtonTheme: (t64$58 = outlinedButtonTheme, t64$58 == null ? this.outlinedButtonTheme : t64$58), popupMenuTheme: (t64$59 = popupMenuTheme, t64$59 == null ? this.popupMenuTheme : t64$59), progressIndicatorTheme: (t64$60 = progressIndicatorTheme, t64$60 == null ? this.progressIndicatorTheme : t64$60), radioTheme: (t64$61 = radioTheme, t64$61 == null ? this.radioTheme : t64$61), sliderTheme: (t64$62 = sliderTheme, t64$62 == null ? this.sliderTheme : t64$62), snackBarTheme: (t64$63 = snackBarTheme, t64$63 == null ? this.snackBarTheme : t64$63), switchTheme: (t64$64 = switchTheme, t64$64 == null ? this.switchTheme : t64$64), tabBarTheme: (t64$65 = tabBarTheme, t64$65 == null ? this.tabBarTheme : t64$65), textButtonTheme: (t64$66 = textButtonTheme, t64$66 == null ? this.textButtonTheme : t64$66), textSelectionTheme: (t64$67 = textSelectionTheme, t64$67 == null ? this.textSelectionTheme : t64$67), timePickerTheme: (t64$68 = timePickerTheme, t64$68 == null ? this.timePickerTheme : t64$68), toggleButtonsTheme: (t64$69 = toggleButtonsTheme, t64$69 == null ? this.toggleButtonsTheme : t64$69), tooltipTheme: (t64$70 = tooltipTheme, t64$70 == null ? this.tooltipTheme : t64$70), accentColor: (t64$71 = accentColor, t64$71 == null ? this.accentColor : t64$71), accentColorBrightness: (t64$72 = accentColorBrightness, t64$72 == null ? this.accentColorBrightness : t64$72), accentTextTheme: (t64$73 = accentTextTheme, t64$73 == null ? this.accentTextTheme : t64$73), accentIconTheme: (t64$74 = accentIconTheme, t64$74 == null ? this.accentIconTheme : t64$74), buttonColor: (t64$75 = buttonColor, t64$75 == null ? this.buttonColor : t64$75), fixTextFieldOutlineLabel: (t64$76 = fixTextFieldOutlineLabel, t64$76 == null ? this.fixTextFieldOutlineLabel : t64$76), primaryColorBrightness: (t64$77 = primaryColorBrightness, t64$77 == null ? this.primaryColorBrightness : t64$77), androidOverscrollIndicator: (t64$78 = androidOverscrollIndicator, t64$78 == null ? this.androidOverscrollIndicator : t64$78)});
    }
    static localize(baseTheme, localTextGeometry) {
      if (!(baseTheme !== null)) dart.assertFailed(null, I[102], 1893, 12, "baseTheme != null");
      if (!(localTextGeometry !== null)) dart.assertFailed(null, I[102], 1894, 12, "localTextGeometry != null");
      return theme_data.ThemeData._localizedThemeDataCache.putIfAbsent(new theme_data._IdentityThemeDataCacheKey.new(baseTheme, localTextGeometry), dart.fn(() => baseTheme.copyWith({primaryTextTheme: localTextGeometry.merge(baseTheme.primaryTextTheme), accentTextTheme: localTextGeometry.merge(baseTheme.accentTextTheme), textTheme: localTextGeometry.merge(baseTheme.textTheme)}), T$.VoidToThemeData()));
    }
    static estimateBrightnessForColor(color) {
      let relativeLuminance = color.computeLuminance();
      if ((relativeLuminance + 0.05) * (relativeLuminance + 0.05) > 0.15) {
        return ui.Brightness.light;
      }
      return ui.Brightness.dark;
    }
    static _lerpThemeExtensions(a, b, t) {
      let newExtensions = a.extensions[S.$map](core.Object, theme_data.ThemeExtension, dart.fn((id, extensionA) => {
        let extensionB = b.extensions[S.$_get](id);
        return new (T$.MapEntryOfObject$ThemeExtension()).__(id, extensionA.lerp(extensionB, t));
      }, T$.ObjectAndThemeExtensionToMapEntryOfObject$ThemeExtension()));
      newExtensions[S$1.$addEntries](b.extensions[S$1.$entries][S$1.$where](dart.fn(entry => !a.extensions[S$1.$containsKey](entry.key), T$.MapEntryOfObject$ThemeExtensionTobool())));
      return newExtensions;
    }
    static _themeExtensionIterableToMap(extensionsIterable) {
      return T$.MapOfObject$ThemeExtension().unmodifiable((() => {
        let t64 = new (T$.LinkedMapOfObject$ThemeExtensionOfThemeExtension()).new();
        for (let extension of extensionsIterable)
          t64[S.$_set](extension.type, T$.ThemeExtensionOfThemeExtension().as(extension));
        return t64;
      })());
    }
    static lerp(a, b, t) {
      if (!(a !== null)) dart.assertFailed(null, I[102], 1963, 12, "a != null");
      if (!(b !== null)) dart.assertFailed(null, I[102], 1964, 12, "b != null");
      if (!(t !== null)) dart.assertFailed(null, I[102], 1965, 12, "t != null");
      return new theme_data.ThemeData.raw({applyElevationOverlayColor: t < 0.5 ? a.applyElevationOverlayColor : b.applyElevationOverlayColor, cupertinoOverrideTheme: t < 0.5 ? a.cupertinoOverrideTheme : b.cupertinoOverrideTheme, extensions: theme_data.ThemeData._lerpThemeExtensions(a, b, t), inputDecorationTheme: t < 0.5 ? a.inputDecorationTheme : b.inputDecorationTheme, materialTapTargetSize: t < 0.5 ? a.materialTapTargetSize : b.materialTapTargetSize, pageTransitionsTheme: t < 0.5 ? a.pageTransitionsTheme : b.pageTransitionsTheme, platform: t < 0.5 ? a.platform : b.platform, scrollbarTheme: scrollbar_theme.ScrollbarThemeData.lerp(a.scrollbarTheme, b.scrollbarTheme, t), splashFactory: t < 0.5 ? a.splashFactory : b.splashFactory, useMaterial3: t < 0.5 ? a.useMaterial3 : b.useMaterial3, visualDensity: theme_data.VisualDensity.lerp(a.visualDensity, b.visualDensity, t), backgroundColor: dart.nullCheck(ui.Color.lerp(a.backgroundColor, b.backgroundColor, t)), bottomAppBarColor: dart.nullCheck(ui.Color.lerp(a.bottomAppBarColor, b.bottomAppBarColor, t)), canvasColor: dart.nullCheck(ui.Color.lerp(a.canvasColor, b.canvasColor, t)), cardColor: dart.nullCheck(ui.Color.lerp(a.cardColor, b.cardColor, t)), colorScheme: color_scheme.ColorScheme.lerp(a.colorScheme, b.colorScheme, t), dialogBackgroundColor: dart.nullCheck(ui.Color.lerp(a.dialogBackgroundColor, b.dialogBackgroundColor, t)), disabledColor: dart.nullCheck(ui.Color.lerp(a.disabledColor, b.disabledColor, t)), dividerColor: dart.nullCheck(ui.Color.lerp(a.dividerColor, b.dividerColor, t)), errorColor: dart.nullCheck(ui.Color.lerp(a.errorColor, b.errorColor, t)), focusColor: dart.nullCheck(ui.Color.lerp(a.focusColor, b.focusColor, t)), highlightColor: dart.nullCheck(ui.Color.lerp(a.highlightColor, b.highlightColor, t)), hintColor: dart.nullCheck(ui.Color.lerp(a.hintColor, b.hintColor, t)), hoverColor: dart.nullCheck(ui.Color.lerp(a.hoverColor, b.hoverColor, t)), indicatorColor: dart.nullCheck(ui.Color.lerp(a.indicatorColor, b.indicatorColor, t)), primaryColor: dart.nullCheck(ui.Color.lerp(a.primaryColor, b.primaryColor, t)), primaryColorDark: dart.nullCheck(ui.Color.lerp(a.primaryColorDark, b.primaryColorDark, t)), primaryColorLight: dart.nullCheck(ui.Color.lerp(a.primaryColorLight, b.primaryColorLight, t)), scaffoldBackgroundColor: dart.nullCheck(ui.Color.lerp(a.scaffoldBackgroundColor, b.scaffoldBackgroundColor, t)), secondaryHeaderColor: dart.nullCheck(ui.Color.lerp(a.secondaryHeaderColor, b.secondaryHeaderColor, t)), selectedRowColor: dart.nullCheck(ui.Color.lerp(a.selectedRowColor, b.selectedRowColor, t)), shadowColor: dart.nullCheck(ui.Color.lerp(a.shadowColor, b.shadowColor, t)), splashColor: dart.nullCheck(ui.Color.lerp(a.splashColor, b.splashColor, t)), toggleableActiveColor: dart.nullCheck(ui.Color.lerp(a.toggleableActiveColor, b.toggleableActiveColor, t)), unselectedWidgetColor: dart.nullCheck(ui.Color.lerp(a.unselectedWidgetColor, b.unselectedWidgetColor, t)), iconTheme: icon_theme_data.IconThemeData.lerp(a.iconTheme, b.iconTheme, t), primaryIconTheme: icon_theme_data.IconThemeData.lerp(a.primaryIconTheme, b.primaryIconTheme, t), primaryTextTheme: text_theme.TextTheme.lerp(a.primaryTextTheme, b.primaryTextTheme, t), textTheme: text_theme.TextTheme.lerp(a.textTheme, b.textTheme, t), typography: typography$.Typography.lerp(a.typography, b.typography, t), appBarTheme: app_bar_theme.AppBarTheme.lerp(a.appBarTheme, b.appBarTheme, t), bannerTheme: banner_theme.MaterialBannerThemeData.lerp(a.bannerTheme, b.bannerTheme, t), bottomAppBarTheme: bottom_app_bar_theme.BottomAppBarTheme.lerp(a.bottomAppBarTheme, b.bottomAppBarTheme, t), bottomNavigationBarTheme: bottom_navigation_bar_theme.BottomNavigationBarThemeData.lerp(a.bottomNavigationBarTheme, b.bottomNavigationBarTheme, t), bottomSheetTheme: dart.nullCheck(bottom_sheet_theme.BottomSheetThemeData.lerp(a.bottomSheetTheme, b.bottomSheetTheme, t)), buttonBarTheme: dart.nullCheck(button_bar_theme.ButtonBarThemeData.lerp(a.buttonBarTheme, b.buttonBarTheme, t)), buttonTheme: t < 0.5 ? a.buttonTheme : b.buttonTheme, cardTheme: card_theme.CardTheme.lerp(a.cardTheme, b.cardTheme, t), checkboxTheme: checkbox_theme.CheckboxThemeData.lerp(a.checkboxTheme, b.checkboxTheme, t), chipTheme: dart.nullCheck(chip_theme.ChipThemeData.lerp(a.chipTheme, b.chipTheme, t)), dataTableTheme: data_table_theme.DataTableThemeData.lerp(a.dataTableTheme, b.dataTableTheme, t), dialogTheme: dialog_theme.DialogTheme.lerp(a.dialogTheme, b.dialogTheme, t), dividerTheme: divider_theme.DividerThemeData.lerp(a.dividerTheme, b.dividerTheme, t), drawerTheme: dart.nullCheck(drawer_theme.DrawerThemeData.lerp(a.drawerTheme, b.drawerTheme, t)), elevatedButtonTheme: dart.nullCheck(elevated_button_theme.ElevatedButtonThemeData.lerp(a.elevatedButtonTheme, b.elevatedButtonTheme, t)), expansionTileTheme: dart.nullCheck(expansion_tile_theme.ExpansionTileThemeData.lerp(a.expansionTileTheme, b.expansionTileTheme, t)), floatingActionButtonTheme: dart.nullCheck(floating_action_button_theme.FloatingActionButtonThemeData.lerp(a.floatingActionButtonTheme, b.floatingActionButtonTheme, t)), listTileTheme: dart.nullCheck(list_tile_theme.ListTileThemeData.lerp(a.listTileTheme, b.listTileTheme, t)), navigationBarTheme: dart.nullCheck(navigation_bar_theme.NavigationBarThemeData.lerp(a.navigationBarTheme, b.navigationBarTheme, t)), navigationRailTheme: dart.nullCheck(navigation_rail_theme.NavigationRailThemeData.lerp(a.navigationRailTheme, b.navigationRailTheme, t)), outlinedButtonTheme: dart.nullCheck(outlined_button_theme.OutlinedButtonThemeData.lerp(a.outlinedButtonTheme, b.outlinedButtonTheme, t)), popupMenuTheme: dart.nullCheck(popup_menu_theme.PopupMenuThemeData.lerp(a.popupMenuTheme, b.popupMenuTheme, t)), progressIndicatorTheme: dart.nullCheck(progress_indicator_theme.ProgressIndicatorThemeData.lerp(a.progressIndicatorTheme, b.progressIndicatorTheme, t)), radioTheme: radio_theme.RadioThemeData.lerp(a.radioTheme, b.radioTheme, t), sliderTheme: slider_theme.SliderThemeData.lerp(a.sliderTheme, b.sliderTheme, t), snackBarTheme: snack_bar_theme.SnackBarThemeData.lerp(a.snackBarTheme, b.snackBarTheme, t), switchTheme: switch_theme.SwitchThemeData.lerp(a.switchTheme, b.switchTheme, t), tabBarTheme: tab_bar_theme.TabBarTheme.lerp(a.tabBarTheme, b.tabBarTheme, t), textButtonTheme: dart.nullCheck(text_button_theme.TextButtonThemeData.lerp(a.textButtonTheme, b.textButtonTheme, t)), textSelectionTheme: dart.nullCheck(text_selection_theme.TextSelectionThemeData.lerp(a.textSelectionTheme, b.textSelectionTheme, t)), timePickerTheme: time_picker_theme.TimePickerThemeData.lerp(a.timePickerTheme, b.timePickerTheme, t), toggleButtonsTheme: dart.nullCheck(toggle_buttons_theme.ToggleButtonsThemeData.lerp(a.toggleButtonsTheme, b.toggleButtonsTheme, t)), tooltipTheme: dart.nullCheck(tooltip_theme.TooltipThemeData.lerp(a.tooltipTheme, b.tooltipTheme, t)), accentColor: ui.Color.lerp(a.accentColor, b.accentColor, t), accentColorBrightness: t < 0.5 ? a.accentColorBrightness : b.accentColorBrightness, accentTextTheme: text_theme.TextTheme.lerp(a.accentTextTheme, b.accentTextTheme, t), accentIconTheme: icon_theme_data.IconThemeData.lerp(a.accentIconTheme, b.accentIconTheme, t), buttonColor: ui.Color.lerp(a.buttonColor, b.buttonColor, t), fixTextFieldOutlineLabel: t < 0.5 ? a.fixTextFieldOutlineLabel : b.fixTextFieldOutlineLabel, primaryColorBrightness: t < 0.5 ? a.primaryColorBrightness : b.primaryColorBrightness, androidOverscrollIndicator: t < 0.5 ? a.androidOverscrollIndicator : b.androidOverscrollIndicator});
    }
    _equals(other) {
      if (other == null) return false;
      if (!other[S.$runtimeType]._equals(this[S.$runtimeType])) {
        return false;
      }
      return theme_data.ThemeData.is(other) && other.applyElevationOverlayColor === this.applyElevationOverlayColor && dart.equals(other.cupertinoOverrideTheme, this.cupertinoOverrideTheme) && collections.mapEquals(core.Object, theme_data.ThemeExtension, other.extensions, this.extensions) && other.inputDecorationTheme._equals(this.inputDecorationTheme) && other.materialTapTargetSize === this.materialTapTargetSize && other.pageTransitionsTheme._equals(this.pageTransitionsTheme) && other.platform === this.platform && other.scrollbarTheme._equals(this.scrollbarTheme) && other.splashFactory[S.$_equals](this.splashFactory) && other.useMaterial3 === this.useMaterial3 && other.visualDensity._equals(this.visualDensity) && other.backgroundColor._equals(this.backgroundColor) && other.bottomAppBarColor._equals(this.bottomAppBarColor) && other.canvasColor._equals(this.canvasColor) && other.cardColor._equals(this.cardColor) && other.colorScheme._equals(this.colorScheme) && other.dialogBackgroundColor._equals(this.dialogBackgroundColor) && other.disabledColor._equals(this.disabledColor) && other.dividerColor._equals(this.dividerColor) && other.errorColor._equals(this.errorColor) && other.focusColor._equals(this.focusColor) && other.highlightColor._equals(this.highlightColor) && other.hintColor._equals(this.hintColor) && other.hoverColor._equals(this.hoverColor) && other.indicatorColor._equals(this.indicatorColor) && other.primaryColor._equals(this.primaryColor) && other.primaryColorDark._equals(this.primaryColorDark) && other.primaryColorLight._equals(this.primaryColorLight) && other.scaffoldBackgroundColor._equals(this.scaffoldBackgroundColor) && other.secondaryHeaderColor._equals(this.secondaryHeaderColor) && other.selectedRowColor._equals(this.selectedRowColor) && other.shadowColor._equals(this.shadowColor) && other.splashColor._equals(this.splashColor) && other.toggleableActiveColor._equals(this.toggleableActiveColor) && other.unselectedWidgetColor._equals(this.unselectedWidgetColor) && other.iconTheme._equals(this.iconTheme) && other.primaryIconTheme._equals(this.primaryIconTheme) && other.primaryTextTheme._equals(this.primaryTextTheme) && other.textTheme._equals(this.textTheme) && other.typography._equals(this.typography) && other.appBarTheme._equals(this.appBarTheme) && other.bannerTheme._equals(this.bannerTheme) && other.bottomAppBarTheme._equals(this.bottomAppBarTheme) && other.bottomNavigationBarTheme._equals(this.bottomNavigationBarTheme) && other.bottomSheetTheme._equals(this.bottomSheetTheme) && other.buttonBarTheme._equals(this.buttonBarTheme) && other.buttonTheme._equals(this.buttonTheme) && other.cardTheme._equals(this.cardTheme) && other.checkboxTheme._equals(this.checkboxTheme) && other.chipTheme._equals(this.chipTheme) && other.dataTableTheme._equals(this.dataTableTheme) && other.dialogTheme._equals(this.dialogTheme) && other.dividerTheme._equals(this.dividerTheme) && other.drawerTheme._equals(this.drawerTheme) && other.elevatedButtonTheme._equals(this.elevatedButtonTheme) && other.expansionTileTheme._equals(this.expansionTileTheme) && other.floatingActionButtonTheme._equals(this.floatingActionButtonTheme) && other.listTileTheme._equals(this.listTileTheme) && other.navigationBarTheme._equals(this.navigationBarTheme) && other.navigationRailTheme._equals(this.navigationRailTheme) && other.outlinedButtonTheme._equals(this.outlinedButtonTheme) && other.popupMenuTheme._equals(this.popupMenuTheme) && other.progressIndicatorTheme._equals(this.progressIndicatorTheme) && other.radioTheme._equals(this.radioTheme) && other.sliderTheme._equals(this.sliderTheme) && other.snackBarTheme._equals(this.snackBarTheme) && other.switchTheme._equals(this.switchTheme) && other.tabBarTheme._equals(this.tabBarTheme) && other.textButtonTheme._equals(this.textButtonTheme) && other.textSelectionTheme._equals(this.textSelectionTheme) && other.timePickerTheme._equals(this.timePickerTheme) && other.toggleButtonsTheme._equals(this.toggleButtonsTheme) && other.tooltipTheme._equals(this.tooltipTheme) && other.accentColor._equals(this.accentColor) && other.accentColorBrightness === this.accentColorBrightness && other.accentTextTheme._equals(this.accentTextTheme) && other.accentIconTheme._equals(this.accentIconTheme) && other.buttonColor._equals(this.buttonColor) && other.fixTextFieldOutlineLabel === this.fixTextFieldOutlineLabel && other.primaryColorBrightness === this.primaryColorBrightness && other.androidOverscrollIndicator == this.androidOverscrollIndicator;
    }
    get hashCode() {
      let values = (() => {
        let t65 = T$.JSArrayOfObjectN().of([this.applyElevationOverlayColor, this.cupertinoOverrideTheme]);
        t65[S.$addAll](this.extensions[S$1.$keys]);
        t65[S.$addAll](this.extensions[S$1.$values]);
        t65.push(this.inputDecorationTheme);
        t65.push(this.materialTapTargetSize);
        t65.push(this.pageTransitionsTheme);
        t65.push(this.platform);
        t65.push(this.scrollbarTheme);
        t65.push(this.splashFactory);
        t65.push(this.useMaterial3);
        t65.push(this.visualDensity);
        t65.push(this.backgroundColor);
        t65.push(this.bottomAppBarColor);
        t65.push(this.canvasColor);
        t65.push(this.cardColor);
        t65.push(this.colorScheme);
        t65.push(this.dialogBackgroundColor);
        t65.push(this.disabledColor);
        t65.push(this.dividerColor);
        t65.push(this.errorColor);
        t65.push(this.focusColor);
        t65.push(this.highlightColor);
        t65.push(this.hintColor);
        t65.push(this.hoverColor);
        t65.push(this.indicatorColor);
        t65.push(this.primaryColor);
        t65.push(this.primaryColorDark);
        t65.push(this.primaryColorLight);
        t65.push(this.scaffoldBackgroundColor);
        t65.push(this.secondaryHeaderColor);
        t65.push(this.selectedRowColor);
        t65.push(this.shadowColor);
        t65.push(this.splashColor);
        t65.push(this.toggleableActiveColor);
        t65.push(this.unselectedWidgetColor);
        t65.push(this.iconTheme);
        t65.push(this.primaryIconTheme);
        t65.push(this.primaryTextTheme);
        t65.push(this.textTheme);
        t65.push(this.typography);
        t65.push(this.appBarTheme);
        t65.push(this.bannerTheme);
        t65.push(this.bottomAppBarTheme);
        t65.push(this.bottomNavigationBarTheme);
        t65.push(this.bottomSheetTheme);
        t65.push(this.buttonBarTheme);
        t65.push(this.buttonTheme);
        t65.push(this.cardTheme);
        t65.push(this.checkboxTheme);
        t65.push(this.chipTheme);
        t65.push(this.dataTableTheme);
        t65.push(this.dialogTheme);
        t65.push(this.dividerTheme);
        t65.push(this.drawerTheme);
        t65.push(this.elevatedButtonTheme);
        t65.push(this.expansionTileTheme);
        t65.push(this.floatingActionButtonTheme);
        t65.push(this.listTileTheme);
        t65.push(this.navigationBarTheme);
        t65.push(this.navigationRailTheme);
        t65.push(this.outlinedButtonTheme);
        t65.push(this.popupMenuTheme);
        t65.push(this.progressIndicatorTheme);
        t65.push(this.radioTheme);
        t65.push(this.sliderTheme);
        t65.push(this.snackBarTheme);
        t65.push(this.switchTheme);
        t65.push(this.tabBarTheme);
        t65.push(this.textButtonTheme);
        t65.push(this.textSelectionTheme);
        t65.push(this.timePickerTheme);
        t65.push(this.toggleButtonsTheme);
        t65.push(this.tooltipTheme);
        t65.push(this.accentColor);
        t65.push(this.accentColorBrightness);
        t65.push(this.accentTextTheme);
        t65.push(this.accentIconTheme);
        t65.push(this.buttonColor);
        t65.push(this.fixTextFieldOutlineLabel);
        t65.push(this.primaryColorBrightness);
        t65.push(this.androidOverscrollIndicator);
        return t65;
      })();
      return core.Object.hashAll(values);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      let defaultData = theme_data.ThemeData.fallback();
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("applyElevationOverlayColor", this.applyElevationOverlayColor, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfNoDefaultCupertinoThemeData()).new("cupertinoOverrideTheme", this.cupertinoOverrideTheme, {defaultValue: defaultData.cupertinoOverrideTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.IterablePropertyOfThemeExtension()).new("extensions", this.extensions[S$1.$values], {defaultValue: defaultData.extensions[S$1.$values], level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfInputDecorationTheme()).new("inputDecorationTheme", this.inputDecorationTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialTapTargetSize()).new("materialTapTargetSize", this.materialTapTargetSize, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfPageTransitionsTheme()).new("pageTransitionsTheme", this.pageTransitionsTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.EnumPropertyOfTargetPlatform()).new("platform", this.platform, {defaultValue: platform$.defaultTargetPlatform, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfScrollbarThemeData()).new("scrollbarTheme", this.scrollbarTheme, {defaultValue: defaultData.scrollbarTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfInteractiveInkFeatureFactory()).new("splashFactory", this.splashFactory, {defaultValue: defaultData.splashFactory, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("useMaterial3", this.useMaterial3, {defaultValue: defaultData.useMaterial3, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfVisualDensity()).new("visualDensity", this.visualDensity, {defaultValue: defaultData.visualDensity, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("backgroundColor", this.backgroundColor, {defaultValue: defaultData.backgroundColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("bottomAppBarColor", this.bottomAppBarColor, {defaultValue: defaultData.bottomAppBarColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("canvasColor", this.canvasColor, {defaultValue: defaultData.canvasColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("cardColor", this.cardColor, {defaultValue: defaultData.cardColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfColorScheme()).new("colorScheme", this.colorScheme, {defaultValue: defaultData.colorScheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("dialogBackgroundColor", this.dialogBackgroundColor, {defaultValue: defaultData.dialogBackgroundColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("disabledColor", this.disabledColor, {defaultValue: defaultData.disabledColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("dividerColor", this.dividerColor, {defaultValue: defaultData.dividerColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("errorColor", this.errorColor, {defaultValue: defaultData.errorColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("focusColor", this.focusColor, {defaultValue: defaultData.focusColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("highlightColor", this.highlightColor, {defaultValue: defaultData.highlightColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("hintColor", this.hintColor, {defaultValue: defaultData.hintColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("hoverColor", this.hoverColor, {defaultValue: defaultData.hoverColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("indicatorColor", this.indicatorColor, {defaultValue: defaultData.indicatorColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("primaryColorDark", this.primaryColorDark, {defaultValue: defaultData.primaryColorDark, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("primaryColorLight", this.primaryColorLight, {defaultValue: defaultData.primaryColorLight, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("primaryColor", this.primaryColor, {defaultValue: defaultData.primaryColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("scaffoldBackgroundColor", this.scaffoldBackgroundColor, {defaultValue: defaultData.scaffoldBackgroundColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("secondaryHeaderColor", this.secondaryHeaderColor, {defaultValue: defaultData.secondaryHeaderColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("selectedRowColor", this.selectedRowColor, {defaultValue: defaultData.selectedRowColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("shadowColor", this.shadowColor, {defaultValue: defaultData.shadowColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("splashColor", this.splashColor, {defaultValue: defaultData.splashColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("toggleableActiveColor", this.toggleableActiveColor, {defaultValue: defaultData.toggleableActiveColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("unselectedWidgetColor", this.unselectedWidgetColor, {defaultValue: defaultData.unselectedWidgetColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfIconThemeData()).new("iconTheme", this.iconTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfIconThemeData()).new("primaryIconTheme", this.primaryIconTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfTextTheme()).new("primaryTextTheme", this.primaryTextTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfTextTheme()).new("textTheme", this.textTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfTypography()).new("typography", this.typography, {defaultValue: defaultData.typography, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfAppBarTheme()).new("appBarTheme", this.appBarTheme, {defaultValue: defaultData.appBarTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialBannerThemeData()).new("bannerTheme", this.bannerTheme, {defaultValue: defaultData.bannerTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfBottomAppBarTheme()).new("bottomAppBarTheme", this.bottomAppBarTheme, {defaultValue: defaultData.bottomAppBarTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfBottomNavigationBarThemeData()).new("bottomNavigationBarTheme", this.bottomNavigationBarTheme, {defaultValue: defaultData.bottomNavigationBarTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfBottomSheetThemeData()).new("bottomSheetTheme", this.bottomSheetTheme, {defaultValue: defaultData.bottomSheetTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfButtonBarThemeData()).new("buttonBarTheme", this.buttonBarTheme, {defaultValue: defaultData.buttonBarTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfButtonThemeData()).new("buttonTheme", this.buttonTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfCardTheme()).new("cardTheme", this.cardTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfCheckboxThemeData()).new("checkboxTheme", this.checkboxTheme, {defaultValue: defaultData.checkboxTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfChipThemeData()).new("chipTheme", this.chipTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfDataTableThemeData()).new("dataTableTheme", this.dataTableTheme, {defaultValue: defaultData.dataTableTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfDialogTheme()).new("dialogTheme", this.dialogTheme, {defaultValue: defaultData.dialogTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfDividerThemeData()).new("dividerTheme", this.dividerTheme, {defaultValue: defaultData.dividerTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfDrawerThemeData()).new("drawerTheme", this.drawerTheme, {defaultValue: defaultData.drawerTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfElevatedButtonThemeData()).new("elevatedButtonTheme", this.elevatedButtonTheme, {defaultValue: defaultData.elevatedButtonTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfExpansionTileThemeData()).new("expansionTileTheme", this.expansionTileTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfFloatingActionButtonThemeData()).new("floatingActionButtonTheme", this.floatingActionButtonTheme, {defaultValue: defaultData.floatingActionButtonTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfListTileThemeData()).new("listTileTheme", this.listTileTheme, {defaultValue: defaultData.listTileTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfNavigationBarThemeData()).new("navigationBarTheme", this.navigationBarTheme, {defaultValue: defaultData.navigationBarTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfNavigationRailThemeData()).new("navigationRailTheme", this.navigationRailTheme, {defaultValue: defaultData.navigationRailTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfOutlinedButtonThemeData()).new("outlinedButtonTheme", this.outlinedButtonTheme, {defaultValue: defaultData.outlinedButtonTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfPopupMenuThemeData()).new("popupMenuTheme", this.popupMenuTheme, {defaultValue: defaultData.popupMenuTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfProgressIndicatorThemeData()).new("progressIndicatorTheme", this.progressIndicatorTheme, {defaultValue: defaultData.progressIndicatorTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfRadioThemeData()).new("radioTheme", this.radioTheme, {defaultValue: defaultData.radioTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfSliderThemeData()).new("sliderTheme", this.sliderTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfSnackBarThemeData()).new("snackBarTheme", this.snackBarTheme, {defaultValue: defaultData.snackBarTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfSwitchThemeData()).new("switchTheme", this.switchTheme, {defaultValue: defaultData.switchTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfTabBarTheme()).new("tabBarTheme", this.tabBarTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfTextButtonThemeData()).new("textButtonTheme", this.textButtonTheme, {defaultValue: defaultData.textButtonTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfTextSelectionThemeData()).new("textSelectionTheme", this.textSelectionTheme, {defaultValue: defaultData.textSelectionTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfTimePickerThemeData()).new("timePickerTheme", this.timePickerTheme, {defaultValue: defaultData.timePickerTheme, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfToggleButtonsThemeData()).new("toggleButtonsTheme", this.toggleButtonsTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfTooltipThemeData()).new("tooltipTheme", this.tooltipTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("accentColor", this.accentColor, {defaultValue: defaultData.accentColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.EnumPropertyOfBrightness()).new("accentColorBrightness", this.accentColorBrightness, {defaultValue: defaultData.accentColorBrightness, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfTextTheme()).new("accentTextTheme", this.accentTextTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfIconThemeData()).new("accentIconTheme", this.accentIconTheme, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new colors.ColorProperty.new("buttonColor", this.buttonColor, {defaultValue: defaultData.buttonColor, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("fixTextFieldOutlineLabel", this.fixTextFieldOutlineLabel, {level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.EnumPropertyOfBrightness()).new("primaryColorBrightness", this.primaryColorBrightness, {defaultValue: defaultData.primaryColorBrightness, level: diagnostics.DiagnosticLevel.debug}));
      properties.add(new (T$.EnumPropertyOfAndroidOverscrollIndicator()).new("androidOverscrollIndicator", this.androidOverscrollIndicator, {defaultValue: null, level: diagnostics.DiagnosticLevel.debug}));
    }
  };
  (theme_data.ThemeData.raw = function(opts) {
    let applyElevationOverlayColor = opts && 'applyElevationOverlayColor' in opts ? opts.applyElevationOverlayColor : null;
    let cupertinoOverrideTheme = opts && 'cupertinoOverrideTheme' in opts ? opts.cupertinoOverrideTheme : null;
    let extensions = opts && 'extensions' in opts ? opts.extensions : null;
    let inputDecorationTheme = opts && 'inputDecorationTheme' in opts ? opts.inputDecorationTheme : null;
    let materialTapTargetSize = opts && 'materialTapTargetSize' in opts ? opts.materialTapTargetSize : null;
    let pageTransitionsTheme = opts && 'pageTransitionsTheme' in opts ? opts.pageTransitionsTheme : null;
    let platform = opts && 'platform' in opts ? opts.platform : null;
    let scrollbarTheme = opts && 'scrollbarTheme' in opts ? opts.scrollbarTheme : null;
    let splashFactory = opts && 'splashFactory' in opts ? opts.splashFactory : null;
    let useMaterial3 = opts && 'useMaterial3' in opts ? opts.useMaterial3 : null;
    let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let bottomAppBarColor = opts && 'bottomAppBarColor' in opts ? opts.bottomAppBarColor : null;
    let canvasColor = opts && 'canvasColor' in opts ? opts.canvasColor : null;
    let cardColor = opts && 'cardColor' in opts ? opts.cardColor : null;
    let colorScheme = opts && 'colorScheme' in opts ? opts.colorScheme : null;
    let dialogBackgroundColor = opts && 'dialogBackgroundColor' in opts ? opts.dialogBackgroundColor : null;
    let disabledColor = opts && 'disabledColor' in opts ? opts.disabledColor : null;
    let dividerColor = opts && 'dividerColor' in opts ? opts.dividerColor : null;
    let errorColor = opts && 'errorColor' in opts ? opts.errorColor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    let hintColor = opts && 'hintColor' in opts ? opts.hintColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let indicatorColor = opts && 'indicatorColor' in opts ? opts.indicatorColor : null;
    let primaryColor = opts && 'primaryColor' in opts ? opts.primaryColor : null;
    let primaryColorDark = opts && 'primaryColorDark' in opts ? opts.primaryColorDark : null;
    let primaryColorLight = opts && 'primaryColorLight' in opts ? opts.primaryColorLight : null;
    let scaffoldBackgroundColor = opts && 'scaffoldBackgroundColor' in opts ? opts.scaffoldBackgroundColor : null;
    let secondaryHeaderColor = opts && 'secondaryHeaderColor' in opts ? opts.secondaryHeaderColor : null;
    let selectedRowColor = opts && 'selectedRowColor' in opts ? opts.selectedRowColor : null;
    let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let toggleableActiveColor = opts && 'toggleableActiveColor' in opts ? opts.toggleableActiveColor : null;
    let unselectedWidgetColor = opts && 'unselectedWidgetColor' in opts ? opts.unselectedWidgetColor : null;
    let iconTheme = opts && 'iconTheme' in opts ? opts.iconTheme : null;
    let primaryIconTheme = opts && 'primaryIconTheme' in opts ? opts.primaryIconTheme : null;
    let primaryTextTheme = opts && 'primaryTextTheme' in opts ? opts.primaryTextTheme : null;
    let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
    let typography = opts && 'typography' in opts ? opts.typography : null;
    let appBarTheme = opts && 'appBarTheme' in opts ? opts.appBarTheme : null;
    let bannerTheme = opts && 'bannerTheme' in opts ? opts.bannerTheme : null;
    let bottomAppBarTheme = opts && 'bottomAppBarTheme' in opts ? opts.bottomAppBarTheme : null;
    let bottomNavigationBarTheme = opts && 'bottomNavigationBarTheme' in opts ? opts.bottomNavigationBarTheme : null;
    let bottomSheetTheme = opts && 'bottomSheetTheme' in opts ? opts.bottomSheetTheme : null;
    let buttonBarTheme = opts && 'buttonBarTheme' in opts ? opts.buttonBarTheme : null;
    let buttonTheme = opts && 'buttonTheme' in opts ? opts.buttonTheme : null;
    let cardTheme = opts && 'cardTheme' in opts ? opts.cardTheme : null;
    let checkboxTheme = opts && 'checkboxTheme' in opts ? opts.checkboxTheme : null;
    let chipTheme = opts && 'chipTheme' in opts ? opts.chipTheme : null;
    let dataTableTheme = opts && 'dataTableTheme' in opts ? opts.dataTableTheme : null;
    let dialogTheme = opts && 'dialogTheme' in opts ? opts.dialogTheme : null;
    let dividerTheme = opts && 'dividerTheme' in opts ? opts.dividerTheme : null;
    let drawerTheme = opts && 'drawerTheme' in opts ? opts.drawerTheme : null;
    let elevatedButtonTheme = opts && 'elevatedButtonTheme' in opts ? opts.elevatedButtonTheme : null;
    let expansionTileTheme = opts && 'expansionTileTheme' in opts ? opts.expansionTileTheme : null;
    let floatingActionButtonTheme = opts && 'floatingActionButtonTheme' in opts ? opts.floatingActionButtonTheme : null;
    let listTileTheme = opts && 'listTileTheme' in opts ? opts.listTileTheme : null;
    let navigationBarTheme = opts && 'navigationBarTheme' in opts ? opts.navigationBarTheme : null;
    let navigationRailTheme = opts && 'navigationRailTheme' in opts ? opts.navigationRailTheme : null;
    let outlinedButtonTheme = opts && 'outlinedButtonTheme' in opts ? opts.outlinedButtonTheme : null;
    let popupMenuTheme = opts && 'popupMenuTheme' in opts ? opts.popupMenuTheme : null;
    let progressIndicatorTheme = opts && 'progressIndicatorTheme' in opts ? opts.progressIndicatorTheme : null;
    let radioTheme = opts && 'radioTheme' in opts ? opts.radioTheme : null;
    let sliderTheme = opts && 'sliderTheme' in opts ? opts.sliderTheme : null;
    let snackBarTheme = opts && 'snackBarTheme' in opts ? opts.snackBarTheme : null;
    let switchTheme = opts && 'switchTheme' in opts ? opts.switchTheme : null;
    let tabBarTheme = opts && 'tabBarTheme' in opts ? opts.tabBarTheme : null;
    let textButtonTheme = opts && 'textButtonTheme' in opts ? opts.textButtonTheme : null;
    let textSelectionTheme = opts && 'textSelectionTheme' in opts ? opts.textSelectionTheme : null;
    let timePickerTheme = opts && 'timePickerTheme' in opts ? opts.timePickerTheme : null;
    let toggleButtonsTheme = opts && 'toggleButtonsTheme' in opts ? opts.toggleButtonsTheme : null;
    let tooltipTheme = opts && 'tooltipTheme' in opts ? opts.tooltipTheme : null;
    let accentColor = opts && 'accentColor' in opts ? opts.accentColor : null;
    let accentColorBrightness = opts && 'accentColorBrightness' in opts ? opts.accentColorBrightness : null;
    let accentTextTheme = opts && 'accentTextTheme' in opts ? opts.accentTextTheme : null;
    let accentIconTheme = opts && 'accentIconTheme' in opts ? opts.accentIconTheme : null;
    let buttonColor = opts && 'buttonColor' in opts ? opts.buttonColor : null;
    let fixTextFieldOutlineLabel = opts && 'fixTextFieldOutlineLabel' in opts ? opts.fixTextFieldOutlineLabel : null;
    let primaryColorBrightness = opts && 'primaryColorBrightness' in opts ? opts.primaryColorBrightness : null;
    let androidOverscrollIndicator = opts && 'androidOverscrollIndicator' in opts ? opts.androidOverscrollIndicator : null;
    this[S$0.applyElevationOverlayColor] = applyElevationOverlayColor;
    this[S$0.cupertinoOverrideTheme] = cupertinoOverrideTheme;
    this[S$0.extensions] = extensions;
    this[S$0.inputDecorationTheme$1] = inputDecorationTheme;
    this[S$0.materialTapTargetSize$6] = materialTapTargetSize;
    this[S$0.pageTransitionsTheme] = pageTransitionsTheme;
    this[S$0.platform] = platform;
    this[S$0.scrollbarTheme] = scrollbarTheme;
    this[S$0.splashFactory$3] = splashFactory;
    this[S$0.useMaterial3] = useMaterial3;
    this[S$0.visualDensity$7] = visualDensity;
    this[S$0.backgroundColor$15] = backgroundColor;
    this[S$0.bottomAppBarColor] = bottomAppBarColor;
    this[S$0.canvasColor] = canvasColor;
    this[S$0.cardColor] = cardColor;
    this[S$0.colorScheme$1] = colorScheme;
    this[S$0.dialogBackgroundColor] = dialogBackgroundColor;
    this[S$0.disabledColor$4] = disabledColor;
    this[S$0.dividerColor] = dividerColor;
    this[S$0.errorColor] = errorColor;
    this[S$0.focusColor$7] = focusColor;
    this[S$0.highlightColor$4] = highlightColor;
    this[S$0.hintColor] = hintColor;
    this[S$0.hoverColor$8] = hoverColor;
    this[S$0.indicatorColor$5] = indicatorColor;
    this[S$0.primaryColor] = primaryColor;
    this[S$0.primaryColorDark] = primaryColorDark;
    this[S$0.primaryColorLight] = primaryColorLight;
    this[S$0.scaffoldBackgroundColor] = scaffoldBackgroundColor;
    this[S$0.secondaryHeaderColor] = secondaryHeaderColor;
    this[S$0.selectedRowColor] = selectedRowColor;
    this[S$0.shadowColor$3] = shadowColor;
    this[S$0.splashColor$5] = splashColor;
    this[S$0.toggleableActiveColor] = toggleableActiveColor;
    this[S$0.unselectedWidgetColor] = unselectedWidgetColor;
    this[S$0.iconTheme$2] = iconTheme;
    this[S$0.primaryIconTheme] = primaryIconTheme;
    this[S$0.primaryTextTheme] = primaryTextTheme;
    this[S$0.textTheme$2] = textTheme;
    this[S$0.typography] = typography;
    this[S$0.appBarTheme] = appBarTheme;
    this[S$0.bannerTheme] = bannerTheme;
    this[S$0.bottomAppBarTheme] = bottomAppBarTheme;
    this[S$0.bottomNavigationBarTheme] = bottomNavigationBarTheme;
    this[S$0.bottomSheetTheme] = bottomSheetTheme;
    this[S$0.buttonBarTheme] = buttonBarTheme;
    this[S$0.buttonTheme] = buttonTheme;
    this[S$0.cardTheme] = cardTheme;
    this[S$0.checkboxTheme] = checkboxTheme;
    this[S$0.chipTheme] = chipTheme;
    this[S$0.dataTableTheme] = dataTableTheme;
    this[S$0.dialogTheme] = dialogTheme;
    this[S$0.dividerTheme] = dividerTheme;
    this[S$0.drawerTheme] = drawerTheme;
    this[S$0.elevatedButtonTheme] = elevatedButtonTheme;
    this[S$0.expansionTileTheme] = expansionTileTheme;
    this[S$0.floatingActionButtonTheme] = floatingActionButtonTheme;
    this[S$0.listTileTheme] = listTileTheme;
    this[S$0.navigationBarTheme] = navigationBarTheme;
    this[S$0.navigationRailTheme] = navigationRailTheme;
    this[S$0.outlinedButtonTheme] = outlinedButtonTheme;
    this[S$0.popupMenuTheme] = popupMenuTheme;
    this[S$0.progressIndicatorTheme] = progressIndicatorTheme;
    this[S$0.radioTheme] = radioTheme;
    this[S$0.sliderTheme] = sliderTheme;
    this[S$0.snackBarTheme] = snackBarTheme;
    this[S$0.switchTheme] = switchTheme;
    this[S$0.tabBarTheme] = tabBarTheme;
    this[S$0.textButtonTheme] = textButtonTheme;
    this[S$0.textSelectionTheme] = textSelectionTheme;
    this[S$0.timePickerTheme] = timePickerTheme;
    this[S$0.toggleButtonsTheme] = toggleButtonsTheme;
    this[S$0.tooltipTheme] = tooltipTheme;
    this[S$0.androidOverscrollIndicator] = androidOverscrollIndicator;
    this[S$0._accentColor] = accentColor;
    this[S$0._accentColorBrightness] = accentColorBrightness;
    this[S$0._accentTextTheme] = accentTextTheme;
    this[S$0._accentIconTheme] = accentIconTheme;
    this[S$0._buttonColor$2] = buttonColor;
    this[S$0._fixTextFieldOutlineLabel] = fixTextFieldOutlineLabel;
    this[S$0._primaryColorBrightness] = primaryColorBrightness;
    if (!(applyElevationOverlayColor !== null)) dart.assertFailed(null, I[102], 823, 15, "applyElevationOverlayColor != null");
    if (!(extensions !== null)) dart.assertFailed(null, I[102], 824, 15, "extensions != null");
    if (!(inputDecorationTheme !== null)) dart.assertFailed(null, I[102], 825, 15, "inputDecorationTheme != null");
    if (!(materialTapTargetSize !== null)) dart.assertFailed(null, I[102], 826, 15, "materialTapTargetSize != null");
    if (!(pageTransitionsTheme !== null)) dart.assertFailed(null, I[102], 827, 15, "pageTransitionsTheme != null");
    if (!(platform !== null)) dart.assertFailed(null, I[102], 828, 15, "platform != null");
    if (!(scrollbarTheme !== null)) dart.assertFailed(null, I[102], 829, 15, "scrollbarTheme != null");
    if (!(splashFactory !== null)) dart.assertFailed(null, I[102], 830, 15, "splashFactory != null");
    if (!(useMaterial3 !== null)) dart.assertFailed(null, I[102], 831, 15, "useMaterial3 != null");
    if (!(visualDensity !== null)) dart.assertFailed(null, I[102], 832, 15, "visualDensity != null");
    if (!(backgroundColor !== null)) dart.assertFailed(null, I[102], 834, 15, "backgroundColor != null");
    if (!(bottomAppBarColor !== null)) dart.assertFailed(null, I[102], 835, 15, "bottomAppBarColor != null");
    if (!(canvasColor !== null)) dart.assertFailed(null, I[102], 836, 15, "canvasColor != null");
    if (!(cardColor !== null)) dart.assertFailed(null, I[102], 837, 15, "cardColor != null");
    if (!(colorScheme !== null)) dart.assertFailed(null, I[102], 838, 15, "colorScheme != null");
    if (!(dialogBackgroundColor !== null)) dart.assertFailed(null, I[102], 839, 15, "dialogBackgroundColor != null");
    if (!(disabledColor !== null)) dart.assertFailed(null, I[102], 840, 15, "disabledColor != null");
    if (!(dividerColor !== null)) dart.assertFailed(null, I[102], 841, 15, "dividerColor != null");
    if (!(errorColor !== null)) dart.assertFailed(null, I[102], 842, 15, "errorColor != null");
    if (!(focusColor !== null)) dart.assertFailed(null, I[102], 843, 15, "focusColor != null");
    if (!(highlightColor !== null)) dart.assertFailed(null, I[102], 844, 15, "highlightColor != null");
    if (!(hintColor !== null)) dart.assertFailed(null, I[102], 845, 15, "hintColor != null");
    if (!(hoverColor !== null)) dart.assertFailed(null, I[102], 846, 15, "hoverColor != null");
    if (!(indicatorColor !== null)) dart.assertFailed(null, I[102], 847, 15, "indicatorColor != null");
    if (!(primaryColor !== null)) dart.assertFailed(null, I[102], 848, 15, "primaryColor != null");
    if (!(primaryColorDark !== null)) dart.assertFailed(null, I[102], 849, 15, "primaryColorDark != null");
    if (!(primaryColorLight !== null)) dart.assertFailed(null, I[102], 850, 15, "primaryColorLight != null");
    if (!(scaffoldBackgroundColor !== null)) dart.assertFailed(null, I[102], 851, 15, "scaffoldBackgroundColor != null");
    if (!(secondaryHeaderColor !== null)) dart.assertFailed(null, I[102], 852, 15, "secondaryHeaderColor != null");
    if (!(selectedRowColor !== null)) dart.assertFailed(null, I[102], 853, 15, "selectedRowColor != null");
    if (!(shadowColor !== null)) dart.assertFailed(null, I[102], 854, 15, "shadowColor != null");
    if (!(splashColor !== null)) dart.assertFailed(null, I[102], 855, 15, "splashColor != null");
    if (!(toggleableActiveColor !== null)) dart.assertFailed(null, I[102], 856, 15, "toggleableActiveColor != null");
    if (!(unselectedWidgetColor !== null)) dart.assertFailed(null, I[102], 857, 15, "unselectedWidgetColor != null");
    if (!(iconTheme !== null)) dart.assertFailed(null, I[102], 859, 15, "iconTheme != null");
    if (!(primaryIconTheme !== null)) dart.assertFailed(null, I[102], 860, 15, "primaryIconTheme != null");
    if (!(primaryTextTheme !== null)) dart.assertFailed(null, I[102], 861, 15, "primaryTextTheme != null");
    if (!(textTheme !== null)) dart.assertFailed(null, I[102], 862, 15, "textTheme != null");
    if (!(typography !== null)) dart.assertFailed(null, I[102], 863, 15, "typography != null");
    if (!(appBarTheme !== null)) dart.assertFailed(null, I[102], 865, 15, "appBarTheme != null");
    if (!(bannerTheme !== null)) dart.assertFailed(null, I[102], 866, 15, "bannerTheme != null");
    if (!(bottomAppBarTheme !== null)) dart.assertFailed(null, I[102], 867, 15, "bottomAppBarTheme != null");
    if (!(bottomNavigationBarTheme !== null)) dart.assertFailed(null, I[102], 868, 15, "bottomNavigationBarTheme != null");
    if (!(bottomSheetTheme !== null)) dart.assertFailed(null, I[102], 869, 15, "bottomSheetTheme != null");
    if (!(buttonBarTheme !== null)) dart.assertFailed(null, I[102], 870, 15, "buttonBarTheme != null");
    if (!(buttonTheme !== null)) dart.assertFailed(null, I[102], 871, 15, "buttonTheme != null");
    if (!(cardTheme !== null)) dart.assertFailed(null, I[102], 872, 15, "cardTheme != null");
    if (!(checkboxTheme !== null)) dart.assertFailed(null, I[102], 873, 15, "checkboxTheme != null");
    if (!(chipTheme !== null)) dart.assertFailed(null, I[102], 874, 15, "chipTheme != null");
    if (!(dataTableTheme !== null)) dart.assertFailed(null, I[102], 875, 15, "dataTableTheme != null");
    if (!(dialogTheme !== null)) dart.assertFailed(null, I[102], 876, 15, "dialogTheme != null");
    if (!(dividerTheme !== null)) dart.assertFailed(null, I[102], 877, 15, "dividerTheme != null");
    if (!(drawerTheme !== null)) dart.assertFailed(null, I[102], 878, 15, "drawerTheme != null");
    if (!(elevatedButtonTheme !== null)) dart.assertFailed(null, I[102], 879, 15, "elevatedButtonTheme != null");
    if (!(expansionTileTheme !== null)) dart.assertFailed(null, I[102], 880, 15, "expansionTileTheme != null");
    if (!(floatingActionButtonTheme !== null)) dart.assertFailed(null, I[102], 881, 15, "floatingActionButtonTheme != null");
    if (!(listTileTheme !== null)) dart.assertFailed(null, I[102], 882, 15, "listTileTheme != null");
    if (!(navigationBarTheme !== null)) dart.assertFailed(null, I[102], 883, 15, "navigationBarTheme != null");
    if (!(navigationRailTheme !== null)) dart.assertFailed(null, I[102], 884, 15, "navigationRailTheme != null");
    if (!(outlinedButtonTheme !== null)) dart.assertFailed(null, I[102], 885, 15, "outlinedButtonTheme != null");
    if (!(popupMenuTheme !== null)) dart.assertFailed(null, I[102], 886, 15, "popupMenuTheme != null");
    if (!(progressIndicatorTheme !== null)) dart.assertFailed(null, I[102], 887, 15, "progressIndicatorTheme != null");
    if (!(radioTheme !== null)) dart.assertFailed(null, I[102], 888, 15, "radioTheme != null");
    if (!(sliderTheme !== null)) dart.assertFailed(null, I[102], 889, 15, "sliderTheme != null");
    if (!(snackBarTheme !== null)) dart.assertFailed(null, I[102], 890, 15, "snackBarTheme != null");
    if (!(switchTheme !== null)) dart.assertFailed(null, I[102], 891, 15, "switchTheme != null");
    if (!(tabBarTheme !== null)) dart.assertFailed(null, I[102], 892, 15, "tabBarTheme != null");
    if (!(textButtonTheme !== null)) dart.assertFailed(null, I[102], 893, 15, "textButtonTheme != null");
    if (!(textSelectionTheme !== null)) dart.assertFailed(null, I[102], 894, 15, "textSelectionTheme != null");
    if (!(timePickerTheme !== null)) dart.assertFailed(null, I[102], 895, 15, "timePickerTheme != null");
    if (!(toggleButtonsTheme !== null)) dart.assertFailed(null, I[102], 896, 15, "toggleButtonsTheme != null");
    if (!(tooltipTheme !== null)) dart.assertFailed(null, I[102], 897, 15, "tooltipTheme != null");
    ;
  }).prototype = theme_data.ThemeData.prototype;
  dart.addTypeTests(theme_data.ThemeData);
  dart.addTypeCaches(theme_data.ThemeData);
  dart.setMethodSignature(theme_data.ThemeData, () => ({
    __proto__: dart.getMethods(theme_data.ThemeData.__proto__),
    extension: dart.gFnType(T => [dart.nullable(T), []], T => [dart.nullable(core.Object)]),
    copyWith: dart.fnType(theme_data.ThemeData, [], {accentColor: dart.nullable(ui.Color), accentColorBrightness: dart.nullable(ui.Brightness), accentIconTheme: dart.nullable(icon_theme_data.IconThemeData), accentTextTheme: dart.nullable(text_theme.TextTheme), androidOverscrollIndicator: dart.nullable(scroll_configuration.AndroidOverscrollIndicator), appBarTheme: dart.nullable(app_bar_theme.AppBarTheme), applyElevationOverlayColor: dart.nullable(core.bool), backgroundColor: dart.nullable(ui.Color), bannerTheme: dart.nullable(banner_theme.MaterialBannerThemeData), bottomAppBarColor: dart.nullable(ui.Color), bottomAppBarTheme: dart.nullable(bottom_app_bar_theme.BottomAppBarTheme), bottomNavigationBarTheme: dart.nullable(bottom_navigation_bar_theme.BottomNavigationBarThemeData), bottomSheetTheme: dart.nullable(bottom_sheet_theme.BottomSheetThemeData), brightness: dart.nullable(ui.Brightness), buttonBarTheme: dart.nullable(button_bar_theme.ButtonBarThemeData), buttonColor: dart.nullable(ui.Color), buttonTheme: dart.nullable(button_theme.ButtonThemeData), canvasColor: dart.nullable(ui.Color), cardColor: dart.nullable(ui.Color), cardTheme: dart.nullable(card_theme.CardTheme), checkboxTheme: dart.nullable(checkbox_theme.CheckboxThemeData), chipTheme: dart.nullable(chip_theme.ChipThemeData), colorScheme: dart.nullable(color_scheme.ColorScheme), cupertinoOverrideTheme: dart.nullable(theme.NoDefaultCupertinoThemeData), dataTableTheme: dart.nullable(data_table_theme.DataTableThemeData), dialogBackgroundColor: dart.nullable(ui.Color), dialogTheme: dart.nullable(dialog_theme.DialogTheme), disabledColor: dart.nullable(ui.Color), dividerColor: dart.nullable(ui.Color), dividerTheme: dart.nullable(divider_theme.DividerThemeData), drawerTheme: dart.nullable(drawer_theme.DrawerThemeData), elevatedButtonTheme: dart.nullable(elevated_button_theme.ElevatedButtonThemeData), errorColor: dart.nullable(ui.Color), expansionTileTheme: dart.nullable(expansion_tile_theme.ExpansionTileThemeData), extensions: dart.nullable(core.Iterable$(theme_data.ThemeExtension)), fixTextFieldOutlineLabel: dart.nullable(core.bool), floatingActionButtonTheme: dart.nullable(floating_action_button_theme.FloatingActionButtonThemeData), focusColor: dart.nullable(ui.Color), highlightColor: dart.nullable(ui.Color), hintColor: dart.nullable(ui.Color), hoverColor: dart.nullable(ui.Color), iconTheme: dart.nullable(icon_theme_data.IconThemeData), indicatorColor: dart.nullable(ui.Color), inputDecorationTheme: dart.nullable(input_decorator.InputDecorationTheme), listTileTheme: dart.nullable(list_tile_theme.ListTileThemeData), materialTapTargetSize: dart.nullable(theme_data.MaterialTapTargetSize), navigationBarTheme: dart.nullable(navigation_bar_theme.NavigationBarThemeData), navigationRailTheme: dart.nullable(navigation_rail_theme.NavigationRailThemeData), outlinedButtonTheme: dart.nullable(outlined_button_theme.OutlinedButtonThemeData), pageTransitionsTheme: dart.nullable(page_transitions_theme.PageTransitionsTheme), platform: dart.nullable(platform$.TargetPlatform), popupMenuTheme: dart.nullable(popup_menu_theme.PopupMenuThemeData), primaryColor: dart.nullable(ui.Color), primaryColorBrightness: dart.nullable(ui.Brightness), primaryColorDark: dart.nullable(ui.Color), primaryColorLight: dart.nullable(ui.Color), primaryIconTheme: dart.nullable(icon_theme_data.IconThemeData), primaryTextTheme: dart.nullable(text_theme.TextTheme), progressIndicatorTheme: dart.nullable(progress_indicator_theme.ProgressIndicatorThemeData), radioTheme: dart.nullable(radio_theme.RadioThemeData), scaffoldBackgroundColor: dart.nullable(ui.Color), scrollbarTheme: dart.nullable(scrollbar_theme.ScrollbarThemeData), secondaryHeaderColor: dart.nullable(ui.Color), selectedRowColor: dart.nullable(ui.Color), shadowColor: dart.nullable(ui.Color), sliderTheme: dart.nullable(slider_theme.SliderThemeData), snackBarTheme: dart.nullable(snack_bar_theme.SnackBarThemeData), splashColor: dart.nullable(ui.Color), splashFactory: dart.nullable(ink_well.InteractiveInkFeatureFactory), switchTheme: dart.nullable(switch_theme.SwitchThemeData), tabBarTheme: dart.nullable(tab_bar_theme.TabBarTheme), textButtonTheme: dart.nullable(text_button_theme.TextButtonThemeData), textSelectionTheme: dart.nullable(text_selection_theme.TextSelectionThemeData), textTheme: dart.nullable(text_theme.TextTheme), timePickerTheme: dart.nullable(time_picker_theme.TimePickerThemeData), toggleButtonsTheme: dart.nullable(toggle_buttons_theme.ToggleButtonsThemeData), toggleableActiveColor: dart.nullable(ui.Color), tooltipTheme: dart.nullable(tooltip_theme.TooltipThemeData), typography: dart.nullable(typography$.Typography), unselectedWidgetColor: dart.nullable(ui.Color), useMaterial3: dart.nullable(core.bool), visualDensity: dart.nullable(theme_data.VisualDensity)}, {})
  }));
  dart.setStaticMethodSignature(theme_data.ThemeData, () => ['new', 'from', 'light', 'dark', 'fallback', 'localize', 'estimateBrightnessForColor', '_lerpThemeExtensions', '_themeExtensionIterableToMap', 'lerp']);
  dart.setGetterSignature(theme_data.ThemeData, () => ({
    __proto__: dart.getGetters(theme_data.ThemeData.__proto__),
    brightness: ui.Brightness,
    accentColor: ui.Color,
    accentColorBrightness: ui.Brightness,
    accentTextTheme: text_theme.TextTheme,
    accentIconTheme: icon_theme_data.IconThemeData,
    buttonColor: ui.Color,
    fixTextFieldOutlineLabel: core.bool,
    primaryColorBrightness: ui.Brightness
  }));
  dart.setLibraryUri(theme_data.ThemeData, I[101]);
  dart.setFieldSignature(theme_data.ThemeData, () => ({
    __proto__: dart.getFields(theme_data.ThemeData.__proto__),
    applyElevationOverlayColor: dart.finalFieldType(core.bool),
    cupertinoOverrideTheme: dart.finalFieldType(dart.nullable(theme.NoDefaultCupertinoThemeData)),
    extensions: dart.finalFieldType(core.Map$(core.Object, theme_data.ThemeExtension)),
    inputDecorationTheme: dart.finalFieldType(input_decorator.InputDecorationTheme),
    materialTapTargetSize: dart.finalFieldType(theme_data.MaterialTapTargetSize),
    pageTransitionsTheme: dart.finalFieldType(page_transitions_theme.PageTransitionsTheme),
    platform: dart.finalFieldType(platform$.TargetPlatform),
    scrollbarTheme: dart.finalFieldType(scrollbar_theme.ScrollbarThemeData),
    splashFactory: dart.finalFieldType(ink_well.InteractiveInkFeatureFactory),
    useMaterial3: dart.finalFieldType(core.bool),
    visualDensity: dart.finalFieldType(theme_data.VisualDensity),
    backgroundColor: dart.finalFieldType(ui.Color),
    bottomAppBarColor: dart.finalFieldType(ui.Color),
    canvasColor: dart.finalFieldType(ui.Color),
    cardColor: dart.finalFieldType(ui.Color),
    colorScheme: dart.finalFieldType(color_scheme.ColorScheme),
    dialogBackgroundColor: dart.finalFieldType(ui.Color),
    disabledColor: dart.finalFieldType(ui.Color),
    dividerColor: dart.finalFieldType(ui.Color),
    errorColor: dart.finalFieldType(ui.Color),
    focusColor: dart.finalFieldType(ui.Color),
    highlightColor: dart.finalFieldType(ui.Color),
    hintColor: dart.finalFieldType(ui.Color),
    hoverColor: dart.finalFieldType(ui.Color),
    indicatorColor: dart.finalFieldType(ui.Color),
    primaryColor: dart.finalFieldType(ui.Color),
    primaryColorDark: dart.finalFieldType(ui.Color),
    primaryColorLight: dart.finalFieldType(ui.Color),
    scaffoldBackgroundColor: dart.finalFieldType(ui.Color),
    secondaryHeaderColor: dart.finalFieldType(ui.Color),
    selectedRowColor: dart.finalFieldType(ui.Color),
    shadowColor: dart.finalFieldType(ui.Color),
    splashColor: dart.finalFieldType(ui.Color),
    toggleableActiveColor: dart.finalFieldType(ui.Color),
    unselectedWidgetColor: dart.finalFieldType(ui.Color),
    iconTheme: dart.finalFieldType(icon_theme_data.IconThemeData),
    primaryIconTheme: dart.finalFieldType(icon_theme_data.IconThemeData),
    primaryTextTheme: dart.finalFieldType(text_theme.TextTheme),
    textTheme: dart.finalFieldType(text_theme.TextTheme),
    typography: dart.finalFieldType(typography$.Typography),
    appBarTheme: dart.finalFieldType(app_bar_theme.AppBarTheme),
    bannerTheme: dart.finalFieldType(banner_theme.MaterialBannerThemeData),
    bottomAppBarTheme: dart.finalFieldType(bottom_app_bar_theme.BottomAppBarTheme),
    bottomNavigationBarTheme: dart.finalFieldType(bottom_navigation_bar_theme.BottomNavigationBarThemeData),
    bottomSheetTheme: dart.finalFieldType(bottom_sheet_theme.BottomSheetThemeData),
    buttonBarTheme: dart.finalFieldType(button_bar_theme.ButtonBarThemeData),
    buttonTheme: dart.finalFieldType(button_theme.ButtonThemeData),
    cardTheme: dart.finalFieldType(card_theme.CardTheme),
    checkboxTheme: dart.finalFieldType(checkbox_theme.CheckboxThemeData),
    chipTheme: dart.finalFieldType(chip_theme.ChipThemeData),
    dataTableTheme: dart.finalFieldType(data_table_theme.DataTableThemeData),
    dialogTheme: dart.finalFieldType(dialog_theme.DialogTheme),
    dividerTheme: dart.finalFieldType(divider_theme.DividerThemeData),
    drawerTheme: dart.finalFieldType(drawer_theme.DrawerThemeData),
    elevatedButtonTheme: dart.finalFieldType(elevated_button_theme.ElevatedButtonThemeData),
    expansionTileTheme: dart.finalFieldType(expansion_tile_theme.ExpansionTileThemeData),
    floatingActionButtonTheme: dart.finalFieldType(floating_action_button_theme.FloatingActionButtonThemeData),
    listTileTheme: dart.finalFieldType(list_tile_theme.ListTileThemeData),
    navigationBarTheme: dart.finalFieldType(navigation_bar_theme.NavigationBarThemeData),
    navigationRailTheme: dart.finalFieldType(navigation_rail_theme.NavigationRailThemeData),
    outlinedButtonTheme: dart.finalFieldType(outlined_button_theme.OutlinedButtonThemeData),
    popupMenuTheme: dart.finalFieldType(popup_menu_theme.PopupMenuThemeData),
    progressIndicatorTheme: dart.finalFieldType(progress_indicator_theme.ProgressIndicatorThemeData),
    radioTheme: dart.finalFieldType(radio_theme.RadioThemeData),
    sliderTheme: dart.finalFieldType(slider_theme.SliderThemeData),
    snackBarTheme: dart.finalFieldType(snack_bar_theme.SnackBarThemeData),
    switchTheme: dart.finalFieldType(switch_theme.SwitchThemeData),
    tabBarTheme: dart.finalFieldType(tab_bar_theme.TabBarTheme),
    textButtonTheme: dart.finalFieldType(text_button_theme.TextButtonThemeData),
    textSelectionTheme: dart.finalFieldType(text_selection_theme.TextSelectionThemeData),
    timePickerTheme: dart.finalFieldType(time_picker_theme.TimePickerThemeData),
    toggleButtonsTheme: dart.finalFieldType(toggle_buttons_theme.ToggleButtonsThemeData),
    tooltipTheme: dart.finalFieldType(tooltip_theme.TooltipThemeData),
    [S$0._accentColor$1]: dart.finalFieldType(dart.nullable(ui.Color)),
    [S$0._accentColorBrightness$1]: dart.finalFieldType(dart.nullable(ui.Brightness)),
    [S$0._accentTextTheme$1]: dart.finalFieldType(dart.nullable(text_theme.TextTheme)),
    [S$0._accentIconTheme$1]: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData)),
    [S$0._buttonColor$3]: dart.finalFieldType(dart.nullable(ui.Color)),
    [S$0._fixTextFieldOutlineLabel$1]: dart.finalFieldType(dart.nullable(core.bool)),
    [S$0._primaryColorBrightness$1]: dart.finalFieldType(dart.nullable(ui.Brightness)),
    androidOverscrollIndicator: dart.finalFieldType(dart.nullable(scroll_configuration.AndroidOverscrollIndicator))
  }));
  dart.setStaticFieldSignature(theme_data.ThemeData, () => ['_localizedThemeDataCacheSize', '_localizedThemeDataCache']);
  dart.defineExtensionMethods(theme_data.ThemeData, ['_equals']);
  dart.defineExtensionAccessors(theme_data.ThemeData, ['hashCode']);
  dart.defineLazy(theme_data.ThemeData, {
    /*theme_data.ThemeData._localizedThemeDataCacheSize*/get _localizedThemeDataCacheSize() {
      return 5;
    },
    /*theme_data.ThemeData._localizedThemeDataCache*/get _localizedThemeDataCache() {
      return new (T$._FifoCacheOf_IdentityThemeDataCacheKey$ThemeData()).new(5);
    }
  }, false);
  theme_data.MaterialBasedCupertinoThemeData = class MaterialBasedCupertinoThemeData extends theme.CupertinoThemeData {
    static ['_#new#tearOff'](opts) {
      let materialTheme = opts && 'materialTheme' in opts ? opts.materialTheme : null;
      return new theme_data.MaterialBasedCupertinoThemeData.new({materialTheme: materialTheme});
    }
    static ['_#_#tearOff'](_materialTheme, _cupertinoOverrideTheme) {
      return new theme_data.MaterialBasedCupertinoThemeData.__(_materialTheme, _cupertinoOverrideTheme);
    }
    get brightness() {
      let t66;
      t66 = this[S$1._cupertinoOverrideTheme].brightness;
      return t66 == null ? this[S$1._materialTheme].brightness : t66;
    }
    get primaryColor() {
      let t66;
      t66 = this[S$1._cupertinoOverrideTheme].primaryColor;
      return t66 == null ? this[S$1._materialTheme].colorScheme.primary : t66;
    }
    get primaryContrastingColor() {
      let t66;
      t66 = this[S$1._cupertinoOverrideTheme].primaryContrastingColor;
      return t66 == null ? this[S$1._materialTheme].colorScheme.onPrimary : t66;
    }
    get scaffoldBackgroundColor() {
      let t66;
      t66 = this[S$1._cupertinoOverrideTheme].scaffoldBackgroundColor;
      return t66 == null ? this[S$1._materialTheme].scaffoldBackgroundColor : t66;
    }
    copyWith(opts) {
      let brightness = opts && 'brightness' in opts ? opts.brightness : null;
      let primaryColor = opts && 'primaryColor' in opts ? opts.primaryColor : null;
      let primaryContrastingColor = opts && 'primaryContrastingColor' in opts ? opts.primaryContrastingColor : null;
      let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
      let barBackgroundColor = opts && 'barBackgroundColor' in opts ? opts.barBackgroundColor : null;
      let scaffoldBackgroundColor = opts && 'scaffoldBackgroundColor' in opts ? opts.scaffoldBackgroundColor : null;
      return new theme_data.MaterialBasedCupertinoThemeData.__(this[S$1._materialTheme], this[S$1._cupertinoOverrideTheme].copyWith({brightness: brightness, primaryColor: primaryColor, primaryContrastingColor: primaryContrastingColor, textTheme: textTheme, barBackgroundColor: barBackgroundColor, scaffoldBackgroundColor: scaffoldBackgroundColor}));
    }
    resolveFrom(context) {
      return new theme_data.MaterialBasedCupertinoThemeData.__(this[S$1._materialTheme], this[S$1._cupertinoOverrideTheme].resolveFrom(context));
    }
  };
  (theme_data.MaterialBasedCupertinoThemeData.new = function(opts) {
    let t66;
    let materialTheme = opts && 'materialTheme' in opts ? opts.materialTheme : null;
    theme_data.MaterialBasedCupertinoThemeData.__.call(this, materialTheme, (t66 = materialTheme.cupertinoOverrideTheme, t66 == null ? C[786] || CT.C786 : t66).noDefault());
  }).prototype = theme_data.MaterialBasedCupertinoThemeData.prototype;
  (theme_data.MaterialBasedCupertinoThemeData.__ = function(_materialTheme, _cupertinoOverrideTheme) {
    this[S$1._materialTheme] = _materialTheme;
    this[S$1._cupertinoOverrideTheme] = _cupertinoOverrideTheme;
    if (!(_materialTheme !== null)) dart.assertFailed(null, I[102], 2401, 14, "_materialTheme != null");
    if (!(_cupertinoOverrideTheme !== null)) dart.assertFailed(null, I[102], 2402, 14, "_cupertinoOverrideTheme != null");
    theme_data.MaterialBasedCupertinoThemeData.__proto__.raw.call(this, _cupertinoOverrideTheme.brightness, _cupertinoOverrideTheme.primaryColor, _cupertinoOverrideTheme.primaryContrastingColor, _cupertinoOverrideTheme.textTheme, _cupertinoOverrideTheme.barBackgroundColor, _cupertinoOverrideTheme.scaffoldBackgroundColor);
    ;
  }).prototype = theme_data.MaterialBasedCupertinoThemeData.prototype;
  dart.addTypeTests(theme_data.MaterialBasedCupertinoThemeData);
  dart.addTypeCaches(theme_data.MaterialBasedCupertinoThemeData);
  dart.setMethodSignature(theme_data.MaterialBasedCupertinoThemeData, () => ({
    __proto__: dart.getMethods(theme_data.MaterialBasedCupertinoThemeData.__proto__),
    copyWith: dart.fnType(theme_data.MaterialBasedCupertinoThemeData, [], {barBackgroundColor: dart.nullable(ui.Color), brightness: dart.nullable(ui.Brightness), primaryColor: dart.nullable(ui.Color), primaryContrastingColor: dart.nullable(ui.Color), scaffoldBackgroundColor: dart.nullable(ui.Color), textTheme: dart.nullable(text_theme$.CupertinoTextThemeData)}, {})
  }));
  dart.setGetterSignature(theme_data.MaterialBasedCupertinoThemeData, () => ({
    __proto__: dart.getGetters(theme_data.MaterialBasedCupertinoThemeData.__proto__),
    brightness: ui.Brightness
  }));
  dart.setLibraryUri(theme_data.MaterialBasedCupertinoThemeData, I[101]);
  dart.setFieldSignature(theme_data.MaterialBasedCupertinoThemeData, () => ({
    __proto__: dart.getFields(theme_data.MaterialBasedCupertinoThemeData.__proto__),
    [S$1._materialTheme]: dart.finalFieldType(theme_data.ThemeData),
    [S$1._cupertinoOverrideTheme]: dart.finalFieldType(theme.NoDefaultCupertinoThemeData)
  }));
  theme_data._IdentityThemeDataCacheKey = class _IdentityThemeDataCacheKey extends core.Object {
    get baseTheme() {
      return this[S$1.baseTheme];
    }
    set baseTheme(value) {
      super.baseTheme = value;
    }
    get localTextGeometry() {
      return this[S$1.localTextGeometry];
    }
    set localTextGeometry(value) {
      super.localTextGeometry = value;
    }
    static ['_#new#tearOff'](baseTheme, localTextGeometry) {
      return new theme_data._IdentityThemeDataCacheKey.new(baseTheme, localTextGeometry);
    }
    get hashCode() {
      return (core.identityHashCode(this.baseTheme) ^ core.identityHashCode(this.localTextGeometry)) >>> 0;
    }
    _equals(other) {
      if (other == null) return false;
      return theme_data._IdentityThemeDataCacheKey.is(other) && other.baseTheme === this.baseTheme && other.localTextGeometry === this.localTextGeometry;
    }
  };
  (theme_data._IdentityThemeDataCacheKey.new = function(baseTheme, localTextGeometry) {
    this[S$1.baseTheme] = baseTheme;
    this[S$1.localTextGeometry] = localTextGeometry;
    ;
  }).prototype = theme_data._IdentityThemeDataCacheKey.prototype;
  dart.addTypeTests(theme_data._IdentityThemeDataCacheKey);
  dart.addTypeCaches(theme_data._IdentityThemeDataCacheKey);
  dart.setLibraryUri(theme_data._IdentityThemeDataCacheKey, I[101]);
  dart.setFieldSignature(theme_data._IdentityThemeDataCacheKey, () => ({
    __proto__: dart.getFields(theme_data._IdentityThemeDataCacheKey.__proto__),
    baseTheme: dart.finalFieldType(theme_data.ThemeData),
    localTextGeometry: dart.finalFieldType(text_theme.TextTheme)
  }));
  dart.defineExtensionMethods(theme_data._IdentityThemeDataCacheKey, ['_equals']);
  dart.defineExtensionAccessors(theme_data._IdentityThemeDataCacheKey, ['hashCode']);
  const _is__FifoCache_default = Symbol('_is__FifoCache_default');
  theme_data._FifoCache$ = dart.generic((K, V) => {
    var __t$LinkedMapOfK$V = () => (__t$LinkedMapOfK$V = dart.constFn(_js_helper.LinkedMap$(K, V)))();
    var __t$VoidToV = () => (__t$VoidToV = dart.constFn(dart.fnType(V, [])))();
    class _FifoCache extends core.Object {
      static ['_#new#tearOff'](K, V, _maximumSize) {
        return new (theme_data._FifoCache$(K, V)).new(_maximumSize);
      }
      putIfAbsent(key, loader) {
        let t68, t67, t66;
        K.as(key);
        __t$VoidToV().as(loader);
        if (!(key != null)) dart.assertFailed(null, I[102], 2520, 12, "key != null");
        if (!(loader !== null)) dart.assertFailed(null, I[102], 2521, 12, "loader != null");
        let result = this[S$1._cache][S.$_get](key);
        if (result != null) {
          return result;
        }
        if (this[S$1._cache][S.$length] === this[S$1._maximumSize]) {
          this[S$1._cache][S$0.$remove](this[S$1._cache][S$1.$keys][S$1.$first]);
        }
        t66 = this[S$1._cache];
        t67 = key;
        t68 = loader();
        t66[S.$_set](t67, t68);
        return t68;
      }
    }
    (_FifoCache.new = function(_maximumSize) {
      this[S$1._cache] = new (__t$LinkedMapOfK$V()).new();
      this[S$1._maximumSize] = _maximumSize;
      if (!(_maximumSize !== null && _maximumSize > 0)) dart.assertFailed(null, I[102], 2502, 42, "_maximumSize != null && _maximumSize > 0");
      ;
    }).prototype = _FifoCache.prototype;
    dart.addTypeTests(_FifoCache);
    _FifoCache.prototype[_is__FifoCache_default] = true;
    dart.addTypeCaches(_FifoCache);
    dart.setMethodSignature(_FifoCache, () => ({
      __proto__: dart.getMethods(_FifoCache.__proto__),
      putIfAbsent: dart.fnType(V, [dart.nullable(core.Object), dart.nullable(core.Object)])
    }));
    dart.setLibraryUri(_FifoCache, I[101]);
    dart.setFieldSignature(_FifoCache, () => ({
      __proto__: dart.getFields(_FifoCache.__proto__),
      [S$1._cache]: dart.finalFieldType(core.Map$(K, V)),
      [S$1._maximumSize]: dart.finalFieldType(core.int)
    }));
    return _FifoCache;
  });
  theme_data._FifoCache = theme_data._FifoCache$();
  dart.addTypeTests(theme_data._FifoCache, _is__FifoCache_default);
  const Object_Diagnosticable$36$30 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$30.new = function() {
  }).prototype = Object_Diagnosticable$36$30.prototype;
  dart.applyMixin(Object_Diagnosticable$36$30, diagnostics.Diagnosticable);
  theme_data.VisualDensity = class VisualDensity extends Object_Diagnosticable$36$30 {
    get horizontal() {
      return this[S$1.horizontal];
    }
    set horizontal(value) {
      super.horizontal = value;
    }
    get vertical() {
      return this[S$1.vertical];
    }
    set vertical(value) {
      super.vertical = value;
    }
    static ['_#new#tearOff'](opts) {
      let horizontal = opts && 'horizontal' in opts ? opts.horizontal : 0;
      let vertical = opts && 'vertical' in opts ? opts.vertical : 0;
      return new theme_data.VisualDensity.new({horizontal: horizontal, vertical: vertical});
    }
    static get adaptivePlatformDensity() {
      switch (platform$.defaultTargetPlatform) {
        case C[29] || CT.C29:
        case C[33] || CT.C33:
        case C[30] || CT.C30:
          {
            break;
          }
        case C[31] || CT.C31:
        case C[34] || CT.C34:
        case C[32] || CT.C32:
          {
            return theme_data.VisualDensity.compact;
          }
      }
      return theme_data.VisualDensity.standard;
    }
    copyWith(opts) {
      let t66, t66$;
      let horizontal = opts && 'horizontal' in opts ? opts.horizontal : null;
      let vertical = opts && 'vertical' in opts ? opts.vertical : null;
      return new theme_data.VisualDensity.new({horizontal: (t66 = horizontal, t66 == null ? this.horizontal : t66), vertical: (t66$ = vertical, t66$ == null ? this.vertical : t66$)});
    }
    get baseSizeAdjustment() {
      return new ui.Offset.new(this.horizontal, this.vertical)['*'](4);
    }
    static lerp(a, b, t) {
      return new theme_data.VisualDensity.new({horizontal: dart.nullCheck(ui.lerpDouble(a.horizontal, b.horizontal, t)), vertical: dart.nullCheck(ui.lerpDouble(a.vertical, b.vertical, t))});
    }
    effectiveConstraints(constraints) {
      if (!(constraints !== null && constraints.debugAssertIsValid())) dart.assertFailed(null, I[102], 2711, 12, "constraints != null && constraints.debugAssertIsValid()");
      return constraints.copyWith({minWidth: math$.clampDouble(constraints.minWidth + this.baseSizeAdjustment.dx, 0.0, constraints.maxWidth), minHeight: math$.clampDouble(constraints.minHeight + this.baseSizeAdjustment.dy, 0.0, constraints.maxHeight)});
    }
    _equals(other) {
      if (other == null) return false;
      if (!other[S.$runtimeType]._equals(this[S.$runtimeType])) {
        return false;
      }
      return theme_data.VisualDensity.is(other) && other.horizontal === this.horizontal && other.vertical === this.vertical;
    }
    get hashCode() {
      return core.Object.hash(this.horizontal, this.vertical);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new diagnostics.DoubleProperty.new("horizontal", this.horizontal, {defaultValue: 0.0}));
      properties.add(new diagnostics.DoubleProperty.new("vertical", this.vertical, {defaultValue: 0.0}));
    }
    toStringShort() {
      return super.toStringShort() + "(h: " + debug$.debugFormatDouble(this.horizontal) + ", v: " + debug$.debugFormatDouble(this.vertical) + ")";
    }
  };
  (theme_data.VisualDensity.new = function(opts) {
    let horizontal = opts && 'horizontal' in opts ? opts.horizontal : 0;
    let vertical = opts && 'vertical' in opts ? opts.vertical : 0;
    this[S$1.horizontal] = horizontal;
    this[S$1.vertical] = vertical;
    if (!(horizontal !== null)) dart.assertFailed(null, I[102], 2578, 15, "horizontal != null");
    if (!(vertical !== null)) dart.assertFailed(null, I[102], 2579, 15, "vertical != null");
    if (!(vertical <= 4)) dart.assertFailed(null, I[102], 2580, 15, "vertical <= maximumDensity");
    if (!(vertical <= 4)) dart.assertFailed(null, I[102], 2581, 15, "vertical <= maximumDensity");
    if (!(vertical >= -4)) dart.assertFailed(null, I[102], 2582, 15, "vertical >= minimumDensity");
    if (!(horizontal <= 4)) dart.assertFailed(null, I[102], 2583, 15, "horizontal <= maximumDensity");
    if (!(horizontal >= -4)) dart.assertFailed(null, I[102], 2584, 15, "horizontal >= minimumDensity");
    ;
  }).prototype = theme_data.VisualDensity.prototype;
  dart.addTypeTests(theme_data.VisualDensity);
  dart.addTypeCaches(theme_data.VisualDensity);
  dart.setMethodSignature(theme_data.VisualDensity, () => ({
    __proto__: dart.getMethods(theme_data.VisualDensity.__proto__),
    copyWith: dart.fnType(theme_data.VisualDensity, [], {horizontal: dart.nullable(core.double), vertical: dart.nullable(core.double)}, {}),
    effectiveConstraints: dart.fnType(box$.BoxConstraints, [box$.BoxConstraints])
  }));
  dart.setStaticMethodSignature(theme_data.VisualDensity, () => ['lerp']);
  dart.setGetterSignature(theme_data.VisualDensity, () => ({
    __proto__: dart.getGetters(theme_data.VisualDensity.__proto__),
    baseSizeAdjustment: ui.Offset
  }));
  dart.setStaticGetterSignature(theme_data.VisualDensity, () => ['adaptivePlatformDensity']);
  dart.setLibraryUri(theme_data.VisualDensity, I[101]);
  dart.setFieldSignature(theme_data.VisualDensity, () => ({
    __proto__: dart.getFields(theme_data.VisualDensity.__proto__),
    horizontal: dart.finalFieldType(core.double),
    vertical: dart.finalFieldType(core.double)
  }));
  dart.setStaticFieldSignature(theme_data.VisualDensity, () => ['minimumDensity', 'maximumDensity', 'standard', 'comfortable', 'compact']);
  dart.defineExtensionMethods(theme_data.VisualDensity, ['_equals']);
  dart.defineExtensionAccessors(theme_data.VisualDensity, ['hashCode']);
  dart.defineLazy(theme_data.VisualDensity, {
    /*theme_data.VisualDensity.minimumDensity*/get minimumDensity() {
      return -4;
    },
    /*theme_data.VisualDensity.maximumDensity*/get maximumDensity() {
      return 4;
    },
    /*theme_data.VisualDensity.standard*/get standard() {
      return C[603] || CT.C603;
    },
    /*theme_data.VisualDensity.comfortable*/get comfortable() {
      return C[804] || CT.C804;
    },
    /*theme_data.VisualDensity.compact*/get compact() {
      return C[805] || CT.C805;
    }
  }, false);
  dart.defineLazy(theme_data, {
    /*theme_data._kLightThemeHighlightColor*/get _kLightThemeHighlightColor() {
      return C[806] || CT.C806;
    },
    /*theme_data._kLightThemeSplashColor*/get _kLightThemeSplashColor() {
      return C[807] || CT.C807;
    },
    /*theme_data._kDarkThemeHighlightColor*/get _kDarkThemeHighlightColor() {
      return C[808] || CT.C808;
    },
    /*theme_data._kDarkThemeSplashColor*/get _kDarkThemeSplashColor() {
      return C[808] || CT.C808;
    }
  }, false);
  const Object_Diagnosticable$36$31 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$31.new = function() {
  }).prototype = Object_Diagnosticable$36$31.prototype;
  dart.applyMixin(Object_Diagnosticable$36$31, diagnostics.Diagnosticable);
  list_tile_theme.ListTileThemeData = class ListTileThemeData extends Object_Diagnosticable$36$31 {
    get dense() {
      return this[S$1.dense];
    }
    set dense(value) {
      super.dense = value;
    }
    get shape() {
      return this[S$1.shape$14];
    }
    set shape(value) {
      super.shape = value;
    }
    get style() {
      return this[S$1.style$7];
    }
    set style(value) {
      super.style = value;
    }
    get selectedColor() {
      return this[S$1.selectedColor$3];
    }
    set selectedColor(value) {
      super.selectedColor = value;
    }
    get iconColor() {
      return this[S$1.iconColor$4];
    }
    set iconColor(value) {
      super.iconColor = value;
    }
    get textColor() {
      return this[S$1.textColor$3];
    }
    set textColor(value) {
      super.textColor = value;
    }
    get contentPadding() {
      return this[S$1.contentPadding$3];
    }
    set contentPadding(value) {
      super.contentPadding = value;
    }
    get tileColor() {
      return this[S$1.tileColor];
    }
    set tileColor(value) {
      super.tileColor = value;
    }
    get selectedTileColor() {
      return this[S$1.selectedTileColor];
    }
    set selectedTileColor(value) {
      super.selectedTileColor = value;
    }
    get horizontalTitleGap() {
      return this[S$1.horizontalTitleGap];
    }
    set horizontalTitleGap(value) {
      super.horizontalTitleGap = value;
    }
    get minVerticalPadding() {
      return this[S$1.minVerticalPadding];
    }
    set minVerticalPadding(value) {
      super.minVerticalPadding = value;
    }
    get minLeadingWidth() {
      return this[S$1.minLeadingWidth];
    }
    set minLeadingWidth(value) {
      super.minLeadingWidth = value;
    }
    get enableFeedback() {
      return this[S$1.enableFeedback$12];
    }
    set enableFeedback(value) {
      super.enableFeedback = value;
    }
    get mouseCursor() {
      return this[S$1.mouseCursor$15];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    get visualDensity() {
      return this[S$1.visualDensity$8];
    }
    set visualDensity(value) {
      super.visualDensity = value;
    }
    static ['_#new#tearOff'](opts) {
      let dense = opts && 'dense' in opts ? opts.dense : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let style = opts && 'style' in opts ? opts.style : null;
      let selectedColor = opts && 'selectedColor' in opts ? opts.selectedColor : null;
      let iconColor = opts && 'iconColor' in opts ? opts.iconColor : null;
      let textColor = opts && 'textColor' in opts ? opts.textColor : null;
      let contentPadding = opts && 'contentPadding' in opts ? opts.contentPadding : null;
      let tileColor = opts && 'tileColor' in opts ? opts.tileColor : null;
      let selectedTileColor = opts && 'selectedTileColor' in opts ? opts.selectedTileColor : null;
      let horizontalTitleGap = opts && 'horizontalTitleGap' in opts ? opts.horizontalTitleGap : null;
      let minVerticalPadding = opts && 'minVerticalPadding' in opts ? opts.minVerticalPadding : null;
      let minLeadingWidth = opts && 'minLeadingWidth' in opts ? opts.minLeadingWidth : null;
      let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
      let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
      let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
      return new list_tile_theme.ListTileThemeData.new({dense: dense, shape: shape, style: style, selectedColor: selectedColor, iconColor: iconColor, textColor: textColor, contentPadding: contentPadding, tileColor: tileColor, selectedTileColor: selectedTileColor, horizontalTitleGap: horizontalTitleGap, minVerticalPadding: minVerticalPadding, minLeadingWidth: minLeadingWidth, enableFeedback: enableFeedback, mouseCursor: mouseCursor, visualDensity: visualDensity});
    }
    copyWith(opts) {
      let t66, t66$, t66$0, t66$1, t66$2, t66$3, t66$4, t66$5, t66$6, t66$7, t66$8, t66$9, t66$10, t66$11, t66$12;
      let dense = opts && 'dense' in opts ? opts.dense : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let style = opts && 'style' in opts ? opts.style : null;
      let selectedColor = opts && 'selectedColor' in opts ? opts.selectedColor : null;
      let iconColor = opts && 'iconColor' in opts ? opts.iconColor : null;
      let textColor = opts && 'textColor' in opts ? opts.textColor : null;
      let contentPadding = opts && 'contentPadding' in opts ? opts.contentPadding : null;
      let tileColor = opts && 'tileColor' in opts ? opts.tileColor : null;
      let selectedTileColor = opts && 'selectedTileColor' in opts ? opts.selectedTileColor : null;
      let horizontalTitleGap = opts && 'horizontalTitleGap' in opts ? opts.horizontalTitleGap : null;
      let minVerticalPadding = opts && 'minVerticalPadding' in opts ? opts.minVerticalPadding : null;
      let minLeadingWidth = opts && 'minLeadingWidth' in opts ? opts.minLeadingWidth : null;
      let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
      let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
      let isThreeLine = opts && 'isThreeLine' in opts ? opts.isThreeLine : null;
      let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
      return new list_tile_theme.ListTileThemeData.new({dense: (t66 = dense, t66 == null ? this.dense : t66), shape: (t66$ = shape, t66$ == null ? this.shape : t66$), style: (t66$0 = style, t66$0 == null ? this.style : t66$0), selectedColor: (t66$1 = selectedColor, t66$1 == null ? this.selectedColor : t66$1), iconColor: (t66$2 = iconColor, t66$2 == null ? this.iconColor : t66$2), textColor: (t66$3 = textColor, t66$3 == null ? this.textColor : t66$3), contentPadding: (t66$4 = contentPadding, t66$4 == null ? this.contentPadding : t66$4), tileColor: (t66$5 = tileColor, t66$5 == null ? this.tileColor : t66$5), selectedTileColor: (t66$6 = selectedTileColor, t66$6 == null ? this.selectedTileColor : t66$6), horizontalTitleGap: (t66$7 = horizontalTitleGap, t66$7 == null ? this.horizontalTitleGap : t66$7), minVerticalPadding: (t66$8 = minVerticalPadding, t66$8 == null ? this.minVerticalPadding : t66$8), minLeadingWidth: (t66$9 = minLeadingWidth, t66$9 == null ? this.minLeadingWidth : t66$9), enableFeedback: (t66$10 = enableFeedback, t66$10 == null ? this.enableFeedback : t66$10), mouseCursor: (t66$11 = mouseCursor, t66$11 == null ? this.mouseCursor : t66$11), visualDensity: (t66$12 = visualDensity, t66$12 == null ? this.visualDensity : t66$12)});
    }
    static lerp(a, b, t) {
      let t66, t66$, t66$0, t66$1, t66$2, t66$3, t66$4, t66$5, t66$6, t66$7, t66$8, t66$9, t66$10, t66$11, t66$12, t66$13, t66$14, t66$15, t66$16, t66$17, t66$18, t66$19, t66$20, t66$21, t66$22, t66$23, t66$24, t66$25, t66$26, t66$27;
      if (!(t !== null)) dart.assertFailed(null, I[103], 148, 13, "t != null");
      if (a == null && b == null) {
        return null;
      }
      return new list_tile_theme.ListTileThemeData.new({dense: t < 0.5 ? (t66 = a, t66 == null ? null : t66.dense) : (t66$ = b, t66$ == null ? null : t66$.dense), shape: borders.ShapeBorder.lerp((t66$0 = a, t66$0 == null ? null : t66$0.shape), (t66$1 = b, t66$1 == null ? null : t66$1.shape), t), style: t < 0.5 ? (t66$2 = a, t66$2 == null ? null : t66$2.style) : (t66$3 = b, t66$3 == null ? null : t66$3.style), selectedColor: ui.Color.lerp((t66$4 = a, t66$4 == null ? null : t66$4.selectedColor), (t66$5 = b, t66$5 == null ? null : t66$5.selectedColor), t), iconColor: ui.Color.lerp((t66$6 = a, t66$6 == null ? null : t66$6.iconColor), (t66$7 = b, t66$7 == null ? null : t66$7.iconColor), t), textColor: ui.Color.lerp((t66$8 = a, t66$8 == null ? null : t66$8.textColor), (t66$9 = b, t66$9 == null ? null : t66$9.textColor), t), contentPadding: edge_insets.EdgeInsetsGeometry.lerp((t66$10 = a, t66$10 == null ? null : t66$10.contentPadding), (t66$11 = b, t66$11 == null ? null : t66$11.contentPadding), t), tileColor: ui.Color.lerp((t66$12 = a, t66$12 == null ? null : t66$12.tileColor), (t66$13 = b, t66$13 == null ? null : t66$13.tileColor), t), selectedTileColor: ui.Color.lerp((t66$14 = a, t66$14 == null ? null : t66$14.selectedTileColor), (t66$15 = b, t66$15 == null ? null : t66$15.selectedTileColor), t), horizontalTitleGap: ui.lerpDouble((t66$16 = a, t66$16 == null ? null : t66$16.horizontalTitleGap), (t66$17 = b, t66$17 == null ? null : t66$17.horizontalTitleGap), t), minVerticalPadding: ui.lerpDouble((t66$18 = a, t66$18 == null ? null : t66$18.minVerticalPadding), (t66$19 = b, t66$19 == null ? null : t66$19.minVerticalPadding), t), minLeadingWidth: ui.lerpDouble((t66$20 = a, t66$20 == null ? null : t66$20.minLeadingWidth), (t66$21 = b, t66$21 == null ? null : t66$21.minLeadingWidth), t), enableFeedback: t < 0.5 ? (t66$22 = a, t66$22 == null ? null : t66$22.enableFeedback) : (t66$23 = b, t66$23 == null ? null : t66$23.enableFeedback), mouseCursor: t < 0.5 ? (t66$24 = a, t66$24 == null ? null : t66$24.mouseCursor) : (t66$25 = b, t66$25 == null ? null : t66$25.mouseCursor), visualDensity: t < 0.5 ? (t66$26 = a, t66$26 == null ? null : t66$26.visualDensity) : (t66$27 = b, t66$27 == null ? null : t66$27.visualDensity)});
    }
    get hashCode() {
      return core.Object.hash(this.dense, this.shape, this.style, this.selectedColor, this.iconColor, this.textColor, this.contentPadding, this.tileColor, this.selectedTileColor, this.horizontalTitleGap, this.minVerticalPadding, this.minLeadingWidth, this.enableFeedback, this.mouseCursor, this.visualDensity);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      if (!other[S.$runtimeType]._equals(this[S.$runtimeType])) {
        return false;
      }
      return list_tile_theme.ListTileThemeData.is(other) && other.dense == this.dense && dart.equals(other.shape, this.shape) && other.style == this.style && dart.equals(other.selectedColor, this.selectedColor) && dart.equals(other.iconColor, this.iconColor) && dart.equals(other.textColor, this.textColor) && dart.equals(other.contentPadding, this.contentPadding) && dart.equals(other.tileColor, this.tileColor) && dart.equals(other.selectedTileColor, this.selectedTileColor) && other.horizontalTitleGap == this.horizontalTitleGap && other.minVerticalPadding == this.minVerticalPadding && other.minLeadingWidth == this.minLeadingWidth && other.enableFeedback == this.enableFeedback && dart.equals(other.mouseCursor, this.mouseCursor) && dart.equals(other.visualDensity, this.visualDensity);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("dense", this.dense, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfShapeBorder()).new("shape", this.shape, {defaultValue: null}));
      properties.add(new (T$.EnumPropertyOfListTileStyle()).new("style", this.style, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("selectedColor", this.selectedColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("iconColor", this.iconColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("textColor", this.textColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfEdgeInsetsGeometry()).new("contentPadding", this.contentPadding, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("tileColor", this.tileColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("selectedTileColor", this.selectedTileColor, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("horizontalTitleGap", this.horizontalTitleGap, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("minVerticalPadding", this.minVerticalPadding, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("minLeadingWidth", this.minLeadingWidth, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("enableFeedback", this.enableFeedback, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMaterialStatePropertyOfMouseCursorN()).new("mouseCursor", this.mouseCursor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfVisualDensity()).new("visualDensity", this.visualDensity, {defaultValue: null}));
    }
  };
  (list_tile_theme.ListTileThemeData.new = function(opts) {
    let dense = opts && 'dense' in opts ? opts.dense : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let style = opts && 'style' in opts ? opts.style : null;
    let selectedColor = opts && 'selectedColor' in opts ? opts.selectedColor : null;
    let iconColor = opts && 'iconColor' in opts ? opts.iconColor : null;
    let textColor = opts && 'textColor' in opts ? opts.textColor : null;
    let contentPadding = opts && 'contentPadding' in opts ? opts.contentPadding : null;
    let tileColor = opts && 'tileColor' in opts ? opts.tileColor : null;
    let selectedTileColor = opts && 'selectedTileColor' in opts ? opts.selectedTileColor : null;
    let horizontalTitleGap = opts && 'horizontalTitleGap' in opts ? opts.horizontalTitleGap : null;
    let minVerticalPadding = opts && 'minVerticalPadding' in opts ? opts.minVerticalPadding : null;
    let minLeadingWidth = opts && 'minLeadingWidth' in opts ? opts.minLeadingWidth : null;
    let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
    this[S$1.dense] = dense;
    this[S$1.shape$14] = shape;
    this[S$1.style$7] = style;
    this[S$1.selectedColor$3] = selectedColor;
    this[S$1.iconColor$4] = iconColor;
    this[S$1.textColor$3] = textColor;
    this[S$1.contentPadding$3] = contentPadding;
    this[S$1.tileColor] = tileColor;
    this[S$1.selectedTileColor] = selectedTileColor;
    this[S$1.horizontalTitleGap] = horizontalTitleGap;
    this[S$1.minVerticalPadding] = minVerticalPadding;
    this[S$1.minLeadingWidth] = minLeadingWidth;
    this[S$1.enableFeedback$12] = enableFeedback;
    this[S$1.mouseCursor$15] = mouseCursor;
    this[S$1.visualDensity$8] = visualDensity;
    ;
  }).prototype = list_tile_theme.ListTileThemeData.prototype;
  dart.addTypeTests(list_tile_theme.ListTileThemeData);
  dart.addTypeCaches(list_tile_theme.ListTileThemeData);
  dart.setMethodSignature(list_tile_theme.ListTileThemeData, () => ({
    __proto__: dart.getMethods(list_tile_theme.ListTileThemeData.__proto__),
    copyWith: dart.fnType(list_tile_theme.ListTileThemeData, [], {contentPadding: dart.nullable(edge_insets.EdgeInsetsGeometry), dense: dart.nullable(core.bool), enableFeedback: dart.nullable(core.bool), horizontalTitleGap: dart.nullable(core.double), iconColor: dart.nullable(ui.Color), isThreeLine: dart.nullable(core.bool), minLeadingWidth: dart.nullable(core.double), minVerticalPadding: dart.nullable(core.double), mouseCursor: dart.nullable(material_state.MaterialStateProperty$(dart.nullable(mouse_cursor.MouseCursor))), selectedColor: dart.nullable(ui.Color), selectedTileColor: dart.nullable(ui.Color), shape: dart.nullable(borders.ShapeBorder), style: dart.nullable(list_tile.ListTileStyle), textColor: dart.nullable(ui.Color), tileColor: dart.nullable(ui.Color), visualDensity: dart.nullable(theme_data.VisualDensity)}, {})
  }));
  dart.setStaticMethodSignature(list_tile_theme.ListTileThemeData, () => ['lerp']);
  dart.setLibraryUri(list_tile_theme.ListTileThemeData, I[104]);
  dart.setFieldSignature(list_tile_theme.ListTileThemeData, () => ({
    __proto__: dart.getFields(list_tile_theme.ListTileThemeData.__proto__),
    dense: dart.finalFieldType(dart.nullable(core.bool)),
    shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    style: dart.finalFieldType(dart.nullable(list_tile.ListTileStyle)),
    selectedColor: dart.finalFieldType(dart.nullable(ui.Color)),
    iconColor: dart.finalFieldType(dart.nullable(ui.Color)),
    textColor: dart.finalFieldType(dart.nullable(ui.Color)),
    contentPadding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    tileColor: dart.finalFieldType(dart.nullable(ui.Color)),
    selectedTileColor: dart.finalFieldType(dart.nullable(ui.Color)),
    horizontalTitleGap: dart.finalFieldType(dart.nullable(core.double)),
    minVerticalPadding: dart.finalFieldType(dart.nullable(core.double)),
    minLeadingWidth: dart.finalFieldType(dart.nullable(core.double)),
    enableFeedback: dart.finalFieldType(dart.nullable(core.bool)),
    mouseCursor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(mouse_cursor.MouseCursor)))),
    visualDensity: dart.finalFieldType(dart.nullable(theme_data.VisualDensity))
  }));
  dart.defineExtensionMethods(list_tile_theme.ListTileThemeData, ['_equals']);
  dart.defineExtensionAccessors(list_tile_theme.ListTileThemeData, ['hashCode']);
  list_tile_theme.ListTileTheme = class ListTileTheme extends inherited_theme.InheritedTheme {
    get [S$1._data$1]() {
      return this[S$1._data];
    }
    set [S$1._data$1](value) {
      super[S$1._data$1] = value;
    }
    get [S$1._dense$1]() {
      return this[S$1._dense];
    }
    set [S$1._dense$1](value) {
      super[S$1._dense$1] = value;
    }
    get [S$1._shape$3]() {
      return this[S$1._shape$2];
    }
    set [S$1._shape$3](value) {
      super[S$1._shape$3] = value;
    }
    get [S$1._style$1]() {
      return this[S$1._style];
    }
    set [S$1._style$1](value) {
      super[S$1._style$1] = value;
    }
    get [S$1._selectedColor$1]() {
      return this[S$1._selectedColor];
    }
    set [S$1._selectedColor$1](value) {
      super[S$1._selectedColor$1] = value;
    }
    get [S$1._iconColor$1]() {
      return this[S$1._iconColor];
    }
    set [S$1._iconColor$1](value) {
      super[S$1._iconColor$1] = value;
    }
    get [S$1._textColor$1]() {
      return this[S$1._textColor];
    }
    set [S$1._textColor$1](value) {
      super[S$1._textColor$1] = value;
    }
    get [S$1._contentPadding$1]() {
      return this[S$1._contentPadding];
    }
    set [S$1._contentPadding$1](value) {
      super[S$1._contentPadding$1] = value;
    }
    get [S$1._tileColor$1]() {
      return this[S$1._tileColor];
    }
    set [S$1._tileColor$1](value) {
      super[S$1._tileColor$1] = value;
    }
    get [S$1._selectedTileColor$1]() {
      return this[S$1._selectedTileColor];
    }
    set [S$1._selectedTileColor$1](value) {
      super[S$1._selectedTileColor$1] = value;
    }
    get [S$1._horizontalTitleGap$1]() {
      return this[S$1._horizontalTitleGap];
    }
    set [S$1._horizontalTitleGap$1](value) {
      super[S$1._horizontalTitleGap$1] = value;
    }
    get [S$1._minVerticalPadding$1]() {
      return this[S$1._minVerticalPadding];
    }
    set [S$1._minVerticalPadding$1](value) {
      super[S$1._minVerticalPadding$1] = value;
    }
    get [S$1._minLeadingWidth$1]() {
      return this[S$1._minLeadingWidth];
    }
    set [S$1._minLeadingWidth$1](value) {
      super[S$1._minLeadingWidth$1] = value;
    }
    get [S$1._enableFeedback$2]() {
      return this[S$1._enableFeedback$1];
    }
    set [S$1._enableFeedback$2](value) {
      super[S$1._enableFeedback$2] = value;
    }
    get [S$1._mouseCursor$1]() {
      return this[S$1._mouseCursor];
    }
    set [S$1._mouseCursor$1](value) {
      super[S$1._mouseCursor$1] = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let data = opts && 'data' in opts ? opts.data : null;
      let dense = opts && 'dense' in opts ? opts.dense : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let style = opts && 'style' in opts ? opts.style : null;
      let selectedColor = opts && 'selectedColor' in opts ? opts.selectedColor : null;
      let iconColor = opts && 'iconColor' in opts ? opts.iconColor : null;
      let textColor = opts && 'textColor' in opts ? opts.textColor : null;
      let contentPadding = opts && 'contentPadding' in opts ? opts.contentPadding : null;
      let tileColor = opts && 'tileColor' in opts ? opts.tileColor : null;
      let selectedTileColor = opts && 'selectedTileColor' in opts ? opts.selectedTileColor : null;
      let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
      let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
      let horizontalTitleGap = opts && 'horizontalTitleGap' in opts ? opts.horizontalTitleGap : null;
      let minVerticalPadding = opts && 'minVerticalPadding' in opts ? opts.minVerticalPadding : null;
      let minLeadingWidth = opts && 'minLeadingWidth' in opts ? opts.minLeadingWidth : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new list_tile_theme.ListTileTheme.new({key: key, data: data, dense: dense, shape: shape, style: style, selectedColor: selectedColor, iconColor: iconColor, textColor: textColor, contentPadding: contentPadding, tileColor: tileColor, selectedTileColor: selectedTileColor, enableFeedback: enableFeedback, mouseCursor: mouseCursor, horizontalTitleGap: horizontalTitleGap, minVerticalPadding: minVerticalPadding, minLeadingWidth: minLeadingWidth, child: child, $creationLocationd_0dea112b090073317d4: C[809] || CT.C809});
    }
    get data() {
      let t66;
      t66 = this[S$1._data$1];
      return t66 == null ? new list_tile_theme.ListTileThemeData.new({dense: this[S$1._dense$1], shape: this[S$1._shape$3], style: this[S$1._style$1], selectedColor: this[S$1._selectedColor$1], iconColor: this[S$1._iconColor$1], textColor: this[S$1._textColor$1], contentPadding: this[S$1._contentPadding$1], tileColor: this[S$1._tileColor$1], selectedTileColor: this[S$1._selectedTileColor$1], enableFeedback: this[S$1._enableFeedback$2], mouseCursor: this[S$1._mouseCursor$1], horizontalTitleGap: this[S$1._horizontalTitleGap$1], minVerticalPadding: this[S$1._minVerticalPadding$1], minLeadingWidth: this[S$1._minLeadingWidth$1]}) : t66;
    }
    get dense() {
      return this[S$1._data$1] != null ? dart.nullCheck(this[S$1._data$1]).dense : this[S$1._dense$1];
    }
    get shape() {
      return this[S$1._data$1] != null ? dart.nullCheck(this[S$1._data$1]).shape : this[S$1._shape$3];
    }
    get style() {
      return this[S$1._data$1] != null ? dart.nullCheck(this[S$1._data$1]).style : this[S$1._style$1];
    }
    get selectedColor() {
      return this[S$1._data$1] != null ? dart.nullCheck(this[S$1._data$1]).selectedColor : this[S$1._selectedColor$1];
    }
    get iconColor() {
      return this[S$1._data$1] != null ? dart.nullCheck(this[S$1._data$1]).iconColor : this[S$1._iconColor$1];
    }
    get textColor() {
      return this[S$1._data$1] != null ? dart.nullCheck(this[S$1._data$1]).textColor : this[S$1._textColor$1];
    }
    get contentPadding() {
      return this[S$1._data$1] != null ? dart.nullCheck(this[S$1._data$1]).contentPadding : this[S$1._contentPadding$1];
    }
    get tileColor() {
      return this[S$1._data$1] != null ? dart.nullCheck(this[S$1._data$1]).tileColor : this[S$1._tileColor$1];
    }
    get selectedTileColor() {
      return this[S$1._data$1] != null ? dart.nullCheck(this[S$1._data$1]).selectedTileColor : this[S$1._selectedTileColor$1];
    }
    get horizontalTitleGap() {
      return this[S$1._data$1] != null ? dart.nullCheck(this[S$1._data$1]).horizontalTitleGap : this[S$1._horizontalTitleGap$1];
    }
    get minVerticalPadding() {
      return this[S$1._data$1] != null ? dart.nullCheck(this[S$1._data$1]).minVerticalPadding : this[S$1._minVerticalPadding$1];
    }
    get minLeadingWidth() {
      return this[S$1._data$1] != null ? dart.nullCheck(this[S$1._data$1]).minLeadingWidth : this[S$1._minLeadingWidth$1];
    }
    get enableFeedback() {
      return this[S$1._data$1] != null ? dart.nullCheck(this[S$1._data$1]).enableFeedback : this[S$1._enableFeedback$2];
    }
    static of(context) {
      let t66, t66$;
      let result = context.dependOnInheritedWidgetOfExactType(list_tile_theme.ListTileTheme);
      t66$ = (t66 = result, t66 == null ? null : t66.data);
      return t66$ == null ? theme$.Theme.of(context).listTileTheme : t66$;
    }
    static merge(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let dense = opts && 'dense' in opts ? opts.dense : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let style = opts && 'style' in opts ? opts.style : null;
      let selectedColor = opts && 'selectedColor' in opts ? opts.selectedColor : null;
      let iconColor = opts && 'iconColor' in opts ? opts.iconColor : null;
      let textColor = opts && 'textColor' in opts ? opts.textColor : null;
      let contentPadding = opts && 'contentPadding' in opts ? opts.contentPadding : null;
      let tileColor = opts && 'tileColor' in opts ? opts.tileColor : null;
      let selectedTileColor = opts && 'selectedTileColor' in opts ? opts.selectedTileColor : null;
      let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
      let horizontalTitleGap = opts && 'horizontalTitleGap' in opts ? opts.horizontalTitleGap : null;
      let minVerticalPadding = opts && 'minVerticalPadding' in opts ? opts.minVerticalPadding : null;
      let minLeadingWidth = opts && 'minLeadingWidth' in opts ? opts.minLeadingWidth : null;
      let child = opts && 'child' in opts ? opts.child : null;
      if (!(child !== null)) dart.assertFailed(null, I[103], 450, 12, "child != null");
      return new basic.Builder.new({builder: dart.fn(context => {
          let t66, t66$, t66$0, t66$1, t66$2, t66$3, t66$4, t66$5, t66$6, t66$7, t66$8, t66$9, t66$10;
          let parent = list_tile_theme.ListTileTheme.of(context);
          return new list_tile_theme.ListTileTheme.new({key: key, data: new list_tile_theme.ListTileThemeData.new({dense: (t66 = dense, t66 == null ? parent.dense : t66), shape: (t66$ = shape, t66$ == null ? parent.shape : t66$), style: (t66$0 = style, t66$0 == null ? parent.style : t66$0), selectedColor: (t66$1 = selectedColor, t66$1 == null ? parent.selectedColor : t66$1), iconColor: (t66$2 = iconColor, t66$2 == null ? parent.iconColor : t66$2), textColor: (t66$3 = textColor, t66$3 == null ? parent.textColor : t66$3), contentPadding: (t66$4 = contentPadding, t66$4 == null ? parent.contentPadding : t66$4), tileColor: (t66$5 = tileColor, t66$5 == null ? parent.tileColor : t66$5), selectedTileColor: (t66$6 = selectedTileColor, t66$6 == null ? parent.selectedTileColor : t66$6), enableFeedback: (t66$7 = enableFeedback, t66$7 == null ? parent.enableFeedback : t66$7), horizontalTitleGap: (t66$8 = horizontalTitleGap, t66$8 == null ? parent.horizontalTitleGap : t66$8), minVerticalPadding: (t66$9 = minVerticalPadding, t66$9 == null ? parent.minVerticalPadding : t66$9), minLeadingWidth: (t66$10 = minLeadingWidth, t66$10 == null ? parent.minLeadingWidth : t66$10)}), child: child, $creationLocationd_0dea112b090073317d4: C[810] || CT.C810});
        }, T$.BuildContextToListTileTheme()), $creationLocationd_0dea112b090073317d4: C[811] || CT.C811});
    }
    wrap(context, child) {
      return new list_tile_theme.ListTileTheme.new({data: new list_tile_theme.ListTileThemeData.new({dense: this.dense, shape: this.shape, style: this.style, selectedColor: this.selectedColor, iconColor: this.iconColor, textColor: this.textColor, contentPadding: this.contentPadding, tileColor: this.tileColor, selectedTileColor: this.selectedTileColor, enableFeedback: this.enableFeedback, horizontalTitleGap: this.horizontalTitleGap, minVerticalPadding: this.minVerticalPadding, minLeadingWidth: this.minLeadingWidth}), child: child, $creationLocationd_0dea112b090073317d4: C[812] || CT.C812});
    }
    updateShouldNotify(oldWidget) {
      list_tile_theme.ListTileTheme.as(oldWidget);
      return !this.data._equals(oldWidget.data);
    }
  };
  (list_tile_theme.ListTileTheme.new = function(opts) {
    let t66, t66$, t66$0, t66$1, t66$2, t66$3, t66$4, t66$5, t66$6, t66$7, t66$8;
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    let dense = opts && 'dense' in opts ? opts.dense : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let style = opts && 'style' in opts ? opts.style : null;
    let selectedColor = opts && 'selectedColor' in opts ? opts.selectedColor : null;
    let iconColor = opts && 'iconColor' in opts ? opts.iconColor : null;
    let textColor = opts && 'textColor' in opts ? opts.textColor : null;
    let contentPadding = opts && 'contentPadding' in opts ? opts.contentPadding : null;
    let tileColor = opts && 'tileColor' in opts ? opts.tileColor : null;
    let selectedTileColor = opts && 'selectedTileColor' in opts ? opts.selectedTileColor : null;
    let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let horizontalTitleGap = opts && 'horizontalTitleGap' in opts ? opts.horizontalTitleGap : null;
    let minVerticalPadding = opts && 'minVerticalPadding' in opts ? opts.minVerticalPadding : null;
    let minLeadingWidth = opts && 'minLeadingWidth' in opts ? opts.minLeadingWidth : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    if (!(data == null || (t66$8 = (t66$7 = (t66$6 = (t66$5 = (t66$4 = (t66$3 = (t66$2 = (t66$1 = (t66$0 = (t66$ = (t66 = shape, t66 == null ? selectedColor : t66), t66$ == null ? iconColor : t66$), t66$0 == null ? textColor : t66$0), t66$1 == null ? contentPadding : t66$1), t66$2 == null ? tileColor : t66$2), t66$3 == null ? selectedTileColor : t66$3), t66$4 == null ? enableFeedback : t66$4), t66$5 == null ? mouseCursor : t66$5), t66$6 == null ? horizontalTitleGap : t66$6), t66$7 == null ? minVerticalPadding : t66$7), t66$8 == null ? minLeadingWidth : t66$8) == null)) dart.assertFailed(null, I[103], 270, 10, "data == null ||\n         (shape ??\n          selectedColor ??\n          iconColor ??\n          textColor ??\n          contentPadding ??\n          tileColor ??\n          selectedTileColor ??\n          enableFeedback ??\n          mouseCursor ??\n          horizontalTitleGap ??\n          minVerticalPadding ??\n          minLeadingWidth) == null");
    this[S$1._data] = data;
    this[S$1._dense] = dense;
    this[S$1._shape$2] = shape;
    this[S$1._style] = style;
    this[S$1._selectedColor] = selectedColor;
    this[S$1._iconColor] = iconColor;
    this[S$1._textColor] = textColor;
    this[S$1._contentPadding] = contentPadding;
    this[S$1._tileColor] = tileColor;
    this[S$1._selectedTileColor] = selectedTileColor;
    this[S$1._enableFeedback$1] = enableFeedback;
    this[S$1._mouseCursor] = mouseCursor;
    this[S$1._horizontalTitleGap] = horizontalTitleGap;
    this[S$1._minVerticalPadding] = minVerticalPadding;
    this[S$1._minLeadingWidth] = minLeadingWidth;
    list_tile_theme.ListTileTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = list_tile_theme.ListTileTheme.prototype;
  dart.addTypeTests(list_tile_theme.ListTileTheme);
  dart.addTypeCaches(list_tile_theme.ListTileTheme);
  dart.setMethodSignature(list_tile_theme.ListTileTheme, () => ({
    __proto__: dart.getMethods(list_tile_theme.ListTileTheme.__proto__),
    wrap: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget]),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setStaticMethodSignature(list_tile_theme.ListTileTheme, () => ['of', 'merge']);
  dart.setGetterSignature(list_tile_theme.ListTileTheme, () => ({
    __proto__: dart.getGetters(list_tile_theme.ListTileTheme.__proto__),
    data: list_tile_theme.ListTileThemeData,
    dense: dart.nullable(core.bool),
    shape: dart.nullable(borders.ShapeBorder),
    style: dart.nullable(list_tile.ListTileStyle),
    selectedColor: dart.nullable(ui.Color),
    iconColor: dart.nullable(ui.Color),
    textColor: dart.nullable(ui.Color),
    contentPadding: dart.nullable(edge_insets.EdgeInsetsGeometry),
    tileColor: dart.nullable(ui.Color),
    selectedTileColor: dart.nullable(ui.Color),
    horizontalTitleGap: dart.nullable(core.double),
    minVerticalPadding: dart.nullable(core.double),
    minLeadingWidth: dart.nullable(core.double),
    enableFeedback: dart.nullable(core.bool)
  }));
  dart.setLibraryUri(list_tile_theme.ListTileTheme, I[104]);
  dart.setFieldSignature(list_tile_theme.ListTileTheme, () => ({
    __proto__: dart.getFields(list_tile_theme.ListTileTheme.__proto__),
    [S$1._data$1]: dart.finalFieldType(dart.nullable(list_tile_theme.ListTileThemeData)),
    [S$1._dense$1]: dart.finalFieldType(dart.nullable(core.bool)),
    [S$1._shape$3]: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    [S$1._style$1]: dart.finalFieldType(dart.nullable(list_tile.ListTileStyle)),
    [S$1._selectedColor$1]: dart.finalFieldType(dart.nullable(ui.Color)),
    [S$1._iconColor$1]: dart.finalFieldType(dart.nullable(ui.Color)),
    [S$1._textColor$1]: dart.finalFieldType(dart.nullable(ui.Color)),
    [S$1._contentPadding$1]: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    [S$1._tileColor$1]: dart.finalFieldType(dart.nullable(ui.Color)),
    [S$1._selectedTileColor$1]: dart.finalFieldType(dart.nullable(ui.Color)),
    [S$1._horizontalTitleGap$1]: dart.finalFieldType(dart.nullable(core.double)),
    [S$1._minVerticalPadding$1]: dart.finalFieldType(dart.nullable(core.double)),
    [S$1._minLeadingWidth$1]: dart.finalFieldType(dart.nullable(core.double)),
    [S$1._enableFeedback$2]: dart.finalFieldType(dart.nullable(core.bool)),
    [S$1._mouseCursor$1]: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(mouse_cursor.MouseCursor))))
  }));
  ink_highlight.InkHighlight = class InkHighlight extends ink_well.InteractiveInkFeature {
    static ['_#new#tearOff'](opts) {
      let controller = opts && 'controller' in opts ? opts.controller : null;
      let referenceBox = opts && 'referenceBox' in opts ? opts.referenceBox : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      let shape = opts && 'shape' in opts ? opts.shape : C[813] || CT.C813;
      let radius = opts && 'radius' in opts ? opts.radius : null;
      let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
      let customBorder = opts && 'customBorder' in opts ? opts.customBorder : null;
      let rectCallback = opts && 'rectCallback' in opts ? opts.rectCallback : null;
      let onRemoved = opts && 'onRemoved' in opts ? opts.onRemoved : null;
      let fadeDuration = opts && 'fadeDuration' in opts ? opts.fadeDuration : C[160] || CT.C160;
      return new ink_highlight.InkHighlight.new({controller: controller, referenceBox: referenceBox, color: color, textDirection: textDirection, shape: shape, radius: radius, borderRadius: borderRadius, customBorder: customBorder, rectCallback: rectCallback, onRemoved: onRemoved, fadeDuration: fadeDuration});
    }
    get [S$1._alpha$2]() {
      let t66;
      t66 = this[S$1.__InkHighlight__alpha];
      return t66 == null ? dart.throw(new _internal.LateError.fieldNI("_alpha")) : t66;
    }
    set [S$1._alpha$2](library$32package$58flutter$47src$47material$47ink_highlight$46dart$58$58_alpha$35param) {
      this[S$1.__InkHighlight__alpha] = library$32package$58flutter$47src$47material$47ink_highlight$46dart$58$58_alpha$35param;
    }
    get [S$1._alphaController$1]() {
      let t66;
      t66 = this[S$1.__InkHighlight__alphaController];
      return t66 == null ? dart.throw(new _internal.LateError.fieldNI("_alphaController")) : t66;
    }
    set [S$1._alphaController$1](library$32package$58flutter$47src$47material$47ink_highlight$46dart$58$58_alphaController$35param) {
      this[S$1.__InkHighlight__alphaController] = library$32package$58flutter$47src$47material$47ink_highlight$46dart$58$58_alphaController$35param;
    }
    get active() {
      return this[S$1._active];
    }
    activate() {
      this[S$1._active] = true;
      this[S$1._alphaController$1].forward();
    }
    deactivate() {
      this[S$1._active] = false;
      this[S$1._alphaController$1].reverse();
    }
    [S$1._handleAlphaStatusChanged$2](status) {
      if (status === animation$.AnimationStatus.dismissed && !this[S$1._active]) {
        this.dispose();
      }
    }
    dispose() {
      this[S$1._alphaController$1].dispose();
      super.dispose();
    }
    [S$1._paintHighlight](canvas, rect, paint) {
      let t66;
      if (!(this[S$1._shape$4] !== null)) dart.assertFailed(null, I[105], 113, 12, "_shape != null");
      canvas.save();
      if (this[S$1._customBorder$3] != null) {
        canvas.clipPath(dart.nullCheck(this[S$1._customBorder$3]).getOuterPath(rect, {textDirection: this[S$1._textDirection$4]}));
      }
      switch (this[S$1._shape$4]) {
        case C[814] || CT.C814:
          {
            canvas.drawCircle(rect.center, (t66 = this[S$1._radius$2], t66 == null ? 35 : t66), paint);
            break;
          }
        case C[813] || CT.C813:
          {
            if (!this[S$1._borderRadius$3]._equals(border_radius.BorderRadius.zero)) {
              let clipRRect = new ui.RRect.fromRectAndCorners(rect, {topLeft: this[S$1._borderRadius$3].topLeft, topRight: this[S$1._borderRadius$3].topRight, bottomLeft: this[S$1._borderRadius$3].bottomLeft, bottomRight: this[S$1._borderRadius$3].bottomRight});
              canvas.drawRRect(clipRRect, paint);
            } else {
              canvas.drawRect(rect, paint);
            }
            break;
          }
      }
      canvas.restore();
    }
    paintFeature(canvas, transform) {
      let t66;
      let paint = (t66 = ui.Paint.new(), (() => {
        t66.color = this.color.withAlpha(this[S$1._alpha$2].value);
        return t66;
      })());
      let originOffset = matrix_utils.MatrixUtils.getAsTranslation(transform);
      let rect = this[S$1._rectCallback] != null ? dart.nullCheck(this[S$1._rectCallback])() : ui.Offset.zero['&'](this.referenceBox.size);
      if (originOffset == null) {
        canvas.save();
        canvas.transform(transform.storage);
        this[S$1._paintHighlight](canvas, rect, paint);
        canvas.restore();
      } else {
        this[S$1._paintHighlight](canvas, rect.shift(originOffset), paint);
      }
    }
  };
  (ink_highlight.InkHighlight.new = function(opts) {
    let t66, t66$;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let referenceBox = opts && 'referenceBox' in opts ? opts.referenceBox : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let shape = opts && 'shape' in opts ? opts.shape : C[813] || CT.C813;
    let radius = opts && 'radius' in opts ? opts.radius : null;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
    let customBorder = opts && 'customBorder' in opts ? opts.customBorder : null;
    let rectCallback = opts && 'rectCallback' in opts ? opts.rectCallback : null;
    let onRemoved = opts && 'onRemoved' in opts ? opts.onRemoved : null;
    let fadeDuration = opts && 'fadeDuration' in opts ? opts.fadeDuration : C[160] || CT.C160;
    this[S$1.__InkHighlight__alpha] = null;
    this[S$1.__InkHighlight__alphaController] = null;
    this[S$1._active] = true;
    if (!(color !== null)) dart.assertFailed(null, I[105], 51, 15, "color != null");
    if (!(shape !== null)) dart.assertFailed(null, I[105], 52, 15, "shape != null");
    if (!(textDirection !== null)) dart.assertFailed(null, I[105], 53, 15, "textDirection != null");
    if (!(fadeDuration !== null)) dart.assertFailed(null, I[105], 54, 15, "fadeDuration != null");
    this[S$1._shape$4] = shape;
    this[S$1._radius$2] = radius;
    this[S$1._borderRadius$3] = (t66 = borderRadius, t66 == null ? border_radius.BorderRadius.zero : t66);
    this[S$1._customBorder$3] = customBorder;
    this[S$1._textDirection$4] = textDirection;
    this[S$1._rectCallback] = rectCallback;
    ink_highlight.InkHighlight.__proto__.new.call(this, {controller: controller, color: color, referenceBox: referenceBox, onRemoved: onRemoved});
    this[S$1._alphaController$1] = (t66$ = new animation_controller.AnimationController.new({duration: fadeDuration, vsync: controller.vsync}), (() => {
      t66$.addListener(dart.bind(controller, 'markNeedsPaint'));
      t66$.addStatusListener(dart.bind(this, S$1._handleAlphaStatusChanged$2));
      t66$.forward();
      return t66$;
    })());
    this[S$1._alpha$2] = this[S$1._alphaController$1].drive(core.int, new tween.IntTween.new({begin: 0, end: color.alpha}));
    controller.addInkFeature(this);
  }).prototype = ink_highlight.InkHighlight.prototype;
  dart.addTypeTests(ink_highlight.InkHighlight);
  dart.addTypeCaches(ink_highlight.InkHighlight);
  dart.setMethodSignature(ink_highlight.InkHighlight, () => ({
    __proto__: dart.getMethods(ink_highlight.InkHighlight.__proto__),
    activate: dart.fnType(dart.void, []),
    deactivate: dart.fnType(dart.void, []),
    [S$1._handleAlphaStatusChanged$2]: dart.fnType(dart.void, [animation$.AnimationStatus]),
    [S$1._paintHighlight]: dart.fnType(dart.void, [ui.Canvas, ui.Rect, ui.Paint]),
    paintFeature: dart.fnType(dart.void, [ui.Canvas, vector_math_64.Matrix4])
  }));
  dart.setGetterSignature(ink_highlight.InkHighlight, () => ({
    __proto__: dart.getGetters(ink_highlight.InkHighlight.__proto__),
    [S$1._alpha$2]: animation$.Animation$(core.int),
    [S$1._alphaController$1]: animation_controller.AnimationController,
    active: core.bool
  }));
  dart.setSetterSignature(ink_highlight.InkHighlight, () => ({
    __proto__: dart.getSetters(ink_highlight.InkHighlight.__proto__),
    [S$1._alpha$2]: animation$.Animation$(core.int),
    [S$1._alphaController$1]: animation_controller.AnimationController
  }));
  dart.setLibraryUri(ink_highlight.InkHighlight, I[106]);
  dart.setFieldSignature(ink_highlight.InkHighlight, () => ({
    __proto__: dart.getFields(ink_highlight.InkHighlight.__proto__),
    [S$1._shape$4]: dart.finalFieldType(box_border.BoxShape),
    [S$1._radius$2]: dart.finalFieldType(dart.nullable(core.double)),
    [S$1._borderRadius$3]: dart.finalFieldType(border_radius.BorderRadius),
    [S$1._customBorder$3]: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    [S$1._rectCallback]: dart.finalFieldType(dart.nullable(dart.fnType(ui.Rect, []))),
    [S$1._textDirection$4]: dart.finalFieldType(ui.TextDirection),
    [S$1.__InkHighlight__alpha]: dart.fieldType(dart.nullable(animation$.Animation$(core.int))),
    [S$1.__InkHighlight__alphaController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S$1._active]: dart.fieldType(core.bool)
  }));
  dart.defineLazy(ink_highlight, {
    /*ink_highlight._kDefaultHighlightFadeDuration*/get _kDefaultHighlightFadeDuration() {
      return C[160] || CT.C160;
    }
  }, false);
  feedback.Feedback = class Feedback extends core.Object {
    static ['_#_#tearOff']() {
      return new feedback.Feedback.__();
    }
    static forTap(context) {
      return async.async(dart.void, function* forTap() {
        dart.nullCheck(context.findRenderObject()).sendSemanticsEvent(C[815] || CT.C815);
        switch (feedback.Feedback._platform(context)) {
          case C[29] || CT.C29:
          case C[30] || CT.C30:
            {
              return system_sound.SystemSound.play(system_sound.SystemSoundType.click);
            }
          case C[33] || CT.C33:
          case C[31] || CT.C31:
          case C[34] || CT.C34:
          case C[32] || CT.C32:
            {
              return T$.FutureOfvoid().value();
            }
        }
      });
    }
    static wrapForTap(callback, context) {
      if (callback == null) {
        return null;
      }
      return dart.fn(() => {
        feedback.Feedback.forTap(context);
        callback();
      }, T$.VoidTovoid());
    }
    static forLongPress(context) {
      dart.nullCheck(context.findRenderObject()).sendSemanticsEvent(C[816] || CT.C816);
      switch (feedback.Feedback._platform(context)) {
        case C[29] || CT.C29:
        case C[30] || CT.C30:
          {
            return haptic_feedback.HapticFeedback.vibrate();
          }
        case C[33] || CT.C33:
        case C[31] || CT.C31:
        case C[34] || CT.C34:
        case C[32] || CT.C32:
          {
            return T$.FutureOfvoid().value();
          }
      }
    }
    static wrapForLongPress(callback, context) {
      if (callback == null) {
        return null;
      }
      return dart.fn(() => {
        feedback.Feedback.forLongPress(context);
        callback();
      }, T$.VoidTovoid());
    }
    static _platform(context) {
      return theme$.Theme.of(context).platform;
    }
  };
  (feedback.Feedback.__ = function() {
    ;
  }).prototype = feedback.Feedback.prototype;
  dart.addTypeTests(feedback.Feedback);
  dart.addTypeCaches(feedback.Feedback);
  dart.setStaticMethodSignature(feedback.Feedback, () => ['forTap', 'wrapForTap', 'forLongPress', 'wrapForLongPress', '_platform']);
  dart.setLibraryUri(feedback.Feedback, I[107]);
  ink_well._ParentInkResponseState = class _ParentInkResponseState extends core.Object {};
  (ink_well._ParentInkResponseState.new = function() {
    ;
  }).prototype = ink_well._ParentInkResponseState.prototype;
  dart.addTypeTests(ink_well._ParentInkResponseState);
  dart.addTypeCaches(ink_well._ParentInkResponseState);
  dart.setLibraryUri(ink_well._ParentInkResponseState, I[58]);
  ink_well._ParentInkResponseProvider = class _ParentInkResponseProvider extends framework.InheritedWidget {
    get state() {
      return this[S$1.state];
    }
    set state(value) {
      super.state = value;
    }
    static ['_#new#tearOff'](opts) {
      let state = opts && 'state' in opts ? opts.state : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new ink_well._ParentInkResponseProvider.new({state: state, child: child, $creationLocationd_0dea112b090073317d4: C[817] || CT.C817});
    }
    updateShouldNotify(oldWidget) {
      ink_well._ParentInkResponseProvider.as(oldWidget);
      return !this.state[S.$_equals](oldWidget.state);
    }
    static of(context) {
      let t66;
      t66 = context.dependOnInheritedWidgetOfExactType(ink_well._ParentInkResponseProvider);
      return t66 == null ? null : t66.state;
    }
  };
  (ink_well._ParentInkResponseProvider.new = function(opts) {
    let state = opts && 'state' in opts ? opts.state : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.state] = state;
    ink_well._ParentInkResponseProvider.__proto__.new.call(this, {child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = ink_well._ParentInkResponseProvider.prototype;
  dart.addTypeTests(ink_well._ParentInkResponseProvider);
  dart.addTypeCaches(ink_well._ParentInkResponseProvider);
  dart.setMethodSignature(ink_well._ParentInkResponseProvider, () => ({
    __proto__: dart.getMethods(ink_well._ParentInkResponseProvider.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setStaticMethodSignature(ink_well._ParentInkResponseProvider, () => ['of']);
  dart.setLibraryUri(ink_well._ParentInkResponseProvider, I[58]);
  dart.setFieldSignature(ink_well._ParentInkResponseProvider, () => ({
    __proto__: dart.getFields(ink_well._ParentInkResponseProvider.__proto__),
    state: dart.finalFieldType(ink_well._ParentInkResponseState)
  }));
  ink_well.InkResponse = class InkResponse extends framework.StatelessWidget {
    get child() {
      return this[S$1.child$21];
    }
    set child(value) {
      super.child = value;
    }
    get onTap() {
      return this[S$1.onTap$4];
    }
    set onTap(value) {
      super.onTap = value;
    }
    get onTapDown() {
      return this[S$1.onTapDown];
    }
    set onTapDown(value) {
      super.onTapDown = value;
    }
    get onTapUp() {
      return this[S$1.onTapUp];
    }
    set onTapUp(value) {
      super.onTapUp = value;
    }
    get onTapCancel() {
      return this[S$1.onTapCancel];
    }
    set onTapCancel(value) {
      super.onTapCancel = value;
    }
    get onDoubleTap() {
      return this[S$1.onDoubleTap];
    }
    set onDoubleTap(value) {
      super.onDoubleTap = value;
    }
    get onLongPress() {
      return this[S$1.onLongPress$3];
    }
    set onLongPress(value) {
      super.onLongPress = value;
    }
    get onHighlightChanged() {
      return this[S$1.onHighlightChanged$2];
    }
    set onHighlightChanged(value) {
      super.onHighlightChanged = value;
    }
    get onHover() {
      return this[S$1.onHover$1];
    }
    set onHover(value) {
      super.onHover = value;
    }
    get mouseCursor() {
      return this[S$1.mouseCursor$16];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    get containedInkWell() {
      return this[S$1.containedInkWell];
    }
    set containedInkWell(value) {
      super.containedInkWell = value;
    }
    get highlightShape() {
      return this[S$1.highlightShape];
    }
    set highlightShape(value) {
      super.highlightShape = value;
    }
    get radius() {
      return this[S$1.radius$1];
    }
    set radius(value) {
      super.radius = value;
    }
    get borderRadius() {
      return this[S$1.borderRadius$2];
    }
    set borderRadius(value) {
      super.borderRadius = value;
    }
    get customBorder() {
      return this[S$1.customBorder];
    }
    set customBorder(value) {
      super.customBorder = value;
    }
    get focusColor() {
      return this[S$1.focusColor$8];
    }
    set focusColor(value) {
      super.focusColor = value;
    }
    get hoverColor() {
      return this[S$1.hoverColor$9];
    }
    set hoverColor(value) {
      super.hoverColor = value;
    }
    get highlightColor() {
      return this[S$1.highlightColor$5];
    }
    set highlightColor(value) {
      super.highlightColor = value;
    }
    get overlayColor() {
      return this[S$1.overlayColor$7];
    }
    set overlayColor(value) {
      super.overlayColor = value;
    }
    get splashColor() {
      return this[S$1.splashColor$6];
    }
    set splashColor(value) {
      super.splashColor = value;
    }
    get splashFactory() {
      return this[S$1.splashFactory$4];
    }
    set splashFactory(value) {
      super.splashFactory = value;
    }
    get enableFeedback() {
      return this[S$1.enableFeedback$13];
    }
    set enableFeedback(value) {
      super.enableFeedback = value;
    }
    get excludeFromSemantics() {
      return this[S$1.excludeFromSemantics$2];
    }
    set excludeFromSemantics(value) {
      super.excludeFromSemantics = value;
    }
    get onFocusChange() {
      return this[S$1.onFocusChange$1];
    }
    set onFocusChange(value) {
      super.onFocusChange = value;
    }
    get autofocus() {
      return this[S$1.autofocus$6];
    }
    set autofocus(value) {
      super.autofocus = value;
    }
    get focusNode() {
      return this[S$1.focusNode$6];
    }
    set focusNode(value) {
      super.focusNode = value;
    }
    get canRequestFocus() {
      return this[S$1.canRequestFocus];
    }
    set canRequestFocus(value) {
      super.canRequestFocus = value;
    }
    get statesController() {
      return this[S$1.statesController$1];
    }
    set statesController(value) {
      super.statesController = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let child = opts && 'child' in opts ? opts.child : null;
      let onTap = opts && 'onTap' in opts ? opts.onTap : null;
      let onTapDown = opts && 'onTapDown' in opts ? opts.onTapDown : null;
      let onTapUp = opts && 'onTapUp' in opts ? opts.onTapUp : null;
      let onTapCancel = opts && 'onTapCancel' in opts ? opts.onTapCancel : null;
      let onDoubleTap = opts && 'onDoubleTap' in opts ? opts.onDoubleTap : null;
      let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
      let onHighlightChanged = opts && 'onHighlightChanged' in opts ? opts.onHighlightChanged : null;
      let onHover = opts && 'onHover' in opts ? opts.onHover : null;
      let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
      let containedInkWell = opts && 'containedInkWell' in opts ? opts.containedInkWell : false;
      let highlightShape = opts && 'highlightShape' in opts ? opts.highlightShape : C[814] || CT.C814;
      let radius = opts && 'radius' in opts ? opts.radius : null;
      let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
      let customBorder = opts && 'customBorder' in opts ? opts.customBorder : null;
      let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
      let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
      let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
      let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
      let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
      let splashFactory = opts && 'splashFactory' in opts ? opts.splashFactory : null;
      let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : true;
      let excludeFromSemantics = opts && 'excludeFromSemantics' in opts ? opts.excludeFromSemantics : false;
      let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
      let canRequestFocus = opts && 'canRequestFocus' in opts ? opts.canRequestFocus : true;
      let onFocusChange = opts && 'onFocusChange' in opts ? opts.onFocusChange : null;
      let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
      let statesController = opts && 'statesController' in opts ? opts.statesController : null;
      return new ink_well.InkResponse.new({key: key, child: child, onTap: onTap, onTapDown: onTapDown, onTapUp: onTapUp, onTapCancel: onTapCancel, onDoubleTap: onDoubleTap, onLongPress: onLongPress, onHighlightChanged: onHighlightChanged, onHover: onHover, mouseCursor: mouseCursor, containedInkWell: containedInkWell, highlightShape: highlightShape, radius: radius, borderRadius: borderRadius, customBorder: customBorder, focusColor: focusColor, hoverColor: hoverColor, highlightColor: highlightColor, overlayColor: overlayColor, splashColor: splashColor, splashFactory: splashFactory, enableFeedback: enableFeedback, excludeFromSemantics: excludeFromSemantics, focusNode: focusNode, canRequestFocus: canRequestFocus, onFocusChange: onFocusChange, autofocus: autofocus, statesController: statesController, $creationLocationd_0dea112b090073317d4: C[818] || CT.C818});
    }
    getRectCallback(referenceBox) {
      return null;
    }
    build(context) {
      let parentState = ink_well._ParentInkResponseProvider.of(context);
      return new ink_well._InkResponseStateWidget.new({onTap: this.onTap, onTapDown: this.onTapDown, onTapUp: this.onTapUp, onTapCancel: this.onTapCancel, onDoubleTap: this.onDoubleTap, onLongPress: this.onLongPress, onHighlightChanged: this.onHighlightChanged, onHover: this.onHover, mouseCursor: this.mouseCursor, containedInkWell: this.containedInkWell, highlightShape: this.highlightShape, radius: this.radius, borderRadius: this.borderRadius, customBorder: this.customBorder, focusColor: this.focusColor, hoverColor: this.hoverColor, highlightColor: this.highlightColor, overlayColor: this.overlayColor, splashColor: this.splashColor, splashFactory: this.splashFactory, enableFeedback: this.enableFeedback, excludeFromSemantics: this.excludeFromSemantics, focusNode: this.focusNode, canRequestFocus: this.canRequestFocus, onFocusChange: this.onFocusChange, autofocus: this.autofocus, parentState: parentState, getRectCallback: dart.bind(this, 'getRectCallback'), debugCheckContext: dart.bind(this, 'debugCheckContext'), statesController: this.statesController, child: this.child, $creationLocationd_0dea112b090073317d4: C[819] || CT.C819});
    }
    debugCheckContext(context) {
      if (!debug$1.debugCheckHasMaterial(context)) dart.assertFailed(null, I[61], 645, 12, "debugCheckHasMaterial(context)");
      if (!debug.debugCheckHasDirectionality(context)) dart.assertFailed(null, I[61], 646, 12, "debugCheckHasDirectionality(context)");
      return true;
    }
  };
  (ink_well.InkResponse.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let onTap = opts && 'onTap' in opts ? opts.onTap : null;
    let onTapDown = opts && 'onTapDown' in opts ? opts.onTapDown : null;
    let onTapUp = opts && 'onTapUp' in opts ? opts.onTapUp : null;
    let onTapCancel = opts && 'onTapCancel' in opts ? opts.onTapCancel : null;
    let onDoubleTap = opts && 'onDoubleTap' in opts ? opts.onDoubleTap : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let onHighlightChanged = opts && 'onHighlightChanged' in opts ? opts.onHighlightChanged : null;
    let onHover = opts && 'onHover' in opts ? opts.onHover : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let containedInkWell = opts && 'containedInkWell' in opts ? opts.containedInkWell : false;
    let highlightShape = opts && 'highlightShape' in opts ? opts.highlightShape : C[814] || CT.C814;
    let radius = opts && 'radius' in opts ? opts.radius : null;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
    let customBorder = opts && 'customBorder' in opts ? opts.customBorder : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let splashFactory = opts && 'splashFactory' in opts ? opts.splashFactory : null;
    let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : true;
    let excludeFromSemantics = opts && 'excludeFromSemantics' in opts ? opts.excludeFromSemantics : false;
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let canRequestFocus = opts && 'canRequestFocus' in opts ? opts.canRequestFocus : true;
    let onFocusChange = opts && 'onFocusChange' in opts ? opts.onFocusChange : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    let statesController = opts && 'statesController' in opts ? opts.statesController : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.child$21] = child;
    this[S$1.onTap$4] = onTap;
    this[S$1.onTapDown] = onTapDown;
    this[S$1.onTapUp] = onTapUp;
    this[S$1.onTapCancel] = onTapCancel;
    this[S$1.onDoubleTap] = onDoubleTap;
    this[S$1.onLongPress$3] = onLongPress;
    this[S$1.onHighlightChanged$2] = onHighlightChanged;
    this[S$1.onHover$1] = onHover;
    this[S$1.mouseCursor$16] = mouseCursor;
    this[S$1.containedInkWell] = containedInkWell;
    this[S$1.highlightShape] = highlightShape;
    this[S$1.radius$1] = radius;
    this[S$1.borderRadius$2] = borderRadius;
    this[S$1.customBorder] = customBorder;
    this[S$1.focusColor$8] = focusColor;
    this[S$1.hoverColor$9] = hoverColor;
    this[S$1.highlightColor$5] = highlightColor;
    this[S$1.overlayColor$7] = overlayColor;
    this[S$1.splashColor$6] = splashColor;
    this[S$1.splashFactory$4] = splashFactory;
    this[S$1.enableFeedback$13] = enableFeedback;
    this[S$1.excludeFromSemantics$2] = excludeFromSemantics;
    this[S$1.focusNode$6] = focusNode;
    this[S$1.canRequestFocus] = canRequestFocus;
    this[S$1.onFocusChange$1] = onFocusChange;
    this[S$1.autofocus$6] = autofocus;
    this[S$1.statesController$1] = statesController;
    if (!(containedInkWell !== null)) dart.assertFailed(null, I[61], 323, 15, "containedInkWell != null");
    if (!(highlightShape !== null)) dart.assertFailed(null, I[61], 324, 15, "highlightShape != null");
    if (!(enableFeedback !== null)) dart.assertFailed(null, I[61], 325, 15, "enableFeedback != null");
    if (!(excludeFromSemantics !== null)) dart.assertFailed(null, I[61], 326, 15, "excludeFromSemantics != null");
    if (!(autofocus !== null)) dart.assertFailed(null, I[61], 327, 15, "autofocus != null");
    if (!(canRequestFocus !== null)) dart.assertFailed(null, I[61], 328, 15, "canRequestFocus != null");
    ink_well.InkResponse.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = ink_well.InkResponse.prototype;
  dart.addTypeTests(ink_well.InkResponse);
  dart.addTypeCaches(ink_well.InkResponse);
  dart.setMethodSignature(ink_well.InkResponse, () => ({
    __proto__: dart.getMethods(ink_well.InkResponse.__proto__),
    getRectCallback: dart.fnType(dart.nullable(dart.fnType(ui.Rect, [])), [box$.RenderBox]),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    debugCheckContext: dart.fnType(core.bool, [framework.BuildContext])
  }));
  dart.setLibraryUri(ink_well.InkResponse, I[58]);
  dart.setFieldSignature(ink_well.InkResponse, () => ({
    __proto__: dart.getFields(ink_well.InkResponse.__proto__),
    child: dart.finalFieldType(dart.nullable(framework.Widget)),
    onTap: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onTapDown: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [tap.TapDownDetails]))),
    onTapUp: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [tap.TapUpDetails]))),
    onTapCancel: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onDoubleTap: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onLongPress: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onHighlightChanged: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.bool]))),
    onHover: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.bool]))),
    mouseCursor: dart.finalFieldType(dart.nullable(mouse_cursor.MouseCursor)),
    containedInkWell: dart.finalFieldType(core.bool),
    highlightShape: dart.finalFieldType(box_border.BoxShape),
    radius: dart.finalFieldType(dart.nullable(core.double)),
    borderRadius: dart.finalFieldType(dart.nullable(border_radius.BorderRadius)),
    customBorder: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    focusColor: dart.finalFieldType(dart.nullable(ui.Color)),
    hoverColor: dart.finalFieldType(dart.nullable(ui.Color)),
    highlightColor: dart.finalFieldType(dart.nullable(ui.Color)),
    overlayColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    splashColor: dart.finalFieldType(dart.nullable(ui.Color)),
    splashFactory: dart.finalFieldType(dart.nullable(ink_well.InteractiveInkFeatureFactory)),
    enableFeedback: dart.finalFieldType(core.bool),
    excludeFromSemantics: dart.finalFieldType(core.bool),
    onFocusChange: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.bool]))),
    autofocus: dart.finalFieldType(core.bool),
    focusNode: dart.finalFieldType(dart.nullable(focus_manager.FocusNode)),
    canRequestFocus: dart.finalFieldType(core.bool),
    statesController: dart.finalFieldType(dart.nullable(material_state.MaterialStatesController))
  }));
  ink_well._InkResponseStateWidget = class _InkResponseStateWidget extends framework.StatefulWidget {
    get child() {
      return this[S$1.child$22];
    }
    set child(value) {
      super.child = value;
    }
    get onTap() {
      return this[S$1.onTap$5];
    }
    set onTap(value) {
      super.onTap = value;
    }
    get onTapDown() {
      return this[S$1.onTapDown$1];
    }
    set onTapDown(value) {
      super.onTapDown = value;
    }
    get onTapUp() {
      return this[S$1.onTapUp$1];
    }
    set onTapUp(value) {
      super.onTapUp = value;
    }
    get onTapCancel() {
      return this[S$1.onTapCancel$1];
    }
    set onTapCancel(value) {
      super.onTapCancel = value;
    }
    get onDoubleTap() {
      return this[S$1.onDoubleTap$1];
    }
    set onDoubleTap(value) {
      super.onDoubleTap = value;
    }
    get onLongPress() {
      return this[S$1.onLongPress$4];
    }
    set onLongPress(value) {
      super.onLongPress = value;
    }
    get onHighlightChanged() {
      return this[S$1.onHighlightChanged$3];
    }
    set onHighlightChanged(value) {
      super.onHighlightChanged = value;
    }
    get onHover() {
      return this[S$1.onHover$2];
    }
    set onHover(value) {
      super.onHover = value;
    }
    get mouseCursor() {
      return this[S$1.mouseCursor$17];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    get containedInkWell() {
      return this[S$1.containedInkWell$1];
    }
    set containedInkWell(value) {
      super.containedInkWell = value;
    }
    get highlightShape() {
      return this[S$1.highlightShape$1];
    }
    set highlightShape(value) {
      super.highlightShape = value;
    }
    get radius() {
      return this[S$1.radius$2];
    }
    set radius(value) {
      super.radius = value;
    }
    get borderRadius() {
      return this[S$1.borderRadius$3];
    }
    set borderRadius(value) {
      super.borderRadius = value;
    }
    get customBorder() {
      return this[S$1.customBorder$1];
    }
    set customBorder(value) {
      super.customBorder = value;
    }
    get focusColor() {
      return this[S$1.focusColor$9];
    }
    set focusColor(value) {
      super.focusColor = value;
    }
    get hoverColor() {
      return this[S$1.hoverColor$10];
    }
    set hoverColor(value) {
      super.hoverColor = value;
    }
    get highlightColor() {
      return this[S$1.highlightColor$6];
    }
    set highlightColor(value) {
      super.highlightColor = value;
    }
    get overlayColor() {
      return this[S$1.overlayColor$8];
    }
    set overlayColor(value) {
      super.overlayColor = value;
    }
    get splashColor() {
      return this[S$1.splashColor$7];
    }
    set splashColor(value) {
      super.splashColor = value;
    }
    get splashFactory() {
      return this[S$1.splashFactory$5];
    }
    set splashFactory(value) {
      super.splashFactory = value;
    }
    get enableFeedback() {
      return this[S$1.enableFeedback$14];
    }
    set enableFeedback(value) {
      super.enableFeedback = value;
    }
    get excludeFromSemantics() {
      return this[S$1.excludeFromSemantics$3];
    }
    set excludeFromSemantics(value) {
      super.excludeFromSemantics = value;
    }
    get onFocusChange() {
      return this[S$1.onFocusChange$2];
    }
    set onFocusChange(value) {
      super.onFocusChange = value;
    }
    get autofocus() {
      return this[S$1.autofocus$7];
    }
    set autofocus(value) {
      super.autofocus = value;
    }
    get focusNode() {
      return this[S$1.focusNode$7];
    }
    set focusNode(value) {
      super.focusNode = value;
    }
    get canRequestFocus() {
      return this[S$1.canRequestFocus$1];
    }
    set canRequestFocus(value) {
      super.canRequestFocus = value;
    }
    get parentState() {
      return this[S$1.parentState];
    }
    set parentState(value) {
      super.parentState = value;
    }
    get getRectCallback() {
      return this[S$1.getRectCallback];
    }
    set getRectCallback(value) {
      super.getRectCallback = value;
    }
    get debugCheckContext() {
      return this[S$1.debugCheckContext];
    }
    set debugCheckContext(value) {
      super.debugCheckContext = value;
    }
    get statesController() {
      return this[S$1.statesController$2];
    }
    set statesController(value) {
      super.statesController = value;
    }
    static ['_#new#tearOff'](opts) {
      let child = opts && 'child' in opts ? opts.child : null;
      let onTap = opts && 'onTap' in opts ? opts.onTap : null;
      let onTapDown = opts && 'onTapDown' in opts ? opts.onTapDown : null;
      let onTapUp = opts && 'onTapUp' in opts ? opts.onTapUp : null;
      let onTapCancel = opts && 'onTapCancel' in opts ? opts.onTapCancel : null;
      let onDoubleTap = opts && 'onDoubleTap' in opts ? opts.onDoubleTap : null;
      let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
      let onHighlightChanged = opts && 'onHighlightChanged' in opts ? opts.onHighlightChanged : null;
      let onHover = opts && 'onHover' in opts ? opts.onHover : null;
      let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
      let containedInkWell = opts && 'containedInkWell' in opts ? opts.containedInkWell : false;
      let highlightShape = opts && 'highlightShape' in opts ? opts.highlightShape : C[814] || CT.C814;
      let radius = opts && 'radius' in opts ? opts.radius : null;
      let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
      let customBorder = opts && 'customBorder' in opts ? opts.customBorder : null;
      let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
      let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
      let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
      let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
      let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
      let splashFactory = opts && 'splashFactory' in opts ? opts.splashFactory : null;
      let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : true;
      let excludeFromSemantics = opts && 'excludeFromSemantics' in opts ? opts.excludeFromSemantics : false;
      let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
      let canRequestFocus = opts && 'canRequestFocus' in opts ? opts.canRequestFocus : true;
      let onFocusChange = opts && 'onFocusChange' in opts ? opts.onFocusChange : null;
      let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
      let parentState = opts && 'parentState' in opts ? opts.parentState : null;
      let getRectCallback = opts && 'getRectCallback' in opts ? opts.getRectCallback : null;
      let debugCheckContext = opts && 'debugCheckContext' in opts ? opts.debugCheckContext : null;
      let statesController = opts && 'statesController' in opts ? opts.statesController : null;
      return new ink_well._InkResponseStateWidget.new({child: child, onTap: onTap, onTapDown: onTapDown, onTapUp: onTapUp, onTapCancel: onTapCancel, onDoubleTap: onDoubleTap, onLongPress: onLongPress, onHighlightChanged: onHighlightChanged, onHover: onHover, mouseCursor: mouseCursor, containedInkWell: containedInkWell, highlightShape: highlightShape, radius: radius, borderRadius: borderRadius, customBorder: customBorder, focusColor: focusColor, hoverColor: hoverColor, highlightColor: highlightColor, overlayColor: overlayColor, splashColor: splashColor, splashFactory: splashFactory, enableFeedback: enableFeedback, excludeFromSemantics: excludeFromSemantics, focusNode: focusNode, canRequestFocus: canRequestFocus, onFocusChange: onFocusChange, autofocus: autofocus, parentState: parentState, getRectCallback: getRectCallback, debugCheckContext: debugCheckContext, statesController: statesController, $creationLocationd_0dea112b090073317d4: C[820] || CT.C820});
    }
    createState() {
      return new ink_well._InkResponseState.new();
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      let gestures = (() => {
        let t66 = T$.JSArrayOfString().of([]);
        if (this.onTap != null) t66.push("tap");
        if (this.onDoubleTap != null) t66.push("double tap");
        if (this.onLongPress != null) t66.push("long press");
        if (this.onTapDown != null) t66.push("tap down");
        if (this.onTapUp != null) t66.push("tap up");
        if (this.onTapCancel != null) t66.push("tap cancel");
        return t66;
      })();
      properties.add(new (T$.IterablePropertyOfString()).new("gestures", gestures, {ifEmpty: "<none>"}));
      properties.add(new (T$.DiagnosticsPropertyOfMouseCursor()).new("mouseCursor", this.mouseCursor));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("containedInkWell", this.containedInkWell, {level: diagnostics.DiagnosticLevel.fine}));
      properties.add(new (T$.DiagnosticsPropertyOfBoxShape()).new("highlightShape", this.highlightShape, {description: (this.containedInkWell ? "clipped to " : "") + dart.str(this.highlightShape), showName: false}));
    }
  };
  (ink_well._InkResponseStateWidget.new = function(opts) {
    let child = opts && 'child' in opts ? opts.child : null;
    let onTap = opts && 'onTap' in opts ? opts.onTap : null;
    let onTapDown = opts && 'onTapDown' in opts ? opts.onTapDown : null;
    let onTapUp = opts && 'onTapUp' in opts ? opts.onTapUp : null;
    let onTapCancel = opts && 'onTapCancel' in opts ? opts.onTapCancel : null;
    let onDoubleTap = opts && 'onDoubleTap' in opts ? opts.onDoubleTap : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let onHighlightChanged = opts && 'onHighlightChanged' in opts ? opts.onHighlightChanged : null;
    let onHover = opts && 'onHover' in opts ? opts.onHover : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let containedInkWell = opts && 'containedInkWell' in opts ? opts.containedInkWell : false;
    let highlightShape = opts && 'highlightShape' in opts ? opts.highlightShape : C[814] || CT.C814;
    let radius = opts && 'radius' in opts ? opts.radius : null;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
    let customBorder = opts && 'customBorder' in opts ? opts.customBorder : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let splashFactory = opts && 'splashFactory' in opts ? opts.splashFactory : null;
    let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : true;
    let excludeFromSemantics = opts && 'excludeFromSemantics' in opts ? opts.excludeFromSemantics : false;
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let canRequestFocus = opts && 'canRequestFocus' in opts ? opts.canRequestFocus : true;
    let onFocusChange = opts && 'onFocusChange' in opts ? opts.onFocusChange : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    let parentState = opts && 'parentState' in opts ? opts.parentState : null;
    let getRectCallback = opts && 'getRectCallback' in opts ? opts.getRectCallback : null;
    let debugCheckContext = opts && 'debugCheckContext' in opts ? opts.debugCheckContext : null;
    let statesController = opts && 'statesController' in opts ? opts.statesController : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.child$22] = child;
    this[S$1.onTap$5] = onTap;
    this[S$1.onTapDown$1] = onTapDown;
    this[S$1.onTapUp$1] = onTapUp;
    this[S$1.onTapCancel$1] = onTapCancel;
    this[S$1.onDoubleTap$1] = onDoubleTap;
    this[S$1.onLongPress$4] = onLongPress;
    this[S$1.onHighlightChanged$3] = onHighlightChanged;
    this[S$1.onHover$2] = onHover;
    this[S$1.mouseCursor$17] = mouseCursor;
    this[S$1.containedInkWell$1] = containedInkWell;
    this[S$1.highlightShape$1] = highlightShape;
    this[S$1.radius$2] = radius;
    this[S$1.borderRadius$3] = borderRadius;
    this[S$1.customBorder$1] = customBorder;
    this[S$1.focusColor$9] = focusColor;
    this[S$1.hoverColor$10] = hoverColor;
    this[S$1.highlightColor$6] = highlightColor;
    this[S$1.overlayColor$8] = overlayColor;
    this[S$1.splashColor$7] = splashColor;
    this[S$1.splashFactory$5] = splashFactory;
    this[S$1.enableFeedback$14] = enableFeedback;
    this[S$1.excludeFromSemantics$3] = excludeFromSemantics;
    this[S$1.focusNode$7] = focusNode;
    this[S$1.canRequestFocus$1] = canRequestFocus;
    this[S$1.onFocusChange$2] = onFocusChange;
    this[S$1.autofocus$7] = autofocus;
    this[S$1.parentState] = parentState;
    this[S$1.getRectCallback] = getRectCallback;
    this[S$1.debugCheckContext] = debugCheckContext;
    this[S$1.statesController$2] = statesController;
    if (!(containedInkWell !== null)) dart.assertFailed(null, I[61], 684, 15, "containedInkWell != null");
    if (!(highlightShape !== null)) dart.assertFailed(null, I[61], 685, 15, "highlightShape != null");
    if (!(enableFeedback !== null)) dart.assertFailed(null, I[61], 686, 15, "enableFeedback != null");
    if (!(excludeFromSemantics !== null)) dart.assertFailed(null, I[61], 687, 15, "excludeFromSemantics != null");
    if (!(autofocus !== null)) dart.assertFailed(null, I[61], 688, 15, "autofocus != null");
    if (!(canRequestFocus !== null)) dart.assertFailed(null, I[61], 689, 15, "canRequestFocus != null");
    ink_well._InkResponseStateWidget.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = ink_well._InkResponseStateWidget.prototype;
  dart.addTypeTests(ink_well._InkResponseStateWidget);
  dart.addTypeCaches(ink_well._InkResponseStateWidget);
  dart.setMethodSignature(ink_well._InkResponseStateWidget, () => ({
    __proto__: dart.getMethods(ink_well._InkResponseStateWidget.__proto__),
    createState: dart.fnType(ink_well._InkResponseState, [])
  }));
  dart.setLibraryUri(ink_well._InkResponseStateWidget, I[58]);
  dart.setFieldSignature(ink_well._InkResponseStateWidget, () => ({
    __proto__: dart.getFields(ink_well._InkResponseStateWidget.__proto__),
    child: dart.finalFieldType(dart.nullable(framework.Widget)),
    onTap: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onTapDown: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [tap.TapDownDetails]))),
    onTapUp: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [tap.TapUpDetails]))),
    onTapCancel: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onDoubleTap: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onLongPress: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onHighlightChanged: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.bool]))),
    onHover: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.bool]))),
    mouseCursor: dart.finalFieldType(dart.nullable(mouse_cursor.MouseCursor)),
    containedInkWell: dart.finalFieldType(core.bool),
    highlightShape: dart.finalFieldType(box_border.BoxShape),
    radius: dart.finalFieldType(dart.nullable(core.double)),
    borderRadius: dart.finalFieldType(dart.nullable(border_radius.BorderRadius)),
    customBorder: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    focusColor: dart.finalFieldType(dart.nullable(ui.Color)),
    hoverColor: dart.finalFieldType(dart.nullable(ui.Color)),
    highlightColor: dart.finalFieldType(dart.nullable(ui.Color)),
    overlayColor: dart.finalFieldType(dart.nullable(material_state.MaterialStateProperty$(dart.nullable(ui.Color)))),
    splashColor: dart.finalFieldType(dart.nullable(ui.Color)),
    splashFactory: dart.finalFieldType(dart.nullable(ink_well.InteractiveInkFeatureFactory)),
    enableFeedback: dart.finalFieldType(core.bool),
    excludeFromSemantics: dart.finalFieldType(core.bool),
    onFocusChange: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.bool]))),
    autofocus: dart.finalFieldType(core.bool),
    focusNode: dart.finalFieldType(dart.nullable(focus_manager.FocusNode)),
    canRequestFocus: dart.finalFieldType(core.bool),
    parentState: dart.finalFieldType(dart.nullable(ink_well._ParentInkResponseState)),
    getRectCallback: dart.finalFieldType(dart.nullable(dart.fnType(dart.nullable(dart.fnType(ui.Rect, [])), [box$.RenderBox]))),
    debugCheckContext: dart.finalFieldType(dart.fnType(core.bool, [framework.BuildContext])),
    statesController: dart.finalFieldType(dart.nullable(material_state.MaterialStatesController))
  }));
  ink_well._HighlightType = class _HighlightType extends core._Enum {
    toString() {
      return "_HighlightType." + this[S._name];
    }
  };
  (ink_well._HighlightType.new = function(index, name) {
    ink_well._HighlightType.__proto__.new.call(this, index, name);
    ;
  }).prototype = ink_well._HighlightType.prototype;
  dart.addTypeTests(ink_well._HighlightType);
  dart.addTypeCaches(ink_well._HighlightType);
  dart.setLibraryUri(ink_well._HighlightType, I[58]);
  dart.setStaticFieldSignature(ink_well._HighlightType, () => ['values', 'pressed', 'hover', 'focus']);
  dart.defineExtensionMethods(ink_well._HighlightType, ['toString']);
  dart.defineLazy(ink_well._HighlightType, {
    /*ink_well._HighlightType.values*/get values() {
      return C[821] || CT.C821;
    },
    /*ink_well._HighlightType.pressed*/get pressed() {
      return C[822] || CT.C822;
    },
    /*ink_well._HighlightType.hover*/get hover() {
      return C[823] || CT.C823;
    },
    /*ink_well._HighlightType.focus*/get focus() {
      return C[824] || CT.C824;
    }
  }, false);
  const State_AutomaticKeepAliveClientMixin$36 = class State_AutomaticKeepAliveClientMixin extends framework.State$(ink_well._InkResponseStateWidget) {};
  (State_AutomaticKeepAliveClientMixin$36.new = function() {
    automatic_keep_alive.AutomaticKeepAliveClientMixin$(ink_well._InkResponseStateWidget)[dart.mixinNew].call(this);
    State_AutomaticKeepAliveClientMixin$36.__proto__.new.call(this);
  }).prototype = State_AutomaticKeepAliveClientMixin$36.prototype;
  dart.applyMixin(State_AutomaticKeepAliveClientMixin$36, automatic_keep_alive.AutomaticKeepAliveClientMixin$(ink_well._InkResponseStateWidget));
  ink_well._InkResponseState = class _InkResponseState extends State_AutomaticKeepAliveClientMixin$36 {
    get [S$1._actionMap]() {
      let t70, t69;
      t69 = this[S$1.___InkResponseState__actionMap];
      return t69 == null ? (t70 = new (T$.LinkedMapOfType$ActionOfIntent()).from([dart.wrapType(actions.ActivateIntent), new (T$.CallbackActionOfActivateIntent()).new({onInvoke: dart.bind(this, 'simulateTap')}), dart.wrapType(actions.ButtonActivateIntent), new (T$.CallbackActionOfButtonActivateIntent()).new({onInvoke: dart.bind(this, 'simulateTap')})]), this[S$1.___InkResponseState__actionMap] == null ? this[S$1.___InkResponseState__actionMap] = t70 : dart.throw(new _internal.LateError.fieldADI("_actionMap"))) : t69;
    }
    get highlightsExist() {
      return this[S$1._highlights][S$1.$values][S$1.$where](dart.fn(highlight => highlight != null, T$.InkHighlightNTobool()))[S.$isNotEmpty];
    }
    markChildInkResponsePressed(childState, value) {
      let t69;
      if (!(childState !== null)) dart.assertFailed(null, I[61], 777, 12, "childState != null");
      let lastAnyPressed = this[S$1._anyChildInkResponsePressed];
      if (value) {
        this[S$1._activeChildren].add(childState);
      } else {
        this[S$1._activeChildren].remove(childState);
      }
      let nowAnyPressed = this[S$1._anyChildInkResponsePressed];
      if (nowAnyPressed !== lastAnyPressed) {
        t69 = this.widget.parentState;
        t69 == null ? null : t69.markChildInkResponsePressed(this, nowAnyPressed);
      }
    }
    get [S$1._anyChildInkResponsePressed]() {
      return this[S$1._activeChildren].isNotEmpty;
    }
    simulateTap(intent = null) {
      this[S$1._startNewSplash]({context: this.context});
      this.handleTap();
    }
    simulateLongPress() {
      this[S$1._startNewSplash]({context: this.context});
      this.handleLongPress();
    }
    handleStatesControllerChange() {
      this.setState(dart.fn(() => {
      }, T$.VoidTovoid()));
    }
    get statesController() {
      let t69;
      t69 = this.widget.statesController;
      return t69 == null ? dart.nullCheck(this.internalStatesController) : t69;
    }
    initStatesController() {
      if (this.widget.statesController == null) {
        this.internalStatesController = new material_state.MaterialStatesController.new();
      }
      this.statesController.update(material_state.MaterialState.disabled, !this.enabled);
      this.statesController.addListener(dart.bind(this, 'handleStatesControllerChange'));
    }
    initState() {
      super.initState();
      this.initStatesController();
      focus_manager.FocusManager.instance.addHighlightModeListener(dart.bind(this, 'handleFocusHighlightModeChange'));
    }
    didUpdateWidget(oldWidget) {
      let t69, t69$;
      ink_well._InkResponseStateWidget.as(oldWidget);
      super.didUpdateWidget(oldWidget);
      if (!dart.equals(this.widget.statesController, oldWidget.statesController)) {
        t69 = oldWidget.statesController;
        t69 == null ? null : t69.removeListener(dart.bind(this, 'handleStatesControllerChange'));
        if (this.widget.statesController != null) {
          t69$ = this.internalStatesController;
          t69$ == null ? null : t69$.dispose();
          this.internalStatesController = null;
        }
        this.initStatesController();
      }
      if (this.enabled !== this.isWidgetEnabled(oldWidget)) {
        this.statesController.update(material_state.MaterialState.disabled, !this.enabled);
        if (!this.enabled) {
          this.statesController.update(material_state.MaterialState.pressed, false);
        }
        this.updateHighlight(ink_well._HighlightType.hover, {value: this[S$1._hovering], callOnHover: false});
      }
      this.updateFocusHighlights();
    }
    dispose() {
      focus_manager.FocusManager.instance.removeHighlightModeListener(dart.bind(this, 'handleFocusHighlightModeChange'));
      this.statesController.removeListener(dart.bind(this, 'handleStatesControllerChange'));
      super.dispose();
    }
    get wantKeepAlive() {
      return this.highlightsExist || this[S$1._splashes] != null && dart.nullCheck(this[S$1._splashes])[S.$isNotEmpty];
    }
    getHighlightColorForType(type) {
      let t69, t69$, t69$0, t69$1, t69$2, t69$3, t69$4;
      let theme = theme$.Theme.of(this.context);
      let resolvedOverlayColor = (t69 = this.widget.overlayColor, t69 == null ? null : t69.resolve(this.statesController.value));
      switch (type) {
        case C[822] || CT.C822:
          {
            t69$0 = (t69$ = resolvedOverlayColor, t69$ == null ? this.widget.highlightColor : t69$);
            return t69$0 == null ? theme.highlightColor : t69$0;
          }
        case C[824] || CT.C824:
          {
            t69$2 = (t69$1 = resolvedOverlayColor, t69$1 == null ? this.widget.focusColor : t69$1);
            return t69$2 == null ? theme.focusColor : t69$2;
          }
        case C[823] || CT.C823:
          {
            t69$4 = (t69$3 = resolvedOverlayColor, t69$3 == null ? this.widget.hoverColor : t69$3);
            return t69$4 == null ? theme.hoverColor : t69$4;
          }
      }
    }
    getFadeDurationForType(type) {
      switch (type) {
        case C[822] || CT.C822:
          {
            return C[160] || CT.C160;
          }
        case C[823] || CT.C823:
        case C[824] || CT.C824:
          {
            return C[825] || CT.C825;
          }
      }
    }
    updateHighlight(type, opts) {
      let t69, t69$, t69$0;
      let value = opts && 'value' in opts ? opts.value : null;
      let callOnHover = opts && 'callOnHover' in opts ? opts.callOnHover : true;
      let highlight = this[S$1._highlights][S.$_get](type);
      const handleInkRemoval = () => {
        if (!(this[S$1._highlights][S.$_get](type) != null)) dart.assertFailed(null, I[61], 885, 14, "_highlights[type] != null");
        this[S$1._highlights][S.$_set](type, null);
        this.updateKeepAlive();
      };
      dart.fn(handleInkRemoval, T$.VoidTovoid());
      switch (type) {
        case C[822] || CT.C822:
          {
            this.statesController.update(material_state.MaterialState.pressed, value);
            break;
          }
        case C[823] || CT.C823:
          {
            if (callOnHover) {
              this.statesController.update(material_state.MaterialState.hovered, value);
            }
            break;
          }
        case C[824] || CT.C824:
          {
            break;
          }
      }
      if (type === ink_well._HighlightType.pressed) {
        t69 = this.widget.parentState;
        t69 == null ? null : t69.markChildInkResponsePressed(this, value);
      }
      if (value === (highlight != null && highlight.active)) {
        return;
      }
      if (value) {
        if (highlight == null) {
          let referenceBox = box$.RenderBox.as(dart.nullCheck(this.context.findRenderObject()));
          this[S$1._highlights][S.$_set](type, new ink_highlight.InkHighlight.new({controller: dart.nullCheck(material.Material.of(this.context)), referenceBox: referenceBox, color: this.getHighlightColorForType(type), shape: this.widget.highlightShape, radius: this.widget.radius, borderRadius: this.widget.borderRadius, customBorder: this.widget.customBorder, rectCallback: dart.nullCheck(this.widget.getRectCallback)(referenceBox), onRemoved: handleInkRemoval, textDirection: basic.Directionality.of(this.context), fadeDuration: this.getFadeDurationForType(type)}));
          this.updateKeepAlive();
        } else {
          highlight.activate();
        }
      } else {
        dart.nullCheck(highlight).deactivate();
      }
      if (!(value === (this[S$1._highlights][S.$_get](type) != null && dart.nullCheck(this[S$1._highlights][S.$_get](type)).active))) dart.assertFailed(null, I[61], 933, 12, "value == (_highlights[type] != null && _highlights[type]!.active)");
      switch (type) {
        case C[822] || CT.C822:
          {
            t69$ = this.widget.onHighlightChanged;
            t69$ == null ? null : t69$(value);
            break;
          }
        case C[823] || CT.C823:
          {
            if (callOnHover) {
              t69$0 = this.widget.onHover;
              t69$0 == null ? null : t69$0(value);
            }
            break;
          }
        case C[824] || CT.C824:
          {
            break;
          }
      }
    }
    [S$1._createInkFeature](globalPosition) {
      let t69, t69$, t69$0, t69$1;
      let inkController = dart.nullCheck(material.Material.of(this.context));
      let referenceBox = box$.RenderBox.as(dart.nullCheck(this.context.findRenderObject()));
      let position = referenceBox.globalToLocal(globalPosition);
      let color = (t69$0 = (t69$ = (t69 = this.widget.overlayColor, t69 == null ? null : t69.resolve(this.statesController.value)), t69$ == null ? this.widget.splashColor : t69$), t69$0 == null ? theme$.Theme.of(this.context).splashColor : t69$0);
      let rectCallback = this.widget.containedInkWell ? dart.nullCheck(this.widget.getRectCallback)(referenceBox) : null;
      let borderRadius = this.widget.borderRadius;
      let customBorder = this.widget.customBorder;
      let splash = null;
      const onRemoved = () => {
        if (this[S$1._splashes] != null) {
          if (!dart.nullCheck(this[S$1._splashes]).contains(splash)) dart.assertFailed(null, I[61], 961, 16, "_splashes!.contains(splash)");
          dart.nullCheck(this[S$1._splashes]).remove(splash);
          if (dart.equals(this[S$1._currentSplash], splash)) {
            this[S$1._currentSplash] = null;
          }
          this.updateKeepAlive();
        }
      };
      dart.fn(onRemoved, T$.VoidTovoid());
      splash = (t69$1 = this.widget.splashFactory, t69$1 == null ? theme$.Theme.of(this.context).splashFactory : t69$1).create({controller: inkController, referenceBox: referenceBox, position: position, color: color, containedInkWell: this.widget.containedInkWell, rectCallback: rectCallback, radius: this.widget.radius, borderRadius: borderRadius, customBorder: customBorder, onRemoved: onRemoved, textDirection: basic.Directionality.of(this.context)});
      return splash;
    }
    handleFocusHighlightModeChange(mode) {
      if (!this.mounted) {
        return;
      }
      this.setState(dart.fn(() => {
        this.updateFocusHighlights();
      }, T$.VoidTovoid()));
    }
    get [S$1._shouldShowFocus]() {
      let t69, t69$;
      let mode = (t69$ = (t69 = media_query.MediaQuery.maybeOf(this.context), t69 == null ? null : t69.navigationMode), t69$ == null ? media_query.NavigationMode.traditional : t69$);
      switch (mode) {
        case C[826] || CT.C826:
          {
            return this.enabled && this[S$1._hasFocus];
          }
        case C[827] || CT.C827:
          {
            return this[S$1._hasFocus];
          }
      }
    }
    updateFocusHighlights() {
      let showFocus = null;
      switch (focus_manager.FocusManager.instance.highlightMode) {
        case C[828] || CT.C828:
          {
            showFocus = false;
            break;
          }
        case C[829] || CT.C829:
          {
            showFocus = this[S$1._shouldShowFocus];
            break;
          }
      }
      this.updateHighlight(ink_well._HighlightType.focus, {value: showFocus});
    }
    handleFocusUpdate(hasFocus) {
      let t69;
      this[S$1._hasFocus] = hasFocus;
      this.statesController.update(material_state.MaterialState.focused, hasFocus);
      this.updateFocusHighlights();
      t69 = this.widget.onFocusChange;
      t69 == null ? null : t69(hasFocus);
    }
    handleTapDown(details) {
      let t69;
      if (this[S$1._anyChildInkResponsePressed]) {
        return;
      }
      this[S$1._startNewSplash]({details: details});
      t69 = this.widget.onTapDown;
      t69 == null ? null : t69(details);
    }
    handleTapUp(details) {
      let t69;
      t69 = this.widget.onTapUp;
      t69 == null ? null : t69(details);
    }
    [S$1._startNewSplash](opts) {
      let t69;
      let details = opts && 'details' in opts ? opts.details : null;
      let context = opts && 'context' in opts ? opts.context : null;
      if (!(details != null || context != null)) dart.assertFailed(null, I[61], 1044, 12, "details != null || context != null");
      let globalPosition = null;
      if (context != null) {
        let referenceBox = box$.RenderBox.as(dart.nullCheck(context.findRenderObject()));
        if (!referenceBox.hasSize) dart.assertFailed("InkResponse must be done with layout before starting a splash.", I[61], 1049, 14, "referenceBox.hasSize");
        globalPosition = referenceBox.localToGlobal(referenceBox.paintBounds.center);
      } else {
        globalPosition = dart.nullCheck(details).globalPosition;
      }
      this.statesController.update(material_state.MaterialState.pressed, true);
      let splash = this[S$1._createInkFeature](globalPosition);
      this[S$1._splashes] == null ? this[S$1._splashes] = new (T$._HashSetOfInteractiveInkFeature()).new() : null;
      dart.nullCheck(this[S$1._splashes]).add(splash);
      t69 = this[S$1._currentSplash];
      t69 == null ? null : t69.cancel();
      this[S$1._currentSplash] = splash;
      this.updateKeepAlive();
      this.updateHighlight(ink_well._HighlightType.pressed, {value: true});
    }
    handleTap() {
      let t69, t69$;
      t69 = this[S$1._currentSplash];
      t69 == null ? null : t69.confirm();
      this[S$1._currentSplash] = null;
      this.updateHighlight(ink_well._HighlightType.pressed, {value: false});
      if (this.widget.onTap != null) {
        if (this.widget.enableFeedback) {
          feedback.Feedback.forTap(this.context);
        }
        t69$ = this.widget.onTap;
        t69$ == null ? null : t69$();
      }
    }
    handleTapCancel() {
      let t69, t69$;
      t69 = this[S$1._currentSplash];
      t69 == null ? null : t69.cancel();
      this[S$1._currentSplash] = null;
      t69$ = this.widget.onTapCancel;
      t69$ == null ? null : t69$();
      this.updateHighlight(ink_well._HighlightType.pressed, {value: false});
    }
    handleDoubleTap() {
      let t69, t69$;
      t69 = this[S$1._currentSplash];
      t69 == null ? null : t69.confirm();
      this[S$1._currentSplash] = null;
      this.updateHighlight(ink_well._HighlightType.pressed, {value: false});
      t69$ = this.widget.onDoubleTap;
      t69$ == null ? null : t69$();
    }
    handleLongPress() {
      let t69;
      t69 = this[S$1._currentSplash];
      t69 == null ? null : t69.confirm();
      this[S$1._currentSplash] = null;
      if (this.widget.onLongPress != null) {
        if (this.widget.enableFeedback) {
          feedback.Feedback.forLongPress(this.context);
        }
        dart.nullCheck(this.widget.onLongPress)();
      }
    }
    deactivate() {
      let t69, t69$;
      if (this[S$1._splashes] != null) {
        let splashes = dart.nullCheck(this[S$1._splashes]);
        this[S$1._splashes] = null;
        for (let splash of splashes) {
          splash.dispose();
        }
        this[S$1._currentSplash] = null;
      }
      if (!(this[S$1._currentSplash] == null)) dart.assertFailed(null, I[61], 1111, 12, "_currentSplash == null");
      for (let highlight of this[S$1._highlights][S$1.$keys]) {
        t69 = this[S$1._highlights][S.$_get](highlight);
        t69 == null ? null : t69.dispose();
        this[S$1._highlights][S.$_set](highlight, null);
      }
      t69$ = this.widget.parentState;
      t69$ == null ? null : t69$.markChildInkResponsePressed(this, false);
      super.deactivate();
    }
    isWidgetEnabled(widget) {
      return widget.onTap != null || widget.onDoubleTap != null || widget.onLongPress != null || widget.onTapDown != null;
    }
    get enabled() {
      return this.isWidgetEnabled(this.widget);
    }
    handleMouseEnter(event) {
      this[S$1._hovering] = true;
      if (this.enabled) {
        this.handleHoverChange();
      }
    }
    handleMouseExit(event) {
      this[S$1._hovering] = false;
      this.handleHoverChange();
    }
    handleHoverChange() {
      this.updateHighlight(ink_well._HighlightType.hover, {value: this[S$1._hovering]});
    }
    get [S$1._canRequestFocus]() {
      let t69, t69$;
      let mode = (t69$ = (t69 = media_query.MediaQuery.maybeOf(this.context), t69 == null ? null : t69.navigationMode), t69$ == null ? media_query.NavigationMode.traditional : t69$);
      switch (mode) {
        case C[826] || CT.C826:
          {
            return this.enabled && this.widget.canRequestFocus;
          }
        case C[827] || CT.C827:
          {
            return true;
          }
      }
    }
    build(context) {
      let t70, t69, t69$, t70$, t70$0, t70$1, t69$0, t69$1;
      if (!(t69 = this.widget, t70 = context, t69.debugCheckContext(t70))) dart.assertFailed(null, I[61], 1156, 12, "widget.debugCheckContext(context)");
      super.build(context);
      for (let type of this[S$1._highlights][S$1.$keys]) {
        t69$ = this[S$1._highlights][S.$_get](type);
        t69$ == null ? null : t69$.color = this.getHighlightColorForType(type);
      }
      t69$0 = this[S$1._currentSplash];
      t69$0 == null ? null : t69$0.color = (t70$1 = (t70$0 = (t70$ = this.widget.overlayColor, t70$ == null ? null : t70$.resolve(this.statesController.value)), t70$0 == null ? this.widget.splashColor : t70$0), t70$1 == null ? theme$.Theme.of(context).splashColor : t70$1);
      let effectiveMouseCursor = material_state.MaterialStateProperty.resolveAs(mouse_cursor.MouseCursor, (t69$1 = this.widget.mouseCursor, t69$1 == null ? material_state.MaterialStateMouseCursor.clickable : t69$1), this.statesController.value);
      return new ink_well._ParentInkResponseProvider.new({state: this, child: new actions.Actions.new({actions: this[S$1._actionMap], child: new focus_scope.Focus.new({focusNode: this.widget.focusNode, canRequestFocus: this[S$1._canRequestFocus], onFocusChange: dart.bind(this, 'handleFocusUpdate'), autofocus: this.widget.autofocus, child: new basic.MouseRegion.new({cursor: effectiveMouseCursor, onEnter: dart.bind(this, 'handleMouseEnter'), onExit: dart.bind(this, 'handleMouseExit'), child: new basic.Semantics.new({onTap: this.widget.excludeFromSemantics || this.widget.onTap == null ? null : dart.bind(this, 'simulateTap'), onLongPress: this.widget.excludeFromSemantics || this.widget.onLongPress == null ? null : dart.bind(this, 'simulateLongPress'), child: new gesture_detector.GestureDetector.new({onTapDown: this.enabled ? dart.bind(this, 'handleTapDown') : null, onTapUp: this.enabled ? dart.bind(this, 'handleTapUp') : null, onTap: this.enabled ? dart.bind(this, 'handleTap') : null, onTapCancel: this.enabled ? dart.bind(this, 'handleTapCancel') : null, onDoubleTap: this.widget.onDoubleTap != null ? dart.bind(this, 'handleDoubleTap') : null, onLongPress: this.widget.onLongPress != null ? dart.bind(this, 'handleLongPress') : null, behavior: proxy_box.HitTestBehavior.opaque, excludeFromSemantics: true, child: this.widget.child, $creationLocationd_0dea112b090073317d4: C[830] || CT.C830}), $creationLocationd_0dea112b090073317d4: C[831] || CT.C831}), $creationLocationd_0dea112b090073317d4: C[832] || CT.C832}), $creationLocationd_0dea112b090073317d4: C[833] || CT.C833}), $creationLocationd_0dea112b090073317d4: C[834] || CT.C834}), $creationLocationd_0dea112b090073317d4: C[835] || CT.C835});
    }
    static ['_#new#tearOff']() {
      return new ink_well._InkResponseState.new();
    }
  };
  (ink_well._InkResponseState.new = function() {
    this[S$1._splashes] = null;
    this[S$1._currentSplash] = null;
    this[S$1._hovering] = false;
    this[S$1._highlights] = new (T$.LinkedMapOf_HighlightType$InkHighlightN()).new();
    this[S$1.___InkResponseState__actionMap] = null;
    this.internalStatesController = null;
    this[S$1._activeChildren] = new (T$.ObserverListOf_ParentInkResponseState()).new();
    this[S$1._hasFocus] = false;
    ink_well._InkResponseState.__proto__.new.call(this);
    ;
  }).prototype = ink_well._InkResponseState.prototype;
  dart.addTypeTests(ink_well._InkResponseState);
  dart.addTypeCaches(ink_well._InkResponseState);
  ink_well._InkResponseState[dart.implements] = () => [ink_well._ParentInkResponseState];
  dart.setMethodSignature(ink_well._InkResponseState, () => ({
    __proto__: dart.getMethods(ink_well._InkResponseState.__proto__),
    markChildInkResponsePressed: dart.fnType(dart.void, [ink_well._ParentInkResponseState, core.bool]),
    simulateTap: dart.fnType(dart.void, [], [dart.nullable(actions.Intent)]),
    simulateLongPress: dart.fnType(dart.void, []),
    handleStatesControllerChange: dart.fnType(dart.void, []),
    initStatesController: dart.fnType(dart.void, []),
    getHighlightColorForType: dart.fnType(ui.Color, [ink_well._HighlightType]),
    getFadeDurationForType: dart.fnType(core.Duration, [ink_well._HighlightType]),
    updateHighlight: dart.fnType(dart.void, [ink_well._HighlightType], {callOnHover: core.bool}, {value: core.bool}),
    [S$1._createInkFeature]: dart.fnType(ink_well.InteractiveInkFeature, [ui.Offset]),
    handleFocusHighlightModeChange: dart.fnType(dart.void, [focus_manager.FocusHighlightMode]),
    updateFocusHighlights: dart.fnType(dart.void, []),
    handleFocusUpdate: dart.fnType(dart.void, [core.bool]),
    handleTapDown: dart.fnType(dart.void, [tap.TapDownDetails]),
    handleTapUp: dart.fnType(dart.void, [tap.TapUpDetails]),
    [S$1._startNewSplash]: dart.fnType(dart.void, [], {context: dart.nullable(framework.BuildContext), details: dart.nullable(tap.TapDownDetails)}, {}),
    handleTap: dart.fnType(dart.void, []),
    handleTapCancel: dart.fnType(dart.void, []),
    handleDoubleTap: dart.fnType(dart.void, []),
    handleLongPress: dart.fnType(dart.void, []),
    isWidgetEnabled: dart.fnType(core.bool, [ink_well._InkResponseStateWidget]),
    handleMouseEnter: dart.fnType(dart.void, [events.PointerEnterEvent]),
    handleMouseExit: dart.fnType(dart.void, [events.PointerExitEvent]),
    handleHoverChange: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(ink_well._InkResponseState, () => ({
    __proto__: dart.getGetters(ink_well._InkResponseState.__proto__),
    [S$1._actionMap]: core.Map$(core.Type, actions.Action$(actions.Intent)),
    highlightsExist: core.bool,
    [S$1._anyChildInkResponsePressed]: core.bool,
    statesController: material_state.MaterialStatesController,
    wantKeepAlive: core.bool,
    [S$1._shouldShowFocus]: core.bool,
    enabled: core.bool,
    [S$1._canRequestFocus]: core.bool
  }));
  dart.setLibraryUri(ink_well._InkResponseState, I[58]);
  dart.setFieldSignature(ink_well._InkResponseState, () => ({
    __proto__: dart.getFields(ink_well._InkResponseState.__proto__),
    [S$1._splashes]: dart.fieldType(dart.nullable(core.Set$(ink_well.InteractiveInkFeature))),
    [S$1._currentSplash]: dart.fieldType(dart.nullable(ink_well.InteractiveInkFeature)),
    [S$1._hovering]: dart.fieldType(core.bool),
    [S$1._highlights]: dart.finalFieldType(core.Map$(ink_well._HighlightType, dart.nullable(ink_highlight.InkHighlight))),
    [S$1.___InkResponseState__actionMap]: dart.fieldType(dart.nullable(core.Map$(core.Type, actions.Action$(actions.Intent)))),
    internalStatesController: dart.fieldType(dart.nullable(material_state.MaterialStatesController)),
    [S$1._activeChildren]: dart.finalFieldType(observer_list.ObserverList$(ink_well._ParentInkResponseState)),
    [S$1._hasFocus]: dart.fieldType(core.bool)
  }));
  ink_well.InkWell = class InkWell extends ink_well.InkResponse {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let child = opts && 'child' in opts ? opts.child : null;
      let onTap = opts && 'onTap' in opts ? opts.onTap : null;
      let onDoubleTap = opts && 'onDoubleTap' in opts ? opts.onDoubleTap : null;
      let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
      let onTapDown = opts && 'onTapDown' in opts ? opts.onTapDown : null;
      let onTapUp = opts && 'onTapUp' in opts ? opts.onTapUp : null;
      let onTapCancel = opts && 'onTapCancel' in opts ? opts.onTapCancel : null;
      let onHighlightChanged = opts && 'onHighlightChanged' in opts ? opts.onHighlightChanged : null;
      let onHover = opts && 'onHover' in opts ? opts.onHover : null;
      let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
      let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
      let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
      let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
      let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
      let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
      let splashFactory = opts && 'splashFactory' in opts ? opts.splashFactory : null;
      let radius = opts && 'radius' in opts ? opts.radius : null;
      let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
      let customBorder = opts && 'customBorder' in opts ? opts.customBorder : null;
      let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : true;
      let excludeFromSemantics = opts && 'excludeFromSemantics' in opts ? opts.excludeFromSemantics : null;
      let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
      let canRequestFocus = opts && 'canRequestFocus' in opts ? opts.canRequestFocus : null;
      let onFocusChange = opts && 'onFocusChange' in opts ? opts.onFocusChange : null;
      let autofocus = opts && 'autofocus' in opts ? opts.autofocus : null;
      let statesController = opts && 'statesController' in opts ? opts.statesController : null;
      return new ink_well.InkWell.new({key: key, child: child, onTap: onTap, onDoubleTap: onDoubleTap, onLongPress: onLongPress, onTapDown: onTapDown, onTapUp: onTapUp, onTapCancel: onTapCancel, onHighlightChanged: onHighlightChanged, onHover: onHover, mouseCursor: mouseCursor, focusColor: focusColor, hoverColor: hoverColor, highlightColor: highlightColor, overlayColor: overlayColor, splashColor: splashColor, splashFactory: splashFactory, radius: radius, borderRadius: borderRadius, customBorder: customBorder, enableFeedback: enableFeedback, excludeFromSemantics: excludeFromSemantics, focusNode: focusNode, canRequestFocus: canRequestFocus, onFocusChange: onFocusChange, autofocus: autofocus, statesController: statesController, $creationLocationd_0dea112b090073317d4: C[836] || CT.C836});
    }
  };
  (ink_well.InkWell.new = function(opts) {
    let t69;
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let onTap = opts && 'onTap' in opts ? opts.onTap : null;
    let onDoubleTap = opts && 'onDoubleTap' in opts ? opts.onDoubleTap : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let onTapDown = opts && 'onTapDown' in opts ? opts.onTapDown : null;
    let onTapUp = opts && 'onTapUp' in opts ? opts.onTapUp : null;
    let onTapCancel = opts && 'onTapCancel' in opts ? opts.onTapCancel : null;
    let onHighlightChanged = opts && 'onHighlightChanged' in opts ? opts.onHighlightChanged : null;
    let onHover = opts && 'onHover' in opts ? opts.onHover : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let highlightColor = opts && 'highlightColor' in opts ? opts.highlightColor : null;
    let overlayColor = opts && 'overlayColor' in opts ? opts.overlayColor : null;
    let splashColor = opts && 'splashColor' in opts ? opts.splashColor : null;
    let splashFactory = opts && 'splashFactory' in opts ? opts.splashFactory : null;
    let radius = opts && 'radius' in opts ? opts.radius : null;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
    let customBorder = opts && 'customBorder' in opts ? opts.customBorder : null;
    let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : true;
    let excludeFromSemantics = opts && 'excludeFromSemantics' in opts ? opts.excludeFromSemantics : false;
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let canRequestFocus = opts && 'canRequestFocus' in opts ? opts.canRequestFocus : true;
    let onFocusChange = opts && 'onFocusChange' in opts ? opts.onFocusChange : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    let statesController = opts && 'statesController' in opts ? opts.statesController : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    ink_well.InkWell.__proto__.new.call(this, {containedInkWell: true, highlightShape: box_border.BoxShape.rectangle, enableFeedback: (t69 = enableFeedback, t69 == null ? true : t69), key: key, child: child, onTap: onTap, onDoubleTap: onDoubleTap, onLongPress: onLongPress, onTapDown: onTapDown, onTapUp: onTapUp, onTapCancel: onTapCancel, onHighlightChanged: onHighlightChanged, onHover: onHover, mouseCursor: mouseCursor, focusColor: focusColor, hoverColor: hoverColor, highlightColor: highlightColor, overlayColor: overlayColor, splashColor: splashColor, splashFactory: splashFactory, radius: radius, borderRadius: borderRadius, customBorder: customBorder, excludeFromSemantics: excludeFromSemantics, focusNode: focusNode, canRequestFocus: canRequestFocus, onFocusChange: onFocusChange, autofocus: autofocus, statesController: statesController, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = ink_well.InkWell.prototype;
  dart.addTypeTests(ink_well.InkWell);
  dart.addTypeCaches(ink_well.InkWell);
  dart.setLibraryUri(ink_well.InkWell, I[58]);
  ink_decoration.Ink = class Ink extends framework.StatefulWidget {
    get child() {
      return this[S$1.child$23];
    }
    set child(value) {
      super.child = value;
    }
    get padding() {
      return this[S$1.padding$11];
    }
    set padding(value) {
      super.padding = value;
    }
    get decoration() {
      return this[S$1.decoration$6];
    }
    set decoration(value) {
      super.decoration = value;
    }
    get width() {
      return this[S$1.width$2];
    }
    set width(value) {
      super.width = value;
    }
    get height() {
      return this[S$1.height$9];
    }
    set height(value) {
      super.height = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let decoration = opts && 'decoration' in opts ? opts.decoration : null;
      let width = opts && 'width' in opts ? opts.width : null;
      let height = opts && 'height' in opts ? opts.height : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new ink_decoration.Ink.new({key: key, padding: padding, color: color, decoration: decoration, width: width, height: height, child: child, $creationLocationd_0dea112b090073317d4: C[838] || CT.C838});
    }
    static ['_#image#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let image = opts && 'image' in opts ? opts.image : null;
      let onImageError = opts && 'onImageError' in opts ? opts.onImageError : null;
      let colorFilter = opts && 'colorFilter' in opts ? opts.colorFilter : null;
      let fit = opts && 'fit' in opts ? opts.fit : null;
      let alignment = opts && 'alignment' in opts ? opts.alignment : C[1] || CT.C1;
      let centerSlice = opts && 'centerSlice' in opts ? opts.centerSlice : null;
      let repeat = opts && 'repeat' in opts ? opts.repeat : C[837] || CT.C837;
      let matchTextDirection = opts && 'matchTextDirection' in opts ? opts.matchTextDirection : false;
      let width = opts && 'width' in opts ? opts.width : null;
      let height = opts && 'height' in opts ? opts.height : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new ink_decoration.Ink.image({key: key, padding: padding, image: image, onImageError: onImageError, colorFilter: colorFilter, fit: fit, alignment: alignment, centerSlice: centerSlice, repeat: repeat, matchTextDirection: matchTextDirection, width: width, height: height, child: child, $creationLocationd_0dea112b090073317d4: C[839] || CT.C839});
    }
    get [S$1._paddingIncludingDecoration]() {
      let t69;
      if (this.decoration == null || dart.nullCheck(this.decoration).padding == null) {
        t69 = this.padding;
        return t69 == null ? edge_insets.EdgeInsets.zero : t69;
      }
      let decorationPadding = dart.nullCheck(dart.nullCheck(this.decoration).padding);
      if (this.padding == null) {
        return decorationPadding;
      }
      return dart.nullCheck(this.padding).add(decorationPadding);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfEdgeInsetsGeometry()).new("padding", this.padding, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfDecoration()).new("bg", this.decoration, {defaultValue: null}));
    }
    createState() {
      return new ink_decoration._InkState.new();
    }
  };
  (ink_decoration.Ink.new = function(opts) {
    let t69;
    let key = opts && 'key' in opts ? opts.key : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let decoration = opts && 'decoration' in opts ? opts.decoration : null;
    let width = opts && 'width' in opts ? opts.width : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.padding$11] = padding;
    this[S$1.width$2] = width;
    this[S$1.height$9] = height;
    this[S$1.child$23] = child;
    if (!(padding == null || padding.isNonNegative)) dart.assertFailed(null, I[108], 156, 15, "padding == null || padding.isNonNegative");
    if (!(decoration == null || decoration.debugAssertIsValid())) dart.assertFailed(null, I[108], 157, 15, "decoration == null || decoration.debugAssertIsValid()");
    if (!(color == null || decoration == null)) dart.assertFailed("Cannot provide both a color and a decoration\n" + "The color argument is just a shorthand for \"decoration: BoxDecoration(color: color)\".", I[108], 158, 15, "color == null || decoration == null");
    this[S$1.decoration$6] = (t69 = decoration, t69 == null ? color != null ? new box_decoration.BoxDecoration.new({color: color}) : null : t69);
    ink_decoration.Ink.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = ink_decoration.Ink.prototype;
  (ink_decoration.Ink.image = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let image = opts && 'image' in opts ? opts.image : null;
    let onImageError = opts && 'onImageError' in opts ? opts.onImageError : null;
    let colorFilter = opts && 'colorFilter' in opts ? opts.colorFilter : null;
    let fit = opts && 'fit' in opts ? opts.fit : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C[1] || CT.C1;
    let centerSlice = opts && 'centerSlice' in opts ? opts.centerSlice : null;
    let repeat = opts && 'repeat' in opts ? opts.repeat : C[837] || CT.C837;
    let matchTextDirection = opts && 'matchTextDirection' in opts ? opts.matchTextDirection : false;
    let width = opts && 'width' in opts ? opts.width : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.padding$11] = padding;
    this[S$1.width$2] = width;
    this[S$1.height$9] = height;
    this[S$1.child$23] = child;
    if (!(padding == null || padding.isNonNegative)) dart.assertFailed(null, I[108], 195, 15, "padding == null || padding.isNonNegative");
    if (!(image !== null)) dart.assertFailed(null, I[108], 196, 15, "image != null");
    if (!(alignment !== null)) dart.assertFailed(null, I[108], 197, 15, "alignment != null");
    if (!(repeat !== null)) dart.assertFailed(null, I[108], 198, 15, "repeat != null");
    if (!(matchTextDirection !== null)) dart.assertFailed(null, I[108], 199, 15, "matchTextDirection != null");
    this[S$1.decoration$6] = new box_decoration.BoxDecoration.new({image: new decoration_image.DecorationImage.new({image: image, onError: onImageError, colorFilter: colorFilter, fit: fit, alignment: alignment, centerSlice: centerSlice, repeat: repeat, matchTextDirection: matchTextDirection})});
    ink_decoration.Ink.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = ink_decoration.Ink.prototype;
  dart.addTypeTests(ink_decoration.Ink);
  dart.addTypeCaches(ink_decoration.Ink);
  dart.setMethodSignature(ink_decoration.Ink, () => ({
    __proto__: dart.getMethods(ink_decoration.Ink.__proto__),
    createState: dart.fnType(framework.State$(ink_decoration.Ink), [])
  }));
  dart.setGetterSignature(ink_decoration.Ink, () => ({
    __proto__: dart.getGetters(ink_decoration.Ink.__proto__),
    [S$1._paddingIncludingDecoration]: edge_insets.EdgeInsetsGeometry
  }));
  dart.setLibraryUri(ink_decoration.Ink, I[109]);
  dart.setFieldSignature(ink_decoration.Ink, () => ({
    __proto__: dart.getFields(ink_decoration.Ink.__proto__),
    child: dart.finalFieldType(dart.nullable(framework.Widget)),
    padding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    decoration: dart.finalFieldType(dart.nullable(decoration.Decoration)),
    width: dart.finalFieldType(dart.nullable(core.double)),
    height: dart.finalFieldType(dart.nullable(core.double))
  }));
  ink_decoration._InkState = class _InkState extends framework.State$(ink_decoration.Ink) {
    [S$1._handleRemoved]() {
      this[S$1._ink] = null;
    }
    deactivate() {
      let t69;
      t69 = this[S$1._ink];
      t69 == null ? null : t69.dispose();
      if (!(this[S$1._ink] == null)) dart.assertFailed(null, I[108], 276, 12, "_ink == null");
      super.deactivate();
    }
    [S$1._build](context) {
      let t69;
      if (this[S$1._ink] == null) {
        this[S$1._ink] = new ink_decoration.InkDecoration.new({decoration: this.widget.decoration, configuration: image.createLocalImageConfiguration(context), controller: dart.nullCheck(material.Material.of(context)), referenceBox: box$.RenderBox.as(dart.nullCheck(dart.nullCheck(this[S$1._boxKey].currentContext).findRenderObject())), onRemoved: dart.bind(this, S$1._handleRemoved)});
      } else {
        dart.nullCheck(this[S$1._ink]).decoration = this.widget.decoration;
        dart.nullCheck(this[S$1._ink]).configuration = image.createLocalImageConfiguration(context);
      }
      t69 = this.widget.child;
      return t69 == null ? new container.Container.new({$creationLocationd_0dea112b090073317d4: C[840] || CT.C840}) : t69;
    }
    build(context) {
      if (!debug$1.debugCheckHasMaterial(context)) dart.assertFailed(null, I[108], 300, 12, "debugCheckHasMaterial(context)");
      let result = new basic.Padding.new({key: this[S$1._boxKey], padding: this.widget[S$1._paddingIncludingDecoration], child: new basic.Builder.new({builder: dart.bind(this, S$1._build), $creationLocationd_0dea112b090073317d4: C[841] || CT.C841}), $creationLocationd_0dea112b090073317d4: C[842] || CT.C842});
      if (this.widget.width != null || this.widget.height != null) {
        result = new basic.SizedBox.new({width: this.widget.width, height: this.widget.height, child: result, $creationLocationd_0dea112b090073317d4: C[843] || CT.C843});
      }
      return result;
    }
    static ['_#new#tearOff']() {
      return new ink_decoration._InkState.new();
    }
  };
  (ink_decoration._InkState.new = function() {
    this[S$1._boxKey] = T$.GlobalKeyOfStateOfStatefulWidget().new();
    this[S$1._ink] = null;
    ink_decoration._InkState.__proto__.new.call(this);
    ;
  }).prototype = ink_decoration._InkState.prototype;
  dart.addTypeTests(ink_decoration._InkState);
  dart.addTypeCaches(ink_decoration._InkState);
  dart.setMethodSignature(ink_decoration._InkState, () => ({
    __proto__: dart.getMethods(ink_decoration._InkState.__proto__),
    [S$1._handleRemoved]: dart.fnType(dart.void, []),
    [S$1._build]: dart.fnType(framework.Widget, [framework.BuildContext]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(ink_decoration._InkState, I[109]);
  dart.setFieldSignature(ink_decoration._InkState, () => ({
    __proto__: dart.getFields(ink_decoration._InkState.__proto__),
    [S$1._boxKey]: dart.finalFieldType(framework.GlobalKey$(framework.State$(framework.StatefulWidget))),
    [S$1._ink]: dart.fieldType(dart.nullable(ink_decoration.InkDecoration))
  }));
  ink_decoration.InkDecoration = class InkDecoration extends material.InkFeature {
    static ['_#new#tearOff'](opts) {
      let decoration = opts && 'decoration' in opts ? opts.decoration : null;
      let configuration = opts && 'configuration' in opts ? opts.configuration : null;
      let controller = opts && 'controller' in opts ? opts.controller : null;
      let referenceBox = opts && 'referenceBox' in opts ? opts.referenceBox : null;
      let onRemoved = opts && 'onRemoved' in opts ? opts.onRemoved : null;
      return new ink_decoration.InkDecoration.new({decoration: decoration, configuration: configuration, controller: controller, referenceBox: referenceBox, onRemoved: onRemoved});
    }
    get decoration() {
      return this[S$1._decoration$2];
    }
    set decoration(value) {
      let t69, t69$;
      if (dart.equals(value, this[S$1._decoration$2])) {
        return;
      }
      this[S$1._decoration$2] = value;
      t69 = this[S$1._painter$1];
      t69 == null ? null : t69.dispose();
      this[S$1._painter$1] = (t69$ = this[S$1._decoration$2], t69$ == null ? null : t69$.createBoxPainter(dart.bind(this, S$1._handleChanged)));
      this.controller.markNeedsPaint();
    }
    get configuration() {
      return this[S$1._configuration];
    }
    set configuration(value) {
      if (!(value !== null)) dart.assertFailed(null, I[108], 373, 12, "value != null");
      if (value._equals(this[S$1._configuration])) {
        return;
      }
      this[S$1._configuration] = value;
      this.controller.markNeedsPaint();
    }
    [S$1._handleChanged]() {
      this.controller.markNeedsPaint();
    }
    dispose() {
      let t69;
      t69 = this[S$1._painter$1];
      t69 == null ? null : t69.dispose();
      super.dispose();
    }
    paintFeature(canvas, transform) {
      if (this[S$1._painter$1] == null) {
        return;
      }
      let originOffset = matrix_utils.MatrixUtils.getAsTranslation(transform);
      let sizedConfiguration = this.configuration.copyWith({size: this.referenceBox.size});
      if (originOffset == null) {
        canvas.save();
        canvas.transform(transform.storage);
        dart.nullCheck(this[S$1._painter$1]).paint(canvas, ui.Offset.zero, sizedConfiguration);
        canvas.restore();
      } else {
        dart.nullCheck(this[S$1._painter$1]).paint(canvas, originOffset, sizedConfiguration);
      }
    }
  };
  (ink_decoration.InkDecoration.new = function(opts) {
    let decoration = opts && 'decoration' in opts ? opts.decoration : null;
    let configuration = opts && 'configuration' in opts ? opts.configuration : null;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let referenceBox = opts && 'referenceBox' in opts ? opts.referenceBox : null;
    let onRemoved = opts && 'onRemoved' in opts ? opts.onRemoved : null;
    this[S$1._painter$1] = null;
    this[S$1._decoration$2] = null;
    if (!(configuration !== null)) dart.assertFailed(null, I[108], 340, 15, "configuration != null");
    this[S$1._configuration] = configuration;
    ink_decoration.InkDecoration.__proto__.new.call(this, {controller: controller, referenceBox: referenceBox, onRemoved: onRemoved});
    this.decoration = decoration;
    controller.addInkFeature(this);
  }).prototype = ink_decoration.InkDecoration.prototype;
  dart.addTypeTests(ink_decoration.InkDecoration);
  dart.addTypeCaches(ink_decoration.InkDecoration);
  dart.setMethodSignature(ink_decoration.InkDecoration, () => ({
    __proto__: dart.getMethods(ink_decoration.InkDecoration.__proto__),
    [S$1._handleChanged]: dart.fnType(dart.void, []),
    paintFeature: dart.fnType(dart.void, [ui.Canvas, vector_math_64.Matrix4])
  }));
  dart.setGetterSignature(ink_decoration.InkDecoration, () => ({
    __proto__: dart.getGetters(ink_decoration.InkDecoration.__proto__),
    decoration: dart.nullable(decoration.Decoration),
    configuration: image_provider.ImageConfiguration
  }));
  dart.setSetterSignature(ink_decoration.InkDecoration, () => ({
    __proto__: dart.getSetters(ink_decoration.InkDecoration.__proto__),
    decoration: dart.nullable(decoration.Decoration),
    configuration: image_provider.ImageConfiguration
  }));
  dart.setLibraryUri(ink_decoration.InkDecoration, I[109]);
  dart.setFieldSignature(ink_decoration.InkDecoration, () => ({
    __proto__: dart.getFields(ink_decoration.InkDecoration.__proto__),
    [S$1._painter$1]: dart.fieldType(dart.nullable(decoration.BoxPainter)),
    [S$1._decoration$2]: dart.fieldType(dart.nullable(decoration.Decoration)),
    [S$1._configuration]: dart.fieldType(image_provider.ImageConfiguration)
  }));
  list_tile.ListTileStyle = class ListTileStyle extends core._Enum {
    toString() {
      return "ListTileStyle." + this[S._name];
    }
  };
  (list_tile.ListTileStyle.new = function(index, name) {
    list_tile.ListTileStyle.__proto__.new.call(this, index, name);
    ;
  }).prototype = list_tile.ListTileStyle.prototype;
  dart.addTypeTests(list_tile.ListTileStyle);
  dart.addTypeCaches(list_tile.ListTileStyle);
  dart.setLibraryUri(list_tile.ListTileStyle, I[110]);
  dart.setStaticFieldSignature(list_tile.ListTileStyle, () => ['values', 'list', 'drawer']);
  dart.defineExtensionMethods(list_tile.ListTileStyle, ['toString']);
  dart.defineLazy(list_tile.ListTileStyle, {
    /*list_tile.ListTileStyle.values*/get values() {
      return C[844] || CT.C844;
    },
    /*list_tile.ListTileStyle.list*/get list() {
      return C[845] || CT.C845;
    },
    /*list_tile.ListTileStyle.drawer*/get drawer() {
      return C[846] || CT.C846;
    }
  }, false);
  list_tile.ListTileControlAffinity = class ListTileControlAffinity extends core._Enum {
    toString() {
      return "ListTileControlAffinity." + this[S._name];
    }
  };
  (list_tile.ListTileControlAffinity.new = function(index, name) {
    list_tile.ListTileControlAffinity.__proto__.new.call(this, index, name);
    ;
  }).prototype = list_tile.ListTileControlAffinity.prototype;
  dart.addTypeTests(list_tile.ListTileControlAffinity);
  dart.addTypeCaches(list_tile.ListTileControlAffinity);
  dart.setLibraryUri(list_tile.ListTileControlAffinity, I[110]);
  dart.setStaticFieldSignature(list_tile.ListTileControlAffinity, () => ['values', 'leading', 'trailing', 'platform']);
  dart.defineExtensionMethods(list_tile.ListTileControlAffinity, ['toString']);
  dart.defineLazy(list_tile.ListTileControlAffinity, {
    /*list_tile.ListTileControlAffinity.values*/get values() {
      return C[847] || CT.C847;
    },
    /*list_tile.ListTileControlAffinity.leading*/get leading() {
      return C[848] || CT.C848;
    },
    /*list_tile.ListTileControlAffinity.trailing*/get trailing() {
      return C[849] || CT.C849;
    },
    /*list_tile.ListTileControlAffinity.platform*/get platform() {
      return C[850] || CT.C850;
    }
  }, false);
  list_tile.ListTile = class ListTile extends framework.StatelessWidget {
    get leading() {
      return this[S$1.leading$1];
    }
    set leading(value) {
      super.leading = value;
    }
    get title() {
      return this[S$1.title$1];
    }
    set title(value) {
      super.title = value;
    }
    get subtitle() {
      return this[S$1.subtitle];
    }
    set subtitle(value) {
      super.subtitle = value;
    }
    get trailing() {
      return this[S$1.trailing$1];
    }
    set trailing(value) {
      super.trailing = value;
    }
    get isThreeLine() {
      return this[S$1.isThreeLine];
    }
    set isThreeLine(value) {
      super.isThreeLine = value;
    }
    get dense() {
      return this[S$1.dense$1];
    }
    set dense(value) {
      super.dense = value;
    }
    get visualDensity() {
      return this[S$1.visualDensity$9];
    }
    set visualDensity(value) {
      super.visualDensity = value;
    }
    get shape() {
      return this[S$1.shape$15];
    }
    set shape(value) {
      super.shape = value;
    }
    get selectedColor() {
      return this[S$1.selectedColor$4];
    }
    set selectedColor(value) {
      super.selectedColor = value;
    }
    get iconColor() {
      return this[S$1.iconColor$5];
    }
    set iconColor(value) {
      super.iconColor = value;
    }
    get textColor() {
      return this[S$1.textColor$4];
    }
    set textColor(value) {
      super.textColor = value;
    }
    get style() {
      return this[S$1.style$8];
    }
    set style(value) {
      super.style = value;
    }
    get contentPadding() {
      return this[S$1.contentPadding$4];
    }
    set contentPadding(value) {
      super.contentPadding = value;
    }
    get enabled() {
      return this[S$1.enabled$1];
    }
    set enabled(value) {
      super.enabled = value;
    }
    get onTap() {
      return this[S$1.onTap$6];
    }
    set onTap(value) {
      super.onTap = value;
    }
    get onLongPress() {
      return this[S$1.onLongPress$5];
    }
    set onLongPress(value) {
      super.onLongPress = value;
    }
    get mouseCursor() {
      return this[S$1.mouseCursor$18];
    }
    set mouseCursor(value) {
      super.mouseCursor = value;
    }
    get selected() {
      return this[S$1.selected$3];
    }
    set selected(value) {
      super.selected = value;
    }
    get focusColor() {
      return this[S$1.focusColor$10];
    }
    set focusColor(value) {
      super.focusColor = value;
    }
    get hoverColor() {
      return this[S$1.hoverColor$11];
    }
    set hoverColor(value) {
      super.hoverColor = value;
    }
    get focusNode() {
      return this[S$1.focusNode$8];
    }
    set focusNode(value) {
      super.focusNode = value;
    }
    get autofocus() {
      return this[S$1.autofocus$8];
    }
    set autofocus(value) {
      super.autofocus = value;
    }
    get tileColor() {
      return this[S$1.tileColor$1];
    }
    set tileColor(value) {
      super.tileColor = value;
    }
    get selectedTileColor() {
      return this[S$1.selectedTileColor$1];
    }
    set selectedTileColor(value) {
      super.selectedTileColor = value;
    }
    get enableFeedback() {
      return this[S$1.enableFeedback$15];
    }
    set enableFeedback(value) {
      super.enableFeedback = value;
    }
    get horizontalTitleGap() {
      return this[S$1.horizontalTitleGap$1];
    }
    set horizontalTitleGap(value) {
      super.horizontalTitleGap = value;
    }
    get minVerticalPadding() {
      return this[S$1.minVerticalPadding$1];
    }
    set minVerticalPadding(value) {
      super.minVerticalPadding = value;
    }
    get minLeadingWidth() {
      return this[S$1.minLeadingWidth$1];
    }
    set minLeadingWidth(value) {
      super.minLeadingWidth = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let leading = opts && 'leading' in opts ? opts.leading : null;
      let title = opts && 'title' in opts ? opts.title : null;
      let subtitle = opts && 'subtitle' in opts ? opts.subtitle : null;
      let trailing = opts && 'trailing' in opts ? opts.trailing : null;
      let isThreeLine = opts && 'isThreeLine' in opts ? opts.isThreeLine : false;
      let dense = opts && 'dense' in opts ? opts.dense : null;
      let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let style = opts && 'style' in opts ? opts.style : null;
      let selectedColor = opts && 'selectedColor' in opts ? opts.selectedColor : null;
      let iconColor = opts && 'iconColor' in opts ? opts.iconColor : null;
      let textColor = opts && 'textColor' in opts ? opts.textColor : null;
      let contentPadding = opts && 'contentPadding' in opts ? opts.contentPadding : null;
      let enabled = opts && 'enabled' in opts ? opts.enabled : true;
      let onTap = opts && 'onTap' in opts ? opts.onTap : null;
      let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
      let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
      let selected = opts && 'selected' in opts ? opts.selected : false;
      let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
      let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
      let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
      let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
      let tileColor = opts && 'tileColor' in opts ? opts.tileColor : null;
      let selectedTileColor = opts && 'selectedTileColor' in opts ? opts.selectedTileColor : null;
      let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
      let horizontalTitleGap = opts && 'horizontalTitleGap' in opts ? opts.horizontalTitleGap : null;
      let minVerticalPadding = opts && 'minVerticalPadding' in opts ? opts.minVerticalPadding : null;
      let minLeadingWidth = opts && 'minLeadingWidth' in opts ? opts.minLeadingWidth : null;
      return new list_tile.ListTile.new({key: key, leading: leading, title: title, subtitle: subtitle, trailing: trailing, isThreeLine: isThreeLine, dense: dense, visualDensity: visualDensity, shape: shape, style: style, selectedColor: selectedColor, iconColor: iconColor, textColor: textColor, contentPadding: contentPadding, enabled: enabled, onTap: onTap, onLongPress: onLongPress, mouseCursor: mouseCursor, selected: selected, focusColor: focusColor, hoverColor: hoverColor, focusNode: focusNode, autofocus: autofocus, tileColor: tileColor, selectedTileColor: selectedTileColor, enableFeedback: enableFeedback, horizontalTitleGap: horizontalTitleGap, minVerticalPadding: minVerticalPadding, minLeadingWidth: minLeadingWidth, $creationLocationd_0dea112b090073317d4: C[851] || CT.C851});
    }
    static divideTiles(opts) {
      let context = opts && 'context' in opts ? opts.context : null;
      let tiles = opts && 'tiles' in opts ? opts.tiles : null;
      let color = opts && 'color' in opts ? opts.color : null;
      if (!(tiles !== null)) dart.assertFailed(null, I[111], 591, 12, "tiles != null");
      if (!(color != null || context != null)) dart.assertFailed(null, I[111], 592, 12, "color != null || context != null");
      tiles = tiles[S.$toList]();
      if (tiles[S$0.$isEmpty] || tiles[S.$length] === 1) {
        return tiles;
      }
      function wrapTile(tile) {
        return new container.DecoratedBox.new({position: proxy_box.DecorationPosition.foreground, decoration: new box_decoration.BoxDecoration.new({border: new box_border.Border.new({bottom: divider.Divider.createBorderSide(context, {color: color})})}), child: tile, $creationLocationd_0dea112b090073317d4: C[852] || CT.C852});
      }
      dart.fn(wrapTile, T$.WidgetToWidget());
      return (() => {
        let t73 = T$.ListOfWidget().of(tiles[S$1.$take](tiles[S.$length] - 1)[S.$map](framework.Widget, wrapTile));
        t73.push(tiles[S$0.$last]);
        return t73;
      })();
    }
    [S$1._iconColor$2](theme, tileTheme) {
      let t74, t74$, t74$0, t74$1, t74$2;
      if (!this.enabled) {
        return theme.disabledColor;
      }
      if (this.selected) {
        t74$0 = (t74$ = (t74 = this.selectedColor, t74 == null ? tileTheme.selectedColor : t74), t74$ == null ? theme.listTileTheme.selectedColor : t74$);
        return t74$0 == null ? theme.colorScheme.primary : t74$0;
      }
      let color = (t74$2 = (t74$1 = this.iconColor, t74$1 == null ? tileTheme.iconColor : t74$1), t74$2 == null ? theme.listTileTheme.iconColor : t74$2);
      if (color != null) {
        return color;
      }
      switch (theme.brightness) {
        case C[551] || CT.C551:
          {
            return colors$.Colors.black45;
          }
        case C[550] || CT.C550:
          {
            return null;
          }
      }
    }
    [S$1._textColor$2](theme, tileTheme, defaultColor) {
      let t74, t74$, t74$0, t74$1, t74$2, t74$3;
      if (!this.enabled) {
        return theme.disabledColor;
      }
      if (this.selected) {
        t74$0 = (t74$ = (t74 = this.selectedColor, t74 == null ? tileTheme.selectedColor : t74), t74$ == null ? theme.listTileTheme.selectedColor : t74$);
        return t74$0 == null ? theme.colorScheme.primary : t74$0;
      }
      t74$3 = (t74$2 = (t74$1 = this.textColor, t74$1 == null ? tileTheme.textColor : t74$1), t74$2 == null ? theme.listTileTheme.textColor : t74$2);
      return t74$3 == null ? defaultColor : t74$3;
    }
    [S$1._isDenseLayout](theme, tileTheme) {
      let t74, t74$, t74$0;
      t74$0 = (t74$ = (t74 = this.dense, t74 == null ? tileTheme.dense : t74), t74$ == null ? theme.listTileTheme.dense : t74$);
      return t74$0 == null ? false : t74$0;
    }
    [S$1._titleTextStyle](theme, tileTheme) {
      let t74, t74$, t74$0;
      let textStyle = null;
      switch (t74$0 = (t74$ = (t74 = this.style, t74 == null ? tileTheme.style : t74), t74$ == null ? theme.listTileTheme.style : t74$), t74$0 == null ? list_tile.ListTileStyle.list : t74$0) {
        case C[846] || CT.C846:
          {
            textStyle = theme.useMaterial3 ? dart.nullCheck(theme.textTheme.bodyMedium) : dart.nullCheck(theme.textTheme.bodyText1);
            break;
          }
        case C[845] || CT.C845:
          {
            textStyle = theme.useMaterial3 ? dart.nullCheck(theme.textTheme.titleMedium) : dart.nullCheck(theme.textTheme.subtitle1);
            break;
          }
      }
      let color = this[S$1._textColor$2](theme, tileTheme, textStyle.color);
      return this[S$1._isDenseLayout](theme, tileTheme) ? textStyle.copyWith({fontSize: 13.0, color: color}) : textStyle.copyWith({color: color});
    }
    [S$1._subtitleTextStyle](theme, tileTheme) {
      let textStyle = theme.useMaterial3 ? dart.nullCheck(theme.textTheme.bodyMedium) : dart.nullCheck(theme.textTheme.bodyText2);
      let color = this[S$1._textColor$2](theme, tileTheme, theme.useMaterial3 ? dart.nullCheck(theme.textTheme.bodySmall).color : dart.nullCheck(theme.textTheme.caption).color);
      return this[S$1._isDenseLayout](theme, tileTheme) ? textStyle.copyWith({color: color, fontSize: 12.0}) : textStyle.copyWith({color: color});
    }
    [S$1._trailingAndLeadingTextStyle](theme, tileTheme) {
      let textStyle = theme.useMaterial3 ? dart.nullCheck(theme.textTheme.bodyMedium) : dart.nullCheck(theme.textTheme.bodyText2);
      let color = this[S$1._textColor$2](theme, tileTheme, textStyle.color);
      return textStyle.copyWith({color: color});
    }
    [S$1._tileBackgroundColor](theme, tileTheme) {
      let t74, t74$, t74$0, t74$1, t74$2;
      let color = this.selected ? (t74$ = (t74 = this.selectedTileColor, t74 == null ? tileTheme.selectedTileColor : t74), t74$ == null ? theme.listTileTheme.selectedTileColor : t74$) : (t74$1 = (t74$0 = this.tileColor, t74$0 == null ? tileTheme.tileColor : t74$0), t74$1 == null ? theme.listTileTheme.tileColor : t74$1);
      t74$2 = color;
      return t74$2 == null ? colors$.Colors.transparent : t74$2;
    }
    build(context) {
      let t74, t74$, t75, t74$0, t74$1, t76, t75$, t75$0, t75$1, t75$2, t75$3, t75$4, t75$5, t75$6, t75$7, t75$8, t75$9, t75$10, t75$11, t75$12, t75$13, t75$14;
      if (!debug$1.debugCheckHasMaterial(context)) dart.assertFailed(null, I[111], 700, 12, "debugCheckHasMaterial(context)");
      let theme = theme$.Theme.of(context);
      let tileTheme = list_tile_theme.ListTileTheme.of(context);
      let iconThemeData = new icon_theme_data.IconThemeData.new({color: this[S$1._iconColor$2](theme, tileTheme)});
      let leadingAndTrailingTextStyle = null;
      if (this.leading != null || this.trailing != null) {
        leadingAndTrailingTextStyle = this[S$1._trailingAndLeadingTextStyle](theme, tileTheme);
      }
      let leadingIcon = null;
      if (this.leading != null) {
        leadingIcon = new implicit_animations.AnimatedDefaultTextStyle.new({style: dart.nullCheck(leadingAndTrailingTextStyle), duration: constants.kThemeChangeDuration, child: dart.nullCheck(this.leading), $creationLocationd_0dea112b090073317d4: C[853] || CT.C853});
      }
      let titleStyle = this[S$1._titleTextStyle](theme, tileTheme);
      let titleText = new implicit_animations.AnimatedDefaultTextStyle.new({style: titleStyle, duration: constants.kThemeChangeDuration, child: (t74 = this.title, t74 == null ? C[854] || CT.C854 : t74), $creationLocationd_0dea112b090073317d4: C[856] || CT.C856});
      let subtitleText = null;
      let subtitleStyle = null;
      if (this.subtitle != null) {
        subtitleStyle = this[S$1._subtitleTextStyle](theme, tileTheme);
        subtitleText = new implicit_animations.AnimatedDefaultTextStyle.new({style: subtitleStyle, duration: constants.kThemeChangeDuration, child: dart.nullCheck(this.subtitle), $creationLocationd_0dea112b090073317d4: C[857] || CT.C857});
      }
      let trailingIcon = null;
      if (this.trailing != null) {
        trailingIcon = new implicit_animations.AnimatedDefaultTextStyle.new({style: dart.nullCheck(leadingAndTrailingTextStyle), duration: constants.kThemeChangeDuration, child: dart.nullCheck(this.trailing), $creationLocationd_0dea112b090073317d4: C[858] || CT.C858});
      }
      let defaultContentPadding = C[656] || CT.C656;
      let textDirection = basic.Directionality.of(context);
      let resolvedContentPadding = (t74$1 = (t74$0 = (t74$ = this.contentPadding, t74$ == null ? null : t74$.resolve(textDirection)), t74$0 == null ? (t75 = tileTheme.contentPadding, t75 == null ? null : t75.resolve(textDirection)) : t74$0), t74$1 == null ? defaultContentPadding : t74$1);
      let states = (() => {
        let t74 = T$.LinkedHashSetOfMaterialState().new();
        if (!this.enabled || this.onTap == null && this.onLongPress == null) t74.add(material_state.MaterialState.disabled);
        if (this.selected) t74.add(material_state.MaterialState.selected);
        return t74;
      })();
      let effectiveMouseCursor = (t75$0 = (t75$ = material_state.MaterialStateProperty.resolveAs(T$.MouseCursorN(), this.mouseCursor, states), t75$ == null ? (t76 = tileTheme.mouseCursor, t76 == null ? null : t76.resolve(states)) : t75$), t75$0 == null ? material_state.MaterialStateMouseCursor.clickable.resolve(states) : t75$0);
      return new ink_well.InkWell.new({customBorder: (t75$1 = this.shape, t75$1 == null ? tileTheme.shape : t75$1), onTap: this.enabled ? this.onTap : null, onLongPress: this.enabled ? this.onLongPress : null, mouseCursor: effectiveMouseCursor, canRequestFocus: this.enabled, focusNode: this.focusNode, focusColor: this.focusColor, hoverColor: this.hoverColor, autofocus: this.autofocus, enableFeedback: (t75$3 = (t75$2 = this.enableFeedback, t75$2 == null ? tileTheme.enableFeedback : t75$2), t75$3 == null ? true : t75$3), child: new basic.Semantics.new({selected: this.selected, enabled: this.enabled, child: new ink_decoration.Ink.new({decoration: new shape_decoration.ShapeDecoration.new({shape: (t75$5 = (t75$4 = this.shape, t75$4 == null ? tileTheme.shape : t75$4), t75$5 == null ? C[859] || CT.C859 : t75$5), color: this[S$1._tileBackgroundColor](theme, tileTheme)}), child: new safe_area.SafeArea.new({top: false, bottom: false, minimum: resolvedContentPadding, child: icon_theme.IconTheme.merge({data: iconThemeData, child: new list_tile._ListTile.new({leading: leadingIcon, title: titleText, subtitle: subtitleText, trailing: trailingIcon, isDense: this[S$1._isDenseLayout](theme, tileTheme), visualDensity: (t75$7 = (t75$6 = this.visualDensity, t75$6 == null ? tileTheme.visualDensity : t75$6), t75$7 == null ? theme.visualDensity : t75$7), isThreeLine: this.isThreeLine, textDirection: textDirection, titleBaselineType: dart.nullCheck(titleStyle.textBaseline), subtitleBaselineType: (t75$8 = subtitleStyle, t75$8 == null ? null : t75$8.textBaseline), horizontalTitleGap: (t75$10 = (t75$9 = this.horizontalTitleGap, t75$9 == null ? tileTheme.horizontalTitleGap : t75$9), t75$10 == null ? 16.0 : t75$10), minVerticalPadding: (t75$12 = (t75$11 = this.minVerticalPadding, t75$11 == null ? tileTheme.minVerticalPadding : t75$11), t75$12 == null ? 4.0 : t75$12), minLeadingWidth: (t75$14 = (t75$13 = this.minLeadingWidth, t75$13 == null ? tileTheme.minLeadingWidth : t75$13), t75$14 == null ? 40.0 : t75$14), $creationLocationd_0dea112b090073317d4: C[860] || CT.C860})}), $creationLocationd_0dea112b090073317d4: C[861] || CT.C861}), $creationLocationd_0dea112b090073317d4: C[862] || CT.C862}), $creationLocationd_0dea112b090073317d4: C[863] || CT.C863}), $creationLocationd_0dea112b090073317d4: C[864] || CT.C864});
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfWidget()).new("leading", this.leading, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfWidget()).new("title", this.title, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfWidget()).new("subtitle", this.subtitle, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfWidget()).new("trailing", this.trailing, {defaultValue: null}));
      properties.add(new diagnostics.FlagProperty.new("isThreeLine", {value: this.isThreeLine, ifTrue: "THREE_LINE", ifFalse: "TWO_LINE", showName: true, defaultValue: false}));
      properties.add(new diagnostics.FlagProperty.new("dense", {value: this.dense, ifTrue: "true", ifFalse: "false", showName: true}));
      properties.add(new (T$.DiagnosticsPropertyOfVisualDensity()).new("visualDensity", this.visualDensity, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfShapeBorder()).new("shape", this.shape, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfListTileStyle()).new("style", this.style, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("selectedColor", this.selectedColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("iconColor", this.iconColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("textColor", this.textColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfEdgeInsetsGeometry()).new("contentPadding", this.contentPadding, {defaultValue: null}));
      properties.add(new diagnostics.FlagProperty.new("enabled", {value: this.enabled, ifTrue: "true", ifFalse: "false", showName: true, defaultValue: true}));
      properties.add(new (T$.DiagnosticsPropertyOfFunction()).new("onTap", this.onTap, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfFunction()).new("onLongPress", this.onLongPress, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfMouseCursor()).new("mouseCursor", this.mouseCursor, {defaultValue: null}));
      properties.add(new diagnostics.FlagProperty.new("selected", {value: this.selected, ifTrue: "true", ifFalse: "false", showName: true, defaultValue: false}));
      properties.add(new colors.ColorProperty.new("focusColor", this.focusColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("hoverColor", this.hoverColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfFocusNode()).new("focusNode", this.focusNode, {defaultValue: null}));
      properties.add(new diagnostics.FlagProperty.new("autofocus", {value: this.autofocus, ifTrue: "true", ifFalse: "false", showName: true, defaultValue: false}));
      properties.add(new colors.ColorProperty.new("tileColor", this.tileColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("selectedTileColor", this.selectedTileColor, {defaultValue: null}));
      properties.add(new diagnostics.FlagProperty.new("enableFeedback", {value: this.enableFeedback, ifTrue: "true", ifFalse: "false", showName: true}));
      properties.add(new diagnostics.DoubleProperty.new("horizontalTitleGap", this.horizontalTitleGap, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("minVerticalPadding", this.minVerticalPadding, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("minLeadingWidth", this.minLeadingWidth, {defaultValue: null}));
    }
  };
  (list_tile.ListTile.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let leading = opts && 'leading' in opts ? opts.leading : null;
    let title = opts && 'title' in opts ? opts.title : null;
    let subtitle = opts && 'subtitle' in opts ? opts.subtitle : null;
    let trailing = opts && 'trailing' in opts ? opts.trailing : null;
    let isThreeLine = opts && 'isThreeLine' in opts ? opts.isThreeLine : false;
    let dense = opts && 'dense' in opts ? opts.dense : null;
    let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let style = opts && 'style' in opts ? opts.style : null;
    let selectedColor = opts && 'selectedColor' in opts ? opts.selectedColor : null;
    let iconColor = opts && 'iconColor' in opts ? opts.iconColor : null;
    let textColor = opts && 'textColor' in opts ? opts.textColor : null;
    let contentPadding = opts && 'contentPadding' in opts ? opts.contentPadding : null;
    let enabled = opts && 'enabled' in opts ? opts.enabled : true;
    let onTap = opts && 'onTap' in opts ? opts.onTap : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let mouseCursor = opts && 'mouseCursor' in opts ? opts.mouseCursor : null;
    let selected = opts && 'selected' in opts ? opts.selected : false;
    let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
    let hoverColor = opts && 'hoverColor' in opts ? opts.hoverColor : null;
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    let tileColor = opts && 'tileColor' in opts ? opts.tileColor : null;
    let selectedTileColor = opts && 'selectedTileColor' in opts ? opts.selectedTileColor : null;
    let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
    let horizontalTitleGap = opts && 'horizontalTitleGap' in opts ? opts.horizontalTitleGap : null;
    let minVerticalPadding = opts && 'minVerticalPadding' in opts ? opts.minVerticalPadding : null;
    let minLeadingWidth = opts && 'minLeadingWidth' in opts ? opts.minLeadingWidth : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.leading$1] = leading;
    this[S$1.title$1] = title;
    this[S$1.subtitle] = subtitle;
    this[S$1.trailing$1] = trailing;
    this[S$1.isThreeLine] = isThreeLine;
    this[S$1.dense$1] = dense;
    this[S$1.visualDensity$9] = visualDensity;
    this[S$1.shape$15] = shape;
    this[S$1.style$8] = style;
    this[S$1.selectedColor$4] = selectedColor;
    this[S$1.iconColor$5] = iconColor;
    this[S$1.textColor$4] = textColor;
    this[S$1.contentPadding$4] = contentPadding;
    this[S$1.enabled$1] = enabled;
    this[S$1.onTap$6] = onTap;
    this[S$1.onLongPress$5] = onLongPress;
    this[S$1.mouseCursor$18] = mouseCursor;
    this[S$1.selected$3] = selected;
    this[S$1.focusColor$10] = focusColor;
    this[S$1.hoverColor$11] = hoverColor;
    this[S$1.focusNode$8] = focusNode;
    this[S$1.autofocus$8] = autofocus;
    this[S$1.tileColor$1] = tileColor;
    this[S$1.selectedTileColor$1] = selectedTileColor;
    this[S$1.enableFeedback$15] = enableFeedback;
    this[S$1.horizontalTitleGap$1] = horizontalTitleGap;
    this[S$1.minVerticalPadding$1] = minVerticalPadding;
    this[S$1.minLeadingWidth$1] = minLeadingWidth;
    if (!(isThreeLine !== null)) dart.assertFailed(null, I[111], 331, 15, "isThreeLine != null");
    if (!(enabled !== null)) dart.assertFailed(null, I[111], 332, 15, "enabled != null");
    if (!(selected !== null)) dart.assertFailed(null, I[111], 333, 15, "selected != null");
    if (!(autofocus !== null)) dart.assertFailed(null, I[111], 334, 15, "autofocus != null");
    if (!(!isThreeLine || subtitle != null)) dart.assertFailed(null, I[111], 335, 15, "!isThreeLine || subtitle != null");
    list_tile.ListTile.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = list_tile.ListTile.prototype;
  dart.addTypeTests(list_tile.ListTile);
  dart.addTypeCaches(list_tile.ListTile);
  dart.setMethodSignature(list_tile.ListTile, () => ({
    __proto__: dart.getMethods(list_tile.ListTile.__proto__),
    [S$1._iconColor$2]: dart.fnType(dart.nullable(ui.Color), [theme_data.ThemeData, list_tile_theme.ListTileThemeData]),
    [S$1._textColor$2]: dart.fnType(dart.nullable(ui.Color), [theme_data.ThemeData, list_tile_theme.ListTileThemeData, dart.nullable(ui.Color)]),
    [S$1._isDenseLayout]: dart.fnType(core.bool, [theme_data.ThemeData, list_tile_theme.ListTileThemeData]),
    [S$1._titleTextStyle]: dart.fnType(text_style.TextStyle, [theme_data.ThemeData, list_tile_theme.ListTileThemeData]),
    [S$1._subtitleTextStyle]: dart.fnType(text_style.TextStyle, [theme_data.ThemeData, list_tile_theme.ListTileThemeData]),
    [S$1._trailingAndLeadingTextStyle]: dart.fnType(text_style.TextStyle, [theme_data.ThemeData, list_tile_theme.ListTileThemeData]),
    [S$1._tileBackgroundColor]: dart.fnType(ui.Color, [theme_data.ThemeData, list_tile_theme.ListTileThemeData]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setStaticMethodSignature(list_tile.ListTile, () => ['divideTiles']);
  dart.setLibraryUri(list_tile.ListTile, I[110]);
  dart.setFieldSignature(list_tile.ListTile, () => ({
    __proto__: dart.getFields(list_tile.ListTile.__proto__),
    leading: dart.finalFieldType(dart.nullable(framework.Widget)),
    title: dart.finalFieldType(dart.nullable(framework.Widget)),
    subtitle: dart.finalFieldType(dart.nullable(framework.Widget)),
    trailing: dart.finalFieldType(dart.nullable(framework.Widget)),
    isThreeLine: dart.finalFieldType(core.bool),
    dense: dart.finalFieldType(dart.nullable(core.bool)),
    visualDensity: dart.finalFieldType(dart.nullable(theme_data.VisualDensity)),
    shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    selectedColor: dart.finalFieldType(dart.nullable(ui.Color)),
    iconColor: dart.finalFieldType(dart.nullable(ui.Color)),
    textColor: dart.finalFieldType(dart.nullable(ui.Color)),
    style: dart.finalFieldType(dart.nullable(list_tile.ListTileStyle)),
    contentPadding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    enabled: dart.finalFieldType(core.bool),
    onTap: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onLongPress: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    mouseCursor: dart.finalFieldType(dart.nullable(mouse_cursor.MouseCursor)),
    selected: dart.finalFieldType(core.bool),
    focusColor: dart.finalFieldType(dart.nullable(ui.Color)),
    hoverColor: dart.finalFieldType(dart.nullable(ui.Color)),
    focusNode: dart.finalFieldType(dart.nullable(focus_manager.FocusNode)),
    autofocus: dart.finalFieldType(core.bool),
    tileColor: dart.finalFieldType(dart.nullable(ui.Color)),
    selectedTileColor: dart.finalFieldType(dart.nullable(ui.Color)),
    enableFeedback: dart.finalFieldType(dart.nullable(core.bool)),
    horizontalTitleGap: dart.finalFieldType(dart.nullable(core.double)),
    minVerticalPadding: dart.finalFieldType(dart.nullable(core.double)),
    minLeadingWidth: dart.finalFieldType(dart.nullable(core.double))
  }));
  list_tile._ListTileSlot = class _ListTileSlot extends core._Enum {
    toString() {
      return "_ListTileSlot." + this[S._name];
    }
  };
  (list_tile._ListTileSlot.new = function(index, name) {
    list_tile._ListTileSlot.__proto__.new.call(this, index, name);
    ;
  }).prototype = list_tile._ListTileSlot.prototype;
  dart.addTypeTests(list_tile._ListTileSlot);
  dart.addTypeCaches(list_tile._ListTileSlot);
  dart.setLibraryUri(list_tile._ListTileSlot, I[110]);
  dart.setStaticFieldSignature(list_tile._ListTileSlot, () => ['values', 'leading', 'title', 'subtitle', 'trailing']);
  dart.defineExtensionMethods(list_tile._ListTileSlot, ['toString']);
  dart.defineLazy(list_tile._ListTileSlot, {
    /*list_tile._ListTileSlot.values*/get values() {
      return C[865] || CT.C865;
    },
    /*list_tile._ListTileSlot.leading*/get leading() {
      return C[866] || CT.C866;
    },
    /*list_tile._ListTileSlot.title*/get title() {
      return C[867] || CT.C867;
    },
    /*list_tile._ListTileSlot.subtitle*/get subtitle() {
      return C[868] || CT.C868;
    },
    /*list_tile._ListTileSlot.trailing*/get trailing() {
      return C[869] || CT.C869;
    }
  }, false);
  const RenderObjectWidget_SlottedMultiChildRenderObjectWidgetMixin$36$ = class RenderObjectWidget_SlottedMultiChildRenderObjectWidgetMixin extends framework.RenderObjectWidget {
    updateRenderObject(context, renderObject) {
      T$.SlottedContainerRenderObjectMixinOf_ListTileSlot().as(renderObject);
      return super.updateRenderObject(context, renderObject);
    }
  };
  (RenderObjectWidget_SlottedMultiChildRenderObjectWidgetMixin$36$.new = function(opts) {
    RenderObjectWidget_SlottedMultiChildRenderObjectWidgetMixin$36$.__proto__.new.call(this, opts);
  }).prototype = RenderObjectWidget_SlottedMultiChildRenderObjectWidgetMixin$36$.prototype;
  dart.applyMixin(RenderObjectWidget_SlottedMultiChildRenderObjectWidgetMixin$36$, slotted_render_object_widget.SlottedMultiChildRenderObjectWidgetMixin$(list_tile._ListTileSlot));
  list_tile._ListTile = class _ListTile extends RenderObjectWidget_SlottedMultiChildRenderObjectWidgetMixin$36$ {
    get leading() {
      return this[S$1.leading$2];
    }
    set leading(value) {
      super.leading = value;
    }
    get title() {
      return this[S$1.title$2];
    }
    set title(value) {
      super.title = value;
    }
    get subtitle() {
      return this[S$1.subtitle$1];
    }
    set subtitle(value) {
      super.subtitle = value;
    }
    get trailing() {
      return this[S$1.trailing$2];
    }
    set trailing(value) {
      super.trailing = value;
    }
    get isThreeLine() {
      return this[S$1.isThreeLine$1];
    }
    set isThreeLine(value) {
      super.isThreeLine = value;
    }
    get isDense() {
      return this[S$1.isDense$3];
    }
    set isDense(value) {
      super.isDense = value;
    }
    get visualDensity() {
      return this[S$1.visualDensity$10];
    }
    set visualDensity(value) {
      super.visualDensity = value;
    }
    get textDirection() {
      return this[S$1.textDirection$1];
    }
    set textDirection(value) {
      super.textDirection = value;
    }
    get titleBaselineType() {
      return this[S$1.titleBaselineType];
    }
    set titleBaselineType(value) {
      super.titleBaselineType = value;
    }
    get subtitleBaselineType() {
      return this[S$1.subtitleBaselineType];
    }
    set subtitleBaselineType(value) {
      super.subtitleBaselineType = value;
    }
    get horizontalTitleGap() {
      return this[S$1.horizontalTitleGap$2];
    }
    set horizontalTitleGap(value) {
      super.horizontalTitleGap = value;
    }
    get minVerticalPadding() {
      return this[S$1.minVerticalPadding$2];
    }
    set minVerticalPadding(value) {
      super.minVerticalPadding = value;
    }
    get minLeadingWidth() {
      return this[S$1.minLeadingWidth$2];
    }
    set minLeadingWidth(value) {
      super.minLeadingWidth = value;
    }
    static ['_#new#tearOff'](opts) {
      let leading = opts && 'leading' in opts ? opts.leading : null;
      let title = opts && 'title' in opts ? opts.title : null;
      let subtitle = opts && 'subtitle' in opts ? opts.subtitle : null;
      let trailing = opts && 'trailing' in opts ? opts.trailing : null;
      let isThreeLine = opts && 'isThreeLine' in opts ? opts.isThreeLine : null;
      let isDense = opts && 'isDense' in opts ? opts.isDense : null;
      let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      let titleBaselineType = opts && 'titleBaselineType' in opts ? opts.titleBaselineType : null;
      let horizontalTitleGap = opts && 'horizontalTitleGap' in opts ? opts.horizontalTitleGap : null;
      let minVerticalPadding = opts && 'minVerticalPadding' in opts ? opts.minVerticalPadding : null;
      let minLeadingWidth = opts && 'minLeadingWidth' in opts ? opts.minLeadingWidth : null;
      let subtitleBaselineType = opts && 'subtitleBaselineType' in opts ? opts.subtitleBaselineType : null;
      return new list_tile._ListTile.new({leading: leading, title: title, subtitle: subtitle, trailing: trailing, isThreeLine: isThreeLine, isDense: isDense, visualDensity: visualDensity, textDirection: textDirection, titleBaselineType: titleBaselineType, horizontalTitleGap: horizontalTitleGap, minVerticalPadding: minVerticalPadding, minLeadingWidth: minLeadingWidth, subtitleBaselineType: subtitleBaselineType, $creationLocationd_0dea112b090073317d4: C[870] || CT.C870});
    }
    get slots() {
      return list_tile._ListTileSlot.values;
    }
    childForSlot(slot) {
      list_tile._ListTileSlot.as(slot);
      switch (slot) {
        case C[866] || CT.C866:
          {
            return this.leading;
          }
        case C[867] || CT.C867:
          {
            return this.title;
          }
        case C[868] || CT.C868:
          {
            return this.subtitle;
          }
        case C[869] || CT.C869:
          {
            return this.trailing;
          }
      }
    }
    createRenderObject(context) {
      return new list_tile._RenderListTile.new({isThreeLine: this.isThreeLine, isDense: this.isDense, visualDensity: this.visualDensity, textDirection: this.textDirection, titleBaselineType: this.titleBaselineType, subtitleBaselineType: this.subtitleBaselineType, horizontalTitleGap: this.horizontalTitleGap, minVerticalPadding: this.minVerticalPadding, minLeadingWidth: this.minLeadingWidth});
    }
    updateRenderObject(context, renderObject) {
      let t77;
      list_tile._RenderListTile.as(renderObject);
      t77 = renderObject;
      (() => {
        t77.isThreeLine = this.isThreeLine;
        t77.isDense = this.isDense;
        t77.visualDensity = this.visualDensity;
        t77.textDirection = this.textDirection;
        t77.titleBaselineType = this.titleBaselineType;
        t77.subtitleBaselineType = this.subtitleBaselineType;
        t77.horizontalTitleGap = this.horizontalTitleGap;
        t77.minLeadingWidth = this.minLeadingWidth;
        t77.minVerticalPadding = this.minVerticalPadding;
        return t77;
      })();
    }
  };
  (list_tile._ListTile.new = function(opts) {
    let leading = opts && 'leading' in opts ? opts.leading : null;
    let title = opts && 'title' in opts ? opts.title : null;
    let subtitle = opts && 'subtitle' in opts ? opts.subtitle : null;
    let trailing = opts && 'trailing' in opts ? opts.trailing : null;
    let isThreeLine = opts && 'isThreeLine' in opts ? opts.isThreeLine : null;
    let isDense = opts && 'isDense' in opts ? opts.isDense : null;
    let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let titleBaselineType = opts && 'titleBaselineType' in opts ? opts.titleBaselineType : null;
    let horizontalTitleGap = opts && 'horizontalTitleGap' in opts ? opts.horizontalTitleGap : null;
    let minVerticalPadding = opts && 'minVerticalPadding' in opts ? opts.minVerticalPadding : null;
    let minLeadingWidth = opts && 'minLeadingWidth' in opts ? opts.minLeadingWidth : null;
    let subtitleBaselineType = opts && 'subtitleBaselineType' in opts ? opts.subtitleBaselineType : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.leading$2] = leading;
    this[S$1.title$2] = title;
    this[S$1.subtitle$1] = subtitle;
    this[S$1.trailing$2] = trailing;
    this[S$1.isThreeLine$1] = isThreeLine;
    this[S$1.isDense$3] = isDense;
    this[S$1.visualDensity$10] = visualDensity;
    this[S$1.textDirection$1] = textDirection;
    this[S$1.titleBaselineType] = titleBaselineType;
    this[S$1.horizontalTitleGap$2] = horizontalTitleGap;
    this[S$1.minVerticalPadding$2] = minVerticalPadding;
    this[S$1.minLeadingWidth$2] = minLeadingWidth;
    this[S$1.subtitleBaselineType] = subtitleBaselineType;
    if (!(isThreeLine !== null)) dart.assertFailed(null, I[111], 865, 15, "isThreeLine != null");
    if (!(isDense !== null)) dart.assertFailed(null, I[111], 866, 15, "isDense != null");
    if (!(visualDensity !== null)) dart.assertFailed(null, I[111], 867, 15, "visualDensity != null");
    if (!(textDirection !== null)) dart.assertFailed(null, I[111], 868, 15, "textDirection != null");
    if (!(titleBaselineType !== null)) dart.assertFailed(null, I[111], 869, 15, "titleBaselineType != null");
    if (!(horizontalTitleGap !== null)) dart.assertFailed(null, I[111], 870, 15, "horizontalTitleGap != null");
    if (!(minVerticalPadding !== null)) dart.assertFailed(null, I[111], 871, 15, "minVerticalPadding != null");
    if (!(minLeadingWidth !== null)) dart.assertFailed(null, I[111], 872, 15, "minLeadingWidth != null");
    list_tile._ListTile.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = list_tile._ListTile.prototype;
  dart.addTypeTests(list_tile._ListTile);
  dart.addTypeCaches(list_tile._ListTile);
  dart.setMethodSignature(list_tile._ListTile, () => ({
    __proto__: dart.getMethods(list_tile._ListTile.__proto__),
    childForSlot: dart.fnType(dart.nullable(framework.Widget), [dart.nullable(core.Object)]),
    createRenderObject: dart.fnType(list_tile._RenderListTile, [framework.BuildContext])
  }));
  dart.setGetterSignature(list_tile._ListTile, () => ({
    __proto__: dart.getGetters(list_tile._ListTile.__proto__),
    slots: core.Iterable$(list_tile._ListTileSlot)
  }));
  dart.setLibraryUri(list_tile._ListTile, I[110]);
  dart.setFieldSignature(list_tile._ListTile, () => ({
    __proto__: dart.getFields(list_tile._ListTile.__proto__),
    leading: dart.finalFieldType(dart.nullable(framework.Widget)),
    title: dart.finalFieldType(framework.Widget),
    subtitle: dart.finalFieldType(dart.nullable(framework.Widget)),
    trailing: dart.finalFieldType(dart.nullable(framework.Widget)),
    isThreeLine: dart.finalFieldType(core.bool),
    isDense: dart.finalFieldType(core.bool),
    visualDensity: dart.finalFieldType(theme_data.VisualDensity),
    textDirection: dart.finalFieldType(ui.TextDirection),
    titleBaselineType: dart.finalFieldType(ui.TextBaseline),
    subtitleBaselineType: dart.finalFieldType(dart.nullable(ui.TextBaseline)),
    horizontalTitleGap: dart.finalFieldType(core.double),
    minVerticalPadding: dart.finalFieldType(core.double),
    minLeadingWidth: dart.finalFieldType(core.double)
  }));
  const RenderBox_SlottedContainerRenderObjectMixin$36$ = class RenderBox_SlottedContainerRenderObjectMixin extends box$.RenderBox {};
  (RenderBox_SlottedContainerRenderObjectMixin$36$.new = function() {
    slotted_render_object_widget.SlottedContainerRenderObjectMixin$(list_tile._ListTileSlot)[dart.mixinNew].call(this);
    RenderBox_SlottedContainerRenderObjectMixin$36$.__proto__.new.call(this);
  }).prototype = RenderBox_SlottedContainerRenderObjectMixin$36$.prototype;
  dart.applyMixin(RenderBox_SlottedContainerRenderObjectMixin$36$, slotted_render_object_widget.SlottedContainerRenderObjectMixin$(list_tile._ListTileSlot));
  list_tile._RenderListTile = class _RenderListTile extends RenderBox_SlottedContainerRenderObjectMixin$36$ {
    static ['_#new#tearOff'](opts) {
      let isDense = opts && 'isDense' in opts ? opts.isDense : null;
      let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
      let isThreeLine = opts && 'isThreeLine' in opts ? opts.isThreeLine : null;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      let titleBaselineType = opts && 'titleBaselineType' in opts ? opts.titleBaselineType : null;
      let subtitleBaselineType = opts && 'subtitleBaselineType' in opts ? opts.subtitleBaselineType : null;
      let horizontalTitleGap = opts && 'horizontalTitleGap' in opts ? opts.horizontalTitleGap : null;
      let minVerticalPadding = opts && 'minVerticalPadding' in opts ? opts.minVerticalPadding : null;
      let minLeadingWidth = opts && 'minLeadingWidth' in opts ? opts.minLeadingWidth : null;
      return new list_tile._RenderListTile.new({isDense: isDense, visualDensity: visualDensity, isThreeLine: isThreeLine, textDirection: textDirection, titleBaselineType: titleBaselineType, subtitleBaselineType: subtitleBaselineType, horizontalTitleGap: horizontalTitleGap, minVerticalPadding: minVerticalPadding, minLeadingWidth: minLeadingWidth});
    }
    get leading() {
      return this.childForSlot(list_tile._ListTileSlot.leading);
    }
    get title() {
      return this.childForSlot(list_tile._ListTileSlot.title);
    }
    get subtitle() {
      return this.childForSlot(list_tile._ListTileSlot.subtitle);
    }
    get trailing() {
      return this.childForSlot(list_tile._ListTileSlot.trailing);
    }
    get children() {
      return (() => {
        let t77 = T$.JSArrayOfRenderBox().of([]);
        if (this.leading != null) t77.push(dart.nullCheck(this.leading));
        if (this.title != null) t77.push(dart.nullCheck(this.title));
        if (this.subtitle != null) t77.push(dart.nullCheck(this.subtitle));
        if (this.trailing != null) t77.push(dart.nullCheck(this.trailing));
        return t77;
      })();
    }
    get isDense() {
      return this[S$1._isDense];
    }
    set isDense(value) {
      if (!(value !== null)) dart.assertFailed(null, I[111], 987, 12, "value != null");
      if (this[S$1._isDense] === value) {
        return;
      }
      this[S$1._isDense] = value;
      this.markNeedsLayout();
    }
    get visualDensity() {
      return this[S$1._visualDensity];
    }
    set visualDensity(value) {
      if (!(value !== null)) dart.assertFailed(null, I[111], 998, 12, "value != null");
      if (this[S$1._visualDensity]._equals(value)) {
        return;
      }
      this[S$1._visualDensity] = value;
      this.markNeedsLayout();
    }
    get isThreeLine() {
      return this[S$1._isThreeLine];
    }
    set isThreeLine(value) {
      if (!(value !== null)) dart.assertFailed(null, I[111], 1009, 12, "value != null");
      if (this[S$1._isThreeLine] === value) {
        return;
      }
      this[S$1._isThreeLine] = value;
      this.markNeedsLayout();
    }
    get textDirection() {
      return this[S$1._textDirection$5];
    }
    set textDirection(value) {
      if (!(value !== null)) dart.assertFailed(null, I[111], 1020, 12, "value != null");
      if (this[S$1._textDirection$5] === value) {
        return;
      }
      this[S$1._textDirection$5] = value;
      this.markNeedsLayout();
    }
    get titleBaselineType() {
      return this[S$1._titleBaselineType];
    }
    set titleBaselineType(value) {
      if (!(value !== null)) dart.assertFailed(null, I[111], 1031, 12, "value != null");
      if (this[S$1._titleBaselineType] === value) {
        return;
      }
      this[S$1._titleBaselineType] = value;
      this.markNeedsLayout();
    }
    get subtitleBaselineType() {
      return this[S$1._subtitleBaselineType];
    }
    set subtitleBaselineType(value) {
      if (this[S$1._subtitleBaselineType] == value) {
        return;
      }
      this[S$1._subtitleBaselineType] = value;
      this.markNeedsLayout();
    }
    get horizontalTitleGap() {
      return this[S$1._horizontalTitleGap$2];
    }
    get [S$1._effectiveHorizontalTitleGap]() {
      return this[S$1._horizontalTitleGap$2] + this.visualDensity.horizontal * 2.0;
    }
    set horizontalTitleGap(value) {
      if (!(value !== null)) dart.assertFailed(null, I[111], 1054, 12, "value != null");
      if (this[S$1._horizontalTitleGap$2] === value) {
        return;
      }
      this[S$1._horizontalTitleGap$2] = value;
      this.markNeedsLayout();
    }
    get minVerticalPadding() {
      return this[S$1._minVerticalPadding$2];
    }
    set minVerticalPadding(value) {
      if (!(value !== null)) dart.assertFailed(null, I[111], 1066, 12, "value != null");
      if (this[S$1._minVerticalPadding$2] === value) {
        return;
      }
      this[S$1._minVerticalPadding$2] = value;
      this.markNeedsLayout();
    }
    get minLeadingWidth() {
      return this[S$1._minLeadingWidth$2];
    }
    set minLeadingWidth(value) {
      if (!(value !== null)) dart.assertFailed(null, I[111], 1078, 12, "value != null");
      if (this[S$1._minLeadingWidth$2] === value) {
        return;
      }
      this[S$1._minLeadingWidth$2] = value;
      this.markNeedsLayout();
    }
    get sizedByParent() {
      return false;
    }
    static _minWidth(box, height) {
      return box == null ? 0.0 : box.getMinIntrinsicWidth(height);
    }
    static _maxWidth(box, height) {
      return box == null ? 0.0 : box.getMaxIntrinsicWidth(height);
    }
    computeMinIntrinsicWidth(height) {
      let leadingWidth = this.leading != null ? math.max(core.double, dart.nullCheck(this.leading).getMinIntrinsicWidth(height), this[S$1._minLeadingWidth$2]) + this[S$1._effectiveHorizontalTitleGap] : 0.0;
      return leadingWidth + math.max(core.num, list_tile._RenderListTile._minWidth(this.title, height), list_tile._RenderListTile._minWidth(this.subtitle, height)) + list_tile._RenderListTile._maxWidth(this.trailing, height);
    }
    computeMaxIntrinsicWidth(height) {
      let leadingWidth = this.leading != null ? math.max(core.double, dart.nullCheck(this.leading).getMaxIntrinsicWidth(height), this[S$1._minLeadingWidth$2]) + this[S$1._effectiveHorizontalTitleGap] : 0.0;
      return leadingWidth + math.max(core.num, list_tile._RenderListTile._maxWidth(this.title, height), list_tile._RenderListTile._maxWidth(this.subtitle, height)) + list_tile._RenderListTile._maxWidth(this.trailing, height);
    }
    get [S$1._defaultTileHeight]() {
      let hasSubtitle = this.subtitle != null;
      let isTwoLine = !this.isThreeLine && hasSubtitle;
      let isOneLine = !this.isThreeLine && !hasSubtitle;
      let baseDensity = this.visualDensity.baseSizeAdjustment;
      if (isOneLine) {
        return (this.isDense ? 48.0 : 56.0) + baseDensity.dy;
      }
      if (isTwoLine) {
        return (this.isDense ? 64.0 : 72.0) + baseDensity.dy;
      }
      return (this.isDense ? 76.0 : 88.0) + baseDensity.dy;
    }
    computeMinIntrinsicHeight(width) {
      let t78, t78$;
      return math.max(core.double, this[S$1._defaultTileHeight], dart.nullCheck(this.title).getMinIntrinsicHeight(width) + dart.notNull((t78$ = (t78 = this.subtitle, t78 == null ? null : t78.getMinIntrinsicHeight(width)), t78$ == null ? 0.0 : t78$)));
    }
    computeMaxIntrinsicHeight(width) {
      return this.computeMinIntrinsicHeight(width);
    }
    computeDistanceToActualBaseline(baseline) {
      if (!(this.title != null)) dart.assertFailed(null, I[111], 1147, 12, "title != null");
      let parentData = box$.BoxParentData.as(dart.nullCheck(dart.nullCheck(this.title).parentData));
      return parentData.offset.dy + dart.nullCheck(dart.nullCheck(this.title).getDistanceToActualBaseline(baseline));
    }
    static _boxBaseline(box, baseline) {
      return box.getDistanceToBaseline(baseline);
    }
    static _layoutBox(box, constraints) {
      if (box == null) {
        return ui.Size.zero;
      }
      box.layout(constraints, {parentUsesSize: true});
      return box.size;
    }
    static _positionBox(box, offset) {
      let parentData = box$.BoxParentData.as(dart.nullCheck(box.parentData));
      parentData.offset = offset;
    }
    computeDryLayout(constraints) {
      if (!this.debugCannotComputeDryLayout({reason: "Layout requires baseline metrics, which are only available after a full layout."})) dart.assertFailed(null, I[111], 1171, 12, "debugCannotComputeDryLayout(\n      reason: 'Layout requires baseline metrics, which are only available after a full layout.',\n    )");
      return ui.Size.zero;
    }
    performLayout() {
      let constraints = this.constraints;
      let hasLeading = this.leading != null;
      let hasSubtitle = this.subtitle != null;
      let hasTrailing = this.trailing != null;
      let isTwoLine = !this.isThreeLine && hasSubtitle;
      let isOneLine = !this.isThreeLine && !hasSubtitle;
      let densityAdjustment = this.visualDensity.baseSizeAdjustment;
      let maxIconHeightConstraint = new box$.BoxConstraints.new({maxHeight: (this.isDense ? 48.0 : 56.0) + densityAdjustment.dy});
      let looseConstraints = constraints.loosen();
      let iconConstraints = looseConstraints.enforce(maxIconHeightConstraint);
      let tileWidth = looseConstraints.maxWidth;
      let leadingSize = list_tile._RenderListTile._layoutBox(this.leading, iconConstraints);
      let trailingSize = list_tile._RenderListTile._layoutBox(this.trailing, iconConstraints);
      if (!(tileWidth !== leadingSize.width || tileWidth === 0.0)) dart.assertFailed("Leading widget consumes entire tile width. Please use a sized widget, " + "or consider replacing ListTile with a custom widget " + "(see https://api.flutter.dev/flutter/material/ListTile-class.html#material.ListTile.4)", I[111], 1204, 7, "tileWidth != leadingSize.width || tileWidth == 0.0");
      if (!(tileWidth !== trailingSize.width || tileWidth === 0.0)) dart.assertFailed("Trailing widget consumes entire tile width. Please use a sized widget, " + "or consider replacing ListTile with a custom widget " + "(see https://api.flutter.dev/flutter/material/ListTile-class.html#material.ListTile.4)", I[111], 1210, 7, "tileWidth != trailingSize.width || tileWidth == 0.0");
      let titleStart = hasLeading ? math.max(core.double, this[S$1._minLeadingWidth$2], leadingSize.width) + this[S$1._effectiveHorizontalTitleGap] : 0.0;
      let adjustedTrailingWidth = hasTrailing ? math.max(core.double, trailingSize.width + this[S$1._effectiveHorizontalTitleGap], 32.0) : 0.0;
      let textConstraints = looseConstraints.tighten({width: tileWidth - titleStart - adjustedTrailingWidth});
      let titleSize = list_tile._RenderListTile._layoutBox(this.title, textConstraints);
      let subtitleSize = list_tile._RenderListTile._layoutBox(this.subtitle, textConstraints);
      let titleBaseline = null;
      let subtitleBaseline = null;
      if (isTwoLine) {
        titleBaseline = this.isDense ? 28.0 : 32.0;
        subtitleBaseline = this.isDense ? 48.0 : 52.0;
      } else if (this.isThreeLine) {
        titleBaseline = this.isDense ? 22.0 : 28.0;
        subtitleBaseline = this.isDense ? 42.0 : 48.0;
      } else {
        if (!isOneLine) dart.assertFailed(null, I[111], 1237, 14, "isOneLine");
      }
      let defaultTileHeight = this[S$1._defaultTileHeight];
      let tileHeight = null;
      let titleY = null;
      let subtitleY = null;
      if (!hasSubtitle) {
        tileHeight = math.max(core.double, defaultTileHeight, titleSize.height + 2.0 * this[S$1._minVerticalPadding$2]);
        titleY = (tileHeight - titleSize.height) / 2.0;
      } else {
        if (!(this.subtitleBaselineType != null)) dart.assertFailed(null, I[111], 1249, 14, "subtitleBaselineType != null");
        titleY = dart.nullCheck(titleBaseline) - dart.nullCheck(list_tile._RenderListTile._boxBaseline(dart.nullCheck(this.title), this.titleBaselineType));
        subtitleY = dart.nullCheck(subtitleBaseline) - dart.nullCheck(list_tile._RenderListTile._boxBaseline(dart.nullCheck(this.subtitle), dart.nullCheck(this.subtitleBaselineType))) + this.visualDensity.vertical * 2.0;
        tileHeight = defaultTileHeight;
        let titleOverlap = titleY + titleSize.height - dart.notNull(subtitleY);
        if (titleOverlap > 0.0) {
          titleY = titleY - titleOverlap / 2.0;
          subtitleY = dart.notNull(subtitleY) + titleOverlap / 2.0;
        }
        if (titleY < this[S$1._minVerticalPadding$2] || dart.notNull(subtitleY) + subtitleSize.height + this[S$1._minVerticalPadding$2] > tileHeight) {
          tileHeight = titleSize.height + subtitleSize.height + 2.0 * this[S$1._minVerticalPadding$2];
          titleY = this[S$1._minVerticalPadding$2];
          subtitleY = titleSize.height + this[S$1._minVerticalPadding$2];
        }
      }
      let leadingY = null;
      let trailingY = null;
      if (tileHeight > 72.0) {
        leadingY = 16.0;
        trailingY = 16.0;
      } else {
        leadingY = math.min(core.double, (tileHeight - leadingSize.height) / 2.0, 16.0);
        trailingY = (tileHeight - trailingSize.height) / 2.0;
      }
      switch (this.textDirection) {
        case C[154] || CT.C154:
          {
            {
              if (hasLeading) {
                list_tile._RenderListTile._positionBox(dart.nullCheck(this.leading), new ui.Offset.new(tileWidth - leadingSize.width, leadingY));
              }
              list_tile._RenderListTile._positionBox(dart.nullCheck(this.title), new ui.Offset.new(adjustedTrailingWidth, titleY));
              if (hasSubtitle) {
                list_tile._RenderListTile._positionBox(dart.nullCheck(this.subtitle), new ui.Offset.new(adjustedTrailingWidth, dart.nullCheck(subtitleY)));
              }
              if (hasTrailing) {
                list_tile._RenderListTile._positionBox(dart.nullCheck(this.trailing), new ui.Offset.new(0.0, trailingY));
              }
              break;
            }
          }
        case C[155] || CT.C155:
          {
            {
              if (hasLeading) {
                list_tile._RenderListTile._positionBox(dart.nullCheck(this.leading), new ui.Offset.new(0.0, leadingY));
              }
              list_tile._RenderListTile._positionBox(dart.nullCheck(this.title), new ui.Offset.new(titleStart, titleY));
              if (hasSubtitle) {
                list_tile._RenderListTile._positionBox(dart.nullCheck(this.subtitle), new ui.Offset.new(titleStart, dart.nullCheck(subtitleY)));
              }
              if (hasTrailing) {
                list_tile._RenderListTile._positionBox(dart.nullCheck(this.trailing), new ui.Offset.new(tileWidth - trailingSize.width, trailingY));
              }
              break;
            }
          }
      }
      this.size = constraints.constrain(new ui.Size.new(tileWidth, tileHeight));
      if (!(this.size.width === constraints.constrainWidth(tileWidth))) dart.assertFailed(null, I[111], 1323, 12, "size.width == constraints.constrainWidth(tileWidth)");
      if (!(this.size.height === constraints.constrainHeight(tileHeight))) dart.assertFailed(null, I[111], 1324, 12, "size.height == constraints.constrainHeight(tileHeight)");
    }
    paint(context, offset) {
      function doPaint(child) {
        if (child != null) {
          let parentData = box$.BoxParentData.as(dart.nullCheck(child.parentData));
          context.paintChild(child, parentData.offset['+'](offset));
        }
      }
      dart.fn(doPaint, T$.RenderBoxNTovoid());
      doPaint(this.leading);
      doPaint(this.title);
      doPaint(this.subtitle);
      doPaint(this.trailing);
    }
    hitTestSelf(position) {
      return true;
    }
    hitTestChildren(result, opts) {
      let position = opts && 'position' in opts ? opts.position : null;
      if (!(position !== null)) dart.assertFailed(null, I[111], 1346, 12, "position != null");
      for (let child of this.children) {
        let parentData = box$.BoxParentData.as(dart.nullCheck(child.parentData));
        let isHit = result.addWithPaintOffset({offset: parentData.offset, position: position, hitTest: dart.fn((result, transformed) => {
            if (!transformed._equals(position['-'](parentData.offset))) dart.assertFailed(null, I[111], 1353, 18, "transformed == position - parentData.offset");
            return child.hitTest(result, {position: transformed});
          }, T$.BoxHitTestResultAndOffsetTobool())});
        if (isHit) {
          return true;
        }
      }
      return false;
    }
  };
  (list_tile._RenderListTile.new = function(opts) {
    let isDense = opts && 'isDense' in opts ? opts.isDense : null;
    let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
    let isThreeLine = opts && 'isThreeLine' in opts ? opts.isThreeLine : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let titleBaselineType = opts && 'titleBaselineType' in opts ? opts.titleBaselineType : null;
    let subtitleBaselineType = opts && 'subtitleBaselineType' in opts ? opts.subtitleBaselineType : null;
    let horizontalTitleGap = opts && 'horizontalTitleGap' in opts ? opts.horizontalTitleGap : null;
    let minVerticalPadding = opts && 'minVerticalPadding' in opts ? opts.minVerticalPadding : null;
    let minLeadingWidth = opts && 'minLeadingWidth' in opts ? opts.minLeadingWidth : null;
    if (!(isDense !== null)) dart.assertFailed(null, I[111], 946, 15, "isDense != null");
    if (!(visualDensity !== null)) dart.assertFailed(null, I[111], 947, 15, "visualDensity != null");
    if (!(isThreeLine !== null)) dart.assertFailed(null, I[111], 948, 15, "isThreeLine != null");
    if (!(textDirection !== null)) dart.assertFailed(null, I[111], 949, 15, "textDirection != null");
    if (!(titleBaselineType !== null)) dart.assertFailed(null, I[111], 950, 15, "titleBaselineType != null");
    if (!(horizontalTitleGap !== null)) dart.assertFailed(null, I[111], 951, 15, "horizontalTitleGap != null");
    if (!(minVerticalPadding !== null)) dart.assertFailed(null, I[111], 952, 15, "minVerticalPadding != null");
    if (!(minLeadingWidth !== null)) dart.assertFailed(null, I[111], 953, 15, "minLeadingWidth != null");
    this[S$1._isDense] = isDense;
    this[S$1._visualDensity] = visualDensity;
    this[S$1._isThreeLine] = isThreeLine;
    this[S$1._textDirection$5] = textDirection;
    this[S$1._titleBaselineType] = titleBaselineType;
    this[S$1._subtitleBaselineType] = subtitleBaselineType;
    this[S$1._horizontalTitleGap$2] = horizontalTitleGap;
    this[S$1._minVerticalPadding$2] = minVerticalPadding;
    this[S$1._minLeadingWidth$2] = minLeadingWidth;
    list_tile._RenderListTile.__proto__.new.call(this);
    ;
  }).prototype = list_tile._RenderListTile.prototype;
  dart.addTypeTests(list_tile._RenderListTile);
  dart.addTypeCaches(list_tile._RenderListTile);
  dart.setMethodSignature(list_tile._RenderListTile, () => ({
    __proto__: dart.getMethods(list_tile._RenderListTile.__proto__),
    computeDistanceToActualBaseline: dart.fnType(core.double, [ui.TextBaseline])
  }));
  dart.setStaticMethodSignature(list_tile._RenderListTile, () => ['_minWidth', '_maxWidth', '_boxBaseline', '_layoutBox', '_positionBox']);
  dart.setGetterSignature(list_tile._RenderListTile, () => ({
    __proto__: dart.getGetters(list_tile._RenderListTile.__proto__),
    leading: dart.nullable(box$.RenderBox),
    title: dart.nullable(box$.RenderBox),
    subtitle: dart.nullable(box$.RenderBox),
    trailing: dart.nullable(box$.RenderBox),
    isDense: core.bool,
    visualDensity: theme_data.VisualDensity,
    isThreeLine: core.bool,
    textDirection: ui.TextDirection,
    titleBaselineType: ui.TextBaseline,
    subtitleBaselineType: dart.nullable(ui.TextBaseline),
    horizontalTitleGap: core.double,
    [S$1._effectiveHorizontalTitleGap]: core.double,
    minVerticalPadding: core.double,
    minLeadingWidth: core.double,
    [S$1._defaultTileHeight]: core.double
  }));
  dart.setSetterSignature(list_tile._RenderListTile, () => ({
    __proto__: dart.getSetters(list_tile._RenderListTile.__proto__),
    isDense: core.bool,
    visualDensity: theme_data.VisualDensity,
    isThreeLine: core.bool,
    textDirection: ui.TextDirection,
    titleBaselineType: ui.TextBaseline,
    subtitleBaselineType: dart.nullable(ui.TextBaseline),
    horizontalTitleGap: core.double,
    minVerticalPadding: core.double,
    minLeadingWidth: core.double
  }));
  dart.setLibraryUri(list_tile._RenderListTile, I[110]);
  dart.setFieldSignature(list_tile._RenderListTile, () => ({
    __proto__: dart.getFields(list_tile._RenderListTile.__proto__),
    [S$1._isDense]: dart.fieldType(core.bool),
    [S$1._visualDensity]: dart.fieldType(theme_data.VisualDensity),
    [S$1._isThreeLine]: dart.fieldType(core.bool),
    [S$1._textDirection$5]: dart.fieldType(ui.TextDirection),
    [S$1._titleBaselineType]: dart.fieldType(ui.TextBaseline),
    [S$1._subtitleBaselineType]: dart.fieldType(dart.nullable(ui.TextBaseline)),
    [S$1._horizontalTitleGap$2]: dart.fieldType(core.double),
    [S$1._minVerticalPadding$2]: dart.fieldType(core.double),
    [S$1._minLeadingWidth$2]: dart.fieldType(core.double)
  }));
  const Object_Diagnosticable$36$32 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$32.new = function() {
  }).prototype = Object_Diagnosticable$36$32.prototype;
  dart.applyMixin(Object_Diagnosticable$36$32, diagnostics.Diagnosticable);
  drawer_theme.DrawerThemeData = class DrawerThemeData extends Object_Diagnosticable$36$32 {
    get backgroundColor() {
      return this[S$1.backgroundColor$16];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get scrimColor() {
      return this[S$1.scrimColor];
    }
    set scrimColor(value) {
      super.scrimColor = value;
    }
    get elevation() {
      return this[S$1.elevation$20];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get shape() {
      return this[S$1.shape$16];
    }
    set shape(value) {
      super.shape = value;
    }
    get width() {
      return this[S$1.width$3];
    }
    set width(value) {
      super.width = value;
    }
    static ['_#new#tearOff'](opts) {
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let scrimColor = opts && 'scrimColor' in opts ? opts.scrimColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let width = opts && 'width' in opts ? opts.width : null;
      return new drawer_theme.DrawerThemeData.new({backgroundColor: backgroundColor, scrimColor: scrimColor, elevation: elevation, shape: shape, width: width});
    }
    copyWith(opts) {
      let t78, t78$, t78$0, t78$1, t78$2;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let scrimColor = opts && 'scrimColor' in opts ? opts.scrimColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let width = opts && 'width' in opts ? opts.width : null;
      return new drawer_theme.DrawerThemeData.new({backgroundColor: (t78 = backgroundColor, t78 == null ? this.backgroundColor : t78), scrimColor: (t78$ = scrimColor, t78$ == null ? this.scrimColor : t78$), elevation: (t78$0 = elevation, t78$0 == null ? this.elevation : t78$0), shape: (t78$1 = shape, t78$1 == null ? this.shape : t78$1), width: (t78$2 = width, t78$2 == null ? this.width : t78$2)});
    }
    static lerp(a, b, t) {
      let t78, t78$, t78$0, t78$1, t78$2, t78$3, t78$4, t78$5, t78$6, t78$7;
      if (!(t !== null)) dart.assertFailed(null, I[112], 81, 12, "t != null");
      if (a == null && b == null) {
        return null;
      }
      return new drawer_theme.DrawerThemeData.new({backgroundColor: ui.Color.lerp((t78 = a, t78 == null ? null : t78.backgroundColor), (t78$ = b, t78$ == null ? null : t78$.backgroundColor), t), scrimColor: ui.Color.lerp((t78$0 = a, t78$0 == null ? null : t78$0.scrimColor), (t78$1 = b, t78$1 == null ? null : t78$1.scrimColor), t), elevation: ui.lerpDouble((t78$2 = a, t78$2 == null ? null : t78$2.elevation), (t78$3 = b, t78$3 == null ? null : t78$3.elevation), t), shape: borders.ShapeBorder.lerp((t78$4 = a, t78$4 == null ? null : t78$4.shape), (t78$5 = b, t78$5 == null ? null : t78$5.shape), t), width: ui.lerpDouble((t78$6 = a, t78$6 == null ? null : t78$6.width), (t78$7 = b, t78$7 == null ? null : t78$7.width), t)});
    }
    get hashCode() {
      return core.Object.hash(this.backgroundColor, this.scrimColor, this.elevation, this.shape, this.width);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      if (!other[S.$runtimeType]._equals(this[S.$runtimeType])) {
        return false;
      }
      return drawer_theme.DrawerThemeData.is(other) && dart.equals(other.backgroundColor, this.backgroundColor) && dart.equals(other.scrimColor, this.scrimColor) && other.elevation == this.elevation && dart.equals(other.shape, this.shape) && other.width == this.width;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new colors.ColorProperty.new("backgroundColor", this.backgroundColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("scrimColor", this.scrimColor, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("elevation", this.elevation, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfShapeBorder()).new("shape", this.shape, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("width", this.width, {defaultValue: null}));
    }
  };
  (drawer_theme.DrawerThemeData.new = function(opts) {
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let scrimColor = opts && 'scrimColor' in opts ? opts.scrimColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let width = opts && 'width' in opts ? opts.width : null;
    this[S$1.backgroundColor$16] = backgroundColor;
    this[S$1.scrimColor] = scrimColor;
    this[S$1.elevation$20] = elevation;
    this[S$1.shape$16] = shape;
    this[S$1.width$3] = width;
    ;
  }).prototype = drawer_theme.DrawerThemeData.prototype;
  dart.addTypeTests(drawer_theme.DrawerThemeData);
  dart.addTypeCaches(drawer_theme.DrawerThemeData);
  dart.setMethodSignature(drawer_theme.DrawerThemeData, () => ({
    __proto__: dart.getMethods(drawer_theme.DrawerThemeData.__proto__),
    copyWith: dart.fnType(drawer_theme.DrawerThemeData, [], {backgroundColor: dart.nullable(ui.Color), elevation: dart.nullable(core.double), scrimColor: dart.nullable(ui.Color), shape: dart.nullable(borders.ShapeBorder), width: dart.nullable(core.double)}, {})
  }));
  dart.setStaticMethodSignature(drawer_theme.DrawerThemeData, () => ['lerp']);
  dart.setLibraryUri(drawer_theme.DrawerThemeData, I[113]);
  dart.setFieldSignature(drawer_theme.DrawerThemeData, () => ({
    __proto__: dart.getFields(drawer_theme.DrawerThemeData.__proto__),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    scrimColor: dart.finalFieldType(dart.nullable(ui.Color)),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    width: dart.finalFieldType(dart.nullable(core.double))
  }));
  dart.defineExtensionMethods(drawer_theme.DrawerThemeData, ['_equals']);
  dart.defineExtensionAccessors(drawer_theme.DrawerThemeData, ['hashCode']);
  drawer_theme.DrawerTheme = class DrawerTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[S$1.data$22];
    }
    set data(value) {
      super.data = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let data = opts && 'data' in opts ? opts.data : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new drawer_theme.DrawerTheme.new({key: key, data: data, child: child, $creationLocationd_0dea112b090073317d4: C[871] || CT.C871});
    }
    static of(context) {
      let t78, t78$;
      let drawerTheme = context.dependOnInheritedWidgetOfExactType(drawer_theme.DrawerTheme);
      t78$ = (t78 = drawerTheme, t78 == null ? null : t78.data);
      return t78$ == null ? theme$.Theme.of(context).drawerTheme : t78$;
    }
    wrap(context, child) {
      return new drawer_theme.DrawerTheme.new({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C[872] || CT.C872});
    }
    updateShouldNotify(oldWidget) {
      drawer_theme.DrawerTheme.as(oldWidget);
      return !this.data._equals(oldWidget.data);
    }
  };
  (drawer_theme.DrawerTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.data$22] = data;
    if (!(data !== null)) dart.assertFailed(null, I[112], 144, 15, "data != null");
    drawer_theme.DrawerTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = drawer_theme.DrawerTheme.prototype;
  dart.addTypeTests(drawer_theme.DrawerTheme);
  dart.addTypeCaches(drawer_theme.DrawerTheme);
  dart.setMethodSignature(drawer_theme.DrawerTheme, () => ({
    __proto__: dart.getMethods(drawer_theme.DrawerTheme.__proto__),
    wrap: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget]),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setStaticMethodSignature(drawer_theme.DrawerTheme, () => ['of']);
  dart.setLibraryUri(drawer_theme.DrawerTheme, I[113]);
  dart.setFieldSignature(drawer_theme.DrawerTheme, () => ({
    __proto__: dart.getFields(drawer_theme.DrawerTheme.__proto__),
    data: dart.finalFieldType(drawer_theme.DrawerThemeData)
  }));
  drawer.DrawerAlignment = class DrawerAlignment extends core._Enum {
    toString() {
      return "DrawerAlignment." + this[S._name];
    }
  };
  (drawer.DrawerAlignment.new = function(index, name) {
    drawer.DrawerAlignment.__proto__.new.call(this, index, name);
    ;
  }).prototype = drawer.DrawerAlignment.prototype;
  dart.addTypeTests(drawer.DrawerAlignment);
  dart.addTypeCaches(drawer.DrawerAlignment);
  dart.setLibraryUri(drawer.DrawerAlignment, I[114]);
  dart.setStaticFieldSignature(drawer.DrawerAlignment, () => ['values', 'start', 'end']);
  dart.defineExtensionMethods(drawer.DrawerAlignment, ['toString']);
  dart.defineLazy(drawer.DrawerAlignment, {
    /*drawer.DrawerAlignment.values*/get values() {
      return C[873] || CT.C873;
    },
    /*drawer.DrawerAlignment.start*/get start() {
      return C[874] || CT.C874;
    },
    /*drawer.DrawerAlignment.end*/get end() {
      return C[875] || CT.C875;
    }
  }, false);
  drawer.Drawer = class Drawer extends framework.StatelessWidget {
    get backgroundColor() {
      return this[S$1.backgroundColor$17];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get elevation() {
      return this[S$1.elevation$21];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get shape() {
      return this[S$1.shape$17];
    }
    set shape(value) {
      super.shape = value;
    }
    get width() {
      return this[S$1.width$4];
    }
    set width(value) {
      super.width = value;
    }
    get child() {
      return this[S$1.child$24];
    }
    set child(value) {
      super.child = value;
    }
    get semanticLabel() {
      return this[S$1.semanticLabel];
    }
    set semanticLabel(value) {
      super.semanticLabel = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let width = opts && 'width' in opts ? opts.width : null;
      let child = opts && 'child' in opts ? opts.child : null;
      let semanticLabel = opts && 'semanticLabel' in opts ? opts.semanticLabel : null;
      return new drawer.Drawer.new({key: key, backgroundColor: backgroundColor, elevation: elevation, shape: shape, width: width, child: child, semanticLabel: semanticLabel, $creationLocationd_0dea112b090073317d4: C[876] || CT.C876});
    }
    build(context) {
      let t80, t80$, t80$0, t80$1, t80$2, t80$3, t80$4;
      if (!debug$1.debugCheckHasMaterialLocalizations(context)) dart.assertFailed(null, I[115], 203, 12, "debugCheckHasMaterialLocalizations(context)");
      let drawerTheme = drawer_theme.DrawerTheme.of(context);
      let label = this.semanticLabel;
      switch (theme$.Theme.of(context).platform) {
        case C[33] || CT.C33:
        case C[34] || CT.C34:
          {
            break;
          }
        case C[29] || CT.C29:
        case C[30] || CT.C30:
        case C[31] || CT.C31:
        case C[32] || CT.C32:
          {
            label = (t80 = this.semanticLabel, t80 == null ? material_localizations.MaterialLocalizations.of(context).drawerLabel : t80);
          }
      }
      return new basic.Semantics.new({scopesRoute: true, namesRoute: true, explicitChildNodes: true, label: label, child: new basic.ConstrainedBox.new({constraints: new box$.BoxConstraints.expand({width: (t80$0 = (t80$ = this.width, t80$ == null ? drawerTheme.width : t80$), t80$0 == null ? 304 : t80$0)}), child: new material.Material.new({color: (t80$1 = this.backgroundColor, t80$1 == null ? drawerTheme.backgroundColor : t80$1), elevation: (t80$3 = (t80$2 = this.elevation, t80$2 == null ? drawerTheme.elevation : t80$2), t80$3 == null ? 16.0 : t80$3), shape: (t80$4 = this.shape, t80$4 == null ? drawerTheme.shape : t80$4), child: this.child, $creationLocationd_0dea112b090073317d4: C[877] || CT.C877}), $creationLocationd_0dea112b090073317d4: C[878] || CT.C878}), $creationLocationd_0dea112b090073317d4: C[879] || CT.C879});
    }
  };
  (drawer.Drawer.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let width = opts && 'width' in opts ? opts.width : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let semanticLabel = opts && 'semanticLabel' in opts ? opts.semanticLabel : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.backgroundColor$17] = backgroundColor;
    this[S$1.elevation$21] = elevation;
    this[S$1.shape$17] = shape;
    this[S$1.width$4] = width;
    this[S$1.child$24] = child;
    this[S$1.semanticLabel] = semanticLabel;
    if (!(elevation == null || dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, I[115], 151, 15, "elevation == null || elevation >= 0.0");
    drawer.Drawer.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = drawer.Drawer.prototype;
  dart.addTypeTests(drawer.Drawer);
  dart.addTypeCaches(drawer.Drawer);
  dart.setMethodSignature(drawer.Drawer, () => ({
    __proto__: dart.getMethods(drawer.Drawer.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(drawer.Drawer, I[114]);
  dart.setFieldSignature(drawer.Drawer, () => ({
    __proto__: dart.getFields(drawer.Drawer.__proto__),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    width: dart.finalFieldType(dart.nullable(core.double)),
    child: dart.finalFieldType(dart.nullable(framework.Widget)),
    semanticLabel: dart.finalFieldType(dart.nullable(core.String))
  }));
  drawer.DrawerController = class DrawerController extends framework.StatefulWidget {
    get child() {
      return this[S$1.child$25];
    }
    set child(value) {
      super.child = value;
    }
    get alignment() {
      return this[S$1.alignment$4];
    }
    set alignment(value) {
      super.alignment = value;
    }
    get drawerCallback() {
      return this[S$1.drawerCallback];
    }
    set drawerCallback(value) {
      super.drawerCallback = value;
    }
    get dragStartBehavior() {
      return this[S$1.dragStartBehavior$2];
    }
    set dragStartBehavior(value) {
      super.dragStartBehavior = value;
    }
    get scrimColor() {
      return this[S$1.scrimColor$1];
    }
    set scrimColor(value) {
      super.scrimColor = value;
    }
    get enableOpenDragGesture() {
      return this[S$1.enableOpenDragGesture];
    }
    set enableOpenDragGesture(value) {
      super.enableOpenDragGesture = value;
    }
    get edgeDragWidth() {
      return this[S$1.edgeDragWidth];
    }
    set edgeDragWidth(value) {
      super.edgeDragWidth = value;
    }
    get isDrawerOpen() {
      return this[S$1.isDrawerOpen];
    }
    set isDrawerOpen(value) {
      super.isDrawerOpen = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let child = opts && 'child' in opts ? opts.child : null;
      let alignment = opts && 'alignment' in opts ? opts.alignment : null;
      let isDrawerOpen = opts && 'isDrawerOpen' in opts ? opts.isDrawerOpen : false;
      let drawerCallback = opts && 'drawerCallback' in opts ? opts.drawerCallback : null;
      let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C[254] || CT.C254;
      let scrimColor = opts && 'scrimColor' in opts ? opts.scrimColor : null;
      let edgeDragWidth = opts && 'edgeDragWidth' in opts ? opts.edgeDragWidth : null;
      let enableOpenDragGesture = opts && 'enableOpenDragGesture' in opts ? opts.enableOpenDragGesture : true;
      return new drawer.DrawerController.new({key: key, child: child, alignment: alignment, isDrawerOpen: isDrawerOpen, drawerCallback: drawerCallback, dragStartBehavior: dragStartBehavior, scrimColor: scrimColor, edgeDragWidth: edgeDragWidth, enableOpenDragGesture: enableOpenDragGesture, $creationLocationd_0dea112b090073317d4: C[880] || CT.C880});
    }
    createState() {
      return new drawer.DrawerControllerState.new();
    }
  };
  (drawer.DrawerController.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : null;
    let isDrawerOpen = opts && 'isDrawerOpen' in opts ? opts.isDrawerOpen : false;
    let drawerCallback = opts && 'drawerCallback' in opts ? opts.drawerCallback : null;
    let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C[254] || CT.C254;
    let scrimColor = opts && 'scrimColor' in opts ? opts.scrimColor : null;
    let edgeDragWidth = opts && 'edgeDragWidth' in opts ? opts.edgeDragWidth : null;
    let enableOpenDragGesture = opts && 'enableOpenDragGesture' in opts ? opts.enableOpenDragGesture : true;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.child$25] = child;
    this[S$1.alignment$4] = alignment;
    this[S$1.isDrawerOpen] = isDrawerOpen;
    this[S$1.drawerCallback] = drawerCallback;
    this[S$1.dragStartBehavior$2] = dragStartBehavior;
    this[S$1.scrimColor$1] = scrimColor;
    this[S$1.edgeDragWidth] = edgeDragWidth;
    this[S$1.enableOpenDragGesture] = enableOpenDragGesture;
    if (!(child !== null)) dart.assertFailed(null, I[115], 268, 15, "child != null");
    if (!(dragStartBehavior !== null)) dart.assertFailed(null, I[115], 269, 15, "dragStartBehavior != null");
    if (!(alignment !== null)) dart.assertFailed(null, I[115], 270, 15, "alignment != null");
    drawer.DrawerController.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = drawer.DrawerController.prototype;
  dart.addTypeTests(drawer.DrawerController);
  dart.addTypeCaches(drawer.DrawerController);
  dart.setMethodSignature(drawer.DrawerController, () => ({
    __proto__: dart.getMethods(drawer.DrawerController.__proto__),
    createState: dart.fnType(drawer.DrawerControllerState, [])
  }));
  dart.setLibraryUri(drawer.DrawerController, I[114]);
  dart.setFieldSignature(drawer.DrawerController, () => ({
    __proto__: dart.getFields(drawer.DrawerController.__proto__),
    child: dart.finalFieldType(framework.Widget),
    alignment: dart.finalFieldType(drawer.DrawerAlignment),
    drawerCallback: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.bool]))),
    dragStartBehavior: dart.finalFieldType(recognizer.DragStartBehavior),
    scrimColor: dart.finalFieldType(dart.nullable(ui.Color)),
    enableOpenDragGesture: dart.finalFieldType(core.bool),
    edgeDragWidth: dart.finalFieldType(dart.nullable(core.double)),
    isDrawerOpen: dart.finalFieldType(core.bool)
  }));
  const State_SingleTickerProviderStateMixin$36$1 = class State_SingleTickerProviderStateMixin extends framework.State$(drawer.DrawerController) {};
  (State_SingleTickerProviderStateMixin$36$1.new = function() {
    ticker_provider.SingleTickerProviderStateMixin$(drawer.DrawerController)[dart.mixinNew].call(this);
    State_SingleTickerProviderStateMixin$36$1.__proto__.new.call(this);
  }).prototype = State_SingleTickerProviderStateMixin$36$1.prototype;
  dart.applyMixin(State_SingleTickerProviderStateMixin$36$1, ticker_provider.SingleTickerProviderStateMixin$(drawer.DrawerController));
  drawer.DrawerControllerState = class DrawerControllerState extends State_SingleTickerProviderStateMixin$36$1 {
    initState() {
      let t80;
      super.initState();
      this[S$1._controller$5] = new animation_controller.AnimationController.new({value: this.widget.isDrawerOpen ? 1.0 : 0.0, duration: drawer._kBaseSettleDuration, vsync: this});
      t80 = this[S$1._controller$5];
      (() => {
        t80.addListener(dart.bind(this, S$1._animationChanged));
        t80.addStatusListener(dart.bind(this, S$1._animationStatusChanged));
        return t80;
      })();
    }
    dispose() {
      let t80;
      t80 = this[S$1._historyEntry];
      t80 == null ? null : t80.remove();
      this[S$1._controller$5].dispose();
      super.dispose();
    }
    didChangeDependencies() {
      super.didChangeDependencies();
      this[S$1._scrimColorTween] = this[S$1._buildScrimColorTween]();
    }
    didUpdateWidget(oldWidget) {
      drawer.DrawerController.as(oldWidget);
      super.didUpdateWidget(oldWidget);
      if (!dart.equals(this.widget.scrimColor, oldWidget.scrimColor)) {
        this[S$1._scrimColorTween] = this[S$1._buildScrimColorTween]();
      }
      if (this.widget.isDrawerOpen !== oldWidget.isDrawerOpen) {
        switch (this[S$1._controller$5].status) {
          case C[105] || CT.C105:
          case C[102] || CT.C102:
            {
              this[S$1._controller$5].value = this.widget.isDrawerOpen ? 1.0 : 0.0;
              break;
            }
          case C[103] || CT.C103:
          case C[104] || CT.C104:
            {
              break;
            }
        }
      }
    }
    [S$1._animationChanged]() {
      this.setState(dart.fn(() => {
      }, T$.VoidTovoid()));
    }
    [S$1._ensureHistoryEntry]() {
      if (this[S$1._historyEntry] == null) {
        let route = routes.ModalRoute.of(T$.ObjectN(), this.context);
        if (route != null) {
          this[S$1._historyEntry] = new routes.LocalHistoryEntry.new({onRemove: dart.bind(this, S$1._handleHistoryEntryRemoved), impliesAppBarDismissal: false});
          route.addLocalHistoryEntry(dart.nullCheck(this[S$1._historyEntry]));
          focus_scope.FocusScope.of(this.context).setFirstFocus(this[S$1._focusScopeNode]);
        }
      }
    }
    [S$1._animationStatusChanged](status) {
      let t80;
      switch (status) {
        case C[103] || CT.C103:
          {
            this[S$1._ensureHistoryEntry]();
            break;
          }
        case C[104] || CT.C104:
          {
            t80 = this[S$1._historyEntry];
            t80 == null ? null : t80.remove();
            this[S$1._historyEntry] = null;
            break;
          }
        case C[102] || CT.C102:
          {
            break;
          }
        case C[105] || CT.C105:
          {
            break;
          }
      }
    }
    [S$1._handleHistoryEntryRemoved]() {
      this[S$1._historyEntry] = null;
      this.close();
    }
    get [S$1._controller$5]() {
      let t80;
      t80 = this[S$1.__DrawerControllerState__controller];
      return t80 == null ? dart.throw(new _internal.LateError.fieldNI("_controller")) : t80;
    }
    set [S$1._controller$5](library$32package$58flutter$47src$47material$47drawer$46dart$58$58_controller$35param) {
      this[S$1.__DrawerControllerState__controller] = library$32package$58flutter$47src$47material$47drawer$46dart$58$58_controller$35param;
    }
    [S$1._handleDragDown](details) {
      this[S$1._controller$5].stop();
      this[S$1._ensureHistoryEntry]();
    }
    [S$1._handleDragCancel]() {
      if (this[S$1._controller$5].isDismissed || this[S$1._controller$5].isAnimating) {
        return;
      }
      if (this[S$1._controller$5].value < 0.5) {
        this.close();
      } else {
        this.open();
      }
    }
    get [S$1._width$1]() {
      let t80;
      let box = T$.RenderBoxN().as((t80 = this[S$1._drawerKey].currentContext, t80 == null ? null : t80.findRenderObject()));
      if (box != null) {
        return box.size.width;
      }
      return 304;
    }
    [S$1._move](details) {
      let t80, t80$;
      let delta = dart.nullCheck(details.primaryDelta) / this[S$1._width$1];
      switch (this.widget.alignment) {
        case C[874] || CT.C874:
          {
            break;
          }
        case C[875] || CT.C875:
          {
            delta = -delta;
            break;
          }
      }
      switch (basic.Directionality.of(this.context)) {
        case C[154] || CT.C154:
          {
            t80 = this[S$1._controller$5];
            t80.value = t80.value - delta;
            break;
          }
        case C[155] || CT.C155:
          {
            t80$ = this[S$1._controller$5];
            t80$.value = t80$.value + delta;
            break;
          }
      }
      let opened = this[S$1._controller$5].value > 0.5;
      if (opened !== this[S$1._previouslyOpened] && this.widget.drawerCallback != null) {
        dart.nullCheck(this.widget.drawerCallback)(opened);
      }
      this[S$1._previouslyOpened] = opened;
    }
    [S$1._settle](details) {
      let t80, t80$;
      if (this[S$1._controller$5].isDismissed) {
        return;
      }
      if (details.velocity.pixelsPerSecond.dx[S.$abs]() >= 365) {
        let visualVelocity = details.velocity.pixelsPerSecond.dx / this[S$1._width$1];
        switch (this.widget.alignment) {
          case C[874] || CT.C874:
            {
              break;
            }
          case C[875] || CT.C875:
            {
              visualVelocity = -visualVelocity;
              break;
            }
        }
        switch (basic.Directionality.of(this.context)) {
          case C[154] || CT.C154:
            {
              this[S$1._controller$5].fling({velocity: -visualVelocity});
              t80 = this.widget.drawerCallback;
              t80 == null ? null : t80(visualVelocity < 0.0);
              break;
            }
          case C[155] || CT.C155:
            {
              this[S$1._controller$5].fling({velocity: visualVelocity});
              t80$ = this.widget.drawerCallback;
              t80$ == null ? null : t80$(visualVelocity > 0.0);
              break;
            }
        }
      } else if (this[S$1._controller$5].value < 0.5) {
        this.close();
      } else {
        this.open();
      }
    }
    open() {
      let t80;
      this[S$1._controller$5].fling();
      t80 = this.widget.drawerCallback;
      t80 == null ? null : t80(true);
    }
    close() {
      let t80;
      this[S$1._controller$5].fling({velocity: -1.0});
      t80 = this.widget.drawerCallback;
      t80 == null ? null : t80(false);
    }
    get [S$1._scrimColorTween]() {
      let t80;
      t80 = this[S$1.__DrawerControllerState__scrimColorTween];
      return t80 == null ? dart.throw(new _internal.LateError.fieldNI("_scrimColorTween")) : t80;
    }
    set [S$1._scrimColorTween](library$32package$58flutter$47src$47material$47drawer$46dart$58$58_scrimColorTween$35param) {
      this[S$1.__DrawerControllerState__scrimColorTween] = library$32package$58flutter$47src$47material$47drawer$46dart$58$58_scrimColorTween$35param;
    }
    [S$1._buildScrimColorTween]() {
      let t80, t80$;
      return new tween.ColorTween.new({begin: colors$.Colors.transparent, end: (t80$ = (t80 = this.widget.scrimColor, t80 == null ? drawer_theme.DrawerTheme.of(this.context).scrimColor : t80), t80$ == null ? colors$.Colors.black54 : t80$)});
    }
    get [S$1._drawerOuterAlignment]() {
      if (!(this.widget.alignment !== null)) dart.assertFailed(null, I[115], 546, 12, "widget.alignment != null");
      switch (this.widget.alignment) {
        case C[874] || CT.C874:
          {
            return alignment.AlignmentDirectional.centerStart;
          }
        case C[875] || CT.C875:
          {
            return alignment.AlignmentDirectional.centerEnd;
          }
      }
    }
    get [S$1._drawerInnerAlignment]() {
      if (!(this.widget.alignment !== null)) dart.assertFailed(null, I[115], 556, 12, "widget.alignment != null");
      switch (this.widget.alignment) {
        case C[874] || CT.C874:
          {
            return alignment.AlignmentDirectional.centerEnd;
          }
        case C[875] || CT.C875:
          {
            return alignment.AlignmentDirectional.centerStart;
          }
      }
    }
    [S$1._buildDrawer](context) {
      let drawerIsStart = this.widget.alignment === drawer.DrawerAlignment.start;
      let padding = media_query.MediaQuery.of(context).padding;
      let textDirection = basic.Directionality.of(context);
      let isDesktop = null;
      switch (theme$.Theme.of(context).platform) {
        case C[29] || CT.C29:
        case C[33] || CT.C33:
        case C[30] || CT.C30:
          {
            isDesktop = false;
            break;
          }
        case C[34] || CT.C34:
        case C[31] || CT.C31:
        case C[32] || CT.C32:
          {
            isDesktop = true;
            break;
          }
      }
      let dragAreaWidth = this.widget.edgeDragWidth;
      if (this.widget.edgeDragWidth == null) {
        switch (textDirection) {
          case C[155] || CT.C155:
            {
              dragAreaWidth = 20 + (drawerIsStart ? padding.left : padding.right);
              break;
            }
          case C[154] || CT.C154:
            {
              dragAreaWidth = 20 + (drawerIsStart ? padding.right : padding.left);
              break;
            }
        }
      }
      if (this[S$1._controller$5].status === animation$.AnimationStatus.dismissed) {
        if (this.widget.enableOpenDragGesture && !isDesktop) {
          return new basic.Align.new({alignment: this[S$1._drawerOuterAlignment], child: new gesture_detector.GestureDetector.new({key: this[S$1._gestureDetectorKey], onHorizontalDragUpdate: dart.bind(this, S$1._move), onHorizontalDragEnd: dart.bind(this, S$1._settle), behavior: proxy_box.HitTestBehavior.translucent, excludeFromSemantics: true, dragStartBehavior: this.widget.dragStartBehavior, child: new container.Container.new({width: dragAreaWidth, $creationLocationd_0dea112b090073317d4: C[881] || CT.C881}), $creationLocationd_0dea112b090073317d4: C[882] || CT.C882}), $creationLocationd_0dea112b090073317d4: C[883] || CT.C883});
        } else {
          return C[884] || CT.C884;
        }
      } else {
        let platformHasBackButton = null;
        switch (theme$.Theme.of(context).platform) {
          case C[29] || CT.C29:
            {
              platformHasBackButton = true;
              break;
            }
          case C[33] || CT.C33:
          case C[34] || CT.C34:
          case C[30] || CT.C30:
          case C[31] || CT.C31:
          case C[32] || CT.C32:
            {
              platformHasBackButton = false;
              break;
            }
        }
        if (!(platformHasBackButton !== null)) dart.assertFailed(null, I[115], 628, 14, "platformHasBackButton != null");
        let child = new basic.RepaintBoundary.new({child: new basic.Stack.new({children: T$.JSArrayOfWidget().of([new basic.BlockSemantics.new({child: new basic.ExcludeSemantics.new({excluding: platformHasBackButton, child: new gesture_detector.GestureDetector.new({onTap: dart.bind(this, 'close'), child: new basic.Semantics.new({label: material_localizations.MaterialLocalizations.of(context).modalBarrierDismissLabel, child: new container.Container.new({color: this[S$1._scrimColorTween].evaluate(this[S$1._controller$5]), $creationLocationd_0dea112b090073317d4: C[886] || CT.C886}), $creationLocationd_0dea112b090073317d4: C[887] || CT.C887}), $creationLocationd_0dea112b090073317d4: C[888] || CT.C888}), $creationLocationd_0dea112b090073317d4: C[889] || CT.C889}), $creationLocationd_0dea112b090073317d4: C[890] || CT.C890}), new basic.Align.new({alignment: this[S$1._drawerOuterAlignment], child: new basic.Align.new({alignment: this[S$1._drawerInnerAlignment], widthFactor: this[S$1._controller$5].value, child: new basic.RepaintBoundary.new({child: new focus_scope.FocusScope.new({key: this[S$1._drawerKey], node: this[S$1._focusScopeNode], child: this.widget.child, $creationLocationd_0dea112b090073317d4: C[891] || CT.C891}), $creationLocationd_0dea112b090073317d4: C[892] || CT.C892}), $creationLocationd_0dea112b090073317d4: C[893] || CT.C893}), $creationLocationd_0dea112b090073317d4: C[894] || CT.C894})]), $creationLocationd_0dea112b090073317d4: C[895] || CT.C895}), $creationLocationd_0dea112b090073317d4: C[896] || CT.C896});
        if (isDesktop) {
          return child;
        }
        return new gesture_detector.GestureDetector.new({key: this[S$1._gestureDetectorKey], onHorizontalDragDown: dart.bind(this, S$1._handleDragDown), onHorizontalDragUpdate: dart.bind(this, S$1._move), onHorizontalDragEnd: dart.bind(this, S$1._settle), onHorizontalDragCancel: dart.bind(this, S$1._handleDragCancel), excludeFromSemantics: true, dragStartBehavior: this.widget.dragStartBehavior, child: child, $creationLocationd_0dea112b090073317d4: C[897] || CT.C897});
      }
    }
    build(context) {
      if (!debug$1.debugCheckHasMaterialLocalizations(context)) dart.assertFailed(null, I[115], 685, 12, "debugCheckHasMaterialLocalizations(context)");
      return list_tile_theme.ListTileTheme.merge({style: list_tile.ListTileStyle.drawer, child: this[S$1._buildDrawer](context)});
    }
    static ['_#new#tearOff']() {
      return new drawer.DrawerControllerState.new();
    }
  };
  (drawer.DrawerControllerState.new = function() {
    this[S$1._historyEntry] = null;
    this[S$1._focusScopeNode] = new focus_manager.FocusScopeNode.new();
    this[S$1.__DrawerControllerState__controller] = null;
    this[S$1._drawerKey] = T$.GlobalKeyOfStateOfStatefulWidget().new();
    this[S$1._previouslyOpened] = false;
    this[S$1.__DrawerControllerState__scrimColorTween] = null;
    this[S$1._gestureDetectorKey] = T$.GlobalKeyOfStateOfStatefulWidget().new();
    drawer.DrawerControllerState.__proto__.new.call(this);
    ;
  }).prototype = drawer.DrawerControllerState.prototype;
  dart.addTypeTests(drawer.DrawerControllerState);
  dart.addTypeCaches(drawer.DrawerControllerState);
  dart.setMethodSignature(drawer.DrawerControllerState, () => ({
    __proto__: dart.getMethods(drawer.DrawerControllerState.__proto__),
    [S$1._animationChanged]: dart.fnType(dart.void, []),
    [S$1._ensureHistoryEntry]: dart.fnType(dart.void, []),
    [S$1._animationStatusChanged]: dart.fnType(dart.void, [animation$.AnimationStatus]),
    [S$1._handleHistoryEntryRemoved]: dart.fnType(dart.void, []),
    [S$1._handleDragDown]: dart.fnType(dart.void, [drag_details.DragDownDetails]),
    [S$1._handleDragCancel]: dart.fnType(dart.void, []),
    [S$1._move]: dart.fnType(dart.void, [drag_details.DragUpdateDetails]),
    [S$1._settle]: dart.fnType(dart.void, [drag_details.DragEndDetails]),
    open: dart.fnType(dart.void, []),
    close: dart.fnType(dart.void, []),
    [S$1._buildScrimColorTween]: dart.fnType(tween.ColorTween, []),
    [S$1._buildDrawer]: dart.fnType(framework.Widget, [framework.BuildContext]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(drawer.DrawerControllerState, () => ({
    __proto__: dart.getGetters(drawer.DrawerControllerState.__proto__),
    [S$1._controller$5]: animation_controller.AnimationController,
    [S$1._width$1]: core.double,
    [S$1._scrimColorTween]: tween.ColorTween,
    [S$1._drawerOuterAlignment]: alignment.AlignmentDirectional,
    [S$1._drawerInnerAlignment]: alignment.AlignmentDirectional
  }));
  dart.setSetterSignature(drawer.DrawerControllerState, () => ({
    __proto__: dart.getSetters(drawer.DrawerControllerState.__proto__),
    [S$1._controller$5]: animation_controller.AnimationController,
    [S$1._scrimColorTween]: tween.ColorTween
  }));
  dart.setLibraryUri(drawer.DrawerControllerState, I[114]);
  dart.setFieldSignature(drawer.DrawerControllerState, () => ({
    __proto__: dart.getFields(drawer.DrawerControllerState.__proto__),
    [S$1._historyEntry]: dart.fieldType(dart.nullable(routes.LocalHistoryEntry)),
    [S$1._focusScopeNode]: dart.finalFieldType(focus_manager.FocusScopeNode),
    [S$1.__DrawerControllerState__controller]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S$1._drawerKey]: dart.finalFieldType(framework.GlobalKey$(framework.State$(framework.StatefulWidget))),
    [S$1._previouslyOpened]: dart.fieldType(core.bool),
    [S$1.__DrawerControllerState__scrimColorTween]: dart.fieldType(dart.nullable(tween.ColorTween)),
    [S$1._gestureDetectorKey]: dart.finalFieldType(framework.GlobalKey$(framework.State$(framework.StatefulWidget)))
  }));
  dart.defineLazy(drawer, {
    /*drawer._kWidth*/get _kWidth() {
      return 304;
    },
    /*drawer._kEdgeDragWidth*/get _kEdgeDragWidth() {
      return 20;
    },
    /*drawer._kMinFlingVelocity*/get _kMinFlingVelocity() {
      return 365;
    },
    /*drawer._kBaseSettleDuration*/get _kBaseSettleDuration() {
      return C[898] || CT.C898;
    }
  }, false);
  bottom_sheet.BottomSheet = class BottomSheet extends framework.StatefulWidget {
    get animationController() {
      return this[S$1.animationController];
    }
    set animationController(value) {
      super.animationController = value;
    }
    get onClosing() {
      return this[S$1.onClosing];
    }
    set onClosing(value) {
      super.onClosing = value;
    }
    get builder() {
      return this[S$1.builder$4];
    }
    set builder(value) {
      super.builder = value;
    }
    get enableDrag() {
      return this[S$1.enableDrag];
    }
    set enableDrag(value) {
      super.enableDrag = value;
    }
    get onDragStart() {
      return this[S$1.onDragStart];
    }
    set onDragStart(value) {
      super.onDragStart = value;
    }
    get onDragEnd() {
      return this[S$1.onDragEnd];
    }
    set onDragEnd(value) {
      super.onDragEnd = value;
    }
    get backgroundColor() {
      return this[S$1.backgroundColor$18];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get elevation() {
      return this[S$1.elevation$22];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get shape() {
      return this[S$1.shape$18];
    }
    set shape(value) {
      super.shape = value;
    }
    get clipBehavior() {
      return this[S$1.clipBehavior$7];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    get constraints() {
      return this[S$1.constraints$5];
    }
    set constraints(value) {
      super.constraints = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let animationController = opts && 'animationController' in opts ? opts.animationController : null;
      let enableDrag = opts && 'enableDrag' in opts ? opts.enableDrag : true;
      let onDragStart = opts && 'onDragStart' in opts ? opts.onDragStart : null;
      let onDragEnd = opts && 'onDragEnd' in opts ? opts.onDragEnd : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
      let constraints = opts && 'constraints' in opts ? opts.constraints : null;
      let onClosing = opts && 'onClosing' in opts ? opts.onClosing : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      return new bottom_sheet.BottomSheet.new({key: key, animationController: animationController, enableDrag: enableDrag, onDragStart: onDragStart, onDragEnd: onDragEnd, backgroundColor: backgroundColor, elevation: elevation, shape: shape, clipBehavior: clipBehavior, constraints: constraints, onClosing: onClosing, builder: builder, $creationLocationd_0dea112b090073317d4: C[899] || CT.C899});
    }
    createState() {
      return new bottom_sheet._BottomSheetState.new();
    }
    static createAnimationController(vsync) {
      return new animation_controller.AnimationController.new({duration: bottom_sheet._bottomSheetEnterDuration, reverseDuration: bottom_sheet._bottomSheetExitDuration, debugLabel: "BottomSheet", vsync: vsync});
    }
  };
  (bottom_sheet.BottomSheet.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let animationController = opts && 'animationController' in opts ? opts.animationController : null;
    let enableDrag = opts && 'enableDrag' in opts ? opts.enableDrag : true;
    let onDragStart = opts && 'onDragStart' in opts ? opts.onDragStart : null;
    let onDragEnd = opts && 'onDragEnd' in opts ? opts.onDragEnd : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
    let constraints = opts && 'constraints' in opts ? opts.constraints : null;
    let onClosing = opts && 'onClosing' in opts ? opts.onClosing : null;
    let builder = opts && 'builder' in opts ? opts.builder : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.animationController] = animationController;
    this[S$1.enableDrag] = enableDrag;
    this[S$1.onDragStart] = onDragStart;
    this[S$1.onDragEnd] = onDragEnd;
    this[S$1.backgroundColor$18] = backgroundColor;
    this[S$1.elevation$22] = elevation;
    this[S$1.shape$18] = shape;
    this[S$1.clipBehavior$7] = clipBehavior;
    this[S$1.constraints$5] = constraints;
    this[S$1.onClosing] = onClosing;
    this[S$1.builder$4] = builder;
    if (!(enableDrag !== null)) dart.assertFailed(null, I[116], 86, 15, "enableDrag != null");
    if (!(onClosing !== null)) dart.assertFailed(null, I[116], 87, 15, "onClosing != null");
    if (!(builder !== null)) dart.assertFailed(null, I[116], 88, 15, "builder != null");
    if (!(elevation == null || dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, I[116], 89, 15, "elevation == null || elevation >= 0.0");
    bottom_sheet.BottomSheet.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = bottom_sheet.BottomSheet.prototype;
  dart.addTypeTests(bottom_sheet.BottomSheet);
  dart.addTypeCaches(bottom_sheet.BottomSheet);
  dart.setMethodSignature(bottom_sheet.BottomSheet, () => ({
    __proto__: dart.getMethods(bottom_sheet.BottomSheet.__proto__),
    createState: dart.fnType(framework.State$(bottom_sheet.BottomSheet), [])
  }));
  dart.setStaticMethodSignature(bottom_sheet.BottomSheet, () => ['createAnimationController']);
  dart.setLibraryUri(bottom_sheet.BottomSheet, I[117]);
  dart.setFieldSignature(bottom_sheet.BottomSheet, () => ({
    __proto__: dart.getFields(bottom_sheet.BottomSheet.__proto__),
    animationController: dart.finalFieldType(dart.nullable(animation_controller.AnimationController)),
    onClosing: dart.finalFieldType(dart.fnType(dart.void, [])),
    builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext])),
    enableDrag: dart.finalFieldType(core.bool),
    onDragStart: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [drag_details.DragStartDetails]))),
    onDragEnd: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [drag_details.DragEndDetails], {}, {isClosing: core.bool}))),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    clipBehavior: dart.finalFieldType(dart.nullable(ui.Clip)),
    constraints: dart.finalFieldType(dart.nullable(box$.BoxConstraints))
  }));
  bottom_sheet._BottomSheetState = class _BottomSheetState extends framework.State$(bottom_sheet.BottomSheet) {
    get [S$1._childHeight]() {
      let renderBox = box$.RenderBox.as(dart.nullCheck(dart.nullCheck(this[S$1._childKey].currentContext).findRenderObject()));
      return renderBox.size.height;
    }
    get [S$1._dismissUnderway]() {
      return dart.nullCheck(this.widget.animationController).status === animation$.AnimationStatus.reverse;
    }
    [S$1._handleDragStart](details) {
      let t80;
      t80 = this.widget.onDragStart;
      t80 == null ? null : t80(details);
    }
    [S$1._handleDragUpdate](details) {
      let t80;
      if (!(this.widget.enableDrag && this.widget.animationController != null)) dart.assertFailed("'BottomSheet.animationController' can not be null when 'BottomSheet.enableDrag' is true. " + "Use 'BottomSheet.createAnimationController' to create one, or provide another AnimationController.", I[116], 220, 7, "widget.enableDrag && widget.animationController != null");
      if (this[S$1._dismissUnderway]) {
        return;
      }
      t80 = dart.nullCheck(this.widget.animationController);
      t80.value = t80.value - dart.nullCheck(details.primaryDelta) / this[S$1._childHeight];
    }
    [S$1._handleDragEnd](details) {
      let t80;
      if (!(this.widget.enableDrag && this.widget.animationController != null)) dart.assertFailed("'BottomSheet.animationController' can not be null when 'BottomSheet.enableDrag' is true. " + "Use 'BottomSheet.createAnimationController' to create one, or provide another AnimationController.", I[116], 232, 7, "widget.enableDrag && widget.animationController != null");
      if (this[S$1._dismissUnderway]) {
        return;
      }
      let isClosing = false;
      if (details.velocity.pixelsPerSecond.dy > 700) {
        let flingVelocity = -details.velocity.pixelsPerSecond.dy / this[S$1._childHeight];
        if (dart.nullCheck(this.widget.animationController).value > 0.0) {
          dart.nullCheck(this.widget.animationController).fling({velocity: flingVelocity});
        }
        if (flingVelocity < 0.0) {
          isClosing = true;
        }
      } else if (dart.nullCheck(this.widget.animationController).value < 0.5) {
        if (dart.nullCheck(this.widget.animationController).value > 0.0) {
          dart.nullCheck(this.widget.animationController).fling({velocity: -1.0});
        }
        isClosing = true;
      } else {
        dart.nullCheck(this.widget.animationController).forward();
      }
      t80 = this.widget.onDragEnd;
      t80 == null ? null : t80(details, {isClosing: isClosing});
      if (isClosing) {
        this.widget.onClosing();
      }
    }
    extentChanged(notification) {
      if (notification.extent === notification.minExtent) {
        this.widget.onClosing();
      }
      return false;
    }
    build(context) {
      let t80, t80$, t80$0, t80$1, t80$2, t80$3, t80$4, t81, t80$5;
      let bottomSheetTheme = theme$.Theme.of(context).bottomSheetTheme;
      let constraints = (t80 = this.widget.constraints, t80 == null ? bottomSheetTheme.constraints : t80);
      let color = (t80$ = this.widget.backgroundColor, t80$ == null ? bottomSheetTheme.backgroundColor : t80$);
      let elevation = (t80$1 = (t80$0 = this.widget.elevation, t80$0 == null ? bottomSheetTheme.elevation : t80$0), t80$1 == null ? 0.0 : t80$1);
      let shape = (t80$2 = this.widget.shape, t80$2 == null ? bottomSheetTheme.shape : t80$2);
      let clipBehavior = (t80$4 = (t80$3 = this.widget.clipBehavior, t80$3 == null ? bottomSheetTheme.clipBehavior : t80$3), t80$4 == null ? ui.Clip.none : t80$4);
      let bottomSheet = new material.Material.new({key: this[S$1._childKey], color: color, elevation: elevation, shape: shape, clipBehavior: clipBehavior, child: new (T$.NotificationListenerOfDraggableScrollableNotification()).new({onNotification: dart.bind(this, 'extentChanged'), child: (t80$5 = this.widget, t81 = context, t80$5.builder(t81)), $creationLocationd_0dea112b090073317d4: C[900] || CT.C900}), $creationLocationd_0dea112b090073317d4: C[901] || CT.C901});
      if (constraints != null) {
        bottomSheet = new basic.Align.new({alignment: alignment.Alignment.bottomCenter, heightFactor: 1.0, child: new basic.ConstrainedBox.new({constraints: constraints, child: bottomSheet, $creationLocationd_0dea112b090073317d4: C[902] || CT.C902}), $creationLocationd_0dea112b090073317d4: C[903] || CT.C903});
      }
      return !this.widget.enableDrag ? bottomSheet : new gesture_detector.GestureDetector.new({onVerticalDragStart: dart.bind(this, S$1._handleDragStart), onVerticalDragUpdate: dart.bind(this, S$1._handleDragUpdate), onVerticalDragEnd: dart.bind(this, S$1._handleDragEnd), excludeFromSemantics: true, child: bottomSheet, $creationLocationd_0dea112b090073317d4: C[904] || CT.C904});
    }
    static ['_#new#tearOff']() {
      return new bottom_sheet._BottomSheetState.new();
    }
  };
  (bottom_sheet._BottomSheetState.new = function() {
    this[S$1._childKey] = T$.GlobalKeyOfStateOfStatefulWidget().new({debugLabel: "BottomSheet child"});
    bottom_sheet._BottomSheetState.__proto__.new.call(this);
    ;
  }).prototype = bottom_sheet._BottomSheetState.prototype;
  dart.addTypeTests(bottom_sheet._BottomSheetState);
  dart.addTypeCaches(bottom_sheet._BottomSheetState);
  dart.setMethodSignature(bottom_sheet._BottomSheetState, () => ({
    __proto__: dart.getMethods(bottom_sheet._BottomSheetState.__proto__),
    [S$1._handleDragStart]: dart.fnType(dart.void, [drag_details.DragStartDetails]),
    [S$1._handleDragUpdate]: dart.fnType(dart.void, [drag_details.DragUpdateDetails]),
    [S$1._handleDragEnd]: dart.fnType(dart.void, [drag_details.DragEndDetails]),
    extentChanged: dart.fnType(core.bool, [draggable_scrollable_sheet.DraggableScrollableNotification]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(bottom_sheet._BottomSheetState, () => ({
    __proto__: dart.getGetters(bottom_sheet._BottomSheetState.__proto__),
    [S$1._childHeight]: core.double,
    [S$1._dismissUnderway]: core.bool
  }));
  dart.setLibraryUri(bottom_sheet._BottomSheetState, I[117]);
  dart.setFieldSignature(bottom_sheet._BottomSheetState, () => ({
    __proto__: dart.getFields(bottom_sheet._BottomSheetState.__proto__),
    [S$1._childKey]: dart.finalFieldType(framework.GlobalKey$(framework.State$(framework.StatefulWidget)))
  }));
  bottom_sheet._ModalBottomSheetLayout = class _ModalBottomSheetLayout extends shifted_box.SingleChildLayoutDelegate {
    static ['_#new#tearOff'](progress, isScrollControlled) {
      return new bottom_sheet._ModalBottomSheetLayout.new(progress, isScrollControlled);
    }
    getConstraintsForChild(constraints) {
      return new box$.BoxConstraints.new({minWidth: constraints.maxWidth, maxWidth: constraints.maxWidth, maxHeight: this.isScrollControlled ? constraints.maxHeight : constraints.maxHeight * 9.0 / 16.0});
    }
    getPositionForChild(size, childSize) {
      return new ui.Offset.new(0.0, size.height - childSize.height * this.progress);
    }
    shouldRelayout(oldDelegate) {
      bottom_sheet._ModalBottomSheetLayout.as(oldDelegate);
      return this.progress !== oldDelegate.progress;
    }
  };
  (bottom_sheet._ModalBottomSheetLayout.new = function(progress, isScrollControlled) {
    this.progress = progress;
    this.isScrollControlled = isScrollControlled;
    bottom_sheet._ModalBottomSheetLayout.__proto__.new.call(this);
    ;
  }).prototype = bottom_sheet._ModalBottomSheetLayout.prototype;
  dart.addTypeTests(bottom_sheet._ModalBottomSheetLayout);
  dart.addTypeCaches(bottom_sheet._ModalBottomSheetLayout);
  dart.setMethodSignature(bottom_sheet._ModalBottomSheetLayout, () => ({
    __proto__: dart.getMethods(bottom_sheet._ModalBottomSheetLayout.__proto__),
    shouldRelayout: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(bottom_sheet._ModalBottomSheetLayout, I[117]);
  dart.setFieldSignature(bottom_sheet._ModalBottomSheetLayout, () => ({
    __proto__: dart.getFields(bottom_sheet._ModalBottomSheetLayout.__proto__),
    progress: dart.finalFieldType(core.double),
    isScrollControlled: dart.finalFieldType(core.bool)
  }));
  const _is__ModalBottomSheet_default = Symbol('_is__ModalBottomSheet_default');
  bottom_sheet._ModalBottomSheet$ = dart.generic(T => {
    var __t$_ModalBottomSheetStateOfT = () => (__t$_ModalBottomSheetStateOfT = dart.constFn(bottom_sheet._ModalBottomSheetState$(T)))();
    class _ModalBottomSheet extends framework.StatefulWidget {
      get route() {
        return this[S$1.route];
      }
      set route(value) {
        super.route = value;
      }
      get isScrollControlled() {
        return this[S$1.isScrollControlled];
      }
      set isScrollControlled(value) {
        super.isScrollControlled = value;
      }
      get backgroundColor() {
        return this[S$1.backgroundColor$19];
      }
      set backgroundColor(value) {
        super.backgroundColor = value;
      }
      get elevation() {
        return this[S$1.elevation$23];
      }
      set elevation(value) {
        super.elevation = value;
      }
      get shape() {
        return this[S$1.shape$19];
      }
      set shape(value) {
        super.shape = value;
      }
      get clipBehavior() {
        return this[S$1.clipBehavior$8];
      }
      set clipBehavior(value) {
        super.clipBehavior = value;
      }
      get constraints() {
        return this[S$1.constraints$6];
      }
      set constraints(value) {
        super.constraints = value;
      }
      get enableDrag() {
        return this[S$1.enableDrag$1];
      }
      set enableDrag(value) {
        super.enableDrag = value;
      }
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let route = opts && 'route' in opts ? opts.route : null;
        let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
        let elevation = opts && 'elevation' in opts ? opts.elevation : null;
        let shape = opts && 'shape' in opts ? opts.shape : null;
        let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
        let constraints = opts && 'constraints' in opts ? opts.constraints : null;
        let isScrollControlled = opts && 'isScrollControlled' in opts ? opts.isScrollControlled : false;
        let enableDrag = opts && 'enableDrag' in opts ? opts.enableDrag : true;
        return new (bottom_sheet._ModalBottomSheet$(T)).new({key: key, route: route, backgroundColor: backgroundColor, elevation: elevation, shape: shape, clipBehavior: clipBehavior, constraints: constraints, isScrollControlled: isScrollControlled, enableDrag: enableDrag, $creationLocationd_0dea112b090073317d4: C[905] || CT.C905});
      }
      createState() {
        return new (__t$_ModalBottomSheetStateOfT()).new();
      }
    }
    (_ModalBottomSheet.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let route = opts && 'route' in opts ? opts.route : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
      let constraints = opts && 'constraints' in opts ? opts.constraints : null;
      let isScrollControlled = opts && 'isScrollControlled' in opts ? opts.isScrollControlled : false;
      let enableDrag = opts && 'enableDrag' in opts ? opts.enableDrag : true;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[S$1.route] = route;
      this[S$1.backgroundColor$19] = backgroundColor;
      this[S$1.elevation$23] = elevation;
      this[S$1.shape$19] = shape;
      this[S$1.clipBehavior$8] = clipBehavior;
      this[S$1.constraints$6] = constraints;
      this[S$1.isScrollControlled] = isScrollControlled;
      this[S$1.enableDrag$1] = enableDrag;
      if (!(isScrollControlled !== null)) dart.assertFailed(null, I[116], 361, 15, "isScrollControlled != null");
      if (!(enableDrag !== null)) dart.assertFailed(null, I[116], 362, 15, "enableDrag != null");
      _ModalBottomSheet.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = _ModalBottomSheet.prototype;
    dart.addTypeTests(_ModalBottomSheet);
    _ModalBottomSheet.prototype[_is__ModalBottomSheet_default] = true;
    dart.addTypeCaches(_ModalBottomSheet);
    dart.setMethodSignature(_ModalBottomSheet, () => ({
      __proto__: dart.getMethods(_ModalBottomSheet.__proto__),
      createState: dart.fnType(bottom_sheet._ModalBottomSheetState$(T), [])
    }));
    dart.setLibraryUri(_ModalBottomSheet, I[117]);
    dart.setFieldSignature(_ModalBottomSheet, () => ({
      __proto__: dart.getFields(_ModalBottomSheet.__proto__),
      route: dart.finalFieldType(dart.nullable(bottom_sheet._ModalBottomSheetRoute$(T))),
      isScrollControlled: dart.finalFieldType(core.bool),
      backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
      elevation: dart.finalFieldType(dart.nullable(core.double)),
      shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
      clipBehavior: dart.finalFieldType(dart.nullable(ui.Clip)),
      constraints: dart.finalFieldType(dart.nullable(box$.BoxConstraints)),
      enableDrag: dart.finalFieldType(core.bool)
    }));
    return _ModalBottomSheet;
  });
  bottom_sheet._ModalBottomSheet = bottom_sheet._ModalBottomSheet$();
  dart.addTypeTests(bottom_sheet._ModalBottomSheet, _is__ModalBottomSheet_default);
  const _is__ModalBottomSheetState_default = Symbol('_is__ModalBottomSheetState_default');
  bottom_sheet._ModalBottomSheetState$ = dart.generic(T => {
    class _ModalBottomSheetState extends framework.State$(bottom_sheet._ModalBottomSheet$(T)) {
      [S$1._getRouteLabel](localizations) {
        switch (theme$.Theme.of(this.context).platform) {
          case C[33] || CT.C33:
          case C[34] || CT.C34:
            {
              return "";
            }
          case C[29] || CT.C29:
          case C[30] || CT.C30:
          case C[31] || CT.C31:
          case C[32] || CT.C32:
            {
              return localizations.dialogLabel;
            }
        }
      }
      handleDragStart(details) {
        this.animationCurve = curves.Curves.linear;
      }
      handleDragEnd(details, opts) {
        let isClosing = opts && 'isClosing' in opts ? opts.isClosing : null;
        this.animationCurve = new bottom_sheet._BottomSheetSuspendedCurve.new(dart.nullCheck(dart.nullCheck(this.widget.route).animation).value, {curve: bottom_sheet._modalBottomSheetCurve});
      }
      build(context) {
        if (!debug.debugCheckHasMediaQuery(context)) dart.assertFailed(null, I[116], 408, 12, "debugCheckHasMediaQuery(context)");
        if (!debug$1.debugCheckHasMaterialLocalizations(context)) dart.assertFailed(null, I[116], 409, 12, "debugCheckHasMaterialLocalizations(context)");
        let mediaQuery = media_query.MediaQuery.of(context);
        let localizations = material_localizations.MaterialLocalizations.of(context);
        let routeLabel = this[S$1._getRouteLabel](localizations);
        return new transitions.AnimatedBuilder.new({animation: dart.nullCheck(dart.nullCheck(this.widget.route).animation), child: new bottom_sheet.BottomSheet.new({animationController: dart.nullCheck(this.widget.route)[S$1._animationController$1], onClosing: dart.fn(() => {
              if (dart.nullCheck(this.widget.route).isCurrent) {
                navigator$.Navigator.pop(T$.ObjectN(), context);
              }
            }, T$.VoidTovoid()), builder: dart.nullCheck(dart.nullCheck(this.widget.route).builder), backgroundColor: this.widget.backgroundColor, elevation: this.widget.elevation, shape: this.widget.shape, clipBehavior: this.widget.clipBehavior, constraints: this.widget.constraints, enableDrag: this.widget.enableDrag, onDragStart: dart.bind(this, 'handleDragStart'), onDragEnd: dart.bind(this, 'handleDragEnd'), $creationLocationd_0dea112b090073317d4: C[906] || CT.C906}), builder: dart.fn((context, child) => {
            let animationValue = this.animationCurve.transform(mediaQuery.accessibleNavigation ? 1.0 : dart.nullCheck(dart.nullCheck(this.widget.route).animation).value);
            return new basic.Semantics.new({scopesRoute: true, namesRoute: true, label: routeLabel, explicitChildNodes: true, child: new basic.ClipRect.new({child: new basic.CustomSingleChildLayout.new({delegate: new bottom_sheet._ModalBottomSheetLayout.new(animationValue, this.widget.isScrollControlled), child: child, $creationLocationd_0dea112b090073317d4: C[907] || CT.C907}), $creationLocationd_0dea112b090073317d4: C[908] || CT.C908}), $creationLocationd_0dea112b090073317d4: C[909] || CT.C909});
          }, T$.BuildContextAndWidgetNToSemantics()), $creationLocationd_0dea112b090073317d4: C[910] || CT.C910});
      }
      static ['_#new#tearOff'](T) {
        return new (bottom_sheet._ModalBottomSheetState$(T)).new();
      }
    }
    (_ModalBottomSheetState.new = function() {
      this.animationCurve = bottom_sheet._modalBottomSheetCurve;
      _ModalBottomSheetState.__proto__.new.call(this);
      ;
    }).prototype = _ModalBottomSheetState.prototype;
    dart.addTypeTests(_ModalBottomSheetState);
    _ModalBottomSheetState.prototype[_is__ModalBottomSheetState_default] = true;
    dart.addTypeCaches(_ModalBottomSheetState);
    dart.setMethodSignature(_ModalBottomSheetState, () => ({
      __proto__: dart.getMethods(_ModalBottomSheetState.__proto__),
      [S$1._getRouteLabel]: dart.fnType(core.String, [material_localizations.MaterialLocalizations]),
      handleDragStart: dart.fnType(dart.void, [drag_details.DragStartDetails]),
      handleDragEnd: dart.fnType(dart.void, [drag_details.DragEndDetails], {isClosing: dart.nullable(core.bool)}, {}),
      build: dart.fnType(framework.Widget, [framework.BuildContext])
    }));
    dart.setLibraryUri(_ModalBottomSheetState, I[117]);
    dart.setFieldSignature(_ModalBottomSheetState, () => ({
      __proto__: dart.getFields(_ModalBottomSheetState.__proto__),
      animationCurve: dart.fieldType(curves.ParametricCurve$(core.double))
    }));
    return _ModalBottomSheetState;
  });
  bottom_sheet._ModalBottomSheetState = bottom_sheet._ModalBottomSheetState$();
  dart.addTypeTests(bottom_sheet._ModalBottomSheetState, _is__ModalBottomSheetState_default);
  const _is__ModalBottomSheetRoute_default = Symbol('_is__ModalBottomSheetRoute_default');
  bottom_sheet._ModalBottomSheetRoute$ = dart.generic(T => {
    var __t$_ModalBottomSheetOfT = () => (__t$_ModalBottomSheetOfT = dart.constFn(bottom_sheet._ModalBottomSheet$(T)))();
    var __t$BuildContextTo_ModalBottomSheetOfT = () => (__t$BuildContextTo_ModalBottomSheetOfT = dart.constFn(dart.fnType(__t$_ModalBottomSheetOfT(), [framework.BuildContext])))();
    class _ModalBottomSheetRoute extends routes.PopupRoute$(T) {
      get barrierLabel() {
        return this[S$1.barrierLabel];
      }
      set barrierLabel(value) {
        super.barrierLabel = value;
      }
      static ['_#new#tearOff'](T, opts) {
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let capturedThemes = opts && 'capturedThemes' in opts ? opts.capturedThemes : null;
        let barrierLabel = opts && 'barrierLabel' in opts ? opts.barrierLabel : null;
        let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
        let elevation = opts && 'elevation' in opts ? opts.elevation : null;
        let shape = opts && 'shape' in opts ? opts.shape : null;
        let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
        let constraints = opts && 'constraints' in opts ? opts.constraints : null;
        let modalBarrierColor = opts && 'modalBarrierColor' in opts ? opts.modalBarrierColor : null;
        let isDismissible = opts && 'isDismissible' in opts ? opts.isDismissible : true;
        let enableDrag = opts && 'enableDrag' in opts ? opts.enableDrag : true;
        let isScrollControlled = opts && 'isScrollControlled' in opts ? opts.isScrollControlled : null;
        let settings = opts && 'settings' in opts ? opts.settings : null;
        let transitionAnimationController = opts && 'transitionAnimationController' in opts ? opts.transitionAnimationController : null;
        let anchorPoint = opts && 'anchorPoint' in opts ? opts.anchorPoint : null;
        return new (bottom_sheet._ModalBottomSheetRoute$(T)).new({builder: builder, capturedThemes: capturedThemes, barrierLabel: barrierLabel, backgroundColor: backgroundColor, elevation: elevation, shape: shape, clipBehavior: clipBehavior, constraints: constraints, modalBarrierColor: modalBarrierColor, isDismissible: isDismissible, enableDrag: enableDrag, isScrollControlled: isScrollControlled, settings: settings, transitionAnimationController: transitionAnimationController, anchorPoint: anchorPoint});
      }
      get transitionDuration() {
        return bottom_sheet._bottomSheetEnterDuration;
      }
      get reverseTransitionDuration() {
        return bottom_sheet._bottomSheetExitDuration;
      }
      get barrierDismissible() {
        return this.isDismissible;
      }
      get barrierColor() {
        let t80;
        t80 = this.modalBarrierColor;
        return t80 == null ? colors$.Colors.black54 : t80;
      }
      createAnimationController() {
        if (!(this[S$1._animationController$1] == null)) dart.assertFailed(null, I[116], 510, 12, "_animationController == null");
        if (this.transitionAnimationController != null) {
          this[S$1._animationController$1] = this.transitionAnimationController;
          this.willDisposeAnimationController = false;
        } else {
          this[S$1._animationController$1] = bottom_sheet.BottomSheet.createAnimationController(dart.nullCheck(this.navigator));
        }
        return dart.nullCheck(this[S$1._animationController$1]);
      }
      buildPage(context, animation, secondaryAnimation) {
        let bottomSheet = media_query.MediaQuery.removePadding({context: context, removeTop: true, child: new display_feature_sub_screen.DisplayFeatureSubScreen.new({anchorPoint: this.anchorPoint, child: new basic.Builder.new({builder: dart.fn(context => {
                let t80, t80$, t80$0, t80$1;
                let sheetTheme = theme$.Theme.of(context).bottomSheetTheme;
                return new (__t$_ModalBottomSheetOfT()).new({route: this, backgroundColor: (t80$ = (t80 = this.backgroundColor, t80 == null ? sheetTheme.modalBackgroundColor : t80), t80$ == null ? sheetTheme.backgroundColor : t80$), elevation: (t80$1 = (t80$0 = this.elevation, t80$0 == null ? sheetTheme.modalElevation : t80$0), t80$1 == null ? sheetTheme.elevation : t80$1), shape: this.shape, clipBehavior: this.clipBehavior, constraints: this.constraints, isScrollControlled: this.isScrollControlled, enableDrag: this.enableDrag, $creationLocationd_0dea112b090073317d4: C[911] || CT.C911});
              }, __t$BuildContextTo_ModalBottomSheetOfT()), $creationLocationd_0dea112b090073317d4: C[912] || CT.C912}), $creationLocationd_0dea112b090073317d4: C[913] || CT.C913}), $creationLocationd_0dea112b090073317d4: C[914] || CT.C914});
        return this.capturedThemes.wrap(bottomSheet);
      }
    }
    (_ModalBottomSheetRoute.new = function(opts) {
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let capturedThemes = opts && 'capturedThemes' in opts ? opts.capturedThemes : null;
      let barrierLabel = opts && 'barrierLabel' in opts ? opts.barrierLabel : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
      let constraints = opts && 'constraints' in opts ? opts.constraints : null;
      let modalBarrierColor = opts && 'modalBarrierColor' in opts ? opts.modalBarrierColor : null;
      let isDismissible = opts && 'isDismissible' in opts ? opts.isDismissible : true;
      let enableDrag = opts && 'enableDrag' in opts ? opts.enableDrag : true;
      let isScrollControlled = opts && 'isScrollControlled' in opts ? opts.isScrollControlled : null;
      let settings = opts && 'settings' in opts ? opts.settings : null;
      let transitionAnimationController = opts && 'transitionAnimationController' in opts ? opts.transitionAnimationController : null;
      let anchorPoint = opts && 'anchorPoint' in opts ? opts.anchorPoint : null;
      this[S$1._animationController$1] = null;
      this.builder = builder;
      this.capturedThemes = capturedThemes;
      this[S$1.barrierLabel] = barrierLabel;
      this.backgroundColor = backgroundColor;
      this.elevation = elevation;
      this.shape = shape;
      this.clipBehavior = clipBehavior;
      this.constraints = constraints;
      this.modalBarrierColor = modalBarrierColor;
      this.isDismissible = isDismissible;
      this.enableDrag = enableDrag;
      this.isScrollControlled = isScrollControlled;
      this.transitionAnimationController = transitionAnimationController;
      this.anchorPoint = anchorPoint;
      if (!(isScrollControlled !== null)) dart.assertFailed(null, I[116], 473, 15, "isScrollControlled != null");
      if (!(isDismissible !== null)) dart.assertFailed(null, I[116], 474, 15, "isDismissible != null");
      if (!(enableDrag !== null)) dart.assertFailed(null, I[116], 475, 15, "enableDrag != null");
      _ModalBottomSheetRoute.__proto__.new.call(this, {settings: settings});
      ;
    }).prototype = _ModalBottomSheetRoute.prototype;
    dart.addTypeTests(_ModalBottomSheetRoute);
    _ModalBottomSheetRoute.prototype[_is__ModalBottomSheetRoute_default] = true;
    dart.addTypeCaches(_ModalBottomSheetRoute);
    dart.setMethodSignature(_ModalBottomSheetRoute, () => ({
      __proto__: dart.getMethods(_ModalBottomSheetRoute.__proto__),
      buildPage: dart.fnType(framework.Widget, [framework.BuildContext, animation$.Animation$(core.double), animation$.Animation$(core.double)])
    }));
    dart.setGetterSignature(_ModalBottomSheetRoute, () => ({
      __proto__: dart.getGetters(_ModalBottomSheetRoute.__proto__),
      transitionDuration: core.Duration,
      barrierDismissible: core.bool,
      barrierColor: ui.Color
    }));
    dart.setLibraryUri(_ModalBottomSheetRoute, I[117]);
    dart.setFieldSignature(_ModalBottomSheetRoute, () => ({
      __proto__: dart.getFields(_ModalBottomSheetRoute.__proto__),
      builder: dart.finalFieldType(dart.nullable(dart.fnType(framework.Widget, [framework.BuildContext]))),
      capturedThemes: dart.finalFieldType(inherited_theme.CapturedThemes),
      isScrollControlled: dart.finalFieldType(core.bool),
      backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
      elevation: dart.finalFieldType(dart.nullable(core.double)),
      shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
      clipBehavior: dart.finalFieldType(dart.nullable(ui.Clip)),
      constraints: dart.finalFieldType(dart.nullable(box$.BoxConstraints)),
      modalBarrierColor: dart.finalFieldType(dart.nullable(ui.Color)),
      isDismissible: dart.finalFieldType(core.bool),
      enableDrag: dart.finalFieldType(core.bool),
      transitionAnimationController: dart.finalFieldType(dart.nullable(animation_controller.AnimationController)),
      anchorPoint: dart.finalFieldType(dart.nullable(ui.Offset)),
      barrierLabel: dart.finalFieldType(dart.nullable(core.String)),
      [S$1._animationController$1]: dart.fieldType(dart.nullable(animation_controller.AnimationController))
    }));
    return _ModalBottomSheetRoute;
  });
  bottom_sheet._ModalBottomSheetRoute = bottom_sheet._ModalBottomSheetRoute$();
  dart.addTypeTests(bottom_sheet._ModalBottomSheetRoute, _is__ModalBottomSheetRoute_default);
  bottom_sheet._BottomSheetSuspendedCurve = class _BottomSheetSuspendedCurve extends curves.ParametricCurve$(core.double) {
    get startingPoint() {
      return this[S$1.startingPoint];
    }
    set startingPoint(value) {
      super.startingPoint = value;
    }
    get curve() {
      return this[S$1.curve$1];
    }
    set curve(value) {
      super.curve = value;
    }
    static ['_#new#tearOff'](startingPoint, opts) {
      let curve = opts && 'curve' in opts ? opts.curve : C[915] || CT.C915;
      return new bottom_sheet._BottomSheetSuspendedCurve.new(startingPoint, {curve: curve});
    }
    transform(t) {
      if (!(t >= 0.0 && t <= 1.0)) dart.assertFailed(null, I[116], 586, 12, "t >= 0.0 && t <= 1.0");
      if (!(this.startingPoint >= 0.0 && this.startingPoint <= 1.0)) dart.assertFailed(null, I[116], 587, 12, "startingPoint >= 0.0 && startingPoint <= 1.0");
      if (t < this.startingPoint) {
        return t;
      }
      if (t === 1.0) {
        return t;
      }
      let curveProgress = (t - this.startingPoint) / (1 - this.startingPoint);
      let transformed = this.curve.transform(curveProgress);
      return dart.nullCheck(ui.lerpDouble(this.startingPoint, 1, transformed));
    }
    toString() {
      return diagnostics.describeIdentity(this) + "(" + dart.str(this.startingPoint) + ", " + dart.str(this.curve) + ")";
    }
  };
  (bottom_sheet._BottomSheetSuspendedCurve.new = function(startingPoint, opts) {
    let curve = opts && 'curve' in opts ? opts.curve : C[915] || CT.C915;
    this[S$1.startingPoint] = startingPoint;
    this[S$1.curve$1] = curve;
    if (!(startingPoint !== null)) dart.assertFailed(null, I[116], 573, 15, "startingPoint != null");
    if (!(curve !== null)) dart.assertFailed(null, I[116], 574, 15, "curve != null");
    bottom_sheet._BottomSheetSuspendedCurve.__proto__.new.call(this);
    ;
  }).prototype = bottom_sheet._BottomSheetSuspendedCurve.prototype;
  dart.addTypeTests(bottom_sheet._BottomSheetSuspendedCurve);
  dart.addTypeCaches(bottom_sheet._BottomSheetSuspendedCurve);
  dart.setLibraryUri(bottom_sheet._BottomSheetSuspendedCurve, I[117]);
  dart.setFieldSignature(bottom_sheet._BottomSheetSuspendedCurve, () => ({
    __proto__: dart.getFields(bottom_sheet._BottomSheetSuspendedCurve.__proto__),
    startingPoint: dart.finalFieldType(core.double),
    curve: dart.finalFieldType(curves.Curve)
  }));
  dart.defineExtensionMethods(bottom_sheet._BottomSheetSuspendedCurve, ['toString']);
  bottom_sheet.showModalBottomSheet = function showModalBottomSheet(T, opts) {
    let context = opts && 'context' in opts ? opts.context : null;
    let builder = opts && 'builder' in opts ? opts.builder : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
    let constraints = opts && 'constraints' in opts ? opts.constraints : null;
    let barrierColor = opts && 'barrierColor' in opts ? opts.barrierColor : null;
    let isScrollControlled = opts && 'isScrollControlled' in opts ? opts.isScrollControlled : false;
    let useRootNavigator = opts && 'useRootNavigator' in opts ? opts.useRootNavigator : false;
    let isDismissible = opts && 'isDismissible' in opts ? opts.isDismissible : true;
    let enableDrag = opts && 'enableDrag' in opts ? opts.enableDrag : true;
    let routeSettings = opts && 'routeSettings' in opts ? opts.routeSettings : null;
    let transitionAnimationController = opts && 'transitionAnimationController' in opts ? opts.transitionAnimationController : null;
    let anchorPoint = opts && 'anchorPoint' in opts ? opts.anchorPoint : null;
    if (!(context !== null)) dart.assertFailed(null, I[116], 697, 10, "context != null");
    if (!(builder !== null)) dart.assertFailed(null, I[116], 698, 10, "builder != null");
    if (!(isScrollControlled !== null)) dart.assertFailed(null, I[116], 699, 10, "isScrollControlled != null");
    if (!(useRootNavigator !== null)) dart.assertFailed(null, I[116], 700, 10, "useRootNavigator != null");
    if (!(isDismissible !== null)) dart.assertFailed(null, I[116], 701, 10, "isDismissible != null");
    if (!(enableDrag !== null)) dart.assertFailed(null, I[116], 702, 10, "enableDrag != null");
    if (!debug.debugCheckHasMediaQuery(context)) dart.assertFailed(null, I[116], 703, 10, "debugCheckHasMediaQuery(context)");
    if (!debug$1.debugCheckHasMaterialLocalizations(context)) dart.assertFailed(null, I[116], 704, 10, "debugCheckHasMaterialLocalizations(context)");
    let navigator = navigator$.Navigator.of(context, {rootNavigator: useRootNavigator});
    return navigator.push(T, new (bottom_sheet._ModalBottomSheetRoute$(T)).new({builder: builder, capturedThemes: inherited_theme.InheritedTheme.capture({from: context, to: navigator.context}), isScrollControlled: isScrollControlled, barrierLabel: material_localizations.MaterialLocalizations.of(context).modalBarrierDismissLabel, backgroundColor: backgroundColor, elevation: elevation, shape: shape, clipBehavior: clipBehavior, constraints: constraints, isDismissible: isDismissible, modalBarrierColor: barrierColor, enableDrag: enableDrag, settings: routeSettings, transitionAnimationController: transitionAnimationController, anchorPoint: anchorPoint}));
  };
  bottom_sheet.showBottomSheet = function showBottomSheet(T, opts) {
    let context = opts && 'context' in opts ? opts.context : null;
    let builder = opts && 'builder' in opts ? opts.builder : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
    let constraints = opts && 'constraints' in opts ? opts.constraints : null;
    let enableDrag = opts && 'enableDrag' in opts ? opts.enableDrag : null;
    let transitionAnimationController = opts && 'transitionAnimationController' in opts ? opts.transitionAnimationController : null;
    if (!(context !== null)) dart.assertFailed(null, I[116], 781, 10, "context != null");
    if (!(builder !== null)) dart.assertFailed(null, I[116], 782, 10, "builder != null");
    if (!debug$1.debugCheckHasScaffold(context)) dart.assertFailed(null, I[116], 783, 10, "debugCheckHasScaffold(context)");
    return scaffold$.Scaffold.of(context).showBottomSheet(T, builder, {backgroundColor: backgroundColor, elevation: elevation, shape: shape, clipBehavior: clipBehavior, constraints: constraints, enableDrag: enableDrag, transitionAnimationController: transitionAnimationController});
  };
  dart.defineLazy(bottom_sheet, {
    /*bottom_sheet._bottomSheetEnterDuration*/get _bottomSheetEnterDuration() {
      return C[132] || CT.C132;
    },
    /*bottom_sheet._bottomSheetExitDuration*/get _bottomSheetExitDuration() {
      return C[160] || CT.C160;
    },
    /*bottom_sheet._modalBottomSheetCurve*/get _modalBottomSheetCurve() {
      return C[916] || CT.C916;
    },
    /*bottom_sheet._minFlingVelocity*/get _minFlingVelocity() {
      return 700;
    },
    /*bottom_sheet._closeProgressThreshold*/get _closeProgressThreshold() {
      return 0.5;
    }
  }, false);
  const Object_Diagnosticable$36$33 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$33.new = function() {
  }).prototype = Object_Diagnosticable$36$33.prototype;
  dart.applyMixin(Object_Diagnosticable$36$33, diagnostics.Diagnosticable);
  divider_theme.DividerThemeData = class DividerThemeData extends Object_Diagnosticable$36$33 {
    get color() {
      return this[S$1.color$12];
    }
    set color(value) {
      super.color = value;
    }
    get space() {
      return this[S$1.space];
    }
    set space(value) {
      super.space = value;
    }
    get thickness() {
      return this[S$1.thickness$1];
    }
    set thickness(value) {
      super.thickness = value;
    }
    get indent() {
      return this[S$1.indent];
    }
    set indent(value) {
      super.indent = value;
    }
    get endIndent() {
      return this[S$1.endIndent];
    }
    set endIndent(value) {
      super.endIndent = value;
    }
    static ['_#new#tearOff'](opts) {
      let color = opts && 'color' in opts ? opts.color : null;
      let space = opts && 'space' in opts ? opts.space : null;
      let thickness = opts && 'thickness' in opts ? opts.thickness : null;
      let indent = opts && 'indent' in opts ? opts.indent : null;
      let endIndent = opts && 'endIndent' in opts ? opts.endIndent : null;
      return new divider_theme.DividerThemeData.new({color: color, space: space, thickness: thickness, indent: indent, endIndent: endIndent});
    }
    copyWith(opts) {
      let t80, t80$, t80$0, t80$1, t80$2;
      let color = opts && 'color' in opts ? opts.color : null;
      let space = opts && 'space' in opts ? opts.space : null;
      let thickness = opts && 'thickness' in opts ? opts.thickness : null;
      let indent = opts && 'indent' in opts ? opts.indent : null;
      let endIndent = opts && 'endIndent' in opts ? opts.endIndent : null;
      return new divider_theme.DividerThemeData.new({color: (t80 = color, t80 == null ? this.color : t80), space: (t80$ = space, t80$ == null ? this.space : t80$), thickness: (t80$0 = thickness, t80$0 == null ? this.thickness : t80$0), indent: (t80$1 = indent, t80$1 == null ? this.indent : t80$1), endIndent: (t80$2 = endIndent, t80$2 == null ? this.endIndent : t80$2)});
    }
    static lerp(a, b, t) {
      let t80, t80$, t80$0, t80$1, t80$2, t80$3, t80$4, t80$5, t80$6, t80$7;
      if (!(t !== null)) dart.assertFailed(null, I[118], 87, 12, "t != null");
      return new divider_theme.DividerThemeData.new({color: ui.Color.lerp((t80 = a, t80 == null ? null : t80.color), (t80$ = b, t80$ == null ? null : t80$.color), t), space: ui.lerpDouble((t80$0 = a, t80$0 == null ? null : t80$0.space), (t80$1 = b, t80$1 == null ? null : t80$1.space), t), thickness: ui.lerpDouble((t80$2 = a, t80$2 == null ? null : t80$2.thickness), (t80$3 = b, t80$3 == null ? null : t80$3.thickness), t), indent: ui.lerpDouble((t80$4 = a, t80$4 == null ? null : t80$4.indent), (t80$5 = b, t80$5 == null ? null : t80$5.indent), t), endIndent: ui.lerpDouble((t80$6 = a, t80$6 == null ? null : t80$6.endIndent), (t80$7 = b, t80$7 == null ? null : t80$7.endIndent), t)});
    }
    get hashCode() {
      return core.Object.hash(this.color, this.space, this.thickness, this.indent, this.endIndent);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      if (!other[S.$runtimeType]._equals(this[S.$runtimeType])) {
        return false;
      }
      return divider_theme.DividerThemeData.is(other) && dart.equals(other.color, this.color) && other.space == this.space && other.thickness == this.thickness && other.indent == this.indent && other.endIndent == this.endIndent;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new colors.ColorProperty.new("color", this.color, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("space", this.space, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("thickness", this.thickness, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("indent", this.indent, {defaultValue: null}));
      properties.add(new diagnostics.DoubleProperty.new("endIndent", this.endIndent, {defaultValue: null}));
    }
  };
  (divider_theme.DividerThemeData.new = function(opts) {
    let color = opts && 'color' in opts ? opts.color : null;
    let space = opts && 'space' in opts ? opts.space : null;
    let thickness = opts && 'thickness' in opts ? opts.thickness : null;
    let indent = opts && 'indent' in opts ? opts.indent : null;
    let endIndent = opts && 'endIndent' in opts ? opts.endIndent : null;
    this[S$1.color$12] = color;
    this[S$1.space] = space;
    this[S$1.thickness$1] = thickness;
    this[S$1.indent] = indent;
    this[S$1.endIndent] = endIndent;
    ;
  }).prototype = divider_theme.DividerThemeData.prototype;
  dart.addTypeTests(divider_theme.DividerThemeData);
  dart.addTypeCaches(divider_theme.DividerThemeData);
  dart.setMethodSignature(divider_theme.DividerThemeData, () => ({
    __proto__: dart.getMethods(divider_theme.DividerThemeData.__proto__),
    copyWith: dart.fnType(divider_theme.DividerThemeData, [], {color: dart.nullable(ui.Color), endIndent: dart.nullable(core.double), indent: dart.nullable(core.double), space: dart.nullable(core.double), thickness: dart.nullable(core.double)}, {})
  }));
  dart.setStaticMethodSignature(divider_theme.DividerThemeData, () => ['lerp']);
  dart.setLibraryUri(divider_theme.DividerThemeData, I[119]);
  dart.setFieldSignature(divider_theme.DividerThemeData, () => ({
    __proto__: dart.getFields(divider_theme.DividerThemeData.__proto__),
    color: dart.finalFieldType(dart.nullable(ui.Color)),
    space: dart.finalFieldType(dart.nullable(core.double)),
    thickness: dart.finalFieldType(dart.nullable(core.double)),
    indent: dart.finalFieldType(dart.nullable(core.double)),
    endIndent: dart.finalFieldType(dart.nullable(core.double))
  }));
  dart.defineExtensionMethods(divider_theme.DividerThemeData, ['_equals']);
  dart.defineExtensionAccessors(divider_theme.DividerThemeData, ['hashCode']);
  divider_theme.DividerTheme = class DividerTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[S$1.data$23];
    }
    set data(value) {
      super.data = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let data = opts && 'data' in opts ? opts.data : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new divider_theme.DividerTheme.new({key: key, data: data, child: child, $creationLocationd_0dea112b090073317d4: C[917] || CT.C917});
    }
    static of(context) {
      let t80, t80$;
      let dividerTheme = context.dependOnInheritedWidgetOfExactType(divider_theme.DividerTheme);
      t80$ = (t80 = dividerTheme, t80 == null ? null : t80.data);
      return t80$ == null ? theme$.Theme.of(context).dividerTheme : t80$;
    }
    wrap(context, child) {
      return new divider_theme.DividerTheme.new({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C[918] || CT.C918});
    }
    updateShouldNotify(oldWidget) {
      divider_theme.DividerTheme.as(oldWidget);
      return !this.data._equals(oldWidget.data);
    }
  };
  (divider_theme.DividerTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.data$23] = data;
    if (!(data !== null)) dart.assertFailed(null, I[118], 144, 15, "data != null");
    divider_theme.DividerTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = divider_theme.DividerTheme.prototype;
  dart.addTypeTests(divider_theme.DividerTheme);
  dart.addTypeCaches(divider_theme.DividerTheme);
  dart.setMethodSignature(divider_theme.DividerTheme, () => ({
    __proto__: dart.getMethods(divider_theme.DividerTheme.__proto__),
    wrap: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget]),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setStaticMethodSignature(divider_theme.DividerTheme, () => ['of']);
  dart.setLibraryUri(divider_theme.DividerTheme, I[119]);
  dart.setFieldSignature(divider_theme.DividerTheme, () => ({
    __proto__: dart.getFields(divider_theme.DividerTheme.__proto__),
    data: dart.finalFieldType(divider_theme.DividerThemeData)
  }));
  divider.Divider = class Divider extends framework.StatelessWidget {
    get height() {
      return this[S$1.height$10];
    }
    set height(value) {
      super.height = value;
    }
    get thickness() {
      return this[S$1.thickness$2];
    }
    set thickness(value) {
      super.thickness = value;
    }
    get indent() {
      return this[S$1.indent$1];
    }
    set indent(value) {
      super.indent = value;
    }
    get endIndent() {
      return this[S$1.endIndent$1];
    }
    set endIndent(value) {
      super.endIndent = value;
    }
    get color() {
      return this[S$1.color$13];
    }
    set color(value) {
      super.color = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let height = opts && 'height' in opts ? opts.height : null;
      let thickness = opts && 'thickness' in opts ? opts.thickness : null;
      let indent = opts && 'indent' in opts ? opts.indent : null;
      let endIndent = opts && 'endIndent' in opts ? opts.endIndent : null;
      let color = opts && 'color' in opts ? opts.color : null;
      return new divider.Divider.new({key: key, height: height, thickness: thickness, indent: indent, endIndent: endIndent, color: color, $creationLocationd_0dea112b090073317d4: C[919] || CT.C919});
    }
    static createBorderSide(context, opts) {
      let t81, t80, t80$, t80$0;
      let color = opts && 'color' in opts ? opts.color : null;
      let width = opts && 'width' in opts ? opts.width : null;
      let effectiveColor = (t80 = color, t80 == null ? context != null ? (t81 = divider_theme.DividerTheme.of(context).color, t81 == null ? theme$.Theme.of(context).dividerColor : t81) : null : t80);
      let effectiveWidth = (t80$0 = (t80$ = width, t80$ == null ? context != null ? divider_theme.DividerTheme.of(context).thickness : null : t80$), t80$0 == null ? 0.0 : t80$0);
      if (effectiveColor == null) {
        return new borders.BorderSide.new({width: effectiveWidth});
      }
      return new borders.BorderSide.new({color: effectiveColor, width: effectiveWidth});
    }
    build(context) {
      let t80, t80$, t80$0, t80$1, t80$2, t80$3, t80$4, t80$5;
      let dividerTheme = divider_theme.DividerTheme.of(context);
      let height = (t80$ = (t80 = this.height, t80 == null ? dividerTheme.space : t80), t80$ == null ? 16.0 : t80$);
      let thickness = (t80$1 = (t80$0 = this.thickness, t80$0 == null ? dividerTheme.thickness : t80$0), t80$1 == null ? 0.0 : t80$1);
      let indent = (t80$3 = (t80$2 = this.indent, t80$2 == null ? dividerTheme.indent : t80$2), t80$3 == null ? 0.0 : t80$3);
      let endIndent = (t80$5 = (t80$4 = this.endIndent, t80$4 == null ? dividerTheme.endIndent : t80$4), t80$5 == null ? 0.0 : t80$5);
      return new basic.SizedBox.new({height: height, child: new basic.Center.new({child: new container.Container.new({height: thickness, margin: new edge_insets.EdgeInsetsDirectional.only({start: indent, end: endIndent}), decoration: new box_decoration.BoxDecoration.new({border: new box_border.Border.new({bottom: divider.Divider.createBorderSide(context, {color: this.color, width: thickness})})}), $creationLocationd_0dea112b090073317d4: C[920] || CT.C920}), $creationLocationd_0dea112b090073317d4: C[921] || CT.C921}), $creationLocationd_0dea112b090073317d4: C[922] || CT.C922});
    }
  };
  (divider.Divider.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let thickness = opts && 'thickness' in opts ? opts.thickness : null;
    let indent = opts && 'indent' in opts ? opts.indent : null;
    let endIndent = opts && 'endIndent' in opts ? opts.endIndent : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.height$10] = height;
    this[S$1.thickness$2] = thickness;
    this[S$1.indent$1] = indent;
    this[S$1.endIndent$1] = endIndent;
    this[S$1.color$13] = color;
    if (!(height == null || dart.notNull(height) >= 0.0)) dart.assertFailed(null, I[120], 55, 15, "height == null || height >= 0.0");
    if (!(thickness == null || dart.notNull(thickness) >= 0.0)) dart.assertFailed(null, I[120], 56, 15, "thickness == null || thickness >= 0.0");
    if (!(indent == null || dart.notNull(indent) >= 0.0)) dart.assertFailed(null, I[120], 57, 15, "indent == null || indent >= 0.0");
    if (!(endIndent == null || dart.notNull(endIndent) >= 0.0)) dart.assertFailed(null, I[120], 58, 15, "endIndent == null || endIndent >= 0.0");
    divider.Divider.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = divider.Divider.prototype;
  dart.addTypeTests(divider.Divider);
  dart.addTypeCaches(divider.Divider);
  dart.setMethodSignature(divider.Divider, () => ({
    __proto__: dart.getMethods(divider.Divider.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setStaticMethodSignature(divider.Divider, () => ['createBorderSide']);
  dart.setLibraryUri(divider.Divider, I[121]);
  dart.setFieldSignature(divider.Divider, () => ({
    __proto__: dart.getFields(divider.Divider.__proto__),
    height: dart.finalFieldType(dart.nullable(core.double)),
    thickness: dart.finalFieldType(dart.nullable(core.double)),
    indent: dart.finalFieldType(dart.nullable(core.double)),
    endIndent: dart.finalFieldType(dart.nullable(core.double)),
    color: dart.finalFieldType(dart.nullable(ui.Color))
  }));
  divider.VerticalDivider = class VerticalDivider extends framework.StatelessWidget {
    get width() {
      return this[S$1.width$5];
    }
    set width(value) {
      super.width = value;
    }
    get thickness() {
      return this[S$1.thickness$3];
    }
    set thickness(value) {
      super.thickness = value;
    }
    get indent() {
      return this[S$1.indent$2];
    }
    set indent(value) {
      super.indent = value;
    }
    get endIndent() {
      return this[S$1.endIndent$2];
    }
    set endIndent(value) {
      super.endIndent = value;
    }
    get color() {
      return this[S$1.color$14];
    }
    set color(value) {
      super.color = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let width = opts && 'width' in opts ? opts.width : null;
      let thickness = opts && 'thickness' in opts ? opts.thickness : null;
      let indent = opts && 'indent' in opts ? opts.indent : null;
      let endIndent = opts && 'endIndent' in opts ? opts.endIndent : null;
      let color = opts && 'color' in opts ? opts.color : null;
      return new divider.VerticalDivider.new({key: key, width: width, thickness: thickness, indent: indent, endIndent: endIndent, color: color, $creationLocationd_0dea112b090073317d4: C[923] || CT.C923});
    }
    build(context) {
      let t80, t80$, t80$0, t80$1, t80$2, t80$3, t80$4, t80$5;
      let dividerTheme = divider_theme.DividerTheme.of(context);
      let width = (t80$ = (t80 = this.width, t80 == null ? dividerTheme.space : t80), t80$ == null ? 16.0 : t80$);
      let thickness = (t80$1 = (t80$0 = this.thickness, t80$0 == null ? dividerTheme.thickness : t80$0), t80$1 == null ? 0.0 : t80$1);
      let indent = (t80$3 = (t80$2 = this.indent, t80$2 == null ? dividerTheme.indent : t80$2), t80$3 == null ? 0.0 : t80$3);
      let endIndent = (t80$5 = (t80$4 = this.endIndent, t80$4 == null ? dividerTheme.endIndent : t80$4), t80$5 == null ? 0.0 : t80$5);
      return new basic.SizedBox.new({width: width, child: new basic.Center.new({child: new container.Container.new({width: thickness, margin: new edge_insets.EdgeInsetsDirectional.only({top: indent, bottom: endIndent}), decoration: new box_decoration.BoxDecoration.new({border: new box_border.Border.new({left: divider.Divider.createBorderSide(context, {color: this.color, width: thickness})})}), $creationLocationd_0dea112b090073317d4: C[924] || CT.C924}), $creationLocationd_0dea112b090073317d4: C[925] || CT.C925}), $creationLocationd_0dea112b090073317d4: C[926] || CT.C926});
    }
  };
  (divider.VerticalDivider.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let width = opts && 'width' in opts ? opts.width : null;
    let thickness = opts && 'thickness' in opts ? opts.thickness : null;
    let indent = opts && 'indent' in opts ? opts.indent : null;
    let endIndent = opts && 'endIndent' in opts ? opts.endIndent : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.width$5] = width;
    this[S$1.thickness$3] = thickness;
    this[S$1.indent$2] = indent;
    this[S$1.endIndent$2] = endIndent;
    this[S$1.color$14] = color;
    if (!(width == null || dart.notNull(width) >= 0.0)) dart.assertFailed(null, I[120], 215, 15, "width == null || width >= 0.0");
    if (!(thickness == null || dart.notNull(thickness) >= 0.0)) dart.assertFailed(null, I[120], 216, 15, "thickness == null || thickness >= 0.0");
    if (!(indent == null || dart.notNull(indent) >= 0.0)) dart.assertFailed(null, I[120], 217, 15, "indent == null || indent >= 0.0");
    if (!(endIndent == null || dart.notNull(endIndent) >= 0.0)) dart.assertFailed(null, I[120], 218, 15, "endIndent == null || endIndent >= 0.0");
    divider.VerticalDivider.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = divider.VerticalDivider.prototype;
  dart.addTypeTests(divider.VerticalDivider);
  dart.addTypeCaches(divider.VerticalDivider);
  dart.setMethodSignature(divider.VerticalDivider, () => ({
    __proto__: dart.getMethods(divider.VerticalDivider.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(divider.VerticalDivider, I[121]);
  dart.setFieldSignature(divider.VerticalDivider, () => ({
    __proto__: dart.getFields(divider.VerticalDivider.__proto__),
    width: dart.finalFieldType(dart.nullable(core.double)),
    thickness: dart.finalFieldType(dart.nullable(core.double)),
    indent: dart.finalFieldType(dart.nullable(core.double)),
    endIndent: dart.finalFieldType(dart.nullable(core.double)),
    color: dart.finalFieldType(dart.nullable(ui.Color))
  }));
  const Object_Diagnosticable$36$34 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$34.new = function() {
  }).prototype = Object_Diagnosticable$36$34.prototype;
  dart.applyMixin(Object_Diagnosticable$36$34, diagnostics.Diagnosticable);
  banner_theme.MaterialBannerThemeData = class MaterialBannerThemeData extends Object_Diagnosticable$36$34 {
    get backgroundColor() {
      return this[S$1.backgroundColor$20];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get contentTextStyle() {
      return this[S$1.contentTextStyle$2];
    }
    set contentTextStyle(value) {
      super.contentTextStyle = value;
    }
    get elevation() {
      return this[S$1.elevation$24];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get padding() {
      return this[S$1.padding$12];
    }
    set padding(value) {
      super.padding = value;
    }
    get leadingPadding() {
      return this[S$1.leadingPadding];
    }
    set leadingPadding(value) {
      super.leadingPadding = value;
    }
    static ['_#new#tearOff'](opts) {
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let contentTextStyle = opts && 'contentTextStyle' in opts ? opts.contentTextStyle : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let leadingPadding = opts && 'leadingPadding' in opts ? opts.leadingPadding : null;
      return new banner_theme.MaterialBannerThemeData.new({backgroundColor: backgroundColor, contentTextStyle: contentTextStyle, elevation: elevation, padding: padding, leadingPadding: leadingPadding});
    }
    copyWith(opts) {
      let t80, t80$, t80$0, t80$1, t80$2;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let contentTextStyle = opts && 'contentTextStyle' in opts ? opts.contentTextStyle : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let leadingPadding = opts && 'leadingPadding' in opts ? opts.leadingPadding : null;
      return new banner_theme.MaterialBannerThemeData.new({backgroundColor: (t80 = backgroundColor, t80 == null ? this.backgroundColor : t80), contentTextStyle: (t80$ = contentTextStyle, t80$ == null ? this.contentTextStyle : t80$), elevation: (t80$0 = elevation, t80$0 == null ? this.elevation : t80$0), padding: (t80$1 = padding, t80$1 == null ? this.padding : t80$1), leadingPadding: (t80$2 = leadingPadding, t80$2 == null ? this.leadingPadding : t80$2)});
    }
    static lerp(a, b, t) {
      let t80, t80$, t80$0, t80$1, t80$2, t80$3, t80$4, t80$5, t80$6, t80$7;
      if (!(t !== null)) dart.assertFailed(null, I[122], 83, 12, "t != null");
      return new banner_theme.MaterialBannerThemeData.new({backgroundColor: ui.Color.lerp((t80 = a, t80 == null ? null : t80.backgroundColor), (t80$ = b, t80$ == null ? null : t80$.backgroundColor), t), contentTextStyle: text_style.TextStyle.lerp((t80$0 = a, t80$0 == null ? null : t80$0.contentTextStyle), (t80$1 = b, t80$1 == null ? null : t80$1.contentTextStyle), t), elevation: ui.lerpDouble((t80$2 = a, t80$2 == null ? null : t80$2.elevation), (t80$3 = b, t80$3 == null ? null : t80$3.elevation), t), padding: edge_insets.EdgeInsetsGeometry.lerp((t80$4 = a, t80$4 == null ? null : t80$4.padding), (t80$5 = b, t80$5 == null ? null : t80$5.padding), t), leadingPadding: edge_insets.EdgeInsetsGeometry.lerp((t80$6 = a, t80$6 == null ? null : t80$6.leadingPadding), (t80$7 = b, t80$7 == null ? null : t80$7.leadingPadding), t)});
    }
    get hashCode() {
      return core.Object.hash(this.backgroundColor, this.contentTextStyle, this.elevation, this.padding, this.leadingPadding);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      if (!other[S.$runtimeType]._equals(this[S.$runtimeType])) {
        return false;
      }
      return banner_theme.MaterialBannerThemeData.is(other) && dart.equals(other.backgroundColor, this.backgroundColor) && dart.equals(other.contentTextStyle, this.contentTextStyle) && other.elevation == this.elevation && dart.equals(other.padding, this.padding) && dart.equals(other.leadingPadding, this.leadingPadding);
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new colors.ColorProperty.new("backgroundColor", this.backgroundColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("contentTextStyle", this.contentTextStyle, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfdouble()).new("elevation", this.elevation, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfEdgeInsetsGeometry()).new("padding", this.padding, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfEdgeInsetsGeometry()).new("leadingPadding", this.leadingPadding, {defaultValue: null}));
    }
  };
  (banner_theme.MaterialBannerThemeData.new = function(opts) {
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let contentTextStyle = opts && 'contentTextStyle' in opts ? opts.contentTextStyle : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let leadingPadding = opts && 'leadingPadding' in opts ? opts.leadingPadding : null;
    this[S$1.backgroundColor$20] = backgroundColor;
    this[S$1.contentTextStyle$2] = contentTextStyle;
    this[S$1.elevation$24] = elevation;
    this[S$1.padding$12] = padding;
    this[S$1.leadingPadding] = leadingPadding;
    ;
  }).prototype = banner_theme.MaterialBannerThemeData.prototype;
  dart.addTypeTests(banner_theme.MaterialBannerThemeData);
  dart.addTypeCaches(banner_theme.MaterialBannerThemeData);
  dart.setMethodSignature(banner_theme.MaterialBannerThemeData, () => ({
    __proto__: dart.getMethods(banner_theme.MaterialBannerThemeData.__proto__),
    copyWith: dart.fnType(banner_theme.MaterialBannerThemeData, [], {backgroundColor: dart.nullable(ui.Color), contentTextStyle: dart.nullable(text_style.TextStyle), elevation: dart.nullable(core.double), leadingPadding: dart.nullable(edge_insets.EdgeInsetsGeometry), padding: dart.nullable(edge_insets.EdgeInsetsGeometry)}, {})
  }));
  dart.setStaticMethodSignature(banner_theme.MaterialBannerThemeData, () => ['lerp']);
  dart.setLibraryUri(banner_theme.MaterialBannerThemeData, I[123]);
  dart.setFieldSignature(banner_theme.MaterialBannerThemeData, () => ({
    __proto__: dart.getFields(banner_theme.MaterialBannerThemeData.__proto__),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    contentTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    padding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    leadingPadding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry))
  }));
  dart.defineExtensionMethods(banner_theme.MaterialBannerThemeData, ['_equals']);
  dart.defineExtensionAccessors(banner_theme.MaterialBannerThemeData, ['hashCode']);
  banner_theme.MaterialBannerTheme = class MaterialBannerTheme extends inherited_theme.InheritedTheme {
    get data() {
      return this[S$1.data$24];
    }
    set data(value) {
      super.data = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let data = opts && 'data' in opts ? opts.data : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new banner_theme.MaterialBannerTheme.new({key: key, data: data, child: child, $creationLocationd_0dea112b090073317d4: C[927] || CT.C927});
    }
    static of(context) {
      let t80, t80$;
      let bannerTheme = context.dependOnInheritedWidgetOfExactType(banner_theme.MaterialBannerTheme);
      t80$ = (t80 = bannerTheme, t80 == null ? null : t80.data);
      return t80$ == null ? theme$.Theme.of(context).bannerTheme : t80$;
    }
    wrap(context, child) {
      return new banner_theme.MaterialBannerTheme.new({data: this.data, child: child, $creationLocationd_0dea112b090073317d4: C[928] || CT.C928});
    }
    updateShouldNotify(oldWidget) {
      banner_theme.MaterialBannerTheme.as(oldWidget);
      return !dart.equals(this.data, oldWidget.data);
    }
  };
  (banner_theme.MaterialBannerTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.data$24] = data;
    banner_theme.MaterialBannerTheme.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = banner_theme.MaterialBannerTheme.prototype;
  dart.addTypeTests(banner_theme.MaterialBannerTheme);
  dart.addTypeCaches(banner_theme.MaterialBannerTheme);
  dart.setMethodSignature(banner_theme.MaterialBannerTheme, () => ({
    __proto__: dart.getMethods(banner_theme.MaterialBannerTheme.__proto__),
    wrap: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget]),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setStaticMethodSignature(banner_theme.MaterialBannerTheme, () => ['of']);
  dart.setLibraryUri(banner_theme.MaterialBannerTheme, I[123]);
  dart.setFieldSignature(banner_theme.MaterialBannerTheme, () => ({
    __proto__: dart.getFields(banner_theme.MaterialBannerTheme.__proto__),
    data: dart.finalFieldType(dart.nullable(banner_theme.MaterialBannerThemeData))
  }));
  banner.MaterialBannerClosedReason = class MaterialBannerClosedReason extends core._Enum {
    toString() {
      return "MaterialBannerClosedReason." + this[S._name];
    }
  };
  (banner.MaterialBannerClosedReason.new = function(index, name) {
    banner.MaterialBannerClosedReason.__proto__.new.call(this, index, name);
    ;
  }).prototype = banner.MaterialBannerClosedReason.prototype;
  dart.addTypeTests(banner.MaterialBannerClosedReason);
  dart.addTypeCaches(banner.MaterialBannerClosedReason);
  dart.setLibraryUri(banner.MaterialBannerClosedReason, I[124]);
  dart.setStaticFieldSignature(banner.MaterialBannerClosedReason, () => ['values', 'dismiss', 'swipe', 'hide', 'remove']);
  dart.defineExtensionMethods(banner.MaterialBannerClosedReason, ['toString']);
  dart.defineLazy(banner.MaterialBannerClosedReason, {
    /*banner.MaterialBannerClosedReason.values*/get values() {
      return C[929] || CT.C929;
    },
    /*banner.MaterialBannerClosedReason.dismiss*/get dismiss() {
      return C[930] || CT.C930;
    },
    /*banner.MaterialBannerClosedReason.swipe*/get swipe() {
      return C[931] || CT.C931;
    },
    /*banner.MaterialBannerClosedReason.hide*/get hide() {
      return C[932] || CT.C932;
    },
    /*banner.MaterialBannerClosedReason.remove*/get remove() {
      return C[933] || CT.C933;
    }
  }, false);
  banner.MaterialBanner = class MaterialBanner extends framework.StatefulWidget {
    get content() {
      return this[S$1.content$1];
    }
    set content(value) {
      super.content = value;
    }
    get contentTextStyle() {
      return this[S$1.contentTextStyle$3];
    }
    set contentTextStyle(value) {
      super.contentTextStyle = value;
    }
    get actions() {
      return this[S$1.actions];
    }
    set actions(value) {
      super.actions = value;
    }
    get elevation() {
      return this[S$1.elevation$25];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get leading() {
      return this[S$1.leading$3];
    }
    set leading(value) {
      super.leading = value;
    }
    get backgroundColor() {
      return this[S$1.backgroundColor$21];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get padding() {
      return this[S$1.padding$13];
    }
    set padding(value) {
      super.padding = value;
    }
    get leadingPadding() {
      return this[S$1.leadingPadding$1];
    }
    set leadingPadding(value) {
      super.leadingPadding = value;
    }
    get forceActionsBelow() {
      return this[S$1.forceActionsBelow];
    }
    set forceActionsBelow(value) {
      super.forceActionsBelow = value;
    }
    get overflowAlignment() {
      return this[S$1.overflowAlignment];
    }
    set overflowAlignment(value) {
      super.overflowAlignment = value;
    }
    get animation() {
      return this[S$1.animation$12];
    }
    set animation(value) {
      super.animation = value;
    }
    get onVisible() {
      return this[S$1.onVisible$1];
    }
    set onVisible(value) {
      super.onVisible = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let content = opts && 'content' in opts ? opts.content : null;
      let contentTextStyle = opts && 'contentTextStyle' in opts ? opts.contentTextStyle : null;
      let actions = opts && 'actions' in opts ? opts.actions : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let leading = opts && 'leading' in opts ? opts.leading : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let leadingPadding = opts && 'leadingPadding' in opts ? opts.leadingPadding : null;
      let forceActionsBelow = opts && 'forceActionsBelow' in opts ? opts.forceActionsBelow : false;
      let overflowAlignment = opts && 'overflowAlignment' in opts ? opts.overflowAlignment : C[934] || CT.C934;
      let animation = opts && 'animation' in opts ? opts.animation : null;
      let onVisible = opts && 'onVisible' in opts ? opts.onVisible : null;
      return new banner.MaterialBanner.new({key: key, content: content, contentTextStyle: contentTextStyle, actions: actions, elevation: elevation, leading: leading, backgroundColor: backgroundColor, padding: padding, leadingPadding: leadingPadding, forceActionsBelow: forceActionsBelow, overflowAlignment: overflowAlignment, animation: animation, onVisible: onVisible, $creationLocationd_0dea112b090073317d4: C[935] || CT.C935});
    }
    static createAnimationController(opts) {
      let vsync = opts && 'vsync' in opts ? opts.vsync : null;
      return new animation_controller.AnimationController.new({duration: banner._materialBannerTransitionDuration, debugLabel: "MaterialBanner", vsync: vsync});
    }
    withAnimation(newAnimation, opts) {
      let t82;
      let fallbackKey = opts && 'fallbackKey' in opts ? opts.fallbackKey : null;
      return new banner.MaterialBanner.new({key: (t82 = this.key, t82 == null ? fallbackKey : t82), content: this.content, contentTextStyle: this.contentTextStyle, actions: this.actions, elevation: this.elevation, leading: this.leading, backgroundColor: this.backgroundColor, padding: this.padding, leadingPadding: this.leadingPadding, forceActionsBelow: this.forceActionsBelow, overflowAlignment: this.overflowAlignment, animation: newAnimation, onVisible: this.onVisible, $creationLocationd_0dea112b090073317d4: C[936] || CT.C936});
    }
    createState() {
      return new banner._MaterialBannerState.new();
    }
  };
  (banner.MaterialBanner.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let content = opts && 'content' in opts ? opts.content : null;
    let contentTextStyle = opts && 'contentTextStyle' in opts ? opts.contentTextStyle : null;
    let actions = opts && 'actions' in opts ? opts.actions : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let leading = opts && 'leading' in opts ? opts.leading : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let leadingPadding = opts && 'leadingPadding' in opts ? opts.leadingPadding : null;
    let forceActionsBelow = opts && 'forceActionsBelow' in opts ? opts.forceActionsBelow : false;
    let overflowAlignment = opts && 'overflowAlignment' in opts ? opts.overflowAlignment : C[934] || CT.C934;
    let animation = opts && 'animation' in opts ? opts.animation : null;
    let onVisible = opts && 'onVisible' in opts ? opts.onVisible : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.content$1] = content;
    this[S$1.contentTextStyle$3] = contentTextStyle;
    this[S$1.actions] = actions;
    this[S$1.elevation$25] = elevation;
    this[S$1.leading$3] = leading;
    this[S$1.backgroundColor$21] = backgroundColor;
    this[S$1.padding$13] = padding;
    this[S$1.leadingPadding$1] = leadingPadding;
    this[S$1.forceActionsBelow] = forceActionsBelow;
    this[S$1.overflowAlignment] = overflowAlignment;
    this[S$1.animation$12] = animation;
    this[S$1.onVisible$1] = onVisible;
    if (!(elevation == null || dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, I[125], 103, 15, "elevation == null || elevation >= 0.0");
    if (!(content !== null)) dart.assertFailed(null, I[125], 104, 15, "content != null");
    if (!(actions !== null)) dart.assertFailed(null, I[125], 105, 15, "actions != null");
    if (!(forceActionsBelow !== null)) dart.assertFailed(null, I[125], 106, 15, "forceActionsBelow != null");
    banner.MaterialBanner.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = banner.MaterialBanner.prototype;
  dart.addTypeTests(banner.MaterialBanner);
  dart.addTypeCaches(banner.MaterialBanner);
  dart.setMethodSignature(banner.MaterialBanner, () => ({
    __proto__: dart.getMethods(banner.MaterialBanner.__proto__),
    withAnimation: dart.fnType(banner.MaterialBanner, [animation$.Animation$(core.double)], {fallbackKey: dart.nullable(key.Key)}, {}),
    createState: dart.fnType(framework.State$(banner.MaterialBanner), [])
  }));
  dart.setStaticMethodSignature(banner.MaterialBanner, () => ['createAnimationController']);
  dart.setLibraryUri(banner.MaterialBanner, I[124]);
  dart.setFieldSignature(banner.MaterialBanner, () => ({
    __proto__: dart.getFields(banner.MaterialBanner.__proto__),
    content: dart.finalFieldType(framework.Widget),
    contentTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    actions: dart.finalFieldType(core.List$(framework.Widget)),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    leading: dart.finalFieldType(dart.nullable(framework.Widget)),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    padding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    leadingPadding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    forceActionsBelow: dart.finalFieldType(core.bool),
    overflowAlignment: dart.finalFieldType(overflow_bar.OverflowBarAlignment),
    animation: dart.finalFieldType(dart.nullable(animation$.Animation$(core.double))),
    onVisible: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [])))
  }));
  banner._MaterialBannerState = class _MaterialBannerState extends framework.State$(banner.MaterialBanner) {
    initState() {
      let t82;
      super.initState();
      t82 = this.widget.animation;
      t82 == null ? null : t82.addStatusListener(dart.bind(this, S$1._onAnimationStatusChanged$1));
    }
    didUpdateWidget(oldWidget) {
      let t82, t82$;
      banner.MaterialBanner.as(oldWidget);
      super.didUpdateWidget(oldWidget);
      if (!dart.equals(this.widget.animation, oldWidget.animation)) {
        t82 = oldWidget.animation;
        t82 == null ? null : t82.removeStatusListener(dart.bind(this, S$1._onAnimationStatusChanged$1));
        t82$ = this.widget.animation;
        t82$ == null ? null : t82$.addStatusListener(dart.bind(this, S$1._onAnimationStatusChanged$1));
      }
    }
    dispose() {
      let t82;
      t82 = this.widget.animation;
      t82 == null ? null : t82.removeStatusListener(dart.bind(this, S$1._onAnimationStatusChanged$1));
      super.dispose();
    }
    [S$1._onAnimationStatusChanged$1](animationStatus) {
      switch (animationStatus) {
        case C[102] || CT.C102:
        case C[103] || CT.C103:
        case C[104] || CT.C104:
          {
            break;
          }
        case C[105] || CT.C105:
          {
            if (this.widget.onVisible != null && !this[S$1._wasVisible$1]) {
              dart.nullCheck(this.widget.onVisible)();
            }
            this[S$1._wasVisible$1] = true;
          }
      }
    }
    build(context) {
      let t82, t82$, t82$0, t82$1, t82$2, t82$3, t82$4, t82$5, t82$6, t82$7;
      if (!debug.debugCheckHasMediaQuery(context)) dart.assertFailed(null, I[125], 261, 12, "debugCheckHasMediaQuery(context)");
      let mediaQueryData = media_query.MediaQuery.of(context);
      if (!this.widget.actions[S.$isNotEmpty]) dart.assertFailed(null, I[125], 264, 12, "widget.actions.isNotEmpty");
      let theme = theme$.Theme.of(context);
      let bannerTheme = banner_theme.MaterialBannerTheme.of(context);
      let isSingleRow = this.widget.actions[S.$length] === 1 && !this.widget.forceActionsBelow;
      let padding = (t82$ = (t82 = this.widget.padding, t82 == null ? bannerTheme.padding : t82), t82$ == null ? isSingleRow ? C[937] || CT.C937 : C[938] || CT.C938 : t82$);
      let leadingPadding = (t82$1 = (t82$0 = this.widget.leadingPadding, t82$0 == null ? bannerTheme.leadingPadding : t82$0), t82$1 == null ? C[565] || CT.C565 : t82$1);
      let buttonBar = new container.Container.new({alignment: alignment.AlignmentDirectional.centerEnd, constraints: C[939] || CT.C939, padding: C[86] || CT.C86, child: new overflow_bar.OverflowBar.new({overflowAlignment: this.widget.overflowAlignment, spacing: 8.0, children: this.widget.actions, $creationLocationd_0dea112b090073317d4: C[940] || CT.C940}), $creationLocationd_0dea112b090073317d4: C[941] || CT.C941});
      let elevation = (t82$3 = (t82$2 = this.widget.elevation, t82$2 == null ? bannerTheme.elevation : t82$2), t82$3 == null ? 0.0 : t82$3);
      let backgroundColor = (t82$5 = (t82$4 = this.widget.backgroundColor, t82$4 == null ? bannerTheme.backgroundColor : t82$4), t82$5 == null ? theme.colorScheme.surface : t82$5);
      let textStyle = (t82$7 = (t82$6 = this.widget.contentTextStyle, t82$6 == null ? bannerTheme.contentTextStyle : t82$6), t82$7 == null ? theme.textTheme.bodyText2 : t82$7);
      let materialBanner = new container.Container.new({margin: new edge_insets.EdgeInsets.only({bottom: elevation > 0 ? 10.0 : 0.0}), child: new material.Material.new({elevation: elevation, color: backgroundColor, child: new basic.Column.new({mainAxisSize: flex.MainAxisSize.min, children: (() => {
              let t82 = T$.JSArrayOfWidget().of([new basic.Padding.new({padding: padding, child: new basic.Row.new({children: (() => {
                      let t83 = T$.JSArrayOfWidget().of([]);
                      if (this.widget.leading != null) t83.push(new basic.Padding.new({padding: leadingPadding, child: this.widget.leading, $creationLocationd_0dea112b090073317d4: C[942] || CT.C942}));
                      t83.push(new basic.Expanded.new({child: new text$.DefaultTextStyle.new({style: dart.nullCheck(textStyle), child: this.widget.content, $creationLocationd_0dea112b090073317d4: C[943] || CT.C943}), $creationLocationd_0dea112b090073317d4: C[944] || CT.C944}));
                      if (isSingleRow) t83.push(buttonBar);
                      return t83;
                    })(), $creationLocationd_0dea112b090073317d4: C[945] || CT.C945}), $creationLocationd_0dea112b090073317d4: C[946] || CT.C946})]);
              if (!isSingleRow) t82.push(buttonBar);
              if (elevation === 0) t82.push(C[947] || CT.C947);
              return t82;
            })(), $creationLocationd_0dea112b090073317d4: C[949] || CT.C949}), $creationLocationd_0dea112b090073317d4: C[950] || CT.C950}), $creationLocationd_0dea112b090073317d4: C[951] || CT.C951});
      if (this.widget.animation == null) {
        return materialBanner;
      }
      materialBanner = new safe_area.SafeArea.new({child: materialBanner, $creationLocationd_0dea112b090073317d4: C[952] || CT.C952});
      let heightAnimation = new animations.CurvedAnimation.new({parent: dart.nullCheck(this.widget.animation), curve: banner._materialBannerHeightCurve});
      let slideOutAnimation = new (T$.TweenOfOffset()).new({begin: C[953] || CT.C953, end: ui.Offset.zero}).animate(new animations.CurvedAnimation.new({parent: dart.nullCheck(this.widget.animation), curve: C[106] || CT.C106}));
      materialBanner = new basic.Semantics.new({container: true, liveRegion: true, onDismiss: dart.fn(() => {
          scaffold$.ScaffoldMessenger.of(context).removeCurrentMaterialBanner({reason: banner.MaterialBannerClosedReason.dismiss});
        }, T$.VoidTovoid()), child: mediaQueryData.accessibleNavigation ? materialBanner : new transitions.SlideTransition.new({position: slideOutAnimation, child: materialBanner, $creationLocationd_0dea112b090073317d4: C[954] || CT.C954}), $creationLocationd_0dea112b090073317d4: C[955] || CT.C955});
      let materialBannerTransition = null;
      if (mediaQueryData.accessibleNavigation) {
        materialBannerTransition = materialBanner;
      } else {
        materialBannerTransition = new transitions.AnimatedBuilder.new({animation: heightAnimation, builder: dart.fn((context, child) => new basic.Align.new({alignment: alignment.AlignmentDirectional.bottomStart, heightFactor: heightAnimation.value, child: child, $creationLocationd_0dea112b090073317d4: C[956] || CT.C956}), T$.BuildContextAndWidgetNToAlign()), child: materialBanner, $creationLocationd_0dea112b090073317d4: C[957] || CT.C957});
      }
      return new heroes.Hero.new({tag: "<MaterialBanner Hero tag - " + dart.str(this.widget.content) + ">", child: new basic.ClipRect.new({child: materialBannerTransition, $creationLocationd_0dea112b090073317d4: C[958] || CT.C958}), $creationLocationd_0dea112b090073317d4: C[959] || CT.C959});
    }
    static ['_#new#tearOff']() {
      return new banner._MaterialBannerState.new();
    }
  };
  (banner._MaterialBannerState.new = function() {
    this[S$1._wasVisible$1] = false;
    banner._MaterialBannerState.__proto__.new.call(this);
    ;
  }).prototype = banner._MaterialBannerState.prototype;
  dart.addTypeTests(banner._MaterialBannerState);
  dart.addTypeCaches(banner._MaterialBannerState);
  dart.setMethodSignature(banner._MaterialBannerState, () => ({
    __proto__: dart.getMethods(banner._MaterialBannerState.__proto__),
    [S$1._onAnimationStatusChanged$1]: dart.fnType(dart.void, [animation$.AnimationStatus]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(banner._MaterialBannerState, I[124]);
  dart.setFieldSignature(banner._MaterialBannerState, () => ({
    __proto__: dart.getFields(banner._MaterialBannerState.__proto__),
    [S$1._wasVisible$1]: dart.fieldType(core.bool)
  }));
  dart.defineLazy(banner, {
    /*banner._materialBannerTransitionDuration*/get _materialBannerTransitionDuration() {
      return C[132] || CT.C132;
    },
    /*banner._materialBannerHeightCurve*/get _materialBannerHeightCurve() {
      return C[133] || CT.C133;
    }
  }, false);
  scaffold$._ScaffoldSlot = class _ScaffoldSlot extends core._Enum {
    toString() {
      return "_ScaffoldSlot." + this[S._name];
    }
  };
  (scaffold$._ScaffoldSlot.new = function(index, name) {
    scaffold$._ScaffoldSlot.__proto__.new.call(this, index, name);
    ;
  }).prototype = scaffold$._ScaffoldSlot.prototype;
  dart.addTypeTests(scaffold$._ScaffoldSlot);
  dart.addTypeCaches(scaffold$._ScaffoldSlot);
  dart.setLibraryUri(scaffold$._ScaffoldSlot, I[126]);
  dart.setStaticFieldSignature(scaffold$._ScaffoldSlot, () => ['values', 'body', 'appBar', 'bodyScrim', 'bottomSheet', 'snackBar', 'materialBanner', 'persistentFooter', 'bottomNavigationBar', 'floatingActionButton', 'drawer', 'endDrawer', 'statusBar']);
  dart.defineExtensionMethods(scaffold$._ScaffoldSlot, ['toString']);
  dart.defineLazy(scaffold$._ScaffoldSlot, {
    /*scaffold$._ScaffoldSlot.values*/get values() {
      return C[960] || CT.C960;
    },
    /*scaffold$._ScaffoldSlot.body*/get body() {
      return C[961] || CT.C961;
    },
    /*scaffold$._ScaffoldSlot.appBar*/get appBar() {
      return C[962] || CT.C962;
    },
    /*scaffold$._ScaffoldSlot.bodyScrim*/get bodyScrim() {
      return C[963] || CT.C963;
    },
    /*scaffold$._ScaffoldSlot.bottomSheet*/get bottomSheet() {
      return C[964] || CT.C964;
    },
    /*scaffold$._ScaffoldSlot.snackBar*/get snackBar() {
      return C[965] || CT.C965;
    },
    /*scaffold$._ScaffoldSlot.materialBanner*/get materialBanner() {
      return C[966] || CT.C966;
    },
    /*scaffold$._ScaffoldSlot.persistentFooter*/get persistentFooter() {
      return C[967] || CT.C967;
    },
    /*scaffold$._ScaffoldSlot.bottomNavigationBar*/get bottomNavigationBar() {
      return C[968] || CT.C968;
    },
    /*scaffold$._ScaffoldSlot.floatingActionButton*/get floatingActionButton() {
      return C[969] || CT.C969;
    },
    /*scaffold$._ScaffoldSlot.drawer*/get drawer() {
      return C[970] || CT.C970;
    },
    /*scaffold$._ScaffoldSlot.endDrawer*/get endDrawer() {
      return C[971] || CT.C971;
    },
    /*scaffold$._ScaffoldSlot.statusBar*/get statusBar() {
      return C[972] || CT.C972;
    }
  }, false);
  scaffold$.ScaffoldMessenger = class ScaffoldMessenger extends framework.StatefulWidget {
    get child() {
      return this[S$1.child$26];
    }
    set child(value) {
      super.child = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new scaffold$.ScaffoldMessenger.new({key: key, child: child, $creationLocationd_0dea112b090073317d4: C[973] || CT.C973});
    }
    static of(context) {
      if (!(context !== null)) dart.assertFailed(null, I[127], 145, 12, "context != null");
      if (!debug$1.debugCheckHasScaffoldMessenger(context)) dart.assertFailed(null, I[127], 146, 12, "debugCheckHasScaffoldMessenger(context)");
      let scope = dart.nullCheck(context.dependOnInheritedWidgetOfExactType(scaffold$._ScaffoldMessengerScope));
      return scope[S$1._scaffoldMessengerState];
    }
    static maybeOf(context) {
      let t86;
      if (!(context !== null)) dart.assertFailed(null, I[127], 162, 12, "context != null");
      let scope = context.dependOnInheritedWidgetOfExactType(scaffold$._ScaffoldMessengerScope);
      t86 = scope;
      return t86 == null ? null : t86[S$1._scaffoldMessengerState];
    }
    createState() {
      return new scaffold$.ScaffoldMessengerState.new();
    }
  };
  (scaffold$.ScaffoldMessenger.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.child$26] = child;
    if (!(child !== null)) dart.assertFailed(null, I[127], 101, 15, "child != null");
    scaffold$.ScaffoldMessenger.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scaffold$.ScaffoldMessenger.prototype;
  dart.addTypeTests(scaffold$.ScaffoldMessenger);
  dart.addTypeCaches(scaffold$.ScaffoldMessenger);
  dart.setMethodSignature(scaffold$.ScaffoldMessenger, () => ({
    __proto__: dart.getMethods(scaffold$.ScaffoldMessenger.__proto__),
    createState: dart.fnType(scaffold$.ScaffoldMessengerState, [])
  }));
  dart.setStaticMethodSignature(scaffold$.ScaffoldMessenger, () => ['of', 'maybeOf']);
  dart.setLibraryUri(scaffold$.ScaffoldMessenger, I[126]);
  dart.setFieldSignature(scaffold$.ScaffoldMessenger, () => ({
    __proto__: dart.getFields(scaffold$.ScaffoldMessenger.__proto__),
    child: dart.finalFieldType(framework.Widget)
  }));
  const State_TickerProviderStateMixin$36$3 = class State_TickerProviderStateMixin extends framework.State$(scaffold$.ScaffoldMessenger) {};
  (State_TickerProviderStateMixin$36$3.new = function() {
    ticker_provider.TickerProviderStateMixin$(scaffold$.ScaffoldMessenger)[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36$3.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36$3.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36$3, ticker_provider.TickerProviderStateMixin$(scaffold$.ScaffoldMessenger));
  scaffold$.ScaffoldMessengerState = class ScaffoldMessengerState extends State_TickerProviderStateMixin$36$3 {
    didChangeDependencies() {
      let t86;
      let mediaQuery = media_query.MediaQuery.of(this.context);
      if (dart.test((t86 = this[S$1._accessibleNavigation], t86 == null ? false : t86)) && !mediaQuery.accessibleNavigation && this[S$1._snackBarTimer] != null && !dart.nullCheck(this[S$1._snackBarTimer]).isActive) {
        this.hideCurrentSnackBar({reason: snack_bar.SnackBarClosedReason.timeout});
      }
      this[S$1._accessibleNavigation] = mediaQuery.accessibleNavigation;
      super.didChangeDependencies();
    }
    [S$1._register](scaffold) {
      this[S$1._scaffolds].add(scaffold);
      if (this[S$1._isRoot](scaffold)) {
        if (this[S$1._snackBars][S.$isNotEmpty]) {
          scaffold[S$1._updateSnackBar]();
        }
        if (this[S$1._materialBanners][S.$isNotEmpty]) {
          scaffold[S$1._updateMaterialBanner]();
        }
      }
    }
    [S$1._unregister](scaffold) {
      let removed = this[S$1._scaffolds].remove(scaffold);
      if (!removed) dart.assertFailed(null, I[127], 224, 12, "removed");
    }
    [S$1._updateScaffolds]() {
      for (let scaffold of this[S$1._scaffolds]) {
        if (this[S$1._isRoot](scaffold)) {
          scaffold[S$1._updateSnackBar]();
          scaffold[S$1._updateMaterialBanner]();
        }
      }
    }
    [S$1._isRoot](scaffold) {
      let parent = scaffold.context.findAncestorStateOfType(scaffold$.ScaffoldState);
      return parent == null || !this[S$1._scaffolds].contains(parent);
    }
    showSnackBar(snackBar) {
      let t86;
      if (!this[S$1._scaffolds][S.$isNotEmpty]) dart.assertFailed("ScaffoldMessenger.showSnackBar was called, but there are currently no " + "descendant Scaffolds to present to.", I[127], 269, 7, "_scaffolds.isNotEmpty");
      this[S$1._snackBarController] == null ? this[S$1._snackBarController] = (t86 = snack_bar.SnackBar.createAnimationController({vsync: this}), (() => {
        t86.addStatusListener(dart.bind(this, S$1._handleSnackBarStatusChanged));
        return t86;
      })()) : null;
      if (this[S$1._snackBars][S$0.$isEmpty]) {
        if (!dart.nullCheck(this[S$1._snackBarController]).isDismissed) dart.assertFailed(null, I[127], 276, 14, "_snackBarController!.isDismissed");
        dart.nullCheck(this[S$1._snackBarController]).forward();
      }
      let controller = null;
      function controller$35get() {
        let t87;
        t87 = controller;
        return t87 == null ? dart.throw(new _internal.LateError.localNI("controller")) : t87;
      }
      dart.fn(controller$35get, T$.VoidToScaffoldFeatureControllerOfSnackBar$SnackBarClosedReason());
      function controller$35set(controller$35param) {
        return controller = controller$35param;
      }
      dart.fn(controller$35set, T$.ScaffoldFeatureControllerOfSnackBar$SnackBarClosedReasonTodynamic());
      controller$35set(new (T$.ScaffoldFeatureControllerOfSnackBar$SnackBarClosedReason()).__(snackBar.withAnimation(dart.nullCheck(this[S$1._snackBarController]), {fallbackKey: new key.UniqueKey.new()}), T$.CompleterOfSnackBarClosedReason().new(), dart.fn(() => {
        if (!this[S$1._snackBars][S$1.$first][S.$_equals](controller$35get())) dart.assertFailed(null, I[127], 287, 18, "_snackBars.first == controller");
        this.hideCurrentSnackBar();
      }, T$.VoidTovoid()), null));
      try {
        this.setState(dart.fn(() => {
          this[S$1._snackBars].addLast(controller$35get());
        }, T$.VoidTovoid()));
        this[S$1._updateScaffolds]();
      } catch (e) {
        let exception = dart.getThrown(e);
        if (core.Object.is(exception)) {
          if (!dart.fn(() => {
            if (assertions.FlutterError.is(exception)) {
              let summary = exception.diagnostics[S$1.$first].toDescription();
              if (summary === "setState() or markNeedsBuild() called during build.") {
                let information = T$.JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("The showSnackBar() method cannot be called during build."), new assertions.ErrorDescription.new("The showSnackBar() method was called during build, which is " + "prohibited as showing snack bars requires updating state. Updating " + "state is not possible during build."), new assertions.ErrorHint.new("Instead of calling showSnackBar() during build, call it directly " + "in your on tap (and related) callbacks. If you need to immediately " + "show a snack bar, make the call in initState() or " + "didChangeDependencies() instead. Otherwise, you can also schedule a " + "post-frame callback using SchedulerBinding.addPostFrameCallback to " + "show the snack bar after the current frame."), this.context.describeOwnershipChain("The ownership chain for the particular ScaffoldMessenger is")]);
                dart.throw(new assertions.FlutterError.fromParts(information));
              }
            }
            return true;
          }, T$.VoidTobool())()) dart.assertFailed(null, I[127], 298, 15, "() {\n        if (exception is FlutterError) {\n          final String summary = exception.diagnostics.first.toDescription();\n          if (summary == 'setState() or markNeedsBuild() called during build.') {\n            final List<DiagnosticsNode> information = <DiagnosticsNode>[\n              ErrorSummary('The showSnackBar() method cannot be called during build.'),\n              ErrorDescription(\n                'The showSnackBar() method was called during build, which is '\n                'prohibited as showing snack bars requires updating state. Updating '\n                'state is not possible during build.',\n              ),\n              ErrorHint(\n                'Instead of calling showSnackBar() during build, call it directly '\n                'in your on tap (and related) callbacks. If you need to immediately '\n                'show a snack bar, make the call in initState() or '\n                'didChangeDependencies() instead. Otherwise, you can also schedule a '\n                'post-frame callback using SchedulerBinding.addPostFrameCallback to '\n                'show the snack bar after the current frame.',\n              ),\n              context.describeOwnershipChain(\n                'The ownership chain for the particular ScaffoldMessenger is',\n              ),\n            ];\n            throw FlutterError.fromParts(information);\n          }\n        }\n        return true;\n      }()");
          dart.rethrow(e);
        } else
          throw e;
      }
      return controller$35get();
    }
    [S$1._handleSnackBarStatusChanged](status) {
      switch (status) {
        case C[102] || CT.C102:
          {
            if (!this[S$1._snackBars][S.$isNotEmpty]) dart.assertFailed(null, I[127], 335, 16, "_snackBars.isNotEmpty");
            this.setState(dart.fn(() => {
              this[S$1._snackBars].removeFirst();
            }, T$.VoidTovoid()));
            this[S$1._updateScaffolds]();
            if (this[S$1._snackBars][S.$isNotEmpty]) {
              dart.nullCheck(this[S$1._snackBarController]).forward();
            }
            break;
          }
        case C[105] || CT.C105:
          {
            this.setState(dart.fn(() => {
              if (!(this[S$1._snackBarTimer] == null)) dart.assertFailed(null, I[127], 346, 18, "_snackBarTimer == null");
            }, T$.VoidTovoid()));
            this[S$1._updateScaffolds]();
            break;
          }
        case C[103] || CT.C103:
          {
            break;
          }
        case C[104] || CT.C104:
          {
            break;
          }
      }
    }
    removeCurrentSnackBar(opts) {
      let t90;
      let reason = opts && 'reason' in opts ? opts.reason : C[92] || CT.C92;
      if (!(reason !== null)) dart.assertFailed(null, I[127], 364, 12, "reason != null");
      if (this[S$1._snackBars][S$0.$isEmpty]) {
        return;
      }
      let completer = this[S$1._snackBars][S$1.$first][S$1._completer];
      if (!completer.isCompleted) {
        completer.complete(reason);
      }
      t90 = this[S$1._snackBarTimer];
      t90 == null ? null : t90.cancel();
      this[S$1._snackBarTimer] = null;
      dart.nullCheck(this[S$1._snackBarController]).value = 0.0;
    }
    hideCurrentSnackBar(opts) {
      let t90;
      let reason = opts && 'reason' in opts ? opts.reason : C[91] || CT.C91;
      if (!(reason !== null)) dart.assertFailed(null, I[127], 382, 12, "reason != null");
      if (this[S$1._snackBars][S$0.$isEmpty] || dart.nullCheck(this[S$1._snackBarController]).status === animation$.AnimationStatus.dismissed) {
        return;
      }
      let completer = this[S$1._snackBars][S$1.$first][S$1._completer];
      if (dart.nullCheck(this[S$1._accessibleNavigation])) {
        dart.nullCheck(this[S$1._snackBarController]).value = 0.0;
        completer.complete(reason);
      } else {
        dart.nullCheck(this[S$1._snackBarController]).reverse().then(dart.void, dart.fn(value => {
          if (!this.mounted) dart.assertFailed(null, I[127], 392, 16, "mounted");
          if (!completer.isCompleted) {
            completer.complete(reason);
          }
        }, T$.voidToNull()));
      }
      t90 = this[S$1._snackBarTimer];
      t90 == null ? null : t90.cancel();
      this[S$1._snackBarTimer] = null;
    }
    clearSnackBars() {
      if (this[S$1._snackBars][S$0.$isEmpty] || dart.nullCheck(this[S$1._snackBarController]).status === animation$.AnimationStatus.dismissed) {
        return;
      }
      let currentSnackbar = this[S$1._snackBars][S$1.$first];
      this[S$1._snackBars].clear();
      this[S$1._snackBars].add(currentSnackbar);
      this.hideCurrentSnackBar();
    }
    showMaterialBanner(materialBanner) {
      let t90;
      if (!this[S$1._scaffolds][S.$isNotEmpty]) dart.assertFailed("ScaffoldMessenger.showMaterialBanner was called, but there are currently no " + "descendant Scaffolds to present to.", I[127], 438, 7, "_scaffolds.isNotEmpty");
      this[S$1._materialBannerController] == null ? this[S$1._materialBannerController] = (t90 = banner.MaterialBanner.createAnimationController({vsync: this}), (() => {
        t90.addStatusListener(dart.bind(this, S$1._handleMaterialBannerStatusChanged));
        return t90;
      })()) : null;
      if (this[S$1._materialBanners][S$0.$isEmpty]) {
        if (!dart.nullCheck(this[S$1._materialBannerController]).isDismissed) dart.assertFailed(null, I[127], 445, 14, "_materialBannerController!.isDismissed");
        dart.nullCheck(this[S$1._materialBannerController]).forward();
      }
      let controller = null;
      function controller$35get() {
        let t91;
        t91 = controller;
        return t91 == null ? dart.throw(new _internal.LateError.localNI("controller")) : t91;
      }
      dart.fn(controller$35get, T$.VoidToScaffoldFeatureControllerOfMaterialBanner$MaterialBannerClosedReason());
      function controller$35set(controller$35param) {
        return controller = controller$35param;
      }
      dart.fn(controller$35set, T$.ScaffoldFeatureControllerOfMaterialBanner$MaterialBannerClosedReasonTodynamic());
      controller$35set(new (T$.ScaffoldFeatureControllerOfMaterialBanner$MaterialBannerClosedReason()).__(materialBanner.withAnimation(dart.nullCheck(this[S$1._materialBannerController]), {fallbackKey: new key.UniqueKey.new()}), T$.CompleterOfMaterialBannerClosedReason().new(), dart.fn(() => {
        if (!this[S$1._materialBanners][S$1.$first][S.$_equals](controller$35get())) dart.assertFailed(null, I[127], 456, 16, "_materialBanners.first == controller");
        this.hideCurrentMaterialBanner();
      }, T$.VoidTovoid()), null));
      this.setState(dart.fn(() => {
        this[S$1._materialBanners].addLast(controller$35get());
      }, T$.VoidTovoid()));
      this[S$1._updateScaffolds]();
      return controller$35get();
    }
    [S$1._handleMaterialBannerStatusChanged](status) {
      switch (status) {
        case C[102] || CT.C102:
          {
            if (!this[S$1._materialBanners][S.$isNotEmpty]) dart.assertFailed(null, I[127], 471, 16, "_materialBanners.isNotEmpty");
            this.setState(dart.fn(() => {
              this[S$1._materialBanners].removeFirst();
            }, T$.VoidTovoid()));
            this[S$1._updateScaffolds]();
            if (this[S$1._materialBanners][S.$isNotEmpty]) {
              dart.nullCheck(this[S$1._materialBannerController]).forward();
            }
            break;
          }
        case C[105] || CT.C105:
          {
            this[S$1._updateScaffolds]();
            break;
          }
        case C[103] || CT.C103:
          {
            break;
          }
        case C[104] || CT.C104:
          {
            break;
          }
      }
    }
    removeCurrentMaterialBanner(opts) {
      let reason = opts && 'reason' in opts ? opts.reason : C[933] || CT.C933;
      if (!(reason !== null)) dart.assertFailed(null, I[127], 496, 12, "reason != null");
      if (this[S$1._materialBanners][S$0.$isEmpty]) {
        return;
      }
      let completer = this[S$1._materialBanners][S$1.$first][S$1._completer];
      if (!completer.isCompleted) {
        completer.complete(reason);
      }
      dart.nullCheck(this[S$1._materialBannerController]).value = 0.0;
    }
    hideCurrentMaterialBanner(opts) {
      let reason = opts && 'reason' in opts ? opts.reason : C[932] || CT.C932;
      if (!(reason !== null)) dart.assertFailed(null, I[127], 513, 12, "reason != null");
      if (this[S$1._materialBanners][S$0.$isEmpty] || dart.nullCheck(this[S$1._materialBannerController]).status === animation$.AnimationStatus.dismissed) {
        return;
      }
      let completer = this[S$1._materialBanners][S$1.$first][S$1._completer];
      if (dart.nullCheck(this[S$1._accessibleNavigation])) {
        dart.nullCheck(this[S$1._materialBannerController]).value = 0.0;
        completer.complete(reason);
      } else {
        dart.nullCheck(this[S$1._materialBannerController]).reverse().then(dart.void, dart.fn(value => {
          if (!this.mounted) dart.assertFailed(null, I[127], 523, 16, "mounted");
          if (!completer.isCompleted) {
            completer.complete(reason);
          }
        }, T$.voidToNull()));
      }
    }
    clearMaterialBanners() {
      if (this[S$1._materialBanners][S$0.$isEmpty] || dart.nullCheck(this[S$1._materialBannerController]).status === animation$.AnimationStatus.dismissed) {
        return;
      }
      let currentMaterialBanner = this[S$1._materialBanners][S$1.$first];
      this[S$1._materialBanners].clear();
      this[S$1._materialBanners].add(currentMaterialBanner);
      this.hideCurrentMaterialBanner();
    }
    build(context) {
      if (!debug.debugCheckHasMediaQuery(context)) dart.assertFailed(null, I[127], 545, 12, "debugCheckHasMediaQuery(context)");
      let mediaQuery = media_query.MediaQuery.of(context);
      this[S$1._accessibleNavigation] = mediaQuery.accessibleNavigation;
      if (this[S$1._snackBars][S.$isNotEmpty]) {
        let route = routes.ModalRoute.of(T$.ObjectN(), context);
        if (route == null || route.isCurrent) {
          if (dart.nullCheck(this[S$1._snackBarController]).isCompleted && this[S$1._snackBarTimer] == null) {
            let snackBar = this[S$1._snackBars][S$1.$first][S$1._widget];
            this[S$1._snackBarTimer] = async.Timer.new(snackBar.duration, dart.fn(() => {
              if (!(dart.nullCheck(this[S$1._snackBarController]).status === animation$.AnimationStatus.forward || dart.nullCheck(this[S$1._snackBarController]).status === animation$.AnimationStatus.completed)) dart.assertFailed(null, I[127], 556, 15, "_snackBarController!.status == AnimationStatus.forward ||\n                _snackBarController!.status == AnimationStatus.completed");
              let mediaQuery = media_query.MediaQuery.of(context);
              if (mediaQuery.accessibleNavigation && snackBar.action != null) {
                return;
              }
              this.hideCurrentSnackBar({reason: snack_bar.SnackBarClosedReason.timeout});
            }, T$.VoidTovoid()));
          }
        }
      }
      return new scaffold$._ScaffoldMessengerScope.new({scaffoldMessengerState: this, child: this.widget.child, $creationLocationd_0dea112b090073317d4: C[974] || CT.C974});
    }
    dispose() {
      let t93, t93$;
      t93 = this[S$1._snackBarController];
      t93 == null ? null : t93.dispose();
      t93$ = this[S$1._snackBarTimer];
      t93$ == null ? null : t93$.cancel();
      this[S$1._snackBarTimer] = null;
      super.dispose();
    }
    static ['_#new#tearOff']() {
      return new scaffold$.ScaffoldMessengerState.new();
    }
  };
  (scaffold$.ScaffoldMessengerState.new = function() {
    this[S$1._scaffolds] = new (T$._HashSetOfScaffoldState()).new();
    this[S$1._materialBanners] = new (T$.ListQueueOfScaffoldFeatureControllerOfMaterialBanner$MaterialBannerClosedReason()).new();
    this[S$1._materialBannerController] = null;
    this[S$1._snackBars] = new (T$.ListQueueOfScaffoldFeatureControllerOfSnackBar$SnackBarClosedReason()).new();
    this[S$1._snackBarController] = null;
    this[S$1._snackBarTimer] = null;
    this[S$1._accessibleNavigation] = null;
    scaffold$.ScaffoldMessengerState.__proto__.new.call(this);
    ;
  }).prototype = scaffold$.ScaffoldMessengerState.prototype;
  dart.addTypeTests(scaffold$.ScaffoldMessengerState);
  dart.addTypeCaches(scaffold$.ScaffoldMessengerState);
  dart.setMethodSignature(scaffold$.ScaffoldMessengerState, () => ({
    __proto__: dart.getMethods(scaffold$.ScaffoldMessengerState.__proto__),
    [S$1._register]: dart.fnType(dart.void, [scaffold$.ScaffoldState]),
    [S$1._unregister]: dart.fnType(dart.void, [scaffold$.ScaffoldState]),
    [S$1._updateScaffolds]: dart.fnType(dart.void, []),
    [S$1._isRoot]: dart.fnType(core.bool, [scaffold$.ScaffoldState]),
    showSnackBar: dart.fnType(scaffold$.ScaffoldFeatureController$(snack_bar.SnackBar, snack_bar.SnackBarClosedReason), [snack_bar.SnackBar]),
    [S$1._handleSnackBarStatusChanged]: dart.fnType(dart.void, [animation$.AnimationStatus]),
    removeCurrentSnackBar: dart.fnType(dart.void, [], {reason: snack_bar.SnackBarClosedReason}, {}),
    hideCurrentSnackBar: dart.fnType(dart.void, [], {reason: snack_bar.SnackBarClosedReason}, {}),
    clearSnackBars: dart.fnType(dart.void, []),
    showMaterialBanner: dart.fnType(scaffold$.ScaffoldFeatureController$(banner.MaterialBanner, banner.MaterialBannerClosedReason), [banner.MaterialBanner]),
    [S$1._handleMaterialBannerStatusChanged]: dart.fnType(dart.void, [animation$.AnimationStatus]),
    removeCurrentMaterialBanner: dart.fnType(dart.void, [], {reason: banner.MaterialBannerClosedReason}, {}),
    hideCurrentMaterialBanner: dart.fnType(dart.void, [], {reason: banner.MaterialBannerClosedReason}, {}),
    clearMaterialBanners: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(scaffold$.ScaffoldMessengerState, I[126]);
  dart.setFieldSignature(scaffold$.ScaffoldMessengerState, () => ({
    __proto__: dart.getFields(scaffold$.ScaffoldMessengerState.__proto__),
    [S$1._scaffolds]: dart.finalFieldType(collection.LinkedHashSet$(scaffold$.ScaffoldState)),
    [S$1._materialBanners]: dart.finalFieldType(collection.Queue$(scaffold$.ScaffoldFeatureController$(banner.MaterialBanner, banner.MaterialBannerClosedReason))),
    [S$1._materialBannerController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S$1._snackBars]: dart.finalFieldType(collection.Queue$(scaffold$.ScaffoldFeatureController$(snack_bar.SnackBar, snack_bar.SnackBarClosedReason))),
    [S$1._snackBarController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S$1._snackBarTimer]: dart.fieldType(dart.nullable(async.Timer)),
    [S$1._accessibleNavigation]: dart.fieldType(dart.nullable(core.bool))
  }));
  scaffold$._ScaffoldMessengerScope = class _ScaffoldMessengerScope extends framework.InheritedWidget {
    get [S$1._scaffoldMessengerState]() {
      return this[S$1._scaffoldMessengerState$1];
    }
    set [S$1._scaffoldMessengerState](value) {
      super[S$1._scaffoldMessengerState] = value;
    }
    static ['_#new#tearOff'](opts) {
      let child = opts && 'child' in opts ? opts.child : null;
      let scaffoldMessengerState = opts && 'scaffoldMessengerState' in opts ? opts.scaffoldMessengerState : null;
      return new scaffold$._ScaffoldMessengerScope.new({child: child, scaffoldMessengerState: scaffoldMessengerState, $creationLocationd_0dea112b090073317d4: C[975] || CT.C975});
    }
    updateShouldNotify(old) {
      scaffold$._ScaffoldMessengerScope.as(old);
      return !this[S$1._scaffoldMessengerState][S.$_equals](old[S$1._scaffoldMessengerState]);
    }
  };
  (scaffold$._ScaffoldMessengerScope.new = function(opts) {
    let child = opts && 'child' in opts ? opts.child : null;
    let scaffoldMessengerState = opts && 'scaffoldMessengerState' in opts ? opts.scaffoldMessengerState : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1._scaffoldMessengerState$1] = scaffoldMessengerState;
    scaffold$._ScaffoldMessengerScope.__proto__.new.call(this, {child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scaffold$._ScaffoldMessengerScope.prototype;
  dart.addTypeTests(scaffold$._ScaffoldMessengerScope);
  dart.addTypeCaches(scaffold$._ScaffoldMessengerScope);
  dart.setMethodSignature(scaffold$._ScaffoldMessengerScope, () => ({
    __proto__: dart.getMethods(scaffold$._ScaffoldMessengerScope.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(scaffold$._ScaffoldMessengerScope, I[126]);
  dart.setFieldSignature(scaffold$._ScaffoldMessengerScope, () => ({
    __proto__: dart.getFields(scaffold$._ScaffoldMessengerScope.__proto__),
    [S$1._scaffoldMessengerState]: dart.finalFieldType(scaffold$.ScaffoldMessengerState)
  }));
  scaffold$.ScaffoldPrelayoutGeometry = class ScaffoldPrelayoutGeometry extends core.Object {
    get floatingActionButtonSize() {
      return this[S$1.floatingActionButtonSize];
    }
    set floatingActionButtonSize(value) {
      super.floatingActionButtonSize = value;
    }
    get bottomSheetSize() {
      return this[S$1.bottomSheetSize];
    }
    set bottomSheetSize(value) {
      super.bottomSheetSize = value;
    }
    get contentBottom() {
      return this[S$1.contentBottom];
    }
    set contentBottom(value) {
      super.contentBottom = value;
    }
    get contentTop() {
      return this[S$1.contentTop];
    }
    set contentTop(value) {
      super.contentTop = value;
    }
    get minInsets() {
      return this[S$1.minInsets];
    }
    set minInsets(value) {
      super.minInsets = value;
    }
    get minViewPadding() {
      return this[S$1.minViewPadding];
    }
    set minViewPadding(value) {
      super.minViewPadding = value;
    }
    get scaffoldSize() {
      return this[S$1.scaffoldSize];
    }
    set scaffoldSize(value) {
      super.scaffoldSize = value;
    }
    get snackBarSize() {
      return this[S$1.snackBarSize];
    }
    set snackBarSize(value) {
      super.snackBarSize = value;
    }
    get materialBannerSize() {
      return this[S$1.materialBannerSize];
    }
    set materialBannerSize(value) {
      super.materialBannerSize = value;
    }
    get textDirection() {
      return this[S$1.textDirection$2];
    }
    set textDirection(value) {
      super.textDirection = value;
    }
    static ['_#new#tearOff'](opts) {
      let bottomSheetSize = opts && 'bottomSheetSize' in opts ? opts.bottomSheetSize : null;
      let contentBottom = opts && 'contentBottom' in opts ? opts.contentBottom : null;
      let contentTop = opts && 'contentTop' in opts ? opts.contentTop : null;
      let floatingActionButtonSize = opts && 'floatingActionButtonSize' in opts ? opts.floatingActionButtonSize : null;
      let minInsets = opts && 'minInsets' in opts ? opts.minInsets : null;
      let minViewPadding = opts && 'minViewPadding' in opts ? opts.minViewPadding : null;
      let scaffoldSize = opts && 'scaffoldSize' in opts ? opts.scaffoldSize : null;
      let snackBarSize = opts && 'snackBarSize' in opts ? opts.snackBarSize : null;
      let materialBannerSize = opts && 'materialBannerSize' in opts ? opts.materialBannerSize : null;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      return new scaffold$.ScaffoldPrelayoutGeometry.new({bottomSheetSize: bottomSheetSize, contentBottom: contentBottom, contentTop: contentTop, floatingActionButtonSize: floatingActionButtonSize, minInsets: minInsets, minViewPadding: minViewPadding, scaffoldSize: scaffoldSize, snackBarSize: snackBarSize, materialBannerSize: materialBannerSize, textDirection: textDirection});
    }
  };
  (scaffold$.ScaffoldPrelayoutGeometry.new = function(opts) {
    let bottomSheetSize = opts && 'bottomSheetSize' in opts ? opts.bottomSheetSize : null;
    let contentBottom = opts && 'contentBottom' in opts ? opts.contentBottom : null;
    let contentTop = opts && 'contentTop' in opts ? opts.contentTop : null;
    let floatingActionButtonSize = opts && 'floatingActionButtonSize' in opts ? opts.floatingActionButtonSize : null;
    let minInsets = opts && 'minInsets' in opts ? opts.minInsets : null;
    let minViewPadding = opts && 'minViewPadding' in opts ? opts.minViewPadding : null;
    let scaffoldSize = opts && 'scaffoldSize' in opts ? opts.scaffoldSize : null;
    let snackBarSize = opts && 'snackBarSize' in opts ? opts.snackBarSize : null;
    let materialBannerSize = opts && 'materialBannerSize' in opts ? opts.materialBannerSize : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    this[S$1.bottomSheetSize] = bottomSheetSize;
    this[S$1.contentBottom] = contentBottom;
    this[S$1.contentTop] = contentTop;
    this[S$1.floatingActionButtonSize] = floatingActionButtonSize;
    this[S$1.minInsets] = minInsets;
    this[S$1.minViewPadding] = minViewPadding;
    this[S$1.scaffoldSize] = scaffoldSize;
    this[S$1.snackBarSize] = snackBarSize;
    this[S$1.materialBannerSize] = materialBannerSize;
    this[S$1.textDirection$2] = textDirection;
    ;
  }).prototype = scaffold$.ScaffoldPrelayoutGeometry.prototype;
  dart.addTypeTests(scaffold$.ScaffoldPrelayoutGeometry);
  dart.addTypeCaches(scaffold$.ScaffoldPrelayoutGeometry);
  dart.setLibraryUri(scaffold$.ScaffoldPrelayoutGeometry, I[126]);
  dart.setFieldSignature(scaffold$.ScaffoldPrelayoutGeometry, () => ({
    __proto__: dart.getFields(scaffold$.ScaffoldPrelayoutGeometry.__proto__),
    floatingActionButtonSize: dart.finalFieldType(ui.Size),
    bottomSheetSize: dart.finalFieldType(ui.Size),
    contentBottom: dart.finalFieldType(core.double),
    contentTop: dart.finalFieldType(core.double),
    minInsets: dart.finalFieldType(edge_insets.EdgeInsets),
    minViewPadding: dart.finalFieldType(edge_insets.EdgeInsets),
    scaffoldSize: dart.finalFieldType(ui.Size),
    snackBarSize: dart.finalFieldType(ui.Size),
    materialBannerSize: dart.finalFieldType(ui.Size),
    textDirection: dart.finalFieldType(ui.TextDirection)
  }));
  scaffold$._TransitionSnapshotFabLocation = class _TransitionSnapshotFabLocation extends floating_action_button_location.FloatingActionButtonLocation {
    get begin() {
      return this[S$1.begin];
    }
    set begin(value) {
      super.begin = value;
    }
    get end() {
      return this[S$1.end$2];
    }
    set end(value) {
      super.end = value;
    }
    get animator() {
      return this[S$1.animator];
    }
    set animator(value) {
      super.animator = value;
    }
    get progress() {
      return this[S$1.progress];
    }
    set progress(value) {
      super.progress = value;
    }
    static ['_#new#tearOff'](begin, end, animator, progress) {
      return new scaffold$._TransitionSnapshotFabLocation.new(begin, end, animator, progress);
    }
    getOffset(scaffoldGeometry) {
      return this.animator.getOffset({begin: this.begin.getOffset(scaffoldGeometry), end: this.end.getOffset(scaffoldGeometry), progress: this.progress});
    }
    toString() {
      return object$.objectRuntimeType(this, "_TransitionSnapshotFabLocation") + "(begin: " + dart.str(this.begin) + ", end: " + dart.str(this.end) + ", progress: " + dart.str(this.progress) + ")";
    }
  };
  (scaffold$._TransitionSnapshotFabLocation.new = function(begin, end, animator, progress) {
    this[S$1.begin] = begin;
    this[S$1.end$2] = end;
    this[S$1.animator] = animator;
    this[S$1.progress] = progress;
    scaffold$._TransitionSnapshotFabLocation.__proto__.new.call(this);
    ;
  }).prototype = scaffold$._TransitionSnapshotFabLocation.prototype;
  dart.addTypeTests(scaffold$._TransitionSnapshotFabLocation);
  dart.addTypeCaches(scaffold$._TransitionSnapshotFabLocation);
  dart.setMethodSignature(scaffold$._TransitionSnapshotFabLocation, () => ({
    __proto__: dart.getMethods(scaffold$._TransitionSnapshotFabLocation.__proto__),
    getOffset: dart.fnType(ui.Offset, [scaffold$.ScaffoldPrelayoutGeometry])
  }));
  dart.setLibraryUri(scaffold$._TransitionSnapshotFabLocation, I[126]);
  dart.setFieldSignature(scaffold$._TransitionSnapshotFabLocation, () => ({
    __proto__: dart.getFields(scaffold$._TransitionSnapshotFabLocation.__proto__),
    begin: dart.finalFieldType(floating_action_button_location.FloatingActionButtonLocation),
    end: dart.finalFieldType(floating_action_button_location.FloatingActionButtonLocation),
    animator: dart.finalFieldType(floating_action_button_location.FloatingActionButtonAnimator),
    progress: dart.finalFieldType(core.double)
  }));
  dart.defineExtensionMethods(scaffold$._TransitionSnapshotFabLocation, ['toString']);
  scaffold$.ScaffoldGeometry = class ScaffoldGeometry extends core.Object {
    get bottomNavigationBarTop() {
      return this[S$1.bottomNavigationBarTop];
    }
    set bottomNavigationBarTop(value) {
      super.bottomNavigationBarTop = value;
    }
    get floatingActionButtonArea() {
      return this[S$1.floatingActionButtonArea];
    }
    set floatingActionButtonArea(value) {
      super.floatingActionButtonArea = value;
    }
    static ['_#new#tearOff'](opts) {
      let bottomNavigationBarTop = opts && 'bottomNavigationBarTop' in opts ? opts.bottomNavigationBarTop : null;
      let floatingActionButtonArea = opts && 'floatingActionButtonArea' in opts ? opts.floatingActionButtonArea : null;
      return new scaffold$.ScaffoldGeometry.new({bottomNavigationBarTop: bottomNavigationBarTop, floatingActionButtonArea: floatingActionButtonArea});
    }
    [S$1._scaleFloatingActionButton](scaleFactor) {
      if (scaleFactor === 1.0) {
        return this;
      }
      if (scaleFactor === 0.0) {
        return new scaffold$.ScaffoldGeometry.new({bottomNavigationBarTop: this.bottomNavigationBarTop});
      }
      let scaledButton = dart.nullCheck(ui.Rect.lerp(dart.nullCheck(this.floatingActionButtonArea).center['&'](ui.Size.zero), this.floatingActionButtonArea, scaleFactor));
      return this.copyWith({floatingActionButtonArea: scaledButton});
    }
    copyWith(opts) {
      let t93, t93$;
      let bottomNavigationBarTop = opts && 'bottomNavigationBarTop' in opts ? opts.bottomNavigationBarTop : null;
      let floatingActionButtonArea = opts && 'floatingActionButtonArea' in opts ? opts.floatingActionButtonArea : null;
      return new scaffold$.ScaffoldGeometry.new({bottomNavigationBarTop: (t93 = bottomNavigationBarTop, t93 == null ? this.bottomNavigationBarTop : t93), floatingActionButtonArea: (t93$ = floatingActionButtonArea, t93$ == null ? this.floatingActionButtonArea : t93$)});
    }
  };
  (scaffold$.ScaffoldGeometry.new = function(opts) {
    let bottomNavigationBarTop = opts && 'bottomNavigationBarTop' in opts ? opts.bottomNavigationBarTop : null;
    let floatingActionButtonArea = opts && 'floatingActionButtonArea' in opts ? opts.floatingActionButtonArea : null;
    this[S$1.bottomNavigationBarTop] = bottomNavigationBarTop;
    this[S$1.floatingActionButtonArea] = floatingActionButtonArea;
    ;
  }).prototype = scaffold$.ScaffoldGeometry.prototype;
  dart.addTypeTests(scaffold$.ScaffoldGeometry);
  dart.addTypeCaches(scaffold$.ScaffoldGeometry);
  dart.setMethodSignature(scaffold$.ScaffoldGeometry, () => ({
    __proto__: dart.getMethods(scaffold$.ScaffoldGeometry.__proto__),
    [S$1._scaleFloatingActionButton]: dart.fnType(scaffold$.ScaffoldGeometry, [core.double]),
    copyWith: dart.fnType(scaffold$.ScaffoldGeometry, [], {bottomNavigationBarTop: dart.nullable(core.double), floatingActionButtonArea: dart.nullable(ui.Rect)}, {})
  }));
  dart.setLibraryUri(scaffold$.ScaffoldGeometry, I[126]);
  dart.setFieldSignature(scaffold$.ScaffoldGeometry, () => ({
    __proto__: dart.getFields(scaffold$.ScaffoldGeometry.__proto__),
    bottomNavigationBarTop: dart.finalFieldType(dart.nullable(core.double)),
    floatingActionButtonArea: dart.finalFieldType(dart.nullable(ui.Rect))
  }));
  scaffold$._ScaffoldGeometryNotifier = class _ScaffoldGeometryNotifier extends change_notifier.ChangeNotifier {
    static ['_#new#tearOff'](geometry, context) {
      return new scaffold$._ScaffoldGeometryNotifier.new(geometry, context);
    }
    get value() {
      if (!dart.fn(() => {
        let renderObject = this.context.findRenderObject();
        if (renderObject == null || !dart.nullCheck(renderObject.owner).debugDoingPaint) {
          dart.throw(assertions.FlutterError.new("Scaffold.geometryOf() must only be accessed during the paint phase.\n" + "The ScaffoldGeometry is only available during the paint phase, because " + "its value is computed during the animation and layout phases prior to painting."));
        }
        return true;
      }, T$.VoidTobool())()) dart.assertFailed(null, I[127], 816, 12, "() {\n      final RenderObject? renderObject = context.findRenderObject();\n      if (renderObject == null || !renderObject.owner!.debugDoingPaint) {\n        throw FlutterError(\n            'Scaffold.geometryOf() must only be accessed during the paint phase.\\n'\n            'The ScaffoldGeometry is only available during the paint phase, because '\n            'its value is computed during the animation and layout phases prior to painting.',\n        );\n      }\n      return true;\n    }()");
      return this.geometry[S$1._scaleFloatingActionButton](dart.nullCheck(this.floatingActionButtonScale));
    }
    [S$1._updateWith](opts) {
      let t93;
      let bottomNavigationBarTop = opts && 'bottomNavigationBarTop' in opts ? opts.bottomNavigationBarTop : null;
      let floatingActionButtonArea = opts && 'floatingActionButtonArea' in opts ? opts.floatingActionButtonArea : null;
      let floatingActionButtonScale = opts && 'floatingActionButtonScale' in opts ? opts.floatingActionButtonScale : null;
      this.floatingActionButtonScale = (t93 = floatingActionButtonScale, t93 == null ? this.floatingActionButtonScale : t93);
      this.geometry = this.geometry.copyWith({bottomNavigationBarTop: bottomNavigationBarTop, floatingActionButtonArea: floatingActionButtonArea});
      this.notifyListeners();
    }
  };
  (scaffold$._ScaffoldGeometryNotifier.new = function(geometry, context) {
    this.floatingActionButtonScale = null;
    this.geometry = geometry;
    this.context = context;
    if (!(context !== null)) dart.assertFailed(null, I[127], 808, 15, "context != null");
    scaffold$._ScaffoldGeometryNotifier.__proto__.new.call(this);
    ;
  }).prototype = scaffold$._ScaffoldGeometryNotifier.prototype;
  dart.addTypeTests(scaffold$._ScaffoldGeometryNotifier);
  dart.addTypeCaches(scaffold$._ScaffoldGeometryNotifier);
  scaffold$._ScaffoldGeometryNotifier[dart.implements] = () => [change_notifier.ValueListenable$(scaffold$.ScaffoldGeometry)];
  dart.setMethodSignature(scaffold$._ScaffoldGeometryNotifier, () => ({
    __proto__: dart.getMethods(scaffold$._ScaffoldGeometryNotifier.__proto__),
    [S$1._updateWith]: dart.fnType(dart.void, [], {bottomNavigationBarTop: dart.nullable(core.double), floatingActionButtonArea: dart.nullable(ui.Rect), floatingActionButtonScale: dart.nullable(core.double)}, {})
  }));
  dart.setGetterSignature(scaffold$._ScaffoldGeometryNotifier, () => ({
    __proto__: dart.getGetters(scaffold$._ScaffoldGeometryNotifier.__proto__),
    value: scaffold$.ScaffoldGeometry
  }));
  dart.setLibraryUri(scaffold$._ScaffoldGeometryNotifier, I[126]);
  dart.setFieldSignature(scaffold$._ScaffoldGeometryNotifier, () => ({
    __proto__: dart.getFields(scaffold$._ScaffoldGeometryNotifier.__proto__),
    context: dart.finalFieldType(framework.BuildContext),
    floatingActionButtonScale: dart.fieldType(dart.nullable(core.double)),
    geometry: dart.fieldType(scaffold$.ScaffoldGeometry)
  }));
  scaffold$._BodyBoxConstraints = class _BodyBoxConstraints extends box$.BoxConstraints {
    get bottomWidgetsHeight() {
      return this[S$1.bottomWidgetsHeight];
    }
    set bottomWidgetsHeight(value) {
      super.bottomWidgetsHeight = value;
    }
    get appBarHeight() {
      return this[S$1.appBarHeight];
    }
    set appBarHeight(value) {
      super.appBarHeight = value;
    }
    get materialBannerHeight() {
      return this[S$1.materialBannerHeight];
    }
    set materialBannerHeight(value) {
      super.materialBannerHeight = value;
    }
    static ['_#new#tearOff'](opts) {
      let maxWidth = opts && 'maxWidth' in opts ? opts.maxWidth : null;
      let maxHeight = opts && 'maxHeight' in opts ? opts.maxHeight : null;
      let bottomWidgetsHeight = opts && 'bottomWidgetsHeight' in opts ? opts.bottomWidgetsHeight : null;
      let appBarHeight = opts && 'appBarHeight' in opts ? opts.appBarHeight : null;
      let materialBannerHeight = opts && 'materialBannerHeight' in opts ? opts.materialBannerHeight : null;
      return new scaffold$._BodyBoxConstraints.new({maxWidth: maxWidth, maxHeight: maxHeight, bottomWidgetsHeight: bottomWidgetsHeight, appBarHeight: appBarHeight, materialBannerHeight: materialBannerHeight});
    }
    _equals(other) {
      if (other == null) return false;
      if (!super._equals(other)) {
        return false;
      }
      return scaffold$._BodyBoxConstraints.is(other) && other.materialBannerHeight === this.materialBannerHeight && other.bottomWidgetsHeight === this.bottomWidgetsHeight && other.appBarHeight === this.appBarHeight;
    }
    get hashCode() {
      return core.Object.hash(super.hashCode, this.materialBannerHeight, this.bottomWidgetsHeight, this.appBarHeight);
    }
  };
  (scaffold$._BodyBoxConstraints.new = function(opts) {
    let maxWidth = opts && 'maxWidth' in opts ? opts.maxWidth : 1 / 0;
    let maxHeight = opts && 'maxHeight' in opts ? opts.maxHeight : 1 / 0;
    let bottomWidgetsHeight = opts && 'bottomWidgetsHeight' in opts ? opts.bottomWidgetsHeight : null;
    let appBarHeight = opts && 'appBarHeight' in opts ? opts.appBarHeight : null;
    let materialBannerHeight = opts && 'materialBannerHeight' in opts ? opts.materialBannerHeight : null;
    this[S$1.bottomWidgetsHeight] = bottomWidgetsHeight;
    this[S$1.appBarHeight] = appBarHeight;
    this[S$1.materialBannerHeight] = materialBannerHeight;
    if (!(bottomWidgetsHeight !== null)) dart.assertFailed(null, I[127], 860, 15, "bottomWidgetsHeight != null");
    if (!(bottomWidgetsHeight >= 0)) dart.assertFailed(null, I[127], 861, 15, "bottomWidgetsHeight >= 0");
    if (!(appBarHeight !== null)) dart.assertFailed(null, I[127], 862, 15, "appBarHeight != null");
    if (!(appBarHeight >= 0)) dart.assertFailed(null, I[127], 863, 15, "appBarHeight >= 0");
    if (!(materialBannerHeight !== null)) dart.assertFailed(null, I[127], 864, 15, "materialBannerHeight != null");
    if (!(materialBannerHeight >= 0)) dart.assertFailed(null, I[127], 865, 15, "materialBannerHeight >= 0");
    scaffold$._BodyBoxConstraints.__proto__.new.call(this, {maxWidth: maxWidth, maxHeight: maxHeight});
    ;
  }).prototype = scaffold$._BodyBoxConstraints.prototype;
  dart.addTypeTests(scaffold$._BodyBoxConstraints);
  dart.addTypeCaches(scaffold$._BodyBoxConstraints);
  dart.setLibraryUri(scaffold$._BodyBoxConstraints, I[126]);
  dart.setFieldSignature(scaffold$._BodyBoxConstraints, () => ({
    __proto__: dart.getFields(scaffold$._BodyBoxConstraints.__proto__),
    bottomWidgetsHeight: dart.finalFieldType(core.double),
    appBarHeight: dart.finalFieldType(core.double),
    materialBannerHeight: dart.finalFieldType(core.double)
  }));
  dart.defineExtensionMethods(scaffold$._BodyBoxConstraints, ['_equals']);
  dart.defineExtensionAccessors(scaffold$._BodyBoxConstraints, ['hashCode']);
  scaffold$._BodyBuilder = class _BodyBuilder extends framework.StatelessWidget {
    get body() {
      return this[S$1.body];
    }
    set body(value) {
      super.body = value;
    }
    get extendBody() {
      return this[S$1.extendBody];
    }
    set extendBody(value) {
      super.extendBody = value;
    }
    get extendBodyBehindAppBar() {
      return this[S$1.extendBodyBehindAppBar];
    }
    set extendBodyBehindAppBar(value) {
      super.extendBodyBehindAppBar = value;
    }
    static ['_#new#tearOff'](opts) {
      let extendBody = opts && 'extendBody' in opts ? opts.extendBody : null;
      let extendBodyBehindAppBar = opts && 'extendBodyBehindAppBar' in opts ? opts.extendBodyBehindAppBar : null;
      let body = opts && 'body' in opts ? opts.body : null;
      return new scaffold$._BodyBuilder.new({extendBody: extendBody, extendBodyBehindAppBar: extendBodyBehindAppBar, body: body, $creationLocationd_0dea112b090073317d4: C[976] || CT.C976});
    }
    build(context) {
      if (!this.extendBody && !this.extendBodyBehindAppBar) {
        return this.body;
      }
      return new layout_builder.LayoutBuilder.new({builder: dart.fn((context, constraints) => {
          let bodyConstraints = scaffold$._BodyBoxConstraints.as(constraints);
          let metrics = media_query.MediaQuery.of(context);
          let bottom = this.extendBody ? math.max(core.double, metrics.padding.bottom, bodyConstraints.bottomWidgetsHeight) : metrics.padding.bottom;
          let top = this.extendBodyBehindAppBar ? math.max(core.double, metrics.padding.top, bodyConstraints.appBarHeight + bodyConstraints.materialBannerHeight) : metrics.padding.top;
          return new media_query.MediaQuery.new({data: metrics.copyWith({padding: metrics.padding.copyWith({top: top, bottom: bottom})}), child: this.body, $creationLocationd_0dea112b090073317d4: C[977] || CT.C977});
        }, T$.BuildContextAndBoxConstraintsToMediaQuery()), $creationLocationd_0dea112b090073317d4: C[978] || CT.C978});
    }
  };
  (scaffold$._BodyBuilder.new = function(opts) {
    let extendBody = opts && 'extendBody' in opts ? opts.extendBody : null;
    let extendBodyBehindAppBar = opts && 'extendBodyBehindAppBar' in opts ? opts.extendBodyBehindAppBar : null;
    let body = opts && 'body' in opts ? opts.body : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.extendBody] = extendBody;
    this[S$1.extendBodyBehindAppBar] = extendBodyBehindAppBar;
    this[S$1.body] = body;
    if (!(extendBody !== null)) dart.assertFailed(null, I[127], 901, 15, "extendBody != null");
    if (!(extendBodyBehindAppBar !== null)) dart.assertFailed(null, I[127], 902, 15, "extendBodyBehindAppBar != null");
    if (!(body !== null)) dart.assertFailed(null, I[127], 903, 15, "body != null");
    scaffold$._BodyBuilder.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scaffold$._BodyBuilder.prototype;
  dart.addTypeTests(scaffold$._BodyBuilder);
  dart.addTypeCaches(scaffold$._BodyBuilder);
  dart.setMethodSignature(scaffold$._BodyBuilder, () => ({
    __proto__: dart.getMethods(scaffold$._BodyBuilder.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(scaffold$._BodyBuilder, I[126]);
  dart.setFieldSignature(scaffold$._BodyBuilder, () => ({
    __proto__: dart.getFields(scaffold$._BodyBuilder.__proto__),
    body: dart.finalFieldType(framework.Widget),
    extendBody: dart.finalFieldType(core.bool),
    extendBodyBehindAppBar: dart.finalFieldType(core.bool)
  }));
  scaffold$._ScaffoldLayout = class _ScaffoldLayout extends custom_layout.MultiChildLayoutDelegate {
    static ['_#new#tearOff'](opts) {
      let minInsets = opts && 'minInsets' in opts ? opts.minInsets : null;
      let minViewPadding = opts && 'minViewPadding' in opts ? opts.minViewPadding : null;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      let geometryNotifier = opts && 'geometryNotifier' in opts ? opts.geometryNotifier : null;
      let previousFloatingActionButtonLocation = opts && 'previousFloatingActionButtonLocation' in opts ? opts.previousFloatingActionButtonLocation : null;
      let currentFloatingActionButtonLocation = opts && 'currentFloatingActionButtonLocation' in opts ? opts.currentFloatingActionButtonLocation : null;
      let floatingActionButtonMoveAnimationProgress = opts && 'floatingActionButtonMoveAnimationProgress' in opts ? opts.floatingActionButtonMoveAnimationProgress : null;
      let floatingActionButtonMotionAnimator = opts && 'floatingActionButtonMotionAnimator' in opts ? opts.floatingActionButtonMotionAnimator : null;
      let isSnackBarFloating = opts && 'isSnackBarFloating' in opts ? opts.isSnackBarFloating : null;
      let snackBarWidth = opts && 'snackBarWidth' in opts ? opts.snackBarWidth : null;
      let extendBody = opts && 'extendBody' in opts ? opts.extendBody : null;
      let extendBodyBehindAppBar = opts && 'extendBodyBehindAppBar' in opts ? opts.extendBodyBehindAppBar : null;
      let extendBodyBehindMaterialBanner = opts && 'extendBodyBehindMaterialBanner' in opts ? opts.extendBodyBehindMaterialBanner : null;
      return new scaffold$._ScaffoldLayout.new({minInsets: minInsets, minViewPadding: minViewPadding, textDirection: textDirection, geometryNotifier: geometryNotifier, previousFloatingActionButtonLocation: previousFloatingActionButtonLocation, currentFloatingActionButtonLocation: currentFloatingActionButtonLocation, floatingActionButtonMoveAnimationProgress: floatingActionButtonMoveAnimationProgress, floatingActionButtonMotionAnimator: floatingActionButtonMotionAnimator, isSnackBarFloating: isSnackBarFloating, snackBarWidth: snackBarWidth, extendBody: extendBody, extendBodyBehindAppBar: extendBodyBehindAppBar, extendBodyBehindMaterialBanner: extendBodyBehindMaterialBanner});
    }
    performLayout(size) {
      let looseConstraints = new box$.BoxConstraints.loose(size);
      let fullWidthConstraints = looseConstraints.tighten({width: size.width});
      let bottom = size.height;
      let contentTop = 0.0;
      let bottomWidgetsHeight = 0.0;
      let appBarHeight = 0.0;
      if (this.hasChild(scaffold$._ScaffoldSlot.appBar)) {
        appBarHeight = this.layoutChild(scaffold$._ScaffoldSlot.appBar, fullWidthConstraints).height;
        contentTop = this.extendBodyBehindAppBar ? 0.0 : appBarHeight;
        this.positionChild(scaffold$._ScaffoldSlot.appBar, ui.Offset.zero);
      }
      let bottomNavigationBarTop = null;
      if (this.hasChild(scaffold$._ScaffoldSlot.bottomNavigationBar)) {
        let bottomNavigationBarHeight = this.layoutChild(scaffold$._ScaffoldSlot.bottomNavigationBar, fullWidthConstraints).height;
        bottomWidgetsHeight = bottomWidgetsHeight + bottomNavigationBarHeight;
        bottomNavigationBarTop = math.max(core.double, 0.0, bottom - bottomWidgetsHeight);
        this.positionChild(scaffold$._ScaffoldSlot.bottomNavigationBar, new ui.Offset.new(0.0, bottomNavigationBarTop));
      }
      if (this.hasChild(scaffold$._ScaffoldSlot.persistentFooter)) {
        let footerConstraints = new box$.BoxConstraints.new({maxWidth: fullWidthConstraints.maxWidth, maxHeight: math.max(core.double, 0.0, bottom - bottomWidgetsHeight - contentTop)});
        let persistentFooterHeight = this.layoutChild(scaffold$._ScaffoldSlot.persistentFooter, footerConstraints).height;
        bottomWidgetsHeight = bottomWidgetsHeight + persistentFooterHeight;
        this.positionChild(scaffold$._ScaffoldSlot.persistentFooter, new ui.Offset.new(0.0, math.max(core.double, 0.0, bottom - bottomWidgetsHeight)));
      }
      let materialBannerSize = ui.Size.zero;
      if (this.hasChild(scaffold$._ScaffoldSlot.materialBanner)) {
        materialBannerSize = this.layoutChild(scaffold$._ScaffoldSlot.materialBanner, fullWidthConstraints);
        this.positionChild(scaffold$._ScaffoldSlot.materialBanner, new ui.Offset.new(0.0, appBarHeight));
        if (!this.extendBodyBehindMaterialBanner) {
          contentTop = contentTop + materialBannerSize.height;
        }
      }
      let contentBottom = math.max(core.double, 0.0, bottom - math.max(core.num, this.minInsets.bottom, bottomWidgetsHeight));
      if (this.hasChild(scaffold$._ScaffoldSlot.body)) {
        let bodyMaxHeight = math.max(core.double, 0.0, contentBottom - contentTop);
        if (this.extendBody) {
          bodyMaxHeight = bodyMaxHeight + bottomWidgetsHeight;
          bodyMaxHeight = math$.clampDouble(bodyMaxHeight, 0.0, looseConstraints.maxHeight - contentTop);
          if (!(bodyMaxHeight <= math.max(core.num, 0.0, looseConstraints.maxHeight - contentTop))) dart.assertFailed(null, I[127], 1045, 16, "bodyMaxHeight <= math.max(0.0, looseConstraints.maxHeight - contentTop)");
        }
        let bodyConstraints = new scaffold$._BodyBoxConstraints.new({maxWidth: fullWidthConstraints.maxWidth, maxHeight: bodyMaxHeight, materialBannerHeight: materialBannerSize.height, bottomWidgetsHeight: this.extendBody ? bottomWidgetsHeight : 0.0, appBarHeight: appBarHeight});
        this.layoutChild(scaffold$._ScaffoldSlot.body, bodyConstraints);
        this.positionChild(scaffold$._ScaffoldSlot.body, new ui.Offset.new(0.0, contentTop));
      }
      let bottomSheetSize = ui.Size.zero;
      let snackBarSize = ui.Size.zero;
      if (this.hasChild(scaffold$._ScaffoldSlot.bodyScrim)) {
        let bottomSheetScrimConstraints = new box$.BoxConstraints.new({maxWidth: fullWidthConstraints.maxWidth, maxHeight: contentBottom});
        this.layoutChild(scaffold$._ScaffoldSlot.bodyScrim, bottomSheetScrimConstraints);
        this.positionChild(scaffold$._ScaffoldSlot.bodyScrim, ui.Offset.zero);
      }
      if (this.hasChild(scaffold$._ScaffoldSlot.snackBar) && !this.isSnackBarFloating) {
        snackBarSize = this.layoutChild(scaffold$._ScaffoldSlot.snackBar, fullWidthConstraints);
      }
      if (this.hasChild(scaffold$._ScaffoldSlot.bottomSheet)) {
        let bottomSheetConstraints = new box$.BoxConstraints.new({maxWidth: fullWidthConstraints.maxWidth, maxHeight: math.max(core.double, 0.0, contentBottom - contentTop)});
        bottomSheetSize = this.layoutChild(scaffold$._ScaffoldSlot.bottomSheet, bottomSheetConstraints);
        this.positionChild(scaffold$._ScaffoldSlot.bottomSheet, new ui.Offset.new((size.width - bottomSheetSize.width) / 2.0, contentBottom - bottomSheetSize.height));
      }
      let floatingActionButtonRect = null;
      function floatingActionButtonRect$35get() {
        let t94;
        t94 = floatingActionButtonRect;
        return t94 == null ? dart.throw(new _internal.LateError.localNI("floatingActionButtonRect")) : t94;
      }
      dart.fn(floatingActionButtonRect$35get, T$.VoidToRect());
      function floatingActionButtonRect$35set(floatingActionButtonRect$35param) {
        return floatingActionButtonRect = floatingActionButtonRect$35param;
      }
      dart.fn(floatingActionButtonRect$35set, T$.RectTodynamic());
      if (this.hasChild(scaffold$._ScaffoldSlot.floatingActionButton)) {
        let fabSize = this.layoutChild(scaffold$._ScaffoldSlot.floatingActionButton, looseConstraints);
        let currentGeometry = new scaffold$.ScaffoldPrelayoutGeometry.new({bottomSheetSize: bottomSheetSize, contentBottom: contentBottom, contentTop: appBarHeight, floatingActionButtonSize: fabSize, minInsets: this.minInsets, scaffoldSize: size, snackBarSize: snackBarSize, materialBannerSize: materialBannerSize, textDirection: this.textDirection, minViewPadding: this.minViewPadding});
        let currentFabOffset = this.currentFloatingActionButtonLocation.getOffset(currentGeometry);
        let previousFabOffset = this.previousFloatingActionButtonLocation.getOffset(currentGeometry);
        let fabOffset = this.floatingActionButtonMotionAnimator.getOffset({begin: previousFabOffset, end: currentFabOffset, progress: this.floatingActionButtonMoveAnimationProgress});
        this.positionChild(scaffold$._ScaffoldSlot.floatingActionButton, fabOffset);
        floatingActionButtonRect$35set(fabOffset['&'](fabSize));
      }
      if (this.hasChild(scaffold$._ScaffoldSlot.snackBar)) {
        let hasCustomWidth = this.snackBarWidth != null && dart.nullCheck(this.snackBarWidth) < size.width;
        if (snackBarSize._equals(ui.Size.zero)) {
          snackBarSize = this.layoutChild(scaffold$._ScaffoldSlot.snackBar, hasCustomWidth ? looseConstraints : fullWidthConstraints);
        }
        let snackBarYOffsetBase = null;
        if (!floatingActionButtonRect$35get().size._equals(ui.Size.zero) && this.isSnackBarFloating) {
          snackBarYOffsetBase = floatingActionButtonRect$35get().top;
        } else {
          let safeYOffsetBase = size.height - this.minViewPadding.bottom;
          snackBarYOffsetBase = this.isSnackBarFloating ? math.min(core.double, contentBottom, safeYOffsetBase) : contentBottom;
        }
        let xOffset = hasCustomWidth ? (size.width - dart.nullCheck(this.snackBarWidth)) / 2 : 0.0;
        this.positionChild(scaffold$._ScaffoldSlot.snackBar, new ui.Offset.new(xOffset, snackBarYOffsetBase - snackBarSize.height));
      }
      if (this.hasChild(scaffold$._ScaffoldSlot.statusBar)) {
        this.layoutChild(scaffold$._ScaffoldSlot.statusBar, fullWidthConstraints.tighten({height: this.minInsets.top}));
        this.positionChild(scaffold$._ScaffoldSlot.statusBar, ui.Offset.zero);
      }
      if (this.hasChild(scaffold$._ScaffoldSlot.drawer)) {
        this.layoutChild(scaffold$._ScaffoldSlot.drawer, new box$.BoxConstraints.tight(size));
        this.positionChild(scaffold$._ScaffoldSlot.drawer, ui.Offset.zero);
      }
      if (this.hasChild(scaffold$._ScaffoldSlot.endDrawer)) {
        this.layoutChild(scaffold$._ScaffoldSlot.endDrawer, new box$.BoxConstraints.tight(size));
        this.positionChild(scaffold$._ScaffoldSlot.endDrawer, ui.Offset.zero);
      }
      this.geometryNotifier[S$1._updateWith]({bottomNavigationBarTop: bottomNavigationBarTop, floatingActionButtonArea: floatingActionButtonRect$35get()});
    }
    shouldRelayout(oldDelegate) {
      scaffold$._ScaffoldLayout.as(oldDelegate);
      return !oldDelegate.minInsets._equals(this.minInsets) || !oldDelegate.minViewPadding._equals(this.minViewPadding) || oldDelegate.textDirection !== this.textDirection || oldDelegate.floatingActionButtonMoveAnimationProgress !== this.floatingActionButtonMoveAnimationProgress || !oldDelegate.previousFloatingActionButtonLocation[S.$_equals](this.previousFloatingActionButtonLocation) || !oldDelegate.currentFloatingActionButtonLocation[S.$_equals](this.currentFloatingActionButtonLocation) || oldDelegate.extendBody !== this.extendBody || oldDelegate.extendBodyBehindAppBar !== this.extendBodyBehindAppBar;
    }
  };
  (scaffold$._ScaffoldLayout.new = function(opts) {
    let minInsets = opts && 'minInsets' in opts ? opts.minInsets : null;
    let minViewPadding = opts && 'minViewPadding' in opts ? opts.minViewPadding : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    let geometryNotifier = opts && 'geometryNotifier' in opts ? opts.geometryNotifier : null;
    let previousFloatingActionButtonLocation = opts && 'previousFloatingActionButtonLocation' in opts ? opts.previousFloatingActionButtonLocation : null;
    let currentFloatingActionButtonLocation = opts && 'currentFloatingActionButtonLocation' in opts ? opts.currentFloatingActionButtonLocation : null;
    let floatingActionButtonMoveAnimationProgress = opts && 'floatingActionButtonMoveAnimationProgress' in opts ? opts.floatingActionButtonMoveAnimationProgress : null;
    let floatingActionButtonMotionAnimator = opts && 'floatingActionButtonMotionAnimator' in opts ? opts.floatingActionButtonMotionAnimator : null;
    let isSnackBarFloating = opts && 'isSnackBarFloating' in opts ? opts.isSnackBarFloating : null;
    let snackBarWidth = opts && 'snackBarWidth' in opts ? opts.snackBarWidth : null;
    let extendBody = opts && 'extendBody' in opts ? opts.extendBody : null;
    let extendBodyBehindAppBar = opts && 'extendBodyBehindAppBar' in opts ? opts.extendBodyBehindAppBar : null;
    let extendBodyBehindMaterialBanner = opts && 'extendBodyBehindMaterialBanner' in opts ? opts.extendBodyBehindMaterialBanner : null;
    this.minInsets = minInsets;
    this.minViewPadding = minViewPadding;
    this.textDirection = textDirection;
    this.geometryNotifier = geometryNotifier;
    this.previousFloatingActionButtonLocation = previousFloatingActionButtonLocation;
    this.currentFloatingActionButtonLocation = currentFloatingActionButtonLocation;
    this.floatingActionButtonMoveAnimationProgress = floatingActionButtonMoveAnimationProgress;
    this.floatingActionButtonMotionAnimator = floatingActionButtonMotionAnimator;
    this.isSnackBarFloating = isSnackBarFloating;
    this.snackBarWidth = snackBarWidth;
    this.extendBody = extendBody;
    this.extendBodyBehindAppBar = extendBodyBehindAppBar;
    this.extendBodyBehindMaterialBanner = extendBodyBehindMaterialBanner;
    if (!(minInsets !== null)) dart.assertFailed(null, I[127], 959, 15, "minInsets != null");
    if (!(textDirection !== null)) dart.assertFailed(null, I[127], 960, 15, "textDirection != null");
    if (!(geometryNotifier !== null)) dart.assertFailed(null, I[127], 961, 15, "geometryNotifier != null");
    if (!(previousFloatingActionButtonLocation !== null)) dart.assertFailed(null, I[127], 962, 15, "previousFloatingActionButtonLocation != null");
    if (!(currentFloatingActionButtonLocation !== null)) dart.assertFailed(null, I[127], 963, 15, "currentFloatingActionButtonLocation != null");
    if (!(extendBody !== null)) dart.assertFailed(null, I[127], 964, 15, "extendBody != null");
    if (!(extendBodyBehindAppBar !== null)) dart.assertFailed(null, I[127], 965, 15, "extendBodyBehindAppBar != null");
    scaffold$._ScaffoldLayout.__proto__.new.call(this);
    ;
  }).prototype = scaffold$._ScaffoldLayout.prototype;
  dart.addTypeTests(scaffold$._ScaffoldLayout);
  dart.addTypeCaches(scaffold$._ScaffoldLayout);
  dart.setMethodSignature(scaffold$._ScaffoldLayout, () => ({
    __proto__: dart.getMethods(scaffold$._ScaffoldLayout.__proto__),
    performLayout: dart.fnType(dart.void, [ui.Size]),
    shouldRelayout: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(scaffold$._ScaffoldLayout, I[126]);
  dart.setFieldSignature(scaffold$._ScaffoldLayout, () => ({
    __proto__: dart.getFields(scaffold$._ScaffoldLayout.__proto__),
    extendBody: dart.finalFieldType(core.bool),
    extendBodyBehindAppBar: dart.finalFieldType(core.bool),
    minInsets: dart.finalFieldType(edge_insets.EdgeInsets),
    minViewPadding: dart.finalFieldType(edge_insets.EdgeInsets),
    textDirection: dart.finalFieldType(ui.TextDirection),
    geometryNotifier: dart.finalFieldType(scaffold$._ScaffoldGeometryNotifier),
    previousFloatingActionButtonLocation: dart.finalFieldType(floating_action_button_location.FloatingActionButtonLocation),
    currentFloatingActionButtonLocation: dart.finalFieldType(floating_action_button_location.FloatingActionButtonLocation),
    floatingActionButtonMoveAnimationProgress: dart.finalFieldType(core.double),
    floatingActionButtonMotionAnimator: dart.finalFieldType(floating_action_button_location.FloatingActionButtonAnimator),
    isSnackBarFloating: dart.finalFieldType(core.bool),
    snackBarWidth: dart.finalFieldType(dart.nullable(core.double)),
    extendBodyBehindMaterialBanner: dart.finalFieldType(core.bool)
  }));
  scaffold$._FloatingActionButtonTransition = class _FloatingActionButtonTransition extends framework.StatefulWidget {
    get child() {
      return this[S$1.child$27];
    }
    set child(value) {
      super.child = value;
    }
    get fabMoveAnimation() {
      return this[S$1.fabMoveAnimation];
    }
    set fabMoveAnimation(value) {
      super.fabMoveAnimation = value;
    }
    get fabMotionAnimator() {
      return this[S$1.fabMotionAnimator];
    }
    set fabMotionAnimator(value) {
      super.fabMotionAnimator = value;
    }
    get geometryNotifier() {
      return this[S$1.geometryNotifier];
    }
    set geometryNotifier(value) {
      super.geometryNotifier = value;
    }
    get currentController() {
      return this[S$1.currentController];
    }
    set currentController(value) {
      super.currentController = value;
    }
    static ['_#new#tearOff'](opts) {
      let child = opts && 'child' in opts ? opts.child : null;
      let fabMoveAnimation = opts && 'fabMoveAnimation' in opts ? opts.fabMoveAnimation : null;
      let fabMotionAnimator = opts && 'fabMotionAnimator' in opts ? opts.fabMotionAnimator : null;
      let geometryNotifier = opts && 'geometryNotifier' in opts ? opts.geometryNotifier : null;
      let currentController = opts && 'currentController' in opts ? opts.currentController : null;
      return new scaffold$._FloatingActionButtonTransition.new({child: child, fabMoveAnimation: fabMoveAnimation, fabMotionAnimator: fabMotionAnimator, geometryNotifier: geometryNotifier, currentController: currentController, $creationLocationd_0dea112b090073317d4: C[979] || CT.C979});
    }
    createState() {
      return new scaffold$._FloatingActionButtonTransitionState.new();
    }
  };
  (scaffold$._FloatingActionButtonTransition.new = function(opts) {
    let child = opts && 'child' in opts ? opts.child : null;
    let fabMoveAnimation = opts && 'fabMoveAnimation' in opts ? opts.fabMoveAnimation : null;
    let fabMotionAnimator = opts && 'fabMotionAnimator' in opts ? opts.fabMotionAnimator : null;
    let geometryNotifier = opts && 'geometryNotifier' in opts ? opts.geometryNotifier : null;
    let currentController = opts && 'currentController' in opts ? opts.currentController : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.child$27] = child;
    this[S$1.fabMoveAnimation] = fabMoveAnimation;
    this[S$1.fabMotionAnimator] = fabMotionAnimator;
    this[S$1.geometryNotifier] = geometryNotifier;
    this[S$1.currentController] = currentController;
    if (!(fabMoveAnimation !== null)) dart.assertFailed(null, I[127], 1205, 15, "fabMoveAnimation != null");
    if (!(fabMotionAnimator !== null)) dart.assertFailed(null, I[127], 1206, 15, "fabMotionAnimator != null");
    if (!(currentController !== null)) dart.assertFailed(null, I[127], 1207, 15, "currentController != null");
    scaffold$._FloatingActionButtonTransition.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scaffold$._FloatingActionButtonTransition.prototype;
  dart.addTypeTests(scaffold$._FloatingActionButtonTransition);
  dart.addTypeCaches(scaffold$._FloatingActionButtonTransition);
  dart.setMethodSignature(scaffold$._FloatingActionButtonTransition, () => ({
    __proto__: dart.getMethods(scaffold$._FloatingActionButtonTransition.__proto__),
    createState: dart.fnType(scaffold$._FloatingActionButtonTransitionState, [])
  }));
  dart.setLibraryUri(scaffold$._FloatingActionButtonTransition, I[126]);
  dart.setFieldSignature(scaffold$._FloatingActionButtonTransition, () => ({
    __proto__: dart.getFields(scaffold$._FloatingActionButtonTransition.__proto__),
    child: dart.finalFieldType(dart.nullable(framework.Widget)),
    fabMoveAnimation: dart.finalFieldType(animation$.Animation$(core.double)),
    fabMotionAnimator: dart.finalFieldType(floating_action_button_location.FloatingActionButtonAnimator),
    geometryNotifier: dart.finalFieldType(scaffold$._ScaffoldGeometryNotifier),
    currentController: dart.finalFieldType(animation_controller.AnimationController)
  }));
  const State_TickerProviderStateMixin$36$4 = class State_TickerProviderStateMixin extends framework.State$(scaffold$._FloatingActionButtonTransition) {};
  (State_TickerProviderStateMixin$36$4.new = function() {
    ticker_provider.TickerProviderStateMixin$(scaffold$._FloatingActionButtonTransition)[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36$4.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36$4.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36$4, ticker_provider.TickerProviderStateMixin$(scaffold$._FloatingActionButtonTransition));
  scaffold$._FloatingActionButtonTransitionState = class _FloatingActionButtonTransitionState extends State_TickerProviderStateMixin$36$4 {
    get [S$1._previousController]() {
      let t96;
      t96 = this[S$1.___FloatingActionButtonTransitionState__previousController];
      return t96 == null ? dart.throw(new _internal.LateError.fieldNI("_previousController")) : t96;
    }
    set [S$1._previousController](library$32package$58flutter$47src$47material$47scaffold$46dart$58$58_previousController$35param) {
      this[S$1.___FloatingActionButtonTransitionState__previousController] = library$32package$58flutter$47src$47material$47scaffold$46dart$58$58_previousController$35param;
    }
    get [S$1._previousScaleAnimation]() {
      let t96;
      t96 = this[S$1.___FloatingActionButtonTransitionState__previousScaleAnimation];
      return t96 == null ? dart.throw(new _internal.LateError.fieldNI("_previousScaleAnimation")) : t96;
    }
    set [S$1._previousScaleAnimation](library$32package$58flutter$47src$47material$47scaffold$46dart$58$58_previousScaleAnimation$35param) {
      this[S$1.___FloatingActionButtonTransitionState__previousScaleAnimation] = library$32package$58flutter$47src$47material$47scaffold$46dart$58$58_previousScaleAnimation$35param;
    }
    get [S$1._previousRotationAnimation]() {
      let t96;
      t96 = this[S$1.___FloatingActionButtonTransitionState__previousRotationAnimation];
      return t96 == null ? dart.throw(new _internal.LateError.fieldNI("_previousRotationAnimation")) : t96;
    }
    set [S$1._previousRotationAnimation](library$32package$58flutter$47src$47material$47scaffold$46dart$58$58_previousRotationAnimation$35param) {
      this[S$1.___FloatingActionButtonTransitionState__previousRotationAnimation] = library$32package$58flutter$47src$47material$47scaffold$46dart$58$58_previousRotationAnimation$35param;
    }
    get [S$1._currentScaleAnimation]() {
      let t96;
      t96 = this[S$1.___FloatingActionButtonTransitionState__currentScaleAnimation];
      return t96 == null ? dart.throw(new _internal.LateError.fieldNI("_currentScaleAnimation")) : t96;
    }
    set [S$1._currentScaleAnimation](library$32package$58flutter$47src$47material$47scaffold$46dart$58$58_currentScaleAnimation$35param) {
      this[S$1.___FloatingActionButtonTransitionState__currentScaleAnimation] = library$32package$58flutter$47src$47material$47scaffold$46dart$58$58_currentScaleAnimation$35param;
    }
    get [S$1._extendedCurrentScaleAnimation]() {
      let t96;
      t96 = this[S$1.___FloatingActionButtonTransitionState__extendedCurrentScaleAnimation];
      return t96 == null ? dart.throw(new _internal.LateError.fieldNI("_extendedCurrentScaleAnimation")) : t96;
    }
    set [S$1._extendedCurrentScaleAnimation](library$32package$58flutter$47src$47material$47scaffold$46dart$58$58_extendedCurrentScaleAnimation$35param) {
      this[S$1.___FloatingActionButtonTransitionState__extendedCurrentScaleAnimation] = library$32package$58flutter$47src$47material$47scaffold$46dart$58$58_extendedCurrentScaleAnimation$35param;
    }
    get [S$1._currentRotationAnimation]() {
      let t96;
      t96 = this[S$1.___FloatingActionButtonTransitionState__currentRotationAnimation];
      return t96 == null ? dart.throw(new _internal.LateError.fieldNI("_currentRotationAnimation")) : t96;
    }
    set [S$1._currentRotationAnimation](library$32package$58flutter$47src$47material$47scaffold$46dart$58$58_currentRotationAnimation$35param) {
      this[S$1.___FloatingActionButtonTransitionState__currentRotationAnimation] = library$32package$58flutter$47src$47material$47scaffold$46dart$58$58_currentRotationAnimation$35param;
    }
    initState() {
      let t96;
      super.initState();
      this[S$1._previousController] = (t96 = new animation_controller.AnimationController.new({duration: floating_action_button_location.kFloatingActionButtonSegue, vsync: this}), (() => {
        t96.addStatusListener(dart.bind(this, S$1._handlePreviousAnimationStatusChanged));
        return t96;
      })());
      this[S$1._updateAnimations]();
      if (this.widget.child != null) {
        this.widget.currentController.value = 1.0;
      } else {
        this[S$1._updateGeometryScale](0.0);
      }
    }
    dispose() {
      this[S$1._previousController].dispose();
      super.dispose();
    }
    didUpdateWidget(oldWidget) {
      let t96, t96$, t96$0;
      scaffold$._FloatingActionButtonTransition.as(oldWidget);
      super.didUpdateWidget(oldWidget);
      let oldChildIsNull = oldWidget.child == null;
      let newChildIsNull = this.widget.child == null;
      if (oldChildIsNull === newChildIsNull && dart.equals((t96 = oldWidget.child, t96 == null ? null : t96.key), (t96$ = this.widget.child, t96$ == null ? null : t96$.key))) {
        return;
      }
      if (!oldWidget.fabMotionAnimator[S.$_equals](this.widget.fabMotionAnimator) || !oldWidget.fabMoveAnimation[S.$_equals](this.widget.fabMoveAnimation)) {
        this[S$1._updateAnimations]();
      }
      if (this[S$1._previousController].status === animation$.AnimationStatus.dismissed) {
        let currentValue = this.widget.currentController.value;
        if (currentValue === 0.0 || oldWidget.child == null) {
          this[S$1._previousChild] = null;
          if (this.widget.child != null) {
            this.widget.currentController.forward();
          }
        } else {
          this[S$1._previousChild] = oldWidget.child;
          t96$0 = this[S$1._previousController];
          (() => {
            t96$0.value = currentValue;
            t96$0.reverse();
            return t96$0;
          })();
          this.widget.currentController.value = 0.0;
        }
      }
    }
    [S$1._updateAnimations]() {
      let previousExitScaleAnimation = new animations.CurvedAnimation.new({parent: this[S$1._previousController], curve: curves.Curves.easeIn});
      let previousExitRotationAnimation = new (T$.TweenOfdouble()).new({begin: 1.0, end: 1.0}).animate(new animations.CurvedAnimation.new({parent: this[S$1._previousController], curve: curves.Curves.easeIn}));
      let currentEntranceScaleAnimation = new animations.CurvedAnimation.new({parent: this.widget.currentController, curve: curves.Curves.easeIn});
      let currentEntranceRotationAnimation = this.widget.currentController.drive(core.double, scaffold$._FloatingActionButtonTransitionState._entranceTurnTween);
      let moveScaleAnimation = this.widget.fabMotionAnimator.getScaleAnimation({parent: this.widget.fabMoveAnimation});
      let moveRotationAnimation = this.widget.fabMotionAnimator.getRotationAnimation({parent: this.widget.fabMoveAnimation});
      this[S$1._previousScaleAnimation] = new (T$.AnimationMinOfdouble()).new(moveScaleAnimation, previousExitScaleAnimation);
      this[S$1._currentScaleAnimation] = new (T$.AnimationMinOfdouble()).new(moveScaleAnimation, currentEntranceScaleAnimation);
      this[S$1._extendedCurrentScaleAnimation] = this[S$1._currentScaleAnimation].drive(core.double, new tween.CurveTween.new({curve: C[980] || CT.C980}));
      this[S$1._previousRotationAnimation] = new animations.TrainHoppingAnimation.new(previousExitRotationAnimation, moveRotationAnimation);
      this[S$1._currentRotationAnimation] = new animations.TrainHoppingAnimation.new(currentEntranceRotationAnimation, moveRotationAnimation);
      this[S$1._currentScaleAnimation].addListener(dart.bind(this, S$1._onProgressChanged));
      this[S$1._previousScaleAnimation].addListener(dart.bind(this, S$1._onProgressChanged));
    }
    [S$1._handlePreviousAnimationStatusChanged](status) {
      this.setState(dart.fn(() => {
        if (status === animation$.AnimationStatus.dismissed) {
          if (!(this.widget.currentController.status === animation$.AnimationStatus.dismissed)) dart.assertFailed(null, I[127], 1337, 16, "widget.currentController.status == AnimationStatus.dismissed");
          if (this.widget.child != null) {
            this.widget.currentController.forward();
          }
        }
      }, T$.VoidTovoid()));
    }
    [S$1._isExtendedFloatingActionButton](widget) {
      return floating_action_button.FloatingActionButton.is(widget) && widget.isExtended;
    }
    build(context) {
      return new basic.Stack.new({alignment: alignment.Alignment.centerRight, children: (() => {
          let t96 = T$.JSArrayOfWidget().of([]);
          if (this[S$1._previousController].status !== animation$.AnimationStatus.dismissed) if (this[S$1._isExtendedFloatingActionButton](this[S$1._previousChild]))
            t96.push(new transitions.FadeTransition.new({opacity: this[S$1._previousScaleAnimation], child: this[S$1._previousChild], $creationLocationd_0dea112b090073317d4: C[981] || CT.C981}));
          else
            t96.push(new transitions.ScaleTransition.new({scale: this[S$1._previousScaleAnimation], child: new transitions.RotationTransition.new({turns: this[S$1._previousRotationAnimation], child: this[S$1._previousChild], $creationLocationd_0dea112b090073317d4: C[982] || CT.C982}), $creationLocationd_0dea112b090073317d4: C[983] || CT.C983}));
          if (this[S$1._isExtendedFloatingActionButton](this.widget.child))
            t96.push(new transitions.ScaleTransition.new({scale: this[S$1._extendedCurrentScaleAnimation], child: new transitions.FadeTransition.new({opacity: this[S$1._currentScaleAnimation], child: this.widget.child, $creationLocationd_0dea112b090073317d4: C[984] || CT.C984}), $creationLocationd_0dea112b090073317d4: C[985] || CT.C985}));
          else
            t96.push(new transitions.ScaleTransition.new({scale: this[S$1._currentScaleAnimation], child: new transitions.RotationTransition.new({turns: this[S$1._currentRotationAnimation], child: this.widget.child, $creationLocationd_0dea112b090073317d4: C[986] || CT.C986}), $creationLocationd_0dea112b090073317d4: C[987] || CT.C987}));
          return t96;
        })(), $creationLocationd_0dea112b090073317d4: C[988] || CT.C988});
    }
    [S$1._onProgressChanged]() {
      this[S$1._updateGeometryScale](math.max(core.double, this[S$1._previousScaleAnimation].value, this[S$1._currentScaleAnimation].value));
    }
    [S$1._updateGeometryScale](scale) {
      this.widget.geometryNotifier[S$1._updateWith]({floatingActionButtonScale: scale});
    }
    static ['_#new#tearOff']() {
      return new scaffold$._FloatingActionButtonTransitionState.new();
    }
  };
  (scaffold$._FloatingActionButtonTransitionState.new = function() {
    this[S$1.___FloatingActionButtonTransitionState__previousController] = null;
    this[S$1.___FloatingActionButtonTransitionState__previousScaleAnimation] = null;
    this[S$1.___FloatingActionButtonTransitionState__previousRotationAnimation] = null;
    this[S$1.___FloatingActionButtonTransitionState__currentScaleAnimation] = null;
    this[S$1.___FloatingActionButtonTransitionState__extendedCurrentScaleAnimation] = null;
    this[S$1.___FloatingActionButtonTransitionState__currentRotationAnimation] = null;
    this[S$1._previousChild] = null;
    scaffold$._FloatingActionButtonTransitionState.__proto__.new.call(this);
    ;
  }).prototype = scaffold$._FloatingActionButtonTransitionState.prototype;
  dart.addTypeTests(scaffold$._FloatingActionButtonTransitionState);
  dart.addTypeCaches(scaffold$._FloatingActionButtonTransitionState);
  dart.setMethodSignature(scaffold$._FloatingActionButtonTransitionState, () => ({
    __proto__: dart.getMethods(scaffold$._FloatingActionButtonTransitionState.__proto__),
    [S$1._updateAnimations]: dart.fnType(dart.void, []),
    [S$1._handlePreviousAnimationStatusChanged]: dart.fnType(dart.void, [animation$.AnimationStatus]),
    [S$1._isExtendedFloatingActionButton]: dart.fnType(core.bool, [dart.nullable(framework.Widget)]),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    [S$1._onProgressChanged]: dart.fnType(dart.void, []),
    [S$1._updateGeometryScale]: dart.fnType(dart.void, [core.double])
  }));
  dart.setGetterSignature(scaffold$._FloatingActionButtonTransitionState, () => ({
    __proto__: dart.getGetters(scaffold$._FloatingActionButtonTransitionState.__proto__),
    [S$1._previousController]: animation_controller.AnimationController,
    [S$1._previousScaleAnimation]: animation$.Animation$(core.double),
    [S$1._previousRotationAnimation]: animation$.Animation$(core.double),
    [S$1._currentScaleAnimation]: animation$.Animation$(core.double),
    [S$1._extendedCurrentScaleAnimation]: animation$.Animation$(core.double),
    [S$1._currentRotationAnimation]: animation$.Animation$(core.double)
  }));
  dart.setSetterSignature(scaffold$._FloatingActionButtonTransitionState, () => ({
    __proto__: dart.getSetters(scaffold$._FloatingActionButtonTransitionState.__proto__),
    [S$1._previousController]: animation_controller.AnimationController,
    [S$1._previousScaleAnimation]: animation$.Animation$(core.double),
    [S$1._previousRotationAnimation]: animation$.Animation$(core.double),
    [S$1._currentScaleAnimation]: animation$.Animation$(core.double),
    [S$1._extendedCurrentScaleAnimation]: animation$.Animation$(core.double),
    [S$1._currentRotationAnimation]: animation$.Animation$(core.double)
  }));
  dart.setLibraryUri(scaffold$._FloatingActionButtonTransitionState, I[126]);
  dart.setFieldSignature(scaffold$._FloatingActionButtonTransitionState, () => ({
    __proto__: dart.getFields(scaffold$._FloatingActionButtonTransitionState.__proto__),
    [S$1.___FloatingActionButtonTransitionState__previousController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S$1.___FloatingActionButtonTransitionState__previousScaleAnimation]: dart.fieldType(dart.nullable(animation$.Animation$(core.double))),
    [S$1.___FloatingActionButtonTransitionState__previousRotationAnimation]: dart.fieldType(dart.nullable(animation$.Animation$(core.double))),
    [S$1.___FloatingActionButtonTransitionState__currentScaleAnimation]: dart.fieldType(dart.nullable(animation$.Animation$(core.double))),
    [S$1.___FloatingActionButtonTransitionState__extendedCurrentScaleAnimation]: dart.fieldType(dart.nullable(animation$.Animation$(core.double))),
    [S$1.___FloatingActionButtonTransitionState__currentRotationAnimation]: dart.fieldType(dart.nullable(animation$.Animation$(core.double))),
    [S$1._previousChild]: dart.fieldType(dart.nullable(framework.Widget))
  }));
  dart.setStaticFieldSignature(scaffold$._FloatingActionButtonTransitionState, () => ['_entranceTurnTween']);
  dart.defineLazy(scaffold$._FloatingActionButtonTransitionState, {
    /*scaffold$._FloatingActionButtonTransitionState._entranceTurnTween*/get _entranceTurnTween() {
      return new (T$.TweenOfdouble()).new({begin: 1.0 - 0.125, end: 1.0}).chain(new tween.CurveTween.new({curve: curves.Curves.easeIn}));
    }
  }, false);
  scaffold$.Scaffold = class Scaffold extends framework.StatefulWidget {
    get extendBody() {
      return this[S$1.extendBody$1];
    }
    set extendBody(value) {
      super.extendBody = value;
    }
    get extendBodyBehindAppBar() {
      return this[S$1.extendBodyBehindAppBar$1];
    }
    set extendBodyBehindAppBar(value) {
      super.extendBodyBehindAppBar = value;
    }
    get appBar() {
      return this[S$1.appBar];
    }
    set appBar(value) {
      super.appBar = value;
    }
    get body() {
      return this[S$1.body$1];
    }
    set body(value) {
      super.body = value;
    }
    get floatingActionButton() {
      return this[S$1.floatingActionButton];
    }
    set floatingActionButton(value) {
      super.floatingActionButton = value;
    }
    get floatingActionButtonLocation() {
      return this[S$1.floatingActionButtonLocation];
    }
    set floatingActionButtonLocation(value) {
      super.floatingActionButtonLocation = value;
    }
    get floatingActionButtonAnimator() {
      return this[S$1.floatingActionButtonAnimator];
    }
    set floatingActionButtonAnimator(value) {
      super.floatingActionButtonAnimator = value;
    }
    get persistentFooterButtons() {
      return this[S$1.persistentFooterButtons];
    }
    set persistentFooterButtons(value) {
      super.persistentFooterButtons = value;
    }
    get persistentFooterAlignment() {
      return this[S$1.persistentFooterAlignment];
    }
    set persistentFooterAlignment(value) {
      super.persistentFooterAlignment = value;
    }
    get drawer() {
      return this[S$1.drawer];
    }
    set drawer(value) {
      super.drawer = value;
    }
    get onDrawerChanged() {
      return this[S$1.onDrawerChanged];
    }
    set onDrawerChanged(value) {
      super.onDrawerChanged = value;
    }
    get endDrawer() {
      return this[S$1.endDrawer];
    }
    set endDrawer(value) {
      super.endDrawer = value;
    }
    get onEndDrawerChanged() {
      return this[S$1.onEndDrawerChanged];
    }
    set onEndDrawerChanged(value) {
      super.onEndDrawerChanged = value;
    }
    get drawerScrimColor() {
      return this[S$1.drawerScrimColor];
    }
    set drawerScrimColor(value) {
      super.drawerScrimColor = value;
    }
    get backgroundColor() {
      return this[S$1.backgroundColor$22];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get bottomNavigationBar() {
      return this[S$1.bottomNavigationBar];
    }
    set bottomNavigationBar(value) {
      super.bottomNavigationBar = value;
    }
    get bottomSheet() {
      return this[S$1.bottomSheet];
    }
    set bottomSheet(value) {
      super.bottomSheet = value;
    }
    get resizeToAvoidBottomInset() {
      return this[S$1.resizeToAvoidBottomInset];
    }
    set resizeToAvoidBottomInset(value) {
      super.resizeToAvoidBottomInset = value;
    }
    get primary() {
      return this[S$1.primary$1];
    }
    set primary(value) {
      super.primary = value;
    }
    get drawerDragStartBehavior() {
      return this[S$1.drawerDragStartBehavior];
    }
    set drawerDragStartBehavior(value) {
      super.drawerDragStartBehavior = value;
    }
    get drawerEdgeDragWidth() {
      return this[S$1.drawerEdgeDragWidth];
    }
    set drawerEdgeDragWidth(value) {
      super.drawerEdgeDragWidth = value;
    }
    get drawerEnableOpenDragGesture() {
      return this[S$1.drawerEnableOpenDragGesture];
    }
    set drawerEnableOpenDragGesture(value) {
      super.drawerEnableOpenDragGesture = value;
    }
    get endDrawerEnableOpenDragGesture() {
      return this[S$1.endDrawerEnableOpenDragGesture];
    }
    set endDrawerEnableOpenDragGesture(value) {
      super.endDrawerEnableOpenDragGesture = value;
    }
    get restorationId() {
      return this[S$1.restorationId];
    }
    set restorationId(value) {
      super.restorationId = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let appBar = opts && 'appBar' in opts ? opts.appBar : null;
      let body = opts && 'body' in opts ? opts.body : null;
      let floatingActionButton = opts && 'floatingActionButton' in opts ? opts.floatingActionButton : null;
      let floatingActionButtonLocation = opts && 'floatingActionButtonLocation' in opts ? opts.floatingActionButtonLocation : null;
      let floatingActionButtonAnimator = opts && 'floatingActionButtonAnimator' in opts ? opts.floatingActionButtonAnimator : null;
      let persistentFooterButtons = opts && 'persistentFooterButtons' in opts ? opts.persistentFooterButtons : null;
      let persistentFooterAlignment = opts && 'persistentFooterAlignment' in opts ? opts.persistentFooterAlignment : C[989] || CT.C989;
      let drawer = opts && 'drawer' in opts ? opts.drawer : null;
      let onDrawerChanged = opts && 'onDrawerChanged' in opts ? opts.onDrawerChanged : null;
      let endDrawer = opts && 'endDrawer' in opts ? opts.endDrawer : null;
      let onEndDrawerChanged = opts && 'onEndDrawerChanged' in opts ? opts.onEndDrawerChanged : null;
      let bottomNavigationBar = opts && 'bottomNavigationBar' in opts ? opts.bottomNavigationBar : null;
      let bottomSheet = opts && 'bottomSheet' in opts ? opts.bottomSheet : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let resizeToAvoidBottomInset = opts && 'resizeToAvoidBottomInset' in opts ? opts.resizeToAvoidBottomInset : null;
      let primary = opts && 'primary' in opts ? opts.primary : true;
      let drawerDragStartBehavior = opts && 'drawerDragStartBehavior' in opts ? opts.drawerDragStartBehavior : C[254] || CT.C254;
      let extendBody = opts && 'extendBody' in opts ? opts.extendBody : false;
      let extendBodyBehindAppBar = opts && 'extendBodyBehindAppBar' in opts ? opts.extendBodyBehindAppBar : false;
      let drawerScrimColor = opts && 'drawerScrimColor' in opts ? opts.drawerScrimColor : null;
      let drawerEdgeDragWidth = opts && 'drawerEdgeDragWidth' in opts ? opts.drawerEdgeDragWidth : null;
      let drawerEnableOpenDragGesture = opts && 'drawerEnableOpenDragGesture' in opts ? opts.drawerEnableOpenDragGesture : true;
      let endDrawerEnableOpenDragGesture = opts && 'endDrawerEnableOpenDragGesture' in opts ? opts.endDrawerEnableOpenDragGesture : true;
      let restorationId = opts && 'restorationId' in opts ? opts.restorationId : null;
      return new scaffold$.Scaffold.new({key: key, appBar: appBar, body: body, floatingActionButton: floatingActionButton, floatingActionButtonLocation: floatingActionButtonLocation, floatingActionButtonAnimator: floatingActionButtonAnimator, persistentFooterButtons: persistentFooterButtons, persistentFooterAlignment: persistentFooterAlignment, drawer: drawer, onDrawerChanged: onDrawerChanged, endDrawer: endDrawer, onEndDrawerChanged: onEndDrawerChanged, bottomNavigationBar: bottomNavigationBar, bottomSheet: bottomSheet, backgroundColor: backgroundColor, resizeToAvoidBottomInset: resizeToAvoidBottomInset, primary: primary, drawerDragStartBehavior: drawerDragStartBehavior, extendBody: extendBody, extendBodyBehindAppBar: extendBodyBehindAppBar, drawerScrimColor: drawerScrimColor, drawerEdgeDragWidth: drawerEdgeDragWidth, drawerEnableOpenDragGesture: drawerEnableOpenDragGesture, endDrawerEnableOpenDragGesture: endDrawerEnableOpenDragGesture, restorationId: restorationId, $creationLocationd_0dea112b090073317d4: C[990] || CT.C990});
    }
    static of(context) {
      if (!(context !== null)) dart.assertFailed(null, I[127], 1846, 12, "context != null");
      let result = context.findAncestorStateOfType(scaffold$.ScaffoldState);
      if (result != null) {
        return result;
      }
      dart.throw(new assertions.FlutterError.fromParts(T$.JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Scaffold.of() called with a context that does not contain a Scaffold."), new assertions.ErrorDescription.new("No Scaffold ancestor could be found starting from the context that was passed to Scaffold.of(). " + "This usually happens when the context provided is from the same StatefulWidget as that " + "whose build function actually creates the Scaffold widget being sought."), new assertions.ErrorHint.new("There are several ways to avoid this problem. The simplest is to use a Builder to get a " + "context that is \"under\" the Scaffold. For an example of this, please see the " + "documentation for Scaffold.of():\n" + "  https://api.flutter.dev/flutter/material/Scaffold/of.html"), new assertions.ErrorHint.new("A more efficient solution is to split your build function into several widgets. This " + "introduces a new context from which you can obtain the Scaffold. In this solution, " + "you would have an outer widget that creates the Scaffold populated by instances of " + "your new inner widgets, and then in these inner widgets you would use Scaffold.of().\n" + "A less elegant but more expedient solution is assign a GlobalKey to the Scaffold, " + "then use the key.currentState property to obtain the ScaffoldState rather than " + "using the Scaffold.of() function."), context.describeElement("The context used was")])));
    }
    static maybeOf(context) {
      if (!(context !== null)) dart.assertFailed(null, I[127], 1893, 12, "context != null");
      return context.findAncestorStateOfType(scaffold$.ScaffoldState);
    }
    static geometryOf(context) {
      let scaffoldScope = context.dependOnInheritedWidgetOfExactType(scaffold$._ScaffoldScope);
      if (scaffoldScope == null) {
        dart.throw(new assertions.FlutterError.fromParts(T$.JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Scaffold.geometryOf() called with a context that does not contain a Scaffold."), new assertions.ErrorDescription.new("This usually happens when the context provided is from the same StatefulWidget as that " + "whose build function actually creates the Scaffold widget being sought."), new assertions.ErrorHint.new("There are several ways to avoid this problem. The simplest is to use a Builder to get a " + "context that is \"under\" the Scaffold. For an example of this, please see the " + "documentation for Scaffold.of():\n" + "  https://api.flutter.dev/flutter/material/Scaffold/of.html"), new assertions.ErrorHint.new("A more efficient solution is to split your build function into several widgets. This " + "introduces a new context from which you can obtain the Scaffold. In this solution, " + "you would have an outer widget that creates the Scaffold populated by instances of " + "your new inner widgets, and then in these inner widgets you would use Scaffold.geometryOf()."), context.describeElement("The context used was")])));
      }
      return scaffoldScope.geometryNotifier;
    }
    static hasDrawer(context, opts) {
      let t97, t97$, t97$0, t97$1;
      let registerForUpdates = opts && 'registerForUpdates' in opts ? opts.registerForUpdates : true;
      if (!(registerForUpdates !== null)) dart.assertFailed(null, I[127], 1962, 12, "registerForUpdates != null");
      if (!(context !== null)) dart.assertFailed(null, I[127], 1963, 12, "context != null");
      if (registerForUpdates) {
        let scaffold = context.dependOnInheritedWidgetOfExactType(scaffold$._ScaffoldScope);
        t97$ = (t97 = scaffold, t97 == null ? null : t97.hasDrawer);
        return t97$ == null ? false : t97$;
      } else {
        let scaffold = context.findAncestorStateOfType(scaffold$.ScaffoldState);
        t97$1 = (t97$0 = scaffold, t97$0 == null ? null : t97$0.hasDrawer);
        return t97$1 == null ? false : t97$1;
      }
    }
    createState() {
      return new scaffold$.ScaffoldState.new();
    }
  };
  (scaffold$.Scaffold.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let appBar = opts && 'appBar' in opts ? opts.appBar : null;
    let body = opts && 'body' in opts ? opts.body : null;
    let floatingActionButton = opts && 'floatingActionButton' in opts ? opts.floatingActionButton : null;
    let floatingActionButtonLocation = opts && 'floatingActionButtonLocation' in opts ? opts.floatingActionButtonLocation : null;
    let floatingActionButtonAnimator = opts && 'floatingActionButtonAnimator' in opts ? opts.floatingActionButtonAnimator : null;
    let persistentFooterButtons = opts && 'persistentFooterButtons' in opts ? opts.persistentFooterButtons : null;
    let persistentFooterAlignment = opts && 'persistentFooterAlignment' in opts ? opts.persistentFooterAlignment : C[989] || CT.C989;
    let drawer = opts && 'drawer' in opts ? opts.drawer : null;
    let onDrawerChanged = opts && 'onDrawerChanged' in opts ? opts.onDrawerChanged : null;
    let endDrawer = opts && 'endDrawer' in opts ? opts.endDrawer : null;
    let onEndDrawerChanged = opts && 'onEndDrawerChanged' in opts ? opts.onEndDrawerChanged : null;
    let bottomNavigationBar = opts && 'bottomNavigationBar' in opts ? opts.bottomNavigationBar : null;
    let bottomSheet = opts && 'bottomSheet' in opts ? opts.bottomSheet : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let resizeToAvoidBottomInset = opts && 'resizeToAvoidBottomInset' in opts ? opts.resizeToAvoidBottomInset : null;
    let primary = opts && 'primary' in opts ? opts.primary : true;
    let drawerDragStartBehavior = opts && 'drawerDragStartBehavior' in opts ? opts.drawerDragStartBehavior : C[254] || CT.C254;
    let extendBody = opts && 'extendBody' in opts ? opts.extendBody : false;
    let extendBodyBehindAppBar = opts && 'extendBodyBehindAppBar' in opts ? opts.extendBodyBehindAppBar : false;
    let drawerScrimColor = opts && 'drawerScrimColor' in opts ? opts.drawerScrimColor : null;
    let drawerEdgeDragWidth = opts && 'drawerEdgeDragWidth' in opts ? opts.drawerEdgeDragWidth : null;
    let drawerEnableOpenDragGesture = opts && 'drawerEnableOpenDragGesture' in opts ? opts.drawerEnableOpenDragGesture : true;
    let endDrawerEnableOpenDragGesture = opts && 'endDrawerEnableOpenDragGesture' in opts ? opts.endDrawerEnableOpenDragGesture : true;
    let restorationId = opts && 'restorationId' in opts ? opts.restorationId : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$1.appBar] = appBar;
    this[S$1.body$1] = body;
    this[S$1.floatingActionButton] = floatingActionButton;
    this[S$1.floatingActionButtonLocation] = floatingActionButtonLocation;
    this[S$1.floatingActionButtonAnimator] = floatingActionButtonAnimator;
    this[S$1.persistentFooterButtons] = persistentFooterButtons;
    this[S$1.persistentFooterAlignment] = persistentFooterAlignment;
    this[S$1.drawer] = drawer;
    this[S$1.onDrawerChanged] = onDrawerChanged;
    this[S$1.endDrawer] = endDrawer;
    this[S$1.onEndDrawerChanged] = onEndDrawerChanged;
    this[S$1.bottomNavigationBar] = bottomNavigationBar;
    this[S$1.bottomSheet] = bottomSheet;
    this[S$1.backgroundColor$22] = backgroundColor;
    this[S$1.resizeToAvoidBottomInset] = resizeToAvoidBottomInset;
    this[S$1.primary$1] = primary;
    this[S$1.drawerDragStartBehavior] = drawerDragStartBehavior;
    this[S$1.extendBody$1] = extendBody;
    this[S$1.extendBodyBehindAppBar$1] = extendBodyBehindAppBar;
    this[S$1.drawerScrimColor] = drawerScrimColor;
    this[S$1.drawerEdgeDragWidth] = drawerEdgeDragWidth;
    this[S$1.drawerEnableOpenDragGesture] = drawerEnableOpenDragGesture;
    this[S$1.endDrawerEnableOpenDragGesture] = endDrawerEnableOpenDragGesture;
    this[S$1.restorationId] = restorationId;
    if (!(primary !== null)) dart.assertFailed(null, I[127], 1548, 15, "primary != null");
    if (!(extendBody !== null)) dart.assertFailed(null, I[127], 1549, 15, "extendBody != null");
    if (!(extendBodyBehindAppBar !== null)) dart.assertFailed(null, I[127], 1550, 15, "extendBodyBehindAppBar != null");
    if (!(drawerDragStartBehavior !== null)) dart.assertFailed(null, I[127], 1551, 15, "drawerDragStartBehavior != null");
    scaffold$.Scaffold.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scaffold$.Scaffold.prototype;
  dart.addTypeTests(scaffold$.Scaffold);
  dart.addTypeCaches(scaffold$.Scaffold);
  dart.setMethodSignature(scaffold$.Scaffold, () => ({
    __proto__: dart.getMethods(scaffold$.Scaffold.__proto__),
    createState: dart.fnType(scaffold$.ScaffoldState, [])
  }));
  dart.setStaticMethodSignature(scaffold$.Scaffold, () => ['of', 'maybeOf', 'geometryOf', 'hasDrawer']);
  dart.setLibraryUri(scaffold$.Scaffold, I[126]);
  dart.setFieldSignature(scaffold$.Scaffold, () => ({
    __proto__: dart.getFields(scaffold$.Scaffold.__proto__),
    extendBody: dart.finalFieldType(core.bool),
    extendBodyBehindAppBar: dart.finalFieldType(core.bool),
    appBar: dart.finalFieldType(dart.nullable(preferred_size.PreferredSizeWidget)),
    body: dart.finalFieldType(dart.nullable(framework.Widget)),
    floatingActionButton: dart.finalFieldType(dart.nullable(framework.Widget)),
    floatingActionButtonLocation: dart.finalFieldType(dart.nullable(floating_action_button_location.FloatingActionButtonLocation)),
    floatingActionButtonAnimator: dart.finalFieldType(dart.nullable(floating_action_button_location.FloatingActionButtonAnimator)),
    persistentFooterButtons: dart.finalFieldType(dart.nullable(core.List$(framework.Widget))),
    persistentFooterAlignment: dart.finalFieldType(alignment.AlignmentDirectional),
    drawer: dart.finalFieldType(dart.nullable(framework.Widget)),
    onDrawerChanged: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.bool]))),
    endDrawer: dart.finalFieldType(dart.nullable(framework.Widget)),
    onEndDrawerChanged: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.bool]))),
    drawerScrimColor: dart.finalFieldType(dart.nullable(ui.Color)),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    bottomNavigationBar: dart.finalFieldType(dart.nullable(framework.Widget)),
    bottomSheet: dart.finalFieldType(dart.nullable(framework.Widget)),
    resizeToAvoidBottomInset: dart.finalFieldType(dart.nullable(core.bool)),
    primary: dart.finalFieldType(core.bool),
    drawerDragStartBehavior: dart.finalFieldType(recognizer.DragStartBehavior),
    drawerEdgeDragWidth: dart.finalFieldType(dart.nullable(core.double)),
    drawerEnableOpenDragGesture: dart.finalFieldType(core.bool),
    endDrawerEnableOpenDragGesture: dart.finalFieldType(core.bool),
    restorationId: dart.finalFieldType(dart.nullable(core.String))
  }));
  const State_TickerProviderStateMixin$36$5 = class State_TickerProviderStateMixin extends framework.State$(scaffold$.Scaffold) {};
  (State_TickerProviderStateMixin$36$5.new = function() {
    ticker_provider.TickerProviderStateMixin$(scaffold$.Scaffold)[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36$5.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36$5.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36$5, ticker_provider.TickerProviderStateMixin$(scaffold$.Scaffold));
  const State_RestorationMixin$36 = class State_RestorationMixin extends State_TickerProviderStateMixin$36$5 {};
  (State_RestorationMixin$36.new = function() {
    restoration.RestorationMixin$(scaffold$.Scaffold)[dart.mixinNew].call(this);
    State_RestorationMixin$36.__proto__.new.call(this);
  }).prototype = State_RestorationMixin$36.prototype;
  dart.applyMixin(State_RestorationMixin$36, restoration.RestorationMixin$(scaffold$.Scaffold));
  scaffold$.ScaffoldState = class ScaffoldState extends State_RestorationMixin$36 {
    get restorationId() {
      return this.widget.restorationId;
    }
    restoreState(oldBucket, initialRestore) {
      this.registerForRestoration(this[S$1._drawerOpened], "drawer_open");
      this.registerForRestoration(this[S$1._endDrawerOpened], "end_drawer_open");
    }
    get hasAppBar() {
      return this.widget.appBar != null;
    }
    get hasDrawer() {
      return this.widget.drawer != null;
    }
    get hasEndDrawer() {
      return this.widget.endDrawer != null;
    }
    get hasFloatingActionButton() {
      return this.widget.floatingActionButton != null;
    }
    get appBarMaxHeight() {
      return this[S$1._appBarMaxHeight];
    }
    get isDrawerOpen() {
      return this[S$1._drawerOpened].value;
    }
    get isEndDrawerOpen() {
      return this[S$1._endDrawerOpened].value;
    }
    [S$2._drawerOpenedCallback](isOpened) {
      let t97;
      if (this[S$1._drawerOpened].value !== isOpened) {
        this.setState(dart.fn(() => {
          this[S$1._drawerOpened].value = isOpened;
        }, T$.VoidTovoid()));
        t97 = this.widget.onDrawerChanged;
        t97 == null ? null : t97(isOpened);
      }
    }
    [S$2._endDrawerOpenedCallback](isOpened) {
      let t97;
      if (this[S$1._endDrawerOpened].value !== isOpened) {
        this.setState(dart.fn(() => {
          this[S$1._endDrawerOpened].value = isOpened;
        }, T$.VoidTovoid()));
        t97 = this.widget.onEndDrawerChanged;
        t97 == null ? null : t97(isOpened);
      }
    }
    openDrawer() {
      let t97;
      if (this[S$1._endDrawerKey].currentState != null && this[S$1._endDrawerOpened].value) {
        dart.nullCheck(this[S$1._endDrawerKey].currentState).close();
      }
      t97 = this[S$1._drawerKey$1].currentState;
      t97 == null ? null : t97.open();
    }
    openEndDrawer() {
      let t97;
      if (this[S$1._drawerKey$1].currentState != null && this[S$1._drawerOpened].value) {
        dart.nullCheck(this[S$1._drawerKey$1].currentState).close();
      }
      t97 = this[S$1._endDrawerKey].currentState;
      t97 == null ? null : t97.open();
    }
    [S$1._updateSnackBar]() {
      let messengerSnackBar = dart.nullCheck(this[S$1._scaffoldMessenger])[S$1._snackBars][S.$isNotEmpty] ? dart.nullCheck(this[S$1._scaffoldMessenger])[S$1._snackBars][S$1.$first] : null;
      if (!dart.equals(this[S$1._messengerSnackBar], messengerSnackBar)) {
        this.setState(dart.fn(() => {
          this[S$1._messengerSnackBar] = messengerSnackBar;
        }, T$.VoidTovoid()));
      }
    }
    [S$1._updateMaterialBanner]() {
      let messengerMaterialBanner = dart.nullCheck(this[S$1._scaffoldMessenger])[S$1._materialBanners][S.$isNotEmpty] ? dart.nullCheck(this[S$1._scaffoldMessenger])[S$1._materialBanners][S$1.$first] : null;
      if (!dart.equals(this[S$1._messengerMaterialBanner], messengerMaterialBanner)) {
        this.setState(dart.fn(() => {
          this[S$1._messengerMaterialBanner] = messengerMaterialBanner;
        }, T$.VoidTovoid()));
      }
    }
    [S$2._maybeBuildPersistentBottomSheet]() {
      let t97;
      if (this.widget.bottomSheet != null && this[S$1._currentBottomSheet] == null) {
        let animationController = (t97 = bottom_sheet.BottomSheet.createAnimationController(this), (() => {
          t97.value = 1.0;
          return t97;
        })());
        let persistentSheetHistoryEntry = null;
        const persistentBottomSheetExtentChanged = notification => {
          if (notification.extent > notification.initialExtent) {
            if (persistentSheetHistoryEntry == null) {
              persistentSheetHistoryEntry = new routes.LocalHistoryEntry.new({onRemove: dart.fn(() => {
                  if (notification.extent > notification.initialExtent) {
                    draggable_scrollable_sheet.DraggableScrollableActuator.reset(notification.context);
                  }
                  this.showBodyScrim(false, 0.0);
                  this[S$2._floatingActionButtonVisibilityValue] = 1.0;
                  persistentSheetHistoryEntry = null;
                }, T$.VoidTovoid())});
              dart.nullCheck(routes.ModalRoute.of(T$.ObjectN(), this.context)).addLocalHistoryEntry(dart.nullCheck(persistentSheetHistoryEntry));
            }
          } else if (persistentSheetHistoryEntry != null) {
            dart.nullCheck(routes.ModalRoute.of(T$.ObjectN(), this.context)).removeLocalHistoryEntry(dart.nullCheck(persistentSheetHistoryEntry));
          }
          return false;
        };
        dart.fn(persistentBottomSheetExtentChanged, T$.DraggableScrollableNotificationTobool());
        if (this[S$1._dismissedBottomSheets][S.$isNotEmpty]) {
          let sheets = T$.ListOf_StandardBottomSheet().of(this[S$1._dismissedBottomSheets], {growable: false});
          for (let sheet of sheets) {
            sheet.animationController.reset();
          }
          if (!this[S$1._dismissedBottomSheets][S$0.$isEmpty]) dart.assertFailed(null, I[127], 2170, 16, "_dismissedBottomSheets.isEmpty");
        }
        this[S$1._currentBottomSheet] = this[S$2._buildBottomSheet](dart.void, dart.fn(context => new (T$.NotificationListenerOfDraggableScrollableNotification()).new({onNotification: persistentBottomSheetExtentChanged, child: new draggable_scrollable_sheet.DraggableScrollableActuator.new({child: new basic.StatefulBuilder.new({key: this[S$1._currentBottomSheetKey], builder: dart.fn((context, setState) => dart.nullCheck(this.widget.bottomSheet), T$.BuildContextAndFnToWidget()), $creationLocationd_0dea112b090073317d4: C[991] || CT.C991}), $creationLocationd_0dea112b090073317d4: C[992] || CT.C992}), $creationLocationd_0dea112b090073317d4: C[993] || CT.C993}), T$.BuildContextToNotificationListenerOfDraggableScrollableNotification()), true, {animationController: animationController});
      }
    }
    [S$2._closeCurrentBottomSheet]() {
      if (this[S$1._currentBottomSheet] != null) {
        if (!dart.nullCheck(this[S$1._currentBottomSheet])[S$2._isLocalHistoryEntry]) {
          dart.nullCheck(this[S$1._currentBottomSheet]).close();
        }
        if (!dart.fn(() => {
          let t97;
          t97 = this[S$1._currentBottomSheet];
          t97 == null ? null : t97[S$1._completer].future.whenComplete(dart.fn(() => {
            if (!(this[S$1._currentBottomSheet] == null)) dart.assertFailed(null, I[127], 2198, 18, "_currentBottomSheet == null");
          }, T$.VoidToNull()));
          return true;
        }, T$.VoidTobool())()) dart.assertFailed(null, I[127], 2196, 14, "() {\n        _currentBottomSheet?._completer.future.whenComplete(() {\n          assert(_currentBottomSheet == null);\n        });\n        return true;\n      }()");
      }
    }
    closeDrawer() {
      if (this.hasDrawer && this.isDrawerOpen) {
        dart.nullCheck(this[S$1._drawerKey$1].currentState).close();
      }
    }
    closeEndDrawer() {
      if (this.hasEndDrawer && this.isEndDrawerOpen) {
        dart.nullCheck(this[S$1._endDrawerKey].currentState).close();
      }
    }
    [S$2._updatePersistentBottomSheet]() {
      dart.nullCheck(this[S$1._currentBottomSheetKey].currentState).setState(dart.fn(() => {
      }, T$.VoidTovoid()));
    }
    [S$2._buildBottomSheet](T, builder, isPersistent, opts) {
      let t100;
      let animationController = opts && 'animationController' in opts ? opts.animationController : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
      let constraints = opts && 'constraints' in opts ? opts.constraints : null;
      let enableDrag = opts && 'enableDrag' in opts ? opts.enableDrag : null;
      let shouldDisposeAnimationController = opts && 'shouldDisposeAnimationController' in opts ? opts.shouldDisposeAnimationController : true;
      if (!dart.fn(() => {
        if (this.widget.bottomSheet != null && isPersistent && this[S$1._currentBottomSheet] != null) {
          dart.throw(assertions.FlutterError.new("Scaffold.bottomSheet cannot be specified while a bottom sheet " + "displayed with showBottomSheet() is still visible.\n" + "Rebuild the Scaffold with a null bottomSheet before calling showBottomSheet()."));
        }
        return true;
      }, T$.VoidTobool())()) dart.assertFailed(null, I[127], 2239, 12, "() {\n      if (widget.bottomSheet != null && isPersistent && _currentBottomSheet != null) {\n        throw FlutterError(\n          'Scaffold.bottomSheet cannot be specified while a bottom sheet '\n          'displayed with showBottomSheet() is still visible.\\n'\n          'Rebuild the Scaffold with a null bottomSheet before calling showBottomSheet().',\n        );\n      }\n      return true;\n    }()");
      let completer = async.Completer$(T).new();
      let bottomSheetKey = T$.GlobalKeyOf_StandardBottomSheetState().new();
      let bottomSheet = null;
      function bottomSheet$35get() {
        let t98;
        t98 = bottomSheet;
        return t98 == null ? dart.throw(new _internal.LateError.localNI("bottomSheet")) : t98;
      }
      dart.fn(bottomSheet$35get, T$.VoidTo_StandardBottomSheet());
      function bottomSheet$35set(bottomSheet$35param) {
        return bottomSheet = bottomSheet$35param;
      }
      dart.fn(bottomSheet$35set, T$._StandardBottomSheetTodynamic());
      let removedEntry = false;
      let doingDispose = false;
      const removeCurrentBottomSheet = () => {
        removedEntry = true;
        if (this[S$1._currentBottomSheet] == null) {
          return;
        }
        if (!dart.nullCheck(this[S$1._currentBottomSheet])[S$1._widget]._equals(bottomSheet$35get())) dart.assertFailed(null, I[127], 2261, 14, "_currentBottomSheet!._widget == bottomSheet");
        if (!(bottomSheetKey.currentState != null)) dart.assertFailed(null, I[127], 2262, 14, "bottomSheetKey.currentState != null");
        this[S$2._showFloatingActionButton]();
        dart.nullCheck(bottomSheetKey.currentState).close();
        this.setState(dart.fn(() => {
          this[S$1._currentBottomSheet] = null;
        }, T$.VoidTovoid()));
        if (animationController.status !== animation$.AnimationStatus.dismissed) {
          this[S$1._dismissedBottomSheets][S.$add](bottomSheet$35get());
        }
        completer.complete();
      };
      dart.fn(removeCurrentBottomSheet, T$.VoidTovoid());
      let entry = isPersistent ? null : new routes.LocalHistoryEntry.new({onRemove: dart.fn(() => {
          let t100;
          if (!removedEntry && dart.equals((t100 = this[S$1._currentBottomSheet], t100 == null ? null : t100[S$1._widget]), bottomSheet$35get()) && !doingDispose) {
            removeCurrentBottomSheet();
          }
        }, T$.VoidTovoid())});
      function removeEntryIfNeeded() {
        if (!isPersistent && !removedEntry) {
          if (!(entry != null)) dart.assertFailed(null, I[127], 2286, 16, "entry != null");
          dart.nullCheck(entry).remove();
          removedEntry = true;
        }
      }
      dart.fn(removeEntryIfNeeded, T$.VoidTovoid());
      bottomSheet$35set(new scaffold$._StandardBottomSheet.new({key: bottomSheetKey, animationController: animationController, enableDrag: (t100 = enableDrag, t100 == null ? !isPersistent : t100), onClosing: dart.fn(() => {
          if (this[S$1._currentBottomSheet] == null) {
            return;
          }
          if (!dart.nullCheck(this[S$1._currentBottomSheet])[S$1._widget]._equals(bottomSheet$35get())) dart.assertFailed(null, I[127], 2300, 16, "_currentBottomSheet!._widget == bottomSheet");
          removeEntryIfNeeded();
        }, T$.VoidTovoid()), onDismissed: dart.fn(() => {
          if (this[S$1._dismissedBottomSheets][S.$contains](bottomSheet$35get())) {
            this.setState(dart.fn(() => {
              this[S$1._dismissedBottomSheets][S$0.$remove](bottomSheet$35get());
            }, T$.VoidTovoid()));
          }
        }, T$.VoidTovoid()), onDispose: dart.fn(() => {
          doingDispose = true;
          removeEntryIfNeeded();
          if (shouldDisposeAnimationController) {
            animationController.dispose();
          }
        }, T$.VoidTovoid()), builder: builder, isPersistent: isPersistent, backgroundColor: backgroundColor, elevation: elevation, shape: shape, clipBehavior: clipBehavior, constraints: constraints, $creationLocationd_0dea112b090073317d4: C[994] || CT.C994}));
      if (!isPersistent) {
        dart.nullCheck(routes.ModalRoute.of(T$.ObjectN(), this.context)).addLocalHistoryEntry(dart.nullCheck(entry));
      }
      return new (scaffold$.PersistentBottomSheetController$(T)).__(bottomSheet$35get(), completer, entry != null ? dart.bind(entry, 'remove') : removeCurrentBottomSheet, dart.fn(fn => {
        let t100;
        t100 = bottomSheetKey.currentState;
        t100 == null ? null : t100.setState(fn);
      }, T$.FnTovoid()), !isPersistent);
    }
    showBottomSheet(T, builder, opts) {
      let t100, t100$;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
      let constraints = opts && 'constraints' in opts ? opts.constraints : null;
      let enableDrag = opts && 'enableDrag' in opts ? opts.enableDrag : null;
      let transitionAnimationController = opts && 'transitionAnimationController' in opts ? opts.transitionAnimationController : null;
      if (!dart.fn(() => {
        if (this.widget.bottomSheet != null) {
          dart.throw(assertions.FlutterError.new("Scaffold.bottomSheet cannot be specified while a bottom sheet " + "displayed with showBottomSheet() is still visible.\n" + "Rebuild the Scaffold with a null bottomSheet before calling showBottomSheet()."));
        }
        return true;
      }, T$.VoidTobool())()) dart.assertFailed(null, I[127], 2398, 12, "() {\n      if (widget.bottomSheet != null) {\n        throw FlutterError(\n          'Scaffold.bottomSheet cannot be specified while a bottom sheet '\n          'displayed with showBottomSheet() is still visible.\\n'\n          'Rebuild the Scaffold with a null bottomSheet before calling showBottomSheet().',\n        );\n      }\n      return true;\n    }()");
      if (!debug.debugCheckHasMediaQuery(this.context)) dart.assertFailed(null, I[127], 2408, 12, "debugCheckHasMediaQuery(context)");
      this[S$2._closeCurrentBottomSheet]();
      let controller = (t100$ = (t100 = transitionAnimationController, t100 == null ? bottom_sheet.BottomSheet.createAnimationController(this) : t100), (() => {
        t100$.forward();
        return t100$;
      })());
      this.setState(dart.fn(() => {
        this[S$1._currentBottomSheet] = this[S$2._buildBottomSheet](T, builder, false, {animationController: controller, backgroundColor: backgroundColor, elevation: elevation, shape: shape, clipBehavior: clipBehavior, constraints: constraints, enableDrag: enableDrag, shouldDisposeAnimationController: transitionAnimationController == null});
      }, T$.VoidTovoid()));
      return scaffold$.PersistentBottomSheetController$(T).as(dart.nullCheck(this[S$1._currentBottomSheet]));
    }
    get [S$2._floatingActionButtonMoveController]() {
      let t100;
      t100 = this[S$1.__ScaffoldState__floatingActionButtonMoveController];
      return t100 == null ? dart.throw(new _internal.LateError.fieldNI("_floatingActionButtonMoveController")) : t100;
    }
    set [S$2._floatingActionButtonMoveController](library$32package$58flutter$47src$47material$47scaffold$46dart$58$58_floatingActionButtonMoveController$35param) {
      this[S$1.__ScaffoldState__floatingActionButtonMoveController] = library$32package$58flutter$47src$47material$47scaffold$46dart$58$58_floatingActionButtonMoveController$35param;
    }
    get [S$2._floatingActionButtonAnimator]() {
      let t100;
      t100 = this[S$1.__ScaffoldState__floatingActionButtonAnimator];
      return t100 == null ? dart.throw(new _internal.LateError.fieldNI("_floatingActionButtonAnimator")) : t100;
    }
    set [S$2._floatingActionButtonAnimator](library$32package$58flutter$47src$47material$47scaffold$46dart$58$58_floatingActionButtonAnimator$35param) {
      this[S$1.__ScaffoldState__floatingActionButtonAnimator] = library$32package$58flutter$47src$47material$47scaffold$46dart$58$58_floatingActionButtonAnimator$35param;
    }
    get [S$2._floatingActionButtonVisibilityController]() {
      let t100;
      t100 = this[S$1.__ScaffoldState__floatingActionButtonVisibilityController];
      return t100 == null ? dart.throw(new _internal.LateError.fieldNI("_floatingActionButtonVisibilityController")) : t100;
    }
    set [S$2._floatingActionButtonVisibilityController](library$32package$58flutter$47src$47material$47scaffold$46dart$58$58_floatingActionButtonVisibilityController$35param) {
      this[S$1.__ScaffoldState__floatingActionButtonVisibilityController] = library$32package$58flutter$47src$47material$47scaffold$46dart$58$58_floatingActionButtonVisibilityController$35param;
    }
    get [S$2._floatingActionButtonVisibilityValue]() {
      return this[S$2._floatingActionButtonVisibilityController].value;
    }
    set [S$2._floatingActionButtonVisibilityValue](newValue) {
      if (!(newValue !== null)) dart.assertFailed(null, I[127], 2444, 12, "newValue != null");
      this[S$2._floatingActionButtonVisibilityController].value = math$.clampDouble(newValue, this[S$2._floatingActionButtonVisibilityController].lowerBound, this[S$2._floatingActionButtonVisibilityController].upperBound);
    }
    [S$2._showFloatingActionButton]() {
      return this[S$2._floatingActionButtonVisibilityController].forward();
    }
    [S$2._moveFloatingActionButton](newLocation) {
      let previousLocation = this[S$1._floatingActionButtonLocation];
      let restartAnimationFrom = 0.0;
      if (this[S$2._floatingActionButtonMoveController].isAnimating) {
        previousLocation = new scaffold$._TransitionSnapshotFabLocation.new(dart.nullCheck(this[S$1._previousFloatingActionButtonLocation]), dart.nullCheck(this[S$1._floatingActionButtonLocation]), this[S$2._floatingActionButtonAnimator], this[S$2._floatingActionButtonMoveController].value);
        restartAnimationFrom = this[S$2._floatingActionButtonAnimator].getAnimationRestart(this[S$2._floatingActionButtonMoveController].value);
      }
      this.setState(dart.fn(() => {
        this[S$1._previousFloatingActionButtonLocation] = previousLocation;
        this[S$1._floatingActionButtonLocation] = newLocation;
      }, T$.VoidTovoid()));
      this[S$2._floatingActionButtonMoveController].forward({from: restartAnimationFrom});
    }
    [S$2._handleStatusBarTap]() {
      let primaryScrollController = primary_scroll_controller.PrimaryScrollController.of(this.context);
      if (primaryScrollController != null && primaryScrollController.hasClients) {
        primaryScrollController.animateTo(0.0, {duration: C[586] || CT.C586, curve: curves.Curves.easeOutCirc});
      }
    }
    get [S$2._geometryNotifier]() {
      let t100;
      t100 = this[S$2.__ScaffoldState__geometryNotifier];
      return t100 == null ? dart.throw(new _internal.LateError.fieldNI("_geometryNotifier")) : t100;
    }
    set [S$2._geometryNotifier](library$32package$58flutter$47src$47material$47scaffold$46dart$58$58_geometryNotifier$35param) {
      this[S$2.__ScaffoldState__geometryNotifier] = library$32package$58flutter$47src$47material$47scaffold$46dart$58$58_geometryNotifier$35param;
    }
    get [S$2._resizeToAvoidBottomInset]() {
      let t100;
      t100 = this.widget.resizeToAvoidBottomInset;
      return t100 == null ? true : t100;
    }
    initState() {
      let t100, t100$;
      super.initState();
      this[S$2._geometryNotifier] = new scaffold$._ScaffoldGeometryNotifier.new(C[995] || CT.C995, this.context);
      this[S$1._floatingActionButtonLocation] = (t100 = this.widget.floatingActionButtonLocation, t100 == null ? scaffold$._kDefaultFloatingActionButtonLocation : t100);
      this[S$2._floatingActionButtonAnimator] = (t100$ = this.widget.floatingActionButtonAnimator, t100$ == null ? scaffold$._kDefaultFloatingActionButtonAnimator : t100$);
      this[S$1._previousFloatingActionButtonLocation] = this[S$1._floatingActionButtonLocation];
      this[S$2._floatingActionButtonMoveController] = new animation_controller.AnimationController.new({vsync: this, value: 1.0, duration: floating_action_button_location.kFloatingActionButtonSegue['*'](2)});
      this[S$2._floatingActionButtonVisibilityController] = new animation_controller.AnimationController.new({duration: floating_action_button_location.kFloatingActionButtonSegue, vsync: this});
    }
    didUpdateWidget(oldWidget) {
      let t100, t100$;
      scaffold$.Scaffold.as(oldWidget);
      super.didUpdateWidget(oldWidget);
      if (!dart.equals(this.widget.floatingActionButtonAnimator, oldWidget.floatingActionButtonAnimator)) {
        this[S$2._floatingActionButtonAnimator] = (t100 = this.widget.floatingActionButtonAnimator, t100 == null ? scaffold$._kDefaultFloatingActionButtonAnimator : t100);
      }
      if (!dart.equals(this.widget.floatingActionButtonLocation, oldWidget.floatingActionButtonLocation)) {
        this[S$2._moveFloatingActionButton]((t100$ = this.widget.floatingActionButtonLocation, t100$ == null ? scaffold$._kDefaultFloatingActionButtonLocation : t100$));
      }
      if (!dart.equals(this.widget.bottomSheet, oldWidget.bottomSheet)) {
        if (!dart.fn(() => {
          let t100, t100$;
          if (this.widget.bottomSheet != null && dart.test((t100$ = (t100 = this[S$1._currentBottomSheet], t100 == null ? null : t100[S$2._isLocalHistoryEntry]), t100$ == null ? false : t100$))) {
            dart.throw(new assertions.FlutterError.fromParts(T$.JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Scaffold.bottomSheet cannot be specified while a bottom sheet displayed " + "with showBottomSheet() is still visible."), new assertions.ErrorHint.new("Use the PersistentBottomSheetController " + "returned by showBottomSheet() to close the old bottom sheet before creating " + "a Scaffold with a (non null) bottomSheet.")])));
          }
          return true;
        }, T$.VoidTobool())()) dart.assertFailed(null, I[127], 2531, 14, "() {\n        if (widget.bottomSheet != null && (_currentBottomSheet?._isLocalHistoryEntry ?? false)) {\n          throw FlutterError.fromParts(<DiagnosticsNode>[\n            ErrorSummary(\n              'Scaffold.bottomSheet cannot be specified while a bottom sheet displayed '\n              'with showBottomSheet() is still visible.',\n            ),\n            ErrorHint(\n              'Use the PersistentBottomSheetController '\n              'returned by showBottomSheet() to close the old bottom sheet before creating '\n              'a Scaffold with a (non null) bottomSheet.',\n            ),\n          ]);\n        }\n        return true;\n      }()");
        if (this.widget.bottomSheet == null) {
          this[S$2._closeCurrentBottomSheet]();
        } else if (this.widget.bottomSheet != null && oldWidget.bottomSheet == null) {
          this[S$2._maybeBuildPersistentBottomSheet]();
        } else {
          this[S$2._updatePersistentBottomSheet]();
        }
      }
    }
    didChangeDependencies() {
      let t100, t100$;
      let currentScaffoldMessenger = scaffold$.ScaffoldMessenger.maybeOf(this.context);
      if (this[S$1._scaffoldMessenger] != null && (currentScaffoldMessenger == null || !dart.equals(this[S$1._scaffoldMessenger], currentScaffoldMessenger))) {
        t100 = this[S$1._scaffoldMessenger];
        t100 == null ? null : t100[S$1._unregister](this);
      }
      this[S$1._scaffoldMessenger] = currentScaffoldMessenger;
      t100$ = this[S$1._scaffoldMessenger];
      t100$ == null ? null : t100$[S$1._register](this);
      this[S$2._maybeBuildPersistentBottomSheet]();
      super.didChangeDependencies();
    }
    dispose() {
      let t100;
      this[S$2._geometryNotifier].dispose();
      this[S$2._floatingActionButtonMoveController].dispose();
      this[S$2._floatingActionButtonVisibilityController].dispose();
      t100 = this[S$1._scaffoldMessenger];
      t100 == null ? null : t100[S$1._unregister](this);
      super.dispose();
    }
    [S$2._addIfNonNull](children, child, childId, opts) {
      let removeLeftPadding = opts && 'removeLeftPadding' in opts ? opts.removeLeftPadding : null;
      let removeTopPadding = opts && 'removeTopPadding' in opts ? opts.removeTopPadding : null;
      let removeRightPadding = opts && 'removeRightPadding' in opts ? opts.removeRightPadding : null;
      let removeBottomPadding = opts && 'removeBottomPadding' in opts ? opts.removeBottomPadding : null;
      let removeBottomInset = opts && 'removeBottomInset' in opts ? opts.removeBottomInset : false;
      let maintainBottomViewPadding = opts && 'maintainBottomViewPadding' in opts ? opts.maintainBottomViewPadding : false;
      let data = media_query.MediaQuery.of(this.context).removePadding({removeLeft: removeLeftPadding, removeTop: removeTopPadding, removeRight: removeRightPadding, removeBottom: removeBottomPadding});
      if (removeBottomInset) {
        data = data.removeViewInsets({removeBottom: true});
      }
      if (maintainBottomViewPadding && data.viewInsets.bottom !== 0.0) {
        data = data.copyWith({padding: data.padding.copyWith({bottom: data.viewPadding.bottom})});
      }
      if (child != null) {
        children[S.$add](new basic.LayoutId.new({id: childId, child: new media_query.MediaQuery.new({data: data, child: child, $creationLocationd_0dea112b090073317d4: C[996] || CT.C996}), $creationLocationd_0dea112b090073317d4: C[997] || CT.C997}));
      }
    }
    [S$2._buildEndDrawer](children, textDirection) {
      if (this.widget.endDrawer != null) {
        if (!this.hasEndDrawer) dart.assertFailed(null, I[127], 2623, 14, "hasEndDrawer");
        this[S$2._addIfNonNull](children, new drawer.DrawerController.new({key: this[S$1._endDrawerKey], alignment: drawer.DrawerAlignment.end, drawerCallback: dart.bind(this, S$2._endDrawerOpenedCallback), dragStartBehavior: this.widget.drawerDragStartBehavior, scrimColor: this.widget.drawerScrimColor, edgeDragWidth: this.widget.drawerEdgeDragWidth, enableOpenDragGesture: this.widget.endDrawerEnableOpenDragGesture, isDrawerOpen: this[S$1._endDrawerOpened].value, child: dart.nullCheck(this.widget.endDrawer), $creationLocationd_0dea112b090073317d4: C[998] || CT.C998}), scaffold$._ScaffoldSlot.endDrawer, {removeLeftPadding: textDirection === ui.TextDirection.ltr, removeTopPadding: false, removeRightPadding: textDirection === ui.TextDirection.rtl, removeBottomPadding: false});
      }
    }
    [S$2._buildDrawer$1](children, textDirection) {
      if (this.widget.drawer != null) {
        if (!this.hasDrawer) dart.assertFailed(null, I[127], 2649, 14, "hasDrawer");
        this[S$2._addIfNonNull](children, new drawer.DrawerController.new({key: this[S$1._drawerKey$1], alignment: drawer.DrawerAlignment.start, drawerCallback: dart.bind(this, S$2._drawerOpenedCallback), dragStartBehavior: this.widget.drawerDragStartBehavior, scrimColor: this.widget.drawerScrimColor, edgeDragWidth: this.widget.drawerEdgeDragWidth, enableOpenDragGesture: this.widget.drawerEnableOpenDragGesture, isDrawerOpen: this[S$1._drawerOpened].value, child: dart.nullCheck(this.widget.drawer), $creationLocationd_0dea112b090073317d4: C[999] || CT.C999}), scaffold$._ScaffoldSlot.drawer, {removeLeftPadding: textDirection === ui.TextDirection.rtl, removeTopPadding: false, removeRightPadding: textDirection === ui.TextDirection.ltr, removeBottomPadding: false});
      }
    }
    showBodyScrim(value, opacity) {
      if (!(value !== null)) dart.assertFailed(null, I[127], 2680, 12, "value != null");
      if (this[S$2._showBodyScrim] === value && this[S$2._bodyScrimColor].opacity === opacity) {
        return;
      }
      this.setState(dart.fn(() => {
        this[S$2._showBodyScrim] = value;
        this[S$2._bodyScrimColor] = colors$.Colors.black.withOpacity(opacity);
      }, T$.VoidTovoid()));
    }
    build(context) {
      let t101, t101$, t101$0, t101$1, t101$2, t101$3, t101$4, t101$5, t101$6, t101$7;
      if (!debug.debugCheckHasMediaQuery(context)) dart.assertFailed(null, I[127], 2692, 12, "debugCheckHasMediaQuery(context)");
      if (!debug.debugCheckHasDirectionality(context)) dart.assertFailed(null, I[127], 2693, 12, "debugCheckHasDirectionality(context)");
      let mediaQuery = media_query.MediaQuery.of(context);
      let themeData = theme$.Theme.of(context);
      let textDirection = basic.Directionality.of(context);
      let children = T$.JSArrayOfLayoutId().of([]);
      this[S$2._addIfNonNull](children, this.widget.body == null ? null : new scaffold$._BodyBuilder.new({extendBody: this.widget.extendBody, extendBodyBehindAppBar: this.widget.extendBodyBehindAppBar, body: new basic.KeyedSubtree.new({key: this[S$1._bodyKey], child: dart.nullCheck(this.widget.body), $creationLocationd_0dea112b090073317d4: C[1000] || CT.C1000}), $creationLocationd_0dea112b090073317d4: C[1001] || CT.C1001}), scaffold$._ScaffoldSlot.body, {removeLeftPadding: false, removeTopPadding: this.widget.appBar != null, removeRightPadding: false, removeBottomPadding: this.widget.bottomNavigationBar != null || this.widget.persistentFooterButtons != null, removeBottomInset: this[S$2._resizeToAvoidBottomInset]});
      if (this[S$2._showBodyScrim]) {
        this[S$2._addIfNonNull](children, new modal_barrier.ModalBarrier.new({dismissible: false, color: this[S$2._bodyScrimColor], $creationLocationd_0dea112b090073317d4: C[1002] || CT.C1002}), scaffold$._ScaffoldSlot.bodyScrim, {removeLeftPadding: true, removeTopPadding: true, removeRightPadding: true, removeBottomPadding: true});
      }
      if (this.widget.appBar != null) {
        let topPadding = this.widget.primary ? mediaQuery.padding.top : 0.0;
        this[S$1._appBarMaxHeight] = app_bar.AppBar.preferredHeightFor(context, dart.nullCheck(this.widget.appBar).preferredSize) + topPadding;
        if (!(dart.nullCheck(this[S$1._appBarMaxHeight]) >= 0.0 && dart.nullCheck(this[S$1._appBarMaxHeight])[S.$isFinite])) dart.assertFailed(null, I[127], 2731, 14, "_appBarMaxHeight! >= 0.0 && _appBarMaxHeight!.isFinite");
        this[S$2._addIfNonNull](children, new basic.ConstrainedBox.new({constraints: new box$.BoxConstraints.new({maxHeight: dart.nullCheck(this[S$1._appBarMaxHeight])}), child: flexible_space_bar.FlexibleSpaceBar.createSettings({currentExtent: dart.nullCheck(this[S$1._appBarMaxHeight]), child: dart.nullCheck(this.widget.appBar)}), $creationLocationd_0dea112b090073317d4: C[1003] || CT.C1003}), scaffold$._ScaffoldSlot.appBar, {removeLeftPadding: false, removeTopPadding: false, removeRightPadding: false, removeBottomPadding: true});
      }
      let isSnackBarFloating = false;
      let snackBarWidth = null;
      if (this[S$1._currentBottomSheet] != null || this[S$1._dismissedBottomSheets][S.$isNotEmpty]) {
        let stack = new basic.Stack.new({alignment: alignment.Alignment.bottomCenter, children: (() => {
            let t100 = T$.ListOfWidget().of(this[S$1._dismissedBottomSheets]);
            if (this[S$1._currentBottomSheet] != null) t100.push(dart.nullCheck(this[S$1._currentBottomSheet])[S$1._widget]);
            return t100;
          })(), $creationLocationd_0dea112b090073317d4: C[1004] || CT.C1004});
        this[S$2._addIfNonNull](children, stack, scaffold$._ScaffoldSlot.bottomSheet, {removeLeftPadding: false, removeTopPadding: true, removeRightPadding: false, removeBottomPadding: this[S$2._resizeToAvoidBottomInset]});
      }
      if (this[S$1._messengerSnackBar] != null) {
        let snackBarBehavior = (t101$0 = (t101$ = (t101 = this[S$1._messengerSnackBar], t101 == null ? null : t101[S$1._widget].behavior), t101$ == null ? themeData.snackBarTheme.behavior : t101$), t101$0 == null ? snack_bar_theme.SnackBarBehavior.fixed : t101$0);
        isSnackBarFloating = snackBarBehavior === snack_bar_theme.SnackBarBehavior.floating;
        snackBarWidth = (t101$1 = this[S$1._messengerSnackBar], t101$1 == null ? null : t101$1[S$1._widget].width);
        this[S$2._addIfNonNull](children, (t101$2 = this[S$1._messengerSnackBar], t101$2 == null ? null : t101$2[S$1._widget]), scaffold$._ScaffoldSlot.snackBar, {removeLeftPadding: false, removeTopPadding: true, removeRightPadding: false, removeBottomPadding: this.widget.bottomNavigationBar != null || this.widget.persistentFooterButtons != null, maintainBottomViewPadding: !this[S$2._resizeToAvoidBottomInset]});
      }
      let extendBodyBehindMaterialBanner = false;
      if (this[S$1._messengerMaterialBanner] != null) {
        let bannerTheme = banner_theme.MaterialBannerTheme.of(context);
        let elevation = (t101$5 = (t101$4 = (t101$3 = this[S$1._messengerMaterialBanner], t101$3 == null ? null : t101$3[S$1._widget].elevation), t101$4 == null ? bannerTheme.elevation : t101$4), t101$5 == null ? 0.0 : t101$5);
        extendBodyBehindMaterialBanner = elevation !== 0.0;
        this[S$2._addIfNonNull](children, (t101$6 = this[S$1._messengerMaterialBanner], t101$6 == null ? null : t101$6[S$1._widget]), scaffold$._ScaffoldSlot.materialBanner, {removeLeftPadding: false, removeTopPadding: this.widget.appBar != null, removeRightPadding: false, removeBottomPadding: true, maintainBottomViewPadding: !this[S$2._resizeToAvoidBottomInset]});
      }
      if (this.widget.persistentFooterButtons != null) {
        this[S$2._addIfNonNull](children, new container.Container.new({decoration: new box_decoration.BoxDecoration.new({border: new box_border.Border.new({top: divider.Divider.createBorderSide(context, {width: 1.0})})}), child: new safe_area.SafeArea.new({top: false, child: new basic.IntrinsicHeight.new({child: new container.Container.new({alignment: this.widget.persistentFooterAlignment, padding: C[0] || CT.C0, child: new overflow_bar.OverflowBar.new({spacing: 8.0, overflowAlignment: overflow_bar.OverflowBarAlignment.end, children: dart.nullCheck(this.widget.persistentFooterButtons), $creationLocationd_0dea112b090073317d4: C[1005] || CT.C1005}), $creationLocationd_0dea112b090073317d4: C[1006] || CT.C1006}), $creationLocationd_0dea112b090073317d4: C[1007] || CT.C1007}), $creationLocationd_0dea112b090073317d4: C[1008] || CT.C1008}), $creationLocationd_0dea112b090073317d4: C[1009] || CT.C1009}), scaffold$._ScaffoldSlot.persistentFooter, {removeLeftPadding: false, removeTopPadding: true, removeRightPadding: false, removeBottomPadding: this.widget.bottomNavigationBar != null, maintainBottomViewPadding: !this[S$2._resizeToAvoidBottomInset]});
      }
      if (this.widget.bottomNavigationBar != null) {
        this[S$2._addIfNonNull](children, this.widget.bottomNavigationBar, scaffold$._ScaffoldSlot.bottomNavigationBar, {removeLeftPadding: false, removeTopPadding: true, removeRightPadding: false, removeBottomPadding: false, maintainBottomViewPadding: !this[S$2._resizeToAvoidBottomInset]});
      }
      this[S$2._addIfNonNull](children, new scaffold$._FloatingActionButtonTransition.new({fabMoveAnimation: this[S$2._floatingActionButtonMoveController], fabMotionAnimator: this[S$2._floatingActionButtonAnimator], geometryNotifier: this[S$2._geometryNotifier], currentController: this[S$2._floatingActionButtonVisibilityController], child: this.widget.floatingActionButton, $creationLocationd_0dea112b090073317d4: C[1010] || CT.C1010}), scaffold$._ScaffoldSlot.floatingActionButton, {removeLeftPadding: true, removeTopPadding: true, removeRightPadding: true, removeBottomPadding: true});
      switch (themeData.platform) {
        case C[33] || CT.C33:
        case C[34] || CT.C34:
          {
            this[S$2._addIfNonNull](children, new gesture_detector.GestureDetector.new({behavior: proxy_box.HitTestBehavior.opaque, onTap: dart.bind(this, S$2._handleStatusBarTap), excludeFromSemantics: true, $creationLocationd_0dea112b090073317d4: C[1011] || CT.C1011}), scaffold$._ScaffoldSlot.statusBar, {removeLeftPadding: false, removeTopPadding: true, removeRightPadding: false, removeBottomPadding: true});
            break;
          }
        case C[29] || CT.C29:
        case C[30] || CT.C30:
        case C[31] || CT.C31:
        case C[32] || CT.C32:
          {
            break;
          }
      }
      if (this[S$1._endDrawerOpened].value) {
        this[S$2._buildDrawer$1](children, textDirection);
        this[S$2._buildEndDrawer](children, textDirection);
      } else {
        this[S$2._buildEndDrawer](children, textDirection);
        this[S$2._buildDrawer$1](children, textDirection);
      }
      let minInsets = mediaQuery.padding.copyWith({bottom: this[S$2._resizeToAvoidBottomInset] ? mediaQuery.viewInsets.bottom : 0.0});
      let minViewPadding = mediaQuery.viewPadding.copyWith({bottom: this[S$2._resizeToAvoidBottomInset] && mediaQuery.viewInsets.bottom !== 0.0 ? 0.0 : null});
      let extendBody = minInsets.bottom <= 0 && this.widget.extendBody;
      return new scaffold$._ScaffoldScope.new({hasDrawer: this.hasDrawer, geometryNotifier: this[S$2._geometryNotifier], child: new scroll_notification_observer.ScrollNotificationObserver.new({child: new material.Material.new({color: (t101$7 = this.widget.backgroundColor, t101$7 == null ? themeData.scaffoldBackgroundColor : t101$7), child: new transitions.AnimatedBuilder.new({animation: this[S$2._floatingActionButtonMoveController], builder: dart.fn((context, child) => new actions.Actions.new({actions: new (T$.LinkedMapOfType$ActionOfIntent()).from([dart.wrapType(actions.DismissIntent), new scaffold$._DismissDrawerAction.new(context)]), child: new basic.CustomMultiChildLayout.new({delegate: new scaffold$._ScaffoldLayout.new({extendBody: extendBody, extendBodyBehindAppBar: this.widget.extendBodyBehindAppBar, minInsets: minInsets, minViewPadding: minViewPadding, currentFloatingActionButtonLocation: dart.nullCheck(this[S$1._floatingActionButtonLocation]), floatingActionButtonMoveAnimationProgress: this[S$2._floatingActionButtonMoveController].value, floatingActionButtonMotionAnimator: this[S$2._floatingActionButtonAnimator], geometryNotifier: this[S$2._geometryNotifier], previousFloatingActionButtonLocation: dart.nullCheck(this[S$1._previousFloatingActionButtonLocation]), textDirection: textDirection, isSnackBarFloating: isSnackBarFloating, extendBodyBehindMaterialBanner: extendBodyBehindMaterialBanner, snackBarWidth: snackBarWidth}), children: children, $creationLocationd_0dea112b090073317d4: C[1012] || CT.C1012}), $creationLocationd_0dea112b090073317d4: C[1013] || CT.C1013}), T$.BuildContextAndWidgetNToActions()), $creationLocationd_0dea112b090073317d4: C[1014] || CT.C1014}), $creationLocationd_0dea112b090073317d4: C[1015] || CT.C1015}), $creationLocationd_0dea112b090073317d4: C[1016] || CT.C1016}), $creationLocationd_0dea112b090073317d4: C[1017] || CT.C1017});
    }
    static ['_#new#tearOff']() {
      return new scaffold$.ScaffoldState.new();
    }
  };
  (scaffold$.ScaffoldState.new = function() {
    this[S$1._drawerKey$1] = T$.GlobalKeyOfDrawerControllerState().new();
    this[S$1._endDrawerKey] = T$.GlobalKeyOfDrawerControllerState().new();
    this[S$1._bodyKey] = T$.GlobalKeyOfStateOfStatefulWidget().new();
    this[S$1._appBarMaxHeight] = null;
    this[S$1._drawerOpened] = new restoration_properties.RestorableBool.new(false);
    this[S$1._endDrawerOpened] = new restoration_properties.RestorableBool.new(false);
    this[S$1._scaffoldMessenger] = null;
    this[S$1._messengerSnackBar] = null;
    this[S$1._messengerMaterialBanner] = null;
    this[S$1._dismissedBottomSheets] = T$.JSArrayOf_StandardBottomSheet().of([]);
    this[S$1._currentBottomSheet] = null;
    this[S$1._currentBottomSheetKey] = T$.GlobalKeyOfStateOfStatefulWidget().new();
    this[S$1.__ScaffoldState__floatingActionButtonMoveController] = null;
    this[S$1.__ScaffoldState__floatingActionButtonAnimator] = null;
    this[S$1._previousFloatingActionButtonLocation] = null;
    this[S$1._floatingActionButtonLocation] = null;
    this[S$1.__ScaffoldState__floatingActionButtonVisibilityController] = null;
    this[S$2.__ScaffoldState__geometryNotifier] = null;
    this[S$2._showBodyScrim] = false;
    this[S$2._bodyScrimColor] = colors$.Colors.black;
    scaffold$.ScaffoldState.__proto__.new.call(this);
    ;
  }).prototype = scaffold$.ScaffoldState.prototype;
  dart.addTypeTests(scaffold$.ScaffoldState);
  dart.addTypeCaches(scaffold$.ScaffoldState);
  dart.setMethodSignature(scaffold$.ScaffoldState, () => ({
    __proto__: dart.getMethods(scaffold$.ScaffoldState.__proto__),
    restoreState: dart.fnType(dart.void, [dart.nullable(restoration$.RestorationBucket), core.bool]),
    [S$2._drawerOpenedCallback]: dart.fnType(dart.void, [core.bool]),
    [S$2._endDrawerOpenedCallback]: dart.fnType(dart.void, [core.bool]),
    openDrawer: dart.fnType(dart.void, []),
    openEndDrawer: dart.fnType(dart.void, []),
    [S$1._updateSnackBar]: dart.fnType(dart.void, []),
    [S$1._updateMaterialBanner]: dart.fnType(dart.void, []),
    [S$2._maybeBuildPersistentBottomSheet]: dart.fnType(dart.void, []),
    [S$2._closeCurrentBottomSheet]: dart.fnType(dart.void, []),
    closeDrawer: dart.fnType(dart.void, []),
    closeEndDrawer: dart.fnType(dart.void, []),
    [S$2._updatePersistentBottomSheet]: dart.fnType(dart.void, []),
    [S$2._buildBottomSheet]: dart.gFnType(T => [scaffold$.PersistentBottomSheetController$(T), [dart.fnType(framework.Widget, [framework.BuildContext]), core.bool], {backgroundColor: dart.nullable(ui.Color), clipBehavior: dart.nullable(ui.Clip), constraints: dart.nullable(box$.BoxConstraints), elevation: dart.nullable(core.double), enableDrag: dart.nullable(core.bool), shape: dart.nullable(borders.ShapeBorder), shouldDisposeAnimationController: core.bool}, {animationController: animation_controller.AnimationController}], T => [dart.nullable(core.Object)]),
    showBottomSheet: dart.gFnType(T => [scaffold$.PersistentBottomSheetController$(T), [dart.fnType(framework.Widget, [framework.BuildContext])], {backgroundColor: dart.nullable(ui.Color), clipBehavior: dart.nullable(ui.Clip), constraints: dart.nullable(box$.BoxConstraints), elevation: dart.nullable(core.double), enableDrag: dart.nullable(core.bool), shape: dart.nullable(borders.ShapeBorder), transitionAnimationController: dart.nullable(animation_controller.AnimationController)}, {}], T => [dart.nullable(core.Object)]),
    [S$2._showFloatingActionButton]: dart.fnType(ticker.TickerFuture, []),
    [S$2._moveFloatingActionButton]: dart.fnType(dart.void, [floating_action_button_location.FloatingActionButtonLocation]),
    [S$2._handleStatusBarTap]: dart.fnType(dart.void, []),
    [S$2._addIfNonNull]: dart.fnType(dart.void, [core.List$(basic.LayoutId), dart.nullable(framework.Widget), core.Object], {maintainBottomViewPadding: core.bool, removeBottomInset: core.bool}, {removeBottomPadding: core.bool, removeLeftPadding: core.bool, removeRightPadding: core.bool, removeTopPadding: core.bool}),
    [S$2._buildEndDrawer]: dart.fnType(dart.void, [core.List$(basic.LayoutId), ui.TextDirection]),
    [S$2._buildDrawer$1]: dart.fnType(dart.void, [core.List$(basic.LayoutId), ui.TextDirection]),
    showBodyScrim: dart.fnType(dart.void, [core.bool, core.double]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(scaffold$.ScaffoldState, () => ({
    __proto__: dart.getGetters(scaffold$.ScaffoldState.__proto__),
    restorationId: dart.nullable(core.String),
    hasAppBar: core.bool,
    hasDrawer: core.bool,
    hasEndDrawer: core.bool,
    hasFloatingActionButton: core.bool,
    appBarMaxHeight: dart.nullable(core.double),
    isDrawerOpen: core.bool,
    isEndDrawerOpen: core.bool,
    [S$2._floatingActionButtonMoveController]: animation_controller.AnimationController,
    [S$2._floatingActionButtonAnimator]: floating_action_button_location.FloatingActionButtonAnimator,
    [S$2._floatingActionButtonVisibilityController]: animation_controller.AnimationController,
    [S$2._floatingActionButtonVisibilityValue]: core.double,
    [S$2._geometryNotifier]: scaffold$._ScaffoldGeometryNotifier,
    [S$2._resizeToAvoidBottomInset]: core.bool
  }));
  dart.setSetterSignature(scaffold$.ScaffoldState, () => ({
    __proto__: dart.getSetters(scaffold$.ScaffoldState.__proto__),
    [S$2._floatingActionButtonMoveController]: animation_controller.AnimationController,
    [S$2._floatingActionButtonAnimator]: floating_action_button_location.FloatingActionButtonAnimator,
    [S$2._floatingActionButtonVisibilityController]: animation_controller.AnimationController,
    [S$2._floatingActionButtonVisibilityValue]: core.double,
    [S$2._geometryNotifier]: scaffold$._ScaffoldGeometryNotifier
  }));
  dart.setLibraryUri(scaffold$.ScaffoldState, I[126]);
  dart.setFieldSignature(scaffold$.ScaffoldState, () => ({
    __proto__: dart.getFields(scaffold$.ScaffoldState.__proto__),
    [S$1._drawerKey$1]: dart.finalFieldType(framework.GlobalKey$(drawer.DrawerControllerState)),
    [S$1._endDrawerKey]: dart.finalFieldType(framework.GlobalKey$(drawer.DrawerControllerState)),
    [S$1._bodyKey]: dart.finalFieldType(framework.GlobalKey$(framework.State$(framework.StatefulWidget))),
    [S$1._appBarMaxHeight]: dart.fieldType(dart.nullable(core.double)),
    [S$1._drawerOpened]: dart.finalFieldType(restoration_properties.RestorableBool),
    [S$1._endDrawerOpened]: dart.finalFieldType(restoration_properties.RestorableBool),
    [S$1._scaffoldMessenger]: dart.fieldType(dart.nullable(scaffold$.ScaffoldMessengerState)),
    [S$1._messengerSnackBar]: dart.fieldType(dart.nullable(scaffold$.ScaffoldFeatureController$(snack_bar.SnackBar, snack_bar.SnackBarClosedReason))),
    [S$1._messengerMaterialBanner]: dart.fieldType(dart.nullable(scaffold$.ScaffoldFeatureController$(banner.MaterialBanner, banner.MaterialBannerClosedReason))),
    [S$1._dismissedBottomSheets]: dart.finalFieldType(core.List$(scaffold$._StandardBottomSheet)),
    [S$1._currentBottomSheet]: dart.fieldType(dart.nullable(scaffold$.PersistentBottomSheetController)),
    [S$1._currentBottomSheetKey]: dart.finalFieldType(framework.GlobalKey$(framework.State$(framework.StatefulWidget))),
    [S$1.__ScaffoldState__floatingActionButtonMoveController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S$1.__ScaffoldState__floatingActionButtonAnimator]: dart.fieldType(dart.nullable(floating_action_button_location.FloatingActionButtonAnimator)),
    [S$1._previousFloatingActionButtonLocation]: dart.fieldType(dart.nullable(floating_action_button_location.FloatingActionButtonLocation)),
    [S$1._floatingActionButtonLocation]: dart.fieldType(dart.nullable(floating_action_button_location.FloatingActionButtonLocation)),
    [S$1.__ScaffoldState__floatingActionButtonVisibilityController]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S$2.__ScaffoldState__geometryNotifier]: dart.fieldType(dart.nullable(scaffold$._ScaffoldGeometryNotifier)),
    [S$2._showBodyScrim]: dart.fieldType(core.bool),
    [S$2._bodyScrimColor]: dart.fieldType(ui.Color)
  }));
  scaffold$._DismissDrawerAction = class _DismissDrawerAction extends actions.DismissAction {
    static ['_#new#tearOff'](context) {
      return new scaffold$._DismissDrawerAction.new(context);
    }
    isEnabled(intent) {
      actions.DismissIntent.as(intent);
      return scaffold$.Scaffold.of(this.context).isDrawerOpen || scaffold$.Scaffold.of(this.context).isEndDrawerOpen;
    }
    invoke(intent) {
      actions.DismissIntent.as(intent);
      scaffold$.Scaffold.of(this.context).closeDrawer();
      scaffold$.Scaffold.of(this.context).closeEndDrawer();
    }
  };
  (scaffold$._DismissDrawerAction.new = function(context) {
    this.context = context;
    scaffold$._DismissDrawerAction.__proto__.new.call(this);
    ;
  }).prototype = scaffold$._DismissDrawerAction.prototype;
  dart.addTypeTests(scaffold$._DismissDrawerAction);
  dart.addTypeCaches(scaffold$._DismissDrawerAction);
  dart.setMethodSignature(scaffold$._DismissDrawerAction, () => ({
    __proto__: dart.getMethods(scaffold$._DismissDrawerAction.__proto__),
    invoke: dart.fnType(dart.void, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(scaffold$._DismissDrawerAction, I[126]);
  dart.setFieldSignature(scaffold$._DismissDrawerAction, () => ({
    __proto__: dart.getFields(scaffold$._DismissDrawerAction.__proto__),
    context: dart.finalFieldType(framework.BuildContext)
  }));
  const _is_ScaffoldFeatureController_default = Symbol('_is_ScaffoldFeatureController_default');
  scaffold$.ScaffoldFeatureController$ = dart.generic((T, U) => {
    class ScaffoldFeatureController extends core.Object {
      get [S$1._widget]() {
        return this[S$2._widget$1];
      }
      set [S$1._widget](value) {
        super[S$1._widget] = value;
      }
      get [S$1._completer]() {
        return this[S$2._completer$1];
      }
      set [S$1._completer](value) {
        super[S$1._completer] = value;
      }
      get close() {
        return this[S$2.close];
      }
      set close(value) {
        super.close = value;
      }
      get setState() {
        return this[S$2.setState];
      }
      set setState(value) {
        super.setState = value;
      }
      static ['_#_#tearOff'](T, U, _widget, _completer, close, setState) {
        return new (scaffold$.ScaffoldFeatureController$(T, U)).__(_widget, _completer, close, setState);
      }
      get closed() {
        return this[S$1._completer].future;
      }
    }
    (ScaffoldFeatureController.__ = function(_widget, _completer, close, setState) {
      this[S$2._widget$1] = _widget;
      this[S$2._completer$1] = _completer;
      this[S$2.close] = close;
      this[S$2.setState] = setState;
      ;
    }).prototype = ScaffoldFeatureController.prototype;
    dart.addTypeTests(ScaffoldFeatureController);
    ScaffoldFeatureController.prototype[_is_ScaffoldFeatureController_default] = true;
    dart.addTypeCaches(ScaffoldFeatureController);
    dart.setGetterSignature(ScaffoldFeatureController, () => ({
      __proto__: dart.getGetters(ScaffoldFeatureController.__proto__),
      closed: async.Future$(U)
    }));
    dart.setLibraryUri(ScaffoldFeatureController, I[126]);
    dart.setFieldSignature(ScaffoldFeatureController, () => ({
      __proto__: dart.getFields(ScaffoldFeatureController.__proto__),
      [S$1._widget]: dart.finalFieldType(T),
      [S$1._completer]: dart.finalFieldType(async.Completer$(U)),
      close: dart.finalFieldType(dart.fnType(dart.void, [])),
      setState: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [dart.fnType(dart.void, [])])))
    }));
    return ScaffoldFeatureController;
  });
  scaffold$.ScaffoldFeatureController = scaffold$.ScaffoldFeatureController$();
  dart.addTypeTests(scaffold$.ScaffoldFeatureController, _is_ScaffoldFeatureController_default);
  scaffold$._BottomSheetSuspendedCurve = class _BottomSheetSuspendedCurve extends curves.ParametricCurve$(core.double) {
    get startingPoint() {
      return this[S$2.startingPoint$1];
    }
    set startingPoint(value) {
      super.startingPoint = value;
    }
    get curve() {
      return this[S$2.curve$2];
    }
    set curve(value) {
      super.curve = value;
    }
    static ['_#new#tearOff'](startingPoint, opts) {
      let curve = opts && 'curve' in opts ? opts.curve : C[915] || CT.C915;
      return new scaffold$._BottomSheetSuspendedCurve.new(startingPoint, {curve: curve});
    }
    transform(t) {
      if (!(t >= 0.0 && t <= 1.0)) dart.assertFailed(null, I[127], 3028, 12, "t >= 0.0 && t <= 1.0");
      if (!(this.startingPoint >= 0.0 && this.startingPoint <= 1.0)) dart.assertFailed(null, I[127], 3029, 12, "startingPoint >= 0.0 && startingPoint <= 1.0");
      if (t < this.startingPoint) {
        return t;
      }
      if (t === 1.0) {
        return t;
      }
      let curveProgress = (t - this.startingPoint) / (1 - this.startingPoint);
      let transformed = this.curve.transform(curveProgress);
      return dart.nullCheck(ui.lerpDouble(this.startingPoint, 1, transformed));
    }
    toString() {
      return diagnostics.describeIdentity(this) + "(" + dart.str(this.startingPoint) + ", " + dart.str(this.curve) + ")";
    }
  };
  (scaffold$._BottomSheetSuspendedCurve.new = function(startingPoint, opts) {
    let curve = opts && 'curve' in opts ? opts.curve : C[915] || CT.C915;
    this[S$2.startingPoint$1] = startingPoint;
    this[S$2.curve$2] = curve;
    if (!(startingPoint !== null)) dart.assertFailed(null, I[127], 3015, 19, "startingPoint != null");
    if (!(curve !== null)) dart.assertFailed(null, I[127], 3016, 16, "curve != null");
    scaffold$._BottomSheetSuspendedCurve.__proto__.new.call(this);
    ;
  }).prototype = scaffold$._BottomSheetSuspendedCurve.prototype;
  dart.addTypeTests(scaffold$._BottomSheetSuspendedCurve);
  dart.addTypeCaches(scaffold$._BottomSheetSuspendedCurve);
  dart.setLibraryUri(scaffold$._BottomSheetSuspendedCurve, I[126]);
  dart.setFieldSignature(scaffold$._BottomSheetSuspendedCurve, () => ({
    __proto__: dart.getFields(scaffold$._BottomSheetSuspendedCurve.__proto__),
    startingPoint: dart.finalFieldType(core.double),
    curve: dart.finalFieldType(curves.Curve)
  }));
  dart.defineExtensionMethods(scaffold$._BottomSheetSuspendedCurve, ['toString']);
  scaffold$._StandardBottomSheet = class _StandardBottomSheet extends framework.StatefulWidget {
    get animationController() {
      return this[S$2.animationController$1];
    }
    set animationController(value) {
      super.animationController = value;
    }
    get enableDrag() {
      return this[S$2.enableDrag$2];
    }
    set enableDrag(value) {
      super.enableDrag = value;
    }
    get onClosing() {
      return this[S$2.onClosing$1];
    }
    set onClosing(value) {
      super.onClosing = value;
    }
    get onDismissed() {
      return this[S$2.onDismissed];
    }
    set onDismissed(value) {
      super.onDismissed = value;
    }
    get onDispose() {
      return this[S$2.onDispose];
    }
    set onDispose(value) {
      super.onDispose = value;
    }
    get builder() {
      return this[S$2.builder$5];
    }
    set builder(value) {
      super.builder = value;
    }
    get isPersistent() {
      return this[S$2.isPersistent];
    }
    set isPersistent(value) {
      super.isPersistent = value;
    }
    get backgroundColor() {
      return this[S$2.backgroundColor$23];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get elevation() {
      return this[S$2.elevation$26];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get shape() {
      return this[S$2.shape$20];
    }
    set shape(value) {
      super.shape = value;
    }
    get clipBehavior() {
      return this[S$2.clipBehavior$9];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    get constraints() {
      return this[S$2.constraints$7];
    }
    set constraints(value) {
      super.constraints = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let animationController = opts && 'animationController' in opts ? opts.animationController : null;
      let enableDrag = opts && 'enableDrag' in opts ? opts.enableDrag : true;
      let onClosing = opts && 'onClosing' in opts ? opts.onClosing : null;
      let onDismissed = opts && 'onDismissed' in opts ? opts.onDismissed : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let isPersistent = opts && 'isPersistent' in opts ? opts.isPersistent : false;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
      let constraints = opts && 'constraints' in opts ? opts.constraints : null;
      let onDispose = opts && 'onDispose' in opts ? opts.onDispose : null;
      return new scaffold$._StandardBottomSheet.new({key: key, animationController: animationController, enableDrag: enableDrag, onClosing: onClosing, onDismissed: onDismissed, builder: builder, isPersistent: isPersistent, backgroundColor: backgroundColor, elevation: elevation, shape: shape, clipBehavior: clipBehavior, constraints: constraints, onDispose: onDispose, $creationLocationd_0dea112b090073317d4: C[1018] || CT.C1018});
    }
    createState() {
      return new scaffold$._StandardBottomSheetState.new();
    }
  };
  (scaffold$._StandardBottomSheet.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let animationController = opts && 'animationController' in opts ? opts.animationController : null;
    let enableDrag = opts && 'enableDrag' in opts ? opts.enableDrag : true;
    let onClosing = opts && 'onClosing' in opts ? opts.onClosing : null;
    let onDismissed = opts && 'onDismissed' in opts ? opts.onDismissed : null;
    let builder = opts && 'builder' in opts ? opts.builder : null;
    let isPersistent = opts && 'isPersistent' in opts ? opts.isPersistent : false;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
    let constraints = opts && 'constraints' in opts ? opts.constraints : null;
    let onDispose = opts && 'onDispose' in opts ? opts.onDispose : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$2.animationController$1] = animationController;
    this[S$2.enableDrag$2] = enableDrag;
    this[S$2.onClosing$1] = onClosing;
    this[S$2.onDismissed] = onDismissed;
    this[S$2.builder$5] = builder;
    this[S$2.isPersistent] = isPersistent;
    this[S$2.backgroundColor$23] = backgroundColor;
    this[S$2.elevation$26] = elevation;
    this[S$2.shape$20] = shape;
    this[S$2.clipBehavior$9] = clipBehavior;
    this[S$2.constraints$7] = constraints;
    this[S$2.onDispose] = onDispose;
    scaffold$._StandardBottomSheet.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scaffold$._StandardBottomSheet.prototype;
  dart.addTypeTests(scaffold$._StandardBottomSheet);
  dart.addTypeCaches(scaffold$._StandardBottomSheet);
  dart.setMethodSignature(scaffold$._StandardBottomSheet, () => ({
    __proto__: dart.getMethods(scaffold$._StandardBottomSheet.__proto__),
    createState: dart.fnType(scaffold$._StandardBottomSheetState, [])
  }));
  dart.setLibraryUri(scaffold$._StandardBottomSheet, I[126]);
  dart.setFieldSignature(scaffold$._StandardBottomSheet, () => ({
    __proto__: dart.getFields(scaffold$._StandardBottomSheet.__proto__),
    animationController: dart.finalFieldType(animation_controller.AnimationController),
    enableDrag: dart.finalFieldType(core.bool),
    onClosing: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onDismissed: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    onDispose: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext])),
    isPersistent: dart.finalFieldType(core.bool),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    clipBehavior: dart.finalFieldType(dart.nullable(ui.Clip)),
    constraints: dart.finalFieldType(dart.nullable(box$.BoxConstraints))
  }));
  scaffold$._StandardBottomSheetState = class _StandardBottomSheetState extends framework.State$(scaffold$._StandardBottomSheet) {
    initState() {
      super.initState();
      if (!(this.widget.animationController !== null)) dart.assertFailed(null, I[127], 3090, 12, "widget.animationController != null");
      if (!(this.widget.animationController.status === animation$.AnimationStatus.forward || this.widget.animationController.status === animation$.AnimationStatus.completed)) dart.assertFailed(null, I[127], 3092, 7, "widget.animationController.status == AnimationStatus.forward\n        || widget.animationController.status == AnimationStatus.completed");
      this.widget.animationController.addStatusListener(dart.bind(this, S$2._handleStatusChange));
    }
    dispose() {
      let t101;
      t101 = this.widget.onDispose;
      t101 == null ? null : t101();
      super.dispose();
    }
    didUpdateWidget(oldWidget) {
      scaffold$._StandardBottomSheet.as(oldWidget);
      super.didUpdateWidget(oldWidget);
      if (!this.widget.animationController[S.$_equals](oldWidget.animationController)) dart.assertFailed(null, I[127], 3107, 12, "widget.animationController == oldWidget.animationController");
    }
    close() {
      let t101;
      if (!(this.widget.animationController !== null)) dart.assertFailed(null, I[127], 3111, 12, "widget.animationController != null");
      this.widget.animationController.reverse();
      t101 = this.widget.onClosing;
      t101 == null ? null : t101();
    }
    [S$2._handleDragStart$1](details) {
      this.animationCurve = curves.Curves.linear;
    }
    [S$2._handleDragEnd$1](details, opts) {
      let isClosing = opts && 'isClosing' in opts ? opts.isClosing : null;
      this.animationCurve = new scaffold$._BottomSheetSuspendedCurve.new(this.widget.animationController.value, {curve: scaffold$._standardBottomSheetCurve});
    }
    [S$2._handleStatusChange](status) {
      let t101;
      if (status === animation$.AnimationStatus.dismissed) {
        t101 = this.widget.onDismissed;
        t101 == null ? null : t101();
      }
    }
    extentChanged(notification) {
      let extentRemaining = 1.0 - notification.extent;
      let scaffold = scaffold$.Scaffold.of(this.context);
      if (extentRemaining < 0.3) {
        scaffold[S$2._floatingActionButtonVisibilityValue] = extentRemaining * 0.3 * 10;
        scaffold.showBodyScrim(true, math.max(core.double, 0.1, 0.6 - scaffold[S$2._floatingActionButtonVisibilityValue]));
      } else {
        scaffold[S$2._floatingActionButtonVisibilityValue] = 1.0;
        scaffold.showBodyScrim(false, 0.0);
      }
      if (notification.extent === notification.minExtent && scaffold.widget.bottomSheet == null) {
        this.close();
      }
      return false;
    }
    build(context) {
      return new transitions.AnimatedBuilder.new({animation: this.widget.animationController, builder: dart.fn((context, child) => new basic.Align.new({alignment: alignment.AlignmentDirectional.topStart, heightFactor: this.animationCurve.transform(this.widget.animationController.value), child: child, $creationLocationd_0dea112b090073317d4: C[1019] || CT.C1019}), T$.BuildContextAndWidgetNToAlign()), child: new basic.Semantics.new({container: true, onDismiss: dart.bind(this, 'close'), child: new (T$.NotificationListenerOfDraggableScrollableNotification()).new({onNotification: dart.bind(this, 'extentChanged'), child: new bottom_sheet.BottomSheet.new({animationController: this.widget.animationController, enableDrag: this.widget.enableDrag, onDragStart: dart.bind(this, S$2._handleDragStart$1), onDragEnd: dart.bind(this, S$2._handleDragEnd$1), onClosing: dart.nullCheck(this.widget.onClosing), builder: this.widget.builder, backgroundColor: this.widget.backgroundColor, elevation: this.widget.elevation, shape: this.widget.shape, clipBehavior: this.widget.clipBehavior, constraints: this.widget.constraints, $creationLocationd_0dea112b090073317d4: C[1020] || CT.C1020}), $creationLocationd_0dea112b090073317d4: C[1021] || CT.C1021}), $creationLocationd_0dea112b090073317d4: C[1022] || CT.C1022}), $creationLocationd_0dea112b090073317d4: C[1023] || CT.C1023});
    }
    static ['_#new#tearOff']() {
      return new scaffold$._StandardBottomSheetState.new();
    }
  };
  (scaffold$._StandardBottomSheetState.new = function() {
    this.animationCurve = scaffold$._standardBottomSheetCurve;
    scaffold$._StandardBottomSheetState.__proto__.new.call(this);
    ;
  }).prototype = scaffold$._StandardBottomSheetState.prototype;
  dart.addTypeTests(scaffold$._StandardBottomSheetState);
  dart.addTypeCaches(scaffold$._StandardBottomSheetState);
  dart.setMethodSignature(scaffold$._StandardBottomSheetState, () => ({
    __proto__: dart.getMethods(scaffold$._StandardBottomSheetState.__proto__),
    close: dart.fnType(dart.void, []),
    [S$2._handleDragStart$1]: dart.fnType(dart.void, [drag_details.DragStartDetails]),
    [S$2._handleDragEnd$1]: dart.fnType(dart.void, [drag_details.DragEndDetails], {isClosing: dart.nullable(core.bool)}, {}),
    [S$2._handleStatusChange]: dart.fnType(dart.void, [animation$.AnimationStatus]),
    extentChanged: dart.fnType(core.bool, [draggable_scrollable_sheet.DraggableScrollableNotification]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(scaffold$._StandardBottomSheetState, I[126]);
  dart.setFieldSignature(scaffold$._StandardBottomSheetState, () => ({
    __proto__: dart.getFields(scaffold$._StandardBottomSheetState.__proto__),
    animationCurve: dart.fieldType(curves.ParametricCurve$(core.double))
  }));
  const _is_PersistentBottomSheetController_default = Symbol('_is_PersistentBottomSheetController_default');
  scaffold$.PersistentBottomSheetController$ = dart.generic(T => {
    class PersistentBottomSheetController extends scaffold$.ScaffoldFeatureController$(scaffold$._StandardBottomSheet, T) {
      get [S$2._isLocalHistoryEntry]() {
        return this[S$2._isLocalHistoryEntry$1];
      }
      set [S$2._isLocalHistoryEntry](value) {
        super[S$2._isLocalHistoryEntry] = value;
      }
      static ['_#_#tearOff'](T, widget, completer, close, setState, _isLocalHistoryEntry) {
        return new (scaffold$.PersistentBottomSheetController$(T)).__(widget, completer, close, setState, _isLocalHistoryEntry);
      }
    }
    (PersistentBottomSheetController.__ = function(widget, completer, close, setState, _isLocalHistoryEntry) {
      this[S$2._isLocalHistoryEntry$1] = _isLocalHistoryEntry;
      PersistentBottomSheetController.__proto__.__.call(this, widget, completer, close, setState);
      ;
    }).prototype = PersistentBottomSheetController.prototype;
    dart.addTypeTests(PersistentBottomSheetController);
    PersistentBottomSheetController.prototype[_is_PersistentBottomSheetController_default] = true;
    dart.addTypeCaches(PersistentBottomSheetController);
    dart.setLibraryUri(PersistentBottomSheetController, I[126]);
    dart.setFieldSignature(PersistentBottomSheetController, () => ({
      __proto__: dart.getFields(PersistentBottomSheetController.__proto__),
      [S$2._isLocalHistoryEntry]: dart.finalFieldType(core.bool)
    }));
    return PersistentBottomSheetController;
  });
  scaffold$.PersistentBottomSheetController = scaffold$.PersistentBottomSheetController$();
  dart.addTypeTests(scaffold$.PersistentBottomSheetController, _is_PersistentBottomSheetController_default);
  scaffold$._ScaffoldScope = class _ScaffoldScope extends framework.InheritedWidget {
    get hasDrawer() {
      return this[S$2.hasDrawer];
    }
    set hasDrawer(value) {
      super.hasDrawer = value;
    }
    get geometryNotifier() {
      return this[S$2.geometryNotifier$1];
    }
    set geometryNotifier(value) {
      super.geometryNotifier = value;
    }
    static ['_#new#tearOff'](opts) {
      let hasDrawer = opts && 'hasDrawer' in opts ? opts.hasDrawer : null;
      let geometryNotifier = opts && 'geometryNotifier' in opts ? opts.geometryNotifier : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new scaffold$._ScaffoldScope.new({hasDrawer: hasDrawer, geometryNotifier: geometryNotifier, child: child, $creationLocationd_0dea112b090073317d4: C[1024] || CT.C1024});
    }
    updateShouldNotify(oldWidget) {
      scaffold$._ScaffoldScope.as(oldWidget);
      return this.hasDrawer !== oldWidget.hasDrawer;
    }
  };
  (scaffold$._ScaffoldScope.new = function(opts) {
    let hasDrawer = opts && 'hasDrawer' in opts ? opts.hasDrawer : null;
    let geometryNotifier = opts && 'geometryNotifier' in opts ? opts.geometryNotifier : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$2.hasDrawer] = hasDrawer;
    this[S$2.geometryNotifier$1] = geometryNotifier;
    if (!(hasDrawer !== null)) dart.assertFailed(null, I[127], 3215, 15, "hasDrawer != null");
    scaffold$._ScaffoldScope.__proto__.new.call(this, {child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = scaffold$._ScaffoldScope.prototype;
  dart.addTypeTests(scaffold$._ScaffoldScope);
  dart.addTypeCaches(scaffold$._ScaffoldScope);
  dart.setMethodSignature(scaffold$._ScaffoldScope, () => ({
    __proto__: dart.getMethods(scaffold$._ScaffoldScope.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(scaffold$._ScaffoldScope, I[126]);
  dart.setFieldSignature(scaffold$._ScaffoldScope, () => ({
    __proto__: dart.getFields(scaffold$._ScaffoldScope.__proto__),
    hasDrawer: dart.finalFieldType(core.bool),
    geometryNotifier: dart.finalFieldType(scaffold$._ScaffoldGeometryNotifier)
  }));
  dart.defineLazy(scaffold$, {
    /*scaffold$._kDefaultFloatingActionButtonLocation*/get _kDefaultFloatingActionButtonLocation() {
      return C[146] || CT.C146;
    },
    /*scaffold$._kDefaultFloatingActionButtonAnimator*/get _kDefaultFloatingActionButtonAnimator() {
      return C[156] || CT.C156;
    },
    /*scaffold$._standardBottomSheetCurve*/get _standardBottomSheetCurve() {
      return C[133] || CT.C133;
    },
    /*scaffold$._kBottomSheetDominatesPercentage*/get _kBottomSheetDominatesPercentage() {
      return 0.3;
    },
    /*scaffold$._kMinBottomSheetScrimOpacity*/get _kMinBottomSheetScrimOpacity() {
      return 0.1;
    },
    /*scaffold$._kMaxBottomSheetScrimOpacity*/get _kMaxBottomSheetScrimOpacity() {
      return 0.6;
    }
  }, false);
  elevation_overlay.ElevationOverlay = class ElevationOverlay extends core.Object {
    static ['_#_#tearOff']() {
      return new elevation_overlay.ElevationOverlay.__();
    }
    static applySurfaceTint(color, surfaceTint, elevation) {
      if (surfaceTint != null) {
        return ui.Color.alphaBlend(surfaceTint.withOpacity(elevation_overlay.ElevationOverlay._surfaceTintOpacityForElevation(elevation)), color);
      }
      return color;
    }
    static _surfaceTintOpacityForElevation(elevation) {
      if (elevation < elevation_overlay._surfaceTintElevationOpacities[S.$_get](0).elevation) {
        return elevation_overlay._surfaceTintElevationOpacities[S.$_get](0).opacity;
      }
      let index = 0;
      while (elevation >= elevation_overlay._surfaceTintElevationOpacities[S.$_get](index).elevation) {
        if (elevation === elevation_overlay._surfaceTintElevationOpacities[S.$_get](index).elevation || index + 1 === elevation_overlay._surfaceTintElevationOpacities[S.$length]) {
          return elevation_overlay._surfaceTintElevationOpacities[S.$_get](index).opacity;
        }
        index = index + 1;
      }
      let lower = elevation_overlay._surfaceTintElevationOpacities[S.$_get](index - 1);
      let upper = elevation_overlay._surfaceTintElevationOpacities[S.$_get](index);
      let t = (elevation - lower.elevation) / (upper.elevation - lower.elevation);
      return lower.opacity + t * (upper.opacity - lower.opacity);
    }
    static applyOverlay(context, color, elevation) {
      let theme = theme$.Theme.of(context);
      if (elevation > 0.0 && theme.applyElevationOverlayColor && theme.brightness === ui.Brightness.dark && color.withOpacity(1.0)._equals(theme.colorScheme.surface.withOpacity(1.0))) {
        return elevation_overlay.ElevationOverlay.colorWithOverlay(color, theme.colorScheme.onSurface, elevation);
      }
      return color;
    }
    static overlayColor(context, elevation) {
      let theme = theme$.Theme.of(context);
      return elevation_overlay.ElevationOverlay._overlayColor(theme.colorScheme.onSurface, elevation);
    }
    static colorWithOverlay(surface, overlay, elevation) {
      return ui.Color.alphaBlend(elevation_overlay.ElevationOverlay._overlayColor(overlay, elevation), surface);
    }
    static _overlayColor(color, elevation) {
      let opacity = (4.5 * math.log(elevation + 1) + 2) / 100.0;
      return color.withOpacity(opacity);
    }
  };
  (elevation_overlay.ElevationOverlay.__ = function() {
    ;
  }).prototype = elevation_overlay.ElevationOverlay.prototype;
  dart.addTypeTests(elevation_overlay.ElevationOverlay);
  dart.addTypeCaches(elevation_overlay.ElevationOverlay);
  dart.setStaticMethodSignature(elevation_overlay.ElevationOverlay, () => ['applySurfaceTint', '_surfaceTintOpacityForElevation', 'applyOverlay', 'overlayColor', 'colorWithOverlay', '_overlayColor']);
  dart.setLibraryUri(elevation_overlay.ElevationOverlay, I[128]);
  elevation_overlay._ElevationOpacity = class _ElevationOpacity extends core.Object {
    get elevation() {
      return this[S$2.elevation$27];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get opacity() {
      return this[S$2.opacity];
    }
    set opacity(value) {
      super.opacity = value;
    }
    static ['_#new#tearOff'](elevation, opacity) {
      return new elevation_overlay._ElevationOpacity.new(elevation, opacity);
    }
  };
  (elevation_overlay._ElevationOpacity.new = function(elevation, opacity) {
    this[S$2.elevation$27] = elevation;
    this[S$2.opacity] = opacity;
    ;
  }).prototype = elevation_overlay._ElevationOpacity.prototype;
  dart.addTypeTests(elevation_overlay._ElevationOpacity);
  dart.addTypeCaches(elevation_overlay._ElevationOpacity);
  dart.setLibraryUri(elevation_overlay._ElevationOpacity, I[128]);
  dart.setFieldSignature(elevation_overlay._ElevationOpacity, () => ({
    __proto__: dart.getFields(elevation_overlay._ElevationOpacity.__proto__),
    elevation: dart.finalFieldType(core.double),
    opacity: dart.finalFieldType(core.double)
  }));
  dart.defineLazy(elevation_overlay, {
    /*elevation_overlay._surfaceTintElevationOpacities*/get _surfaceTintElevationOpacities() {
      return C[1025] || CT.C1025;
    }
  }, false);
  material.MaterialType = class MaterialType extends core._Enum {
    toString() {
      return "MaterialType." + this[S._name];
    }
  };
  (material.MaterialType.new = function(index, name) {
    material.MaterialType.__proto__.new.call(this, index, name);
    ;
  }).prototype = material.MaterialType.prototype;
  dart.addTypeTests(material.MaterialType);
  dart.addTypeCaches(material.MaterialType);
  dart.setLibraryUri(material.MaterialType, I[63]);
  dart.setStaticFieldSignature(material.MaterialType, () => ['values', 'canvas', 'card', 'circle', 'button', 'transparency']);
  dart.defineExtensionMethods(material.MaterialType, ['toString']);
  dart.defineLazy(material.MaterialType, {
    /*material.MaterialType.values*/get values() {
      return C[1032] || CT.C1032;
    },
    /*material.MaterialType.canvas*/get canvas() {
      return C[1033] || CT.C1033;
    },
    /*material.MaterialType.card*/get card() {
      return C[1034] || CT.C1034;
    },
    /*material.MaterialType.circle*/get circle() {
      return C[1035] || CT.C1035;
    },
    /*material.MaterialType.button*/get button() {
      return C[1036] || CT.C1036;
    },
    /*material.MaterialType.transparency*/get transparency() {
      return C[1037] || CT.C1037;
    }
  }, false);
  material.MaterialInkController = class MaterialInkController extends core.Object {};
  (material.MaterialInkController.new = function() {
    ;
  }).prototype = material.MaterialInkController.prototype;
  dart.addTypeTests(material.MaterialInkController);
  dart.addTypeCaches(material.MaterialInkController);
  dart.setLibraryUri(material.MaterialInkController, I[63]);
  material.Material = class Material extends framework.StatefulWidget {
    get child() {
      return this[S$2.child$28];
    }
    set child(value) {
      super.child = value;
    }
    get type() {
      return this[S$2.type$3];
    }
    set type(value) {
      super.type = value;
    }
    get elevation() {
      return this[S$2.elevation$28];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get color() {
      return this[S$2.color$15];
    }
    set color(value) {
      super.color = value;
    }
    get shadowColor() {
      return this[S$2.shadowColor$4];
    }
    set shadowColor(value) {
      super.shadowColor = value;
    }
    get surfaceTintColor() {
      return this[S$2.surfaceTintColor$5];
    }
    set surfaceTintColor(value) {
      super.surfaceTintColor = value;
    }
    get textStyle() {
      return this[S$2.textStyle$7];
    }
    set textStyle(value) {
      super.textStyle = value;
    }
    get shape() {
      return this[S$2.shape$21];
    }
    set shape(value) {
      super.shape = value;
    }
    get borderOnForeground() {
      return this[S$2.borderOnForeground];
    }
    set borderOnForeground(value) {
      super.borderOnForeground = value;
    }
    get clipBehavior() {
      return this[S$2.clipBehavior$10];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    get animationDuration() {
      return this[S$2.animationDuration$4];
    }
    set animationDuration(value) {
      super.animationDuration = value;
    }
    get borderRadius() {
      return this[S$2.borderRadius$4];
    }
    set borderRadius(value) {
      super.borderRadius = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let type = opts && 'type' in opts ? opts.type : C[1033] || CT.C1033;
      let elevation = opts && 'elevation' in opts ? opts.elevation : 0;
      let color = opts && 'color' in opts ? opts.color : null;
      let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
      let surfaceTintColor = opts && 'surfaceTintColor' in opts ? opts.surfaceTintColor : null;
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let borderOnForeground = opts && 'borderOnForeground' in opts ? opts.borderOnForeground : true;
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[71] || CT.C71;
      let animationDuration = opts && 'animationDuration' in opts ? opts.animationDuration : C[160] || CT.C160;
      let child = opts && 'child' in opts ? opts.child : null;
      return new material.Material.new({key: key, type: type, elevation: elevation, color: color, shadowColor: shadowColor, surfaceTintColor: surfaceTintColor, textStyle: textStyle, borderRadius: borderRadius, shape: shape, borderOnForeground: borderOnForeground, clipBehavior: clipBehavior, animationDuration: animationDuration, child: child, $creationLocationd_0dea112b090073317d4: C[1038] || CT.C1038});
    }
    static of(context) {
      return context.findAncestorRenderObjectOfType(material._RenderInkFeatures);
    }
    createState() {
      return new material._MaterialState.new();
    }
    debugFillProperties(properties) {
      let t103;
      super.debugFillProperties(properties);
      properties.add(new (T$.EnumPropertyOfMaterialType()).new("type", this.type));
      properties.add(new diagnostics.DoubleProperty.new("elevation", this.elevation, {defaultValue: 0.0}));
      properties.add(new colors.ColorProperty.new("color", this.color, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("shadowColor", this.shadowColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("surfaceTintColor", this.surfaceTintColor, {defaultValue: null}));
      t103 = this.textStyle;
      t103 == null ? null : t103.debugFillProperties(properties, {prefix: "textStyle."});
      properties.add(new (T$.DiagnosticsPropertyOfShapeBorder()).new("shape", this.shape, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("borderOnForeground", this.borderOnForeground, {defaultValue: true}));
      properties.add(new (T$.DiagnosticsPropertyOfBorderRadiusGeometry()).new("borderRadius", this.borderRadius, {defaultValue: null}));
    }
  };
  (material.Material.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let type = opts && 'type' in opts ? opts.type : C[1033] || CT.C1033;
    let elevation = opts && 'elevation' in opts ? opts.elevation : 0;
    let color = opts && 'color' in opts ? opts.color : null;
    let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
    let surfaceTintColor = opts && 'surfaceTintColor' in opts ? opts.surfaceTintColor : null;
    let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let borderOnForeground = opts && 'borderOnForeground' in opts ? opts.borderOnForeground : true;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[71] || CT.C71;
    let animationDuration = opts && 'animationDuration' in opts ? opts.animationDuration : C[160] || CT.C160;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$2.type$3] = type;
    this[S$2.elevation$28] = elevation;
    this[S$2.color$15] = color;
    this[S$2.shadowColor$4] = shadowColor;
    this[S$2.surfaceTintColor$5] = surfaceTintColor;
    this[S$2.textStyle$7] = textStyle;
    this[S$2.borderRadius$4] = borderRadius;
    this[S$2.shape$21] = shape;
    this[S$2.borderOnForeground] = borderOnForeground;
    this[S$2.clipBehavior$10] = clipBehavior;
    this[S$2.animationDuration$4] = animationDuration;
    this[S$2.child$28] = child;
    if (!(type !== null)) dart.assertFailed(null, I[62], 194, 15, "type != null");
    if (!(elevation !== null && elevation >= 0.0)) dart.assertFailed(null, I[62], 195, 15, "elevation != null && elevation >= 0.0");
    if (!!(shape != null && borderRadius != null)) dart.assertFailed(null, I[62], 196, 15, "!(shape != null && borderRadius != null)");
    if (!(animationDuration !== null)) dart.assertFailed(null, I[62], 197, 15, "animationDuration != null");
    if (!!(type === material.MaterialType.circle && (borderRadius != null || shape != null))) dart.assertFailed(null, I[62], 198, 15, "!(identical(type, MaterialType.circle) && (borderRadius != null || shape != null))");
    if (!(borderOnForeground !== null)) dart.assertFailed(null, I[62], 199, 15, "borderOnForeground != null");
    if (!(clipBehavior !== null)) dart.assertFailed(null, I[62], 200, 15, "clipBehavior != null");
    material.Material.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = material.Material.prototype;
  dart.addTypeTests(material.Material);
  dart.addTypeCaches(material.Material);
  dart.setMethodSignature(material.Material, () => ({
    __proto__: dart.getMethods(material.Material.__proto__),
    createState: dart.fnType(framework.State$(material.Material), [])
  }));
  dart.setStaticMethodSignature(material.Material, () => ['of']);
  dart.setLibraryUri(material.Material, I[63]);
  dart.setFieldSignature(material.Material, () => ({
    __proto__: dart.getFields(material.Material.__proto__),
    child: dart.finalFieldType(dart.nullable(framework.Widget)),
    type: dart.finalFieldType(material.MaterialType),
    elevation: dart.finalFieldType(core.double),
    color: dart.finalFieldType(dart.nullable(ui.Color)),
    shadowColor: dart.finalFieldType(dart.nullable(ui.Color)),
    surfaceTintColor: dart.finalFieldType(dart.nullable(ui.Color)),
    textStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    borderOnForeground: dart.finalFieldType(core.bool),
    clipBehavior: dart.finalFieldType(ui.Clip),
    animationDuration: dart.finalFieldType(core.Duration),
    borderRadius: dart.finalFieldType(dart.nullable(border_radius.BorderRadiusGeometry))
  }));
  dart.setStaticFieldSignature(material.Material, () => ['defaultSplashRadius']);
  dart.defineLazy(material.Material, {
    /*material.Material.defaultSplashRadius*/get defaultSplashRadius() {
      return 35;
    }
  }, false);
  const State_TickerProviderStateMixin$36$6 = class State_TickerProviderStateMixin extends framework.State$(material.Material) {};
  (State_TickerProviderStateMixin$36$6.new = function() {
    ticker_provider.TickerProviderStateMixin$(material.Material)[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36$6.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36$6.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36$6, ticker_provider.TickerProviderStateMixin$(material.Material));
  material._MaterialState = class _MaterialState extends State_TickerProviderStateMixin$36$6 {
    [S$2._getBackgroundColor](context) {
      let theme = theme$.Theme.of(context);
      let color = this.widget.color;
      if (color == null) {
        switch (this.widget.type) {
          case C[1033] || CT.C1033:
            {
              color = theme.canvasColor;
              break;
            }
          case C[1034] || CT.C1034:
            {
              color = theme.cardColor;
              break;
            }
          case C[1036] || CT.C1036:
          case C[1035] || CT.C1035:
          case C[1037] || CT.C1037:
            {
              break;
            }
        }
      }
      return color;
    }
    build(context) {
      let t103, t103$, t103$0;
      let theme = theme$.Theme.of(context);
      let backgroundColor = this[S$2._getBackgroundColor](context);
      let modelShadowColor = (t103 = this.widget.shadowColor, t103 == null ? theme.useMaterial3 ? null : theme.shadowColor : t103);
      let modelElevation = modelShadowColor != null ? this.widget.elevation : 0.0;
      if (!(backgroundColor != null || this.widget.type === material.MaterialType.transparency)) dart.assertFailed("If Material type is not MaterialType.transparency, a color must " + "either be passed in through the `color` property, or be defined " + "in the theme (ex. canvasColor != null if type is set to " + "MaterialType.canvas)", I[62], 408, 7, "backgroundColor != null || widget.type == MaterialType.transparency");
      let contents = this.widget.child;
      if (contents != null) {
        contents = new implicit_animations.AnimatedDefaultTextStyle.new({style: (t103$ = this.widget.textStyle, t103$ == null ? dart.nullCheck(theme$.Theme.of(context).textTheme.bodyText2) : t103$), duration: this.widget.animationDuration, child: contents, $creationLocationd_0dea112b090073317d4: C[1039] || CT.C1039});
      }
      contents = new (T$.NotificationListenerOfLayoutChangedNotification()).new({onNotification: dart.fn(notification => {
          let renderer = material._RenderInkFeatures.as(dart.nullCheck(dart.nullCheck(this[S$2._inkFeatureRenderer].currentContext).findRenderObject()));
          renderer[S$2._didChangeLayout]();
          return false;
        }, T$.LayoutChangedNotificationTobool()), child: new material._InkFeatures.new({key: this[S$2._inkFeatureRenderer], absorbHitTest: this.widget.type !== material.MaterialType.transparency, color: backgroundColor, vsync: this, child: contents, $creationLocationd_0dea112b090073317d4: C[1040] || CT.C1040}), $creationLocationd_0dea112b090073317d4: C[1041] || CT.C1041});
      if (this.widget.type === material.MaterialType.canvas && this.widget.shape == null && this.widget.borderRadius == null) {
        let color = theme$.Theme.of(context).useMaterial3 ? elevation_overlay.ElevationOverlay.applySurfaceTint(dart.nullCheck(backgroundColor), this.widget.surfaceTintColor, this.widget.elevation) : elevation_overlay.ElevationOverlay.applyOverlay(context, dart.nullCheck(backgroundColor), this.widget.elevation);
        return new implicit_animations.AnimatedPhysicalModel.new({curve: curves.Curves.fastOutSlowIn, duration: this.widget.animationDuration, shape: box_border.BoxShape.rectangle, clipBehavior: this.widget.clipBehavior, elevation: modelElevation, color: color, shadowColor: (t103$0 = modelShadowColor, t103$0 == null ? C[1042] || CT.C1042 : t103$0), animateColor: false, child: contents, $creationLocationd_0dea112b090073317d4: C[1043] || CT.C1043});
      }
      let shape = this[S$2._getShape]();
      if (this.widget.type === material.MaterialType.transparency) {
        return material._MaterialState._transparentInterior({context: context, shape: shape, clipBehavior: this.widget.clipBehavior, contents: contents});
      }
      return new material._MaterialInterior.new({curve: curves.Curves.fastOutSlowIn, duration: this.widget.animationDuration, shape: shape, borderOnForeground: this.widget.borderOnForeground, clipBehavior: this.widget.clipBehavior, elevation: this.widget.elevation, color: dart.nullCheck(backgroundColor), shadowColor: modelShadowColor, surfaceTintColor: this.widget.surfaceTintColor, child: contents, $creationLocationd_0dea112b090073317d4: C[1044] || CT.C1044});
    }
    static _transparentInterior(opts) {
      let context = opts && 'context' in opts ? opts.context : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
      let contents = opts && 'contents' in opts ? opts.contents : null;
      let child = new material._ShapeBorderPaint.new({shape: shape, child: contents, $creationLocationd_0dea112b090073317d4: C[1045] || CT.C1045});
      return new basic.ClipPath.new({clipper: new proxy_box.ShapeBorderClipper.new({shape: shape, textDirection: basic.Directionality.maybeOf(context)}), clipBehavior: clipBehavior, child: child, $creationLocationd_0dea112b090073317d4: C[1046] || CT.C1046});
    }
    [S$2._getShape]() {
      let t103;
      if (this.widget.shape != null) {
        return dart.nullCheck(this.widget.shape);
      }
      if (this.widget.borderRadius != null) {
        return new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: dart.nullCheck(this.widget.borderRadius)});
      }
      switch (this.widget.type) {
        case C[1033] || CT.C1033:
        case C[1037] || CT.C1037:
          {
            return C[605] || CT.C605;
          }
        case C[1034] || CT.C1034:
        case C[1036] || CT.C1036:
          {
            return new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: (t103 = this.widget.borderRadius, t103 == null ? dart.nullCheck(material.kMaterialEdges[S.$_get](this.widget.type)) : t103)});
          }
        case C[1035] || CT.C1035:
          {
            return C[186] || CT.C186;
          }
      }
    }
    static ['_#new#tearOff']() {
      return new material._MaterialState.new();
    }
  };
  (material._MaterialState.new = function() {
    this[S$2._inkFeatureRenderer] = T$.GlobalKeyOfStateOfStatefulWidget().new({debugLabel: "ink renderer"});
    material._MaterialState.__proto__.new.call(this);
    ;
  }).prototype = material._MaterialState.prototype;
  dart.addTypeTests(material._MaterialState);
  dart.addTypeCaches(material._MaterialState);
  dart.setMethodSignature(material._MaterialState, () => ({
    __proto__: dart.getMethods(material._MaterialState.__proto__),
    [S$2._getBackgroundColor]: dart.fnType(dart.nullable(ui.Color), [framework.BuildContext]),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    [S$2._getShape]: dart.fnType(borders.ShapeBorder, [])
  }));
  dart.setStaticMethodSignature(material._MaterialState, () => ['_transparentInterior']);
  dart.setLibraryUri(material._MaterialState, I[63]);
  dart.setFieldSignature(material._MaterialState, () => ({
    __proto__: dart.getFields(material._MaterialState.__proto__),
    [S$2._inkFeatureRenderer]: dart.finalFieldType(framework.GlobalKey$(framework.State$(framework.StatefulWidget)))
  }));
  material._RenderInkFeatures = class _RenderInkFeatures extends proxy_box.RenderProxyBox {
    static ['_#new#tearOff'](opts) {
      let child = opts && 'child' in opts ? opts.child : null;
      let vsync = opts && 'vsync' in opts ? opts.vsync : null;
      let absorbHitTest = opts && 'absorbHitTest' in opts ? opts.absorbHitTest : null;
      let color = opts && 'color' in opts ? opts.color : null;
      return new material._RenderInkFeatures.new({child: child, vsync: vsync, absorbHitTest: absorbHitTest, color: color});
    }
    get debugInkFeatures() {
      {
        return this[S$2._inkFeatures];
      }
      return null;
    }
    addInkFeature(feature) {
      if (!!feature[S$._debugDisposed]) dart.assertFailed(null, I[62], 574, 12, "!feature._debugDisposed");
      if (!feature[S$._controller$3][S.$_equals](this)) dart.assertFailed(null, I[62], 575, 12, "feature._controller == this");
      this[S$2._inkFeatures] == null ? this[S$2._inkFeatures] = T$.JSArrayOfInkFeature().of([]) : null;
      if (!!dart.nullCheck(this[S$2._inkFeatures])[S.$contains](feature)) dart.assertFailed(null, I[62], 577, 12, "!_inkFeatures!.contains(feature)");
      dart.nullCheck(this[S$2._inkFeatures])[S.$add](feature);
      this.markNeedsPaint();
    }
    [S$._removeFeature](feature) {
      if (!(this[S$2._inkFeatures] != null)) dart.assertFailed(null, I[62], 583, 12, "_inkFeatures != null");
      dart.nullCheck(this[S$2._inkFeatures])[S$0.$remove](feature);
      this.markNeedsPaint();
    }
    [S$2._didChangeLayout]() {
      if (this[S$2._inkFeatures] != null && dart.nullCheck(this[S$2._inkFeatures])[S.$isNotEmpty]) {
        this.markNeedsPaint();
      }
    }
    hitTestSelf(position) {
      return this.absorbHitTest;
    }
    paint(context, offset) {
      if (this[S$2._inkFeatures] != null && dart.nullCheck(this[S$2._inkFeatures])[S.$isNotEmpty]) {
        let canvas = context.canvas;
        canvas.save();
        canvas.translate(offset.dx, offset.dy);
        canvas.clipRect(ui.Offset.zero['&'](this.size));
        for (let inkFeature of dart.nullCheck(this[S$2._inkFeatures])) {
          inkFeature[S$._paint](canvas);
        }
        canvas.restore();
      }
      super.paint(context, offset);
    }
  };
  (material._RenderInkFeatures.new = function(opts) {
    let child = opts && 'child' in opts ? opts.child : null;
    let vsync = opts && 'vsync' in opts ? opts.vsync : null;
    let absorbHitTest = opts && 'absorbHitTest' in opts ? opts.absorbHitTest : null;
    let color = opts && 'color' in opts ? opts.color : null;
    this[S$2._inkFeatures] = null;
    this.vsync = vsync;
    this.absorbHitTest = absorbHitTest;
    this.color = color;
    if (!(vsync !== null)) dart.assertFailed(null, I[62], 546, 15, "vsync != null");
    material._RenderInkFeatures.__proto__.new.call(this, child);
    ;
  }).prototype = material._RenderInkFeatures.prototype;
  dart.addTypeTests(material._RenderInkFeatures);
  dart.addTypeCaches(material._RenderInkFeatures);
  material._RenderInkFeatures[dart.implements] = () => [material.MaterialInkController];
  dart.setMethodSignature(material._RenderInkFeatures, () => ({
    __proto__: dart.getMethods(material._RenderInkFeatures.__proto__),
    addInkFeature: dart.fnType(dart.void, [material.InkFeature]),
    [S$._removeFeature]: dart.fnType(dart.void, [material.InkFeature]),
    [S$2._didChangeLayout]: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(material._RenderInkFeatures, () => ({
    __proto__: dart.getGetters(material._RenderInkFeatures.__proto__),
    debugInkFeatures: dart.nullable(core.List$(material.InkFeature))
  }));
  dart.setLibraryUri(material._RenderInkFeatures, I[63]);
  dart.setFieldSignature(material._RenderInkFeatures, () => ({
    __proto__: dart.getFields(material._RenderInkFeatures.__proto__),
    vsync: dart.finalFieldType(ticker.TickerProvider),
    color: dart.fieldType(dart.nullable(ui.Color)),
    absorbHitTest: dart.fieldType(core.bool),
    [S$2._inkFeatures]: dart.fieldType(dart.nullable(core.List$(material.InkFeature)))
  }));
  material._InkFeatures = class _InkFeatures extends framework.SingleChildRenderObjectWidget {
    get color() {
      return this[S$2.color$16];
    }
    set color(value) {
      super.color = value;
    }
    get vsync() {
      return this[S$2.vsync];
    }
    set vsync(value) {
      super.vsync = value;
    }
    get absorbHitTest() {
      return this[S$2.absorbHitTest];
    }
    set absorbHitTest(value) {
      super.absorbHitTest = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let vsync = opts && 'vsync' in opts ? opts.vsync : null;
      let absorbHitTest = opts && 'absorbHitTest' in opts ? opts.absorbHitTest : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new material._InkFeatures.new({key: key, color: color, vsync: vsync, absorbHitTest: absorbHitTest, child: child, $creationLocationd_0dea112b090073317d4: C[1047] || CT.C1047});
    }
    createRenderObject(context) {
      return new material._RenderInkFeatures.new({color: this.color, absorbHitTest: this.absorbHitTest, vsync: this.vsync});
    }
    updateRenderObject(context, renderObject) {
      let t103;
      material._RenderInkFeatures.as(renderObject);
      t103 = renderObject;
      (() => {
        t103.color = this.color;
        t103.absorbHitTest = this.absorbHitTest;
        return t103;
      })();
      if (!this.vsync[S.$_equals](renderObject.vsync)) dart.assertFailed(null, I[62], 644, 12, "vsync == renderObject.vsync");
    }
  };
  (material._InkFeatures.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let vsync = opts && 'vsync' in opts ? opts.vsync : null;
    let absorbHitTest = opts && 'absorbHitTest' in opts ? opts.absorbHitTest : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$2.color$16] = color;
    this[S$2.vsync] = vsync;
    this[S$2.absorbHitTest] = absorbHitTest;
    material._InkFeatures.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = material._InkFeatures.prototype;
  dart.addTypeTests(material._InkFeatures);
  dart.addTypeCaches(material._InkFeatures);
  dart.setMethodSignature(material._InkFeatures, () => ({
    __proto__: dart.getMethods(material._InkFeatures.__proto__),
    createRenderObject: dart.fnType(material._RenderInkFeatures, [framework.BuildContext])
  }));
  dart.setLibraryUri(material._InkFeatures, I[63]);
  dart.setFieldSignature(material._InkFeatures, () => ({
    __proto__: dart.getFields(material._InkFeatures.__proto__),
    color: dart.finalFieldType(dart.nullable(ui.Color)),
    vsync: dart.finalFieldType(ticker.TickerProvider),
    absorbHitTest: dart.finalFieldType(core.bool)
  }));
  material.ShapeBorderTween = class ShapeBorderTween extends tween.Tween$(dart.nullable(borders.ShapeBorder)) {
    static ['_#new#tearOff'](opts) {
      let begin = opts && 'begin' in opts ? opts.begin : null;
      let end = opts && 'end' in opts ? opts.end : null;
      return new material.ShapeBorderTween.new({begin: begin, end: end});
    }
    lerp(t) {
      return borders.ShapeBorder.lerp(this.begin, this.end, t);
    }
  };
  (material.ShapeBorderTween.new = function(opts) {
    let begin = opts && 'begin' in opts ? opts.begin : null;
    let end = opts && 'end' in opts ? opts.end : null;
    material.ShapeBorderTween.__proto__.new.call(this, {begin: begin, end: end});
    ;
  }).prototype = material.ShapeBorderTween.prototype;
  dart.addTypeTests(material.ShapeBorderTween);
  dart.addTypeCaches(material.ShapeBorderTween);
  dart.setLibraryUri(material.ShapeBorderTween, I[63]);
  material._MaterialInterior = class _MaterialInterior extends implicit_animations.ImplicitlyAnimatedWidget {
    get child() {
      return this[S$2.child$29];
    }
    set child(value) {
      super.child = value;
    }
    get shape() {
      return this[S$2.shape$22];
    }
    set shape(value) {
      super.shape = value;
    }
    get borderOnForeground() {
      return this[S$2.borderOnForeground$1];
    }
    set borderOnForeground(value) {
      super.borderOnForeground = value;
    }
    get clipBehavior() {
      return this[S$2.clipBehavior$11];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    get elevation() {
      return this[S$2.elevation$29];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get color() {
      return this[S$2.color$17];
    }
    set color(value) {
      super.color = value;
    }
    get shadowColor() {
      return this[S$2.shadowColor$5];
    }
    set shadowColor(value) {
      super.shadowColor = value;
    }
    get surfaceTintColor() {
      return this[S$2.surfaceTintColor$6];
    }
    set surfaceTintColor(value) {
      super.surfaceTintColor = value;
    }
    static ['_#new#tearOff'](opts) {
      let child = opts && 'child' in opts ? opts.child : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let borderOnForeground = opts && 'borderOnForeground' in opts ? opts.borderOnForeground : true;
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[71] || CT.C71;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
      let surfaceTintColor = opts && 'surfaceTintColor' in opts ? opts.surfaceTintColor : null;
      let curve = opts && 'curve' in opts ? opts.curve : null;
      let duration = opts && 'duration' in opts ? opts.duration : null;
      return new material._MaterialInterior.new({child: child, shape: shape, borderOnForeground: borderOnForeground, clipBehavior: clipBehavior, elevation: elevation, color: color, shadowColor: shadowColor, surfaceTintColor: surfaceTintColor, curve: curve, duration: duration, $creationLocationd_0dea112b090073317d4: C[1048] || CT.C1048});
    }
    createState() {
      return new material._MaterialInteriorState.new();
    }
    debugFillProperties(description) {
      super.debugFillProperties(description);
      description.add(new (T$.DiagnosticsPropertyOfShapeBorder()).new("shape", this.shape));
      description.add(new diagnostics.DoubleProperty.new("elevation", this.elevation));
      description.add(new colors.ColorProperty.new("color", this.color));
      description.add(new colors.ColorProperty.new("shadowColor", this.shadowColor));
    }
  };
  (material._MaterialInterior.new = function(opts) {
    let child = opts && 'child' in opts ? opts.child : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let borderOnForeground = opts && 'borderOnForeground' in opts ? opts.borderOnForeground : true;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[71] || CT.C71;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
    let surfaceTintColor = opts && 'surfaceTintColor' in opts ? opts.surfaceTintColor : null;
    let curve = opts && 'curve' in opts ? opts.curve : C[355] || CT.C355;
    let duration = opts && 'duration' in opts ? opts.duration : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$2.child$29] = child;
    this[S$2.shape$22] = shape;
    this[S$2.borderOnForeground$1] = borderOnForeground;
    this[S$2.clipBehavior$11] = clipBehavior;
    this[S$2.elevation$29] = elevation;
    this[S$2.color$17] = color;
    this[S$2.shadowColor$5] = shadowColor;
    this[S$2.surfaceTintColor$6] = surfaceTintColor;
    if (!(child !== null)) dart.assertFailed(null, I[62], 766, 15, "child != null");
    if (!(shape !== null)) dart.assertFailed(null, I[62], 767, 15, "shape != null");
    if (!(clipBehavior !== null)) dart.assertFailed(null, I[62], 768, 15, "clipBehavior != null");
    if (!(elevation !== null && elevation >= 0.0)) dart.assertFailed(null, I[62], 769, 15, "elevation != null && elevation >= 0.0");
    if (!(color !== null)) dart.assertFailed(null, I[62], 770, 15, "color != null");
    material._MaterialInterior.__proto__.new.call(this, {curve: curve, duration: duration, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = material._MaterialInterior.prototype;
  dart.addTypeTests(material._MaterialInterior);
  dart.addTypeCaches(material._MaterialInterior);
  dart.setMethodSignature(material._MaterialInterior, () => ({
    __proto__: dart.getMethods(material._MaterialInterior.__proto__),
    createState: dart.fnType(material._MaterialInteriorState, [])
  }));
  dart.setLibraryUri(material._MaterialInterior, I[63]);
  dart.setFieldSignature(material._MaterialInterior, () => ({
    __proto__: dart.getFields(material._MaterialInterior.__proto__),
    child: dart.finalFieldType(framework.Widget),
    shape: dart.finalFieldType(borders.ShapeBorder),
    borderOnForeground: dart.finalFieldType(core.bool),
    clipBehavior: dart.finalFieldType(ui.Clip),
    elevation: dart.finalFieldType(core.double),
    color: dart.finalFieldType(ui.Color),
    shadowColor: dart.finalFieldType(dart.nullable(ui.Color)),
    surfaceTintColor: dart.finalFieldType(dart.nullable(ui.Color))
  }));
  material._MaterialInteriorState = class _MaterialInteriorState extends implicit_animations.AnimatedWidgetBaseState$(material._MaterialInterior) {
    forEachTween(visitor) {
      this[S$2._elevation] = T$.TweenNOfdouble().as(visitor(this[S$2._elevation], this.widget.elevation, dart.fn(value => new (T$.TweenOfdouble()).new({begin: core.double.as(value)}), T$.dynamicToTweenOfdouble())));
      this[S$2._shadowColor] = this.widget.shadowColor != null ? T$.ColorTweenN().as(visitor(this[S$2._shadowColor], this.widget.shadowColor, dart.fn(value => new tween.ColorTween.new({begin: ui.Color.as(value)}), T$.dynamicToColorTween()))) : null;
      this[S$2._surfaceTintColor] = this.widget.surfaceTintColor != null ? T$.ColorTweenN().as(visitor(this[S$2._surfaceTintColor], this.widget.surfaceTintColor, dart.fn(value => new tween.ColorTween.new({begin: ui.Color.as(value)}), T$.dynamicToColorTween()))) : null;
      this[S$2._border$1] = T$.ShapeBorderTweenN().as(visitor(this[S$2._border$1], this.widget.shape, dart.fn(value => new material.ShapeBorderTween.new({begin: borders.ShapeBorder.as(value)}), T$.dynamicToShapeBorderTween())));
    }
    build(context) {
      let t103, t103$, t103$0;
      let shape = dart.nullCheck(dart.nullCheck(this[S$2._border$1]).evaluate(this.animation));
      let elevation = dart.nullCheck(this[S$2._elevation]).evaluate(this.animation);
      let color = theme$.Theme.of(context).useMaterial3 ? elevation_overlay.ElevationOverlay.applySurfaceTint(this.widget.color, (t103 = this[S$2._surfaceTintColor], t103 == null ? null : t103.evaluate(this.animation)), elevation) : elevation_overlay.ElevationOverlay.applyOverlay(context, this.widget.color, elevation);
      let modelElevation = this.widget.shadowColor != null ? elevation : 0.0;
      let shadowColor = (t103$0 = (t103$ = this[S$2._shadowColor], t103$ == null ? null : t103$.evaluate(this.animation)), t103$0 == null ? C[1042] || CT.C1042 : t103$0);
      return new basic.PhysicalShape.new({clipper: new proxy_box.ShapeBorderClipper.new({shape: shape, textDirection: basic.Directionality.maybeOf(context)}), clipBehavior: this.widget.clipBehavior, elevation: modelElevation, color: color, shadowColor: shadowColor, child: new material._ShapeBorderPaint.new({shape: shape, borderOnForeground: this.widget.borderOnForeground, child: this.widget.child, $creationLocationd_0dea112b090073317d4: C[1049] || CT.C1049}), $creationLocationd_0dea112b090073317d4: C[1050] || CT.C1050});
    }
    static ['_#new#tearOff']() {
      return new material._MaterialInteriorState.new();
    }
  };
  (material._MaterialInteriorState.new = function() {
    this[S$2._elevation] = null;
    this[S$2._surfaceTintColor] = null;
    this[S$2._shadowColor] = null;
    this[S$2._border$1] = null;
    material._MaterialInteriorState.__proto__.new.call(this);
    ;
  }).prototype = material._MaterialInteriorState.prototype;
  dart.addTypeTests(material._MaterialInteriorState);
  dart.addTypeCaches(material._MaterialInteriorState);
  dart.setMethodSignature(material._MaterialInteriorState, () => ({
    __proto__: dart.getMethods(material._MaterialInteriorState.__proto__),
    forEachTween: dart.fnType(dart.void, [dart.fnType(dart.nullable(tween.Tween), [dart.nullable(tween.Tween), dart.dynamic, dart.fnType(tween.Tween, [dart.dynamic])])]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(material._MaterialInteriorState, I[63]);
  dart.setFieldSignature(material._MaterialInteriorState, () => ({
    __proto__: dart.getFields(material._MaterialInteriorState.__proto__),
    [S$2._elevation]: dart.fieldType(dart.nullable(tween.Tween$(core.double))),
    [S$2._surfaceTintColor]: dart.fieldType(dart.nullable(tween.ColorTween)),
    [S$2._shadowColor]: dart.fieldType(dart.nullable(tween.ColorTween)),
    [S$2._border$1]: dart.fieldType(dart.nullable(material.ShapeBorderTween))
  }));
  material._ShapeBorderPaint = class _ShapeBorderPaint extends framework.StatelessWidget {
    get child() {
      return this[S$2.child$30];
    }
    set child(value) {
      super.child = value;
    }
    get shape() {
      return this[S$2.shape$23];
    }
    set shape(value) {
      super.shape = value;
    }
    get borderOnForeground() {
      return this[S$2.borderOnForeground$2];
    }
    set borderOnForeground(value) {
      super.borderOnForeground = value;
    }
    static ['_#new#tearOff'](opts) {
      let child = opts && 'child' in opts ? opts.child : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let borderOnForeground = opts && 'borderOnForeground' in opts ? opts.borderOnForeground : true;
      return new material._ShapeBorderPaint.new({child: child, shape: shape, borderOnForeground: borderOnForeground, $creationLocationd_0dea112b090073317d4: C[1051] || CT.C1051});
    }
    build(context) {
      return new basic.CustomPaint.new({painter: this.borderOnForeground ? null : new material._ShapeBorderPainter.new(this.shape, basic.Directionality.maybeOf(context)), foregroundPainter: this.borderOnForeground ? new material._ShapeBorderPainter.new(this.shape, basic.Directionality.maybeOf(context)) : null, child: this.child, $creationLocationd_0dea112b090073317d4: C[1052] || CT.C1052});
    }
  };
  (material._ShapeBorderPaint.new = function(opts) {
    let child = opts && 'child' in opts ? opts.child : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let borderOnForeground = opts && 'borderOnForeground' in opts ? opts.borderOnForeground : true;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$2.child$30] = child;
    this[S$2.shape$23] = shape;
    this[S$2.borderOnForeground$2] = borderOnForeground;
    material._ShapeBorderPaint.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = material._ShapeBorderPaint.prototype;
  dart.addTypeTests(material._ShapeBorderPaint);
  dart.addTypeCaches(material._ShapeBorderPaint);
  dart.setMethodSignature(material._ShapeBorderPaint, () => ({
    __proto__: dart.getMethods(material._ShapeBorderPaint.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(material._ShapeBorderPaint, I[63]);
  dart.setFieldSignature(material._ShapeBorderPaint, () => ({
    __proto__: dart.getFields(material._ShapeBorderPaint.__proto__),
    child: dart.finalFieldType(framework.Widget),
    shape: dart.finalFieldType(borders.ShapeBorder),
    borderOnForeground: dart.finalFieldType(core.bool)
  }));
  material._ShapeBorderPainter = class _ShapeBorderPainter extends custom_paint.CustomPainter {
    static ['_#new#tearOff'](border, textDirection) {
      return new material._ShapeBorderPainter.new(border, textDirection);
    }
    paint(canvas, size) {
      this.border.paint(canvas, ui.Offset.zero['&'](size), {textDirection: this.textDirection});
    }
    shouldRepaint(oldDelegate) {
      material._ShapeBorderPainter.as(oldDelegate);
      return !oldDelegate.border[S.$_equals](this.border);
    }
  };
  (material._ShapeBorderPainter.new = function(border, textDirection) {
    this.border = border;
    this.textDirection = textDirection;
    material._ShapeBorderPainter.__proto__.new.call(this);
    ;
  }).prototype = material._ShapeBorderPainter.prototype;
  dart.addTypeTests(material._ShapeBorderPainter);
  dart.addTypeCaches(material._ShapeBorderPainter);
  dart.setMethodSignature(material._ShapeBorderPainter, () => ({
    __proto__: dart.getMethods(material._ShapeBorderPainter.__proto__),
    paint: dart.fnType(dart.void, [ui.Canvas, ui.Size]),
    shouldRepaint: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(material._ShapeBorderPainter, I[63]);
  dart.setFieldSignature(material._ShapeBorderPainter, () => ({
    __proto__: dart.getFields(material._ShapeBorderPainter.__proto__),
    border: dart.finalFieldType(borders.ShapeBorder),
    textDirection: dart.finalFieldType(dart.nullable(ui.TextDirection))
  }));
  dart.defineLazy(material, {
    /*material.kMaterialEdges*/get kMaterialEdges() {
      return C[1053] || CT.C1053;
    }
  }, false);
  debug$1.debugCheckHasMaterial = function debugCheckHasMaterial(context) {
    if (!dart.fn(() => {
      if (!material.Material.is(context.widget) && context.findAncestorWidgetOfExactType(material.Material) == null) {
        dart.throw(new assertions.FlutterError.fromParts((() => {
          let t103 = T$.JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("No Material widget found."), new assertions.ErrorDescription.new(dart.str(context.widget[S.$runtimeType]) + " widgets require a Material " + "widget ancestor.\n" + "In Material Design, most widgets are conceptually \"printed\" on " + "a sheet of material. In Flutter's material library, that " + "material is represented by the Material widget. It is the " + "Material widget that renders ink splashes, for instance. " + "Because of this, many material library widgets require that " + "there be a Material widget in the tree above them."), new assertions.ErrorHint.new("To introduce a Material widget, you can either directly " + "include one, or use a widget that contains Material itself, " + "such as a Card, Dialog, Drawer, or Scaffold.")]);
          t103[S.$addAll](context.describeMissingAncestor({expectedAncestorType: dart.wrapType(material.Material)}));
          return t103;
        })()));
      }
      return true;
    }, T$.VoidTobool())()) dart.assertFailed(null, I[129], 27, 10, "() {\n    if (context.widget is! Material && context.findAncestorWidgetOfExactType<Material>() == null) {\n      throw FlutterError.fromParts(<DiagnosticsNode>[\n        ErrorSummary('No Material widget found.'),\n        ErrorDescription(\n          '${context.widget.runtimeType} widgets require a Material '\n          'widget ancestor.\\n'\n          'In Material Design, most widgets are conceptually \"printed\" on '\n          \"a sheet of material. In Flutter's material library, that \"\n          'material is represented by the Material widget. It is the '\n          'Material widget that renders ink splashes, for instance. '\n          'Because of this, many material library widgets require that '\n          'there be a Material widget in the tree above them.',\n        ),\n        ErrorHint(\n          'To introduce a Material widget, you can either directly '\n          'include one, or use a widget that contains Material itself, '\n          'such as a Card, Dialog, Drawer, or Scaffold.',\n        ),\n        ...context.describeMissingAncestor(expectedAncestorType: Material),\n      ]);\n    }\n    return true;\n  }()");
    return true;
  };
  debug$1.debugCheckHasMaterialLocalizations = function debugCheckHasMaterialLocalizations(context) {
    if (!dart.fn(() => {
      if (localizations$.Localizations.of(material_localizations.MaterialLocalizations, context, dart.wrapType(material_localizations.MaterialLocalizations)) == null) {
        dart.throw(new assertions.FlutterError.fromParts((() => {
          let t104 = T$.JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("No MaterialLocalizations found."), new assertions.ErrorDescription.new(dart.str(context.widget[S.$runtimeType]) + " widgets require MaterialLocalizations " + "to be provided by a Localizations widget ancestor."), new assertions.ErrorDescription.new("The material library uses Localizations to generate messages, " + "labels, and abbreviations."), new assertions.ErrorHint.new("To introduce a MaterialLocalizations, either use a " + "MaterialApp at the root of your application to include them " + "automatically, or add a Localization widget with a " + "MaterialLocalizations delegate.")]);
          t104[S.$addAll](context.describeMissingAncestor({expectedAncestorType: dart.wrapType(material_localizations.MaterialLocalizations)}));
          return t104;
        })()));
      }
      return true;
    }, T$.VoidTobool())()) dart.assertFailed(null, I[129], 74, 10, "() {\n    if (Localizations.of<MaterialLocalizations>(context, MaterialLocalizations) == null) {\n      throw FlutterError.fromParts(<DiagnosticsNode>[\n        ErrorSummary('No MaterialLocalizations found.'),\n        ErrorDescription(\n          '${context.widget.runtimeType} widgets require MaterialLocalizations '\n          'to be provided by a Localizations widget ancestor.',\n        ),\n        ErrorDescription(\n          'The material library uses Localizations to generate messages, '\n          'labels, and abbreviations.',\n        ),\n        ErrorHint(\n          'To introduce a MaterialLocalizations, either use a '\n          'MaterialApp at the root of your application to include them '\n          'automatically, or add a Localization widget with a '\n          'MaterialLocalizations delegate.',\n        ),\n        ...context.describeMissingAncestor(expectedAncestorType: MaterialLocalizations),\n      ]);\n    }\n    return true;\n  }()");
    return true;
  };
  debug$1.debugCheckHasScaffold = function debugCheckHasScaffold(context) {
    if (!dart.fn(() => {
      if (!scaffold$.Scaffold.is(context.widget) && context.findAncestorWidgetOfExactType(scaffold$.Scaffold) == null) {
        dart.throw(new assertions.FlutterError.fromParts((() => {
          let t105 = T$.JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("No Scaffold widget found."), new assertions.ErrorDescription.new(dart.str(context.widget[S.$runtimeType]) + " widgets require a Scaffold widget ancestor.")]);
          t105[S.$addAll](context.describeMissingAncestor({expectedAncestorType: dart.wrapType(scaffold$.Scaffold)}));
          t105.push(new assertions.ErrorHint.new("Typically, the Scaffold widget is introduced by the MaterialApp or " + "WidgetsApp widget at the top of your application widget tree."));
          return t105;
        })()));
      }
      return true;
    }, T$.VoidTobool())()) dart.assertFailed(null, I[129], 116, 10, "() {\n    if (context.widget is! Scaffold && context.findAncestorWidgetOfExactType<Scaffold>() == null) {\n      throw FlutterError.fromParts(<DiagnosticsNode>[\n        ErrorSummary('No Scaffold widget found.'),\n        ErrorDescription('${context.widget.runtimeType} widgets require a Scaffold widget ancestor.'),\n        ...context.describeMissingAncestor(expectedAncestorType: Scaffold),\n        ErrorHint(\n          'Typically, the Scaffold widget is introduced by the MaterialApp or '\n          'WidgetsApp widget at the top of your application widget tree.',\n        ),\n      ]);\n    }\n    return true;\n  }()");
    return true;
  };
  debug$1.debugCheckHasScaffoldMessenger = function debugCheckHasScaffoldMessenger(context) {
    if (!dart.fn(() => {
      if (context.findAncestorWidgetOfExactType(scaffold$.ScaffoldMessenger) == null) {
        dart.throw(new assertions.FlutterError.fromParts((() => {
          let t106 = T$.JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("No ScaffoldMessenger widget found."), new assertions.ErrorDescription.new(dart.str(context.widget[S.$runtimeType]) + " widgets require a ScaffoldMessenger widget ancestor.")]);
          t106[S.$addAll](context.describeMissingAncestor({expectedAncestorType: dart.wrapType(scaffold$.ScaffoldMessenger)}));
          t106.push(new assertions.ErrorHint.new("Typically, the ScaffoldMessenger widget is introduced by the MaterialApp " + "at the top of your application widget tree."));
          return t106;
        })()));
      }
      return true;
    }, T$.VoidTobool())()) dart.assertFailed(null, I[129], 149, 10, "() {\n    if (context.findAncestorWidgetOfExactType<ScaffoldMessenger>() == null) {\n      throw FlutterError.fromParts(<DiagnosticsNode>[\n        ErrorSummary('No ScaffoldMessenger widget found.'),\n        ErrorDescription('${context.widget.runtimeType} widgets require a ScaffoldMessenger widget ancestor.'),\n        ...context.describeMissingAncestor(expectedAncestorType: ScaffoldMessenger),\n        ErrorHint(\n          'Typically, the ScaffoldMessenger widget is introduced by the MaterialApp '\n          'at the top of your application widget tree.',\n        ),\n      ]);\n    }\n    return true;\n  }()");
    return true;
  };
  material_localizations.MaterialLocalizations = class MaterialLocalizations extends core.Object {
    get expandedIconTapHint() {
      return "Collapse";
    }
    get collapsedIconTapHint() {
      return "Expand";
    }
    static of(context) {
      if (!debug$1.debugCheckHasMaterialLocalizations(context)) dart.assertFailed(null, I[130], 657, 12, "debugCheckHasMaterialLocalizations(context)");
      return dart.nullCheck(localizations$.Localizations.of(material_localizations.MaterialLocalizations, context, dart.wrapType(material_localizations.MaterialLocalizations)));
    }
  };
  (material_localizations.MaterialLocalizations.new = function() {
    ;
  }).prototype = material_localizations.MaterialLocalizations.prototype;
  dart.addTypeTests(material_localizations.MaterialLocalizations);
  dart.addTypeCaches(material_localizations.MaterialLocalizations);
  dart.setStaticMethodSignature(material_localizations.MaterialLocalizations, () => ['of']);
  dart.setGetterSignature(material_localizations.MaterialLocalizations, () => ({
    __proto__: dart.getGetters(material_localizations.MaterialLocalizations.__proto__),
    expandedIconTapHint: core.String,
    collapsedIconTapHint: core.String
  }));
  dart.setLibraryUri(material_localizations.MaterialLocalizations, I[131]);
  material_localizations._MaterialLocalizationsDelegate = class _MaterialLocalizationsDelegate extends localizations$.LocalizationsDelegate$(material_localizations.MaterialLocalizations) {
    static ['_#new#tearOff']() {
      return new material_localizations._MaterialLocalizationsDelegate.new();
    }
    isSupported(locale) {
      return locale.languageCode === "en";
    }
    load(locale) {
      return material_localizations.DefaultMaterialLocalizations.load(locale);
    }
    shouldReload(old) {
      material_localizations._MaterialLocalizationsDelegate.as(old);
      return false;
    }
    toString() {
      return "DefaultMaterialLocalizations.delegate(en_US)";
    }
  };
  (material_localizations._MaterialLocalizationsDelegate.new = function() {
    material_localizations._MaterialLocalizationsDelegate.__proto__.new.call(this);
    ;
  }).prototype = material_localizations._MaterialLocalizationsDelegate.prototype;
  dart.addTypeTests(material_localizations._MaterialLocalizationsDelegate);
  dart.addTypeCaches(material_localizations._MaterialLocalizationsDelegate);
  dart.setMethodSignature(material_localizations._MaterialLocalizationsDelegate, () => ({
    __proto__: dart.getMethods(material_localizations._MaterialLocalizationsDelegate.__proto__),
    isSupported: dart.fnType(core.bool, [ui.Locale]),
    load: dart.fnType(async.Future$(material_localizations.MaterialLocalizations), [ui.Locale]),
    shouldReload: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(material_localizations._MaterialLocalizationsDelegate, I[131]);
  dart.defineExtensionMethods(material_localizations._MaterialLocalizationsDelegate, ['toString']);
  material_localizations.DefaultMaterialLocalizations = class DefaultMaterialLocalizations extends core.Object {
    static ['_#new#tearOff']() {
      return new material_localizations.DefaultMaterialLocalizations.new();
    }
    [S$2._getDaysInMonth](year, month) {
      if (month === 2) {
        let isLeapYear = year[S$2.$modulo](4) === 0 && year[S$2.$modulo](100) !== 0 || year[S$2.$modulo](400) === 0;
        if (isLeapYear) {
          return 29;
        }
        return 28;
      }
      let daysInMonth = C[1054] || CT.C1054;
      return daysInMonth[S.$_get](month - 1);
    }
    formatHour(timeOfDay, opts) {
      let alwaysUse24HourFormat = opts && 'alwaysUse24HourFormat' in opts ? opts.alwaysUse24HourFormat : false;
      let format = this.timeOfDayFormat({alwaysUse24HourFormat: alwaysUse24HourFormat});
      switch (format) {
        case C[53] || CT.C53:
          {
            return this.formatDecimal(timeOfDay.hourOfPeriod === 0 ? 12 : timeOfDay.hourOfPeriod);
          }
        case C[49] || CT.C49:
          {
            return this[S$2._formatTwoDigitZeroPad](timeOfDay.hour);
          }
        case C[54] || CT.C54:
        case C[51] || CT.C51:
        case C[52] || CT.C52:
        case C[50] || CT.C50:
          {
            dart.throw(new core.AssertionError.new(dart.str(this[S.$runtimeType]) + " does not support " + dart.str(format) + "."));
          }
      }
    }
    [S$2._formatTwoDigitZeroPad](number) {
      if (!(0 <= number && number < 100)) dart.assertFailed(null, I[130], 793, 12, "0 <= number && number < 100");
      if (number < 10) {
        return "0" + dart.str(number);
      }
      return dart.str(number);
    }
    formatMinute(timeOfDay) {
      let minute = timeOfDay.minute;
      return minute < 10 ? "0" + dart.str(minute) : minute[S.$toString]();
    }
    formatYear(date) {
      return date.year[S.$toString]();
    }
    formatCompactDate(date) {
      let month = this[S$2._formatTwoDigitZeroPad](date.month);
      let day = this[S$2._formatTwoDigitZeroPad](date.day);
      let year = date.year[S.$toString]()[S$2.$padLeft](4, "0");
      return month + "/" + day + "/" + year;
    }
    formatShortDate(date) {
      let month = material_localizations.DefaultMaterialLocalizations._shortMonths[S.$_get](date.month - 1);
      return month + " " + dart.str(date.day) + ", " + dart.str(date.year);
    }
    formatMediumDate(date) {
      let day = material_localizations.DefaultMaterialLocalizations._shortWeekdays[S.$_get](date.weekday - 1);
      let month = material_localizations.DefaultMaterialLocalizations._shortMonths[S.$_get](date.month - 1);
      return day + ", " + month + " " + dart.str(date.day);
    }
    formatFullDate(date) {
      let month = material_localizations.DefaultMaterialLocalizations._months[S.$_get](date.month - 1);
      return material_localizations.DefaultMaterialLocalizations._weekdays[S.$_get](date.weekday - 1) + ", " + month + " " + dart.str(date.day) + ", " + dart.str(date.year);
    }
    formatMonthYear(date) {
      let year = this.formatYear(date);
      let month = material_localizations.DefaultMaterialLocalizations._months[S.$_get](date.month - 1);
      return month + " " + year;
    }
    formatShortMonthDay(date) {
      let month = material_localizations.DefaultMaterialLocalizations._shortMonths[S.$_get](date.month - 1);
      return month + " " + dart.str(date.day);
    }
    parseCompactDate(inputString) {
      if (inputString == null) {
        return null;
      }
      let inputParts = inputString[S$2.$split]("/");
      if (inputParts[S.$length] !== 3) {
        return null;
      }
      let year = core.int.tryParse(inputParts[S.$_get](2), {radix: 10});
      if (year == null || dart.notNull(year) < 1) {
        return null;
      }
      let month = core.int.tryParse(inputParts[S.$_get](0), {radix: 10});
      if (month == null || dart.notNull(month) < 1 || dart.notNull(month) > 12) {
        return null;
      }
      let day = core.int.tryParse(inputParts[S.$_get](1), {radix: 10});
      if (day == null || dart.notNull(day) < 1 || dart.notNull(day) > this[S$2._getDaysInMonth](year, month)) {
        return null;
      }
      return new core.DateTime.new(year, month, day);
    }
    get narrowWeekdays() {
      return material_localizations.DefaultMaterialLocalizations._narrowWeekdays;
    }
    get firstDayOfWeekIndex() {
      return 0;
    }
    get dateSeparator() {
      return "/";
    }
    get dateHelpText() {
      return "mm/dd/yyyy";
    }
    get selectYearSemanticsLabel() {
      return "Select year";
    }
    get unspecifiedDate() {
      return "Date";
    }
    get unspecifiedDateRange() {
      return "Date Range";
    }
    get dateInputLabel() {
      return "Enter Date";
    }
    get dateRangeStartLabel() {
      return "Start Date";
    }
    get dateRangeEndLabel() {
      return "End Date";
    }
    dateRangeStartDateSemanticLabel(formattedDate) {
      return "Start date " + formattedDate;
    }
    dateRangeEndDateSemanticLabel(formattedDate) {
      return "End date " + formattedDate;
    }
    get invalidDateFormatLabel() {
      return "Invalid format.";
    }
    get invalidDateRangeLabel() {
      return "Invalid range.";
    }
    get dateOutOfRangeLabel() {
      return "Out of range.";
    }
    get saveButtonLabel() {
      return "SAVE";
    }
    get datePickerHelpText() {
      return "SELECT DATE";
    }
    get dateRangePickerHelpText() {
      return "SELECT RANGE";
    }
    get calendarModeButtonLabel() {
      return "Switch to calendar";
    }
    get inputDateModeButtonLabel() {
      return "Switch to input";
    }
    get timePickerDialHelpText() {
      return "SELECT TIME";
    }
    get timePickerInputHelpText() {
      return "ENTER TIME";
    }
    get timePickerHourLabel() {
      return "Hour";
    }
    get timePickerMinuteLabel() {
      return "Minute";
    }
    get invalidTimeLabel() {
      return "Enter a valid time";
    }
    get dialModeButtonLabel() {
      return "Switch to dial picker mode";
    }
    get inputTimeModeButtonLabel() {
      return "Switch to text input mode";
    }
    [S$2._formatDayPeriod](timeOfDay) {
      switch (timeOfDay.period) {
        case C[46] || CT.C46:
          {
            return this.anteMeridiemAbbreviation;
          }
        case C[47] || CT.C47:
          {
            return this.postMeridiemAbbreviation;
          }
      }
    }
    formatDecimal(number) {
      if (number > -1000 && number < 1000) {
        return number[S.$toString]();
      }
      let digits = number[S.$abs]()[S.$toString]();
      let result = new core.StringBuffer.new(number < 0 ? "-" : "");
      let maxDigitIndex = digits.length - 1;
      for (let i = 0; i <= maxDigitIndex; i = i + 1) {
        result.write(digits[S.$_get](i));
        if (i < maxDigitIndex && (maxDigitIndex - i)[S$2.$modulo](3) === 0) {
          result.write(",");
        }
      }
      return result.toString();
    }
    formatTimeOfDay(timeOfDay, opts) {
      let t107, t107$;
      let alwaysUse24HourFormat = opts && 'alwaysUse24HourFormat' in opts ? opts.alwaysUse24HourFormat : false;
      let buffer = new core.StringBuffer.new();
      t107 = buffer;
      (() => {
        t107.write(this.formatHour(timeOfDay, {alwaysUse24HourFormat: alwaysUse24HourFormat}));
        t107.write(":");
        t107.write(this.formatMinute(timeOfDay));
        return t107;
      })();
      if (alwaysUse24HourFormat) {
        return dart.str(buffer);
      }
      t107$ = buffer;
      (() => {
        t107$.write(" ");
        t107$.write(this[S$2._formatDayPeriod](timeOfDay));
        return t107$;
      })();
      return dart.str(buffer);
    }
    get openAppDrawerTooltip() {
      return "Open navigation menu";
    }
    get backButtonTooltip() {
      return "Back";
    }
    get closeButtonTooltip() {
      return "Close";
    }
    get deleteButtonTooltip() {
      return "Delete";
    }
    get moreButtonTooltip() {
      return "More";
    }
    get nextMonthTooltip() {
      return "Next month";
    }
    get previousMonthTooltip() {
      return "Previous month";
    }
    get nextPageTooltip() {
      return "Next page";
    }
    get previousPageTooltip() {
      return "Previous page";
    }
    get firstPageTooltip() {
      return "First page";
    }
    get lastPageTooltip() {
      return "Last page";
    }
    get showMenuTooltip() {
      return "Show menu";
    }
    get drawerLabel() {
      return "Navigation menu";
    }
    get menuBarMenuLabel() {
      return "Menu bar menu";
    }
    get popupMenuLabel() {
      return "Popup menu";
    }
    get dialogLabel() {
      return "Dialog";
    }
    get alertDialogLabel() {
      return "Alert";
    }
    get searchFieldLabel() {
      return "Search";
    }
    aboutListTileTitle(applicationName) {
      return "About " + applicationName;
    }
    get licensesPageTitle() {
      return "Licenses";
    }
    licensesPackageDetailText(licenseCount) {
      if (!(licenseCount >= 0)) dart.assertFailed(null, I[130], 1081, 12, "licenseCount >= 0");
      switch (licenseCount) {
        case 0:
          {
            return "No licenses.";
          }
        case 1:
          {
            return "1 license.";
          }
        default:
          {
            return dart.str(licenseCount) + " licenses.";
          }
      }
    }
    pageRowsInfoTitle(firstRow, lastRow, rowCount, rowCountIsApproximate) {
      return rowCountIsApproximate ? dart.str(firstRow) + "–" + dart.str(lastRow) + " of about " + dart.str(rowCount) : dart.str(firstRow) + "–" + dart.str(lastRow) + " of " + dart.str(rowCount);
    }
    get rowsPerPageTitle() {
      return "Rows per page:";
    }
    tabLabel(opts) {
      let tabIndex = opts && 'tabIndex' in opts ? opts.tabIndex : null;
      let tabCount = opts && 'tabCount' in opts ? opts.tabCount : null;
      if (!(tabIndex >= 1)) dart.assertFailed(null, I[130], 1104, 12, "tabIndex >= 1");
      if (!(tabCount >= 1)) dart.assertFailed(null, I[130], 1105, 12, "tabCount >= 1");
      return "Tab " + dart.str(tabIndex) + " of " + dart.str(tabCount);
    }
    selectedRowCountTitle(selectedRowCount) {
      switch (selectedRowCount) {
        case 0:
          {
            return "No items selected";
          }
        case 1:
          {
            return "1 item selected";
          }
        default:
          {
            return dart.str(selectedRowCount) + " items selected";
          }
      }
    }
    get cancelButtonLabel() {
      return "CANCEL";
    }
    get closeButtonLabel() {
      return "CLOSE";
    }
    get continueButtonLabel() {
      return "CONTINUE";
    }
    get copyButtonLabel() {
      return "Copy";
    }
    get cutButtonLabel() {
      return "Cut";
    }
    get okButtonLabel() {
      return "OK";
    }
    get pasteButtonLabel() {
      return "Paste";
    }
    get selectAllButtonLabel() {
      return "Select all";
    }
    get viewLicensesButtonLabel() {
      return "VIEW LICENSES";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get timePickerHourModeAnnouncement() {
      return "Select hours";
    }
    get timePickerMinuteModeAnnouncement() {
      return "Select minutes";
    }
    get modalBarrierDismissLabel() {
      return "Dismiss";
    }
    get scriptCategory() {
      return typography$.ScriptCategory.englishLike;
    }
    timeOfDayFormat(opts) {
      let alwaysUse24HourFormat = opts && 'alwaysUse24HourFormat' in opts ? opts.alwaysUse24HourFormat : false;
      return alwaysUse24HourFormat ? time$.TimeOfDayFormat.HH_colon_mm : time$.TimeOfDayFormat.h_colon_mm_space_a;
    }
    get signedInLabel() {
      return "Signed in";
    }
    get hideAccountsLabel() {
      return "Hide accounts";
    }
    get showAccountsLabel() {
      return "Show accounts";
    }
    get reorderItemUp() {
      return "Move up";
    }
    get reorderItemDown() {
      return "Move down";
    }
    get reorderItemLeft() {
      return "Move left";
    }
    get reorderItemRight() {
      return "Move right";
    }
    get reorderItemToEnd() {
      return "Move to the end";
    }
    get reorderItemToStart() {
      return "Move to the start";
    }
    get expandedIconTapHint() {
      return "Collapse";
    }
    get collapsedIconTapHint() {
      return "Expand";
    }
    get refreshIndicatorSemanticLabel() {
      return "Refresh";
    }
    static load(locale) {
      return new (T$.SynchronousFutureOfMaterialLocalizations()).new(C[1055] || CT.C1055);
    }
    remainingTextFieldCharacterCount(remaining) {
      switch (remaining) {
        case 0:
          {
            return "No characters remaining";
          }
        case 1:
          {
            return "1 character remaining";
          }
        default:
          {
            return dart.str(remaining) + " characters remaining";
          }
      }
    }
    get keyboardKeyAlt() {
      return "Alt";
    }
    get keyboardKeyAltGraph() {
      return "AltGr";
    }
    get keyboardKeyBackspace() {
      return "Backspace";
    }
    get keyboardKeyCapsLock() {
      return "Caps Lock";
    }
    get keyboardKeyChannelDown() {
      return "Channel Down";
    }
    get keyboardKeyChannelUp() {
      return "Channel Up";
    }
    get keyboardKeyControl() {
      return "Ctrl";
    }
    get keyboardKeyDelete() {
      return "Del";
    }
    get keyboardKeyEject() {
      return "Eject";
    }
    get keyboardKeyEnd() {
      return "End";
    }
    get keyboardKeyEscape() {
      return "Esc";
    }
    get keyboardKeyFn() {
      return "Fn";
    }
    get keyboardKeyHome() {
      return "Home";
    }
    get keyboardKeyInsert() {
      return "Insert";
    }
    get keyboardKeyMeta() {
      return "Meta";
    }
    get keyboardKeyMetaMacOs() {
      return "Command";
    }
    get keyboardKeyMetaWindows() {
      return "Win";
    }
    get keyboardKeyNumLock() {
      return "Num Lock";
    }
    get keyboardKeyNumpad1() {
      return "Num 1";
    }
    get keyboardKeyNumpad2() {
      return "Num 2";
    }
    get keyboardKeyNumpad3() {
      return "Num 3";
    }
    get keyboardKeyNumpad4() {
      return "Num 4";
    }
    get keyboardKeyNumpad5() {
      return "Num 5";
    }
    get keyboardKeyNumpad6() {
      return "Num 6";
    }
    get keyboardKeyNumpad7() {
      return "Num 7";
    }
    get keyboardKeyNumpad8() {
      return "Num 8";
    }
    get keyboardKeyNumpad9() {
      return "Num 9";
    }
    get keyboardKeyNumpad0() {
      return "Num 0";
    }
    get keyboardKeyNumpadAdd() {
      return "Num +";
    }
    get keyboardKeyNumpadComma() {
      return "Num ,";
    }
    get keyboardKeyNumpadDecimal() {
      return "Num .";
    }
    get keyboardKeyNumpadDivide() {
      return "Num /";
    }
    get keyboardKeyNumpadEnter() {
      return "Num Enter";
    }
    get keyboardKeyNumpadEqual() {
      return "Num =";
    }
    get keyboardKeyNumpadMultiply() {
      return "Num *";
    }
    get keyboardKeyNumpadParenLeft() {
      return "Num (";
    }
    get keyboardKeyNumpadParenRight() {
      return "Num )";
    }
    get keyboardKeyNumpadSubtract() {
      return "Num -";
    }
    get keyboardKeyPageDown() {
      return "PgDown";
    }
    get keyboardKeyPageUp() {
      return "PgUp";
    }
    get keyboardKeyPower() {
      return "Power";
    }
    get keyboardKeyPowerOff() {
      return "Power Off";
    }
    get keyboardKeyPrintScreen() {
      return "Print Screen";
    }
    get keyboardKeyScrollLock() {
      return "Scroll Lock";
    }
    get keyboardKeySelect() {
      return "Select";
    }
    get keyboardKeySpace() {
      return "Space";
    }
  };
  (material_localizations.DefaultMaterialLocalizations.new = function() {
    ;
  }).prototype = material_localizations.DefaultMaterialLocalizations.prototype;
  dart.addTypeTests(material_localizations.DefaultMaterialLocalizations);
  dart.addTypeCaches(material_localizations.DefaultMaterialLocalizations);
  material_localizations.DefaultMaterialLocalizations[dart.implements] = () => [material_localizations.MaterialLocalizations];
  dart.setMethodSignature(material_localizations.DefaultMaterialLocalizations, () => ({
    __proto__: dart.getMethods(material_localizations.DefaultMaterialLocalizations.__proto__),
    [S$2._getDaysInMonth]: dart.fnType(core.int, [core.int, core.int]),
    formatHour: dart.fnType(core.String, [time$.TimeOfDay], {alwaysUse24HourFormat: core.bool}, {}),
    [S$2._formatTwoDigitZeroPad]: dart.fnType(core.String, [core.int]),
    formatMinute: dart.fnType(core.String, [time$.TimeOfDay]),
    formatYear: dart.fnType(core.String, [core.DateTime]),
    formatCompactDate: dart.fnType(core.String, [core.DateTime]),
    formatShortDate: dart.fnType(core.String, [core.DateTime]),
    formatMediumDate: dart.fnType(core.String, [core.DateTime]),
    formatFullDate: dart.fnType(core.String, [core.DateTime]),
    formatMonthYear: dart.fnType(core.String, [core.DateTime]),
    formatShortMonthDay: dart.fnType(core.String, [core.DateTime]),
    parseCompactDate: dart.fnType(dart.nullable(core.DateTime), [dart.nullable(core.String)]),
    dateRangeStartDateSemanticLabel: dart.fnType(core.String, [core.String]),
    dateRangeEndDateSemanticLabel: dart.fnType(core.String, [core.String]),
    [S$2._formatDayPeriod]: dart.fnType(core.String, [time$.TimeOfDay]),
    formatDecimal: dart.fnType(core.String, [core.int]),
    formatTimeOfDay: dart.fnType(core.String, [time$.TimeOfDay], {alwaysUse24HourFormat: core.bool}, {}),
    aboutListTileTitle: dart.fnType(core.String, [core.String]),
    licensesPackageDetailText: dart.fnType(core.String, [core.int]),
    pageRowsInfoTitle: dart.fnType(core.String, [core.int, core.int, core.int, core.bool]),
    tabLabel: dart.fnType(core.String, [], {}, {tabCount: core.int, tabIndex: core.int}),
    selectedRowCountTitle: dart.fnType(core.String, [core.int]),
    timeOfDayFormat: dart.fnType(time$.TimeOfDayFormat, [], {alwaysUse24HourFormat: core.bool}, {}),
    remainingTextFieldCharacterCount: dart.fnType(core.String, [core.int])
  }));
  dart.setStaticMethodSignature(material_localizations.DefaultMaterialLocalizations, () => ['load']);
  dart.setGetterSignature(material_localizations.DefaultMaterialLocalizations, () => ({
    __proto__: dart.getGetters(material_localizations.DefaultMaterialLocalizations.__proto__),
    narrowWeekdays: core.List$(core.String),
    firstDayOfWeekIndex: core.int,
    dateSeparator: core.String,
    dateHelpText: core.String,
    selectYearSemanticsLabel: core.String,
    unspecifiedDate: core.String,
    unspecifiedDateRange: core.String,
    dateInputLabel: core.String,
    dateRangeStartLabel: core.String,
    dateRangeEndLabel: core.String,
    invalidDateFormatLabel: core.String,
    invalidDateRangeLabel: core.String,
    dateOutOfRangeLabel: core.String,
    saveButtonLabel: core.String,
    datePickerHelpText: core.String,
    dateRangePickerHelpText: core.String,
    calendarModeButtonLabel: core.String,
    inputDateModeButtonLabel: core.String,
    timePickerDialHelpText: core.String,
    timePickerInputHelpText: core.String,
    timePickerHourLabel: core.String,
    timePickerMinuteLabel: core.String,
    invalidTimeLabel: core.String,
    dialModeButtonLabel: core.String,
    inputTimeModeButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    backButtonTooltip: core.String,
    closeButtonTooltip: core.String,
    deleteButtonTooltip: core.String,
    moreButtonTooltip: core.String,
    nextMonthTooltip: core.String,
    previousMonthTooltip: core.String,
    nextPageTooltip: core.String,
    previousPageTooltip: core.String,
    firstPageTooltip: core.String,
    lastPageTooltip: core.String,
    showMenuTooltip: core.String,
    drawerLabel: core.String,
    menuBarMenuLabel: core.String,
    popupMenuLabel: core.String,
    dialogLabel: core.String,
    alertDialogLabel: core.String,
    searchFieldLabel: core.String,
    licensesPageTitle: core.String,
    rowsPerPageTitle: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    okButtonLabel: core.String,
    pasteButtonLabel: core.String,
    selectAllButtonLabel: core.String,
    viewLicensesButtonLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    postMeridiemAbbreviation: core.String,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    modalBarrierDismissLabel: core.String,
    scriptCategory: typography$.ScriptCategory,
    signedInLabel: core.String,
    hideAccountsLabel: core.String,
    showAccountsLabel: core.String,
    reorderItemUp: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    expandedIconTapHint: core.String,
    collapsedIconTapHint: core.String,
    refreshIndicatorSemanticLabel: core.String,
    keyboardKeyAlt: core.String,
    keyboardKeyAltGraph: core.String,
    keyboardKeyBackspace: core.String,
    keyboardKeyCapsLock: core.String,
    keyboardKeyChannelDown: core.String,
    keyboardKeyChannelUp: core.String,
    keyboardKeyControl: core.String,
    keyboardKeyDelete: core.String,
    keyboardKeyEject: core.String,
    keyboardKeyEnd: core.String,
    keyboardKeyEscape: core.String,
    keyboardKeyFn: core.String,
    keyboardKeyHome: core.String,
    keyboardKeyInsert: core.String,
    keyboardKeyMeta: core.String,
    keyboardKeyMetaMacOs: core.String,
    keyboardKeyMetaWindows: core.String,
    keyboardKeyNumLock: core.String,
    keyboardKeyNumpad1: core.String,
    keyboardKeyNumpad2: core.String,
    keyboardKeyNumpad3: core.String,
    keyboardKeyNumpad4: core.String,
    keyboardKeyNumpad5: core.String,
    keyboardKeyNumpad6: core.String,
    keyboardKeyNumpad7: core.String,
    keyboardKeyNumpad8: core.String,
    keyboardKeyNumpad9: core.String,
    keyboardKeyNumpad0: core.String,
    keyboardKeyNumpadAdd: core.String,
    keyboardKeyNumpadComma: core.String,
    keyboardKeyNumpadDecimal: core.String,
    keyboardKeyNumpadDivide: core.String,
    keyboardKeyNumpadEnter: core.String,
    keyboardKeyNumpadEqual: core.String,
    keyboardKeyNumpadMultiply: core.String,
    keyboardKeyNumpadParenLeft: core.String,
    keyboardKeyNumpadParenRight: core.String,
    keyboardKeyNumpadSubtract: core.String,
    keyboardKeyPageDown: core.String,
    keyboardKeyPageUp: core.String,
    keyboardKeyPower: core.String,
    keyboardKeyPowerOff: core.String,
    keyboardKeyPrintScreen: core.String,
    keyboardKeyScrollLock: core.String,
    keyboardKeySelect: core.String,
    keyboardKeySpace: core.String
  }));
  dart.setLibraryUri(material_localizations.DefaultMaterialLocalizations, I[131]);
  dart.setStaticFieldSignature(material_localizations.DefaultMaterialLocalizations, () => ['_shortWeekdays', '_weekdays', '_narrowWeekdays', '_shortMonths', '_months', 'delegate']);
  dart.defineLazy(material_localizations.DefaultMaterialLocalizations, {
    /*material_localizations.DefaultMaterialLocalizations._shortWeekdays*/get _shortWeekdays() {
      return C[1056] || CT.C1056;
    },
    /*material_localizations.DefaultMaterialLocalizations._weekdays*/get _weekdays() {
      return C[1057] || CT.C1057;
    },
    /*material_localizations.DefaultMaterialLocalizations._narrowWeekdays*/get _narrowWeekdays() {
      return C[1058] || CT.C1058;
    },
    /*material_localizations.DefaultMaterialLocalizations._shortMonths*/get _shortMonths() {
      return C[1059] || CT.C1059;
    },
    /*material_localizations.DefaultMaterialLocalizations._months*/get _months() {
      return C[1060] || CT.C1060;
    },
    /*material_localizations.DefaultMaterialLocalizations.delegate*/get delegate() {
      return C[1061] || CT.C1061;
    }
  }, false);
  theme$.Theme = class Theme extends framework.StatelessWidget {
    get data() {
      return this[S$2.data$25];
    }
    set data(value) {
      super.data = value;
    }
    get child() {
      return this[S$2.child$31];
    }
    set child(value) {
      super.child = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let data = opts && 'data' in opts ? opts.data : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new theme$.Theme.new({key: key, data: data, child: child, $creationLocationd_0dea112b090073317d4: C[1062] || CT.C1062});
    }
    static of(context) {
      let t107, t107$, t107$0, t107$1;
      let inheritedTheme = context.dependOnInheritedWidgetOfExactType(theme$._InheritedTheme);
      let localizations = localizations$.Localizations.of(material_localizations.MaterialLocalizations, context, dart.wrapType(material_localizations.MaterialLocalizations));
      let category = (t107$ = (t107 = localizations, t107 == null ? null : t107.scriptCategory), t107$ == null ? typography$.ScriptCategory.englishLike : t107$);
      let theme = (t107$1 = (t107$0 = inheritedTheme, t107$0 == null ? null : t107$0.theme.data), t107$1 == null ? theme$.Theme._kFallbackTheme : t107$1);
      return theme_data.ThemeData.localize(theme, theme.typography.geometryThemeFor(category));
    }
    [S$2._wrapsWidgetThemes](context, child) {
      let t107, t107$;
      let selectionStyle = default_selection_style.DefaultSelectionStyle.of(context);
      return new icon_theme.IconTheme.new({data: this.data.iconTheme, child: new default_selection_style.DefaultSelectionStyle.new({selectionColor: (t107 = this.data.textSelectionTheme.selectionColor, t107 == null ? selectionStyle.selectionColor : t107), cursorColor: (t107$ = this.data.textSelectionTheme.cursorColor, t107$ == null ? selectionStyle.cursorColor : t107$), child: child, $creationLocationd_0dea112b090073317d4: C[1063] || CT.C1063}), $creationLocationd_0dea112b090073317d4: C[1064] || CT.C1064});
    }
    build(context) {
      return new theme$._InheritedTheme.new({theme: this, child: new theme.CupertinoTheme.new({data: new theme_data.MaterialBasedCupertinoThemeData.new({materialTheme: this.data}), child: this[S$2._wrapsWidgetThemes](context, this.child), $creationLocationd_0dea112b090073317d4: C[1065] || CT.C1065}), $creationLocationd_0dea112b090073317d4: C[1066] || CT.C1066});
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfThemeData()).new("data", this.data, {showName: false}));
    }
  };
  (theme$.Theme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$2.data$25] = data;
    this[S$2.child$31] = child;
    if (!(child !== null)) dart.assertFailed(null, I[132], 45, 15, "child != null");
    if (!(data !== null)) dart.assertFailed(null, I[132], 46, 15, "data != null");
    theme$.Theme.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = theme$.Theme.prototype;
  dart.addTypeTests(theme$.Theme);
  dart.addTypeCaches(theme$.Theme);
  dart.setMethodSignature(theme$.Theme, () => ({
    __proto__: dart.getMethods(theme$.Theme.__proto__),
    [S$2._wrapsWidgetThemes]: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setStaticMethodSignature(theme$.Theme, () => ['of']);
  dart.setLibraryUri(theme$.Theme, I[133]);
  dart.setFieldSignature(theme$.Theme, () => ({
    __proto__: dart.getFields(theme$.Theme.__proto__),
    data: dart.finalFieldType(theme_data.ThemeData),
    child: dart.finalFieldType(framework.Widget)
  }));
  dart.setStaticFieldSignature(theme$.Theme, () => ['_kFallbackTheme']);
  dart.defineLazy(theme$.Theme, {
    /*theme$.Theme._kFallbackTheme*/get _kFallbackTheme() {
      return theme_data.ThemeData.fallback();
    }
  }, false);
  theme$._InheritedTheme = class _InheritedTheme extends inherited_theme.InheritedTheme {
    get theme() {
      return this[S$2.theme];
    }
    set theme(value) {
      super.theme = value;
    }
    static ['_#new#tearOff'](opts) {
      let theme = opts && 'theme' in opts ? opts.theme : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new theme$._InheritedTheme.new({theme: theme, child: child, $creationLocationd_0dea112b090073317d4: C[1067] || CT.C1067});
    }
    wrap(context, child) {
      return new theme$.Theme.new({data: this.theme.data, child: child, $creationLocationd_0dea112b090073317d4: C[1068] || CT.C1068});
    }
    updateShouldNotify(old) {
      theme$._InheritedTheme.as(old);
      return !this.theme.data._equals(old.theme.data);
    }
  };
  (theme$._InheritedTheme.new = function(opts) {
    let theme = opts && 'theme' in opts ? opts.theme : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$2.theme] = theme;
    if (!(theme !== null)) dart.assertFailed(null, I[132], 157, 15, "theme != null");
    theme$._InheritedTheme.__proto__.new.call(this, {child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = theme$._InheritedTheme.prototype;
  dart.addTypeTests(theme$._InheritedTheme);
  dart.addTypeCaches(theme$._InheritedTheme);
  dart.setMethodSignature(theme$._InheritedTheme, () => ({
    __proto__: dart.getMethods(theme$._InheritedTheme.__proto__),
    wrap: dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget]),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(theme$._InheritedTheme, I[133]);
  dart.setFieldSignature(theme$._InheritedTheme, () => ({
    __proto__: dart.getFields(theme$._InheritedTheme.__proto__),
    theme: dart.finalFieldType(theme$.Theme)
  }));
  theme$.ThemeDataTween = class ThemeDataTween extends tween.Tween$(theme_data.ThemeData) {
    static ['_#new#tearOff'](opts) {
      let begin = opts && 'begin' in opts ? opts.begin : null;
      let end = opts && 'end' in opts ? opts.end : null;
      return new theme$.ThemeDataTween.new({begin: begin, end: end});
    }
    lerp(t) {
      return theme_data.ThemeData.lerp(dart.nullCheck(this.begin), dart.nullCheck(this.end), t);
    }
  };
  (theme$.ThemeDataTween.new = function(opts) {
    let begin = opts && 'begin' in opts ? opts.begin : null;
    let end = opts && 'end' in opts ? opts.end : null;
    theme$.ThemeDataTween.__proto__.new.call(this, {begin: begin, end: end});
    ;
  }).prototype = theme$.ThemeDataTween.prototype;
  dart.addTypeTests(theme$.ThemeDataTween);
  dart.addTypeCaches(theme$.ThemeDataTween);
  dart.setLibraryUri(theme$.ThemeDataTween, I[133]);
  theme$.AnimatedTheme = class AnimatedTheme extends implicit_animations.ImplicitlyAnimatedWidget {
    get data() {
      return this[S$2.data$26];
    }
    set data(value) {
      super.data = value;
    }
    get child() {
      return this[S$2.child$32];
    }
    set child(value) {
      super.child = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let data = opts && 'data' in opts ? opts.data : null;
      let curve = opts && 'curve' in opts ? opts.curve : null;
      let duration = opts && 'duration' in opts ? opts.duration : null;
      let onEnd = opts && 'onEnd' in opts ? opts.onEnd : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new theme$.AnimatedTheme.new({key: key, data: data, curve: curve, duration: duration, onEnd: onEnd, child: child, $creationLocationd_0dea112b090073317d4: C[1069] || CT.C1069});
    }
    createState() {
      return new theme$._AnimatedThemeState.new();
    }
  };
  (theme$.AnimatedTheme.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let data = opts && 'data' in opts ? opts.data : null;
    let curve = opts && 'curve' in opts ? opts.curve : C[355] || CT.C355;
    let duration = opts && 'duration' in opts ? opts.duration : C[160] || CT.C160;
    let onEnd = opts && 'onEnd' in opts ? opts.onEnd : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$2.data$26] = data;
    this[S$2.child$32] = child;
    if (!(child !== null)) dart.assertFailed(null, I[132], 214, 15, "child != null");
    if (!(data !== null)) dart.assertFailed(null, I[132], 215, 15, "data != null");
    theme$.AnimatedTheme.__proto__.new.call(this, {key: key, curve: curve, duration: duration, onEnd: onEnd, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = theme$.AnimatedTheme.prototype;
  dart.addTypeTests(theme$.AnimatedTheme);
  dart.addTypeCaches(theme$.AnimatedTheme);
  dart.setMethodSignature(theme$.AnimatedTheme, () => ({
    __proto__: dart.getMethods(theme$.AnimatedTheme.__proto__),
    createState: dart.fnType(implicit_animations.AnimatedWidgetBaseState$(theme$.AnimatedTheme), [])
  }));
  dart.setLibraryUri(theme$.AnimatedTheme, I[133]);
  dart.setFieldSignature(theme$.AnimatedTheme, () => ({
    __proto__: dart.getFields(theme$.AnimatedTheme.__proto__),
    data: dart.finalFieldType(theme_data.ThemeData),
    child: dart.finalFieldType(framework.Widget)
  }));
  theme$._AnimatedThemeState = class _AnimatedThemeState extends implicit_animations.AnimatedWidgetBaseState$(theme$.AnimatedTheme) {
    forEachTween(visitor) {
      this[S$2._data$2] = theme$.ThemeDataTween.as(dart.nullCheck(visitor(this[S$2._data$2], this.widget.data, dart.fn(value => new theme$.ThemeDataTween.new({begin: theme_data.ThemeData.as(value)}), T$.dynamicToThemeDataTween()))));
    }
    build(context) {
      return new theme$.Theme.new({data: dart.nullCheck(this[S$2._data$2]).evaluate(this.animation), child: this.widget.child, $creationLocationd_0dea112b090073317d4: C[1070] || CT.C1070});
    }
    debugFillProperties(description) {
      super.debugFillProperties(description);
      description.add(new (T$.DiagnosticsPropertyOfThemeDataTween()).new("data", this[S$2._data$2], {showName: false, defaultValue: null}));
    }
    static ['_#new#tearOff']() {
      return new theme$._AnimatedThemeState.new();
    }
  };
  (theme$._AnimatedThemeState.new = function() {
    this[S$2._data$2] = null;
    theme$._AnimatedThemeState.__proto__.new.call(this);
    ;
  }).prototype = theme$._AnimatedThemeState.prototype;
  dart.addTypeTests(theme$._AnimatedThemeState);
  dart.addTypeCaches(theme$._AnimatedThemeState);
  dart.setMethodSignature(theme$._AnimatedThemeState, () => ({
    __proto__: dart.getMethods(theme$._AnimatedThemeState.__proto__),
    forEachTween: dart.fnType(dart.void, [dart.fnType(dart.nullable(tween.Tween), [dart.nullable(tween.Tween), dart.dynamic, dart.fnType(tween.Tween, [dart.dynamic])])]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(theme$._AnimatedThemeState, I[133]);
  dart.setFieldSignature(theme$._AnimatedThemeState, () => ({
    __proto__: dart.getFields(theme$._AnimatedThemeState.__proto__),
    [S$2._data$2]: dart.fieldType(dart.nullable(theme$.ThemeDataTween))
  }));
  dart.defineLazy(theme$, {
    /*theme$.kThemeAnimationDuration*/get kThemeAnimationDuration() {
      return C[160] || CT.C160;
    }
  }, false);
  const Object_Diagnosticable$36$35 = class Object_Diagnosticable extends core.Object {};
  (Object_Diagnosticable$36$35.new = function() {
  }).prototype = Object_Diagnosticable$36$35.prototype;
  dart.applyMixin(Object_Diagnosticable$36$35, diagnostics.Diagnosticable);
  app_bar_theme.AppBarTheme = class AppBarTheme extends Object_Diagnosticable$36$35 {
    get brightness() {
      return this[S$2.brightness$2];
    }
    set brightness(value) {
      super.brightness = value;
    }
    get backgroundColor() {
      return this[S$2.backgroundColor$24];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get foregroundColor() {
      return this[S$2.foregroundColor$2];
    }
    set foregroundColor(value) {
      super.foregroundColor = value;
    }
    get elevation() {
      return this[S$2.elevation$30];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get scrolledUnderElevation() {
      return this[S$2.scrolledUnderElevation];
    }
    set scrolledUnderElevation(value) {
      super.scrolledUnderElevation = value;
    }
    get shadowColor() {
      return this[S$2.shadowColor$6];
    }
    set shadowColor(value) {
      super.shadowColor = value;
    }
    get surfaceTintColor() {
      return this[S$2.surfaceTintColor$7];
    }
    set surfaceTintColor(value) {
      super.surfaceTintColor = value;
    }
    get shape() {
      return this[S$2.shape$24];
    }
    set shape(value) {
      super.shape = value;
    }
    get iconTheme() {
      return this[S$2.iconTheme$3];
    }
    set iconTheme(value) {
      super.iconTheme = value;
    }
    get actionsIconTheme() {
      return this[S$2.actionsIconTheme];
    }
    set actionsIconTheme(value) {
      super.actionsIconTheme = value;
    }
    get textTheme() {
      return this[S$2.textTheme$3];
    }
    set textTheme(value) {
      super.textTheme = value;
    }
    get centerTitle() {
      return this[S$2.centerTitle$1];
    }
    set centerTitle(value) {
      super.centerTitle = value;
    }
    get titleSpacing() {
      return this[S$2.titleSpacing];
    }
    set titleSpacing(value) {
      super.titleSpacing = value;
    }
    get toolbarHeight() {
      return this[S$2.toolbarHeight];
    }
    set toolbarHeight(value) {
      super.toolbarHeight = value;
    }
    get toolbarTextStyle() {
      return this[S$2.toolbarTextStyle];
    }
    set toolbarTextStyle(value) {
      super.toolbarTextStyle = value;
    }
    get titleTextStyle() {
      return this[S$2.titleTextStyle$1];
    }
    set titleTextStyle(value) {
      super.titleTextStyle = value;
    }
    get systemOverlayStyle() {
      return this[S$2.systemOverlayStyle];
    }
    set systemOverlayStyle(value) {
      super.systemOverlayStyle = value;
    }
    get backwardsCompatibility() {
      return this[S$2.backwardsCompatibility];
    }
    set backwardsCompatibility(value) {
      super.backwardsCompatibility = value;
    }
    static ['_#new#tearOff'](opts) {
      let brightness = opts && 'brightness' in opts ? opts.brightness : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let foregroundColor = opts && 'foregroundColor' in opts ? opts.foregroundColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let scrolledUnderElevation = opts && 'scrolledUnderElevation' in opts ? opts.scrolledUnderElevation : null;
      let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
      let surfaceTintColor = opts && 'surfaceTintColor' in opts ? opts.surfaceTintColor : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let iconTheme = opts && 'iconTheme' in opts ? opts.iconTheme : null;
      let actionsIconTheme = opts && 'actionsIconTheme' in opts ? opts.actionsIconTheme : null;
      let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
      let centerTitle = opts && 'centerTitle' in opts ? opts.centerTitle : null;
      let titleSpacing = opts && 'titleSpacing' in opts ? opts.titleSpacing : null;
      let toolbarHeight = opts && 'toolbarHeight' in opts ? opts.toolbarHeight : null;
      let toolbarTextStyle = opts && 'toolbarTextStyle' in opts ? opts.toolbarTextStyle : null;
      let titleTextStyle = opts && 'titleTextStyle' in opts ? opts.titleTextStyle : null;
      let systemOverlayStyle = opts && 'systemOverlayStyle' in opts ? opts.systemOverlayStyle : null;
      let backwardsCompatibility = opts && 'backwardsCompatibility' in opts ? opts.backwardsCompatibility : null;
      return new app_bar_theme.AppBarTheme.new({brightness: brightness, color: color, backgroundColor: backgroundColor, foregroundColor: foregroundColor, elevation: elevation, scrolledUnderElevation: scrolledUnderElevation, shadowColor: shadowColor, surfaceTintColor: surfaceTintColor, shape: shape, iconTheme: iconTheme, actionsIconTheme: actionsIconTheme, textTheme: textTheme, centerTitle: centerTitle, titleSpacing: titleSpacing, toolbarHeight: toolbarHeight, toolbarTextStyle: toolbarTextStyle, titleTextStyle: titleTextStyle, systemOverlayStyle: systemOverlayStyle, backwardsCompatibility: backwardsCompatibility});
    }
    get color() {
      return this.backgroundColor;
    }
    copyWith(opts) {
      let t107, t107$, t107$0, t107$1, t107$2, t107$3, t107$4, t107$5, t107$6, t107$7, t107$8, t107$9, t107$10, t107$11, t107$12, t107$13, t107$14, t107$15, t107$16;
      let actionsIconTheme = opts && 'actionsIconTheme' in opts ? opts.actionsIconTheme : null;
      let brightness = opts && 'brightness' in opts ? opts.brightness : null;
      let color = opts && 'color' in opts ? opts.color : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let foregroundColor = opts && 'foregroundColor' in opts ? opts.foregroundColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let scrolledUnderElevation = opts && 'scrolledUnderElevation' in opts ? opts.scrolledUnderElevation : null;
      let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
      let surfaceTintColor = opts && 'surfaceTintColor' in opts ? opts.surfaceTintColor : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let iconTheme = opts && 'iconTheme' in opts ? opts.iconTheme : null;
      let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
      let centerTitle = opts && 'centerTitle' in opts ? opts.centerTitle : null;
      let titleSpacing = opts && 'titleSpacing' in opts ? opts.titleSpacing : null;
      let toolbarHeight = opts && 'toolbarHeight' in opts ? opts.toolbarHeight : null;
      let toolbarTextStyle = opts && 'toolbarTextStyle' in opts ? opts.toolbarTextStyle : null;
      let titleTextStyle = opts && 'titleTextStyle' in opts ? opts.titleTextStyle : null;
      let systemOverlayStyle = opts && 'systemOverlayStyle' in opts ? opts.systemOverlayStyle : null;
      let backwardsCompatibility = opts && 'backwardsCompatibility' in opts ? opts.backwardsCompatibility : null;
      if (!(color == null || backgroundColor == null)) dart.assertFailed("The color and backgroundColor parameters mean the same thing. Only specify one.", I[134], 273, 7, "color == null || backgroundColor == null");
      return new app_bar_theme.AppBarTheme.new({brightness: (t107 = brightness, t107 == null ? this.brightness : t107), backgroundColor: (t107$0 = (t107$ = backgroundColor, t107$ == null ? color : t107$), t107$0 == null ? this.backgroundColor : t107$0), foregroundColor: (t107$1 = foregroundColor, t107$1 == null ? this.foregroundColor : t107$1), elevation: (t107$2 = elevation, t107$2 == null ? this.elevation : t107$2), scrolledUnderElevation: (t107$3 = scrolledUnderElevation, t107$3 == null ? this.scrolledUnderElevation : t107$3), shadowColor: (t107$4 = shadowColor, t107$4 == null ? this.shadowColor : t107$4), surfaceTintColor: (t107$5 = surfaceTintColor, t107$5 == null ? this.surfaceTintColor : t107$5), shape: (t107$6 = shape, t107$6 == null ? this.shape : t107$6), iconTheme: (t107$7 = iconTheme, t107$7 == null ? this.iconTheme : t107$7), actionsIconTheme: (t107$8 = actionsIconTheme, t107$8 == null ? this.actionsIconTheme : t107$8), textTheme: (t107$9 = textTheme, t107$9 == null ? this.textTheme : t107$9), centerTitle: (t107$10 = centerTitle, t107$10 == null ? this.centerTitle : t107$10), titleSpacing: (t107$11 = titleSpacing, t107$11 == null ? this.titleSpacing : t107$11), toolbarHeight: (t107$12 = toolbarHeight, t107$12 == null ? this.toolbarHeight : t107$12), toolbarTextStyle: (t107$13 = toolbarTextStyle, t107$13 == null ? this.toolbarTextStyle : t107$13), titleTextStyle: (t107$14 = titleTextStyle, t107$14 == null ? this.titleTextStyle : t107$14), systemOverlayStyle: (t107$15 = systemOverlayStyle, t107$15 == null ? this.systemOverlayStyle : t107$15), backwardsCompatibility: (t107$16 = backwardsCompatibility, t107$16 == null ? this.backwardsCompatibility : t107$16)});
    }
    static of(context) {
      return theme$.Theme.of(context).appBarTheme;
    }
    static lerp(a, b, t) {
      let t107, t107$, t107$0, t107$1, t107$2, t107$3, t107$4, t107$5, t107$6, t107$7, t107$8, t107$9, t107$10, t107$11, t107$12, t107$13, t107$14, t107$15, t107$16, t107$17, t107$18, t107$19, t107$20, t107$21, t107$22, t107$23, t107$24, t107$25, t107$26, t107$27, t107$28, t107$29, t107$30, t107$31, t107$32, t107$33;
      if (!(t !== null)) dart.assertFailed(null, I[134], 309, 12, "t != null");
      return new app_bar_theme.AppBarTheme.new({brightness: t < 0.5 ? (t107 = a, t107 == null ? null : t107.brightness) : (t107$ = b, t107$ == null ? null : t107$.brightness), backgroundColor: ui.Color.lerp((t107$0 = a, t107$0 == null ? null : t107$0.backgroundColor), (t107$1 = b, t107$1 == null ? null : t107$1.backgroundColor), t), foregroundColor: ui.Color.lerp((t107$2 = a, t107$2 == null ? null : t107$2.foregroundColor), (t107$3 = b, t107$3 == null ? null : t107$3.foregroundColor), t), elevation: ui.lerpDouble((t107$4 = a, t107$4 == null ? null : t107$4.elevation), (t107$5 = b, t107$5 == null ? null : t107$5.elevation), t), scrolledUnderElevation: ui.lerpDouble((t107$6 = a, t107$6 == null ? null : t107$6.scrolledUnderElevation), (t107$7 = b, t107$7 == null ? null : t107$7.scrolledUnderElevation), t), shadowColor: ui.Color.lerp((t107$8 = a, t107$8 == null ? null : t107$8.shadowColor), (t107$9 = b, t107$9 == null ? null : t107$9.shadowColor), t), surfaceTintColor: ui.Color.lerp((t107$10 = a, t107$10 == null ? null : t107$10.surfaceTintColor), (t107$11 = b, t107$11 == null ? null : t107$11.surfaceTintColor), t), shape: borders.ShapeBorder.lerp((t107$12 = a, t107$12 == null ? null : t107$12.shape), (t107$13 = b, t107$13 == null ? null : t107$13.shape), t), iconTheme: icon_theme_data.IconThemeData.lerp((t107$14 = a, t107$14 == null ? null : t107$14.iconTheme), (t107$15 = b, t107$15 == null ? null : t107$15.iconTheme), t), actionsIconTheme: icon_theme_data.IconThemeData.lerp((t107$16 = a, t107$16 == null ? null : t107$16.actionsIconTheme), (t107$17 = b, t107$17 == null ? null : t107$17.actionsIconTheme), t), textTheme: text_theme.TextTheme.lerp((t107$18 = a, t107$18 == null ? null : t107$18.textTheme), (t107$19 = b, t107$19 == null ? null : t107$19.textTheme), t), centerTitle: t < 0.5 ? (t107$20 = a, t107$20 == null ? null : t107$20.centerTitle) : (t107$21 = b, t107$21 == null ? null : t107$21.centerTitle), titleSpacing: ui.lerpDouble((t107$22 = a, t107$22 == null ? null : t107$22.titleSpacing), (t107$23 = b, t107$23 == null ? null : t107$23.titleSpacing), t), toolbarHeight: ui.lerpDouble((t107$24 = a, t107$24 == null ? null : t107$24.toolbarHeight), (t107$25 = b, t107$25 == null ? null : t107$25.toolbarHeight), t), toolbarTextStyle: text_style.TextStyle.lerp((t107$26 = a, t107$26 == null ? null : t107$26.toolbarTextStyle), (t107$27 = b, t107$27 == null ? null : t107$27.toolbarTextStyle), t), titleTextStyle: text_style.TextStyle.lerp((t107$28 = a, t107$28 == null ? null : t107$28.titleTextStyle), (t107$29 = b, t107$29 == null ? null : t107$29.titleTextStyle), t), systemOverlayStyle: t < 0.5 ? (t107$30 = a, t107$30 == null ? null : t107$30.systemOverlayStyle) : (t107$31 = b, t107$31 == null ? null : t107$31.systemOverlayStyle), backwardsCompatibility: t < 0.5 ? (t107$32 = a, t107$32 == null ? null : t107$32.backwardsCompatibility) : (t107$33 = b, t107$33 == null ? null : t107$33.backwardsCompatibility)});
    }
    get hashCode() {
      return core.Object.hash(this.brightness, this.backgroundColor, this.foregroundColor, this.elevation, this.scrolledUnderElevation, this.shadowColor, this.surfaceTintColor, this.shape, this.iconTheme, this.actionsIconTheme, this.textTheme, this.centerTitle, this.titleSpacing, this.toolbarHeight, this.toolbarTextStyle, this.titleTextStyle, this.systemOverlayStyle, this.backwardsCompatibility);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      if (!other[S.$runtimeType]._equals(this[S.$runtimeType])) {
        return false;
      }
      return app_bar_theme.AppBarTheme.is(other) && other.brightness == this.brightness && dart.equals(other.backgroundColor, this.backgroundColor) && dart.equals(other.foregroundColor, this.foregroundColor) && other.elevation == this.elevation && other.scrolledUnderElevation == this.scrolledUnderElevation && dart.equals(other.shadowColor, this.shadowColor) && dart.equals(other.surfaceTintColor, this.surfaceTintColor) && dart.equals(other.shape, this.shape) && dart.equals(other.iconTheme, this.iconTheme) && dart.equals(other.actionsIconTheme, this.actionsIconTheme) && dart.equals(other.textTheme, this.textTheme) && other.centerTitle == this.centerTitle && other.titleSpacing == this.titleSpacing && other.toolbarHeight == this.toolbarHeight && dart.equals(other.toolbarTextStyle, this.toolbarTextStyle) && dart.equals(other.titleTextStyle, this.titleTextStyle) && dart.equals(other.systemOverlayStyle, this.systemOverlayStyle) && other.backwardsCompatibility == this.backwardsCompatibility;
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(new (T$.DiagnosticsPropertyOfBrightness()).new("brightness", this.brightness, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("backgroundColor", this.backgroundColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("foregroundColor", this.foregroundColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfdouble()).new("elevation", this.elevation, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfdouble()).new("scrolledUnderElevation", this.scrolledUnderElevation, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("shadowColor", this.shadowColor, {defaultValue: null}));
      properties.add(new colors.ColorProperty.new("surfaceTintColor", this.surfaceTintColor, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfShapeBorder()).new("shape", this.shape, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfIconThemeData()).new("iconTheme", this.iconTheme, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfIconThemeData()).new("actionsIconTheme", this.actionsIconTheme, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfTextTheme()).new("textTheme", this.textTheme, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("centerTitle", this.centerTitle, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfdouble()).new("titleSpacing", this.titleSpacing, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfdouble()).new("toolbarHeight", this.toolbarHeight, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("toolbarTextStyle", this.toolbarTextStyle, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfTextStyle()).new("titleTextStyle", this.titleTextStyle, {defaultValue: null}));
      properties.add(new (T$.DiagnosticsPropertyOfbool()).new("backwardsCompatibility", this.backwardsCompatibility, {defaultValue: null}));
    }
  };
  (app_bar_theme.AppBarTheme.new = function(opts) {
    let t107;
    let brightness = opts && 'brightness' in opts ? opts.brightness : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let foregroundColor = opts && 'foregroundColor' in opts ? opts.foregroundColor : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let scrolledUnderElevation = opts && 'scrolledUnderElevation' in opts ? opts.scrolledUnderElevation : null;
    let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
    let surfaceTintColor = opts && 'surfaceTintColor' in opts ? opts.surfaceTintColor : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let iconTheme = opts && 'iconTheme' in opts ? opts.iconTheme : null;
    let actionsIconTheme = opts && 'actionsIconTheme' in opts ? opts.actionsIconTheme : null;
    let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
    let centerTitle = opts && 'centerTitle' in opts ? opts.centerTitle : null;
    let titleSpacing = opts && 'titleSpacing' in opts ? opts.titleSpacing : null;
    let toolbarHeight = opts && 'toolbarHeight' in opts ? opts.toolbarHeight : null;
    let toolbarTextStyle = opts && 'toolbarTextStyle' in opts ? opts.toolbarTextStyle : null;
    let titleTextStyle = opts && 'titleTextStyle' in opts ? opts.titleTextStyle : null;
    let systemOverlayStyle = opts && 'systemOverlayStyle' in opts ? opts.systemOverlayStyle : null;
    let backwardsCompatibility = opts && 'backwardsCompatibility' in opts ? opts.backwardsCompatibility : null;
    this[S$2.brightness$2] = brightness;
    this[S$2.foregroundColor$2] = foregroundColor;
    this[S$2.elevation$30] = elevation;
    this[S$2.scrolledUnderElevation] = scrolledUnderElevation;
    this[S$2.shadowColor$6] = shadowColor;
    this[S$2.surfaceTintColor$7] = surfaceTintColor;
    this[S$2.shape$24] = shape;
    this[S$2.iconTheme$3] = iconTheme;
    this[S$2.actionsIconTheme] = actionsIconTheme;
    this[S$2.textTheme$3] = textTheme;
    this[S$2.centerTitle$1] = centerTitle;
    this[S$2.titleSpacing] = titleSpacing;
    this[S$2.toolbarHeight] = toolbarHeight;
    this[S$2.toolbarTextStyle] = toolbarTextStyle;
    this[S$2.titleTextStyle$1] = titleTextStyle;
    this[S$2.systemOverlayStyle] = systemOverlayStyle;
    this[S$2.backwardsCompatibility] = backwardsCompatibility;
    if (!(color == null || backgroundColor == null)) dart.assertFailed("The color and backgroundColor parameters mean the same thing. Only specify one.", I[134], 63, 10, "color == null || backgroundColor == null");
    this[S$2.backgroundColor$24] = (t107 = backgroundColor, t107 == null ? color : t107);
    ;
  }).prototype = app_bar_theme.AppBarTheme.prototype;
  dart.addTypeTests(app_bar_theme.AppBarTheme);
  dart.addTypeCaches(app_bar_theme.AppBarTheme);
  dart.setMethodSignature(app_bar_theme.AppBarTheme, () => ({
    __proto__: dart.getMethods(app_bar_theme.AppBarTheme.__proto__),
    copyWith: dart.fnType(app_bar_theme.AppBarTheme, [], {actionsIconTheme: dart.nullable(icon_theme_data.IconThemeData), backgroundColor: dart.nullable(ui.Color), backwardsCompatibility: dart.nullable(core.bool), brightness: dart.nullable(ui.Brightness), centerTitle: dart.nullable(core.bool), color: dart.nullable(ui.Color), elevation: dart.nullable(core.double), foregroundColor: dart.nullable(ui.Color), iconTheme: dart.nullable(icon_theme_data.IconThemeData), scrolledUnderElevation: dart.nullable(core.double), shadowColor: dart.nullable(ui.Color), shape: dart.nullable(borders.ShapeBorder), surfaceTintColor: dart.nullable(ui.Color), systemOverlayStyle: dart.nullable(system_chrome.SystemUiOverlayStyle), textTheme: dart.nullable(text_theme.TextTheme), titleSpacing: dart.nullable(core.double), titleTextStyle: dart.nullable(text_style.TextStyle), toolbarHeight: dart.nullable(core.double), toolbarTextStyle: dart.nullable(text_style.TextStyle)}, {})
  }));
  dart.setStaticMethodSignature(app_bar_theme.AppBarTheme, () => ['of', 'lerp']);
  dart.setGetterSignature(app_bar_theme.AppBarTheme, () => ({
    __proto__: dart.getGetters(app_bar_theme.AppBarTheme.__proto__),
    color: dart.nullable(ui.Color)
  }));
  dart.setLibraryUri(app_bar_theme.AppBarTheme, I[135]);
  dart.setFieldSignature(app_bar_theme.AppBarTheme, () => ({
    __proto__: dart.getFields(app_bar_theme.AppBarTheme.__proto__),
    brightness: dart.finalFieldType(dart.nullable(ui.Brightness)),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    foregroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    scrolledUnderElevation: dart.finalFieldType(dart.nullable(core.double)),
    shadowColor: dart.finalFieldType(dart.nullable(ui.Color)),
    surfaceTintColor: dart.finalFieldType(dart.nullable(ui.Color)),
    shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    iconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData)),
    actionsIconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData)),
    textTheme: dart.finalFieldType(dart.nullable(text_theme.TextTheme)),
    centerTitle: dart.finalFieldType(dart.nullable(core.bool)),
    titleSpacing: dart.finalFieldType(dart.nullable(core.double)),
    toolbarHeight: dart.finalFieldType(dart.nullable(core.double)),
    toolbarTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    titleTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    systemOverlayStyle: dart.finalFieldType(dart.nullable(system_chrome.SystemUiOverlayStyle)),
    backwardsCompatibility: dart.finalFieldType(dart.nullable(core.bool))
  }));
  dart.defineExtensionMethods(app_bar_theme.AppBarTheme, ['_equals']);
  dart.defineExtensionAccessors(app_bar_theme.AppBarTheme, ['hashCode']);
  app_bar._ToolbarContainerLayout = class _ToolbarContainerLayout extends shifted_box.SingleChildLayoutDelegate {
    get toolbarHeight() {
      return this[S$2.toolbarHeight$1];
    }
    set toolbarHeight(value) {
      super.toolbarHeight = value;
    }
    static ['_#new#tearOff'](toolbarHeight) {
      return new app_bar._ToolbarContainerLayout.new(toolbarHeight);
    }
    getConstraintsForChild(constraints) {
      return constraints.tighten({height: this.toolbarHeight});
    }
    getSize(constraints) {
      return new ui.Size.new(constraints.maxWidth, this.toolbarHeight);
    }
    getPositionForChild(size, childSize) {
      return new ui.Offset.new(0.0, size.height - childSize.height);
    }
    shouldRelayout(oldDelegate) {
      app_bar._ToolbarContainerLayout.as(oldDelegate);
      return this.toolbarHeight !== oldDelegate.toolbarHeight;
    }
  };
  (app_bar._ToolbarContainerLayout.new = function(toolbarHeight) {
    this[S$2.toolbarHeight$1] = toolbarHeight;
    app_bar._ToolbarContainerLayout.__proto__.new.call(this);
    ;
  }).prototype = app_bar._ToolbarContainerLayout.prototype;
  dart.addTypeTests(app_bar._ToolbarContainerLayout);
  dart.addTypeCaches(app_bar._ToolbarContainerLayout);
  dart.setMethodSignature(app_bar._ToolbarContainerLayout, () => ({
    __proto__: dart.getMethods(app_bar._ToolbarContainerLayout.__proto__),
    shouldRelayout: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(app_bar._ToolbarContainerLayout, I[136]);
  dart.setFieldSignature(app_bar._ToolbarContainerLayout, () => ({
    __proto__: dart.getFields(app_bar._ToolbarContainerLayout.__proto__),
    toolbarHeight: dart.finalFieldType(core.double)
  }));
  app_bar._PreferredAppBarSize = class _PreferredAppBarSize extends ui.Size {
    static ['_#new#tearOff'](toolbarHeight, bottomHeight) {
      return new app_bar._PreferredAppBarSize.new(toolbarHeight, bottomHeight);
    }
  };
  (app_bar._PreferredAppBarSize.new = function(toolbarHeight, bottomHeight) {
    let t107, t107$;
    this.toolbarHeight = toolbarHeight;
    this.bottomHeight = bottomHeight;
    app_bar._PreferredAppBarSize.__proto__.fromHeight.call(this, dart.notNull((t107 = toolbarHeight, t107 == null ? 56 : t107)) + dart.notNull((t107$ = bottomHeight, t107$ == null ? 0 : t107$)));
    ;
  }).prototype = app_bar._PreferredAppBarSize.prototype;
  dart.addTypeTests(app_bar._PreferredAppBarSize);
  dart.addTypeCaches(app_bar._PreferredAppBarSize);
  dart.setLibraryUri(app_bar._PreferredAppBarSize, I[136]);
  dart.setFieldSignature(app_bar._PreferredAppBarSize, () => ({
    __proto__: dart.getFields(app_bar._PreferredAppBarSize.__proto__),
    toolbarHeight: dart.finalFieldType(dart.nullable(core.double)),
    bottomHeight: dart.finalFieldType(dart.nullable(core.double))
  }));
  app_bar.AppBar = class AppBar extends framework.StatefulWidget {
    get leading() {
      return this[S$2.leading$4];
    }
    set leading(value) {
      super.leading = value;
    }
    get automaticallyImplyLeading() {
      return this[S$2.automaticallyImplyLeading];
    }
    set automaticallyImplyLeading(value) {
      super.automaticallyImplyLeading = value;
    }
    get title() {
      return this[S$2.title$3];
    }
    set title(value) {
      super.title = value;
    }
    get actions() {
      return this[S$2.actions$1];
    }
    set actions(value) {
      super.actions = value;
    }
    get flexibleSpace() {
      return this[S$2.flexibleSpace];
    }
    set flexibleSpace(value) {
      super.flexibleSpace = value;
    }
    get bottom() {
      return this[S$2.bottom];
    }
    set bottom(value) {
      super.bottom = value;
    }
    get elevation() {
      return this[S$2.elevation$31];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get scrolledUnderElevation() {
      return this[S$2.scrolledUnderElevation$1];
    }
    set scrolledUnderElevation(value) {
      super.scrolledUnderElevation = value;
    }
    get notificationPredicate() {
      return this[S$2.notificationPredicate];
    }
    set notificationPredicate(value) {
      super.notificationPredicate = value;
    }
    get shadowColor() {
      return this[S$2.shadowColor$7];
    }
    set shadowColor(value) {
      super.shadowColor = value;
    }
    get surfaceTintColor() {
      return this[S$2.surfaceTintColor$8];
    }
    set surfaceTintColor(value) {
      super.surfaceTintColor = value;
    }
    get shape() {
      return this[S$2.shape$25];
    }
    set shape(value) {
      super.shape = value;
    }
    get backgroundColor() {
      return this[S$2.backgroundColor$25];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get foregroundColor() {
      return this[S$2.foregroundColor$3];
    }
    set foregroundColor(value) {
      super.foregroundColor = value;
    }
    get brightness() {
      return this[S$2.brightness$3];
    }
    set brightness(value) {
      super.brightness = value;
    }
    get iconTheme() {
      return this[S$2.iconTheme$4];
    }
    set iconTheme(value) {
      super.iconTheme = value;
    }
    get actionsIconTheme() {
      return this[S$2.actionsIconTheme$1];
    }
    set actionsIconTheme(value) {
      super.actionsIconTheme = value;
    }
    get textTheme() {
      return this[S$2.textTheme$4];
    }
    set textTheme(value) {
      super.textTheme = value;
    }
    get primary() {
      return this[S$2.primary$2];
    }
    set primary(value) {
      super.primary = value;
    }
    get centerTitle() {
      return this[S$2.centerTitle$2];
    }
    set centerTitle(value) {
      super.centerTitle = value;
    }
    get excludeHeaderSemantics() {
      return this[S$2.excludeHeaderSemantics];
    }
    set excludeHeaderSemantics(value) {
      super.excludeHeaderSemantics = value;
    }
    get titleSpacing() {
      return this[S$2.titleSpacing$1];
    }
    set titleSpacing(value) {
      super.titleSpacing = value;
    }
    get toolbarOpacity() {
      return this[S$2.toolbarOpacity$1];
    }
    set toolbarOpacity(value) {
      super.toolbarOpacity = value;
    }
    get bottomOpacity() {
      return this[S$2.bottomOpacity];
    }
    set bottomOpacity(value) {
      super.bottomOpacity = value;
    }
    get preferredSize() {
      return this[S$2.preferredSize];
    }
    set preferredSize(value) {
      super.preferredSize = value;
    }
    get toolbarHeight() {
      return this[S$2.toolbarHeight$2];
    }
    set toolbarHeight(value) {
      super.toolbarHeight = value;
    }
    get leadingWidth() {
      return this[S$2.leadingWidth];
    }
    set leadingWidth(value) {
      super.leadingWidth = value;
    }
    get backwardsCompatibility() {
      return this[S$2.backwardsCompatibility$1];
    }
    set backwardsCompatibility(value) {
      super.backwardsCompatibility = value;
    }
    get toolbarTextStyle() {
      return this[S$2.toolbarTextStyle$1];
    }
    set toolbarTextStyle(value) {
      super.toolbarTextStyle = value;
    }
    get titleTextStyle() {
      return this[S$2.titleTextStyle$2];
    }
    set titleTextStyle(value) {
      super.titleTextStyle = value;
    }
    get systemOverlayStyle() {
      return this[S$2.systemOverlayStyle$1];
    }
    set systemOverlayStyle(value) {
      super.systemOverlayStyle = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let leading = opts && 'leading' in opts ? opts.leading : null;
      let automaticallyImplyLeading = opts && 'automaticallyImplyLeading' in opts ? opts.automaticallyImplyLeading : true;
      let title = opts && 'title' in opts ? opts.title : null;
      let actions = opts && 'actions' in opts ? opts.actions : null;
      let flexibleSpace = opts && 'flexibleSpace' in opts ? opts.flexibleSpace : null;
      let bottom = opts && 'bottom' in opts ? opts.bottom : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let scrolledUnderElevation = opts && 'scrolledUnderElevation' in opts ? opts.scrolledUnderElevation : null;
      let notificationPredicate = opts && 'notificationPredicate' in opts ? opts.notificationPredicate : C[1071] || CT.C1071;
      let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
      let surfaceTintColor = opts && 'surfaceTintColor' in opts ? opts.surfaceTintColor : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let foregroundColor = opts && 'foregroundColor' in opts ? opts.foregroundColor : null;
      let brightness = opts && 'brightness' in opts ? opts.brightness : null;
      let iconTheme = opts && 'iconTheme' in opts ? opts.iconTheme : null;
      let actionsIconTheme = opts && 'actionsIconTheme' in opts ? opts.actionsIconTheme : null;
      let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
      let primary = opts && 'primary' in opts ? opts.primary : true;
      let centerTitle = opts && 'centerTitle' in opts ? opts.centerTitle : null;
      let excludeHeaderSemantics = opts && 'excludeHeaderSemantics' in opts ? opts.excludeHeaderSemantics : false;
      let titleSpacing = opts && 'titleSpacing' in opts ? opts.titleSpacing : null;
      let toolbarOpacity = opts && 'toolbarOpacity' in opts ? opts.toolbarOpacity : 1;
      let bottomOpacity = opts && 'bottomOpacity' in opts ? opts.bottomOpacity : 1;
      let toolbarHeight = opts && 'toolbarHeight' in opts ? opts.toolbarHeight : null;
      let leadingWidth = opts && 'leadingWidth' in opts ? opts.leadingWidth : null;
      let backwardsCompatibility = opts && 'backwardsCompatibility' in opts ? opts.backwardsCompatibility : null;
      let toolbarTextStyle = opts && 'toolbarTextStyle' in opts ? opts.toolbarTextStyle : null;
      let titleTextStyle = opts && 'titleTextStyle' in opts ? opts.titleTextStyle : null;
      let systemOverlayStyle = opts && 'systemOverlayStyle' in opts ? opts.systemOverlayStyle : null;
      return new app_bar.AppBar.new({key: key, leading: leading, automaticallyImplyLeading: automaticallyImplyLeading, title: title, actions: actions, flexibleSpace: flexibleSpace, bottom: bottom, elevation: elevation, scrolledUnderElevation: scrolledUnderElevation, notificationPredicate: notificationPredicate, shadowColor: shadowColor, surfaceTintColor: surfaceTintColor, shape: shape, backgroundColor: backgroundColor, foregroundColor: foregroundColor, brightness: brightness, iconTheme: iconTheme, actionsIconTheme: actionsIconTheme, textTheme: textTheme, primary: primary, centerTitle: centerTitle, excludeHeaderSemantics: excludeHeaderSemantics, titleSpacing: titleSpacing, toolbarOpacity: toolbarOpacity, bottomOpacity: bottomOpacity, toolbarHeight: toolbarHeight, leadingWidth: leadingWidth, backwardsCompatibility: backwardsCompatibility, toolbarTextStyle: toolbarTextStyle, titleTextStyle: titleTextStyle, systemOverlayStyle: systemOverlayStyle, $creationLocationd_0dea112b090073317d4: C[1072] || CT.C1072});
    }
    static preferredHeightFor(context, preferredSize) {
      let t107, t107$;
      if (app_bar._PreferredAppBarSize.is(preferredSize) && preferredSize.toolbarHeight == null) {
        return dart.notNull((t107 = app_bar_theme.AppBarTheme.of(context).toolbarHeight, t107 == null ? 56 : t107)) + dart.notNull((t107$ = preferredSize.bottomHeight, t107$ == null ? 0 : t107$));
      }
      return preferredSize.height;
    }
    [S$2._getEffectiveCenterTitle$1](theme) {
      let t107, t107$;
      const platformCenter = () => {
        if (!(theme.platform !== null)) dart.assertFailed(null, I[137], 778, 14, "theme.platform != null");
        switch (theme.platform) {
          case C[29] || CT.C29:
          case C[30] || CT.C30:
          case C[31] || CT.C31:
          case C[32] || CT.C32:
            {
              return false;
            }
          case C[33] || CT.C33:
          case C[34] || CT.C34:
            {
              return this.actions == null || dart.nullCheck(this.actions)[S.$length] < 2;
            }
        }
      };
      dart.fn(platformCenter, T$.VoidTobool());
      t107$ = (t107 = this.centerTitle, t107 == null ? theme.appBarTheme.centerTitle : t107);
      return t107$ == null ? platformCenter() : t107$;
    }
    createState() {
      return new app_bar._AppBarState.new();
    }
  };
  (app_bar.AppBar.new = function(opts) {
    let t107;
    let key = opts && 'key' in opts ? opts.key : null;
    let leading = opts && 'leading' in opts ? opts.leading : null;
    let automaticallyImplyLeading = opts && 'automaticallyImplyLeading' in opts ? opts.automaticallyImplyLeading : true;
    let title = opts && 'title' in opts ? opts.title : null;
    let actions = opts && 'actions' in opts ? opts.actions : null;
    let flexibleSpace = opts && 'flexibleSpace' in opts ? opts.flexibleSpace : null;
    let bottom = opts && 'bottom' in opts ? opts.bottom : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let scrolledUnderElevation = opts && 'scrolledUnderElevation' in opts ? opts.scrolledUnderElevation : null;
    let notificationPredicate = opts && 'notificationPredicate' in opts ? opts.notificationPredicate : C[1071] || CT.C1071;
    let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
    let surfaceTintColor = opts && 'surfaceTintColor' in opts ? opts.surfaceTintColor : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let foregroundColor = opts && 'foregroundColor' in opts ? opts.foregroundColor : null;
    let brightness = opts && 'brightness' in opts ? opts.brightness : null;
    let iconTheme = opts && 'iconTheme' in opts ? opts.iconTheme : null;
    let actionsIconTheme = opts && 'actionsIconTheme' in opts ? opts.actionsIconTheme : null;
    let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
    let primary = opts && 'primary' in opts ? opts.primary : true;
    let centerTitle = opts && 'centerTitle' in opts ? opts.centerTitle : null;
    let excludeHeaderSemantics = opts && 'excludeHeaderSemantics' in opts ? opts.excludeHeaderSemantics : false;
    let titleSpacing = opts && 'titleSpacing' in opts ? opts.titleSpacing : null;
    let toolbarOpacity = opts && 'toolbarOpacity' in opts ? opts.toolbarOpacity : 1;
    let bottomOpacity = opts && 'bottomOpacity' in opts ? opts.bottomOpacity : 1;
    let toolbarHeight = opts && 'toolbarHeight' in opts ? opts.toolbarHeight : null;
    let leadingWidth = opts && 'leadingWidth' in opts ? opts.leadingWidth : null;
    let backwardsCompatibility = opts && 'backwardsCompatibility' in opts ? opts.backwardsCompatibility : null;
    let toolbarTextStyle = opts && 'toolbarTextStyle' in opts ? opts.toolbarTextStyle : null;
    let titleTextStyle = opts && 'titleTextStyle' in opts ? opts.titleTextStyle : null;
    let systemOverlayStyle = opts && 'systemOverlayStyle' in opts ? opts.systemOverlayStyle : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$2.leading$4] = leading;
    this[S$2.automaticallyImplyLeading] = automaticallyImplyLeading;
    this[S$2.title$3] = title;
    this[S$2.actions$1] = actions;
    this[S$2.flexibleSpace] = flexibleSpace;
    this[S$2.bottom] = bottom;
    this[S$2.elevation$31] = elevation;
    this[S$2.scrolledUnderElevation$1] = scrolledUnderElevation;
    this[S$2.notificationPredicate] = notificationPredicate;
    this[S$2.shadowColor$7] = shadowColor;
    this[S$2.surfaceTintColor$8] = surfaceTintColor;
    this[S$2.shape$25] = shape;
    this[S$2.backgroundColor$25] = backgroundColor;
    this[S$2.foregroundColor$3] = foregroundColor;
    this[S$2.brightness$3] = brightness;
    this[S$2.iconTheme$4] = iconTheme;
    this[S$2.actionsIconTheme$1] = actionsIconTheme;
    this[S$2.textTheme$4] = textTheme;
    this[S$2.primary$2] = primary;
    this[S$2.centerTitle$2] = centerTitle;
    this[S$2.excludeHeaderSemantics] = excludeHeaderSemantics;
    this[S$2.titleSpacing$1] = titleSpacing;
    this[S$2.toolbarOpacity$1] = toolbarOpacity;
    this[S$2.bottomOpacity] = bottomOpacity;
    this[S$2.toolbarHeight$2] = toolbarHeight;
    this[S$2.leadingWidth] = leadingWidth;
    this[S$2.backwardsCompatibility$1] = backwardsCompatibility;
    this[S$2.toolbarTextStyle$1] = toolbarTextStyle;
    this[S$2.titleTextStyle$2] = titleTextStyle;
    this[S$2.systemOverlayStyle$1] = systemOverlayStyle;
    if (!(automaticallyImplyLeading !== null)) dart.assertFailed(null, I[137], 210, 15, "automaticallyImplyLeading != null");
    if (!(elevation == null || dart.notNull(elevation) >= 0.0)) dart.assertFailed(null, I[137], 211, 15, "elevation == null || elevation >= 0.0");
    if (!(notificationPredicate !== null)) dart.assertFailed(null, I[137], 212, 15, "notificationPredicate != null");
    if (!(primary !== null)) dart.assertFailed(null, I[137], 213, 15, "primary != null");
    if (!(toolbarOpacity !== null)) dart.assertFailed(null, I[137], 214, 15, "toolbarOpacity != null");
    if (!(bottomOpacity !== null)) dart.assertFailed(null, I[137], 215, 15, "bottomOpacity != null");
    this[S$2.preferredSize] = new app_bar._PreferredAppBarSize.new(toolbarHeight, (t107 = bottom, t107 == null ? null : t107.preferredSize.height));
    app_bar.AppBar.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = app_bar.AppBar.prototype;
  dart.addTypeTests(app_bar.AppBar);
  dart.addTypeCaches(app_bar.AppBar);
  app_bar.AppBar[dart.implements] = () => [preferred_size.PreferredSizeWidget];
  dart.setMethodSignature(app_bar.AppBar, () => ({
    __proto__: dart.getMethods(app_bar.AppBar.__proto__),
    [S$2._getEffectiveCenterTitle$1]: dart.fnType(core.bool, [theme_data.ThemeData]),
    createState: dart.fnType(framework.State$(app_bar.AppBar), [])
  }));
  dart.setStaticMethodSignature(app_bar.AppBar, () => ['preferredHeightFor']);
  dart.setLibraryUri(app_bar.AppBar, I[136]);
  dart.setFieldSignature(app_bar.AppBar, () => ({
    __proto__: dart.getFields(app_bar.AppBar.__proto__),
    leading: dart.finalFieldType(dart.nullable(framework.Widget)),
    automaticallyImplyLeading: dart.finalFieldType(core.bool),
    title: dart.finalFieldType(dart.nullable(framework.Widget)),
    actions: dart.finalFieldType(dart.nullable(core.List$(framework.Widget))),
    flexibleSpace: dart.finalFieldType(dart.nullable(framework.Widget)),
    bottom: dart.finalFieldType(dart.nullable(preferred_size.PreferredSizeWidget)),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    scrolledUnderElevation: dart.finalFieldType(dart.nullable(core.double)),
    notificationPredicate: dart.finalFieldType(dart.fnType(core.bool, [scroll_notification.ScrollNotification])),
    shadowColor: dart.finalFieldType(dart.nullable(ui.Color)),
    surfaceTintColor: dart.finalFieldType(dart.nullable(ui.Color)),
    shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    foregroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    brightness: dart.finalFieldType(dart.nullable(ui.Brightness)),
    iconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData)),
    actionsIconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData)),
    textTheme: dart.finalFieldType(dart.nullable(text_theme.TextTheme)),
    primary: dart.finalFieldType(core.bool),
    centerTitle: dart.finalFieldType(dart.nullable(core.bool)),
    excludeHeaderSemantics: dart.finalFieldType(core.bool),
    titleSpacing: dart.finalFieldType(dart.nullable(core.double)),
    toolbarOpacity: dart.finalFieldType(core.double),
    bottomOpacity: dart.finalFieldType(core.double),
    preferredSize: dart.finalFieldType(ui.Size),
    toolbarHeight: dart.finalFieldType(dart.nullable(core.double)),
    leadingWidth: dart.finalFieldType(dart.nullable(core.double)),
    backwardsCompatibility: dart.finalFieldType(dart.nullable(core.bool)),
    toolbarTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    titleTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    systemOverlayStyle: dart.finalFieldType(dart.nullable(system_chrome.SystemUiOverlayStyle))
  }));
  app_bar._AppBarState = class _AppBarState extends framework.State$(app_bar.AppBar) {
    didChangeDependencies() {
      super.didChangeDependencies();
      if (this[S$2._scrollNotificationObserver] != null) {
        dart.nullCheck(this[S$2._scrollNotificationObserver]).removeListener(dart.bind(this, S$2._handleScrollNotification$1));
      }
      this[S$2._scrollNotificationObserver] = scroll_notification_observer.ScrollNotificationObserver.of(this.context);
      if (this[S$2._scrollNotificationObserver] != null) {
        dart.nullCheck(this[S$2._scrollNotificationObserver]).addListener(dart.bind(this, S$2._handleScrollNotification$1));
      }
    }
    dispose() {
      if (this[S$2._scrollNotificationObserver] != null) {
        dart.nullCheck(this[S$2._scrollNotificationObserver]).removeListener(dart.bind(this, S$2._handleScrollNotification$1));
        this[S$2._scrollNotificationObserver] = null;
      }
      super.dispose();
    }
    [S$2._handleDrawerButton]() {
      scaffold$.Scaffold.of(this.context).openDrawer();
    }
    [S$2._handleDrawerButtonEnd]() {
      scaffold$.Scaffold.of(this.context).openEndDrawer();
    }
    [S$2._handleScrollNotification$1](notification) {
      let t108, t107;
      if (scroll_notification.ScrollUpdateNotification.is(notification) && (t107 = this.widget, t108 = notification, t107.notificationPredicate(t108))) {
        let oldScrolledUnder = this[S$2._scrolledUnder];
        let metrics = notification.metrics;
        switch (metrics.axisDirection) {
          case C[1073] || CT.C1073:
            {
              this[S$2._scrolledUnder] = metrics.extentAfter > 0;
              break;
            }
          case C[1074] || CT.C1074:
            {
              this[S$2._scrolledUnder] = metrics.extentBefore > 0;
              break;
            }
          case C[1075] || CT.C1075:
          case C[1076] || CT.C1076:
            {
              this[S$2._scrolledUnder] = false;
              break;
            }
        }
        if (this[S$2._scrolledUnder] !== oldScrolledUnder) {
          this.setState(dart.fn(() => {
          }, T$.VoidTovoid()));
        }
      }
    }
    [S$2._resolveColor](states, widgetColor, themeColor, defaultColor) {
      let t107, t107$;
      t107$ = (t107 = material_state.MaterialStateProperty.resolveAs(T$.ColorN(), widgetColor, states), t107 == null ? material_state.MaterialStateProperty.resolveAs(T$.ColorN(), themeColor, states) : t107);
      return t107$ == null ? material_state.MaterialStateProperty.resolveAs(ui.Color, defaultColor, states) : t107$;
    }
    [S$2._systemOverlayStyleForBrightness](brightness, backgroundColor = null) {
      let style = brightness === ui.Brightness.dark ? system_chrome.SystemUiOverlayStyle.light : system_chrome.SystemUiOverlayStyle.dark;
      return style.copyWith({statusBarColor: backgroundColor});
    }
    build(context) {
      let t108, t108$, t108$0, t108$1, t108$2, t108$3, t108$4, t108$5, t108$6, t108$7, t108$8, t108$9, t108$10, t108$11, t108$12, t108$13, t108$14, t108$15, t108$16, t108$17, t108$18, t108$19, t108$20, t108$21, t108$22, t108$23, t108$24, t108$25, t109, t108$26, t108$27, t108$28, t109$, t108$29, t108$30, t108$31, t109$0, t108$32, t108$33, t109$1, t108$34, t108$35, t108$36, t109$2, t108$37, t108$38, t108$39, t108$40, t108$41, t108$42, t108$43, t108$44, t108$45, t108$46, t108$47, t108$48, t109$3, t109$4, t109$5, t109$6, t109$7, t109$8, t109$9, t109$10, t109$11, t109$12, t109$13;
      if (!(!this.widget.primary || debug.debugCheckHasMediaQuery(context))) dart.assertFailed(null, I[137], 875, 12, "!widget.primary || debugCheckHasMediaQuery(context)");
      if (!debug$1.debugCheckHasMaterialLocalizations(context)) dart.assertFailed(null, I[137], 876, 12, "debugCheckHasMaterialLocalizations(context)");
      let theme = theme$.Theme.of(context);
      let appBarTheme = app_bar_theme.AppBarTheme.of(context);
      let defaults = theme.useMaterial3 ? new app_bar._AppBarDefaultsM3.new(context) : new app_bar._AppBarDefaultsM2.new(context);
      let scaffold = scaffold$.Scaffold.maybeOf(context);
      let parentRoute = routes.ModalRoute.of(T$.ObjectN(), context);
      let settings = context.dependOnInheritedWidgetOfExactType(flexible_space_bar.FlexibleSpaceBarSettings);
      let states = (() => {
        let t107 = T$.LinkedHashSetOfMaterialState().new();
        if (dart.test((t108$ = (t108 = settings, t108 == null ? null : t108.isScrolledUnder), t108$ == null ? this[S$2._scrolledUnder] : t108$))) t107.add(material_state.MaterialState.scrolledUnder);
        return t107;
      })();
      let hasDrawer = (t108$1 = (t108$0 = scaffold, t108$0 == null ? null : t108$0.hasDrawer), t108$1 == null ? false : t108$1);
      let hasEndDrawer = (t108$3 = (t108$2 = scaffold, t108$2 == null ? null : t108$2.hasEndDrawer), t108$3 == null ? false : t108$3);
      let canPop = (t108$5 = (t108$4 = parentRoute, t108$4 == null ? null : t108$4.canPop), t108$5 == null ? false : t108$5);
      let useCloseButton = pages.PageRoute.is(parentRoute) && parentRoute.fullscreenDialog;
      let toolbarHeight = (t108$7 = (t108$6 = this.widget.toolbarHeight, t108$6 == null ? appBarTheme.toolbarHeight : t108$6), t108$7 == null ? 56 : t108$7);
      let backwardsCompatibility = (t108$9 = (t108$8 = this.widget.backwardsCompatibility, t108$8 == null ? appBarTheme.backwardsCompatibility : t108$8), t108$9 == null ? false : t108$9);
      let backgroundColor = backwardsCompatibility ? (t108$11 = (t108$10 = this.widget.backgroundColor, t108$10 == null ? appBarTheme.backgroundColor : t108$10), t108$11 == null ? theme.primaryColor : t108$11) : this[S$2._resolveColor](states, this.widget.backgroundColor, appBarTheme.backgroundColor, dart.nullCheck(defaults.backgroundColor));
      let foregroundColor = (t108$13 = (t108$12 = this.widget.foregroundColor, t108$12 == null ? appBarTheme.foregroundColor : t108$12), t108$13 == null ? dart.nullCheck(defaults.foregroundColor) : t108$13);
      let elevation = (t108$15 = (t108$14 = this.widget.elevation, t108$14 == null ? appBarTheme.elevation : t108$14), t108$15 == null ? dart.nullCheck(defaults.elevation) : t108$15);
      let effectiveElevation = states.contains(material_state.MaterialState.scrolledUnder) ? (t108$18 = (t108$17 = (t108$16 = this.widget.scrolledUnderElevation, t108$16 == null ? appBarTheme.scrolledUnderElevation : t108$16), t108$17 == null ? defaults.scrolledUnderElevation : t108$17), t108$18 == null ? elevation : t108$18) : elevation;
      let overallIconTheme = backwardsCompatibility ? (t108$20 = (t108$19 = this.widget.iconTheme, t108$19 == null ? appBarTheme.iconTheme : t108$19), t108$20 == null ? theme.primaryIconTheme : t108$20) : (t108$22 = (t108$21 = this.widget.iconTheme, t108$21 == null ? appBarTheme.iconTheme : t108$21), t108$22 == null ? dart.nullCheck(defaults.iconTheme).copyWith({color: foregroundColor}) : t108$22);
      let actionsIconTheme = (t108$27 = (t108$26 = (t108$25 = (t108$24 = (t108$23 = this.widget.actionsIconTheme, t108$23 == null ? appBarTheme.actionsIconTheme : t108$23), t108$24 == null ? this.widget.iconTheme : t108$24), t108$25 == null ? appBarTheme.iconTheme : t108$25), t108$26 == null ? (t109 = defaults.actionsIconTheme, t109 == null ? null : t109.copyWith({color: foregroundColor})) : t108$26), t108$27 == null ? overallIconTheme : t108$27);
      let toolbarTextStyle = backwardsCompatibility ? (t108$30 = (t108$29 = (t108$28 = this.widget.textTheme, t108$28 == null ? null : t108$28.bodyText2), t108$29 == null ? (t109$ = appBarTheme.textTheme, t109$ == null ? null : t109$.bodyText2) : t108$29), t108$30 == null ? theme.primaryTextTheme.bodyText2 : t108$30) : (t108$32 = (t108$31 = this.widget.toolbarTextStyle, t108$31 == null ? appBarTheme.toolbarTextStyle : t108$31), t108$32 == null ? (t109$0 = defaults.toolbarTextStyle, t109$0 == null ? null : t109$0.copyWith({color: foregroundColor})) : t108$32);
      let titleTextStyle = backwardsCompatibility ? (t108$35 = (t108$34 = (t108$33 = this.widget.textTheme, t108$33 == null ? null : t108$33.headline6), t108$34 == null ? (t109$1 = appBarTheme.textTheme, t109$1 == null ? null : t109$1.headline6) : t108$34), t108$35 == null ? theme.primaryTextTheme.headline6 : t108$35) : (t108$37 = (t108$36 = this.widget.titleTextStyle, t108$36 == null ? appBarTheme.titleTextStyle : t108$36), t108$37 == null ? (t109$2 = defaults.titleTextStyle, t109$2 == null ? null : t109$2.copyWith({color: foregroundColor})) : t108$37);
      if (this.widget.toolbarOpacity !== 1.0) {
        let opacity = (C[1077] || CT.C1077).transform(this.widget.toolbarOpacity);
        if ((t108$38 = titleTextStyle, t108$38 == null ? null : t108$38.color) != null) {
          titleTextStyle = dart.nullCheck(titleTextStyle).copyWith({color: dart.nullCheck(titleTextStyle.color).withOpacity(opacity)});
        }
        if ((t108$39 = toolbarTextStyle, t108$39 == null ? null : t108$39.color) != null) {
          toolbarTextStyle = dart.nullCheck(toolbarTextStyle).copyWith({color: dart.nullCheck(toolbarTextStyle.color).withOpacity(opacity)});
        }
        overallIconTheme = overallIconTheme.copyWith({opacity: opacity * dart.notNull((t108$40 = overallIconTheme.opacity, t108$40 == null ? 1.0 : t108$40))});
        actionsIconTheme = actionsIconTheme.copyWith({opacity: opacity * dart.notNull((t108$41 = actionsIconTheme.opacity, t108$41 == null ? 1.0 : t108$41))});
      }
      let leading = this.widget.leading;
      if (leading == null && this.widget.automaticallyImplyLeading) {
        if (hasDrawer) {
          leading = new icon_button.IconButton.new({icon: C[1078] || CT.C1078, iconSize: (t108$42 = overallIconTheme.size, t108$42 == null ? 24.0 : t108$42), onPressed: dart.bind(this, S$2._handleDrawerButton), tooltip: material_localizations.MaterialLocalizations.of(context).openAppDrawerTooltip, $creationLocationd_0dea112b090073317d4: C[1081] || CT.C1081});
        } else if (!hasEndDrawer && canPop || dart.test((t108$44 = (t108$43 = parentRoute, t108$43 == null ? null : t108$43.impliesAppBarDismissal), t108$44 == null ? false : t108$44))) {
          leading = useCloseButton ? C[1082] || CT.C1082 : C[1084] || CT.C1084;
        }
      }
      if (leading != null) {
        leading = new basic.ConstrainedBox.new({constraints: new box$.BoxConstraints.tightFor({width: (t108$45 = this.widget.leadingWidth, t108$45 == null ? 56 : t108$45)}), child: leading, $creationLocationd_0dea112b090073317d4: C[1086] || CT.C1086});
      }
      let title = this.widget.title;
      if (title != null) {
        let namesRoute = null;
        switch (theme.platform) {
          case C[29] || CT.C29:
          case C[30] || CT.C30:
          case C[31] || CT.C31:
          case C[32] || CT.C32:
            {
              namesRoute = true;
              break;
            }
          case C[33] || CT.C33:
          case C[34] || CT.C34:
            {
              break;
            }
        }
        title = new app_bar._AppBarTitleBox.new({child: title, $creationLocationd_0dea112b090073317d4: C[1087] || CT.C1087});
        if (!this.widget.excludeHeaderSemantics) {
          title = new basic.Semantics.new({namesRoute: namesRoute, header: true, child: title, $creationLocationd_0dea112b090073317d4: C[1088] || CT.C1088});
        }
        title = new text$.DefaultTextStyle.new({style: dart.nullCheck(titleTextStyle), softWrap: false, overflow: text_painter.TextOverflow.ellipsis, child: title, $creationLocationd_0dea112b090073317d4: C[1089] || CT.C1089});
        let mediaQueryData = media_query.MediaQuery.of(context);
        title = new media_query.MediaQuery.new({data: mediaQueryData.copyWith({textScaleFactor: math.min(core.double, mediaQueryData.textScaleFactor, 1.34)}), child: title, $creationLocationd_0dea112b090073317d4: C[1090] || CT.C1090});
      }
      let actions = null;
      if (this.widget.actions != null && dart.nullCheck(this.widget.actions)[S.$isNotEmpty]) {
        actions = new basic.Row.new({mainAxisSize: flex.MainAxisSize.min, crossAxisAlignment: flex.CrossAxisAlignment.stretch, children: dart.nullCheck(this.widget.actions), $creationLocationd_0dea112b090073317d4: C[1091] || CT.C1091});
      } else if (hasEndDrawer) {
        actions = new icon_button.IconButton.new({icon: C[1092] || CT.C1092, iconSize: (t108$46 = overallIconTheme.size, t108$46 == null ? 24.0 : t108$46), onPressed: dart.bind(this, S$2._handleDrawerButtonEnd), tooltip: material_localizations.MaterialLocalizations.of(context).openAppDrawerTooltip, $creationLocationd_0dea112b090073317d4: C[1094] || CT.C1094});
      }
      if (actions != null) {
        actions = icon_theme.IconTheme.merge({data: actionsIconTheme, child: actions});
      }
      let toolbar = new navigation_toolbar.NavigationToolbar.new({leading: leading, middle: title, trailing: actions, centerMiddle: this.widget[S$2._getEffectiveCenterTitle$1](theme), middleSpacing: (t108$48 = (t108$47 = this.widget.titleSpacing, t108$47 == null ? appBarTheme.titleSpacing : t108$47), t108$48 == null ? 16 : t108$48), $creationLocationd_0dea112b090073317d4: C[1095] || CT.C1095});
      let appBar = new basic.ClipRect.new({child: new basic.CustomSingleChildLayout.new({delegate: new app_bar._ToolbarContainerLayout.new(toolbarHeight), child: icon_theme.IconTheme.merge({data: overallIconTheme, child: new text$.DefaultTextStyle.new({style: dart.nullCheck(toolbarTextStyle), child: toolbar, $creationLocationd_0dea112b090073317d4: C[1096] || CT.C1096})}), $creationLocationd_0dea112b090073317d4: C[1097] || CT.C1097}), $creationLocationd_0dea112b090073317d4: C[1098] || CT.C1098});
      if (this.widget.bottom != null) {
        appBar = new basic.Column.new({mainAxisAlignment: flex.MainAxisAlignment.spaceBetween, children: (() => {
            let t108 = T$.JSArrayOfWidget().of([new basic.Flexible.new({child: new basic.ConstrainedBox.new({constraints: new box$.BoxConstraints.new({maxHeight: toolbarHeight}), child: appBar, $creationLocationd_0dea112b090073317d4: C[1099] || CT.C1099}), $creationLocationd_0dea112b090073317d4: C[1100] || CT.C1100})]);
            if (this.widget.bottomOpacity === 1.0)
              t108.push(dart.nullCheck(this.widget.bottom));
            else
              t108.push(new basic.Opacity.new({opacity: (C[1077] || CT.C1077).transform(this.widget.bottomOpacity), child: this.widget.bottom, $creationLocationd_0dea112b090073317d4: C[1101] || CT.C1101}));
            return t108;
          })(), $creationLocationd_0dea112b090073317d4: C[1102] || CT.C1102});
      }
      if (this.widget.primary) {
        appBar = new safe_area.SafeArea.new({bottom: false, child: appBar, $creationLocationd_0dea112b090073317d4: C[1103] || CT.C1103});
      }
      appBar = new basic.Align.new({alignment: alignment.Alignment.topCenter, child: appBar, $creationLocationd_0dea112b090073317d4: C[1104] || CT.C1104});
      if (this.widget.flexibleSpace != null) {
        appBar = new basic.Stack.new({fit: stack.StackFit.passthrough, children: T$.JSArrayOfWidget().of([new basic.Semantics.new({sortKey: C[1105] || CT.C1105, explicitChildNodes: true, child: this.widget.flexibleSpace, $creationLocationd_0dea112b090073317d4: C[1106] || CT.C1106}), new basic.Semantics.new({sortKey: C[1107] || CT.C1107, explicitChildNodes: true, child: new material.Material.new({type: material.MaterialType.transparency, child: appBar, $creationLocationd_0dea112b090073317d4: C[1108] || CT.C1108}), $creationLocationd_0dea112b090073317d4: C[1109] || CT.C1109})]), $creationLocationd_0dea112b090073317d4: C[1110] || CT.C1110});
      }
      let overlayStyle = backwardsCompatibility ? this[S$2._systemOverlayStyleForBrightness]((t109$4 = (t109$3 = this.widget.brightness, t109$3 == null ? appBarTheme.brightness : t109$3), t109$4 == null ? theme_data.ThemeData.estimateBrightnessForColor(backgroundColor) : t109$4)) : (t109$7 = (t109$6 = (t109$5 = this.widget.systemOverlayStyle, t109$5 == null ? appBarTheme.systemOverlayStyle : t109$5), t109$6 == null ? defaults.systemOverlayStyle : t109$6), t109$7 == null ? this[S$2._systemOverlayStyleForBrightness](theme_data.ThemeData.estimateBrightnessForColor(backgroundColor), theme.useMaterial3 ? C[1042] || CT.C1042 : null) : t109$7);
      return new basic.Semantics.new({container: true, child: new (T$.AnnotatedRegionOfSystemUiOverlayStyle()).new({value: overlayStyle, child: new material.Material.new({color: backgroundColor, elevation: effectiveElevation, shadowColor: (t109$9 = (t109$8 = this.widget.shadowColor, t109$8 == null ? appBarTheme.shadowColor : t109$8), t109$9 == null ? defaults.shadowColor : t109$9), surfaceTintColor: (t109$11 = (t109$10 = this.widget.surfaceTintColor, t109$10 == null ? appBarTheme.surfaceTintColor : t109$10), t109$11 == null ? defaults.surfaceTintColor : t109$11), shape: (t109$13 = (t109$12 = this.widget.shape, t109$12 == null ? appBarTheme.shape : t109$12), t109$13 == null ? defaults.shape : t109$13), child: new basic.Semantics.new({explicitChildNodes: true, child: appBar, $creationLocationd_0dea112b090073317d4: C[1111] || CT.C1111}), $creationLocationd_0dea112b090073317d4: C[1112] || CT.C1112}), $creationLocationd_0dea112b090073317d4: C[1113] || CT.C1113}), $creationLocationd_0dea112b090073317d4: C[1114] || CT.C1114});
    }
    static ['_#new#tearOff']() {
      return new app_bar._AppBarState.new();
    }
  };
  (app_bar._AppBarState.new = function() {
    this[S$2._scrollNotificationObserver] = null;
    this[S$2._scrolledUnder] = false;
    app_bar._AppBarState.__proto__.new.call(this);
    ;
  }).prototype = app_bar._AppBarState.prototype;
  dart.addTypeTests(app_bar._AppBarState);
  dart.addTypeCaches(app_bar._AppBarState);
  dart.setMethodSignature(app_bar._AppBarState, () => ({
    __proto__: dart.getMethods(app_bar._AppBarState.__proto__),
    [S$2._handleDrawerButton]: dart.fnType(dart.void, []),
    [S$2._handleDrawerButtonEnd]: dart.fnType(dart.void, []),
    [S$2._handleScrollNotification$1]: dart.fnType(dart.void, [scroll_notification.ScrollNotification]),
    [S$2._resolveColor]: dart.fnType(ui.Color, [core.Set$(material_state.MaterialState), dart.nullable(ui.Color), dart.nullable(ui.Color), ui.Color]),
    [S$2._systemOverlayStyleForBrightness]: dart.fnType(system_chrome.SystemUiOverlayStyle, [ui.Brightness], [dart.nullable(ui.Color)]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(app_bar._AppBarState, I[136]);
  dart.setFieldSignature(app_bar._AppBarState, () => ({
    __proto__: dart.getFields(app_bar._AppBarState.__proto__),
    [S$2._scrollNotificationObserver]: dart.fieldType(dart.nullable(scroll_notification_observer.ScrollNotificationObserverState)),
    [S$2._scrolledUnder]: dart.fieldType(core.bool)
  }));
  app_bar._SliverAppBarDelegate = class _SliverAppBarDelegate extends sliver_persistent_header.SliverPersistentHeaderDelegate {
    get vsync() {
      return this[S$2.vsync$1];
    }
    set vsync(value) {
      super.vsync = value;
    }
    get snapConfiguration() {
      return this[S$2.snapConfiguration];
    }
    set snapConfiguration(value) {
      super.snapConfiguration = value;
    }
    get stretchConfiguration() {
      return this[S$2.stretchConfiguration];
    }
    set stretchConfiguration(value) {
      super.stretchConfiguration = value;
    }
    get showOnScreenConfiguration() {
      return this[S$2.showOnScreenConfiguration];
    }
    set showOnScreenConfiguration(value) {
      super.showOnScreenConfiguration = value;
    }
    static ['_#new#tearOff'](opts) {
      let leading = opts && 'leading' in opts ? opts.leading : null;
      let automaticallyImplyLeading = opts && 'automaticallyImplyLeading' in opts ? opts.automaticallyImplyLeading : null;
      let title = opts && 'title' in opts ? opts.title : null;
      let actions = opts && 'actions' in opts ? opts.actions : null;
      let flexibleSpace = opts && 'flexibleSpace' in opts ? opts.flexibleSpace : null;
      let bottom = opts && 'bottom' in opts ? opts.bottom : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let scrolledUnderElevation = opts && 'scrolledUnderElevation' in opts ? opts.scrolledUnderElevation : null;
      let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
      let surfaceTintColor = opts && 'surfaceTintColor' in opts ? opts.surfaceTintColor : null;
      let forceElevated = opts && 'forceElevated' in opts ? opts.forceElevated : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let foregroundColor = opts && 'foregroundColor' in opts ? opts.foregroundColor : null;
      let brightness = opts && 'brightness' in opts ? opts.brightness : null;
      let iconTheme = opts && 'iconTheme' in opts ? opts.iconTheme : null;
      let actionsIconTheme = opts && 'actionsIconTheme' in opts ? opts.actionsIconTheme : null;
      let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
      let primary = opts && 'primary' in opts ? opts.primary : null;
      let centerTitle = opts && 'centerTitle' in opts ? opts.centerTitle : null;
      let excludeHeaderSemantics = opts && 'excludeHeaderSemantics' in opts ? opts.excludeHeaderSemantics : null;
      let titleSpacing = opts && 'titleSpacing' in opts ? opts.titleSpacing : null;
      let expandedHeight = opts && 'expandedHeight' in opts ? opts.expandedHeight : null;
      let collapsedHeight = opts && 'collapsedHeight' in opts ? opts.collapsedHeight : null;
      let topPadding = opts && 'topPadding' in opts ? opts.topPadding : null;
      let floating = opts && 'floating' in opts ? opts.floating : null;
      let pinned = opts && 'pinned' in opts ? opts.pinned : null;
      let vsync = opts && 'vsync' in opts ? opts.vsync : null;
      let snapConfiguration = opts && 'snapConfiguration' in opts ? opts.snapConfiguration : null;
      let stretchConfiguration = opts && 'stretchConfiguration' in opts ? opts.stretchConfiguration : null;
      let showOnScreenConfiguration = opts && 'showOnScreenConfiguration' in opts ? opts.showOnScreenConfiguration : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let toolbarHeight = opts && 'toolbarHeight' in opts ? opts.toolbarHeight : null;
      let leadingWidth = opts && 'leadingWidth' in opts ? opts.leadingWidth : null;
      let backwardsCompatibility = opts && 'backwardsCompatibility' in opts ? opts.backwardsCompatibility : null;
      let toolbarTextStyle = opts && 'toolbarTextStyle' in opts ? opts.toolbarTextStyle : null;
      let titleTextStyle = opts && 'titleTextStyle' in opts ? opts.titleTextStyle : null;
      let systemOverlayStyle = opts && 'systemOverlayStyle' in opts ? opts.systemOverlayStyle : null;
      return new app_bar._SliverAppBarDelegate.new({leading: leading, automaticallyImplyLeading: automaticallyImplyLeading, title: title, actions: actions, flexibleSpace: flexibleSpace, bottom: bottom, elevation: elevation, scrolledUnderElevation: scrolledUnderElevation, shadowColor: shadowColor, surfaceTintColor: surfaceTintColor, forceElevated: forceElevated, backgroundColor: backgroundColor, foregroundColor: foregroundColor, brightness: brightness, iconTheme: iconTheme, actionsIconTheme: actionsIconTheme, textTheme: textTheme, primary: primary, centerTitle: centerTitle, excludeHeaderSemantics: excludeHeaderSemantics, titleSpacing: titleSpacing, expandedHeight: expandedHeight, collapsedHeight: collapsedHeight, topPadding: topPadding, floating: floating, pinned: pinned, vsync: vsync, snapConfiguration: snapConfiguration, stretchConfiguration: stretchConfiguration, showOnScreenConfiguration: showOnScreenConfiguration, shape: shape, toolbarHeight: toolbarHeight, leadingWidth: leadingWidth, backwardsCompatibility: backwardsCompatibility, toolbarTextStyle: toolbarTextStyle, titleTextStyle: titleTextStyle, systemOverlayStyle: systemOverlayStyle});
    }
    get minExtent() {
      return this.collapsedHeight;
    }
    get maxExtent() {
      let t110, t109;
      return math.max(core.double, this.topPadding + dart.notNull((t109 = this.expandedHeight, t109 == null ? dart.notNull((t110 = this.toolbarHeight, t110 == null ? 56 : t110)) + this[S$2._bottomHeight] : t109)), this.minExtent);
    }
    build(context, shrinkOffset, overlapsContent) {
      let t109, t109$;
      let visibleMainHeight = this.maxExtent - shrinkOffset - this.topPadding;
      let extraToolbarHeight = math.max(core.double, this.minExtent - this[S$2._bottomHeight] - this.topPadding - dart.notNull((t109 = this.toolbarHeight, t109 == null ? 56 : t109)), 0.0);
      let visibleToolbarHeight = visibleMainHeight - this[S$2._bottomHeight] - extraToolbarHeight;
      let isScrolledUnder = overlapsContent || this.forceElevated || this.pinned && shrinkOffset > this.maxExtent - this.minExtent;
      let isPinnedWithOpacityFade = this.pinned && this.floating && this.bottom != null && extraToolbarHeight === 0.0;
      let toolbarOpacity = !this.pinned || isPinnedWithOpacityFade ? math$.clampDouble(visibleToolbarHeight / dart.notNull((t109$ = this.toolbarHeight, t109$ == null ? 56 : t109$)), 0.0, 1.0) : 1.0;
      let appBar = flexible_space_bar.FlexibleSpaceBar.createSettings({minExtent: this.minExtent, maxExtent: this.maxExtent, currentExtent: math.max(core.double, this.minExtent, this.maxExtent - shrinkOffset), toolbarOpacity: toolbarOpacity, isScrolledUnder: isScrolledUnder, child: new app_bar.AppBar.new({leading: this.leading, automaticallyImplyLeading: this.automaticallyImplyLeading, title: this.title, actions: this.actions, flexibleSpace: this.title == null && this.flexibleSpace != null && !this.excludeHeaderSemantics ? new basic.Semantics.new({header: true, child: this.flexibleSpace, $creationLocationd_0dea112b090073317d4: C[1115] || CT.C1115}) : this.flexibleSpace, bottom: this.bottom, elevation: isScrolledUnder ? this.elevation : 0.0, scrolledUnderElevation: this.scrolledUnderElevation, shadowColor: this.shadowColor, surfaceTintColor: this.surfaceTintColor, backgroundColor: this.backgroundColor, foregroundColor: this.foregroundColor, brightness: this.brightness, iconTheme: this.iconTheme, actionsIconTheme: this.actionsIconTheme, textTheme: this.textTheme, primary: this.primary, centerTitle: this.centerTitle, excludeHeaderSemantics: this.excludeHeaderSemantics, titleSpacing: this.titleSpacing, shape: this.shape, toolbarOpacity: toolbarOpacity, bottomOpacity: this.pinned ? 1.0 : math$.clampDouble(visibleMainHeight / this[S$2._bottomHeight], 0.0, 1.0), toolbarHeight: this.toolbarHeight, leadingWidth: this.leadingWidth, backwardsCompatibility: this.backwardsCompatibility, toolbarTextStyle: this.toolbarTextStyle, titleTextStyle: this.titleTextStyle, systemOverlayStyle: this.systemOverlayStyle, $creationLocationd_0dea112b090073317d4: C[1116] || CT.C1116})});
      return appBar;
    }
    shouldRebuild(oldDelegate) {
      app_bar._SliverAppBarDelegate.as(oldDelegate);
      return !dart.equals(this.leading, oldDelegate.leading) || this.automaticallyImplyLeading !== oldDelegate.automaticallyImplyLeading || !dart.equals(this.title, oldDelegate.title) || !dart.equals(this.actions, oldDelegate.actions) || !dart.equals(this.flexibleSpace, oldDelegate.flexibleSpace) || !dart.equals(this.bottom, oldDelegate.bottom) || this[S$2._bottomHeight] !== oldDelegate[S$2._bottomHeight] || this.elevation != oldDelegate.elevation || !dart.equals(this.shadowColor, oldDelegate.shadowColor) || !dart.equals(this.backgroundColor, oldDelegate.backgroundColor) || !dart.equals(this.foregroundColor, oldDelegate.foregroundColor) || this.brightness != oldDelegate.brightness || !dart.equals(this.iconTheme, oldDelegate.iconTheme) || !dart.equals(this.actionsIconTheme, oldDelegate.actionsIconTheme) || !dart.equals(this.textTheme, oldDelegate.textTheme) || this.primary !== oldDelegate.primary || this.centerTitle != oldDelegate.centerTitle || this.titleSpacing != oldDelegate.titleSpacing || this.expandedHeight != oldDelegate.expandedHeight || this.topPadding !== oldDelegate.topPadding || this.pinned !== oldDelegate.pinned || this.floating !== oldDelegate.floating || !this.vsync[S.$_equals](oldDelegate.vsync) || !dart.equals(this.snapConfiguration, oldDelegate.snapConfiguration) || !dart.equals(this.stretchConfiguration, oldDelegate.stretchConfiguration) || !dart.equals(this.showOnScreenConfiguration, oldDelegate.showOnScreenConfiguration) || this.forceElevated !== oldDelegate.forceElevated || this.toolbarHeight != oldDelegate.toolbarHeight || this.leadingWidth != oldDelegate.leadingWidth || this.backwardsCompatibility != oldDelegate.backwardsCompatibility || !dart.equals(this.toolbarTextStyle, oldDelegate.toolbarTextStyle) || !dart.equals(this.titleTextStyle, oldDelegate.titleTextStyle) || !dart.equals(this.systemOverlayStyle, oldDelegate.systemOverlayStyle);
    }
    toString() {
      return diagnostics.describeIdentity(this) + "(topPadding: " + this.topPadding[S$.$toStringAsFixed](1) + ", bottomHeight: " + this[S$2._bottomHeight][S$.$toStringAsFixed](1) + ", ...)";
    }
  };
  (app_bar._SliverAppBarDelegate.new = function(opts) {
    let t109, t109$;
    let leading = opts && 'leading' in opts ? opts.leading : null;
    let automaticallyImplyLeading = opts && 'automaticallyImplyLeading' in opts ? opts.automaticallyImplyLeading : null;
    let title = opts && 'title' in opts ? opts.title : null;
    let actions = opts && 'actions' in opts ? opts.actions : null;
    let flexibleSpace = opts && 'flexibleSpace' in opts ? opts.flexibleSpace : null;
    let bottom = opts && 'bottom' in opts ? opts.bottom : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let scrolledUnderElevation = opts && 'scrolledUnderElevation' in opts ? opts.scrolledUnderElevation : null;
    let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
    let surfaceTintColor = opts && 'surfaceTintColor' in opts ? opts.surfaceTintColor : null;
    let forceElevated = opts && 'forceElevated' in opts ? opts.forceElevated : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let foregroundColor = opts && 'foregroundColor' in opts ? opts.foregroundColor : null;
    let brightness = opts && 'brightness' in opts ? opts.brightness : null;
    let iconTheme = opts && 'iconTheme' in opts ? opts.iconTheme : null;
    let actionsIconTheme = opts && 'actionsIconTheme' in opts ? opts.actionsIconTheme : null;
    let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
    let primary = opts && 'primary' in opts ? opts.primary : null;
    let centerTitle = opts && 'centerTitle' in opts ? opts.centerTitle : null;
    let excludeHeaderSemantics = opts && 'excludeHeaderSemantics' in opts ? opts.excludeHeaderSemantics : null;
    let titleSpacing = opts && 'titleSpacing' in opts ? opts.titleSpacing : null;
    let expandedHeight = opts && 'expandedHeight' in opts ? opts.expandedHeight : null;
    let collapsedHeight = opts && 'collapsedHeight' in opts ? opts.collapsedHeight : null;
    let topPadding = opts && 'topPadding' in opts ? opts.topPadding : null;
    let floating = opts && 'floating' in opts ? opts.floating : null;
    let pinned = opts && 'pinned' in opts ? opts.pinned : null;
    let vsync = opts && 'vsync' in opts ? opts.vsync : null;
    let snapConfiguration = opts && 'snapConfiguration' in opts ? opts.snapConfiguration : null;
    let stretchConfiguration = opts && 'stretchConfiguration' in opts ? opts.stretchConfiguration : null;
    let showOnScreenConfiguration = opts && 'showOnScreenConfiguration' in opts ? opts.showOnScreenConfiguration : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let toolbarHeight = opts && 'toolbarHeight' in opts ? opts.toolbarHeight : null;
    let leadingWidth = opts && 'leadingWidth' in opts ? opts.leadingWidth : null;
    let backwardsCompatibility = opts && 'backwardsCompatibility' in opts ? opts.backwardsCompatibility : null;
    let toolbarTextStyle = opts && 'toolbarTextStyle' in opts ? opts.toolbarTextStyle : null;
    let titleTextStyle = opts && 'titleTextStyle' in opts ? opts.titleTextStyle : null;
    let systemOverlayStyle = opts && 'systemOverlayStyle' in opts ? opts.systemOverlayStyle : null;
    this.leading = leading;
    this.automaticallyImplyLeading = automaticallyImplyLeading;
    this.title = title;
    this.actions = actions;
    this.flexibleSpace = flexibleSpace;
    this.bottom = bottom;
    this.elevation = elevation;
    this.scrolledUnderElevation = scrolledUnderElevation;
    this.shadowColor = shadowColor;
    this.surfaceTintColor = surfaceTintColor;
    this.forceElevated = forceElevated;
    this.backgroundColor = backgroundColor;
    this.foregroundColor = foregroundColor;
    this.brightness = brightness;
    this.iconTheme = iconTheme;
    this.actionsIconTheme = actionsIconTheme;
    this.textTheme = textTheme;
    this.primary = primary;
    this.centerTitle = centerTitle;
    this.excludeHeaderSemantics = excludeHeaderSemantics;
    this.titleSpacing = titleSpacing;
    this.expandedHeight = expandedHeight;
    this.collapsedHeight = collapsedHeight;
    this.topPadding = topPadding;
    this.floating = floating;
    this.pinned = pinned;
    this[S$2.vsync$1] = vsync;
    this[S$2.snapConfiguration] = snapConfiguration;
    this[S$2.stretchConfiguration] = stretchConfiguration;
    this[S$2.showOnScreenConfiguration] = showOnScreenConfiguration;
    this.shape = shape;
    this.toolbarHeight = toolbarHeight;
    this.leadingWidth = leadingWidth;
    this.backwardsCompatibility = backwardsCompatibility;
    this.toolbarTextStyle = toolbarTextStyle;
    this.titleTextStyle = titleTextStyle;
    this.systemOverlayStyle = systemOverlayStyle;
    if (!(primary || topPadding === 0.0)) dart.assertFailed(null, I[137], 1222, 15, "primary || topPadding == 0.0");
    if (!(!floating || snapConfiguration == null && showOnScreenConfiguration == null || vsync !== null)) dart.assertFailed("vsync cannot be null when snapConfiguration or showOnScreenConfiguration is not null, and floating is true", I[137], 1224, 10, "!floating || (snapConfiguration == null && showOnScreenConfiguration == null) || vsync != null");
    this[S$2._bottomHeight] = (t109$ = (t109 = bottom, t109 == null ? null : t109.preferredSize.height), t109$ == null ? 0.0 : t109$);
    app_bar._SliverAppBarDelegate.__proto__.new.call(this);
    ;
  }).prototype = app_bar._SliverAppBarDelegate.prototype;
  dart.addTypeTests(app_bar._SliverAppBarDelegate);
  dart.addTypeCaches(app_bar._SliverAppBarDelegate);
  dart.setMethodSignature(app_bar._SliverAppBarDelegate, () => ({
    __proto__: dart.getMethods(app_bar._SliverAppBarDelegate.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext, core.double, core.bool]),
    shouldRebuild: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setGetterSignature(app_bar._SliverAppBarDelegate, () => ({
    __proto__: dart.getGetters(app_bar._SliverAppBarDelegate.__proto__),
    minExtent: core.double,
    maxExtent: core.double
  }));
  dart.setLibraryUri(app_bar._SliverAppBarDelegate, I[136]);
  dart.setFieldSignature(app_bar._SliverAppBarDelegate, () => ({
    __proto__: dart.getFields(app_bar._SliverAppBarDelegate.__proto__),
    leading: dart.finalFieldType(dart.nullable(framework.Widget)),
    automaticallyImplyLeading: dart.finalFieldType(core.bool),
    title: dart.finalFieldType(dart.nullable(framework.Widget)),
    actions: dart.finalFieldType(dart.nullable(core.List$(framework.Widget))),
    flexibleSpace: dart.finalFieldType(dart.nullable(framework.Widget)),
    bottom: dart.finalFieldType(dart.nullable(preferred_size.PreferredSizeWidget)),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    scrolledUnderElevation: dart.finalFieldType(dart.nullable(core.double)),
    shadowColor: dart.finalFieldType(dart.nullable(ui.Color)),
    surfaceTintColor: dart.finalFieldType(dart.nullable(ui.Color)),
    forceElevated: dart.finalFieldType(core.bool),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    foregroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    brightness: dart.finalFieldType(dart.nullable(ui.Brightness)),
    iconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData)),
    actionsIconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData)),
    textTheme: dart.finalFieldType(dart.nullable(text_theme.TextTheme)),
    primary: dart.finalFieldType(core.bool),
    centerTitle: dart.finalFieldType(dart.nullable(core.bool)),
    excludeHeaderSemantics: dart.finalFieldType(core.bool),
    titleSpacing: dart.finalFieldType(dart.nullable(core.double)),
    expandedHeight: dart.finalFieldType(dart.nullable(core.double)),
    collapsedHeight: dart.finalFieldType(core.double),
    topPadding: dart.finalFieldType(core.double),
    floating: dart.finalFieldType(core.bool),
    pinned: dart.finalFieldType(core.bool),
    shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    toolbarHeight: dart.finalFieldType(dart.nullable(core.double)),
    leadingWidth: dart.finalFieldType(dart.nullable(core.double)),
    backwardsCompatibility: dart.finalFieldType(dart.nullable(core.bool)),
    toolbarTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    titleTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    systemOverlayStyle: dart.finalFieldType(dart.nullable(system_chrome.SystemUiOverlayStyle)),
    [S$2._bottomHeight]: dart.finalFieldType(core.double),
    vsync: dart.finalFieldType(ticker.TickerProvider),
    snapConfiguration: dart.finalFieldType(dart.nullable(sliver_persistent_header$.FloatingHeaderSnapConfiguration)),
    stretchConfiguration: dart.finalFieldType(dart.nullable(sliver_persistent_header$.OverScrollHeaderStretchConfiguration)),
    showOnScreenConfiguration: dart.finalFieldType(dart.nullable(sliver_persistent_header$.PersistentHeaderShowOnScreenConfiguration))
  }));
  dart.defineExtensionMethods(app_bar._SliverAppBarDelegate, ['toString']);
  app_bar.SliverAppBar = class SliverAppBar extends framework.StatefulWidget {
    get leading() {
      return this[S$2.leading$5];
    }
    set leading(value) {
      super.leading = value;
    }
    get automaticallyImplyLeading() {
      return this[S$2.automaticallyImplyLeading$1];
    }
    set automaticallyImplyLeading(value) {
      super.automaticallyImplyLeading = value;
    }
    get title() {
      return this[S$2.title$4];
    }
    set title(value) {
      super.title = value;
    }
    get actions() {
      return this[S$2.actions$2];
    }
    set actions(value) {
      super.actions = value;
    }
    get flexibleSpace() {
      return this[S$2.flexibleSpace$1];
    }
    set flexibleSpace(value) {
      super.flexibleSpace = value;
    }
    get bottom() {
      return this[S$2.bottom$1];
    }
    set bottom(value) {
      super.bottom = value;
    }
    get elevation() {
      return this[S$2.elevation$32];
    }
    set elevation(value) {
      super.elevation = value;
    }
    get scrolledUnderElevation() {
      return this[S$2.scrolledUnderElevation$2];
    }
    set scrolledUnderElevation(value) {
      super.scrolledUnderElevation = value;
    }
    get shadowColor() {
      return this[S$2.shadowColor$8];
    }
    set shadowColor(value) {
      super.shadowColor = value;
    }
    get surfaceTintColor() {
      return this[S$2.surfaceTintColor$9];
    }
    set surfaceTintColor(value) {
      super.surfaceTintColor = value;
    }
    get forceElevated() {
      return this[S$2.forceElevated];
    }
    set forceElevated(value) {
      super.forceElevated = value;
    }
    get backgroundColor() {
      return this[S$2.backgroundColor$26];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get foregroundColor() {
      return this[S$2.foregroundColor$4];
    }
    set foregroundColor(value) {
      super.foregroundColor = value;
    }
    get brightness() {
      return this[S$2.brightness$4];
    }
    set brightness(value) {
      super.brightness = value;
    }
    get iconTheme() {
      return this[S$2.iconTheme$5];
    }
    set iconTheme(value) {
      super.iconTheme = value;
    }
    get actionsIconTheme() {
      return this[S$2.actionsIconTheme$2];
    }
    set actionsIconTheme(value) {
      super.actionsIconTheme = value;
    }
    get textTheme() {
      return this[S$2.textTheme$5];
    }
    set textTheme(value) {
      super.textTheme = value;
    }
    get primary() {
      return this[S$2.primary$3];
    }
    set primary(value) {
      super.primary = value;
    }
    get centerTitle() {
      return this[S$2.centerTitle$3];
    }
    set centerTitle(value) {
      super.centerTitle = value;
    }
    get excludeHeaderSemantics() {
      return this[S$2.excludeHeaderSemantics$1];
    }
    set excludeHeaderSemantics(value) {
      super.excludeHeaderSemantics = value;
    }
    get titleSpacing() {
      return this[S$2.titleSpacing$2];
    }
    set titleSpacing(value) {
      super.titleSpacing = value;
    }
    get collapsedHeight() {
      return this[S$2.collapsedHeight];
    }
    set collapsedHeight(value) {
      super.collapsedHeight = value;
    }
    get expandedHeight() {
      return this[S$2.expandedHeight];
    }
    set expandedHeight(value) {
      super.expandedHeight = value;
    }
    get floating() {
      return this[S$2.floating];
    }
    set floating(value) {
      super.floating = value;
    }
    get pinned() {
      return this[S$2.pinned];
    }
    set pinned(value) {
      super.pinned = value;
    }
    get shape() {
      return this[S$2.shape$26];
    }
    set shape(value) {
      super.shape = value;
    }
    get snap() {
      return this[S$2.snap];
    }
    set snap(value) {
      super.snap = value;
    }
    get stretch() {
      return this[S$2.stretch];
    }
    set stretch(value) {
      super.stretch = value;
    }
    get stretchTriggerOffset() {
      return this[S$2.stretchTriggerOffset];
    }
    set stretchTriggerOffset(value) {
      super.stretchTriggerOffset = value;
    }
    get onStretchTrigger() {
      return this[S$2.onStretchTrigger];
    }
    set onStretchTrigger(value) {
      super.onStretchTrigger = value;
    }
    get toolbarHeight() {
      return this[S$2.toolbarHeight$3];
    }
    set toolbarHeight(value) {
      super.toolbarHeight = value;
    }
    get leadingWidth() {
      return this[S$2.leadingWidth$1];
    }
    set leadingWidth(value) {
      super.leadingWidth = value;
    }
    get backwardsCompatibility() {
      return this[S$2.backwardsCompatibility$2];
    }
    set backwardsCompatibility(value) {
      super.backwardsCompatibility = value;
    }
    get toolbarTextStyle() {
      return this[S$2.toolbarTextStyle$2];
    }
    set toolbarTextStyle(value) {
      super.toolbarTextStyle = value;
    }
    get titleTextStyle() {
      return this[S$2.titleTextStyle$3];
    }
    set titleTextStyle(value) {
      super.titleTextStyle = value;
    }
    get systemOverlayStyle() {
      return this[S$2.systemOverlayStyle$2];
    }
    set systemOverlayStyle(value) {
      super.systemOverlayStyle = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let leading = opts && 'leading' in opts ? opts.leading : null;
      let automaticallyImplyLeading = opts && 'automaticallyImplyLeading' in opts ? opts.automaticallyImplyLeading : true;
      let title = opts && 'title' in opts ? opts.title : null;
      let actions = opts && 'actions' in opts ? opts.actions : null;
      let flexibleSpace = opts && 'flexibleSpace' in opts ? opts.flexibleSpace : null;
      let bottom = opts && 'bottom' in opts ? opts.bottom : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let scrolledUnderElevation = opts && 'scrolledUnderElevation' in opts ? opts.scrolledUnderElevation : null;
      let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
      let surfaceTintColor = opts && 'surfaceTintColor' in opts ? opts.surfaceTintColor : null;
      let forceElevated = opts && 'forceElevated' in opts ? opts.forceElevated : false;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let foregroundColor = opts && 'foregroundColor' in opts ? opts.foregroundColor : null;
      let brightness = opts && 'brightness' in opts ? opts.brightness : null;
      let iconTheme = opts && 'iconTheme' in opts ? opts.iconTheme : null;
      let actionsIconTheme = opts && 'actionsIconTheme' in opts ? opts.actionsIconTheme : null;
      let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
      let primary = opts && 'primary' in opts ? opts.primary : true;
      let centerTitle = opts && 'centerTitle' in opts ? opts.centerTitle : null;
      let excludeHeaderSemantics = opts && 'excludeHeaderSemantics' in opts ? opts.excludeHeaderSemantics : false;
      let titleSpacing = opts && 'titleSpacing' in opts ? opts.titleSpacing : null;
      let collapsedHeight = opts && 'collapsedHeight' in opts ? opts.collapsedHeight : null;
      let expandedHeight = opts && 'expandedHeight' in opts ? opts.expandedHeight : null;
      let floating = opts && 'floating' in opts ? opts.floating : false;
      let pinned = opts && 'pinned' in opts ? opts.pinned : false;
      let snap = opts && 'snap' in opts ? opts.snap : false;
      let stretch = opts && 'stretch' in opts ? opts.stretch : false;
      let stretchTriggerOffset = opts && 'stretchTriggerOffset' in opts ? opts.stretchTriggerOffset : 100;
      let onStretchTrigger = opts && 'onStretchTrigger' in opts ? opts.onStretchTrigger : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let toolbarHeight = opts && 'toolbarHeight' in opts ? opts.toolbarHeight : 56;
      let leadingWidth = opts && 'leadingWidth' in opts ? opts.leadingWidth : null;
      let backwardsCompatibility = opts && 'backwardsCompatibility' in opts ? opts.backwardsCompatibility : null;
      let toolbarTextStyle = opts && 'toolbarTextStyle' in opts ? opts.toolbarTextStyle : null;
      let titleTextStyle = opts && 'titleTextStyle' in opts ? opts.titleTextStyle : null;
      let systemOverlayStyle = opts && 'systemOverlayStyle' in opts ? opts.systemOverlayStyle : null;
      return new app_bar.SliverAppBar.new({key: key, leading: leading, automaticallyImplyLeading: automaticallyImplyLeading, title: title, actions: actions, flexibleSpace: flexibleSpace, bottom: bottom, elevation: elevation, scrolledUnderElevation: scrolledUnderElevation, shadowColor: shadowColor, surfaceTintColor: surfaceTintColor, forceElevated: forceElevated, backgroundColor: backgroundColor, foregroundColor: foregroundColor, brightness: brightness, iconTheme: iconTheme, actionsIconTheme: actionsIconTheme, textTheme: textTheme, primary: primary, centerTitle: centerTitle, excludeHeaderSemantics: excludeHeaderSemantics, titleSpacing: titleSpacing, collapsedHeight: collapsedHeight, expandedHeight: expandedHeight, floating: floating, pinned: pinned, snap: snap, stretch: stretch, stretchTriggerOffset: stretchTriggerOffset, onStretchTrigger: onStretchTrigger, shape: shape, toolbarHeight: toolbarHeight, leadingWidth: leadingWidth, backwardsCompatibility: backwardsCompatibility, toolbarTextStyle: toolbarTextStyle, titleTextStyle: titleTextStyle, systemOverlayStyle: systemOverlayStyle, $creationLocationd_0dea112b090073317d4: C[1117] || CT.C1117});
    }
    static medium(opts) {
      let t109, t109$, t109$0;
      let key = opts && 'key' in opts ? opts.key : null;
      let leading = opts && 'leading' in opts ? opts.leading : null;
      let automaticallyImplyLeading = opts && 'automaticallyImplyLeading' in opts ? opts.automaticallyImplyLeading : true;
      let title = opts && 'title' in opts ? opts.title : null;
      let actions = opts && 'actions' in opts ? opts.actions : null;
      let flexibleSpace = opts && 'flexibleSpace' in opts ? opts.flexibleSpace : null;
      let bottom = opts && 'bottom' in opts ? opts.bottom : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let scrolledUnderElevation = opts && 'scrolledUnderElevation' in opts ? opts.scrolledUnderElevation : null;
      let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
      let surfaceTintColor = opts && 'surfaceTintColor' in opts ? opts.surfaceTintColor : null;
      let forceElevated = opts && 'forceElevated' in opts ? opts.forceElevated : false;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let foregroundColor = opts && 'foregroundColor' in opts ? opts.foregroundColor : null;
      let iconTheme = opts && 'iconTheme' in opts ? opts.iconTheme : null;
      let actionsIconTheme = opts && 'actionsIconTheme' in opts ? opts.actionsIconTheme : null;
      let primary = opts && 'primary' in opts ? opts.primary : true;
      let centerTitle = opts && 'centerTitle' in opts ? opts.centerTitle : null;
      let excludeHeaderSemantics = opts && 'excludeHeaderSemantics' in opts ? opts.excludeHeaderSemantics : false;
      let titleSpacing = opts && 'titleSpacing' in opts ? opts.titleSpacing : null;
      let collapsedHeight = opts && 'collapsedHeight' in opts ? opts.collapsedHeight : null;
      let expandedHeight = opts && 'expandedHeight' in opts ? opts.expandedHeight : null;
      let floating = opts && 'floating' in opts ? opts.floating : false;
      let pinned = opts && 'pinned' in opts ? opts.pinned : true;
      let snap = opts && 'snap' in opts ? opts.snap : false;
      let stretch = opts && 'stretch' in opts ? opts.stretch : false;
      let stretchTriggerOffset = opts && 'stretchTriggerOffset' in opts ? opts.stretchTriggerOffset : 100;
      let onStretchTrigger = opts && 'onStretchTrigger' in opts ? opts.onStretchTrigger : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let toolbarHeight = opts && 'toolbarHeight' in opts ? opts.toolbarHeight : 64;
      let leadingWidth = opts && 'leadingWidth' in opts ? opts.leadingWidth : null;
      let toolbarTextStyle = opts && 'toolbarTextStyle' in opts ? opts.toolbarTextStyle : null;
      let titleTextStyle = opts && 'titleTextStyle' in opts ? opts.titleTextStyle : null;
      let systemOverlayStyle = opts && 'systemOverlayStyle' in opts ? opts.systemOverlayStyle : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      return new app_bar.SliverAppBar.new({key: key, leading: leading, automaticallyImplyLeading: automaticallyImplyLeading, actions: actions, flexibleSpace: (t109 = flexibleSpace, t109 == null ? new app_bar._ScrollUnderFlexibleSpace.new({title: title, variant: app_bar._ScrollUnderFlexibleVariant.medium, centerCollapsedTitle: centerTitle, primary: primary, $creationLocationd_0dea112b090073317d4: C[1118] || CT.C1118}) : t109), bottom: bottom, elevation: elevation, scrolledUnderElevation: scrolledUnderElevation, shadowColor: shadowColor, surfaceTintColor: surfaceTintColor, forceElevated: forceElevated, backgroundColor: backgroundColor, foregroundColor: foregroundColor, iconTheme: iconTheme, actionsIconTheme: actionsIconTheme, primary: primary, centerTitle: centerTitle, excludeHeaderSemantics: excludeHeaderSemantics, titleSpacing: titleSpacing, collapsedHeight: (t109$ = collapsedHeight, t109$ == null ? 64 : t109$), expandedHeight: (t109$0 = expandedHeight, t109$0 == null ? 112 : t109$0), floating: floating, pinned: pinned, snap: snap, stretch: stretch, stretchTriggerOffset: stretchTriggerOffset, onStretchTrigger: onStretchTrigger, shape: shape, toolbarHeight: toolbarHeight, leadingWidth: leadingWidth, toolbarTextStyle: toolbarTextStyle, titleTextStyle: titleTextStyle, systemOverlayStyle: systemOverlayStyle, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    }
    static ['_#medium#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let leading = opts && 'leading' in opts ? opts.leading : null;
      let automaticallyImplyLeading = opts && 'automaticallyImplyLeading' in opts ? opts.automaticallyImplyLeading : true;
      let title = opts && 'title' in opts ? opts.title : null;
      let actions = opts && 'actions' in opts ? opts.actions : null;
      let flexibleSpace = opts && 'flexibleSpace' in opts ? opts.flexibleSpace : null;
      let bottom = opts && 'bottom' in opts ? opts.bottom : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let scrolledUnderElevation = opts && 'scrolledUnderElevation' in opts ? opts.scrolledUnderElevation : null;
      let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
      let surfaceTintColor = opts && 'surfaceTintColor' in opts ? opts.surfaceTintColor : null;
      let forceElevated = opts && 'forceElevated' in opts ? opts.forceElevated : false;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let foregroundColor = opts && 'foregroundColor' in opts ? opts.foregroundColor : null;
      let iconTheme = opts && 'iconTheme' in opts ? opts.iconTheme : null;
      let actionsIconTheme = opts && 'actionsIconTheme' in opts ? opts.actionsIconTheme : null;
      let primary = opts && 'primary' in opts ? opts.primary : true;
      let centerTitle = opts && 'centerTitle' in opts ? opts.centerTitle : null;
      let excludeHeaderSemantics = opts && 'excludeHeaderSemantics' in opts ? opts.excludeHeaderSemantics : false;
      let titleSpacing = opts && 'titleSpacing' in opts ? opts.titleSpacing : null;
      let collapsedHeight = opts && 'collapsedHeight' in opts ? opts.collapsedHeight : null;
      let expandedHeight = opts && 'expandedHeight' in opts ? opts.expandedHeight : null;
      let floating = opts && 'floating' in opts ? opts.floating : false;
      let pinned = opts && 'pinned' in opts ? opts.pinned : true;
      let snap = opts && 'snap' in opts ? opts.snap : false;
      let stretch = opts && 'stretch' in opts ? opts.stretch : false;
      let stretchTriggerOffset = opts && 'stretchTriggerOffset' in opts ? opts.stretchTriggerOffset : 100;
      let onStretchTrigger = opts && 'onStretchTrigger' in opts ? opts.onStretchTrigger : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let toolbarHeight = opts && 'toolbarHeight' in opts ? opts.toolbarHeight : 64;
      let leadingWidth = opts && 'leadingWidth' in opts ? opts.leadingWidth : null;
      let toolbarTextStyle = opts && 'toolbarTextStyle' in opts ? opts.toolbarTextStyle : null;
      let titleTextStyle = opts && 'titleTextStyle' in opts ? opts.titleTextStyle : null;
      let systemOverlayStyle = opts && 'systemOverlayStyle' in opts ? opts.systemOverlayStyle : null;
      return app_bar.SliverAppBar.medium({key: key, leading: leading, automaticallyImplyLeading: automaticallyImplyLeading, title: title, actions: actions, flexibleSpace: flexibleSpace, bottom: bottom, elevation: elevation, scrolledUnderElevation: scrolledUnderElevation, shadowColor: shadowColor, surfaceTintColor: surfaceTintColor, forceElevated: forceElevated, backgroundColor: backgroundColor, foregroundColor: foregroundColor, iconTheme: iconTheme, actionsIconTheme: actionsIconTheme, primary: primary, centerTitle: centerTitle, excludeHeaderSemantics: excludeHeaderSemantics, titleSpacing: titleSpacing, collapsedHeight: collapsedHeight, expandedHeight: expandedHeight, floating: floating, pinned: pinned, snap: snap, stretch: stretch, stretchTriggerOffset: stretchTriggerOffset, onStretchTrigger: onStretchTrigger, shape: shape, toolbarHeight: toolbarHeight, leadingWidth: leadingWidth, toolbarTextStyle: toolbarTextStyle, titleTextStyle: titleTextStyle, systemOverlayStyle: systemOverlayStyle, $creationLocationd_0dea112b090073317d4: C[1119] || CT.C1119});
    }
    static large(opts) {
      let t109, t109$, t109$0;
      let key = opts && 'key' in opts ? opts.key : null;
      let leading = opts && 'leading' in opts ? opts.leading : null;
      let automaticallyImplyLeading = opts && 'automaticallyImplyLeading' in opts ? opts.automaticallyImplyLeading : true;
      let title = opts && 'title' in opts ? opts.title : null;
      let actions = opts && 'actions' in opts ? opts.actions : null;
      let flexibleSpace = opts && 'flexibleSpace' in opts ? opts.flexibleSpace : null;
      let bottom = opts && 'bottom' in opts ? opts.bottom : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let scrolledUnderElevation = opts && 'scrolledUnderElevation' in opts ? opts.scrolledUnderElevation : null;
      let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
      let surfaceTintColor = opts && 'surfaceTintColor' in opts ? opts.surfaceTintColor : null;
      let forceElevated = opts && 'forceElevated' in opts ? opts.forceElevated : false;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let foregroundColor = opts && 'foregroundColor' in opts ? opts.foregroundColor : null;
      let iconTheme = opts && 'iconTheme' in opts ? opts.iconTheme : null;
      let actionsIconTheme = opts && 'actionsIconTheme' in opts ? opts.actionsIconTheme : null;
      let primary = opts && 'primary' in opts ? opts.primary : true;
      let centerTitle = opts && 'centerTitle' in opts ? opts.centerTitle : null;
      let excludeHeaderSemantics = opts && 'excludeHeaderSemantics' in opts ? opts.excludeHeaderSemantics : false;
      let titleSpacing = opts && 'titleSpacing' in opts ? opts.titleSpacing : null;
      let collapsedHeight = opts && 'collapsedHeight' in opts ? opts.collapsedHeight : null;
      let expandedHeight = opts && 'expandedHeight' in opts ? opts.expandedHeight : null;
      let floating = opts && 'floating' in opts ? opts.floating : false;
      let pinned = opts && 'pinned' in opts ? opts.pinned : true;
      let snap = opts && 'snap' in opts ? opts.snap : false;
      let stretch = opts && 'stretch' in opts ? opts.stretch : false;
      let stretchTriggerOffset = opts && 'stretchTriggerOffset' in opts ? opts.stretchTriggerOffset : 100;
      let onStretchTrigger = opts && 'onStretchTrigger' in opts ? opts.onStretchTrigger : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let toolbarHeight = opts && 'toolbarHeight' in opts ? opts.toolbarHeight : 64;
      let leadingWidth = opts && 'leadingWidth' in opts ? opts.leadingWidth : null;
      let toolbarTextStyle = opts && 'toolbarTextStyle' in opts ? opts.toolbarTextStyle : null;
      let titleTextStyle = opts && 'titleTextStyle' in opts ? opts.titleTextStyle : null;
      let systemOverlayStyle = opts && 'systemOverlayStyle' in opts ? opts.systemOverlayStyle : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      return new app_bar.SliverAppBar.new({key: key, leading: leading, automaticallyImplyLeading: automaticallyImplyLeading, actions: actions, flexibleSpace: (t109 = flexibleSpace, t109 == null ? new app_bar._ScrollUnderFlexibleSpace.new({title: title, variant: app_bar._ScrollUnderFlexibleVariant.large, centerCollapsedTitle: centerTitle, primary: primary, $creationLocationd_0dea112b090073317d4: C[1120] || CT.C1120}) : t109), bottom: bottom, elevation: elevation, scrolledUnderElevation: scrolledUnderElevation, shadowColor: shadowColor, surfaceTintColor: surfaceTintColor, forceElevated: forceElevated, backgroundColor: backgroundColor, foregroundColor: foregroundColor, iconTheme: iconTheme, actionsIconTheme: actionsIconTheme, primary: primary, centerTitle: centerTitle, excludeHeaderSemantics: excludeHeaderSemantics, titleSpacing: titleSpacing, collapsedHeight: (t109$ = collapsedHeight, t109$ == null ? 64 : t109$), expandedHeight: (t109$0 = expandedHeight, t109$0 == null ? 152 : t109$0), floating: floating, pinned: pinned, snap: snap, stretch: stretch, stretchTriggerOffset: stretchTriggerOffset, onStretchTrigger: onStretchTrigger, shape: shape, toolbarHeight: toolbarHeight, leadingWidth: leadingWidth, toolbarTextStyle: toolbarTextStyle, titleTextStyle: titleTextStyle, systemOverlayStyle: systemOverlayStyle, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    }
    static ['_#large#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let leading = opts && 'leading' in opts ? opts.leading : null;
      let automaticallyImplyLeading = opts && 'automaticallyImplyLeading' in opts ? opts.automaticallyImplyLeading : true;
      let title = opts && 'title' in opts ? opts.title : null;
      let actions = opts && 'actions' in opts ? opts.actions : null;
      let flexibleSpace = opts && 'flexibleSpace' in opts ? opts.flexibleSpace : null;
      let bottom = opts && 'bottom' in opts ? opts.bottom : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let scrolledUnderElevation = opts && 'scrolledUnderElevation' in opts ? opts.scrolledUnderElevation : null;
      let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
      let surfaceTintColor = opts && 'surfaceTintColor' in opts ? opts.surfaceTintColor : null;
      let forceElevated = opts && 'forceElevated' in opts ? opts.forceElevated : false;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let foregroundColor = opts && 'foregroundColor' in opts ? opts.foregroundColor : null;
      let iconTheme = opts && 'iconTheme' in opts ? opts.iconTheme : null;
      let actionsIconTheme = opts && 'actionsIconTheme' in opts ? opts.actionsIconTheme : null;
      let primary = opts && 'primary' in opts ? opts.primary : true;
      let centerTitle = opts && 'centerTitle' in opts ? opts.centerTitle : null;
      let excludeHeaderSemantics = opts && 'excludeHeaderSemantics' in opts ? opts.excludeHeaderSemantics : false;
      let titleSpacing = opts && 'titleSpacing' in opts ? opts.titleSpacing : null;
      let collapsedHeight = opts && 'collapsedHeight' in opts ? opts.collapsedHeight : null;
      let expandedHeight = opts && 'expandedHeight' in opts ? opts.expandedHeight : null;
      let floating = opts && 'floating' in opts ? opts.floating : false;
      let pinned = opts && 'pinned' in opts ? opts.pinned : true;
      let snap = opts && 'snap' in opts ? opts.snap : false;
      let stretch = opts && 'stretch' in opts ? opts.stretch : false;
      let stretchTriggerOffset = opts && 'stretchTriggerOffset' in opts ? opts.stretchTriggerOffset : 100;
      let onStretchTrigger = opts && 'onStretchTrigger' in opts ? opts.onStretchTrigger : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let toolbarHeight = opts && 'toolbarHeight' in opts ? opts.toolbarHeight : 64;
      let leadingWidth = opts && 'leadingWidth' in opts ? opts.leadingWidth : null;
      let toolbarTextStyle = opts && 'toolbarTextStyle' in opts ? opts.toolbarTextStyle : null;
      let titleTextStyle = opts && 'titleTextStyle' in opts ? opts.titleTextStyle : null;
      let systemOverlayStyle = opts && 'systemOverlayStyle' in opts ? opts.systemOverlayStyle : null;
      return app_bar.SliverAppBar.large({key: key, leading: leading, automaticallyImplyLeading: automaticallyImplyLeading, title: title, actions: actions, flexibleSpace: flexibleSpace, bottom: bottom, elevation: elevation, scrolledUnderElevation: scrolledUnderElevation, shadowColor: shadowColor, surfaceTintColor: surfaceTintColor, forceElevated: forceElevated, backgroundColor: backgroundColor, foregroundColor: foregroundColor, iconTheme: iconTheme, actionsIconTheme: actionsIconTheme, primary: primary, centerTitle: centerTitle, excludeHeaderSemantics: excludeHeaderSemantics, titleSpacing: titleSpacing, collapsedHeight: collapsedHeight, expandedHeight: expandedHeight, floating: floating, pinned: pinned, snap: snap, stretch: stretch, stretchTriggerOffset: stretchTriggerOffset, onStretchTrigger: onStretchTrigger, shape: shape, toolbarHeight: toolbarHeight, leadingWidth: leadingWidth, toolbarTextStyle: toolbarTextStyle, titleTextStyle: titleTextStyle, systemOverlayStyle: systemOverlayStyle, $creationLocationd_0dea112b090073317d4: C[1121] || CT.C1121});
    }
    createState() {
      return new app_bar._SliverAppBarState.new();
    }
  };
  (app_bar.SliverAppBar.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let leading = opts && 'leading' in opts ? opts.leading : null;
    let automaticallyImplyLeading = opts && 'automaticallyImplyLeading' in opts ? opts.automaticallyImplyLeading : true;
    let title = opts && 'title' in opts ? opts.title : null;
    let actions = opts && 'actions' in opts ? opts.actions : null;
    let flexibleSpace = opts && 'flexibleSpace' in opts ? opts.flexibleSpace : null;
    let bottom = opts && 'bottom' in opts ? opts.bottom : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let scrolledUnderElevation = opts && 'scrolledUnderElevation' in opts ? opts.scrolledUnderElevation : null;
    let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
    let surfaceTintColor = opts && 'surfaceTintColor' in opts ? opts.surfaceTintColor : null;
    let forceElevated = opts && 'forceElevated' in opts ? opts.forceElevated : false;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let foregroundColor = opts && 'foregroundColor' in opts ? opts.foregroundColor : null;
    let brightness = opts && 'brightness' in opts ? opts.brightness : null;
    let iconTheme = opts && 'iconTheme' in opts ? opts.iconTheme : null;
    let actionsIconTheme = opts && 'actionsIconTheme' in opts ? opts.actionsIconTheme : null;
    let textTheme = opts && 'textTheme' in opts ? opts.textTheme : null;
    let primary = opts && 'primary' in opts ? opts.primary : true;
    let centerTitle = opts && 'centerTitle' in opts ? opts.centerTitle : null;
    let excludeHeaderSemantics = opts && 'excludeHeaderSemantics' in opts ? opts.excludeHeaderSemantics : false;
    let titleSpacing = opts && 'titleSpacing' in opts ? opts.titleSpacing : null;
    let collapsedHeight = opts && 'collapsedHeight' in opts ? opts.collapsedHeight : null;
    let expandedHeight = opts && 'expandedHeight' in opts ? opts.expandedHeight : null;
    let floating = opts && 'floating' in opts ? opts.floating : false;
    let pinned = opts && 'pinned' in opts ? opts.pinned : false;
    let snap = opts && 'snap' in opts ? opts.snap : false;
    let stretch = opts && 'stretch' in opts ? opts.stretch : false;
    let stretchTriggerOffset = opts && 'stretchTriggerOffset' in opts ? opts.stretchTriggerOffset : 100;
    let onStretchTrigger = opts && 'onStretchTrigger' in opts ? opts.onStretchTrigger : null;
    let shape = opts && 'shape' in opts ? opts.shape : null;
    let toolbarHeight = opts && 'toolbarHeight' in opts ? opts.toolbarHeight : 56;
    let leadingWidth = opts && 'leadingWidth' in opts ? opts.leadingWidth : null;
    let backwardsCompatibility = opts && 'backwardsCompatibility' in opts ? opts.backwardsCompatibility : null;
    let toolbarTextStyle = opts && 'toolbarTextStyle' in opts ? opts.toolbarTextStyle : null;
    let titleTextStyle = opts && 'titleTextStyle' in opts ? opts.titleTextStyle : null;
    let systemOverlayStyle = opts && 'systemOverlayStyle' in opts ? opts.systemOverlayStyle : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$2.leading$5] = leading;
    this[S$2.automaticallyImplyLeading$1] = automaticallyImplyLeading;
    this[S$2.title$4] = title;
    this[S$2.actions$2] = actions;
    this[S$2.flexibleSpace$1] = flexibleSpace;
    this[S$2.bottom$1] = bottom;
    this[S$2.elevation$32] = elevation;
    this[S$2.scrolledUnderElevation$2] = scrolledUnderElevation;
    this[S$2.shadowColor$8] = shadowColor;
    this[S$2.surfaceTintColor$9] = surfaceTintColor;
    this[S$2.forceElevated] = forceElevated;
    this[S$2.backgroundColor$26] = backgroundColor;
    this[S$2.foregroundColor$4] = foregroundColor;
    this[S$2.brightness$4] = brightness;
    this[S$2.iconTheme$5] = iconTheme;
    this[S$2.actionsIconTheme$2] = actionsIconTheme;
    this[S$2.textTheme$5] = textTheme;
    this[S$2.primary$3] = primary;
    this[S$2.centerTitle$3] = centerTitle;
    this[S$2.excludeHeaderSemantics$1] = excludeHeaderSemantics;
    this[S$2.titleSpacing$2] = titleSpacing;
    this[S$2.collapsedHeight] = collapsedHeight;
    this[S$2.expandedHeight] = expandedHeight;
    this[S$2.floating] = floating;
    this[S$2.pinned] = pinned;
    this[S$2.snap] = snap;
    this[S$2.stretch] = stretch;
    this[S$2.stretchTriggerOffset] = stretchTriggerOffset;
    this[S$2.onStretchTrigger] = onStretchTrigger;
    this[S$2.shape$26] = shape;
    this[S$2.toolbarHeight$3] = toolbarHeight;
    this[S$2.leadingWidth$1] = leadingWidth;
    this[S$2.backwardsCompatibility$2] = backwardsCompatibility;
    this[S$2.toolbarTextStyle$2] = toolbarTextStyle;
    this[S$2.titleTextStyle$3] = titleTextStyle;
    this[S$2.systemOverlayStyle$2] = systemOverlayStyle;
    if (!(automaticallyImplyLeading !== null)) dart.assertFailed(null, I[137], 1523, 15, "automaticallyImplyLeading != null");
    if (!(forceElevated !== null)) dart.assertFailed(null, I[137], 1524, 15, "forceElevated != null");
    if (!(primary !== null)) dart.assertFailed(null, I[137], 1525, 15, "primary != null");
    if (!(floating !== null)) dart.assertFailed(null, I[137], 1526, 15, "floating != null");
    if (!(pinned !== null)) dart.assertFailed(null, I[137], 1527, 15, "pinned != null");
    if (!(snap !== null)) dart.assertFailed(null, I[137], 1528, 15, "snap != null");
    if (!(stretch !== null)) dart.assertFailed(null, I[137], 1529, 15, "stretch != null");
    if (!(toolbarHeight !== null)) dart.assertFailed(null, I[137], 1530, 15, "toolbarHeight != null");
    if (!(floating || !snap)) dart.assertFailed("The \"snap\" argument only makes sense for floating app bars.", I[137], 1531, 15, "floating || !snap");
    if (!(stretchTriggerOffset > 0.0)) dart.assertFailed(null, I[137], 1532, 15, "stretchTriggerOffset > 0.0");
    if (!(collapsedHeight == null || dart.notNull(collapsedHeight) >= toolbarHeight)) dart.assertFailed("The \"collapsedHeight\" argument has to be larger than or equal to [toolbarHeight].", I[137], 1533, 15, "collapsedHeight == null || collapsedHeight >= toolbarHeight");
    app_bar.SliverAppBar.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = app_bar.SliverAppBar.prototype;
  dart.addTypeTests(app_bar.SliverAppBar);
  dart.addTypeCaches(app_bar.SliverAppBar);
  dart.setMethodSignature(app_bar.SliverAppBar, () => ({
    __proto__: dart.getMethods(app_bar.SliverAppBar.__proto__),
    createState: dart.fnType(framework.State$(app_bar.SliverAppBar), [])
  }));
  dart.setStaticMethodSignature(app_bar.SliverAppBar, () => ['medium', 'large']);
  dart.setLibraryUri(app_bar.SliverAppBar, I[136]);
  dart.setFieldSignature(app_bar.SliverAppBar, () => ({
    __proto__: dart.getFields(app_bar.SliverAppBar.__proto__),
    leading: dart.finalFieldType(dart.nullable(framework.Widget)),
    automaticallyImplyLeading: dart.finalFieldType(core.bool),
    title: dart.finalFieldType(dart.nullable(framework.Widget)),
    actions: dart.finalFieldType(dart.nullable(core.List$(framework.Widget))),
    flexibleSpace: dart.finalFieldType(dart.nullable(framework.Widget)),
    bottom: dart.finalFieldType(dart.nullable(preferred_size.PreferredSizeWidget)),
    elevation: dart.finalFieldType(dart.nullable(core.double)),
    scrolledUnderElevation: dart.finalFieldType(dart.nullable(core.double)),
    shadowColor: dart.finalFieldType(dart.nullable(ui.Color)),
    surfaceTintColor: dart.finalFieldType(dart.nullable(ui.Color)),
    forceElevated: dart.finalFieldType(core.bool),
    backgroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    foregroundColor: dart.finalFieldType(dart.nullable(ui.Color)),
    brightness: dart.finalFieldType(dart.nullable(ui.Brightness)),
    iconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData)),
    actionsIconTheme: dart.finalFieldType(dart.nullable(icon_theme_data.IconThemeData)),
    textTheme: dart.finalFieldType(dart.nullable(text_theme.TextTheme)),
    primary: dart.finalFieldType(core.bool),
    centerTitle: dart.finalFieldType(dart.nullable(core.bool)),
    excludeHeaderSemantics: dart.finalFieldType(core.bool),
    titleSpacing: dart.finalFieldType(dart.nullable(core.double)),
    collapsedHeight: dart.finalFieldType(dart.nullable(core.double)),
    expandedHeight: dart.finalFieldType(dart.nullable(core.double)),
    floating: dart.finalFieldType(core.bool),
    pinned: dart.finalFieldType(core.bool),
    shape: dart.finalFieldType(dart.nullable(borders.ShapeBorder)),
    snap: dart.finalFieldType(core.bool),
    stretch: dart.finalFieldType(core.bool),
    stretchTriggerOffset: dart.finalFieldType(core.double),
    onStretchTrigger: dart.finalFieldType(dart.nullable(dart.fnType(async.Future$(dart.void), []))),
    toolbarHeight: dart.finalFieldType(core.double),
    leadingWidth: dart.finalFieldType(dart.nullable(core.double)),
    backwardsCompatibility: dart.finalFieldType(dart.nullable(core.bool)),
    toolbarTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    titleTextStyle: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
    systemOverlayStyle: dart.finalFieldType(dart.nullable(system_chrome.SystemUiOverlayStyle))
  }));
  const State_TickerProviderStateMixin$36$7 = class State_TickerProviderStateMixin extends framework.State$(app_bar.SliverAppBar) {};
  (State_TickerProviderStateMixin$36$7.new = function() {
    ticker_provider.TickerProviderStateMixin$(app_bar.SliverAppBar)[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36$7.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36$7.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36$7, ticker_provider.TickerProviderStateMixin$(app_bar.SliverAppBar));
  app_bar._SliverAppBarState = class _SliverAppBarState extends State_TickerProviderStateMixin$36$7 {
    [S$2._updateSnapConfiguration]() {
      if (this.widget.snap && this.widget.floating) {
        this[S$2._snapConfiguration] = new sliver_persistent_header$.FloatingHeaderSnapConfiguration.new({curve: curves.Curves.easeOut, duration: C[160] || CT.C160});
      } else {
        this[S$2._snapConfiguration] = null;
      }
      this[S$2._showOnScreenConfiguration] = !!(this.widget.floating & this.widget.snap) ? C[1122] || CT.C1122 : null;
    }
    [S$2._updateStretchConfiguration]() {
      if (this.widget.stretch) {
        this[S$2._stretchConfiguration] = new sliver_persistent_header$.OverScrollHeaderStretchConfiguration.new({stretchTriggerOffset: this.widget.stretchTriggerOffset, onStretchTrigger: this.widget.onStretchTrigger});
      } else {
        this[S$2._stretchConfiguration] = null;
      }
    }
    initState() {
      super.initState();
      this[S$2._updateSnapConfiguration]();
      this[S$2._updateStretchConfiguration]();
    }
    didUpdateWidget(oldWidget) {
      app_bar.SliverAppBar.as(oldWidget);
      super.didUpdateWidget(oldWidget);
      if (this.widget.snap !== oldWidget.snap || this.widget.floating !== oldWidget.floating) {
        this[S$2._updateSnapConfiguration]();
      }
      if (this.widget.stretch !== oldWidget.stretch) {
        this[S$2._updateStretchConfiguration]();
      }
    }
    build(context) {
      let t109, t109$, t109$0, t109$1;
      if (!(!this.widget.primary || debug.debugCheckHasMediaQuery(context))) dart.assertFailed(null, I[137], 2068, 12, "!widget.primary || debugCheckHasMediaQuery(context)");
      let bottomHeight = (t109$ = (t109 = this.widget.bottom, t109 == null ? null : t109.preferredSize.height), t109$ == null ? 0.0 : t109$);
      let topPadding = this.widget.primary ? media_query.MediaQuery.of(context).padding.top : 0.0;
      let collapsedHeight = this.widget.pinned && this.widget.floating && this.widget.bottom != null ? dart.notNull((t109$0 = this.widget.collapsedHeight, t109$0 == null ? 0.0 : t109$0)) + bottomHeight + topPadding : dart.notNull((t109$1 = this.widget.collapsedHeight, t109$1 == null ? this.widget.toolbarHeight : t109$1)) + bottomHeight + topPadding;
      return media_query.MediaQuery.removePadding({context: context, removeBottom: true, child: new sliver_persistent_header.SliverPersistentHeader.new({floating: this.widget.floating, pinned: this.widget.pinned, delegate: new app_bar._SliverAppBarDelegate.new({vsync: this, leading: this.widget.leading, automaticallyImplyLeading: this.widget.automaticallyImplyLeading, title: this.widget.title, actions: this.widget.actions, flexibleSpace: this.widget.flexibleSpace, bottom: this.widget.bottom, elevation: this.widget.elevation, scrolledUnderElevation: this.widget.scrolledUnderElevation, shadowColor: this.widget.shadowColor, surfaceTintColor: this.widget.surfaceTintColor, forceElevated: this.widget.forceElevated, backgroundColor: this.widget.backgroundColor, foregroundColor: this.widget.foregroundColor, brightness: this.widget.brightness, iconTheme: this.widget.iconTheme, actionsIconTheme: this.widget.actionsIconTheme, textTheme: this.widget.textTheme, primary: this.widget.primary, centerTitle: this.widget.centerTitle, excludeHeaderSemantics: this.widget.excludeHeaderSemantics, titleSpacing: this.widget.titleSpacing, expandedHeight: this.widget.expandedHeight, collapsedHeight: collapsedHeight, topPadding: topPadding, floating: this.widget.floating, pinned: this.widget.pinned, shape: this.widget.shape, snapConfiguration: this[S$2._snapConfiguration], stretchConfiguration: this[S$2._stretchConfiguration], showOnScreenConfiguration: this[S$2._showOnScreenConfiguration], toolbarHeight: this.widget.toolbarHeight, leadingWidth: this.widget.leadingWidth, backwardsCompatibility: this.widget.backwardsCompatibility, toolbarTextStyle: this.widget.toolbarTextStyle, titleTextStyle: this.widget.titleTextStyle, systemOverlayStyle: this.widget.systemOverlayStyle}), $creationLocationd_0dea112b090073317d4: C[1123] || CT.C1123}), $creationLocationd_0dea112b090073317d4: C[1124] || CT.C1124});
    }
    static ['_#new#tearOff']() {
      return new app_bar._SliverAppBarState.new();
    }
  };
  (app_bar._SliverAppBarState.new = function() {
    this[S$2._snapConfiguration] = null;
    this[S$2._stretchConfiguration] = null;
    this[S$2._showOnScreenConfiguration] = null;
    app_bar._SliverAppBarState.__proto__.new.call(this);
    ;
  }).prototype = app_bar._SliverAppBarState.prototype;
  dart.addTypeTests(app_bar._SliverAppBarState);
  dart.addTypeCaches(app_bar._SliverAppBarState);
  dart.setMethodSignature(app_bar._SliverAppBarState, () => ({
    __proto__: dart.getMethods(app_bar._SliverAppBarState.__proto__),
    [S$2._updateSnapConfiguration]: dart.fnType(dart.void, []),
    [S$2._updateStretchConfiguration]: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(app_bar._SliverAppBarState, I[136]);
  dart.setFieldSignature(app_bar._SliverAppBarState, () => ({
    __proto__: dart.getFields(app_bar._SliverAppBarState.__proto__),
    [S$2._snapConfiguration]: dart.fieldType(dart.nullable(sliver_persistent_header$.FloatingHeaderSnapConfiguration)),
    [S$2._stretchConfiguration]: dart.fieldType(dart.nullable(sliver_persistent_header$.OverScrollHeaderStretchConfiguration)),
    [S$2._showOnScreenConfiguration]: dart.fieldType(dart.nullable(sliver_persistent_header$.PersistentHeaderShowOnScreenConfiguration))
  }));
  app_bar._AppBarTitleBox = class _AppBarTitleBox extends framework.SingleChildRenderObjectWidget {
    static ['_#new#tearOff'](opts) {
      let child = opts && 'child' in opts ? opts.child : null;
      return new app_bar._AppBarTitleBox.new({child: child, $creationLocationd_0dea112b090073317d4: C[1125] || CT.C1125});
    }
    createRenderObject(context) {
      return new app_bar._RenderAppBarTitleBox.new({textDirection: basic.Directionality.of(context)});
    }
    updateRenderObject(context, renderObject) {
      app_bar._RenderAppBarTitleBox.as(renderObject);
      renderObject.textDirection = basic.Directionality.of(context);
    }
  };
  (app_bar._AppBarTitleBox.new = function(opts) {
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    if (!(child !== null)) dart.assertFailed(null, I[137], 2129, 67, "child != null");
    app_bar._AppBarTitleBox.__proto__.new.call(this, {child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = app_bar._AppBarTitleBox.prototype;
  dart.addTypeTests(app_bar._AppBarTitleBox);
  dart.addTypeCaches(app_bar._AppBarTitleBox);
  dart.setMethodSignature(app_bar._AppBarTitleBox, () => ({
    __proto__: dart.getMethods(app_bar._AppBarTitleBox.__proto__),
    createRenderObject: dart.fnType(app_bar._RenderAppBarTitleBox, [framework.BuildContext])
  }));
  dart.setLibraryUri(app_bar._AppBarTitleBox, I[136]);
  app_bar._RenderAppBarTitleBox = class _RenderAppBarTitleBox extends shifted_box.RenderAligningShiftedBox {
    static ['_#new#tearOff'](opts) {
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      return new app_bar._RenderAppBarTitleBox.new({textDirection: textDirection});
    }
    computeDryLayout(constraints) {
      let innerConstraints = constraints.copyWith({maxHeight: 1 / 0});
      let childSize = dart.nullCheck(this.child).getDryLayout(innerConstraints);
      return constraints.constrain(childSize);
    }
    performLayout() {
      let innerConstraints = this.constraints.copyWith({maxHeight: 1 / 0});
      dart.nullCheck(this.child).layout(innerConstraints, {parentUsesSize: true});
      this.size = this.constraints.constrain(dart.nullCheck(this.child).size);
      this.alignChild();
    }
  };
  (app_bar._RenderAppBarTitleBox.new = function(opts) {
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    app_bar._RenderAppBarTitleBox.__proto__.new.call(this, {alignment: alignment.Alignment.center, textDirection: textDirection});
    ;
  }).prototype = app_bar._RenderAppBarTitleBox.prototype;
  dart.addTypeTests(app_bar._RenderAppBarTitleBox);
  dart.addTypeCaches(app_bar._RenderAppBarTitleBox);
  dart.setLibraryUri(app_bar._RenderAppBarTitleBox, I[136]);
  app_bar._ScrollUnderFlexibleVariant = class _ScrollUnderFlexibleVariant extends core._Enum {
    toString() {
      return "_ScrollUnderFlexibleVariant." + this[S._name];
    }
  };
  (app_bar._ScrollUnderFlexibleVariant.new = function(index, name) {
    app_bar._ScrollUnderFlexibleVariant.__proto__.new.call(this, index, name);
    ;
  }).prototype = app_bar._ScrollUnderFlexibleVariant.prototype;
  dart.addTypeTests(app_bar._ScrollUnderFlexibleVariant);
  dart.addTypeCaches(app_bar._ScrollUnderFlexibleVariant);
  dart.setLibraryUri(app_bar._ScrollUnderFlexibleVariant, I[136]);
  dart.setStaticFieldSignature(app_bar._ScrollUnderFlexibleVariant, () => ['values', 'medium', 'large']);
  dart.defineExtensionMethods(app_bar._ScrollUnderFlexibleVariant, ['toString']);
  dart.defineLazy(app_bar._ScrollUnderFlexibleVariant, {
    /*app_bar._ScrollUnderFlexibleVariant.values*/get values() {
      return C[1126] || CT.C1126;
    },
    /*app_bar._ScrollUnderFlexibleVariant.medium*/get medium() {
      return C[1127] || CT.C1127;
    },
    /*app_bar._ScrollUnderFlexibleVariant.large*/get large() {
      return C[1128] || CT.C1128;
    }
  }, false);
  app_bar._ScrollUnderFlexibleSpace = class _ScrollUnderFlexibleSpace extends framework.StatefulWidget {
    get title() {
      return this[S$2.title$5];
    }
    set title(value) {
      super.title = value;
    }
    get variant() {
      return this[S$2.variant];
    }
    set variant(value) {
      super.variant = value;
    }
    get centerCollapsedTitle() {
      return this[S$2.centerCollapsedTitle];
    }
    set centerCollapsedTitle(value) {
      super.centerCollapsedTitle = value;
    }
    get primary() {
      return this[S$2.primary$4];
    }
    set primary(value) {
      super.primary = value;
    }
    static ['_#new#tearOff'](opts) {
      let title = opts && 'title' in opts ? opts.title : null;
      let variant = opts && 'variant' in opts ? opts.variant : null;
      let centerCollapsedTitle = opts && 'centerCollapsedTitle' in opts ? opts.centerCollapsedTitle : null;
      let primary = opts && 'primary' in opts ? opts.primary : true;
      return new app_bar._ScrollUnderFlexibleSpace.new({title: title, variant: variant, centerCollapsedTitle: centerCollapsedTitle, primary: primary, $creationLocationd_0dea112b090073317d4: C[1129] || CT.C1129});
    }
    createState() {
      return new app_bar._ScrollUnderFlexibleSpaceState.new();
    }
  };
  (app_bar._ScrollUnderFlexibleSpace.new = function(opts) {
    let title = opts && 'title' in opts ? opts.title : null;
    let variant = opts && 'variant' in opts ? opts.variant : null;
    let centerCollapsedTitle = opts && 'centerCollapsedTitle' in opts ? opts.centerCollapsedTitle : null;
    let primary = opts && 'primary' in opts ? opts.primary : true;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[S$2.title$5] = title;
    this[S$2.variant] = variant;
    this[S$2.centerCollapsedTitle] = centerCollapsedTitle;
    this[S$2.primary$4] = primary;
    app_bar._ScrollUnderFlexibleSpace.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = app_bar._ScrollUnderFlexibleSpace.prototype;
  dart.addTypeTests(app_bar._ScrollUnderFlexibleSpace);
  dart.addTypeCaches(app_bar._ScrollUnderFlexibleSpace);
  dart.setMethodSignature(app_bar._ScrollUnderFlexibleSpace, () => ({
    __proto__: dart.getMethods(app_bar._ScrollUnderFlexibleSpace.__proto__),
    createState: dart.fnType(framework.State$(app_bar._ScrollUnderFlexibleSpace), [])
  }));
  dart.setLibraryUri(app_bar._ScrollUnderFlexibleSpace, I[136]);
  dart.setFieldSignature(app_bar._ScrollUnderFlexibleSpace, () => ({
    __proto__: dart.getFields(app_bar._ScrollUnderFlexibleSpace.__proto__),
    title: dart.finalFieldType(dart.nullable(framework.Widget)),
    variant: dart.finalFieldType(app_bar._ScrollUnderFlexibleVariant),
    centerCollapsedTitle: dart.finalFieldType(dart.nullable(core.bool)),
    primary: dart.finalFieldType(core.bool)
  }));
  app_bar._ScrollUnderFlexibleSpaceState = class _ScrollUnderFlexibleSpaceState extends framework.State$(app_bar._ScrollUnderFlexibleSpace) {
    build(context) {
      let t124, t124$, t124$0;
      let theme = null;
      function theme$35get() {
        let t113, t112;
        t112 = theme;
        return t112 == null ? (t113 = theme$.Theme.of(context), theme == null ? theme = t113 : dart.throw(new _internal.LateError.localADI("theme"))) : t112;
      }
      dart.fn(theme$35get, T$.VoidToThemeData());
      let settings = dart.nullCheck(context.dependOnInheritedWidgetOfExactType(flexible_space_bar.FlexibleSpaceBarSettings));
      let topPadding = this.widget.primary ? media_query.MediaQuery.of(context).viewPadding.top : 0.0;
      let collapsedHeight = settings.minExtent - topPadding;
      let scrollUnderHeight = settings.maxExtent - settings.minExtent;
      let config = null;
      switch (this.widget.variant) {
        case C[1127] || CT.C1127:
          {
            config = new app_bar._MediumScrollUnderFlexibleConfig.new(context);
            break;
          }
        case C[1128] || CT.C1128:
          {
            config = new app_bar._LargeScrollUnderFlexibleConfig.new(context);
            break;
          }
      }
      let collapsedTitle = null;
      let collapsedTitle$35isSet = false;
      function collapsedTitle$35get() {
        return collapsedTitle$35isSet ? collapsedTitle : dart.throw(new _internal.LateError.localNI("collapsedTitle"));
      }
      dart.fn(collapsedTitle$35get, T$.VoidToWidgetN());
      function collapsedTitle$35set(collapsedTitle$35param) {
        if (collapsedTitle$35isSet)
          dart.throw(new _internal.LateError.localAI("collapsedTitle"));
        else {
          collapsedTitle$35isSet = true;
          return collapsedTitle = collapsedTitle$35param;
        }
      }
      dart.fn(collapsedTitle$35set, T$.WidgetNTodynamic());
      let expandedTitle = null;
      let expandedTitle$35isSet = false;
      function expandedTitle$35get() {
        return expandedTitle$35isSet ? expandedTitle : dart.throw(new _internal.LateError.localNI("expandedTitle"));
      }
      dart.fn(expandedTitle$35get, T$.VoidToWidgetN());
      function expandedTitle$35set(expandedTitle$35param) {
        if (expandedTitle$35isSet)
          dart.throw(new _internal.LateError.localAI("expandedTitle"));
        else {
          expandedTitle$35isSet = true;
          return expandedTitle = expandedTitle$35param;
        }
      }
      dart.fn(expandedTitle$35set, T$.WidgetNTodynamic());
      if (this.widget.title != null) {
        collapsedTitle$35set(config.collapsedTextStyle != null ? new text$.DefaultTextStyle.new({style: dart.nullCheck(config.collapsedTextStyle), child: dart.nullCheck(this.widget.title), $creationLocationd_0dea112b090073317d4: C[1130] || CT.C1130}) : this.widget.title);
        expandedTitle$35set(config.expandedTextStyle != null ? new text$.DefaultTextStyle.new({style: dart.nullCheck(config.expandedTextStyle), child: dart.nullCheck(this.widget.title), $creationLocationd_0dea112b090073317d4: C[1131] || CT.C1131}) : this.widget.title);
      }
      let centerTitle = null;
      function centerTitle$35get() {
        let t122;
        t122 = centerTitle;
        return t122 == null ? dart.throw(new _internal.LateError.localNI("centerTitle")) : t122;
      }
      dart.fn(centerTitle$35get, T$.VoidTobool());
      function centerTitle$35set(centerTitle$35param) {
        if (centerTitle == null)
          return centerTitle = centerTitle$35param;
        else
          dart.throw(new _internal.LateError.localAI("centerTitle"));
      }
      dart.fn(centerTitle$35set, T$.boolTodynamic());
      {
        function platformCenter() {
          if (!(theme$35get().platform !== null)) dart.assertFailed(null, I[137], 2222, 16, "theme.platform != null");
          switch (theme$35get().platform) {
            case C[29] || CT.C29:
            case C[30] || CT.C30:
            case C[31] || CT.C31:
            case C[32] || CT.C32:
              {
                return false;
              }
            case C[33] || CT.C33:
            case C[34] || CT.C34:
              {
                return true;
              }
          }
        }
        dart.fn(platformCenter, T$.VoidTobool());
        centerTitle$35set((t124$ = (t124 = this.widget.centerCollapsedTitle, t124 == null ? theme$35get().appBarTheme.centerTitle : t124), t124$ == null ? platformCenter() : t124$));
      }
      let isCollapsed = (t124$0 = settings.isScrolledUnder, t124$0 == null ? false : t124$0);
      return new basic.Column.new({children: T$.JSArrayOfWidget().of([new basic.Padding.new({padding: new edge_insets.EdgeInsets.only({top: topPadding}), child: new container.Container.new({height: collapsedHeight, padding: centerTitle$35get() ? config.collapsedCenteredTitlePadding : config.collapsedTitlePadding, child: new implicit_animations.AnimatedOpacity.new({opacity: isCollapsed ? 1.0 : 0.0, duration: C[436] || CT.C436, curve: C[339] || CT.C339, child: new basic.Align.new({alignment: centerTitle$35get() ? alignment.Alignment.center : alignment.AlignmentDirectional.centerStart, child: collapsedTitle$35get(), $creationLocationd_0dea112b090073317d4: C[1132] || CT.C1132}), $creationLocationd_0dea112b090073317d4: C[1133] || CT.C1133}), $creationLocationd_0dea112b090073317d4: C[1134] || CT.C1134}), $creationLocationd_0dea112b090073317d4: C[1135] || CT.C1135}), new basic.Flexible.new({child: new basic.ClipRect.new({child: new basic.OverflowBox.new({minHeight: scrollUnderHeight, maxHeight: scrollUnderHeight, alignment: alignment.Alignment.bottomLeft, child: new container.Container.new({alignment: alignment.AlignmentDirectional.bottomStart, padding: config.expandedTitlePadding, child: expandedTitle$35get(), $creationLocationd_0dea112b090073317d4: C[1136] || CT.C1136}), $creationLocationd_0dea112b090073317d4: C[1137] || CT.C1137}), $creationLocationd_0dea112b090073317d4: C[1138] || CT.C1138}), $creationLocationd_0dea112b090073317d4: C[1139] || CT.C1139})]), $creationLocationd_0dea112b090073317d4: C[1140] || CT.C1140});
    }
    static ['_#new#tearOff']() {
      return new app_bar._ScrollUnderFlexibleSpaceState.new();
    }
  };
  (app_bar._ScrollUnderFlexibleSpaceState.new = function() {
    app_bar._ScrollUnderFlexibleSpaceState.__proto__.new.call(this);
    ;
  }).prototype = app_bar._ScrollUnderFlexibleSpaceState.prototype;
  dart.addTypeTests(app_bar._ScrollUnderFlexibleSpaceState);
  dart.addTypeCaches(app_bar._ScrollUnderFlexibleSpaceState);
  dart.setMethodSignature(app_bar._ScrollUnderFlexibleSpaceState, () => ({
    __proto__: dart.getMethods(app_bar._ScrollUnderFlexibleSpaceState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(app_bar._ScrollUnderFlexibleSpaceState, I[136]);
  app_bar._ScrollUnderFlexibleConfig = class _ScrollUnderFlexibleConfig extends core.Object {};
  app_bar._ScrollUnderFlexibleConfig[dart.mixinOn] = Object => class _ScrollUnderFlexibleConfig extends Object {};
  (app_bar._ScrollUnderFlexibleConfig[dart.mixinNew] = function() {
  }).prototype = app_bar._ScrollUnderFlexibleConfig.prototype;
  dart.addTypeTests(app_bar._ScrollUnderFlexibleConfig);
  dart.addTypeCaches(app_bar._ScrollUnderFlexibleConfig);
  app_bar._ScrollUnderFlexibleConfig[dart.implements] = () => [core.Object];
  dart.setLibraryUri(app_bar._ScrollUnderFlexibleConfig, I[136]);
  app_bar._AppBarDefaultsM2 = class _AppBarDefaultsM2 extends app_bar_theme.AppBarTheme {
    static ['_#new#tearOff'](context) {
      return new app_bar._AppBarDefaultsM2.new(context);
    }
    get [S$2._theme$3]() {
      let t125, t124;
      t124 = this[S$2.___AppBarDefaultsM2__theme];
      return t124 == null ? (t125 = theme$.Theme.of(this.context), this[S$2.___AppBarDefaultsM2__theme] == null ? this[S$2.___AppBarDefaultsM2__theme] = t125 : dart.throw(new _internal.LateError.fieldADI("_theme"))) : t124;
    }
    get [S$2._colors$5]() {
      let t125, t124;
      t124 = this[S$2.___AppBarDefaultsM2__colors];
      return t124 == null ? (t125 = this[S$2._theme$3].colorScheme, this[S$2.___AppBarDefaultsM2__colors] == null ? this[S$2.___AppBarDefaultsM2__colors] = t125 : dart.throw(new _internal.LateError.fieldADI("_colors"))) : t124;
    }
    get backgroundColor() {
      return this[S$2._colors$5].brightness === ui.Brightness.dark ? this[S$2._colors$5].surface : this[S$2._colors$5].primary;
    }
    get foregroundColor() {
      return this[S$2._colors$5].brightness === ui.Brightness.dark ? this[S$2._colors$5].onSurface : this[S$2._colors$5].onPrimary;
    }
    get iconTheme() {
      return this[S$2._theme$3].iconTheme;
    }
    get toolbarTextStyle() {
      return this[S$2._theme$3].textTheme.bodyText2;
    }
    get titleTextStyle() {
      return this[S$2._theme$3].textTheme.headline6;
    }
  };
  (app_bar._AppBarDefaultsM2.new = function(context) {
    this[S$2.___AppBarDefaultsM2__theme] = null;
    this[S$2.___AppBarDefaultsM2__colors] = null;
    this.context = context;
    app_bar._AppBarDefaultsM2.__proto__.new.call(this, {elevation: 4.0, shadowColor: C[21] || CT.C21, titleSpacing: 16, toolbarHeight: 56});
    ;
  }).prototype = app_bar._AppBarDefaultsM2.prototype;
  dart.addTypeTests(app_bar._AppBarDefaultsM2);
  dart.addTypeCaches(app_bar._AppBarDefaultsM2);
  dart.setGetterSignature(app_bar._AppBarDefaultsM2, () => ({
    __proto__: dart.getGetters(app_bar._AppBarDefaultsM2.__proto__),
    [S$2._theme$3]: theme_data.ThemeData,
    [S$2._colors$5]: color_scheme.ColorScheme,
    backgroundColor: dart.nullable(ui.Color),
    foregroundColor: dart.nullable(ui.Color),
    iconTheme: dart.nullable(icon_theme_data.IconThemeData),
    toolbarTextStyle: dart.nullable(text_style.TextStyle),
    titleTextStyle: dart.nullable(text_style.TextStyle)
  }));
  dart.setLibraryUri(app_bar._AppBarDefaultsM2, I[136]);
  dart.setFieldSignature(app_bar._AppBarDefaultsM2, () => ({
    __proto__: dart.getFields(app_bar._AppBarDefaultsM2.__proto__),
    context: dart.finalFieldType(framework.BuildContext),
    [S$2.___AppBarDefaultsM2__theme]: dart.fieldType(dart.nullable(theme_data.ThemeData)),
    [S$2.___AppBarDefaultsM2__colors]: dart.fieldType(dart.nullable(color_scheme.ColorScheme))
  }));
  app_bar._AppBarDefaultsM3 = class _AppBarDefaultsM3 extends app_bar_theme.AppBarTheme {
    static ['_#new#tearOff'](context) {
      return new app_bar._AppBarDefaultsM3.new(context);
    }
    get [S$2._theme$3]() {
      let t125, t124;
      t124 = this[S$2.___AppBarDefaultsM3__theme];
      return t124 == null ? (t125 = theme$.Theme.of(this.context), this[S$2.___AppBarDefaultsM3__theme] == null ? this[S$2.___AppBarDefaultsM3__theme] = t125 : dart.throw(new _internal.LateError.fieldADI("_theme"))) : t124;
    }
    get [S$2._colors$5]() {
      let t125, t124;
      t124 = this[S$2.___AppBarDefaultsM3__colors];
      return t124 == null ? (t125 = this[S$2._theme$3].colorScheme, this[S$2.___AppBarDefaultsM3__colors] == null ? this[S$2.___AppBarDefaultsM3__colors] = t125 : dart.throw(new _internal.LateError.fieldADI("_colors"))) : t124;
    }
    get [S$2._textTheme$3]() {
      let t125, t124;
      t124 = this[S$2.___AppBarDefaultsM3__textTheme];
      return t124 == null ? (t125 = this[S$2._theme$3].textTheme, this[S$2.___AppBarDefaultsM3__textTheme] == null ? this[S$2.___AppBarDefaultsM3__textTheme] = t125 : dart.throw(new _internal.LateError.fieldADI("_textTheme"))) : t124;
    }
    get backgroundColor() {
      return this[S$2._colors$5].surface;
    }
    get foregroundColor() {
      return this[S$2._colors$5].onSurface;
    }
    get surfaceTintColor() {
      return this[S$2._colors$5].surfaceTint;
    }
    get iconTheme() {
      return new icon_theme_data.IconThemeData.new({color: this[S$2._colors$5].onSurface, size: 24.0});
    }
    get actionsIconTheme() {
      return new icon_theme_data.IconThemeData.new({color: this[S$2._colors$5].onSurfaceVariant, size: 24.0});
    }
    get toolbarTextStyle() {
      return this[S$2._textTheme$3].bodyText2;
    }
    get titleTextStyle() {
      return this[S$2._textTheme$3].titleLarge;
    }
  };
  (app_bar._AppBarDefaultsM3.new = function(context) {
    this[S$2.___AppBarDefaultsM3__theme] = null;
    this[S$2.___AppBarDefaultsM3__colors] = null;
    this[S$2.___AppBarDefaultsM3__textTheme] = null;
    this.context = context;
    app_bar._AppBarDefaultsM3.__proto__.new.call(this, {elevation: 0.0, scrolledUnderElevation: 3.0, titleSpacing: 16, toolbarHeight: 64.0});
    ;
  }).prototype = app_bar._AppBarDefaultsM3.prototype;
  dart.addTypeTests(app_bar._AppBarDefaultsM3);
  dart.addTypeCaches(app_bar._AppBarDefaultsM3);
  dart.setGetterSignature(app_bar._AppBarDefaultsM3, () => ({
    __proto__: dart.getGetters(app_bar._AppBarDefaultsM3.__proto__),
    [S$2._theme$3]: theme_data.ThemeData,
    [S$2._colors$5]: color_scheme.ColorScheme,
    [S$2._textTheme$3]: text_theme.TextTheme,
    backgroundColor: dart.nullable(ui.Color),
    foregroundColor: dart.nullable(ui.Color),
    surfaceTintColor: dart.nullable(ui.Color),
    iconTheme: dart.nullable(icon_theme_data.IconThemeData),
    actionsIconTheme: dart.nullable(icon_theme_data.IconThemeData),
    toolbarTextStyle: dart.nullable(text_style.TextStyle),
    titleTextStyle: dart.nullable(text_style.TextStyle)
  }));
  dart.setLibraryUri(app_bar._AppBarDefaultsM3, I[136]);
  dart.setFieldSignature(app_bar._AppBarDefaultsM3, () => ({
    __proto__: dart.getFields(app_bar._AppBarDefaultsM3.__proto__),
    context: dart.finalFieldType(framework.BuildContext),
    [S$2.___AppBarDefaultsM3__theme]: dart.fieldType(dart.nullable(theme_data.ThemeData)),
    [S$2.___AppBarDefaultsM3__colors]: dart.fieldType(dart.nullable(color_scheme.ColorScheme)),
    [S$2.___AppBarDefaultsM3__textTheme]: dart.fieldType(dart.nullable(text_theme.TextTheme))
  }));
  const Object__ScrollUnderFlexibleConfig$36 = class Object__ScrollUnderFlexibleConfig extends core.Object {};
  (Object__ScrollUnderFlexibleConfig$36.new = function() {
  }).prototype = Object__ScrollUnderFlexibleConfig$36.prototype;
  dart.applyMixin(Object__ScrollUnderFlexibleConfig$36, app_bar._ScrollUnderFlexibleConfig);
  app_bar._MediumScrollUnderFlexibleConfig = class _MediumScrollUnderFlexibleConfig extends Object__ScrollUnderFlexibleConfig$36 {
    static ['_#new#tearOff'](context) {
      return new app_bar._MediumScrollUnderFlexibleConfig.new(context);
    }
    get [S$2._theme$3]() {
      let t125, t124;
      t124 = this[S$2.___MediumScrollUnderFlexibleConfig__theme];
      return t124 == null ? (t125 = theme$.Theme.of(this.context), this[S$2.___MediumScrollUnderFlexibleConfig__theme] == null ? this[S$2.___MediumScrollUnderFlexibleConfig__theme] = t125 : dart.throw(new _internal.LateError.fieldADI("_theme"))) : t124;
    }
    get [S$2._colors$5]() {
      let t125, t124;
      t124 = this[S$2.___MediumScrollUnderFlexibleConfig__colors];
      return t124 == null ? (t125 = this[S$2._theme$3].colorScheme, this[S$2.___MediumScrollUnderFlexibleConfig__colors] == null ? this[S$2.___MediumScrollUnderFlexibleConfig__colors] = t125 : dart.throw(new _internal.LateError.fieldADI("_colors"))) : t124;
    }
    get [S$2._textTheme$3]() {
      let t125, t124;
      t124 = this[S$2.___MediumScrollUnderFlexibleConfig__textTheme];
      return t124 == null ? (t125 = this[S$2._theme$3].textTheme, this[S$2.___MediumScrollUnderFlexibleConfig__textTheme] == null ? this[S$2.___MediumScrollUnderFlexibleConfig__textTheme] = t125 : dart.throw(new _internal.LateError.fieldADI("_textTheme"))) : t124;
    }
    get collapsedTextStyle() {
      let t124;
      t124 = this[S$2._textTheme$3].titleLarge;
      return t124 == null ? null : t124.apply({color: this[S$2._colors$5].onSurface});
    }
    get expandedTextStyle() {
      let t124;
      t124 = this[S$2._textTheme$3].headlineSmall;
      return t124 == null ? null : t124.apply({color: this[S$2._colors$5].onSurface});
    }
    get collapsedTitlePadding() {
      return C[1141] || CT.C1141;
    }
    get collapsedCenteredTitlePadding() {
      return C[656] || CT.C656;
    }
    get expandedTitlePadding() {
      return C[1142] || CT.C1142;
    }
  };
  (app_bar._MediumScrollUnderFlexibleConfig.new = function(context) {
    this[S$2.___MediumScrollUnderFlexibleConfig__theme] = null;
    this[S$2.___MediumScrollUnderFlexibleConfig__colors] = null;
    this[S$2.___MediumScrollUnderFlexibleConfig__textTheme] = null;
    this.context = context;
    ;
  }).prototype = app_bar._MediumScrollUnderFlexibleConfig.prototype;
  dart.addTypeTests(app_bar._MediumScrollUnderFlexibleConfig);
  dart.addTypeCaches(app_bar._MediumScrollUnderFlexibleConfig);
  dart.setGetterSignature(app_bar._MediumScrollUnderFlexibleConfig, () => ({
    __proto__: dart.getGetters(app_bar._MediumScrollUnderFlexibleConfig.__proto__),
    [S$2._theme$3]: theme_data.ThemeData,
    [S$2._colors$5]: color_scheme.ColorScheme,
    [S$2._textTheme$3]: text_theme.TextTheme,
    collapsedTextStyle: dart.nullable(text_style.TextStyle),
    expandedTextStyle: dart.nullable(text_style.TextStyle),
    collapsedTitlePadding: dart.nullable(edge_insets.EdgeInsetsGeometry),
    collapsedCenteredTitlePadding: dart.nullable(edge_insets.EdgeInsetsGeometry),
    expandedTitlePadding: dart.nullable(edge_insets.EdgeInsetsGeometry)
  }));
  dart.setLibraryUri(app_bar._MediumScrollUnderFlexibleConfig, I[136]);
  dart.setFieldSignature(app_bar._MediumScrollUnderFlexibleConfig, () => ({
    __proto__: dart.getFields(app_bar._MediumScrollUnderFlexibleConfig.__proto__),
    context: dart.finalFieldType(framework.BuildContext),
    [S$2.___MediumScrollUnderFlexibleConfig__theme]: dart.fieldType(dart.nullable(theme_data.ThemeData)),
    [S$2.___MediumScrollUnderFlexibleConfig__colors]: dart.fieldType(dart.nullable(color_scheme.ColorScheme)),
    [S$2.___MediumScrollUnderFlexibleConfig__textTheme]: dart.fieldType(dart.nullable(text_theme.TextTheme))
  }));
  dart.setStaticFieldSignature(app_bar._MediumScrollUnderFlexibleConfig, () => ['collapsedHeight', 'expandedHeight']);
  dart.defineLazy(app_bar._MediumScrollUnderFlexibleConfig, {
    /*app_bar._MediumScrollUnderFlexibleConfig.collapsedHeight*/get collapsedHeight() {
      return 64;
    },
    /*app_bar._MediumScrollUnderFlexibleConfig.expandedHeight*/get expandedHeight() {
      return 112;
    }
  }, false);
  const Object__ScrollUnderFlexibleConfig$36$ = class Object__ScrollUnderFlexibleConfig extends core.Object {};
  (Object__ScrollUnderFlexibleConfig$36$.new = function() {
  }).prototype = Object__ScrollUnderFlexibleConfig$36$.prototype;
  dart.applyMixin(Object__ScrollUnderFlexibleConfig$36$, app_bar._ScrollUnderFlexibleConfig);
  app_bar._LargeScrollUnderFlexibleConfig = class _LargeScrollUnderFlexibleConfig extends Object__ScrollUnderFlexibleConfig$36$ {
    static ['_#new#tearOff'](context) {
      return new app_bar._LargeScrollUnderFlexibleConfig.new(context);
    }
    get [S$2._theme$3]() {
      let t125, t124;
      t124 = this[S$2.___LargeScrollUnderFlexibleConfig__theme];
      return t124 == null ? (t125 = theme$.Theme.of(this.context), this[S$2.___LargeScrollUnderFlexibleConfig__theme] == null ? this[S$2.___LargeScrollUnderFlexibleConfig__theme] = t125 : dart.throw(new _internal.LateError.fieldADI("_theme"))) : t124;
    }
    get [S$2._colors$5]() {
      let t125, t124;
      t124 = this[S$2.___LargeScrollUnderFlexibleConfig__colors];
      return t124 == null ? (t125 = this[S$2._theme$3].colorScheme, this[S$2.___LargeScrollUnderFlexibleConfig__colors] == null ? this[S$2.___LargeScrollUnderFlexibleConfig__colors] = t125 : dart.throw(new _internal.LateError.fieldADI("_colors"))) : t124;
    }
    get [S$2._textTheme$3]() {
      let t125, t124;
      t124 = this[S$2.___LargeScrollUnderFlexibleConfig__textTheme];
      return t124 == null ? (t125 = this[S$2._theme$3].textTheme, this[S$2.___LargeScrollUnderFlexibleConfig__textTheme] == null ? this[S$2.___LargeScrollUnderFlexibleConfig__textTheme] = t125 : dart.throw(new _internal.LateError.fieldADI("_textTheme"))) : t124;
    }
    get collapsedTextStyle() {
      let t124;
      t124 = this[S$2._textTheme$3].titleLarge;
      return t124 == null ? null : t124.apply({color: this[S$2._colors$5].onSurface});
    }
    get expandedTextStyle() {
      let t124;
      t124 = this[S$2._textTheme$3].headlineMedium;
      return t124 == null ? null : t124.apply({color: this[S$2._colors$5].onSurface});
    }
    get collapsedTitlePadding() {
      return C[1141] || CT.C1141;
    }
    get collapsedCenteredTitlePadding() {
      return C[656] || CT.C656;
    }
    get expandedTitlePadding() {
      return C[1143] || CT.C1143;
    }
  };
  (app_bar._LargeScrollUnderFlexibleConfig.new = function(context) {
    this[S$2.___LargeScrollUnderFlexibleConfig__theme] = null;
    this[S$2.___LargeScrollUnderFlexibleConfig__colors] = null;
    this[S$2.___LargeScrollUnderFlexibleConfig__textTheme] = null;
    this.context = context;
    ;
  }).prototype = app_bar._LargeScrollUnderFlexibleConfig.prototype;
  dart.addTypeTests(app_bar._LargeScrollUnderFlexibleConfig);
  dart.addTypeCaches(app_bar._LargeScrollUnderFlexibleConfig);
  dart.setGetterSignature(app_bar._LargeScrollUnderFlexibleConfig, () => ({
    __proto__: dart.getGetters(app_bar._LargeScrollUnderFlexibleConfig.__proto__),
    [S$2._theme$3]: theme_data.ThemeData,
    [S$2._colors$5]: color_scheme.ColorScheme,
    [S$2._textTheme$3]: text_theme.TextTheme,
    collapsedTextStyle: dart.nullable(text_style.TextStyle),
    expandedTextStyle: dart.nullable(text_style.TextStyle),
    collapsedTitlePadding: dart.nullable(edge_insets.EdgeInsetsGeometry),
    collapsedCenteredTitlePadding: dart.nullable(edge_insets.EdgeInsetsGeometry),
    expandedTitlePadding: dart.nullable(edge_insets.EdgeInsetsGeometry)
  }));
  dart.setLibraryUri(app_bar._LargeScrollUnderFlexibleConfig, I[136]);
  dart.setFieldSignature(app_bar._LargeScrollUnderFlexibleConfig, () => ({
    __proto__: dart.getFields(app_bar._LargeScrollUnderFlexibleConfig.__proto__),
    context: dart.finalFieldType(framework.BuildContext),
    [S$2.___LargeScrollUnderFlexibleConfig__theme]: dart.fieldType(dart.nullable(theme_data.ThemeData)),
    [S$2.___LargeScrollUnderFlexibleConfig__colors]: dart.fieldType(dart.nullable(color_scheme.ColorScheme)),
    [S$2.___LargeScrollUnderFlexibleConfig__textTheme]: dart.fieldType(dart.nullable(text_theme.TextTheme))
  }));
  dart.setStaticFieldSignature(app_bar._LargeScrollUnderFlexibleConfig, () => ['collapsedHeight', 'expandedHeight']);
  dart.defineLazy(app_bar._LargeScrollUnderFlexibleConfig, {
    /*app_bar._LargeScrollUnderFlexibleConfig.collapsedHeight*/get collapsedHeight() {
      return 64;
    },
    /*app_bar._LargeScrollUnderFlexibleConfig.expandedHeight*/get expandedHeight() {
      return 152;
    }
  }, false);
  dart.defineLazy(app_bar, {
    /*app_bar._kLeadingWidth*/get _kLeadingWidth() {
      return 56;
    },
    /*app_bar._kMaxTitleTextScaleFactor*/get _kMaxTitleTextScaleFactor() {
      return 1.34;
    }
  }, false);
  dart.trackLibraries("packages/flutter/src/material/icon_button.dart", {
    "package:flutter/src/material/icon_button.dart": icon_button,
    "package:flutter/src/material/back_button.dart": back_button,
    "package:flutter/src/material/time.dart": time$,
    "package:flutter/src/material/button_style_button.dart": button_style_button,
    "package:flutter/src/material/text_button.dart": text_button,
    "package:flutter/src/material/snack_bar.dart": snack_bar,
    "package:flutter/src/material/floating_action_button_location.dart": floating_action_button_location,
    "package:flutter/src/material/floating_action_button.dart": floating_action_button,
    "package:flutter/src/material/flexible_space_bar.dart": flexible_space_bar,
    "package:flutter/src/material/toggle_buttons_theme.dart": toggle_buttons_theme,
    "package:flutter/src/material/time_picker_theme.dart": time_picker_theme,
    "package:flutter/src/material/text_selection_theme.dart": text_selection_theme,
    "package:flutter/src/material/text_button_theme.dart": text_button_theme,
    "package:flutter/src/material/tabs.dart": tabs$,
    "package:flutter/src/material/tab_bar_theme.dart": tab_bar_theme,
    "package:flutter/src/material/switch_theme.dart": switch_theme,
    "package:flutter/src/material/snack_bar_theme.dart": snack_bar_theme,
    "package:flutter/src/material/slider_theme.dart": slider_theme,
    "package:flutter/src/material/scrollbar_theme.dart": scrollbar_theme,
    "package:flutter/src/material/radio_theme.dart": radio_theme,
    "package:flutter/src/material/progress_indicator_theme.dart": progress_indicator_theme,
    "package:flutter/src/material/popup_menu_theme.dart": popup_menu_theme,
    "package:flutter/src/material/page_transitions_theme.dart": page_transitions_theme,
    "package:flutter/src/material/outlined_button_theme.dart": outlined_button_theme,
    "package:flutter/src/material/navigation_rail.dart": navigation_rail,
    "package:flutter/src/material/navigation_rail_theme.dart": navigation_rail_theme,
    "package:flutter/src/material/navigation_bar.dart": navigation_bar,
    "package:flutter/src/material/navigation_bar_theme.dart": navigation_bar_theme,
    "package:flutter/src/material/input_decorator.dart": input_decorator,
    "package:flutter/src/material/ink_splash.dart": ink_splash,
    "package:flutter/src/material/ink_sparkle.dart": ink_sparkle,
    "package:flutter/src/material/ink_ripple.dart": ink_ripple,
    "package:flutter/src/material/expansion_tile_theme.dart": expansion_tile_theme,
    "package:flutter/src/material/button_style.dart": button_style,
    "package:flutter/src/material/elevated_button_theme.dart": elevated_button_theme,
    "package:flutter/src/material/dialog_theme.dart": dialog_theme,
    "package:flutter/src/material/data_table_theme.dart": data_table_theme,
    "package:flutter/src/material/chip_theme.dart": chip_theme,
    "package:flutter/src/material/checkbox_theme.dart": checkbox_theme,
    "package:flutter/src/material/card_theme.dart": card_theme,
    "package:flutter/src/material/button.dart": button,
    "package:flutter/src/material/material_button.dart": material_button,
    "package:flutter/src/material/color_scheme.dart": color_scheme,
    "package:flutter/src/material/button_theme.dart": button_theme,
    "package:flutter/src/material/button_bar_theme.dart": button_bar_theme,
    "package:flutter/src/material/tooltip_theme.dart": tooltip_theme,
    "package:flutter/src/material/tooltip.dart": tooltip,
    "package:flutter/src/material/bottom_navigation_bar.dart": bottom_navigation_bar,
    "package:flutter/src/material/bottom_navigation_bar_theme.dart": bottom_navigation_bar_theme,
    "package:flutter/src/material/bottom_app_bar_theme.dart": bottom_app_bar_theme,
    "package:flutter/src/material/theme_data.dart": theme_data,
    "package:flutter/src/material/list_tile_theme.dart": list_tile_theme,
    "package:flutter/src/material/ink_highlight.dart": ink_highlight,
    "package:flutter/src/material/feedback.dart": feedback,
    "package:flutter/src/material/ink_well.dart": ink_well,
    "package:flutter/src/material/ink_decoration.dart": ink_decoration,
    "package:flutter/src/material/list_tile.dart": list_tile,
    "package:flutter/src/material/drawer_theme.dart": drawer_theme,
    "package:flutter/src/material/drawer.dart": drawer,
    "package:flutter/src/material/bottom_sheet.dart": bottom_sheet,
    "package:flutter/src/material/divider_theme.dart": divider_theme,
    "package:flutter/src/material/divider.dart": divider,
    "package:flutter/src/material/banner_theme.dart": banner_theme,
    "package:flutter/src/material/banner.dart": banner,
    "package:flutter/src/material/scaffold.dart": scaffold$,
    "package:flutter/src/material/elevation_overlay.dart": elevation_overlay,
    "package:flutter/src/material/material.dart": material,
    "package:flutter/src/material/debug.dart": debug$1,
    "package:flutter/src/material/material_localizations.dart": material_localizations,
    "package:flutter/src/material/theme.dart": theme$,
    "package:flutter/src/material/app_bar_theme.dart": app_bar_theme,
    "package:flutter/src/material/app_bar.dart": app_bar
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["icon_button.dart","button_style_button.dart","button_style.dart","back_button.dart","time.dart","text_button.dart","snack_bar.dart","floating_action_button_location.dart","floating_action_button.dart","flexible_space_bar.dart","toggle_buttons_theme.dart","time_picker_theme.dart","text_selection_theme.dart","text_button_theme.dart","tabs.dart","tab_bar_theme.dart","switch_theme.dart","snack_bar_theme.dart","slider_theme.dart","scrollbar_theme.dart","radio_theme.dart","progress_indicator_theme.dart","popup_menu_theme.dart","page_transitions_theme.dart","outlined_button_theme.dart","navigation_rail.dart","navigation_rail_theme.dart","navigation_bar.dart","navigation_bar_theme.dart","input_decorator.dart","ink_well.dart","ink_splash.dart","material.dart","ink_sparkle.dart","ink_ripple.dart","expansion_tile_theme.dart","elevated_button_theme.dart","dialog_theme.dart","data_table_theme.dart","chip_theme.dart","checkbox_theme.dart","card_theme.dart","button.dart","material_button.dart","color_scheme.dart","button_theme.dart","button_bar_theme.dart","tooltip_theme.dart","tooltip.dart","bottom_navigation_bar.dart","bottom_navigation_bar_theme.dart","bottom_app_bar_theme.dart","theme_data.dart","list_tile_theme.dart","ink_highlight.dart","feedback.dart","ink_decoration.dart","list_tile.dart","drawer_theme.dart","drawer.dart","bottom_sheet.dart","divider_theme.dart","divider.dart","banner_theme.dart","banner.dart","scaffold.dart","elevation_overlay.dart","debug.dart","material_localizations.dart","theme.dart","app_bar_theme.dart","app_bar.dart"],"names":[],"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BAAiB;AAC5C,YAAI,iCAAqE,SAAzC,kCAAsB;AACtD,YAAI,6BAAyD,SAAjC,8BAAkB;AAC9C,YAAI,4BAAsD,SAA/B,6BAAiB;AAC5C,YAAI,qBAAiC,SAAjB,sBAAU;AAC9B,aAAK,cAAS;AACd,YAAI,kCAAwE,SAA3C,mCAAuB;AACxD,YAAI,iCAAqE,SAAzC,kCAAsB;AACtD,YAAI,0BAAgD,SAA3B,2BAAe;;;AAE1C,YAAO,AAA4C,sBAAzB,AAAY,WAAD,WAAM,QAAM;IACnD;;;QAxtCO;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;IAjDA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;UACK,AAAQ,OAAD;WACL,KAAK,YAAY,SAAS,6BAAW;WACrC,MAAM,YAAY,UAAU,6BAAW;WACvC,MAAM,YAAY,UAAU,6BAAW;;EAAyD;;QAQ9F;QACT;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;IAVS;IACT;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;UACK,AAAQ,OAAD;IACT,kBAAE;IACG,qBAAE;IACN,mBAAE;IACE,qBAAE;IACD,wBAAE;IACM,8BAAE;IACV,wBAAE;IACD,yBAAE;IACC,4BAAE;IACJ,wBAAE;IACL,uBAAE;IACD,wBAAE;IACC,2BAAE;IACR,qBAAE;IACK,4BAAa;IAChB,yBAAE;I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;QACA;QACA;QAEA;QACA;QACA;QACA;QACA;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QAQP;QAOK;QAOD;QAOI;QAKR;QAKD;QAKM;QAKP;IA/HS;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAKA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAiDT;IAGW,yBAAE,WAAW;IACH,mCAAE,qBAAqB;IAC7B,6BAAE,eAAe;IACjB,6BAAE,eAAe;IACrB,2BAAE,WAAW;IACA,sCAAE,wBAAwB;IAC5B,oCAAE,sBAAsB;UAEzC,AAA2B,0BAAD;UAC1B,AAAW,UAAD;UACV,AAAqB,oBAAD;UACpB,AAAsB,qBAAD;UACrB,AAAqB,oBAAD;UACpB,AAAS,QAAD;UACR,AAAe,cAAD;UACd,AAAc,aAAD;UACb,AAAa,YAAD;UACZ,AAAc,aAAD;UAEb,AAAgB,eAAD;UACf,AAAkB,iBAAD;UACjB,AAAY,WAAD;UACX,AAAU,SAAD;UACT,AAAY,WAAD;UACX,AAAsB,qBAAD;UACrB,AAAc,aAAD;UACb,AAAa,YAAD;UACZ,AAAW,UAAD;UACV,AAAW,UAAD;UACV,AAAe,cAAD;UACd,AAAU,SAAD;UACT,AAAW,UAAD;UACV,AAAe,cAAD;UACd,AAAa,YAAD;UACZ,AAAiB,gBAAD;UAChB,AAAkB,iBAAD;UACjB,AAAwB,uBAAD;UACvB,AAAqB,oBAAD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","file":"../../../../../../../../../packages/flutter/src/material/icon_button.dart.lib.js"}');
  // Exports:
  return {
    src__material__icon_button: icon_button,
    src__material__back_button: back_button,
    src__material__time: time$,
    src__material__button_style_button: button_style_button,
    src__material__text_button: text_button,
    src__material__snack_bar: snack_bar,
    src__material__floating_action_button_location: floating_action_button_location,
    src__material__floating_action_button: floating_action_button,
    src__material__flexible_space_bar: flexible_space_bar,
    src__material__toggle_buttons_theme: toggle_buttons_theme,
    src__material__time_picker_theme: time_picker_theme,
    src__material__text_selection_theme: text_selection_theme,
    src__material__text_button_theme: text_button_theme,
    src__material__tabs: tabs$,
    src__material__tab_bar_theme: tab_bar_theme,
    src__material__switch_theme: switch_theme,
    src__material__snack_bar_theme: snack_bar_theme,
    src__material__slider_theme: slider_theme,
    src__material__scrollbar_theme: scrollbar_theme,
    src__material__radio_theme: radio_theme,
    src__material__progress_indicator_theme: progress_indicator_theme,
    src__material__popup_menu_theme: popup_menu_theme,
    src__material__page_transitions_theme: page_transitions_theme,
    src__material__outlined_button_theme: outlined_button_theme,
    src__material__navigation_rail: navigation_rail,
    src__material__navigation_rail_theme: navigation_rail_theme,
    src__material__navigation_bar: navigation_bar,
    src__material__navigation_bar_theme: navigation_bar_theme,
    src__material__input_decorator: input_decorator,
    src__material__ink_splash: ink_splash,
    src__material__ink_sparkle: ink_sparkle,
    src__material__ink_ripple: ink_ripple,
    src__material__expansion_tile_theme: expansion_tile_theme,
    src__material__button_style: button_style,
    src__material__elevated_button_theme: elevated_button_theme,
    src__material__dialog_theme: dialog_theme,
    src__material__data_table_theme: data_table_theme,
    src__material__chip_theme: chip_theme,
    src__material__checkbox_theme: checkbox_theme,
    src__material__card_theme: card_theme,
    src__material__button: button,
    src__material__material_button: material_button,
    src__material__color_scheme: color_scheme,
    src__material__button_theme: button_theme,
    src__material__button_bar_theme: button_bar_theme,
    src__material__tooltip_theme: tooltip_theme,
    src__material__tooltip: tooltip,
    src__material__bottom_navigation_bar: bottom_navigation_bar,
    src__material__bottom_navigation_bar_theme: bottom_navigation_bar_theme,
    src__material__bottom_app_bar_theme: bottom_app_bar_theme,
    src__material__theme_data: theme_data,
    src__material__list_tile_theme: list_tile_theme,
    src__material__ink_highlight: ink_highlight,
    src__material__feedback: feedback,
    src__material__ink_well: ink_well,
    src__material__ink_decoration: ink_decoration,
    src__material__list_tile: list_tile,
    src__material__drawer_theme: drawer_theme,
    src__material__drawer: drawer,
    src__material__bottom_sheet: bottom_sheet,
    src__material__divider_theme: divider_theme,
    src__material__divider: divider,
    src__material__banner_theme: banner_theme,
    src__material__banner: banner,
    src__material__scaffold: scaffold$,
    src__material__elevation_overlay: elevation_overlay,
    src__material__material: material,
    src__material__debug: debug$1,
    src__material__material_localizations: material_localizations,
    src__material__theme: theme$,
    src__material__app_bar_theme: app_bar_theme,
    src__material__app_bar: app_bar
  };
}));

//# sourceMappingURL=icon_button.dart.lib.js.map
