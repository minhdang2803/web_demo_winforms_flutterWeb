define(['dart_sdk', 'packages/image/src/internal/clamp.dart', 'packages/image/src/image_exception.dart'], (function load__packages__image__src__color_dart(dart_sdk, packages__image__src__internal__clamp$46dart, packages__image__src__image_exception$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const math = dart_sdk.math;
  const _interceptors = dart_sdk._interceptors;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const clamp = packages__image__src__internal__clamp$46dart.src__internal__clamp;
  const image_exception = packages__image__src__image_exception$46dart.src__image_exception;
  var color$ = Object.create(dart.library);
  var $_get = dartx._get;
  var $rightShift = dartx['>>'];
  var $round = dartx.round;
  var $toInt = dartx.toInt;
  var $floor = dartx.floor;
  var $clamp = dartx.clamp;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(false);
  var T = {
    JSArrayOfint: () => (T.JSArrayOfint = dart.constFn(_interceptors.JSArray$(core.int)))(),
    numAndnumAndnumTonum: () => (T.numAndnumAndnumTonum = dart.constFn(dart.fnType(core.num, [core.num, core.num, core.num])))(),
    JSArrayOfnum: () => (T.JSArrayOfnum = dart.constFn(_interceptors.JSArray$(core.num)))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C1() {
      return C[1] = dart.const({
        __proto__: color$.Channel.prototype,
        [_Enum__name]: "red",
        [_Enum_index]: 0
      });
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: color$.Channel.prototype,
        [_Enum__name]: "green",
        [_Enum_index]: 1
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: color$.Channel.prototype,
        [_Enum__name]: "blue",
        [_Enum_index]: 2
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: color$.Channel.prototype,
        [_Enum__name]: "alpha",
        [_Enum_index]: 3
      });
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: color$.Channel.prototype,
        [_Enum__name]: "luminance",
        [_Enum_index]: 4
      });
    },
    get C0() {
      return C[0] = dart.constList([C[1] || CT.C1, C[2] || CT.C2, C[3] || CT.C3, C[4] || CT.C4, C[5] || CT.C5], color$.Channel);
    }
  }, false);
  var C = Array(6).fill(void 0);
  var I = ["package:image/src/color.dart"];
  var _name = dart.privateName(core, "_name");
  var _Enum__name = dart.privateName(core, "_Enum._name");
  var _Enum_index = dart.privateName(core, "_Enum.index");
  color$.Channel = class Channel extends core._Enum {
    toString() {
      return "Channel." + this[_name];
    }
  };
  (color$.Channel.new = function(index, name) {
    color$.Channel.__proto__.new.call(this, index, name);
    ;
  }).prototype = color$.Channel.prototype;
  dart.addTypeTests(color$.Channel);
  dart.addTypeCaches(color$.Channel);
  dart.setLibraryUri(color$.Channel, I[0]);
  dart.setStaticFieldSignature(color$.Channel, () => ['values', 'red', 'green', 'blue', 'alpha', 'luminance']);
  dart.defineExtensionMethods(color$.Channel, ['toString']);
  dart.defineLazy(color$.Channel, {
    /*color$.Channel.values*/get values() {
      return C[0] || CT.C0;
    },
    /*color$.Channel.red*/get red() {
      return C[1] || CT.C1;
    },
    /*color$.Channel.green*/get green() {
      return C[2] || CT.C2;
    },
    /*color$.Channel.blue*/get blue() {
      return C[3] || CT.C3;
    },
    /*color$.Channel.alpha*/get alpha() {
      return C[4] || CT.C4;
    },
    /*color$.Channel.luminance*/get luminance() {
      return C[5] || CT.C5;
    }
  }, false);
  var fixWarnings = dart.privateName(color$, "Color.fixWarnings");
  color$.Color = class Color extends core.Object {
    get fixWarnings() {
      return this[fixWarnings];
    }
    set fixWarnings(value) {
      this[fixWarnings] = value;
    }
    static fromRgb(red, green, blue) {
      return color$.getColor(red, green, blue);
    }
    static fromRgba(red, green, blue, alpha) {
      return color$.getColor(red, green, blue, alpha);
    }
    static fromHsl(hue, saturation, lightness) {
      let rgb = color$.hslToRgb(hue, saturation, lightness);
      return color$.getColor(rgb[$_get](0), rgb[$_get](1), rgb[$_get](2));
    }
    static fromHsv(hue, saturation, value) {
      let rgb = color$.hsvToRgb(hue, saturation, value);
      return color$.getColor(rgb[$_get](0), rgb[$_get](1), rgb[$_get](2));
    }
    static fromXyz(x, y, z) {
      let rgb = color$.xyzToRgb(x, y, z);
      return color$.getColor(rgb[$_get](0), rgb[$_get](1), rgb[$_get](2));
    }
    static fromLab(L, a, b) {
      let rgb = color$.labToRgb(L, a, b);
      return color$.getColor(rgb[$_get](0), rgb[$_get](1), rgb[$_get](2));
    }
    static distance(c1, c2, compareAlpha) {
      let d1 = c1[$_get](0) - c2[$_get](0);
      let d2 = c1[$_get](1) - c2[$_get](1);
      let d3 = c1[$_get](2) - c2[$_get](2);
      if (compareAlpha) {
        let dA = c1[$_get](3) - c2[$_get](3);
        return math.sqrt(math.max(core.num, d1 * d1, (d1 - dA) * (d1 - dA)) + math.max(core.num, d2 * d2, (d2 - dA) * (d2 - dA)) + math.max(core.num, d3 * d3, (d3 - dA) * (d3 - dA)));
      } else {
        return math.sqrt(d1 * d1 + d2 * d2 + d3 * d3);
      }
    }
    static ['_#new#tearOff']() {
      return new color$.Color.new();
    }
  };
  (color$.Color.new = function() {
    this[fixWarnings] = 0;
    ;
  }).prototype = color$.Color.prototype;
  dart.addTypeTests(color$.Color);
  dart.addTypeCaches(color$.Color);
  dart.setStaticMethodSignature(color$.Color, () => ['fromRgb', 'fromRgba', 'fromHsl', 'fromHsv', 'fromXyz', 'fromLab', 'distance']);
  dart.setLibraryUri(color$.Color, I[0]);
  dart.setFieldSignature(color$.Color, () => ({
    __proto__: dart.getFields(color$.Color.__proto__),
    fixWarnings: dart.fieldType(core.int)
  }));
  color$.getColor = function getColor(r, g, b, a = 255) {
    return (clamp.clamp255(a) << 24 | clamp.clamp255(b) << 16 >>> 0 | clamp.clamp255(g) << 8 >>> 0 | clamp.clamp255(r)) >>> 0;
  };
  color$.getChannel = function getChannel(color, channel) {
    return channel === color$.Channel.red ? color$.getRed(color) : channel === color$.Channel.green ? color$.getGreen(color) : channel === color$.Channel.blue ? color$.getBlue(color) : channel === color$.Channel.alpha ? color$.getAlpha(color) : color$.getLuminance(color);
  };
  color$.setChannel = function setChannel(color, channel, value) {
    return channel === color$.Channel.red ? color$.setRed(color, value) : channel === color$.Channel.green ? color$.setGreen(color, value) : channel === color$.Channel.blue ? color$.setBlue(color, value) : channel === color$.Channel.alpha ? color$.setAlpha(color, value) : color;
  };
  color$.isWhite = function isWhite(color) {
    return (color & 16777215) === 16777215;
  };
  color$.isBlack = function isBlack(color) {
    return (color & 16777215) === 0;
  };
  color$.getRed = function getRed(color) {
    return color & 255;
  };
  color$.setRed = function setRed(color, value) {
    return (color & 4294967040 | clamp.clamp255(value)) >>> 0;
  };
  color$.getGreen = function getGreen(color) {
    return color >> 8 & 255;
  };
  color$.setGreen = function setGreen(color, value) {
    return (color & 4294902015 | clamp.clamp255(value) << 8 >>> 0) >>> 0;
  };
  color$.getBlue = function getBlue(color) {
    return color >> 16 & 255;
  };
  color$.setBlue = function setBlue(color, value) {
    return (color & 4278255615 | clamp.clamp255(value) << 16 >>> 0) >>> 0;
  };
  color$.getAlpha = function getAlpha(color) {
    return color[$rightShift](24) & 255;
  };
  color$.setAlpha = function setAlpha(color, value) {
    return (color & 16777215 | clamp.clamp255(value) << 24 >>> 0) >>> 0;
  };
  color$.alphaBlendColors = function alphaBlendColors(dst, src, fraction = 255) {
    let srcAlpha = color$.getAlpha(src);
    if (srcAlpha === 255 && fraction === 255) {
      return src;
    }
    let a = srcAlpha / 255.0;
    if (fraction !== 255) {
      a = a * (fraction / 255.0);
    }
    let sr = (color$.getRed(src) * a)[$round]();
    let sg = (color$.getGreen(src) * a)[$round]();
    let sb = (color$.getBlue(src) * a)[$round]();
    let sa = (srcAlpha * a)[$round]();
    let dr = (color$.getRed(dst) * (1.0 - a))[$round]();
    let dg = (color$.getGreen(dst) * (1.0 - a))[$round]();
    let db = (color$.getBlue(dst) * (1.0 - a))[$round]();
    let da = (color$.getAlpha(dst) * (1.0 - a))[$round]();
    return color$.getColor(sr + dr, sg + dg, sb + db, sa + da);
  };
  color$.getLuminance = function getLuminance(color) {
    let r = color$.getRed(color);
    let g = color$.getGreen(color);
    let b = color$.getBlue(color);
    return color$.getLuminanceRgb(r, g, b);
  };
  color$.getLuminanceRgb = function getLuminanceRgb(r, g, b) {
    return (0.299 * r + 0.587 * g + 0.114 * b)[$round]();
  };
  color$.hslToRgb = function hslToRgb(hue, saturation, lightness) {
    if (saturation === 0) {
      let gray = (lightness * 255.0)[$toInt]();
      return T.JSArrayOfint().of([gray, gray, gray]);
    }
    function hue2rgb(p, q, t) {
      if (t < 0.0) {
        t = t + 1.0;
      }
      if (t > 1) {
        t = t - 1.0;
      }
      if (t < 1.0 / 6.0) {
        return p + (q - p) * 6.0 * t;
      }
      if (t < 1.0 / 2.0) {
        return q;
      }
      if (t < 2.0 / 3.0) {
        return p + (q - p) * (2.0 / 3.0 - t) * 6.0;
      }
      return p;
    }
    dart.fn(hue2rgb, T.numAndnumAndnumTonum());
    let q = lightness < 0.5 ? lightness * (1.0 + saturation) : lightness + saturation - lightness * saturation;
    let p = 2.0 * lightness - q;
    let r = hue2rgb(p, q, hue + 1.0 / 3.0);
    let g = hue2rgb(p, q, hue);
    let b = hue2rgb(p, q, hue - 1.0 / 3.0);
    return T.JSArrayOfint().of([(r * 255.0)[$round](), (g * 255.0)[$round](), (b * 255.0)[$round]()]);
  };
  color$.hsvToRgb = function hsvToRgb(hue, saturation, brightness) {
    if (saturation === 0) {
      let gray = (brightness * 255.0)[$round]();
      return T.JSArrayOfint().of([gray, gray, gray]);
    }
    let h = (hue - hue[$floor]()) * 6.0;
    let f = h - h[$floor]();
    let p = brightness * (1.0 - saturation);
    let q = brightness * (1.0 - saturation * f);
    let t = brightness * (1.0 - saturation * (1.0 - f));
    switch (h[$toInt]()) {
      case 0:
        {
          return T.JSArrayOfint().of([(brightness * 255.0)[$round](), (t * 255.0)[$round](), (p * 255.0)[$round]()]);
        }
      case 1:
        {
          return T.JSArrayOfint().of([(q * 255.0)[$round](), (brightness * 255.0)[$round](), (p * 255.0)[$round]()]);
        }
      case 2:
        {
          return T.JSArrayOfint().of([(p * 255.0)[$round](), (brightness * 255.0)[$round](), (t * 255.0)[$round]()]);
        }
      case 3:
        {
          return T.JSArrayOfint().of([(p * 255.0)[$round](), (q * 255.0)[$round](), (brightness * 255.0)[$round]()]);
        }
      case 4:
        {
          return T.JSArrayOfint().of([(t * 255.0)[$round](), (p * 255.0)[$round](), (brightness * 255.0)[$round]()]);
        }
      case 5:
        {
          return T.JSArrayOfint().of([(brightness * 255.0)[$round](), (p * 255.0)[$round](), (q * 255.0)[$round]()]);
        }
      default:
        {
          dart.throw(new image_exception.ImageException.new("invalid hue"));
        }
    }
  };
  color$.rgbToHsl = function rgbToHsl(r, g, b) {
    r = r / 255.0;
    g = g / 255.0;
    b = b / 255.0;
    let mx = math.max(core.num, r, math.max(core.num, g, b));
    let mn = math.min(core.num, r, math.min(core.num, g, b));
    let h = null;
    let l = (mx + mn) / 2.0;
    if (mx === mn) {
      return T.JSArrayOfnum().of([0.0, 0.0, l]);
    }
    let d = mx - mn;
    let s = l > 0.5 ? d / (2.0 - mx - mn) : d / (mx + mn);
    if (mx === r) {
      h = (g - b) / d + (g < b ? 6.0 : 0.0);
    } else if (mx === g) {
      h = (b - r) / d + 2.0;
    } else {
      h = (r - g) / d + 4.0;
    }
    h = h / 6.0;
    return T.JSArrayOfnum().of([h, s, l]);
  };
  color$.labToXyz = function labToXyz(l, a, b) {
    let y = (l + 16.0) / 116.0;
    let x = y + a / 500.0;
    let z = y - b / 200.0;
    if (math.pow(x, 3) > 0.008856) {
      x = math.pow(x, 3);
    } else {
      x = (x - 16.0 / 116) / 7.787;
    }
    if (math.pow(y, 3) > 0.008856) {
      y = math.pow(y, 3);
    } else {
      y = (y - 16.0 / 116.0) / 7.787;
    }
    if (math.pow(z, 3) > 0.008856) {
      z = math.pow(z, 3);
    } else {
      z = (z - 16.0 / 116.0) / 7.787;
    }
    return T.JSArrayOfint().of([(x * 95.047)[$toInt](), (y * 100.0)[$toInt](), (z * 108.883)[$toInt]()]);
  };
  color$.xyzToRgb = function xyzToRgb(x, y, z) {
    x = x / 100;
    y = y / 100;
    z = z / 100;
    let r = 3.2406 * x + -1.5372 * y + -0.4986 * z;
    let g = -0.9689 * x + 1.8758 * y + 0.0415 * z;
    let b = 0.0557 * x + -0.204 * y + 1.057 * z;
    if (r > 0.0031308) {
      r = 1.055 * math.pow(r, 0.4166666667) - 0.055;
    } else {
      r = r * 12.92;
    }
    if (g > 0.0031308) {
      g = 1.055 * math.pow(g, 0.4166666667) - 0.055;
    } else {
      g = g * 12.92;
    }
    if (b > 0.0031308) {
      b = 1.055 * math.pow(b, 0.4166666667) - 0.055;
    } else {
      b = b * 12.92;
    }
    return T.JSArrayOfint().of([(r * 255)[$clamp](0, 255)[$toInt](), (g * 255)[$clamp](0, 255)[$toInt](), (b * 255)[$clamp](0, 255)[$toInt]()]);
  };
  color$.cmykToRgb = function cmykToRgb(c, m, y, k) {
    c = c / 255.0;
    m = m / 255.0;
    y = y / 255.0;
    k = k / 255.0;
    return T.JSArrayOfint().of([(255.0 * (1.0 - c) * (1.0 - k))[$round](), (255.0 * (1.0 - m) * (1.0 - k))[$round](), (255.0 * (1.0 - y) * (1.0 - k))[$round]()]);
  };
  color$.labToRgb = function labToRgb(l, a, b) {
    let y = (l + 16.0) / 116.0;
    let x = a / 500.0 + y;
    let z = y - b / 200.0;
    let y3 = math.pow(y, 3);
    if (y3 > 0.008856) {
      y = y3;
    } else {
      y = (y - 16 / 116) / 7.787;
    }
    let x3 = math.pow(x, 3);
    if (x3 > 0.008856) {
      x = x3;
    } else {
      x = (x - 16 / 116) / 7.787;
    }
    let z3 = math.pow(z, 3);
    if (z3 > 0.008856) {
      z = z3;
    } else {
      z = (z - 16 / 116) / 7.787;
    }
    x = x * 95.047;
    y = y * 100;
    z = z * 108.883;
    x = x / 100.0;
    y = y / 100.0;
    z = z / 100.0;
    let R = x * 3.2406 + y * -1.5372 + z * -0.4986;
    let G = x * -0.9689 + y * 1.8758 + z * 0.0415;
    let B = x * 0.0557 + y * -0.204 + z * 1.057;
    if (R > 0.0031308) {
      R = 1.055 * math.pow(R, 1.0 / 2.4) - 0.055;
    } else {
      R = 12.92 * R;
    }
    if (G > 0.0031308) {
      G = 1.055 * math.pow(G, 1.0 / 2.4) - 0.055;
    } else {
      G = 12.92 * G;
    }
    if (B > 0.0031308) {
      B = 1.055 * math.pow(B, 1.0 / 2.4) - 0.055;
    } else {
      B = 12.92 * B;
    }
    return T.JSArrayOfint().of([(R * 255.0)[$clamp](0, 255)[$toInt](), (G * 255.0)[$clamp](0, 255)[$toInt](), (B * 255.0)[$clamp](0, 255)[$toInt]()]);
  };
  color$.rgbToXyz = function rgbToXyz(r, g, b) {
    r = r / 255.0;
    g = g / 255.0;
    b = b / 255.0;
    if (r > 0.04045) {
      r = math.pow((r + 0.055) / 1.055, 2.4);
    } else {
      r = r / 12.92;
    }
    if (g > 0.04045) {
      g = math.pow((g + 0.055) / 1.055, 2.4);
    } else {
      g = g / 12.92;
    }
    if (b > 0.04045) {
      b = math.pow((b + 0.055) / 1.055, 2.4);
    } else {
      b = b / 12.92;
    }
    r = r * 100.0;
    g = g * 100.0;
    b = b * 100.0;
    return T.JSArrayOfnum().of([r * 0.4124 + g * 0.3576 + b * 0.1805, r * 0.2126 + g * 0.7152 + b * 0.0722, r * 0.0193 + g * 0.1192 + b * 0.9505]);
  };
  color$.xyzToLab = function xyzToLab(x, y, z) {
    x = x / 95.047;
    y = y / 100.0;
    z = z / 108.883;
    if (x > 0.008856) {
      x = math.pow(x, 1 / 3.0);
    } else {
      x = 7.787 * x + 16 / 116.0;
    }
    if (y > 0.008856) {
      y = math.pow(y, 1 / 3.0);
    } else {
      y = 7.787 * y + 16 / 116.0;
    }
    if (z > 0.008856) {
      z = math.pow(z, 1 / 3.0);
    } else {
      z = 7.787 * z + 16 / 116.0;
    }
    return T.JSArrayOfnum().of([116.0 * y - 16, 500.0 * (x - y), 200.0 * (y - z)]);
  };
  color$.rgbToLab = function rgbToLab(r, g, b) {
    r = r / 255.0;
    g = g / 255.0;
    b = b / 255.0;
    if (r > 0.04045) {
      r = math.pow((r + 0.055) / 1.055, 2.4);
    } else {
      r = r / 12.92;
    }
    if (g > 0.04045) {
      g = math.pow((g + 0.055) / 1.055, 2.4);
    } else {
      g = g / 12.92;
    }
    if (b > 0.04045) {
      b = math.pow((b + 0.055) / 1.055, 2.4);
    } else {
      b = b / 12.92;
    }
    r = r * 100.0;
    g = g * 100.0;
    b = b * 100.0;
    let x = r * 0.4124 + g * 0.3576 + b * 0.1805;
    let y = r * 0.2126 + g * 0.7152 + b * 0.0722;
    let z = r * 0.0193 + g * 0.1192 + b * 0.9505;
    x = x / 95.047;
    y = y / 100.0;
    z = z / 108.883;
    if (x > 0.008856) {
      x = math.pow(x, 1 / 3.0);
    } else {
      x = 7.787 * x + 16 / 116.0;
    }
    if (y > 0.008856) {
      y = math.pow(y, 1 / 3.0);
    } else {
      y = 7.787 * y + 16 / 116.0;
    }
    if (z > 0.008856) {
      z = math.pow(z, 1 / 3.0);
    } else {
      z = 7.787 * z + 16 / 116.0;
    }
    return T.JSArrayOfnum().of([116.0 * y - 16, 500.0 * (x - y), 200.0 * (y - z)]);
  };
  dart.trackLibraries("packages/image/src/color.dart", {
    "package:image/src/color.dart": color$
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["color.dart"],"names":[],"mappings":"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","file":"../../../../../../../../../../../packages/image/src/color.dart.lib.js"}');
  // Exports:
  return {
    src__color: color$
  };
}));

//# sourceMappingURL=color.dart.lib.js.map
