define(['dart_sdk', 'packages/image/src/internal/bit_operators.dart', 'packages/image/src/image.dart', 'packages/image/src/exif_data.dart', 'packages/image/src/color.dart', 'packages/image/src/image_exception.dart', 'packages/image/src/formats/jpeg/jpeg_frame.dart', 'packages/image/src/formats/jpeg/_component_data.dart', 'packages/image/src/util/input_buffer.dart', 'packages/image/src/formats/jpeg/jpeg_info.dart', 'packages/image/src/formats/jpeg/jpeg_jfif.dart', 'packages/image/src/formats/jpeg/jpeg_adobe.dart', 'packages/image/src/formats/jpeg/jpeg.dart', 'packages/image/src/formats/jpeg/jpeg_component.dart', 'packages/image/src/formats/jpeg/jpeg_scan.dart'], (function load__packages__image__src__formats__jpeg___jpeg_quantize_html_dart(dart_sdk, packages__image__src__internal__bit_operators$46dart, packages__image__src__image$46dart, packages__image__src__exif_data$46dart, packages__image__src__color$46dart, packages__image__src__image_exception$46dart, packages__image__src__formats__jpeg__jpeg_frame$46dart, packages__image__src__formats__jpeg___component_data$46dart, packages__image__src__util__input_buffer$46dart, packages__image__src__formats__jpeg__jpeg_info$46dart, packages__image__src__formats__jpeg__jpeg_jfif$46dart, packages__image__src__formats__jpeg__jpeg_adobe$46dart, packages__image__src__formats__jpeg__jpeg$46dart, packages__image__src__formats__jpeg__jpeg_component$46dart, packages__image__src__formats__jpeg__jpeg_scan$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const _native_typed_data = dart_sdk._native_typed_data;
  const typed_data = dart_sdk.typed_data;
  const _interceptors = dart_sdk._interceptors;
  const _internal = dart_sdk._internal;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const bit_operators = packages__image__src__internal__bit_operators$46dart.src__internal__bit_operators;
  const image$ = packages__image__src__image$46dart.src__image;
  const exif_data = packages__image__src__exif_data$46dart.src__exif_data;
  const color = packages__image__src__color$46dart.src__color;
  const image_exception = packages__image__src__image_exception$46dart.src__image_exception;
  const jpeg_frame = packages__image__src__formats__jpeg__jpeg_frame$46dart.src__formats__jpeg__jpeg_frame;
  const _component_data = packages__image__src__formats__jpeg___component_data$46dart.src__formats__jpeg___component_data;
  const input_buffer = packages__image__src__util__input_buffer$46dart.src__util__input_buffer;
  const jpeg_info = packages__image__src__formats__jpeg__jpeg_info$46dart.src__formats__jpeg__jpeg_info;
  const jpeg_jfif = packages__image__src__formats__jpeg__jpeg_jfif$46dart.src__formats__jpeg__jpeg_jfif;
  const jpeg_adobe = packages__image__src__formats__jpeg__jpeg_adobe$46dart.src__formats__jpeg__jpeg_adobe;
  const jpeg = packages__image__src__formats__jpeg__jpeg$46dart.src__formats__jpeg__jpeg;
  const jpeg_component = packages__image__src__formats__jpeg__jpeg_component$46dart.src__formats__jpeg__jpeg_component;
  const jpeg_scan = packages__image__src__formats__jpeg__jpeg_scan$46dart.src__formats__jpeg__jpeg_scan;
  var _jpeg_quantize_html = Object.create(dart.library);
  var jpeg_data = Object.create(dart.library);
  var $_set = dartx._set;
  var $_get = dartx._get;
  var $keys = dartx.keys;
  var $rightShift = dartx['>>'];
  var $toInt = dartx.toInt;
  var $length = dartx.length;
  var $clear = dartx.clear;
  var $add = dartx.add;
  var $toRadixString = dartx.toRadixString;
  var $sublist = dartx.sublist;
  var $containsKey = dartx.containsKey;
  var $removeLast = dartx.removeLast;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(false);
  var T = {
    Int16ListN: () => (T.Int16ListN = dart.constFn(dart.nullable(typed_data.Int16List)))(),
    ListOfInt16ListN: () => (T.ListOfInt16ListN = dart.constFn(core.List$(T.Int16ListN())))(),
    JpegFrameN: () => (T.JpegFrameN = dart.constFn(dart.nullable(jpeg_frame.JpegFrame)))(),
    JSArrayOfJpegFrameN: () => (T.JSArrayOfJpegFrameN = dart.constFn(_interceptors.JSArray$(T.JpegFrameN())))(),
    ListN: () => (T.ListN = dart.constFn(dart.nullable(core.List)))(),
    JSArrayOfListN: () => (T.JSArrayOfListN = dart.constFn(_interceptors.JSArray$(T.ListN())))(),
    JSArrayOfComponentData: () => (T.JSArrayOfComponentData = dart.constFn(_interceptors.JSArray$(_component_data.ComponentData)))(),
    JSArrayOfUint8List: () => (T.JSArrayOfUint8List = dart.constFn(_interceptors.JSArray$(typed_data.Uint8List)))(),
    ListOfJpegComponent: () => (T.ListOfJpegComponent = dart.constFn(core.List$(jpeg_component.JpegComponent)))(),
    intToJpegComponent: () => (T.intToJpegComponent = dart.constFn(dart.fnType(jpeg_component.JpegComponent, [core.int])))(),
    JSArrayOf_JpegHuffman: () => (T.JSArrayOf_JpegHuffman = dart.constFn(_interceptors.JSArray$(jpeg_data._JpegHuffman)))(),
    Uint8ListN: () => (T.Uint8ListN = dart.constFn(dart.nullable(typed_data.Uint8List)))(),
    ListOfUint8ListN: () => (T.ListOfUint8ListN = dart.constFn(core.List$(T.Uint8ListN())))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.constList([0, 1, 1, 2, 4, 8, 1, 1, 2, 4, 8, 4, 8], core.int);
    },
    get C1() {
      return C[1] = dart.constList([-179, -178, -177, -175, -174, -172, -171, -170, -168, -167, -165, -164, -163, -161, -160, -158, -157, -156, -154, -153, -151, -150, -149, -147, -146, -144, -143, -142, -140, -139, -137, -136, -135, -133, -132, -130, -129, -128, -126, -125, -123, -122, -121, -119, -118, -116, -115, -114, -112, -111, -109, -108, -107, -105, -104, -102, -101, -100, -98, -97, -95, -94, -93, -91, -90, -88, -87, -86, -84, -83, -81, -80, -79, -77, -76, -74, -73, -72, -70, -69, -67, -66, -64, -63, -62, -60, -59, -57, -56, -55, -53, -52, -50, -49, -48, -46, -45, -43, -42, -41, -39, -38, -36, -35, -34, -32, -31, -29, -28, -27, -25, -24, -22, -21, -20, -18, -17, -15, -14, -13, -11, -10, -8, -7, -6, -4, -3, -1, 0, 1, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 20, 21, 22, 24, 25, 27, 28, 29, 31, 32, 34, 35, 36, 38, 39, 41, 42, 43, 45, 46, 48, 49, 50, 52, 53, 55, 56, 57, 59, 60, 62, 63, 64, 66, 67, 69, 70, 72, 73, 74, 76, 77, 79, 80, 81, 83, 84, 86, 87, 88, 90, 91, 93, 94, 95, 97, 98, 100, 101, 102, 104, 105, 107, 108, 109, 111, 112, 114, 115, 116, 118, 119, 121, 122, 123, 125, 126, 128, 129, 130, 132, 133, 135, 136, 137, 139, 140, 142, 143, 144, 146, 147, 149, 150, 151, 153, 154, 156, 157, 158, 160, 161, 163, 164, 165, 167, 168, 170, 171, 172, 174, 175, 177, 178], core.int);
    },
    get C2() {
      return C[2] = dart.constList([5990656, 5943854, 5897052, 5850250, 5803448, 5756646, 5709844, 5663042, 5616240, 5569438, 5522636, 5475834, 5429032, 5382230, 5335428, 5288626, 5241824, 5195022, 5148220, 5101418, 5054616, 5007814, 4961012, 4914210, 4867408, 4820606, 4773804, 4727002, 4680200, 4633398, 4586596, 4539794, 4492992, 4446190, 4399388, 4352586, 4305784, 4258982, 4212180, 4165378, 4118576, 4071774, 4024972, 3978170, 3931368, 3884566, 3837764, 3790962, 3744160, 3697358, 3650556, 3603754, 3556952, 3510150, 3463348, 3416546, 3369744, 3322942, 3276140, 3229338, 3182536, 3135734, 3088932, 3042130, 2995328, 2948526, 2901724, 2854922, 2808120, 2761318, 2714516, 2667714, 2620912, 2574110, 2527308, 2480506, 2433704, 2386902, 2340100, 2293298, 2246496, 2199694, 2152892, 2106090, 2059288, 2012486, 1965684, 1918882, 1872080, 1825278, 1778476, 1731674, 1684872, 1638070, 1591268, 1544466, 1497664, 1450862, 1404060, 1357258, 1310456, 1263654, 1216852, 1170050, 1123248, 1076446, 1029644, 982842, 936040, 889238, 842436, 795634, 748832, 702030, 655228, 608426, 561624, 514822, 468020, 421218, 374416, 327614, 280812, 234010, 187208, 140406, 93604, 46802, 0, -46802, -93604, -140406, -187208, -234010, -280812, -327614, -374416, -421218, -468020, -514822, -561624, -608426, -655228, -702030, -748832, -795634, -842436, -889238, -936040, -982842, -1029644, -1076446, -1123248, -1170050, -1216852, -1263654, -1310456, -1357258, -1404060, -1450862, -1497664, -1544466, -1591268, -1638070, -1684872, -1731674, -1778476, -1825278, -1872080, -1918882, -1965684, -2012486, -2059288, -2106090, -2152892, -2199694, -2246496, -2293298, -2340100, -2386902, -2433704, -2480506, -2527308, -2574110, -2620912, -2667714, -2714516, -2761318, -2808120, -2854922, -2901724, -2948526, -2995328, -3042130, -3088932, -3135734, -3182536, -3229338, -3276140, -3322942, -3369744, -3416546, -3463348, -3510150, -3556952, -3603754, -3650556, -3697358, -3744160, -3790962, -3837764, -3884566, -3931368, -3978170, -4024972, -4071774, -4118576, -4165378, -4212180, -4258982, -4305784, -4352586, -4399388, -4446190, -4492992, -4539794, -4586596, -4633398, -4680200, -4727002, -4773804, -4820606, -4867408, -4914210, -4961012, -5007814, -5054616, -5101418, -5148220, -5195022, -5241824, -5288626, -5335428, -5382230, -5429032, -5475834, -5522636, -5569438, -5616240, -5663042, -5709844, -5756646, -5803448, -5850250, -5897052, -5943854], core.int);
    },
    get C3() {
      return C[3] = dart.constList([2919680, 2897126, 2874572, 2852018, 2829464, 2806910, 2784356, 2761802, 2739248, 2716694, 2694140, 2671586, 2649032, 2626478, 2603924, 2581370, 2558816, 2536262, 2513708, 2491154, 2468600, 2446046, 2423492, 2400938, 2378384, 2355830, 2333276, 2310722, 2288168, 2265614, 2243060, 2220506, 2197952, 2175398, 2152844, 2130290, 2107736, 2085182, 2062628, 2040074, 2017520, 1994966, 1972412, 1949858, 1927304, 1904750, 1882196, 1859642, 1837088, 1814534, 1791980, 1769426, 1746872, 1724318, 1701764, 1679210, 1656656, 1634102, 1611548, 1588994, 1566440, 1543886, 1521332, 1498778, 1476224, 1453670, 1431116, 1408562, 1386008, 1363454, 1340900, 1318346, 1295792, 1273238, 1250684, 1228130, 1205576, 1183022, 1160468, 1137914, 1115360, 1092806, 1070252, 1047698, 1025144, 1002590, 980036, 957482, 934928, 912374, 889820, 867266, 844712, 822158, 799604, 777050, 754496, 731942, 709388, 686834, 664280, 641726, 619172, 596618, 574064, 551510, 528956, 506402, 483848, 461294, 438740, 416186, 393632, 371078, 348524, 325970, 303416, 280862, 258308, 235754, 213200, 190646, 168092, 145538, 122984, 100430, 77876, 55322, 32768, 10214, -12340, -34894, -57448, -80002, -102556, -125110, -147664, -170218, -192772, -215326, -237880, -260434, -282988, -305542, -328096, -350650, -373204, -395758, -418312, -440866, -463420, -485974, -508528, -531082, -553636, -576190, -598744, -621298, -643852, -666406, -688960, -711514, -734068, -756622, -779176, -801730, -824284, -846838, -869392, -891946, -914500, -937054, -959608, -982162, -1004716, -1027270, -1049824, -1072378, -1094932, -1117486, -1140040, -1162594, -1185148, -1207702, -1230256, -1252810, -1275364, -1297918, -1320472, -1343026, -1365580, -1388134, -1410688, -1433242, -1455796, -1478350, -1500904, -1523458, -1546012, -1568566, -1591120, -1613674, -1636228, -1658782, -1681336, -1703890, -1726444, -1748998, -1771552, -1794106, -1816660, -1839214, -1861768, -1884322, -1906876, -1929430, -1951984, -1974538, -1997092, -2019646, -2042200, -2064754, -2087308, -2109862, -2132416, -2154970, -2177524, -2200078, -2222632, -2245186, -2267740, -2290294, -2312848, -2335402, -2357956, -2380510, -2403064, -2425618, -2448172, -2470726, -2493280, -2515834, -2538388, -2560942, -2583496, -2606050, -2628604, -2651158, -2673712, -2696266, -2718820, -2741374, -2763928, -2786482, -2809036, -2831590], core.int);
    },
    get C4() {
      return C[4] = dart.constList([-227, -225, -223, -222, -220, -218, -216, -214, -213, -211, -209, -207, -206, -204, -202, -200, -198, -197, -195, -193, -191, -190, -188, -186, -184, -183, -181, -179, -177, -175, -174, -172, -170, -168, -167, -165, -163, -161, -159, -158, -156, -154, -152, -151, -149, -147, -145, -144, -142, -140, -138, -136, -135, -133, -131, -129, -128, -126, -124, -122, -120, -119, -117, -115, -113, -112, -110, -108, -106, -105, -103, -101, -99, -97, -96, -94, -92, -90, -89, -87, -85, -83, -82, -80, -78, -76, -74, -73, -71, -69, -67, -66, -64, -62, -60, -58, -57, -55, -53, -51, -50, -48, -46, -44, -43, -41, -39, -37, -35, -34, -32, -30, -28, -27, -25, -23, -21, -19, -18, -16, -14, -12, -11, -9, -7, -5, -4, -2, 0, 2, 4, 5, 7, 9, 11, 12, 14, 16, 18, 19, 21, 23, 25, 27, 28, 30, 32, 34, 35, 37, 39, 41, 43, 44, 46, 48, 50, 51, 53, 55, 57, 58, 60, 62, 64, 66, 67, 69, 71, 73, 74, 76, 78, 80, 82, 83, 85, 87, 89, 90, 92, 94, 96, 97, 99, 101, 103, 105, 106, 108, 110, 112, 113, 115, 117, 119, 120, 122, 124, 126, 128, 129, 131, 133, 135, 136, 138, 140, 142, 144, 145, 147, 149, 151, 152, 154, 156, 158, 159, 161, 163, 165, 167, 168, 170, 172, 174, 175, 177, 179, 181, 183, 184, 186, 188, 190, 191, 193, 195, 197, 198, 200, 202, 204, 206, 207, 209, 211, 213, 214, 216, 218, 220, 222, 223, 225], core.int);
    }
  }, false);
  var C = Array(5).fill(void 0);
  var I = ["package:image/src/formats/jpeg/jpeg_data.dart"];
  _jpeg_quantize_html._clamp8 = function _clamp8(i) {
    return i < 0 ? 0 : i > 255 ? 255 : i;
  };
  _jpeg_quantize_html.quantizeAndInverse = function quantizeAndInverse(quantizationTable, coefBlock, dataOut, dataIn) {
    let p = dataIn;
    if (_jpeg_quantize_html._dctClip == null) {
      _jpeg_quantize_html._dctClip = _native_typed_data.NativeUint8List.new(768);
      let i = null;
      for (let t0 = i = -256; i < 0; i = i + 1) {
        dart.nullCheck(_jpeg_quantize_html._dctClip)[$_set](256 + i, 0);
      }
      for (let t1 = i = 0; i < 256; i = i + 1) {
        dart.nullCheck(_jpeg_quantize_html._dctClip)[$_set](256 + i, i);
      }
      for (let t2 = i = 256; i < 512; i = i + 1) {
        dart.nullCheck(_jpeg_quantize_html._dctClip)[$_set](256 + i, 255);
      }
    }
    for (let i = 0; i < 64; i = i + 1) {
      p[$_set](i, coefBlock[$_get](i) * quantizationTable[$_get](i));
    }
    let row = 0;
    for (let i = 0; i < 8; i = i + 1, row = row + 8) {
      if (p[$_get](1 + row) === 0 && p[$_get](2 + row) === 0 && p[$_get](3 + row) === 0 && p[$_get](4 + row) === 0 && p[$_get](5 + row) === 0 && p[$_get](6 + row) === 0 && p[$_get](7 + row) === 0) {
        let t = bit_operators.shiftR(5793 * p[$_get](0 + row) + 512, 10);
        p[$_set](row + 0, t);
        p[$_set](row + 1, t);
        p[$_set](row + 2, t);
        p[$_set](row + 3, t);
        p[$_set](row + 4, t);
        p[$_set](row + 5, t);
        p[$_set](row + 6, t);
        p[$_set](row + 7, t);
        continue;
      }
      let v0 = bit_operators.shiftR(5793 * p[$_get](0 + row) + 128, 8);
      let v1 = bit_operators.shiftR(5793 * p[$_get](4 + row) + 128, 8);
      let v2 = p[$_get](2 + row);
      let v3 = p[$_get](6 + row);
      let v4 = bit_operators.shiftR(2896 * (p[$_get](1 + row) - p[$_get](7 + row)) + 128, 8);
      let v7 = bit_operators.shiftR(2896 * (p[$_get](1 + row) + p[$_get](7 + row)) + 128, 8);
      let v5 = bit_operators.shiftL(p[$_get](3 + row), 4);
      let v6 = bit_operators.shiftL(p[$_get](5 + row), 4);
      let t = bit_operators.shiftR(v0 - v1 + 1, 1);
      v0 = bit_operators.shiftR(v0 + v1 + 1, 1);
      v1 = t;
      t = bit_operators.shiftR(v2 * 3784 + v3 * 1567 + 128, 8);
      v2 = bit_operators.shiftR(v2 * 1567 - v3 * 3784 + 128, 8);
      v3 = t;
      t = bit_operators.shiftR(v4 - v6 + 1, 1);
      v4 = bit_operators.shiftR(v4 + v6 + 1, 1);
      v6 = t;
      t = bit_operators.shiftR(v7 + v5 + 1, 1);
      v5 = bit_operators.shiftR(v7 - v5 + 1, 1);
      v7 = t;
      t = bit_operators.shiftR(v0 - v3 + 1, 1);
      v0 = bit_operators.shiftR(v0 + v3 + 1, 1);
      v3 = t;
      t = bit_operators.shiftR(v1 - v2 + 1, 1);
      v1 = bit_operators.shiftR(v1 + v2 + 1, 1);
      v2 = t;
      t = bit_operators.shiftR(v4 * 2276 + v7 * 3406 + 2048, 12);
      v4 = bit_operators.shiftR(v4 * 3406 - v7 * 2276 + 2048, 12);
      v7 = t;
      t = bit_operators.shiftR(v5 * 799 + v6 * 4017 + 2048, 12);
      v5 = bit_operators.shiftR(v5 * 4017 - v6 * 799 + 2048, 12);
      v6 = t;
      p[$_set](0 + row, v0 + v7);
      p[$_set](7 + row, v0 - v7);
      p[$_set](1 + row, v1 + v6);
      p[$_set](6 + row, v1 - v6);
      p[$_set](2 + row, v2 + v5);
      p[$_set](5 + row, v2 - v5);
      p[$_set](3 + row, v3 + v4);
      p[$_set](4 + row, v3 - v4);
    }
    for (let i = 0; i < 8; i = i + 1) {
      let col = i;
      if (p[$_get](1 * 8 + col) === 0 && p[$_get](2 * 8 + col) === 0 && p[$_get](3 * 8 + col) === 0 && p[$_get](4 * 8 + col) === 0 && p[$_get](5 * 8 + col) === 0 && p[$_get](6 * 8 + col) === 0 && p[$_get](7 * 8 + col) === 0) {
        let t = bit_operators.shiftR(5793 * dataIn[$_get](i) + 8192, 14);
        p[$_set](0 * 8 + col, t);
        p[$_set](1 * 8 + col, t);
        p[$_set](2 * 8 + col, t);
        p[$_set](3 * 8 + col, t);
        p[$_set](4 * 8 + col, t);
        p[$_set](5 * 8 + col, t);
        p[$_set](6 * 8 + col, t);
        p[$_set](7 * 8 + col, t);
        continue;
      }
      let v0 = bit_operators.shiftR(5793 * p[$_get](0 * 8 + col) + 2048, 12);
      let v1 = bit_operators.shiftR(5793 * p[$_get](4 * 8 + col) + 2048, 12);
      let v2 = p[$_get](2 * 8 + col);
      let v3 = p[$_get](6 * 8 + col);
      let v4 = bit_operators.shiftR(2896 * (p[$_get](1 * 8 + col) - p[$_get](7 * 8 + col)) + 2048, 12);
      let v7 = bit_operators.shiftR(2896 * (p[$_get](1 * 8 + col) + p[$_get](7 * 8 + col)) + 2048, 12);
      let v5 = p[$_get](3 * 8 + col);
      let v6 = p[$_get](5 * 8 + col);
      let t = bit_operators.shiftR(v0 - v1 + 1, 1);
      v0 = bit_operators.shiftR(v0 + v1 + 1, 1);
      v1 = t;
      t = bit_operators.shiftR(v2 * 3784 + v3 * 1567 + 2048, 12);
      v2 = bit_operators.shiftR(v2 * 1567 - v3 * 3784 + 2048, 12);
      v3 = t;
      t = bit_operators.shiftR(v4 - v6 + 1, 1);
      v4 = bit_operators.shiftR(v4 + v6 + 1, 1);
      v6 = t;
      t = bit_operators.shiftR(v7 + v5 + 1, 1);
      v5 = bit_operators.shiftR(v7 - v5 + 1, 1);
      v7 = t;
      t = bit_operators.shiftR(v0 - v3 + 1, 1);
      v0 = bit_operators.shiftR(v0 + v3 + 1, 1);
      v3 = t;
      t = bit_operators.shiftR(v1 - v2 + 1, 1);
      v1 = bit_operators.shiftR(v1 + v2 + 1, 1);
      v2 = t;
      t = bit_operators.shiftR(v4 * 2276 + v7 * 3406 + 2048, 12);
      v4 = bit_operators.shiftR(v4 * 3406 - v7 * 2276 + 2048, 12);
      v7 = t;
      t = bit_operators.shiftR(v5 * 799 + v6 * 4017 + 2048, 12);
      v5 = bit_operators.shiftR(v5 * 4017 - v6 * 799 + 2048, 12);
      v6 = t;
      p[$_set](0 * 8 + col, v0 + v7);
      p[$_set](7 * 8 + col, v0 - v7);
      p[$_set](1 * 8 + col, v1 + v6);
      p[$_set](6 * 8 + col, v1 - v6);
      p[$_set](2 * 8 + col, v2 + v5);
      p[$_set](5 * 8 + col, v2 - v5);
      p[$_set](3 * 8 + col, v3 + v4);
      p[$_set](4 * 8 + col, v3 - v4);
    }
    for (let i = 0; i < 64; i = i + 1) {
      dataOut[$_set](i, dart.nullCheck(_jpeg_quantize_html._dctClip)[$_get](256 + 128 + bit_operators.shiftR(p[$_get](i) + 8, 4)));
    }
  };
  _jpeg_quantize_html.getImageFromJpeg = function getImageFromJpeg(jpeg) {
    let t3, t3$, t3$0;
    let orientation = jpeg.exif.hasOrientation ? jpeg.exif.orientation : 0;
    let w = dart.nullCheck(jpeg.width);
    let h = dart.nullCheck(jpeg.height);
    let flipWidthHeight = orientation >= 5 && orientation <= 8;
    let width = flipWidthHeight ? h : w;
    let height = flipWidthHeight ? w : h;
    let image = new image$.Image.new(width, height, {channels: image$.Channels.rgb});
    image.exif = new exif_data.ExifData.new();
    for (let key of jpeg.exif.data[$keys]) {
      if (key !== 274) {
        image.exif.data[$_set](key, jpeg.exif.data[$_get](key));
      }
    }
    let component1 = null;
    let component2 = null;
    let component3 = null;
    let component4 = null;
    let component1Line = null;
    let component2Line = null;
    let component3Line = null;
    let component4Line = null;
    let offset = 0;
    let Y = null;
    let Cb = null;
    let Cr = null;
    let K = null;
    let C = null;
    let M = null;
    let Ye = null;
    let R = null;
    let G = null;
    let B = null;
    let colorTransform = false;
    let h1 = h - 1;
    let w1 = w - 1;
    switch (jpeg.components[$length]) {
      case 1:
        {
          component1 = jpeg.components[$_get](0);
          let lines = component1.lines;
          let hShift1 = component1.hScaleShift;
          let vShift1 = component1.vScaleShift;
          for (let y = 0; y < dart.nullCheck(jpeg.height); y = y + 1) {
            let y1 = y[$rightShift](vShift1);
            component1Line = lines[$_get](y1);
            for (let x = 0; x < dart.nullCheck(jpeg.width); x = x + 1) {
              let x1 = x[$rightShift](hShift1);
              Y = dart.nullCheck(component1Line)[$_get](x1);
              let c = color.getColor(Y, Y, Y);
              if (orientation === 2) {
                image.setPixel(w1 - x, y, c);
              } else if (orientation === 3) {
                image.setPixel(w1 - x, h1 - y, c);
              } else if (orientation === 4) {
                image.setPixel(x, h1 - y, c);
              } else if (orientation === 5) {
                image.setPixel(y, x, c);
              } else if (orientation === 6) {
                image.setPixel(h1 - y, x, c);
              } else if (orientation === 7) {
                image.setPixel(h1 - y, w1 - x, c);
              } else if (orientation === 8) {
                image.setPixel(y, w1 - x, c);
              } else {
                image._set((t3 = offset, offset = t3 + 1, t3), c);
              }
            }
          }
          break;
        }
      case 3:
        {
          colorTransform = true;
          component1 = jpeg.components[$_get](0);
          component2 = jpeg.components[$_get](1);
          component3 = jpeg.components[$_get](2);
          let lines1 = component1.lines;
          let lines2 = component2.lines;
          let lines3 = component3.lines;
          let hShift1 = component1.hScaleShift;
          let vShift1 = component1.vScaleShift;
          let hShift2 = component2.hScaleShift;
          let vShift2 = component2.vScaleShift;
          let hShift3 = component3.hScaleShift;
          let vShift3 = component3.vScaleShift;
          for (let y = 0; y < dart.nullCheck(jpeg.height); y = y + 1) {
            let y1 = y[$rightShift](vShift1);
            let y2 = y[$rightShift](vShift2);
            let y3 = y[$rightShift](vShift3);
            component1Line = lines1[$_get](y1);
            component2Line = lines2[$_get](y2);
            component3Line = lines3[$_get](y3);
            for (let x = 0; x < dart.nullCheck(jpeg.width); x = x + 1) {
              let x1 = x[$rightShift](hShift1);
              let x2 = x[$rightShift](hShift2);
              let x3 = x[$rightShift](hShift3);
              Y = dart.nullCheck(component1Line)[$_get](x1) << 8 >>> 0;
              Cb = dart.nullCheck(component2Line)[$_get](x2) - 128;
              Cr = dart.nullCheck(component3Line)[$_get](x3) - 128;
              R = Y + 359 * Cr + 128;
              G = Y - 88 * Cb - 183 * Cr + 128;
              B = Y + 454 * Cb + 128;
              R = _jpeg_quantize_html._clamp8(bit_operators.shiftR(R, 8));
              G = _jpeg_quantize_html._clamp8(bit_operators.shiftR(G, 8));
              B = _jpeg_quantize_html._clamp8(bit_operators.shiftR(B, 8));
              let c = color.getColor(R, G, B);
              if (orientation === 2) {
                image.setPixel(w1 - x, y, c);
              } else if (orientation === 3) {
                image.setPixel(w1 - x, h1 - y, c);
              } else if (orientation === 4) {
                image.setPixel(x, h1 - y, c);
              } else if (orientation === 5) {
                image.setPixel(y, x, c);
              } else if (orientation === 6) {
                image.setPixel(h1 - y, x, c);
              } else if (orientation === 7) {
                image.setPixel(h1 - y, w1 - x, c);
              } else if (orientation === 8) {
                image.setPixel(y, w1 - x, c);
              } else {
                image._set((t3$ = offset, offset = t3$ + 1, t3$), c);
              }
            }
          }
          break;
        }
      case 4:
        {
          if (jpeg.adobe == null) {
            dart.throw(new image_exception.ImageException.new("Unsupported color mode (4 components)"));
          }
          colorTransform = false;
          if (dart.nullCheck(jpeg.adobe).transformCode !== 0) {
            colorTransform = true;
          }
          component1 = jpeg.components[$_get](0);
          component2 = jpeg.components[$_get](1);
          component3 = jpeg.components[$_get](2);
          component4 = jpeg.components[$_get](3);
          let lines1 = component1.lines;
          let lines2 = component2.lines;
          let lines3 = component3.lines;
          let lines4 = component4.lines;
          let hShift1 = component1.hScaleShift;
          let vShift1 = component1.vScaleShift;
          let hShift2 = component2.hScaleShift;
          let vShift2 = component2.vScaleShift;
          let hShift3 = component3.hScaleShift;
          let vShift3 = component3.vScaleShift;
          let hShift4 = component4.hScaleShift;
          let vShift4 = component4.vScaleShift;
          for (let y = 0; y < dart.nullCheck(jpeg.height); y = y + 1) {
            let y1 = y[$rightShift](vShift1);
            let y2 = y[$rightShift](vShift2);
            let y3 = y[$rightShift](vShift3);
            let y4 = y[$rightShift](vShift4);
            component1Line = lines1[$_get](y1);
            component2Line = lines2[$_get](y2);
            component3Line = lines3[$_get](y3);
            component4Line = lines4[$_get](y4);
            for (let x = 0; x < dart.nullCheck(jpeg.width); x = x + 1) {
              let x1 = x[$rightShift](hShift1);
              let x2 = x[$rightShift](hShift2);
              let x3 = x[$rightShift](hShift3);
              let x4 = x[$rightShift](hShift4);
              if (!colorTransform) {
                C = dart.nullCheck(component1Line)[$_get](x1);
                M = dart.nullCheck(component2Line)[$_get](x2);
                Ye = dart.nullCheck(component3Line)[$_get](x3);
                K = dart.nullCheck(component4Line)[$_get](x4);
              } else {
                Y = dart.nullCheck(component1Line)[$_get](x1);
                Cb = dart.nullCheck(component2Line)[$_get](x2);
                Cr = dart.nullCheck(component3Line)[$_get](x3);
                K = dart.nullCheck(component4Line)[$_get](x4);
                C = 255 - _jpeg_quantize_html._clamp8((Y + 1.402 * (Cr - 128))[$toInt]());
                M = 255 - _jpeg_quantize_html._clamp8((Y - 0.3441363 * (Cb - 128) - 0.71413636 * (Cr - 128))[$toInt]());
                Ye = 255 - _jpeg_quantize_html._clamp8((Y + 1.772 * (Cb - 128))[$toInt]());
              }
              R = bit_operators.shiftR(C * K, 8);
              G = bit_operators.shiftR(M * K, 8);
              B = bit_operators.shiftR(Ye * K, 8);
              let c = color.getColor(R, G, B);
              if (orientation === 2) {
                image.setPixel(w1 - x, y, c);
              } else if (orientation === 3) {
                image.setPixel(w1 - x, h1 - y, c);
              } else if (orientation === 4) {
                image.setPixel(x, h1 - y, c);
              } else if (orientation === 5) {
                image.setPixel(y, x, c);
              } else if (orientation === 6) {
                image.setPixel(h1 - y, x, c);
              } else if (orientation === 7) {
                image.setPixel(h1 - y, w1 - x, c);
              } else if (orientation === 8) {
                image.setPixel(y, w1 - x, c);
              } else {
                image._set((t3$0 = offset, offset = t3$0 + 1, t3$0), c);
              }
            }
          }
          break;
        }
      default:
        {
          dart.throw(new image_exception.ImageException.new("Unsupported color mode"));
        }
    }
    return image;
  };
  dart.defineLazy(_jpeg_quantize_html, {
    /*_jpeg_quantize_html._dctClip*/get _dctClip() {
      return null;
    },
    set _dctClip(_) {}
  }, false);
  var adobe = dart.privateName(jpeg_data, "JpegData.adobe");
  var frame = dart.privateName(jpeg_data, "JpegData.frame");
  var resetInterval = dart.privateName(jpeg_data, "JpegData.resetInterval");
  var comment = dart.privateName(jpeg_data, "JpegData.comment");
  var exif = dart.privateName(jpeg_data, "JpegData.exif");
  var quantizationTables = dart.privateName(jpeg_data, "JpegData.quantizationTables");
  var frames = dart.privateName(jpeg_data, "JpegData.frames");
  var huffmanTablesAC = dart.privateName(jpeg_data, "JpegData.huffmanTablesAC");
  var huffmanTablesDC = dart.privateName(jpeg_data, "JpegData.huffmanTablesDC");
  var components = dart.privateName(jpeg_data, "JpegData.components");
  var __JpegData_input = dart.privateName(jpeg_data, "_#JpegData#input");
  var __JpegData_jfif = dart.privateName(jpeg_data, "_#JpegData#jfif");
  var _nextMarker = dart.privateName(jpeg_data, "_nextMarker");
  var _readBlock = dart.privateName(jpeg_data, "_readBlock");
  var _readFrame = dart.privateName(jpeg_data, "_readFrame");
  var _skipBlock = dart.privateName(jpeg_data, "_skipBlock");
  var _read = dart.privateName(jpeg_data, "_read");
  var _buildComponentData = dart.privateName(jpeg_data, "_buildComponentData");
  var _readAppData = dart.privateName(jpeg_data, "_readAppData");
  var _readDQT = dart.privateName(jpeg_data, "_readDQT");
  var _readDHT = dart.privateName(jpeg_data, "_readDHT");
  var _readDRI = dart.privateName(jpeg_data, "_readDRI");
  var _readSOS = dart.privateName(jpeg_data, "_readSOS");
  var _readExifValue = dart.privateName(jpeg_data, "_readExifValue");
  var _readExifDir = dart.privateName(jpeg_data, "_readExifDir");
  var _readExifData = dart.privateName(jpeg_data, "_readExifData");
  var _buildHuffmanTable = dart.privateName(jpeg_data, "_buildHuffmanTable");
  jpeg_data.JpegData = class JpegData extends core.Object {
    get adobe() {
      return this[adobe];
    }
    set adobe(value) {
      this[adobe] = value;
    }
    get frame() {
      return this[frame];
    }
    set frame(value) {
      this[frame] = value;
    }
    get resetInterval() {
      return this[resetInterval];
    }
    set resetInterval(value) {
      this[resetInterval] = value;
    }
    get comment() {
      return this[comment];
    }
    set comment(value) {
      this[comment] = value;
    }
    get exif() {
      return this[exif];
    }
    set exif(value) {
      super.exif = value;
    }
    get quantizationTables() {
      return this[quantizationTables];
    }
    set quantizationTables(value) {
      super.quantizationTables = value;
    }
    get frames() {
      return this[frames];
    }
    set frames(value) {
      super.frames = value;
    }
    get huffmanTablesAC() {
      return this[huffmanTablesAC];
    }
    set huffmanTablesAC(value) {
      super.huffmanTablesAC = value;
    }
    get huffmanTablesDC() {
      return this[huffmanTablesDC];
    }
    set huffmanTablesDC(value) {
      super.huffmanTablesDC = value;
    }
    get components() {
      return this[components];
    }
    set components(value) {
      super.components = value;
    }
    get input() {
      let t3;
      t3 = this[__JpegData_input];
      return t3 == null ? dart.throw(new _internal.LateError.fieldNI("input")) : t3;
    }
    set input(input$35param) {
      this[__JpegData_input] = input$35param;
    }
    get jfif() {
      let t3;
      t3 = this[__JpegData_jfif];
      return t3 == null ? dart.throw(new _internal.LateError.fieldNI("jfif")) : t3;
    }
    set jfif(jfif$35param) {
      this[__JpegData_jfif] = jfif$35param;
    }
    validate(bytes) {
      let t3;
      this.input = new input_buffer.InputBuffer.new(bytes, {bigEndian: true});
      let soiCheck = this.input.peekBytes(2);
      if (soiCheck._get(0) !== 255 || soiCheck._get(1) !== 216) {
        return false;
      }
      let marker = this[_nextMarker]();
      if (marker !== 216) {
        return false;
      }
      let hasSOF = false;
      let hasSOS = false;
      marker = this[_nextMarker]();
      while (marker !== 217 && !this.input.isEOS) {
        let sectionByteSize = this.input.readUint16();
        if (sectionByteSize < 2) {
          break;
        }
        t3 = this.input;
        t3.offset = t3.offset + (sectionByteSize - 2);
        switch (marker) {
          case 192:
          case 193:
          case 194:
            {
              hasSOF = true;
              break;
            }
          case 218:
            {
              hasSOS = true;
              break;
            }
          default:
        }
        marker = this[_nextMarker]();
      }
      return hasSOF && hasSOS;
    }
    readInfo(bytes) {
      this.input = new input_buffer.InputBuffer.new(bytes, {bigEndian: true});
      let marker = this[_nextMarker]();
      if (marker !== 216) {
        return null;
      }
      let info = new jpeg_info.JpegInfo.new();
      let hasSOF = false;
      let hasSOS = false;
      marker = this[_nextMarker]();
      while (marker !== 217 && !this.input.isEOS) {
        switch (marker) {
          case 192:
          case 193:
          case 194:
            {
              hasSOF = true;
              this[_readFrame](marker, this[_readBlock]());
              break;
            }
          case 218:
            {
              hasSOS = true;
              this[_skipBlock]();
              break;
            }
          default:
            {
              this[_skipBlock]();
              break;
            }
        }
        marker = this[_nextMarker]();
      }
      if (this.frame != null) {
        info.width = dart.nullCheck(dart.nullCheck(this.frame).samplesPerLine);
        info.height = dart.nullCheck(dart.nullCheck(this.frame).scanLines);
      }
      this.frame = null;
      this.frames[$clear]();
      return hasSOF && hasSOS ? info : null;
    }
    read(bytes) {
      this.input = new input_buffer.InputBuffer.new(bytes, {bigEndian: true});
      this[_read]();
      if (this.frames[$length] !== 1) {
        dart.throw(new image_exception.ImageException.new("Only single frame JPEGs supported"));
      }
      for (let i = 0; i < dart.nullCheck(this.frame).componentsOrder[$length]; i = i + 1) {
        let component = dart.nullCheck(dart.nullCheck(this.frame).components[$_get](dart.nullCheck(this.frame).componentsOrder[$_get](i)));
        this.components[$add](new _component_data.ComponentData.new(component.hSamples, dart.nullCheck(this.frame).maxHSamples, component.vSamples, dart.nullCheck(this.frame).maxVSamples, this[_buildComponentData](this.frame, component)));
      }
    }
    get width() {
      return dart.nullCheck(this.frame).samplesPerLine;
    }
    get height() {
      return dart.nullCheck(this.frame).scanLines;
    }
    getImage() {
      return _jpeg_quantize_html.getImageFromJpeg(this);
    }
    [_read]() {
      let t3, t3$;
      let marker = this[_nextMarker]();
      if (marker !== 216) {
        dart.throw(new image_exception.ImageException.new("Start Of Image marker not found."));
      }
      marker = this[_nextMarker]();
      while (marker !== 217 && !this.input.isEOS) {
        let block = this[_readBlock]();
        switch (marker) {
          case 224:
          case 225:
          case 226:
          case 227:
          case 228:
          case 229:
          case 230:
          case 231:
          case 232:
          case 233:
          case 234:
          case 235:
          case 236:
          case 237:
          case 238:
          case 239:
          case 254:
            {
              this[_readAppData](marker, block);
              break;
            }
          case 219:
            {
              this[_readDQT](block);
              break;
            }
          case 192:
          case 193:
          case 194:
            {
              this[_readFrame](marker, block);
              break;
            }
          case 195:
          case 197:
          case 198:
          case 199:
          case 200:
          case 201:
          case 202:
          case 203:
          case 205:
          case 206:
          case 207:
            {
              dart.throw(new image_exception.ImageException.new("Unhandled frame type " + marker[$toRadixString](16)));
            }
          case 196:
            {
              this[_readDHT](block);
              break;
            }
          case 221:
            {
              this[_readDRI](block);
              break;
            }
          case 218:
            {
              this[_readSOS](block);
              break;
            }
          case 255:
            {
              if (this.input._get(0) !== 255) {
                t3 = this.input;
                t3.offset = t3.offset - 1;
              }
              break;
            }
          default:
            {
              if (this.input._get(-3) === 255 && this.input._get(-2) >= 192 && this.input._get(-2) <= 254) {
                t3$ = this.input;
                t3$.offset = t3$.offset - 3;
                break;
              }
              if (marker !== 0) {
                dart.throw(new image_exception.ImageException.new("Unknown JPEG marker " + marker[$toRadixString](16)));
              }
              break;
            }
        }
        marker = this[_nextMarker]();
      }
    }
    [_skipBlock]() {
      let t3;
      let length = this.input.readUint16();
      if (length < 2) {
        dart.throw(new image_exception.ImageException.new("Invalid Block"));
      }
      t3 = this.input;
      t3.offset = t3.offset + (length - 2);
    }
    [_readBlock]() {
      let length = this.input.readUint16();
      if (length < 2) {
        dart.throw(new image_exception.ImageException.new("Invalid Block"));
      }
      return this.input.readBytes(length - 2);
    }
    [_nextMarker]() {
      let c = 0;
      if (this.input.isEOS) {
        return c;
      }
      do {
        do {
          c = this.input.readByte();
        } while (c !== 255 && !this.input.isEOS);
        if (this.input.isEOS) {
          return c;
        }
        do {
          c = this.input.readByte();
        } while (c === 255 && !this.input.isEOS);
      } while (c === 0 && !this.input.isEOS);
      return c;
    }
    [_readExifValue](block, format, offset) {
      let initialBlockLength = block.length;
      try {
        switch (format) {
          case 6:
            {
              return block.readInt8();
            }
          case 1:
          case 7:
            {
              return block.readByte();
            }
          case 2:
            {
              return block.readString(1);
            }
          case 3:
            {
              return block.readUint16();
            }
          case 4:
            {
              return block.readUint32();
            }
          case 5:
          case 10:
            {
              {
                let buffer = block.peekBytes(8, offset);
                let num = buffer.readInt32();
                let den = buffer.readInt32();
                if (den === 0) {
                  return 0.0;
                }
                return num / den;
              }
            }
          case 8:
            {
              return block.readInt16();
            }
          case 9:
            {
              return block.readInt32();
            }
          case 11:
            {
              return block.readFloat32();
            }
          case 12:
            {
              return block.peekBytes(8, offset).readFloat64();
            }
          default:
            {
              return 0;
            }
        }
      } finally {
        let bytesRead = initialBlockLength - block.length;
        if (bytesRead < 4) {
          block.skip(4 - bytesRead);
        }
      }
    }
    [_readExifDir](block, nesting = 0) {
      if (nesting > 4) {
        return;
      }
      let numDirEntries = block.readUint16();
      let bytesPerFormat = C[0] || CT.C0;
      for (let di = 0; di < numDirEntries; di = di + 1) {
        let tag = block.readUint16();
        let format = block.readUint16();
        let components = block.readUint32();
        if (format - 1 >= 12) {
          continue;
        }
        if (components > 65536) {
          continue;
        }
        let byteCount = bytesPerFormat[$_get](format);
        let offset = 0;
        if (byteCount > 4) {
          offset = block.readUint32();
          if (offset + byteCount > block.length) {
            continue;
          }
        }
        this.exif.data[$_set](tag, this[_readExifValue](block, format, offset));
      }
    }
    [_readExifData](block) {
      let t3;
      t3 = this.exif;
      t3.rawData == null ? t3.rawData = T.JSArrayOfUint8List().of([]) : null;
      let rawData = block.toUint8List()[$sublist](0);
      dart.nullCheck(this.exif.rawData)[$add](rawData);
      if (block.readUint32() !== 1165519206) {
        return;
      }
      if (block.readUint16() !== 0) {
        return;
      }
      let saveEndian = block.bigEndian;
      let alignment = block.readString(2);
      if (alignment === "II") {
        block.bigEndian = false;
      } else if (alignment === "MM") {
        block.bigEndian = true;
      } else {
        return;
      }
      block.skip(2);
      let offset = block.readUint32();
      if (offset < 8 || offset > 16) {
        if (offset > block.length - 16) {
          block.bigEndian = saveEndian;
          return;
        }
      }
      if (offset > 8) {
        block.skip(offset - 8);
      }
      this[_readExifDir](block);
      block.bigEndian = saveEndian;
    }
    [_readAppData](marker, block) {
      let appData = block;
      if (marker === 224) {
        if (appData._get(0) === 74 && appData._get(1) === 70 && appData._get(2) === 73 && appData._get(3) === 70 && appData._get(4) === 0) {
          this.jfif = new jpeg_jfif.JpegJfif.new();
          this.jfif.majorVersion = appData._get(5);
          this.jfif.minorVersion = appData._get(6);
          this.jfif.densityUnits = appData._get(7);
          this.jfif.xDensity = (appData._get(8) << 8 | appData._get(9)) >>> 0;
          this.jfif.yDensity = (appData._get(10) << 8 | appData._get(11)) >>> 0;
          this.jfif.thumbWidth = appData._get(12);
          this.jfif.thumbHeight = appData._get(13);
          let thumbSize = 3 * this.jfif.thumbWidth * this.jfif.thumbHeight;
          this.jfif.thumbData = appData.subset(14 + thumbSize, {offset: 14});
        }
      } else if (marker === 225) {
        this[_readExifData](appData);
      } else if (marker === 238) {
        if (appData._get(0) === 65 && appData._get(1) === 100 && appData._get(2) === 111 && appData._get(3) === 98 && appData._get(4) === 101 && appData._get(5) === 0) {
          this.adobe = new jpeg_adobe.JpegAdobe.new();
          dart.nullCheck(this.adobe).version = appData._get(6);
          dart.nullCheck(this.adobe).flags0 = (appData._get(7) << 8 | appData._get(8)) >>> 0;
          dart.nullCheck(this.adobe).flags1 = (appData._get(9) << 8 | appData._get(10)) >>> 0;
          dart.nullCheck(this.adobe).transformCode = appData._get(11);
        }
      } else if (marker === 254) {
        try {
          this.comment = appData.readStringUtf8();
        } catch (e$) {
          let e = dart.getThrown(e$);
          let _ = dart.stackTrace(e$);
          if (core.Object.is(e)) {
          } else
            throw e$;
        }
      }
    }
    [_readDQT](block) {
      while (!block.isEOS) {
        let n = block.readByte();
        let prec = n[$rightShift](4);
        n = n & 15;
        if (n >= 4) {
          dart.throw(new image_exception.ImageException.new("Invalid number of quantization tables"));
        }
        if (this.quantizationTables[$_get](n) == null) {
          this.quantizationTables[$_set](n, _native_typed_data.NativeInt16List.new(64));
        }
        let tableData = this.quantizationTables[$_get](n);
        for (let i = 0; i < 64; i = i + 1) {
          let tmp = null;
          if (prec !== 0) {
            tmp = block.readUint16();
          } else {
            tmp = block.readByte();
          }
          dart.nullCheck(tableData)[$_set](jpeg.Jpeg.dctZigZag[$_get](i), tmp);
        }
      }
      if (!block.isEOS) {
        dart.throw(new image_exception.ImageException.new("Bad length for DQT block"));
      }
    }
    [_readFrame](marker, block) {
      if (this.frame != null) {
        dart.throw(new image_exception.ImageException.new("Duplicate JPG frame data found."));
      }
      this.frame = new jpeg_frame.JpegFrame.new();
      dart.nullCheck(this.frame).extended = marker === 193;
      dart.nullCheck(this.frame).progressive = marker === 194;
      dart.nullCheck(this.frame).precision = block.readByte();
      dart.nullCheck(this.frame).scanLines = block.readUint16();
      dart.nullCheck(this.frame).samplesPerLine = block.readUint16();
      let numComponents = block.readByte();
      for (let i = 0; i < numComponents; i = i + 1) {
        let componentId = block.readByte();
        let x = block.readByte();
        let h = x >> 4 & 15;
        let v = x & 15;
        let qId = block.readByte();
        dart.nullCheck(this.frame).componentsOrder[$add](componentId);
        dart.nullCheck(this.frame).components[$_set](componentId, new jpeg_component.JpegComponent.new(h, v, this.quantizationTables, qId));
      }
      dart.nullCheck(this.frame).prepare();
      this.frames[$add](this.frame);
    }
    [_readDHT](block) {
      while (!block.isEOS) {
        let index = block.readByte();
        let bits = _native_typed_data.NativeUint8List.new(16);
        let count = 0;
        for (let j = 0; j < 16; j = j + 1) {
          bits[$_set](j, block.readByte());
          count = count + bits[$_get](j);
        }
        let huffmanValues = _native_typed_data.NativeUint8List.new(count);
        for (let j = 0; j < count; j = j + 1) {
          huffmanValues[$_set](j, block.readByte());
        }
        let ht = null;
        if ((index & 16) !== 0) {
          index = index - 16;
          ht = this.huffmanTablesAC;
        } else {
          ht = this.huffmanTablesDC;
        }
        if (ht[$length] <= index) {
          ht[$length] = index + 1;
        }
        ht[$_set](index, this[_buildHuffmanTable](bits, huffmanValues));
      }
    }
    [_readDRI](block) {
      this.resetInterval = block.readUint16();
    }
    [_readSOS](block) {
      let n = block.readByte();
      if (n < 1 || n > 4) {
        dart.throw(new image_exception.ImageException.new("Invalid SOS block"));
      }
      let components = T.ListOfJpegComponent().generate(n, dart.fn(i => {
        let id = block.readByte();
        let c = block.readByte();
        if (!dart.nullCheck(this.frame).components[$containsKey](id)) {
          dart.throw(new image_exception.ImageException.new("Invalid Component in SOS block"));
        }
        let component = dart.nullCheck(dart.nullCheck(this.frame).components[$_get](id));
        let dc_tbl_no = c >> 4 & 15;
        let ac_tbl_no = c & 15;
        if (dc_tbl_no < this.huffmanTablesDC[$length]) {
          component.huffmanTableDC = dart.nullCheck(this.huffmanTablesDC[$_get](dc_tbl_no));
        }
        if (ac_tbl_no < this.huffmanTablesAC[$length]) {
          component.huffmanTableAC = dart.nullCheck(this.huffmanTablesAC[$_get](ac_tbl_no));
        }
        return component;
      }, T.intToJpegComponent()));
      let spectralStart = block.readByte();
      let spectralEnd = block.readByte();
      let successiveApproximation = block.readByte();
      let Ah = successiveApproximation >> 4 & 15;
      let Al = successiveApproximation & 15;
      new jpeg_scan.JpegScan.new(this.input, dart.nullCheck(this.frame), components, this.resetInterval, spectralStart, spectralEnd, Ah, Al).decode();
    }
    [_buildHuffmanTable](codeLengths, values) {
      let t4;
      let k = 0;
      let code = T.JSArrayOf_JpegHuffman().of([]);
      let length = 16;
      while (length > 0 && codeLengths[$_get](length - 1) === 0) {
        length = length - 1;
      }
      code[$add](new jpeg_data._JpegHuffman.new());
      let p = code[$_get](0);
      let q = null;
      for (let i = 0; i < length; i = i + 1) {
        for (let j = 0; j < codeLengths[$_get](i); j = j + 1) {
          p = code[$removeLast]();
          if (p.children[$length] <= p.index) {
            p.children[$length] = p.index + 1;
          }
          p.children[$_set](p.index, values[$_get](k));
          while (p.index > 0) {
            p = code[$removeLast]();
          }
          t4 = p;
          t4.index = t4.index + 1;
          code[$add](p);
          while (code[$length] <= i) {
            q = new jpeg_data._JpegHuffman.new();
            code[$add](q);
            if (p.children[$length] <= p.index) {
              p.children[$length] = p.index + 1;
            }
            p.children[$_set](p.index, q.children);
            p = q;
          }
          k = k + 1;
        }
        if (i + 1 < length) {
          q = new jpeg_data._JpegHuffman.new();
          code[$add](q);
          if (p.children[$length] <= p.index) {
            p.children[$length] = p.index + 1;
          }
          p.children[$_set](p.index, q.children);
          p = q;
        }
      }
      return code[$_get](0).children;
    }
    [_buildComponentData](frame, component) {
      let t4, t4$;
      let blocksPerLine = component.blocksPerLine;
      let blocksPerColumn = component.blocksPerColumn;
      let samplesPerLine = blocksPerLine << 3 >>> 0;
      let R = _native_typed_data.NativeInt32List.new(64);
      let r = _native_typed_data.NativeUint8List.new(64);
      let lines = T.ListOfUint8ListN().filled(blocksPerColumn * 8, null);
      let l = 0;
      for (let blockRow = 0; blockRow < blocksPerColumn; blockRow = blockRow + 1) {
        let scanLine = blockRow << 3 >>> 0;
        for (let i = 0; i < 8; i = i + 1) {
          lines[$_set]((t4 = l, l = t4 + 1, t4), _native_typed_data.NativeUint8List.new(samplesPerLine));
        }
        for (let blockCol = 0; blockCol < blocksPerLine; blockCol = blockCol + 1) {
          _jpeg_quantize_html.quantizeAndInverse(dart.nullCheck(component.quantizationTable), typed_data.Int32List.as(component.blocks[$_get](blockRow)[$_get](blockCol)), r, R);
          let offset = 0;
          let sample = blockCol << 3 >>> 0;
          for (let j = 0; j < 8; j = j + 1) {
            let line = lines[$_get](scanLine + j);
            for (let i = 0; i < 8; i = i + 1) {
              dart.nullCheck(line)[$_set](sample + i, r[$_get]((t4$ = offset, offset = t4$ + 1, t4$)));
            }
          }
        }
      }
      return lines;
    }
    static toFix(val) {
      return ((val * 1048576)[$toInt]() & 4294967295) >>> 0;
    }
    static ['_#new#tearOff']() {
      return new jpeg_data.JpegData.new();
    }
  };
  (jpeg_data.JpegData.new = function() {
    this[__JpegData_input] = null;
    this[__JpegData_jfif] = null;
    this[adobe] = null;
    this[frame] = null;
    this[resetInterval] = null;
    this[comment] = null;
    this[exif] = new exif_data.ExifData.new();
    this[quantizationTables] = T.ListOfInt16ListN().filled(4, null);
    this[frames] = T.JSArrayOfJpegFrameN().of([]);
    this[huffmanTablesAC] = T.JSArrayOfListN().of([]);
    this[huffmanTablesDC] = T.JSArrayOfListN().of([]);
    this[components] = T.JSArrayOfComponentData().of([]);
    ;
  }).prototype = jpeg_data.JpegData.prototype;
  dart.addTypeTests(jpeg_data.JpegData);
  dart.addTypeCaches(jpeg_data.JpegData);
  dart.setMethodSignature(jpeg_data.JpegData, () => ({
    __proto__: dart.getMethods(jpeg_data.JpegData.__proto__),
    validate: dart.fnType(core.bool, [core.List$(core.int)]),
    readInfo: dart.fnType(dart.nullable(jpeg_info.JpegInfo), [core.List$(core.int)]),
    read: dart.fnType(dart.void, [core.List$(core.int)]),
    getImage: dart.fnType(image$.Image, []),
    [_read]: dart.fnType(dart.void, []),
    [_skipBlock]: dart.fnType(dart.void, []),
    [_readBlock]: dart.fnType(input_buffer.InputBuffer, []),
    [_nextMarker]: dart.fnType(core.int, []),
    [_readExifValue]: dart.fnType(dart.dynamic, [input_buffer.InputBuffer, core.int, core.int]),
    [_readExifDir]: dart.fnType(dart.void, [input_buffer.InputBuffer], [core.int]),
    [_readExifData]: dart.fnType(dart.void, [input_buffer.InputBuffer]),
    [_readAppData]: dart.fnType(dart.void, [core.int, input_buffer.InputBuffer]),
    [_readDQT]: dart.fnType(dart.void, [input_buffer.InputBuffer]),
    [_readFrame]: dart.fnType(dart.void, [core.int, input_buffer.InputBuffer]),
    [_readDHT]: dart.fnType(dart.void, [input_buffer.InputBuffer]),
    [_readDRI]: dart.fnType(dart.void, [input_buffer.InputBuffer]),
    [_readSOS]: dart.fnType(dart.void, [input_buffer.InputBuffer]),
    [_buildHuffmanTable]: dart.fnType(dart.nullable(core.List), [typed_data.Uint8List, typed_data.Uint8List]),
    [_buildComponentData]: dart.fnType(core.List$(dart.nullable(typed_data.Uint8List)), [dart.nullable(jpeg_frame.JpegFrame), jpeg_component.JpegComponent])
  }));
  dart.setStaticMethodSignature(jpeg_data.JpegData, () => ['toFix']);
  dart.setGetterSignature(jpeg_data.JpegData, () => ({
    __proto__: dart.getGetters(jpeg_data.JpegData.__proto__),
    input: input_buffer.InputBuffer,
    jfif: jpeg_jfif.JpegJfif,
    width: dart.nullable(core.int),
    height: dart.nullable(core.int)
  }));
  dart.setSetterSignature(jpeg_data.JpegData, () => ({
    __proto__: dart.getSetters(jpeg_data.JpegData.__proto__),
    input: input_buffer.InputBuffer,
    jfif: jpeg_jfif.JpegJfif
  }));
  dart.setLibraryUri(jpeg_data.JpegData, I[0]);
  dart.setFieldSignature(jpeg_data.JpegData, () => ({
    __proto__: dart.getFields(jpeg_data.JpegData.__proto__),
    [__JpegData_input]: dart.fieldType(dart.nullable(input_buffer.InputBuffer)),
    [__JpegData_jfif]: dart.fieldType(dart.nullable(jpeg_jfif.JpegJfif)),
    adobe: dart.fieldType(dart.nullable(jpeg_adobe.JpegAdobe)),
    frame: dart.fieldType(dart.nullable(jpeg_frame.JpegFrame)),
    resetInterval: dart.fieldType(dart.nullable(core.int)),
    comment: dart.fieldType(dart.nullable(core.String)),
    exif: dart.finalFieldType(exif_data.ExifData),
    quantizationTables: dart.finalFieldType(core.List$(dart.nullable(typed_data.Int16List))),
    frames: dart.finalFieldType(core.List$(dart.nullable(jpeg_frame.JpegFrame))),
    huffmanTablesAC: dart.finalFieldType(core.List$(dart.nullable(core.List))),
    huffmanTablesDC: dart.finalFieldType(core.List$(dart.nullable(core.List))),
    components: dart.finalFieldType(core.List$(_component_data.ComponentData))
  }));
  dart.setStaticFieldSignature(jpeg_data.JpegData, () => ['CRR', 'CRG', 'CBG', 'CBB']);
  dart.defineLazy(jpeg_data.JpegData, {
    /*jpeg_data.JpegData.CRR*/get CRR() {
      return C[1] || CT.C1;
    },
    /*jpeg_data.JpegData.CRG*/get CRG() {
      return C[2] || CT.C2;
    },
    /*jpeg_data.JpegData.CBG*/get CBG() {
      return C[3] || CT.C3;
    },
    /*jpeg_data.JpegData.CBB*/get CBB() {
      return C[4] || CT.C4;
    }
  }, false);
  jpeg_data._JpegHuffman = class _JpegHuffman extends core.Object {
    static ['_#new#tearOff']() {
      return new jpeg_data._JpegHuffman.new();
    }
  };
  (jpeg_data._JpegHuffman.new = function() {
    this.children = [];
    this.index = 0;
    ;
  }).prototype = jpeg_data._JpegHuffman.prototype;
  dart.addTypeTests(jpeg_data._JpegHuffman);
  dart.addTypeCaches(jpeg_data._JpegHuffman);
  dart.setLibraryUri(jpeg_data._JpegHuffman, I[0]);
  dart.setFieldSignature(jpeg_data._JpegHuffman, () => ({
    __proto__: dart.getFields(jpeg_data._JpegHuffman.__proto__),
    children: dart.finalFieldType(core.List),
    index: dart.fieldType(core.int)
  }));
  dart.trackLibraries("packages/image/src/formats/jpeg/_jpeg_quantize_html.dart", {
    "package:image/src/formats/jpeg/_jpeg_quantize_html.dart": _jpeg_quantize_html,
    "package:image/src/formats/jpeg/jpeg_data.dart": jpeg_data
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["_jpeg_quantize_html.dart","jpeg_data.dart"],"names":[],"mappings":"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","file":"../../../../../../../../../../../../../packages/image/src/formats/jpeg/_jpeg_quantize_html.dart.lib.js"}');
  // Exports:
  return {
    src__formats__jpeg___jpeg_quantize_html: _jpeg_quantize_html,
    src__formats__jpeg__jpeg_data: jpeg_data
  };
}));

//# sourceMappingURL=_jpeg_quantize_html.dart.lib.js.map
