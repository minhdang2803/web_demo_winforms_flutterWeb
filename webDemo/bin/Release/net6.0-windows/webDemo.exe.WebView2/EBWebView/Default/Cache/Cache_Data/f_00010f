define(['dart_sdk', 'packages/flutter/src/painting/box_decoration.dart', 'packages/flutter/src/painting/border_radius.dart', 'packages/flutter/src/material/shadows.dart', 'packages/flutter/src/animation/listener_helpers.dart', 'packages/flutter/src/foundation/math.dart', 'packages/flutter/src/painting/_network_image_web.dart', 'packages/flutter/src/rendering/custom_paint.dart', 'packages/flutter/src/painting/decoration.dart', 'packages/flutter/src/widgets/title.dart', 'packages/flutter/src/painting/edge_insets.dart', 'packages/flutter/src/rendering/box.dart', 'packages/flutter/src/animation/curves.dart', 'packages/flutter/src/material/icon_button.dart', 'packages/flutter/src/services/keyboard_key.g.dart', 'packages/flutter/src/material/scrollbar.dart', 'packages/flutter/src/widgets/scroll_view.dart', 'packages/flutter/src/material/constants.dart', 'packages/flutter/src/rendering/shifted_box.dart', 'packages/flutter/src/widgets/layout_builder.dart', 'packages/flutter/src/painting/placeholder_span.dart', 'packages/flutter/src/rendering/layer.dart', 'packages/flutter/src/rendering/proxy_box.dart', 'packages/flutter/src/painting/alignment.dart', 'packages/flutter/src/material/colors.dart', 'packages/flutter/src/rendering/flex.dart', 'packages/flutter/src/widgets/icon.dart', 'packages/flutter/src/widgets/icon_data.dart', 'packages/flutter/src/widgets/icon_theme.dart', 'packages/flutter/src/widgets/icon_theme_data.dart', 'packages/flutter/src/painting/box_border.dart', 'packages/flutter/src/painting/borders.dart', 'packages/flutter/src/material/material_state.dart', 'packages/flutter/src/services/mouse_cursor.dart', 'packages/flutter/src/widgets/form.dart'], (function load__packages__flutter__src__material__dropdown_dart(dart_sdk, packages__flutter__src__painting__box_decoration$46dart, packages__flutter__src__painting__border_radius$46dart, packages__flutter__src__material__shadows$46dart, packages__flutter__src__animation__listener_helpers$46dart, packages__flutter__src__foundation__math$46dart, packages__flutter__src__painting___network_image_web$46dart, packages__flutter__src__rendering__custom_paint$46dart, packages__flutter__src__painting__decoration$46dart, packages__flutter__src__widgets__title$46dart, packages__flutter__src__painting__edge_insets$46dart, packages__flutter__src__rendering__box$46dart, packages__flutter__src__animation__curves$46dart, packages__flutter__src__material__icon_button$46dart, packages__flutter__src__services__keyboard_key$46g$46dart, packages__flutter__src__material__scrollbar$46dart, packages__flutter__src__widgets__scroll_view$46dart, packages__flutter__src__material__constants$46dart, packages__flutter__src__rendering__shifted_box$46dart, packages__flutter__src__widgets__layout_builder$46dart, packages__flutter__src__painting__placeholder_span$46dart, packages__flutter__src__rendering__layer$46dart, packages__flutter__src__rendering__proxy_box$46dart, packages__flutter__src__painting__alignment$46dart, packages__flutter__src__material__colors$46dart, packages__flutter__src__rendering__flex$46dart, packages__flutter__src__widgets__icon$46dart, packages__flutter__src__widgets__icon_data$46dart, packages__flutter__src__widgets__icon_theme$46dart, packages__flutter__src__widgets__icon_theme_data$46dart, packages__flutter__src__painting__box_border$46dart, packages__flutter__src__painting__borders$46dart, packages__flutter__src__material__material_state$46dart, packages__flutter__src__services__mouse_cursor$46dart, packages__flutter__src__widgets__form$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const ui = dart_sdk.ui;
  const math = dart_sdk.math;
  const _internal = dart_sdk._internal;
  const _interceptors = dart_sdk._interceptors;
  const _js_helper = dart_sdk._js_helper;
  const collection = dart_sdk.collection;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const box_decoration = packages__flutter__src__painting__box_decoration$46dart.src__painting__box_decoration;
  const border_radius = packages__flutter__src__painting__border_radius$46dart.src__painting__border_radius;
  const shadows = packages__flutter__src__material__shadows$46dart.src__material__shadows;
  const tween = packages__flutter__src__animation__listener_helpers$46dart.src__animation__tween;
  const animation = packages__flutter__src__animation__listener_helpers$46dart.src__animation__animation;
  const animations = packages__flutter__src__animation__listener_helpers$46dart.src__animation__animations;
  const math$ = packages__flutter__src__foundation__math$46dart.src__foundation__math;
  const image_provider = packages__flutter__src__painting___network_image_web$46dart.src__painting__image_provider;
  const custom_paint = packages__flutter__src__rendering__custom_paint$46dart.src__rendering__custom_paint;
  const decoration = packages__flutter__src__painting__decoration$46dart.src__painting__decoration;
  const widget_inspector = packages__flutter__src__widgets__title$46dart.src__widgets__widget_inspector;
  const framework = packages__flutter__src__widgets__title$46dart.src__widgets__framework;
  const focus_manager = packages__flutter__src__widgets__title$46dart.src__widgets__focus_manager;
  const navigator$ = packages__flutter__src__widgets__title$46dart.src__widgets__navigator;
  const container = packages__flutter__src__widgets__title$46dart.src__widgets__container;
  const transitions = packages__flutter__src__widgets__title$46dart.src__widgets__transitions;
  const shortcuts = packages__flutter__src__widgets__title$46dart.src__widgets__shortcuts;
  const actions = packages__flutter__src__widgets__title$46dart.src__widgets__actions;
  const focus_traversal = packages__flutter__src__widgets__title$46dart.src__widgets__focus_traversal;
  const basic = packages__flutter__src__widgets__title$46dart.src__widgets__basic;
  const scroll_configuration = packages__flutter__src__widgets__title$46dart.src__widgets__scroll_configuration;
  const scroll_physics = packages__flutter__src__widgets__title$46dart.src__widgets__scroll_physics;
  const primary_scroll_controller = packages__flutter__src__widgets__title$46dart.src__widgets__primary_scroll_controller;
  const routes = packages__flutter__src__widgets__title$46dart.src__widgets__routes;
  const inherited_theme = packages__flutter__src__widgets__title$46dart.src__widgets__inherited_theme;
  const scroll_controller = packages__flutter__src__widgets__title$46dart.src__widgets__scroll_controller;
  const debug = packages__flutter__src__widgets__title$46dart.src__widgets__debug;
  const media_query = packages__flutter__src__widgets__title$46dart.src__widgets__media_query;
  const binding = packages__flutter__src__widgets__title$46dart.src__widgets__binding;
  const text = packages__flutter__src__widgets__title$46dart.src__widgets__text;
  const focus_scope = packages__flutter__src__widgets__title$46dart.src__widgets__focus_scope;
  const edge_insets = packages__flutter__src__painting__edge_insets$46dart.src__painting__edge_insets;
  const box = packages__flutter__src__rendering__box$46dart.src__rendering__box;
  const curves = packages__flutter__src__animation__curves$46dart.src__animation__curves;
  const ink_well = packages__flutter__src__material__icon_button$46dart.src__material__ink_well;
  const debug$ = packages__flutter__src__material__icon_button$46dart.src__material__debug;
  const material_localizations = packages__flutter__src__material__icon_button$46dart.src__material__material_localizations;
  const theme = packages__flutter__src__material__icon_button$46dart.src__material__theme;
  const material = packages__flutter__src__material__icon_button$46dart.src__material__material;
  const input_decorator = packages__flutter__src__material__icon_button$46dart.src__material__input_decorator;
  const button_theme = packages__flutter__src__material__icon_button$46dart.src__material__button_theme;
  const keyboard_key$46g = packages__flutter__src__services__keyboard_key$46g$46dart.src__services__keyboard_key$46g;
  const scrollbar = packages__flutter__src__material__scrollbar$46dart.src__material__scrollbar;
  const scroll_view = packages__flutter__src__widgets__scroll_view$46dart.src__widgets__scroll_view;
  const constants = packages__flutter__src__material__constants$46dart.src__material__constants;
  const shifted_box = packages__flutter__src__rendering__shifted_box$46dart.src__rendering__shifted_box;
  const layout_builder = packages__flutter__src__widgets__layout_builder$46dart.src__widgets__layout_builder;
  const text_style = packages__flutter__src__painting__placeholder_span$46dart.src__painting__text_style;
  const object = packages__flutter__src__rendering__layer$46dart.src__rendering__object;
  const proxy_box = packages__flutter__src__rendering__proxy_box$46dart.src__rendering__proxy_box;
  const alignment = packages__flutter__src__painting__alignment$46dart.src__painting__alignment;
  const colors = packages__flutter__src__material__colors$46dart.src__material__colors;
  const flex = packages__flutter__src__rendering__flex$46dart.src__rendering__flex;
  const icon = packages__flutter__src__widgets__icon$46dart.src__widgets__icon;
  const icon_data = packages__flutter__src__widgets__icon_data$46dart.src__widgets__icon_data;
  const icon_theme = packages__flutter__src__widgets__icon_theme$46dart.src__widgets__icon_theme;
  const icon_theme_data = packages__flutter__src__widgets__icon_theme_data$46dart.src__widgets__icon_theme_data;
  const box_border = packages__flutter__src__painting__box_border$46dart.src__painting__box_border;
  const borders = packages__flutter__src__painting__borders$46dart.src__painting__borders;
  const material_state = packages__flutter__src__material__material_state$46dart.src__material__material_state;
  const mouse_cursor = packages__flutter__src__services__mouse_cursor$46dart.src__services__mouse_cursor;
  const form = packages__flutter__src__widgets__form$46dart.src__widgets__form;
  var dropdown = Object.create(dart.library);
  var $_get = dartx._get;
  var $_equals = dartx._equals;
  var $length = dartx.length;
  var $hashCode = dartx.hashCode;
  var $isNotEmpty = dartx.isNotEmpty;
  var $sublist = dartx.sublist;
  var $reduce = dartx.reduce;
  var $abs = dartx.abs;
  var $isEmpty = dartx.isEmpty;
  var $where = dartx.where;
  var $runtimeType = dartx.runtimeType;
  var $_set = dartx._set;
  var $add = dartx.add;
  var $map = dartx.map;
  var $toList = dartx.toList;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(false);
  var T$ = {
    TweenOfdouble: () => (T$.TweenOfdouble = dart.constFn(tween.Tween$(core.double)))(),
    JSArrayOfWidget: () => (T$.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))(),
    VoidTodouble: () => (T$.VoidTodouble = dart.constFn(dart.fnType(core.double, [])))(),
    VoidTobool: () => (T$.VoidTobool = dart.constFn(dart.fnType(core.bool, [])))(),
    ListOfdouble: () => (T$.ListOfdouble = dart.constFn(core.List$(core.double)))(),
    doubleAnddoubleTodouble: () => (T$.doubleAnddoubleTodouble = dart.constFn(dart.fnType(core.double, [core.double, core.double])))(),
    BuildContextToCustomSingleChildLayout: () => (T$.BuildContextToCustomSingleChildLayout = dart.constFn(dart.fnType(basic.CustomSingleChildLayout, [framework.BuildContext])))(),
    CallbackActionOfActivateIntent: () => (T$.CallbackActionOfActivateIntent = dart.constFn(actions.CallbackAction$(actions.ActivateIntent)))(),
    ActivateIntentTovoid: () => (T$.ActivateIntentTovoid = dart.constFn(dart.fnType(dart.void, [actions.ActivateIntent])))(),
    CallbackActionOfButtonActivateIntent: () => (T$.CallbackActionOfButtonActivateIntent = dart.constFn(actions.CallbackAction$(actions.ButtonActivateIntent)))(),
    ButtonActivateIntentTovoid: () => (T$.ButtonActivateIntentTovoid = dart.constFn(dart.fnType(dart.void, [actions.ButtonActivateIntent])))(),
    ActionOfIntent: () => (T$.ActionOfIntent = dart.constFn(actions.Action$(actions.Intent)))(),
    LinkedMapOfType$ActionOfIntent: () => (T$.LinkedMapOfType$ActionOfIntent = dart.constFn(_js_helper.LinkedMap$(core.Type, T$.ActionOfIntent())))(),
    VoidTovoid: () => (T$.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    SizeTovoid: () => (T$.SizeTovoid = dart.constFn(dart.fnType(dart.void, [ui.Size])))(),
    ListOfWidget: () => (T$.ListOfWidget = dart.constFn(core.List$(framework.Widget)))(),
    WidgetToRenderObjectWidget: () => (T$.WidgetToRenderObjectWidget = dart.constFn(dart.fnType(framework.RenderObjectWidget, [framework.Widget])))(),
    LinkedHashSetOfMaterialState: () => (T$.LinkedHashSetOfMaterialState = dart.constFn(collection.LinkedHashSet$(material_state.MaterialState)))(),
    BuildContextToDropdownButtonHideUnderline: () => (T$.BuildContextToDropdownButtonHideUnderline = dart.constFn(dart.fnType(dropdown.DropdownButtonHideUnderline, [framework.BuildContext])))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C1() {
      return C[1] = dart.const({
        __proto__: ui.Radius.prototype,
        [Radius_y]: 2,
        [Radius_x]: 2
      });
    },
    get C0() {
      return C[0] = dart.const({
        __proto__: border_radius.BorderRadius.prototype,
        [BorderRadius_bottomRight]: C[1] || CT.C1,
        [BorderRadius_bottomLeft]: C[1] || CT.C1,
        [BorderRadius_topRight]: C[1] || CT.C1,
        [BorderRadius_topLeft]: C[1] || CT.C1
      });
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "_DropdownMenuItemButton",
        [_Location_column]: 9,
        [_Location_line]: 96,
        [_Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/dropdown.dart"
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: focus_manager.FocusHighlightMode.prototype,
        [_Enum__name]: "touch",
        [_Enum_index]: 0
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: focus_manager.FocusHighlightMode.prototype,
        [_Enum__name]: "traditional",
        [_Enum_index]: 1
      });
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 100000
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: curves.Threshold.prototype,
        [Threshold_threshold]: 0
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Container",
        [_Location_column]: 20,
        [_Location_line]: 173,
        [_Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/dropdown.dart"
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "InkWell",
        [_Location_column]: 15,
        [_Location_line]: 180,
        [_Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/dropdown.dart"
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "FadeTransition",
        [_Location_column]: 13,
        [_Location_line]: 188,
        [_Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/dropdown.dart"
      });
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Shortcuts",
        [_Location_column]: 15,
        [_Location_line]: 190,
        [_Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/dropdown.dart"
      });
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: keyboard_key$46g.LogicalKeyboardKey.prototype,
        [LogicalKeyboardKey_keyId]: 4294968065.0
      });
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: shortcuts.SingleActivator.prototype,
        [SingleActivator_includeRepeats]: true,
        [SingleActivator_meta]: false,
        [SingleActivator_alt]: false,
        [SingleActivator_shift]: false,
        [SingleActivator_control]: false,
        [SingleActivator_trigger]: C[13] || CT.C13
      });
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: focus_traversal.TraversalDirection.prototype,
        [_Enum__name]: "down",
        [_Enum_index]: 2
      });
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: focus_traversal.DirectionalFocusIntent.prototype,
        [DirectionalFocusIntent_ignoreTextFields]: true,
        [DirectionalFocusIntent_direction]: C[15] || CT.C15
      });
    },
    get C17() {
      return C[17] = dart.const({
        __proto__: keyboard_key$46g.LogicalKeyboardKey.prototype,
        [LogicalKeyboardKey_keyId]: 4294968068.0
      });
    },
    get C16() {
      return C[16] = dart.const({
        __proto__: shortcuts.SingleActivator.prototype,
        [SingleActivator_includeRepeats]: true,
        [SingleActivator_meta]: false,
        [SingleActivator_alt]: false,
        [SingleActivator_shift]: false,
        [SingleActivator_control]: false,
        [SingleActivator_trigger]: C[17] || CT.C17
      });
    },
    get C19() {
      return C[19] = dart.const({
        __proto__: focus_traversal.TraversalDirection.prototype,
        [_Enum__name]: "up",
        [_Enum_index]: 0
      });
    },
    get C18() {
      return C[18] = dart.const({
        __proto__: focus_traversal.DirectionalFocusIntent.prototype,
        [DirectionalFocusIntent_ignoreTextFields]: true,
        [DirectionalFocusIntent_direction]: C[19] || CT.C19
      });
    },
    get C11() {
      return C[11] = dart.constMap(shortcuts.ShortcutActivator, actions.Intent, [C[12] || CT.C12, C[14] || CT.C14, C[16] || CT.C16, C[18] || CT.C18]);
    },
    get C20() {
      return C[20] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "_DropdownMenu",
        [_Location_column]: 9,
        [_Location_line]: 200,
        [_Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/dropdown.dart"
      });
    },
    get C22() {
      return C[22] = dart.const({
        __proto__: curves._Linear.prototype
      });
    },
    get C21() {
      return C[21] = dart.const({
        __proto__: curves.Interval.prototype,
        [Interval_curve]: C[22] || CT.C22,
        [Interval_end]: 0.25,
        [Interval_begin]: 0
      });
    },
    get C23() {
      return C[23] = dart.const({
        __proto__: curves.Interval.prototype,
        [Interval_curve]: C[22] || CT.C22,
        [Interval_end]: 1,
        [Interval_begin]: 0.75
      });
    },
    get C24() {
      return C[24] = dart.const({
        __proto__: curves.Interval.prototype,
        [Interval_curve]: C[22] || CT.C22,
        [Interval_end]: 0.5,
        [Interval_begin]: 0.25
      });
    },
    get C25() {
      return C[25] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "_DropdownMenuItemButton",
        [_Location_column]: 9,
        [_Location_line]: 261,
        [_Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/dropdown.dart"
      });
    },
    get C26() {
      return C[26] = dart.const({
        __proto__: scroll_physics.ClampingScrollPhysics.prototype,
        [ScrollPhysics_parent]: null
      });
    },
    get C27() {
      return C[27] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "ListView",
        [_Location_column]: 28,
        [_Location_line]: 311,
        [_Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/dropdown.dart"
      });
    },
    get C28() {
      return C[28] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Scrollbar",
        [_Location_column]: 26,
        [_Location_line]: 309,
        [_Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/dropdown.dart"
      });
    },
    get C29() {
      return C[29] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "PrimaryScrollController",
        [_Location_column]: 24,
        [_Location_line]: 307,
        [_Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/dropdown.dart"
      });
    },
    get C30() {
      return C[30] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "ScrollConfiguration",
        [_Location_column]: 22,
        [_Location_line]: 297,
        [_Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/dropdown.dart"
      });
    },
    get C31() {
      return C[31] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Material",
        [_Location_column]: 20,
        [_Location_line]: 294,
        [_Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/dropdown.dart"
      });
    },
    get C32() {
      return C[32] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "ClipRRect",
        [_Location_column]: 18,
        [_Location_line]: 289,
        [_Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/dropdown.dart"
      });
    },
    get C33() {
      return C[33] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Semantics",
        [_Location_column]: 16,
        [_Location_line]: 284,
        [_Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/dropdown.dart"
      });
    },
    get C34() {
      return C[34] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "CustomPaint",
        [_Location_column]: 14,
        [_Location_line]: 273,
        [_Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/dropdown.dart"
      });
    },
    get C35() {
      return C[35] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "FadeTransition",
        [_Location_column]: 12,
        [_Location_line]: 271,
        [_Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/dropdown.dart"
      });
    },
    get C36() {
      return C[36] = dart.const({
        __proto__: ui.TextDirection.prototype,
        [_Enum__name]: "rtl",
        [_Enum_index]: 0
      });
    },
    get C37() {
      return C[37] = dart.const({
        __proto__: ui.TextDirection.prototype,
        [_Enum__name]: "ltr",
        [_Enum_index]: 1
      });
    },
    get C38() {
      return C[38] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "_DropdownRoutePage",
        [_Location_column]: 16,
        [_Location_line]: 472,
        [_Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/dropdown.dart"
      });
    },
    get C39() {
      return C[39] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "LayoutBuilder",
        [_Location_column]: 12,
        [_Location_line]: 470,
        [_Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/dropdown.dart"
      });
    },
    get C40() {
      return C[40] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "_DropdownRoutePage",
        [_Location_column]: 9,
        [_Location_line]: 580,
        [_Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/dropdown.dart"
      });
    },
    get C41() {
      return C[41] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "_DropdownMenu",
        [_Location_column]: 25,
        [_Location_line]: 625,
        [_Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/dropdown.dart"
      });
    },
    get C42() {
      return C[42] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "CustomSingleChildLayout",
        [_Location_column]: 18,
        [_Location_line]: 643,
        [_Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/dropdown.dart"
      });
    },
    get C43() {
      return C[43] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Builder",
        [_Location_column]: 14,
        [_Location_line]: 641,
        [_Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/dropdown.dart"
      });
    },
    get C44() {
      return C[44] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "MediaQuery",
        [_Location_column]: 23,
        [_Location_line]: 635,
        [_Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/dropdown.dart"
      });
    },
    get C45() {
      return C[45] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "_MenuItem",
        [_Location_column]: 9,
        [_Location_line]: 663,
        [_Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/dropdown.dart"
      });
    },
    get C46() {
      return C[46] = dart.const({
        __proto__: alignment.AlignmentDirectional.prototype,
        [AlignmentDirectional_y]: 0,
        [AlignmentDirectional_start]: -1
      });
    },
    get C47() {
      return C[47] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "_DropdownMenuItemContainer",
        [_Location_column]: 9,
        [_Location_line]: 702,
        [_Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/dropdown.dart"
      });
    },
    get C48() {
      return C[48] = dart.const({
        __proto__: box.BoxConstraints.prototype,
        [BoxConstraints_maxHeight]: 1 / 0,
        [BoxConstraints_minHeight]: 48,
        [BoxConstraints_maxWidth]: 1 / 0,
        [BoxConstraints_minWidth]: 0
      });
    },
    get C49() {
      return C[49] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Container",
        [_Location_column]: 12,
        [_Location_line]: 727,
        [_Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/dropdown.dart"
      });
    },
    get C50() {
      return C[50] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "DropdownMenuItem",
        [_Location_column]: 9,
        [_Location_line]: 743,
        [_Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/dropdown.dart"
      });
    },
    get C51() {
      return C[51] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "DropdownButtonHideUnderline",
        [_Location_column]: 9,
        [_Location_line]: 775,
        [_Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/dropdown.dart"
      });
    },
    get C52() {
      return C[52] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "DropdownButton",
        [_Location_column]: 3,
        [_Location_line]: 861,
        [_Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/dropdown.dart"
      });
    },
    get C53() {
      return C[53] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "DropdownButton",
        [_Location_column]: 3,
        [_Location_line]: 909,
        [_Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/dropdown.dart"
      });
    },
    get C54() {
      return C[54] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "_MenuItem",
        [_Location_column]: 7,
        [_Location_line]: 1277,
        [_Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/dropdown.dart"
      });
    },
    get C55() {
      return C[55] = dart.const({
        __proto__: ui.Brightness.prototype,
        [_Enum__name]: "light",
        [_Enum_index]: 1
      });
    },
    get C56() {
      return C[56] = dart.const({
        __proto__: ui.Brightness.prototype,
        [_Enum__name]: "dark",
        [_Enum_index]: 0
      });
    },
    get C57() {
      return C[57] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "_DropdownMenuItemContainer",
        [_Location_column]: 25,
        [_Location_line]: 1402,
        [_Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/dropdown.dart"
      });
    },
    get C58() {
      return C[58] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "IgnorePointer",
        [_Location_column]: 16,
        [_Location_line]: 1408,
        [_Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/dropdown.dart"
      });
    },
    get C59() {
      return C[59] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "DefaultTextStyle",
        [_Location_column]: 17,
        [_Location_line]: 1406,
        [_Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/dropdown.dart"
      });
    },
    get C60() {
      return C[60] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Container",
        [_Location_column]: 26,
        [_Location_line]: 1423,
        [_Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/dropdown.dart"
      });
    },
    get C61() {
      return C[61] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "SizedBox",
        [_Location_column]: 15,
        [_Location_line]: 1430,
        [_Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/dropdown.dart"
      });
    },
    get C62() {
      return C[62] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Column",
        [_Location_column]: 15,
        [_Location_line]: 1431,
        [_Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/dropdown.dart"
      });
    },
    get C63() {
      return C[63] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "IndexedStack",
        [_Location_column]: 26,
        [_Location_line]: 1425,
        [_Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/dropdown.dart"
      });
    },
    get C65() {
      return C[65] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Icon",
        [_Location_column]: 30,
        [_Location_line]: 1436,
        [_Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/dropdown.dart"
      });
    },
    get C66() {
      return C[66] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 57496
      });
    },
    get C64() {
      return C[64] = dart.const({
        __proto__: icon.Icon.prototype,
        [Widget__location]: C[65] || CT.C65,
        [Widget_key]: null,
        [Icon_shadows]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_color]: null,
        [Icon_size]: null,
        [Icon_icon]: C[66] || CT.C66
      });
    },
    get C67() {
      return C[67] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Expanded",
        [_Location_column]: 15,
        [_Location_line]: 1448,
        [_Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/dropdown.dart"
      });
    },
    get C68() {
      return C[68] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "IconTheme",
        [_Location_column]: 13,
        [_Location_line]: 1451,
        [_Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/dropdown.dart"
      });
    },
    get C69() {
      return C[69] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Row",
        [_Location_column]: 16,
        [_Location_line]: 1443,
        [_Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/dropdown.dart"
      });
    },
    get C70() {
      return C[70] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Container",
        [_Location_column]: 14,
        [_Location_line]: 1440,
        [_Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/dropdown.dart"
      });
    },
    get C71() {
      return C[71] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "DefaultTextStyle",
        [_Location_column]: 21,
        [_Location_line]: 1438,
        [_Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/dropdown.dart"
      });
    },
    get C73() {
      return C[73] = dart.const({
        __proto__: box_border.BoxShape.prototype,
        [_Enum__name]: "rectangle",
        [_Enum_index]: 0
      });
    },
    get C76() {
      return C[76] = dart.const({
        __proto__: borders.StrokeAlign.prototype,
        [_Enum__name]: "inside",
        [_Enum_index]: 0
      });
    },
    get C77() {
      return C[77] = dart.const({
        __proto__: borders.BorderStyle.prototype,
        [_Enum__name]: "none",
        [_Enum_index]: 0
      });
    },
    get C78() {
      return C[78] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4278190080.0
      });
    },
    get C75() {
      return C[75] = dart.const({
        __proto__: borders.BorderSide.prototype,
        [BorderSide_strokeAlign]: C[76] || CT.C76,
        [BorderSide_style]: C[77] || CT.C77,
        [BorderSide_width]: 0,
        [BorderSide_color]: C[78] || CT.C78
      });
    },
    get C80() {
      return C[80] = dart.const({
        __proto__: borders.BorderStyle.prototype,
        [_Enum__name]: "solid",
        [_Enum_index]: 1
      });
    },
    get C81() {
      return C[81] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4290624957.0
      });
    },
    get C79() {
      return C[79] = dart.const({
        __proto__: borders.BorderSide.prototype,
        [BorderSide_strokeAlign]: C[76] || CT.C76,
        [BorderSide_style]: C[80] || CT.C80,
        [BorderSide_width]: 0,
        [BorderSide_color]: C[81] || CT.C81
      });
    },
    get C74() {
      return C[74] = dart.const({
        __proto__: box_border.Border.prototype,
        [Border_left]: C[75] || CT.C75,
        [Border_bottom]: C[79] || CT.C79,
        [Border_right]: C[75] || CT.C75,
        [Border_top]: C[75] || CT.C75
      });
    },
    get C72() {
      return C[72] = dart.const({
        __proto__: box_decoration.BoxDecoration.prototype,
        [BoxDecoration_shape]: C[73] || CT.C73,
        [BoxDecoration_backgroundBlendMode]: null,
        [BoxDecoration_gradient]: null,
        [BoxDecoration_boxShadow]: null,
        [BoxDecoration_borderRadius]: null,
        [BoxDecoration_border]: C[74] || CT.C74,
        [BoxDecoration_image]: null,
        [BoxDecoration_color]: null
      });
    },
    get C82() {
      return C[82] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Container",
        [_Location_column]: 40,
        [_Location_line]: 1472,
        [_Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/dropdown.dart"
      });
    },
    get C83() {
      return C[83] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Positioned",
        [_Location_column]: 11,
        [_Location_line]: 1468,
        [_Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/dropdown.dart"
      });
    },
    get C84() {
      return C[84] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Stack",
        [_Location_column]: 16,
        [_Location_line]: 1465,
        [_Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/dropdown.dart"
      });
    },
    get C85() {
      return C[85] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "InputDecorator",
        [_Location_column]: 16,
        [_Location_line]: 1496,
        [_Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/dropdown.dart"
      });
    },
    get C86() {
      return C[86] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "InkWell",
        [_Location_column]: 16,
        [_Location_line]: 1508,
        [_Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/dropdown.dart"
      });
    },
    get C87() {
      return C[87] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Actions",
        [_Location_column]: 14,
        [_Location_line]: 1506,
        [_Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/dropdown.dart"
      });
    },
    get C88() {
      return C[88] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Semantics",
        [_Location_column]: 12,
        [_Location_line]: 1504,
        [_Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/dropdown.dart"
      });
    },
    get C89() {
      return C[89] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "DropdownButton",
        [_Location_column]: 25,
        [_Location_line]: 1624,
        [_Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/dropdown.dart"
      });
    },
    get C90() {
      return C[90] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "DropdownButtonHideUnderline",
        [_Location_column]: 23,
        [_Location_line]: 1623,
        [_Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/dropdown.dart"
      });
    },
    get C91() {
      return C[91] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Builder",
        [_Location_column]: 21,
        [_Location_line]: 1622,
        [_Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/dropdown.dart"
      });
    },
    get C92() {
      return C[92] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Focus",
        [_Location_column]: 19,
        [_Location_line]: 1619,
        [_Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/dropdown.dart"
      });
    },
    get C93() {
      return C[93] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "DropdownButtonFormField",
        [_Location_column]: 3,
        [_Location_line]: 1548,
        [_Location_file]: "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/dropdown.dart"
      });
    },
    get C94() {
      return C[94] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 300000
      });
    },
    get C95() {
      return C[95] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 16,
        [EdgeInsets_top]: 0,
        [EdgeInsets_left]: 16
      });
    },
    get C96() {
      return C[96] = dart.const({
        __proto__: edge_insets.EdgeInsetsDirectional.prototype,
        [EdgeInsetsDirectional_bottom]: 0,
        [EdgeInsetsDirectional_end]: 4,
        [EdgeInsetsDirectional_top]: 0,
        [EdgeInsetsDirectional_start]: 16
      });
    },
    get C97() {
      return C[97] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 0,
        [EdgeInsets_top]: 0,
        [EdgeInsets_left]: 0
      });
    },
    get C98() {
      return C[98] = dart.const({
        __proto__: edge_insets.EdgeInsetsDirectional.prototype,
        [EdgeInsetsDirectional_bottom]: 0,
        [EdgeInsetsDirectional_end]: 24,
        [EdgeInsetsDirectional_top]: 0,
        [EdgeInsetsDirectional_start]: 16
      });
    }
  }, false);
  var C = Array(99).fill(void 0);
  var I = [
    "package:flutter/src/material/dropdown.dart",
    "file:///C:/Users/Admin/Desktop/flutter/packages/flutter/lib/src/material/dropdown.dart"
  ];
  var _painter = dart.privateName(dropdown, "_painter");
  var Radius_y = dart.privateName(ui, "Radius.y");
  var Radius_x = dart.privateName(ui, "Radius.x");
  var BorderRadius_bottomRight = dart.privateName(border_radius, "BorderRadius.bottomRight");
  var BorderRadius_bottomLeft = dart.privateName(border_radius, "BorderRadius.bottomLeft");
  var BorderRadius_topRight = dart.privateName(border_radius, "BorderRadius.topRight");
  var BorderRadius_topLeft = dart.privateName(border_radius, "BorderRadius.topLeft");
  dropdown._DropdownMenuPainter = class _DropdownMenuPainter extends custom_paint.CustomPainter {
    static ['_#new#tearOff'](opts) {
      let color = opts && 'color' in opts ? opts.color : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let selectedIndex = opts && 'selectedIndex' in opts ? opts.selectedIndex : null;
      let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
      let resize = opts && 'resize' in opts ? opts.resize : null;
      let getSelectedItemOffset = opts && 'getSelectedItemOffset' in opts ? opts.getSelectedItemOffset : null;
      return new dropdown._DropdownMenuPainter.new({color: color, elevation: elevation, selectedIndex: selectedIndex, borderRadius: borderRadius, resize: resize, getSelectedItemOffset: getSelectedItemOffset});
    }
    paint(canvas, size) {
      let selectedItemOffset = this.getSelectedItemOffset();
      let top = new (T$.TweenOfdouble()).new({begin: math$.clampDouble(selectedItemOffset, 0.0, math.max(core.double, size.height - 48, 0.0)), end: 0.0});
      let bottom = new (T$.TweenOfdouble()).new({begin: math$.clampDouble(dart.nullCheck(top.begin) + 48, math.min(core.double, 48, size.height), size.height), end: size.height});
      let rect = new ui.Rect.fromLTRB(0.0, top.evaluate(this.resize), size.width, bottom.evaluate(this.resize));
      this[_painter].paint(canvas, rect.topLeft, new image_provider.ImageConfiguration.new({size: rect.size}));
    }
    shouldRepaint(oldPainter) {
      dropdown._DropdownMenuPainter.as(oldPainter);
      return !dart.equals(oldPainter.color, this.color) || oldPainter.elevation != this.elevation || oldPainter.selectedIndex != this.selectedIndex || !dart.equals(oldPainter.borderRadius, this.borderRadius) || !oldPainter.resize[$_equals](this.resize);
    }
  };
  (dropdown._DropdownMenuPainter.new = function(opts) {
    let t0;
    let color = opts && 'color' in opts ? opts.color : null;
    let elevation = opts && 'elevation' in opts ? opts.elevation : null;
    let selectedIndex = opts && 'selectedIndex' in opts ? opts.selectedIndex : null;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
    let resize = opts && 'resize' in opts ? opts.resize : null;
    let getSelectedItemOffset = opts && 'getSelectedItemOffset' in opts ? opts.getSelectedItemOffset : null;
    this.color = color;
    this.elevation = elevation;
    this.selectedIndex = selectedIndex;
    this.borderRadius = borderRadius;
    this.resize = resize;
    this.getSelectedItemOffset = getSelectedItemOffset;
    this[_painter] = new box_decoration.BoxDecoration.new({color: color, borderRadius: (t0 = borderRadius, t0 == null ? C[0] || CT.C0 : t0), boxShadow: shadows.kElevationToShadow[$_get](elevation)}).createBoxPainter();
    dropdown._DropdownMenuPainter.__proto__.new.call(this, {repaint: resize});
    ;
  }).prototype = dropdown._DropdownMenuPainter.prototype;
  dart.addTypeTests(dropdown._DropdownMenuPainter);
  dart.addTypeCaches(dropdown._DropdownMenuPainter);
  dart.setMethodSignature(dropdown._DropdownMenuPainter, () => ({
    __proto__: dart.getMethods(dropdown._DropdownMenuPainter.__proto__),
    paint: dart.fnType(dart.void, [ui.Canvas, ui.Size]),
    shouldRepaint: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(dropdown._DropdownMenuPainter, I[0]);
  dart.setFieldSignature(dropdown._DropdownMenuPainter, () => ({
    __proto__: dart.getFields(dropdown._DropdownMenuPainter.__proto__),
    color: dart.finalFieldType(dart.nullable(ui.Color)),
    elevation: dart.finalFieldType(dart.nullable(core.int)),
    selectedIndex: dart.finalFieldType(dart.nullable(core.int)),
    borderRadius: dart.finalFieldType(dart.nullable(border_radius.BorderRadius)),
    resize: dart.finalFieldType(animation.Animation$(core.double)),
    getSelectedItemOffset: dart.finalFieldType(dart.fnType(core.double, [])),
    [_painter]: dart.finalFieldType(decoration.BoxPainter)
  }));
  var route$ = dart.privateName(dropdown, "_DropdownMenuItemButton.route");
  var padding$ = dart.privateName(dropdown, "_DropdownMenuItemButton.padding");
  var buttonRect$ = dart.privateName(dropdown, "_DropdownMenuItemButton.buttonRect");
  var constraints$ = dart.privateName(dropdown, "_DropdownMenuItemButton.constraints");
  var itemIndex$ = dart.privateName(dropdown, "_DropdownMenuItemButton.itemIndex");
  var enableFeedback$ = dart.privateName(dropdown, "_DropdownMenuItemButton.enableFeedback");
  var _Location_name = dart.privateName(widget_inspector, "_Location.name");
  var _Location_column = dart.privateName(widget_inspector, "_Location.column");
  var _Location_line = dart.privateName(widget_inspector, "_Location.line");
  var _Location_file = dart.privateName(widget_inspector, "_Location.file");
  const _is__DropdownMenuItemButton_default = Symbol('_is__DropdownMenuItemButton_default');
  dropdown._DropdownMenuItemButton$ = dart.generic(T => {
    var __t$_DropdownMenuItemButtonStateOfT = () => (__t$_DropdownMenuItemButtonStateOfT = dart.constFn(dropdown._DropdownMenuItemButtonState$(T)))();
    class _DropdownMenuItemButton extends framework.StatefulWidget {
      get route() {
        return this[route$];
      }
      set route(value) {
        super.route = value;
      }
      get padding() {
        return this[padding$];
      }
      set padding(value) {
        super.padding = value;
      }
      get buttonRect() {
        return this[buttonRect$];
      }
      set buttonRect(value) {
        super.buttonRect = value;
      }
      get constraints() {
        return this[constraints$];
      }
      set constraints(value) {
        super.constraints = value;
      }
      get itemIndex() {
        return this[itemIndex$];
      }
      set itemIndex(value) {
        super.itemIndex = value;
      }
      get enableFeedback() {
        return this[enableFeedback$];
      }
      set enableFeedback(value) {
        super.enableFeedback = value;
      }
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let padding = opts && 'padding' in opts ? opts.padding : null;
        let route = opts && 'route' in opts ? opts.route : null;
        let buttonRect = opts && 'buttonRect' in opts ? opts.buttonRect : null;
        let constraints = opts && 'constraints' in opts ? opts.constraints : null;
        let itemIndex = opts && 'itemIndex' in opts ? opts.itemIndex : null;
        let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
        return new (dropdown._DropdownMenuItemButton$(T)).new({key: key, padding: padding, route: route, buttonRect: buttonRect, constraints: constraints, itemIndex: itemIndex, enableFeedback: enableFeedback, $creationLocationd_0dea112b090073317d4: C[2] || CT.C2});
      }
      createState() {
        return new (__t$_DropdownMenuItemButtonStateOfT()).new();
      }
    }
    (_DropdownMenuItemButton.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let route = opts && 'route' in opts ? opts.route : null;
      let buttonRect = opts && 'buttonRect' in opts ? opts.buttonRect : null;
      let constraints = opts && 'constraints' in opts ? opts.constraints : null;
      let itemIndex = opts && 'itemIndex' in opts ? opts.itemIndex : null;
      let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[padding$] = padding;
      this[route$] = route;
      this[buttonRect$] = buttonRect;
      this[constraints$] = constraints;
      this[itemIndex$] = itemIndex;
      this[enableFeedback$] = enableFeedback;
      _DropdownMenuItemButton.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = _DropdownMenuItemButton.prototype;
    dart.addTypeTests(_DropdownMenuItemButton);
    _DropdownMenuItemButton.prototype[_is__DropdownMenuItemButton_default] = true;
    dart.addTypeCaches(_DropdownMenuItemButton);
    dart.setMethodSignature(_DropdownMenuItemButton, () => ({
      __proto__: dart.getMethods(_DropdownMenuItemButton.__proto__),
      createState: dart.fnType(dropdown._DropdownMenuItemButtonState$(T), [])
    }));
    dart.setLibraryUri(_DropdownMenuItemButton, I[0]);
    dart.setFieldSignature(_DropdownMenuItemButton, () => ({
      __proto__: dart.getFields(_DropdownMenuItemButton.__proto__),
      route: dart.finalFieldType(dropdown._DropdownRoute$(T)),
      padding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsets)),
      buttonRect: dart.finalFieldType(ui.Rect),
      constraints: dart.finalFieldType(box.BoxConstraints),
      itemIndex: dart.finalFieldType(core.int),
      enableFeedback: dart.finalFieldType(core.bool)
    }));
    return _DropdownMenuItemButton;
  });
  dropdown._DropdownMenuItemButton = dropdown._DropdownMenuItemButton$();
  dart.addTypeTests(dropdown._DropdownMenuItemButton, _is__DropdownMenuItemButton_default);
  var _Enum__name = dart.privateName(core, "_Enum._name");
  var _Enum_index = dart.privateName(core, "_Enum.index");
  var Duration__duration = dart.privateName(core, "Duration._duration");
  var _handleFocusChange = dart.privateName(dropdown, "_handleFocusChange");
  var _handleOnTap = dart.privateName(dropdown, "_handleOnTap");
  var Threshold_threshold = dart.privateName(curves, "Threshold.threshold");
  const _is__DropdownMenuItemButtonState_default = Symbol('_is__DropdownMenuItemButtonState_default');
  var SingleActivator_includeRepeats = dart.privateName(shortcuts, "SingleActivator.includeRepeats");
  var SingleActivator_meta = dart.privateName(shortcuts, "SingleActivator.meta");
  var SingleActivator_alt = dart.privateName(shortcuts, "SingleActivator.alt");
  var SingleActivator_shift = dart.privateName(shortcuts, "SingleActivator.shift");
  var SingleActivator_control = dart.privateName(shortcuts, "SingleActivator.control");
  var LogicalKeyboardKey_keyId = dart.privateName(keyboard_key$46g, "LogicalKeyboardKey.keyId");
  var SingleActivator_trigger = dart.privateName(shortcuts, "SingleActivator.trigger");
  var DirectionalFocusIntent_ignoreTextFields = dart.privateName(focus_traversal, "DirectionalFocusIntent.ignoreTextFields");
  var DirectionalFocusIntent_direction = dart.privateName(focus_traversal, "DirectionalFocusIntent.direction");
  dropdown._DropdownMenuItemButtonState$ = dart.generic(T => {
    var __t$_DropdownRouteResultOfT = () => (__t$_DropdownRouteResultOfT = dart.constFn(dropdown._DropdownRouteResult$(T)))();
    class _DropdownMenuItemButtonState extends framework.State$(dropdown._DropdownMenuItemButton$(T)) {
      [_handleFocusChange](focused) {
        let inTraditionalMode = null;
        switch (focus_manager.FocusManager.instance.highlightMode) {
          case C[3] || CT.C3:
            {
              inTraditionalMode = false;
              break;
            }
          case C[4] || CT.C4:
            {
              inTraditionalMode = true;
              break;
            }
        }
        if (focused && inTraditionalMode) {
          let menuLimits = this.widget.route.getMenuLimits(this.widget.buttonRect, this.widget.constraints.maxHeight, this.widget.itemIndex);
          dart.nullCheck(this.widget.route.scrollController).animateTo(menuLimits.scrollOffset, {curve: curves.Curves.easeInOut, duration: C[5] || CT.C5});
        }
      }
      [_handleOnTap]() {
        let t0;
        let dropdownMenuItem = dart.nullCheck(this.widget.route.items[$_get](this.widget.itemIndex).item);
        t0 = dropdownMenuItem.onTap;
        t0 == null ? null : t0();
        navigator$.Navigator.pop(__t$_DropdownRouteResultOfT(), this.context, new (__t$_DropdownRouteResultOfT()).new(dropdownMenuItem.value));
      }
      build(context) {
        let dropdownMenuItem = dart.nullCheck(this.widget.route.items[$_get](this.widget.itemIndex).item);
        let opacity = null;
        let unit = 0.5 / (this.widget.route.items[$length] + 1.5);
        if (this.widget.itemIndex === this.widget.route.selectedIndex) {
          opacity = new animations.CurvedAnimation.new({parent: dart.nullCheck(this.widget.route.animation), curve: C[6] || CT.C6});
        } else {
          let start = math$.clampDouble(0.5 + (this.widget.itemIndex + 1) * unit, 0.0, 1.0);
          let end = math$.clampDouble(start + 1.5 * unit, 0.0, 1.0);
          opacity = new animations.CurvedAnimation.new({parent: dart.nullCheck(this.widget.route.animation), curve: new curves.Interval.new(start, end)});
        }
        let child = new container.Container.new({padding: this.widget.padding, height: this.widget.route.itemHeight, child: this.widget.route.items[$_get](this.widget.itemIndex), $creationLocationd_0dea112b090073317d4: C[7] || CT.C7});
        if (dropdownMenuItem.enabled) {
          child = new ink_well.InkWell.new({autofocus: this.widget.itemIndex === this.widget.route.selectedIndex, enableFeedback: this.widget.enableFeedback, onTap: dart.bind(this, _handleOnTap), onFocusChange: dart.bind(this, _handleFocusChange), child: child, $creationLocationd_0dea112b090073317d4: C[8] || CT.C8});
        }
        child = new transitions.FadeTransition.new({opacity: opacity, child: child, $creationLocationd_0dea112b090073317d4: C[9] || CT.C9});
        if (true && dropdownMenuItem.enabled) {
          child = new shortcuts.Shortcuts.new({shortcuts: dropdown._DropdownMenuItemButtonState._webShortcuts, child: child, $creationLocationd_0dea112b090073317d4: C[10] || CT.C10});
        }
        return child;
      }
      static ['_#new#tearOff'](T) {
        return new (dropdown._DropdownMenuItemButtonState$(T)).new();
      }
    }
    (_DropdownMenuItemButtonState.new = function() {
      _DropdownMenuItemButtonState.__proto__.new.call(this);
      ;
    }).prototype = _DropdownMenuItemButtonState.prototype;
    dart.addTypeTests(_DropdownMenuItemButtonState);
    _DropdownMenuItemButtonState.prototype[_is__DropdownMenuItemButtonState_default] = true;
    dart.addTypeCaches(_DropdownMenuItemButtonState);
    dart.setMethodSignature(_DropdownMenuItemButtonState, () => ({
      __proto__: dart.getMethods(_DropdownMenuItemButtonState.__proto__),
      [_handleFocusChange]: dart.fnType(dart.void, [core.bool]),
      [_handleOnTap]: dart.fnType(dart.void, []),
      build: dart.fnType(framework.Widget, [framework.BuildContext])
    }));
    dart.setLibraryUri(_DropdownMenuItemButtonState, I[0]);
    dart.setStaticFieldSignature(_DropdownMenuItemButtonState, () => ['_webShortcuts']);
    return _DropdownMenuItemButtonState;
  });
  dropdown._DropdownMenuItemButtonState = dropdown._DropdownMenuItemButtonState$();
  dart.defineLazy(dropdown._DropdownMenuItemButtonState, {
    /*dropdown._DropdownMenuItemButtonState._webShortcuts*/get _webShortcuts() {
      return C[11] || CT.C11;
    }
  }, false);
  dart.addTypeTests(dropdown._DropdownMenuItemButtonState, _is__DropdownMenuItemButtonState_default);
  var route$0 = dart.privateName(dropdown, "_DropdownMenu.route");
  var padding$0 = dart.privateName(dropdown, "_DropdownMenu.padding");
  var buttonRect$0 = dart.privateName(dropdown, "_DropdownMenu.buttonRect");
  var constraints$0 = dart.privateName(dropdown, "_DropdownMenu.constraints");
  var dropdownColor$ = dart.privateName(dropdown, "_DropdownMenu.dropdownColor");
  var enableFeedback$0 = dart.privateName(dropdown, "_DropdownMenu.enableFeedback");
  var borderRadius$ = dart.privateName(dropdown, "_DropdownMenu.borderRadius");
  const _is__DropdownMenu_default = Symbol('_is__DropdownMenu_default');
  dropdown._DropdownMenu$ = dart.generic(T => {
    var __t$_DropdownMenuStateOfT = () => (__t$_DropdownMenuStateOfT = dart.constFn(dropdown._DropdownMenuState$(T)))();
    class _DropdownMenu extends framework.StatefulWidget {
      get route() {
        return this[route$0];
      }
      set route(value) {
        super.route = value;
      }
      get padding() {
        return this[padding$0];
      }
      set padding(value) {
        super.padding = value;
      }
      get buttonRect() {
        return this[buttonRect$0];
      }
      set buttonRect(value) {
        super.buttonRect = value;
      }
      get constraints() {
        return this[constraints$0];
      }
      set constraints(value) {
        super.constraints = value;
      }
      get dropdownColor() {
        return this[dropdownColor$];
      }
      set dropdownColor(value) {
        super.dropdownColor = value;
      }
      get enableFeedback() {
        return this[enableFeedback$0];
      }
      set enableFeedback(value) {
        super.enableFeedback = value;
      }
      get borderRadius() {
        return this[borderRadius$];
      }
      set borderRadius(value) {
        super.borderRadius = value;
      }
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let padding = opts && 'padding' in opts ? opts.padding : null;
        let route = opts && 'route' in opts ? opts.route : null;
        let buttonRect = opts && 'buttonRect' in opts ? opts.buttonRect : null;
        let constraints = opts && 'constraints' in opts ? opts.constraints : null;
        let dropdownColor = opts && 'dropdownColor' in opts ? opts.dropdownColor : null;
        let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
        let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
        return new (dropdown._DropdownMenu$(T)).new({key: key, padding: padding, route: route, buttonRect: buttonRect, constraints: constraints, dropdownColor: dropdownColor, enableFeedback: enableFeedback, borderRadius: borderRadius, $creationLocationd_0dea112b090073317d4: C[20] || CT.C20});
      }
      createState() {
        return new (__t$_DropdownMenuStateOfT()).new();
      }
    }
    (_DropdownMenu.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let route = opts && 'route' in opts ? opts.route : null;
      let buttonRect = opts && 'buttonRect' in opts ? opts.buttonRect : null;
      let constraints = opts && 'constraints' in opts ? opts.constraints : null;
      let dropdownColor = opts && 'dropdownColor' in opts ? opts.dropdownColor : null;
      let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
      let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[padding$0] = padding;
      this[route$0] = route;
      this[buttonRect$0] = buttonRect;
      this[constraints$0] = constraints;
      this[dropdownColor$] = dropdownColor;
      this[enableFeedback$0] = enableFeedback;
      this[borderRadius$] = borderRadius;
      _DropdownMenu.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = _DropdownMenu.prototype;
    dart.addTypeTests(_DropdownMenu);
    _DropdownMenu.prototype[_is__DropdownMenu_default] = true;
    dart.addTypeCaches(_DropdownMenu);
    dart.setMethodSignature(_DropdownMenu, () => ({
      __proto__: dart.getMethods(_DropdownMenu.__proto__),
      createState: dart.fnType(dropdown._DropdownMenuState$(T), [])
    }));
    dart.setLibraryUri(_DropdownMenu, I[0]);
    dart.setFieldSignature(_DropdownMenu, () => ({
      __proto__: dart.getFields(_DropdownMenu.__proto__),
      route: dart.finalFieldType(dropdown._DropdownRoute$(T)),
      padding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsets)),
      buttonRect: dart.finalFieldType(ui.Rect),
      constraints: dart.finalFieldType(box.BoxConstraints),
      dropdownColor: dart.finalFieldType(dart.nullable(ui.Color)),
      enableFeedback: dart.finalFieldType(core.bool),
      borderRadius: dart.finalFieldType(dart.nullable(border_radius.BorderRadius))
    }));
    return _DropdownMenu;
  });
  dropdown._DropdownMenu = dropdown._DropdownMenu$();
  dart.addTypeTests(dropdown._DropdownMenu, _is__DropdownMenu_default);
  var ___DropdownMenuState__fadeOpacity = dart.privateName(dropdown, "_#_DropdownMenuState#_fadeOpacity");
  var ___DropdownMenuState__resize = dart.privateName(dropdown, "_#_DropdownMenuState#_resize");
  var _fadeOpacity = dart.privateName(dropdown, "_fadeOpacity");
  var _resize = dart.privateName(dropdown, "_resize");
  var Interval_curve = dart.privateName(curves, "Interval.curve");
  var Interval_end = dart.privateName(curves, "Interval.end");
  var Interval_begin = dart.privateName(curves, "Interval.begin");
  var ScrollPhysics_parent = dart.privateName(scroll_physics, "ScrollPhysics.parent");
  const _is__DropdownMenuState_default = Symbol('_is__DropdownMenuState_default');
  dropdown._DropdownMenuState$ = dart.generic(T => {
    var __t$_DropdownMenuItemButtonOfT = () => (__t$_DropdownMenuItemButtonOfT = dart.constFn(dropdown._DropdownMenuItemButton$(T)))();
    class _DropdownMenuState extends framework.State$(dropdown._DropdownMenu$(T)) {
      get [_fadeOpacity]() {
        let t0;
        t0 = this[___DropdownMenuState__fadeOpacity];
        return t0 == null ? dart.throw(new _internal.LateError.fieldNI("_fadeOpacity")) : t0;
      }
      set [_fadeOpacity](library$32package$58flutter$47src$47material$47dropdown$46dart$58$58_fadeOpacity$35param) {
        this[___DropdownMenuState__fadeOpacity] = library$32package$58flutter$47src$47material$47dropdown$46dart$58$58_fadeOpacity$35param;
      }
      get [_resize]() {
        let t0;
        t0 = this[___DropdownMenuState__resize];
        return t0 == null ? dart.throw(new _internal.LateError.fieldNI("_resize")) : t0;
      }
      set [_resize](library$32package$58flutter$47src$47material$47dropdown$46dart$58$58_resize$35param) {
        this[___DropdownMenuState__resize] = library$32package$58flutter$47src$47material$47dropdown$46dart$58$58_resize$35param;
      }
      initState() {
        super.initState();
        this[_fadeOpacity] = new animations.CurvedAnimation.new({parent: dart.nullCheck(this.widget.route.animation), curve: C[21] || CT.C21, reverseCurve: C[23] || CT.C23});
        this[_resize] = new animations.CurvedAnimation.new({parent: dart.nullCheck(this.widget.route.animation), curve: C[24] || CT.C24, reverseCurve: C[6] || CT.C6});
      }
      build(context) {
        let t1, t1$;
        if (!debug$.debugCheckHasMaterialLocalizations(context)) dart.assertFailed(null, I[1], 256, 12, "debugCheckHasMaterialLocalizations(context)");
        let localizations = material_localizations.MaterialLocalizations.of(context);
        let route = this.widget.route;
        let children = (() => {
          let t0 = T$.JSArrayOfWidget().of([]);
          for (let itemIndex = 0; itemIndex < route.items[$length]; itemIndex = itemIndex + 1)
            t0.push(new (__t$_DropdownMenuItemButtonOfT()).new({route: this.widget.route, padding: this.widget.padding, buttonRect: this.widget.buttonRect, constraints: this.widget.constraints, itemIndex: itemIndex, enableFeedback: this.widget.enableFeedback, $creationLocationd_0dea112b090073317d4: C[25] || CT.C25}));
          return t0;
        })();
        return new transitions.FadeTransition.new({opacity: this[_fadeOpacity], child: new basic.CustomPaint.new({painter: new dropdown._DropdownMenuPainter.new({color: (t1 = this.widget.dropdownColor, t1 == null ? theme.Theme.of(context).canvasColor : t1), elevation: route.elevation, selectedIndex: route.selectedIndex, resize: this[_resize], borderRadius: this.widget.borderRadius, getSelectedItemOffset: dart.fn(() => route.getItemOffset(route.selectedIndex), T$.VoidTodouble())}), child: new basic.Semantics.new({scopesRoute: true, namesRoute: true, explicitChildNodes: true, label: localizations.popupMenuLabel, child: new basic.ClipRRect.new({borderRadius: (t1$ = this.widget.borderRadius, t1$ == null ? border_radius.BorderRadius.zero : t1$), clipBehavior: this.widget.borderRadius != null ? ui.Clip.antiAlias : ui.Clip.none, child: new material.Material.new({type: material.MaterialType.transparency, textStyle: route.style, child: new scroll_configuration.ScrollConfiguration.new({behavior: scroll_configuration.ScrollConfiguration.of(context).copyWith({scrollbars: false, overscroll: false, physics: C[26] || CT.C26, platform: theme.Theme.of(context).platform}), child: new primary_scroll_controller.PrimaryScrollController.new({controller: dart.nullCheck(this.widget.route.scrollController), child: new scrollbar.Scrollbar.new({thumbVisibility: true, child: new scroll_view.ListView.new({primary: true, padding: constants.kMaterialListPadding, shrinkWrap: true, children: children, $creationLocationd_0dea112b090073317d4: C[27] || CT.C27}), $creationLocationd_0dea112b090073317d4: C[28] || CT.C28}), $creationLocationd_0dea112b090073317d4: C[29] || CT.C29}), $creationLocationd_0dea112b090073317d4: C[30] || CT.C30}), $creationLocationd_0dea112b090073317d4: C[31] || CT.C31}), $creationLocationd_0dea112b090073317d4: C[32] || CT.C32}), $creationLocationd_0dea112b090073317d4: C[33] || CT.C33}), $creationLocationd_0dea112b090073317d4: C[34] || CT.C34}), $creationLocationd_0dea112b090073317d4: C[35] || CT.C35});
      }
      static ['_#new#tearOff'](T) {
        return new (dropdown._DropdownMenuState$(T)).new();
      }
    }
    (_DropdownMenuState.new = function() {
      this[___DropdownMenuState__fadeOpacity] = null;
      this[___DropdownMenuState__resize] = null;
      _DropdownMenuState.__proto__.new.call(this);
      ;
    }).prototype = _DropdownMenuState.prototype;
    dart.addTypeTests(_DropdownMenuState);
    _DropdownMenuState.prototype[_is__DropdownMenuState_default] = true;
    dart.addTypeCaches(_DropdownMenuState);
    dart.setMethodSignature(_DropdownMenuState, () => ({
      __proto__: dart.getMethods(_DropdownMenuState.__proto__),
      build: dart.fnType(framework.Widget, [framework.BuildContext])
    }));
    dart.setGetterSignature(_DropdownMenuState, () => ({
      __proto__: dart.getGetters(_DropdownMenuState.__proto__),
      [_fadeOpacity]: animations.CurvedAnimation,
      [_resize]: animations.CurvedAnimation
    }));
    dart.setSetterSignature(_DropdownMenuState, () => ({
      __proto__: dart.getSetters(_DropdownMenuState.__proto__),
      [_fadeOpacity]: animations.CurvedAnimation,
      [_resize]: animations.CurvedAnimation
    }));
    dart.setLibraryUri(_DropdownMenuState, I[0]);
    dart.setFieldSignature(_DropdownMenuState, () => ({
      __proto__: dart.getFields(_DropdownMenuState.__proto__),
      [___DropdownMenuState__fadeOpacity]: dart.fieldType(dart.nullable(animations.CurvedAnimation)),
      [___DropdownMenuState__resize]: dart.fieldType(dart.nullable(animations.CurvedAnimation))
    }));
    return _DropdownMenuState;
  });
  dropdown._DropdownMenuState = dropdown._DropdownMenuState$();
  dart.addTypeTests(dropdown._DropdownMenuState, _is__DropdownMenuState_default);
  const _is__DropdownMenuRouteLayout_default = Symbol('_is__DropdownMenuRouteLayout_default');
  dropdown._DropdownMenuRouteLayout$ = dart.generic(T => {
    var __t$_DropdownMenuRouteLayoutOfT = () => (__t$_DropdownMenuRouteLayoutOfT = dart.constFn(dropdown._DropdownMenuRouteLayout$(T)))();
    class _DropdownMenuRouteLayout extends shifted_box.SingleChildLayoutDelegate {
      static ['_#new#tearOff'](T, opts) {
        let buttonRect = opts && 'buttonRect' in opts ? opts.buttonRect : null;
        let route = opts && 'route' in opts ? opts.route : null;
        let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
        return new (dropdown._DropdownMenuRouteLayout$(T)).new({buttonRect: buttonRect, route: route, textDirection: textDirection});
      }
      getConstraintsForChild(constraints) {
        let maxHeight = math.max(core.double, 0.0, constraints.maxHeight - 2 * 48);
        if (this.route.menuMaxHeight != null && dart.nullCheck(this.route.menuMaxHeight) <= maxHeight) {
          maxHeight = dart.nullCheck(this.route.menuMaxHeight);
        }
        let width = math.min(core.double, constraints.maxWidth, this.buttonRect.width);
        return new box.BoxConstraints.new({minWidth: width, maxWidth: width, maxHeight: maxHeight});
      }
      getPositionForChild(size, childSize) {
        let menuLimits = this.route.getMenuLimits(this.buttonRect, size.height, this.route.selectedIndex);
        if (!dart.fn(() => {
          let container = ui.Offset.zero['&'](size);
          if (container.intersect(this.buttonRect)._equals(this.buttonRect)) {
            if (!(menuLimits.top >= 0.0)) dart.assertFailed(null, I[1], 370, 16, "menuLimits.top >= 0.0");
            if (!(menuLimits.top + menuLimits.height <= size.height)) dart.assertFailed(null, I[1], 371, 16, "menuLimits.top + menuLimits.height <= size.height");
          }
          return true;
        }, T$.VoidTobool())()) dart.assertFailed(null, I[1], 364, 12, "() {\n      final Rect container = Offset.zero & size;\n      if (container.intersect(buttonRect) == buttonRect) {\n        // If the button was entirely on-screen, then verify\n        // that the menu is also on-screen.\n        // If the button was a bit off-screen, then, oh well.\n        assert(menuLimits.top >= 0.0);\n        assert(menuLimits.top + menuLimits.height <= size.height);\n      }\n      return true;\n    }()");
        if (!(this.textDirection != null)) dart.assertFailed(null, I[1], 375, 12, "textDirection != null");
        let left = null;
        switch (dart.nullCheck(this.textDirection)) {
          case C[36] || CT.C36:
            {
              left = math$.clampDouble(this.buttonRect.right, 0.0, size.width) - childSize.width;
              break;
            }
          case C[37] || CT.C37:
            {
              left = math$.clampDouble(this.buttonRect.left, 0.0, size.width - childSize.width);
              break;
            }
        }
        return new ui.Offset.new(left, menuLimits.top);
      }
      shouldRelayout(oldDelegate) {
        __t$_DropdownMenuRouteLayoutOfT().as(oldDelegate);
        return !this.buttonRect._equals(oldDelegate.buttonRect) || this.textDirection != oldDelegate.textDirection;
      }
    }
    (_DropdownMenuRouteLayout.new = function(opts) {
      let buttonRect = opts && 'buttonRect' in opts ? opts.buttonRect : null;
      let route = opts && 'route' in opts ? opts.route : null;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      this.buttonRect = buttonRect;
      this.route = route;
      this.textDirection = textDirection;
      _DropdownMenuRouteLayout.__proto__.new.call(this);
      ;
    }).prototype = _DropdownMenuRouteLayout.prototype;
    dart.addTypeTests(_DropdownMenuRouteLayout);
    _DropdownMenuRouteLayout.prototype[_is__DropdownMenuRouteLayout_default] = true;
    dart.addTypeCaches(_DropdownMenuRouteLayout);
    dart.setMethodSignature(_DropdownMenuRouteLayout, () => ({
      __proto__: dart.getMethods(_DropdownMenuRouteLayout.__proto__),
      shouldRelayout: dart.fnType(core.bool, [dart.nullable(core.Object)])
    }));
    dart.setLibraryUri(_DropdownMenuRouteLayout, I[0]);
    dart.setFieldSignature(_DropdownMenuRouteLayout, () => ({
      __proto__: dart.getFields(_DropdownMenuRouteLayout.__proto__),
      buttonRect: dart.finalFieldType(ui.Rect),
      route: dart.finalFieldType(dropdown._DropdownRoute$(T)),
      textDirection: dart.finalFieldType(dart.nullable(ui.TextDirection))
    }));
    return _DropdownMenuRouteLayout;
  });
  dropdown._DropdownMenuRouteLayout = dropdown._DropdownMenuRouteLayout$();
  dart.addTypeTests(dropdown._DropdownMenuRouteLayout, _is__DropdownMenuRouteLayout_default);
  var result$ = dart.privateName(dropdown, "_DropdownRouteResult.result");
  const _is__DropdownRouteResult_default = Symbol('_is__DropdownRouteResult_default');
  dropdown._DropdownRouteResult$ = dart.generic(T => {
    var __t$_DropdownRouteResultOfT = () => (__t$_DropdownRouteResultOfT = dart.constFn(dropdown._DropdownRouteResult$(T)))();
    class _DropdownRouteResult extends core.Object {
      get result() {
        return this[result$];
      }
      set result(value) {
        super.result = value;
      }
      static ['_#new#tearOff'](T, result) {
        return new (dropdown._DropdownRouteResult$(T)).new(result);
      }
      _equals(other) {
        if (other == null) return false;
        return __t$_DropdownRouteResultOfT().is(other) && dart.equals(other.result, this.result);
      }
      get hashCode() {
        return dart.hashCode(this.result);
      }
    }
    (_DropdownRouteResult.new = function(result) {
      this[result$] = result;
      ;
    }).prototype = _DropdownRouteResult.prototype;
    dart.addTypeTests(_DropdownRouteResult);
    _DropdownRouteResult.prototype[_is__DropdownRouteResult_default] = true;
    dart.addTypeCaches(_DropdownRouteResult);
    dart.setLibraryUri(_DropdownRouteResult, I[0]);
    dart.setFieldSignature(_DropdownRouteResult, () => ({
      __proto__: dart.getFields(_DropdownRouteResult.__proto__),
      result: dart.finalFieldType(dart.nullable(T))
    }));
    dart.defineExtensionMethods(_DropdownRouteResult, ['_equals']);
    dart.defineExtensionAccessors(_DropdownRouteResult, ['hashCode']);
    return _DropdownRouteResult;
  });
  dropdown._DropdownRouteResult = dropdown._DropdownRouteResult$();
  dart.addTypeTests(dropdown._DropdownRouteResult, _is__DropdownRouteResult_default);
  var top$ = dart.privateName(dropdown, "_MenuLimits.top");
  var bottom$ = dart.privateName(dropdown, "_MenuLimits.bottom");
  var height$ = dart.privateName(dropdown, "_MenuLimits.height");
  var scrollOffset$ = dart.privateName(dropdown, "_MenuLimits.scrollOffset");
  dropdown._MenuLimits = class _MenuLimits extends core.Object {
    get top() {
      return this[top$];
    }
    set top(value) {
      super.top = value;
    }
    get bottom() {
      return this[bottom$];
    }
    set bottom(value) {
      super.bottom = value;
    }
    get height() {
      return this[height$];
    }
    set height(value) {
      super.height = value;
    }
    get scrollOffset() {
      return this[scrollOffset$];
    }
    set scrollOffset(value) {
      super.scrollOffset = value;
    }
    static ['_#new#tearOff'](top, bottom, height, scrollOffset) {
      return new dropdown._MenuLimits.new(top, bottom, height, scrollOffset);
    }
  };
  (dropdown._MenuLimits.new = function(top, bottom, height, scrollOffset) {
    this[top$] = top;
    this[bottom$] = bottom;
    this[height$] = height;
    this[scrollOffset$] = scrollOffset;
    ;
  }).prototype = dropdown._MenuLimits.prototype;
  dart.addTypeTests(dropdown._MenuLimits);
  dart.addTypeCaches(dropdown._MenuLimits);
  dart.setLibraryUri(dropdown._MenuLimits, I[0]);
  dart.setFieldSignature(dropdown._MenuLimits, () => ({
    __proto__: dart.getFields(dropdown._MenuLimits.__proto__),
    top: dart.finalFieldType(core.double),
    bottom: dart.finalFieldType(core.double),
    height: dart.finalFieldType(core.double),
    scrollOffset: dart.finalFieldType(core.double)
  }));
  var barrierLabel$ = dart.privateName(dropdown, "_DropdownRoute.barrierLabel");
  var _dismiss = dart.privateName(dropdown, "_dismiss");
  const _is__DropdownRoute_default = Symbol('_is__DropdownRoute_default');
  dropdown._DropdownRoute$ = dart.generic(T => {
    var __t$_DropdownRoutePageOfT = () => (__t$_DropdownRoutePageOfT = dart.constFn(dropdown._DropdownRoutePage$(T)))();
    var __t$BuildContextAndBoxConstraintsTo_DropdownRoutePageOfT = () => (__t$BuildContextAndBoxConstraintsTo_DropdownRoutePageOfT = dart.constFn(dart.fnType(__t$_DropdownRoutePageOfT(), [framework.BuildContext, box.BoxConstraints])))();
    class _DropdownRoute extends routes.PopupRoute$(dropdown._DropdownRouteResult$(T)) {
      get barrierLabel() {
        return this[barrierLabel$];
      }
      set barrierLabel(value) {
        super.barrierLabel = value;
      }
      static ['_#new#tearOff'](T, opts) {
        let items = opts && 'items' in opts ? opts.items : null;
        let padding = opts && 'padding' in opts ? opts.padding : null;
        let buttonRect = opts && 'buttonRect' in opts ? opts.buttonRect : null;
        let selectedIndex = opts && 'selectedIndex' in opts ? opts.selectedIndex : null;
        let elevation = opts && 'elevation' in opts ? opts.elevation : 8;
        let capturedThemes = opts && 'capturedThemes' in opts ? opts.capturedThemes : null;
        let style = opts && 'style' in opts ? opts.style : null;
        let barrierLabel = opts && 'barrierLabel' in opts ? opts.barrierLabel : null;
        let itemHeight = opts && 'itemHeight' in opts ? opts.itemHeight : null;
        let dropdownColor = opts && 'dropdownColor' in opts ? opts.dropdownColor : null;
        let menuMaxHeight = opts && 'menuMaxHeight' in opts ? opts.menuMaxHeight : null;
        let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
        let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
        return new (dropdown._DropdownRoute$(T)).new({items: items, padding: padding, buttonRect: buttonRect, selectedIndex: selectedIndex, elevation: elevation, capturedThemes: capturedThemes, style: style, barrierLabel: barrierLabel, itemHeight: itemHeight, dropdownColor: dropdownColor, menuMaxHeight: menuMaxHeight, enableFeedback: enableFeedback, borderRadius: borderRadius});
      }
      get transitionDuration() {
        return dropdown._kDropdownMenuDuration;
      }
      get barrierDismissible() {
        return true;
      }
      get barrierColor() {
        return null;
      }
      buildPage(context, animation, secondaryAnimation) {
        return new layout_builder.LayoutBuilder.new({builder: dart.fn((context, constraints) => new (__t$_DropdownRoutePageOfT()).new({route: this, constraints: constraints, items: this.items, padding: this.padding, buttonRect: this.buttonRect, selectedIndex: this.selectedIndex, elevation: this.elevation, capturedThemes: this.capturedThemes, style: this.style, dropdownColor: this.dropdownColor, enableFeedback: this.enableFeedback, borderRadius: this.borderRadius, $creationLocationd_0dea112b090073317d4: C[38] || CT.C38}), __t$BuildContextAndBoxConstraintsTo_DropdownRoutePageOfT()), $creationLocationd_0dea112b090073317d4: C[39] || CT.C39});
      }
      [_dismiss]() {
        let t1;
        if (this.isActive) {
          t1 = this.navigator;
          t1 == null ? null : t1.removeRoute(this);
        }
      }
      getItemOffset(index) {
        let offset = constants.kMaterialListPadding.top;
        if (this.items[$isNotEmpty] && index > 0) {
          if (!(this.items[$length] === this.itemHeights[$length])) dart.assertFailed(null, I[1], 499, 14, "items.length == itemHeights.length");
          offset = offset + this.itemHeights[$sublist](0, index)[$reduce](dart.fn((total, height) => total + height, T$.doubleAnddoubleTodouble()));
        }
        return offset;
      }
      getMenuLimits(buttonRect, availableHeight, index) {
        let computedMaxHeight = availableHeight - 2.0 * 48;
        if (this.menuMaxHeight != null) {
          computedMaxHeight = math.min(core.double, computedMaxHeight, dart.nullCheck(this.menuMaxHeight));
        }
        let buttonTop = buttonRect.top;
        let buttonBottom = math.min(core.double, buttonRect.bottom, availableHeight);
        let selectedItemOffset = this.getItemOffset(index);
        let topLimit = math.min(core.double, 48, buttonTop);
        let bottomLimit = math.max(core.double, availableHeight - 48, buttonBottom);
        let menuTop = buttonTop - selectedItemOffset - (this.itemHeights[$_get](this.selectedIndex) - buttonRect.height) / 2.0;
        let preferredMenuHeight = constants.kMaterialListPadding.vertical;
        if (this.items[$isNotEmpty]) {
          preferredMenuHeight = preferredMenuHeight + this.itemHeights[$reduce](dart.fn((total, height) => total + height, T$.doubleAnddoubleTodouble()));
        }
        let menuHeight = math.min(core.double, computedMaxHeight, preferredMenuHeight);
        let menuBottom = menuTop + menuHeight;
        if (menuTop < topLimit) {
          menuTop = math.min(core.double, buttonTop, topLimit);
          menuBottom = menuTop + menuHeight;
        }
        if (menuBottom > bottomLimit) {
          menuBottom = math.max(core.double, buttonBottom, bottomLimit);
          menuTop = menuBottom - menuHeight;
        }
        if (menuBottom - this.itemHeights[$_get](this.selectedIndex) / 2.0 < buttonBottom - buttonRect.height / 2.0) {
          menuBottom = buttonBottom - buttonRect.height / 2.0 + this.itemHeights[$_get](this.selectedIndex) / 2.0;
          menuTop = menuBottom - menuHeight;
        }
        let scrollOffset = 0.0;
        if (preferredMenuHeight > computedMaxHeight) {
          scrollOffset = math.max(core.double, 0.0, selectedItemOffset - (buttonTop - menuTop));
          scrollOffset = math.min(core.double, scrollOffset, preferredMenuHeight - menuHeight);
        }
        if (!((menuBottom - menuTop - menuHeight)[$abs]() < 1e-10)) dart.assertFailed(null, I[1], 574, 12, "(menuBottom - menuTop - menuHeight).abs() < precisionErrorTolerance");
        return new dropdown._MenuLimits.new(menuTop, menuBottom, menuHeight, scrollOffset);
      }
    }
    (_DropdownRoute.new = function(opts) {
      let t1;
      let items = opts && 'items' in opts ? opts.items : null;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let buttonRect = opts && 'buttonRect' in opts ? opts.buttonRect : null;
      let selectedIndex = opts && 'selectedIndex' in opts ? opts.selectedIndex : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : 8;
      let capturedThemes = opts && 'capturedThemes' in opts ? opts.capturedThemes : null;
      let style = opts && 'style' in opts ? opts.style : null;
      let barrierLabel = opts && 'barrierLabel' in opts ? opts.barrierLabel : null;
      let itemHeight = opts && 'itemHeight' in opts ? opts.itemHeight : null;
      let dropdownColor = opts && 'dropdownColor' in opts ? opts.dropdownColor : null;
      let menuMaxHeight = opts && 'menuMaxHeight' in opts ? opts.menuMaxHeight : null;
      let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
      let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
      this.scrollController = null;
      this.items = items;
      this.padding = padding;
      this.buttonRect = buttonRect;
      this.selectedIndex = selectedIndex;
      this.elevation = elevation;
      this.capturedThemes = capturedThemes;
      this.style = style;
      this[barrierLabel$] = barrierLabel;
      this.itemHeight = itemHeight;
      this.dropdownColor = dropdownColor;
      this.menuMaxHeight = menuMaxHeight;
      this.enableFeedback = enableFeedback;
      this.borderRadius = borderRadius;
      if (!(style !== null)) dart.assertFailed(null, I[1], 437, 15, "style != null");
      this.itemHeights = T$.ListOfdouble().filled(items[$length], (t1 = itemHeight, t1 == null ? 48 : t1));
      _DropdownRoute.__proto__.new.call(this);
      ;
    }).prototype = _DropdownRoute.prototype;
    dart.addTypeTests(_DropdownRoute);
    _DropdownRoute.prototype[_is__DropdownRoute_default] = true;
    dart.addTypeCaches(_DropdownRoute);
    dart.setMethodSignature(_DropdownRoute, () => ({
      __proto__: dart.getMethods(_DropdownRoute.__proto__),
      buildPage: dart.fnType(framework.Widget, [framework.BuildContext, animation.Animation$(core.double), animation.Animation$(core.double)]),
      [_dismiss]: dart.fnType(dart.void, []),
      getItemOffset: dart.fnType(core.double, [core.int]),
      getMenuLimits: dart.fnType(dropdown._MenuLimits, [ui.Rect, core.double, core.int])
    }));
    dart.setGetterSignature(_DropdownRoute, () => ({
      __proto__: dart.getGetters(_DropdownRoute.__proto__),
      transitionDuration: core.Duration,
      barrierDismissible: core.bool,
      barrierColor: dart.nullable(ui.Color)
    }));
    dart.setLibraryUri(_DropdownRoute, I[0]);
    dart.setFieldSignature(_DropdownRoute, () => ({
      __proto__: dart.getFields(_DropdownRoute.__proto__),
      items: dart.finalFieldType(core.List$(dropdown._MenuItem$(T))),
      padding: dart.finalFieldType(edge_insets.EdgeInsetsGeometry),
      buttonRect: dart.finalFieldType(ui.Rect),
      selectedIndex: dart.finalFieldType(core.int),
      elevation: dart.finalFieldType(core.int),
      capturedThemes: dart.finalFieldType(inherited_theme.CapturedThemes),
      style: dart.finalFieldType(text_style.TextStyle),
      itemHeight: dart.finalFieldType(dart.nullable(core.double)),
      dropdownColor: dart.finalFieldType(dart.nullable(ui.Color)),
      menuMaxHeight: dart.finalFieldType(dart.nullable(core.double)),
      enableFeedback: dart.finalFieldType(core.bool),
      borderRadius: dart.finalFieldType(dart.nullable(border_radius.BorderRadius)),
      itemHeights: dart.finalFieldType(core.List$(core.double)),
      scrollController: dart.fieldType(dart.nullable(scroll_controller.ScrollController)),
      barrierLabel: dart.finalFieldType(dart.nullable(core.String))
    }));
    return _DropdownRoute;
  });
  dropdown._DropdownRoute = dropdown._DropdownRoute$();
  dart.addTypeTests(dropdown._DropdownRoute, _is__DropdownRoute_default);
  var route$1 = dart.privateName(dropdown, "_DropdownRoutePage.route");
  var constraints$1 = dart.privateName(dropdown, "_DropdownRoutePage.constraints");
  var items$ = dart.privateName(dropdown, "_DropdownRoutePage.items");
  var padding$1 = dart.privateName(dropdown, "_DropdownRoutePage.padding");
  var buttonRect$1 = dart.privateName(dropdown, "_DropdownRoutePage.buttonRect");
  var selectedIndex$ = dart.privateName(dropdown, "_DropdownRoutePage.selectedIndex");
  var elevation$ = dart.privateName(dropdown, "_DropdownRoutePage.elevation");
  var capturedThemes$ = dart.privateName(dropdown, "_DropdownRoutePage.capturedThemes");
  var style$ = dart.privateName(dropdown, "_DropdownRoutePage.style");
  var dropdownColor$0 = dart.privateName(dropdown, "_DropdownRoutePage.dropdownColor");
  var enableFeedback$1 = dart.privateName(dropdown, "_DropdownRoutePage.enableFeedback");
  var borderRadius$0 = dart.privateName(dropdown, "_DropdownRoutePage.borderRadius");
  const _is__DropdownRoutePage_default = Symbol('_is__DropdownRoutePage_default');
  dropdown._DropdownRoutePage$ = dart.generic(T => {
    var __t$_DropdownMenuOfT = () => (__t$_DropdownMenuOfT = dart.constFn(dropdown._DropdownMenu$(T)))();
    var __t$_DropdownMenuRouteLayoutOfT = () => (__t$_DropdownMenuRouteLayoutOfT = dart.constFn(dropdown._DropdownMenuRouteLayout$(T)))();
    class _DropdownRoutePage extends framework.StatelessWidget {
      get route() {
        return this[route$1];
      }
      set route(value) {
        super.route = value;
      }
      get constraints() {
        return this[constraints$1];
      }
      set constraints(value) {
        super.constraints = value;
      }
      get items() {
        return this[items$];
      }
      set items(value) {
        super.items = value;
      }
      get padding() {
        return this[padding$1];
      }
      set padding(value) {
        super.padding = value;
      }
      get buttonRect() {
        return this[buttonRect$1];
      }
      set buttonRect(value) {
        super.buttonRect = value;
      }
      get selectedIndex() {
        return this[selectedIndex$];
      }
      set selectedIndex(value) {
        super.selectedIndex = value;
      }
      get elevation() {
        return this[elevation$];
      }
      set elevation(value) {
        super.elevation = value;
      }
      get capturedThemes() {
        return this[capturedThemes$];
      }
      set capturedThemes(value) {
        super.capturedThemes = value;
      }
      get style() {
        return this[style$];
      }
      set style(value) {
        super.style = value;
      }
      get dropdownColor() {
        return this[dropdownColor$0];
      }
      set dropdownColor(value) {
        super.dropdownColor = value;
      }
      get enableFeedback() {
        return this[enableFeedback$1];
      }
      set enableFeedback(value) {
        super.enableFeedback = value;
      }
      get borderRadius() {
        return this[borderRadius$0];
      }
      set borderRadius(value) {
        super.borderRadius = value;
      }
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let route = opts && 'route' in opts ? opts.route : null;
        let constraints = opts && 'constraints' in opts ? opts.constraints : null;
        let items = opts && 'items' in opts ? opts.items : null;
        let padding = opts && 'padding' in opts ? opts.padding : null;
        let buttonRect = opts && 'buttonRect' in opts ? opts.buttonRect : null;
        let selectedIndex = opts && 'selectedIndex' in opts ? opts.selectedIndex : null;
        let elevation = opts && 'elevation' in opts ? opts.elevation : 8;
        let capturedThemes = opts && 'capturedThemes' in opts ? opts.capturedThemes : null;
        let style = opts && 'style' in opts ? opts.style : null;
        let dropdownColor = opts && 'dropdownColor' in opts ? opts.dropdownColor : null;
        let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
        let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
        return new (dropdown._DropdownRoutePage$(T)).new({key: key, route: route, constraints: constraints, items: items, padding: padding, buttonRect: buttonRect, selectedIndex: selectedIndex, elevation: elevation, capturedThemes: capturedThemes, style: style, dropdownColor: dropdownColor, enableFeedback: enableFeedback, borderRadius: borderRadius, $creationLocationd_0dea112b090073317d4: C[40] || CT.C40});
      }
      build(context) {
        if (!debug.debugCheckHasDirectionality(context)) dart.assertFailed(null, I[1], 611, 12, "debugCheckHasDirectionality(context)");
        if (this.route.scrollController == null) {
          let menuLimits = this.route.getMenuLimits(this.buttonRect, this.constraints.maxHeight, this.selectedIndex);
          this.route.scrollController = new scroll_controller.ScrollController.new({initialScrollOffset: menuLimits.scrollOffset});
        }
        let textDirection = basic.Directionality.maybeOf(context);
        let menu = new (__t$_DropdownMenuOfT()).new({route: this.route, padding: this.padding.resolve(textDirection), buttonRect: this.buttonRect, constraints: this.constraints, dropdownColor: this.dropdownColor, enableFeedback: this.enableFeedback, borderRadius: this.borderRadius, $creationLocationd_0dea112b090073317d4: C[41] || CT.C41});
        return media_query.MediaQuery.removePadding({context: context, removeTop: true, removeBottom: true, removeLeft: true, removeRight: true, child: new basic.Builder.new({builder: dart.fn(context => new basic.CustomSingleChildLayout.new({delegate: new (__t$_DropdownMenuRouteLayoutOfT()).new({buttonRect: this.buttonRect, route: this.route, textDirection: textDirection}), child: this.capturedThemes.wrap(menu), $creationLocationd_0dea112b090073317d4: C[42] || CT.C42}), T$.BuildContextToCustomSingleChildLayout()), $creationLocationd_0dea112b090073317d4: C[43] || CT.C43}), $creationLocationd_0dea112b090073317d4: C[44] || CT.C44});
      }
    }
    (_DropdownRoutePage.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let route = opts && 'route' in opts ? opts.route : null;
      let constraints = opts && 'constraints' in opts ? opts.constraints : null;
      let items = opts && 'items' in opts ? opts.items : null;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let buttonRect = opts && 'buttonRect' in opts ? opts.buttonRect : null;
      let selectedIndex = opts && 'selectedIndex' in opts ? opts.selectedIndex : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : 8;
      let capturedThemes = opts && 'capturedThemes' in opts ? opts.capturedThemes : null;
      let style = opts && 'style' in opts ? opts.style : null;
      let dropdownColor = opts && 'dropdownColor' in opts ? opts.dropdownColor : null;
      let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
      let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[route$1] = route;
      this[constraints$1] = constraints;
      this[items$] = items;
      this[padding$1] = padding;
      this[buttonRect$1] = buttonRect;
      this[selectedIndex$] = selectedIndex;
      this[elevation$] = elevation;
      this[capturedThemes$] = capturedThemes;
      this[style$] = style;
      this[dropdownColor$0] = dropdownColor;
      this[enableFeedback$1] = enableFeedback;
      this[borderRadius$0] = borderRadius;
      _DropdownRoutePage.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = _DropdownRoutePage.prototype;
    dart.addTypeTests(_DropdownRoutePage);
    _DropdownRoutePage.prototype[_is__DropdownRoutePage_default] = true;
    dart.addTypeCaches(_DropdownRoutePage);
    dart.setMethodSignature(_DropdownRoutePage, () => ({
      __proto__: dart.getMethods(_DropdownRoutePage.__proto__),
      build: dart.fnType(framework.Widget, [framework.BuildContext])
    }));
    dart.setLibraryUri(_DropdownRoutePage, I[0]);
    dart.setFieldSignature(_DropdownRoutePage, () => ({
      __proto__: dart.getFields(_DropdownRoutePage.__proto__),
      route: dart.finalFieldType(dropdown._DropdownRoute$(T)),
      constraints: dart.finalFieldType(box.BoxConstraints),
      items: dart.finalFieldType(dart.nullable(core.List$(dropdown._MenuItem$(T)))),
      padding: dart.finalFieldType(edge_insets.EdgeInsetsGeometry),
      buttonRect: dart.finalFieldType(ui.Rect),
      selectedIndex: dart.finalFieldType(core.int),
      elevation: dart.finalFieldType(core.int),
      capturedThemes: dart.finalFieldType(inherited_theme.CapturedThemes),
      style: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
      dropdownColor: dart.finalFieldType(dart.nullable(ui.Color)),
      enableFeedback: dart.finalFieldType(core.bool),
      borderRadius: dart.finalFieldType(dart.nullable(border_radius.BorderRadius))
    }));
    return _DropdownRoutePage;
  });
  dropdown._DropdownRoutePage = dropdown._DropdownRoutePage$();
  dart.addTypeTests(dropdown._DropdownRoutePage, _is__DropdownRoutePage_default);
  var onLayout$ = dart.privateName(dropdown, "_MenuItem.onLayout");
  var item$ = dart.privateName(dropdown, "_MenuItem.item");
  const _is__MenuItem_default = Symbol('_is__MenuItem_default');
  dropdown._MenuItem$ = dart.generic(T => {
    class _MenuItem extends framework.SingleChildRenderObjectWidget {
      get onLayout() {
        return this[onLayout$];
      }
      set onLayout(value) {
        super.onLayout = value;
      }
      get item() {
        return this[item$];
      }
      set item(value) {
        super.item = value;
      }
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let onLayout = opts && 'onLayout' in opts ? opts.onLayout : null;
        let item = opts && 'item' in opts ? opts.item : null;
        return new (dropdown._MenuItem$(T)).new({key: key, onLayout: onLayout, item: item, $creationLocationd_0dea112b090073317d4: C[45] || CT.C45});
      }
      createRenderObject(context) {
        return new dropdown._RenderMenuItem.new(this.onLayout);
      }
      updateRenderObject(context, renderObject) {
        dropdown._RenderMenuItem.as(renderObject);
        renderObject.onLayout = this.onLayout;
      }
    }
    (_MenuItem.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let onLayout = opts && 'onLayout' in opts ? opts.onLayout : null;
      let item = opts && 'item' in opts ? opts.item : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[onLayout$] = onLayout;
      this[item$] = item;
      if (!(onLayout !== null)) dart.assertFailed(null, I[1], 667, 15, "onLayout != null");
      _MenuItem.__proto__.new.call(this, {child: item, key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = _MenuItem.prototype;
    dart.addTypeTests(_MenuItem);
    _MenuItem.prototype[_is__MenuItem_default] = true;
    dart.addTypeCaches(_MenuItem);
    dart.setMethodSignature(_MenuItem, () => ({
      __proto__: dart.getMethods(_MenuItem.__proto__),
      createRenderObject: dart.fnType(object.RenderObject, [framework.BuildContext])
    }));
    dart.setLibraryUri(_MenuItem, I[0]);
    dart.setFieldSignature(_MenuItem, () => ({
      __proto__: dart.getFields(_MenuItem.__proto__),
      onLayout: dart.finalFieldType(dart.fnType(dart.void, [ui.Size])),
      item: dart.finalFieldType(dart.nullable(dropdown.DropdownMenuItem$(T)))
    }));
    return _MenuItem;
  });
  dropdown._MenuItem = dropdown._MenuItem$();
  dart.addTypeTests(dropdown._MenuItem, _is__MenuItem_default);
  dropdown._RenderMenuItem = class _RenderMenuItem extends proxy_box.RenderProxyBox {
    static ['_#new#tearOff'](onLayout, child = null) {
      return new dropdown._RenderMenuItem.new(onLayout, child);
    }
    performLayout() {
      let t1;
      super.performLayout();
      t1 = this.size;
      this.onLayout(t1);
    }
  };
  (dropdown._RenderMenuItem.new = function(onLayout, child = null) {
    this.onLayout = onLayout;
    if (!(onLayout !== null)) dart.assertFailed(null, I[1], 684, 63, "onLayout != null");
    dropdown._RenderMenuItem.__proto__.new.call(this, child);
    ;
  }).prototype = dropdown._RenderMenuItem.prototype;
  dart.addTypeTests(dropdown._RenderMenuItem);
  dart.addTypeCaches(dropdown._RenderMenuItem);
  dart.setLibraryUri(dropdown._RenderMenuItem, I[0]);
  dart.setFieldSignature(dropdown._RenderMenuItem, () => ({
    __proto__: dart.getFields(dropdown._RenderMenuItem.__proto__),
    onLayout: dart.fieldType(dart.fnType(dart.void, [ui.Size]))
  }));
  var child$ = dart.privateName(dropdown, "_DropdownMenuItemContainer.child");
  var alignment$ = dart.privateName(dropdown, "_DropdownMenuItemContainer.alignment");
  var AlignmentDirectional_y = dart.privateName(alignment, "AlignmentDirectional.y");
  var AlignmentDirectional_start = dart.privateName(alignment, "AlignmentDirectional.start");
  var BoxConstraints_maxHeight = dart.privateName(box, "BoxConstraints.maxHeight");
  var BoxConstraints_minHeight = dart.privateName(box, "BoxConstraints.minHeight");
  var BoxConstraints_maxWidth = dart.privateName(box, "BoxConstraints.maxWidth");
  var BoxConstraints_minWidth = dart.privateName(box, "BoxConstraints.minWidth");
  dropdown._DropdownMenuItemContainer = class _DropdownMenuItemContainer extends framework.StatelessWidget {
    get child() {
      return this[child$];
    }
    set child(value) {
      super.child = value;
    }
    get alignment() {
      return this[alignment$];
    }
    set alignment(value) {
      super.alignment = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let alignment = opts && 'alignment' in opts ? opts.alignment : C[46] || CT.C46;
      let child = opts && 'child' in opts ? opts.child : null;
      return new dropdown._DropdownMenuItemContainer.new({key: key, alignment: alignment, child: child, $creationLocationd_0dea112b090073317d4: C[47] || CT.C47});
    }
    build(context) {
      return new container.Container.new({constraints: C[48] || CT.C48, alignment: this.alignment, child: this.child, $creationLocationd_0dea112b090073317d4: C[49] || CT.C49});
    }
  };
  (dropdown._DropdownMenuItemContainer.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C[46] || CT.C46;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[alignment$] = alignment;
    this[child$] = child;
    if (!(child !== null)) dart.assertFailed(null, I[1], 706, 15, "child != null");
    dropdown._DropdownMenuItemContainer.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = dropdown._DropdownMenuItemContainer.prototype;
  dart.addTypeTests(dropdown._DropdownMenuItemContainer);
  dart.addTypeCaches(dropdown._DropdownMenuItemContainer);
  dart.setMethodSignature(dropdown._DropdownMenuItemContainer, () => ({
    __proto__: dart.getMethods(dropdown._DropdownMenuItemContainer.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(dropdown._DropdownMenuItemContainer, I[0]);
  dart.setFieldSignature(dropdown._DropdownMenuItemContainer, () => ({
    __proto__: dart.getFields(dropdown._DropdownMenuItemContainer.__proto__),
    child: dart.finalFieldType(framework.Widget),
    alignment: dart.finalFieldType(alignment.AlignmentGeometry)
  }));
  var onTap$ = dart.privateName(dropdown, "DropdownMenuItem.onTap");
  var value$ = dart.privateName(dropdown, "DropdownMenuItem.value");
  var enabled$ = dart.privateName(dropdown, "DropdownMenuItem.enabled");
  const _is_DropdownMenuItem_default = Symbol('_is_DropdownMenuItem_default');
  dropdown.DropdownMenuItem$ = dart.generic(T => {
    class DropdownMenuItem extends dropdown._DropdownMenuItemContainer {
      get onTap() {
        return this[onTap$];
      }
      set onTap(value) {
        super.onTap = value;
      }
      get value() {
        return this[value$];
      }
      set value(value) {
        super.value = value;
      }
      get enabled() {
        return this[enabled$];
      }
      set enabled(value) {
        super.enabled = value;
      }
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let onTap = opts && 'onTap' in opts ? opts.onTap : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let enabled = opts && 'enabled' in opts ? opts.enabled : true;
        let alignment = opts && 'alignment' in opts ? opts.alignment : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (dropdown.DropdownMenuItem$(T)).new({key: key, onTap: onTap, value: value, enabled: enabled, alignment: alignment, child: child, $creationLocationd_0dea112b090073317d4: C[50] || CT.C50});
      }
    }
    (DropdownMenuItem.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let onTap = opts && 'onTap' in opts ? opts.onTap : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let enabled = opts && 'enabled' in opts ? opts.enabled : true;
      let alignment = opts && 'alignment' in opts ? opts.alignment : C[46] || CT.C46;
      let child = opts && 'child' in opts ? opts.child : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[onTap$] = onTap;
      this[value$] = value;
      this[enabled$] = enabled;
      if (!(child !== null)) dart.assertFailed(null, I[1], 750, 15, "child != null");
      DropdownMenuItem.__proto__.new.call(this, {key: key, alignment: alignment, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = DropdownMenuItem.prototype;
    dart.addTypeTests(DropdownMenuItem);
    DropdownMenuItem.prototype[_is_DropdownMenuItem_default] = true;
    dart.addTypeCaches(DropdownMenuItem);
    dart.setLibraryUri(DropdownMenuItem, I[0]);
    dart.setFieldSignature(DropdownMenuItem, () => ({
      __proto__: dart.getFields(DropdownMenuItem.__proto__),
      onTap: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
      value: dart.finalFieldType(dart.nullable(T)),
      enabled: dart.finalFieldType(core.bool)
    }));
    return DropdownMenuItem;
  });
  dropdown.DropdownMenuItem = dropdown.DropdownMenuItem$();
  dart.addTypeTests(dropdown.DropdownMenuItem, _is_DropdownMenuItem_default);
  dropdown.DropdownButtonHideUnderline = class DropdownButtonHideUnderline extends framework.InheritedWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new dropdown.DropdownButtonHideUnderline.new({key: key, child: child, $creationLocationd_0dea112b090073317d4: C[51] || CT.C51});
    }
    static at(context) {
      return context.dependOnInheritedWidgetOfExactType(dropdown.DropdownButtonHideUnderline) != null;
    }
    updateShouldNotify(oldWidget) {
      dropdown.DropdownButtonHideUnderline.as(oldWidget);
      return false;
    }
  };
  (dropdown.DropdownButtonHideUnderline.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    if (!(child !== null)) dart.assertFailed(null, I[1], 778, 15, "child != null");
    dropdown.DropdownButtonHideUnderline.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = dropdown.DropdownButtonHideUnderline.prototype;
  dart.addTypeTests(dropdown.DropdownButtonHideUnderline);
  dart.addTypeCaches(dropdown.DropdownButtonHideUnderline);
  dart.setMethodSignature(dropdown.DropdownButtonHideUnderline, () => ({
    __proto__: dart.getMethods(dropdown.DropdownButtonHideUnderline.__proto__),
    updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setStaticMethodSignature(dropdown.DropdownButtonHideUnderline, () => ['at']);
  dart.setLibraryUri(dropdown.DropdownButtonHideUnderline, I[0]);
  var items$0 = dart.privateName(dropdown, "DropdownButton.items");
  var value$0 = dart.privateName(dropdown, "DropdownButton.value");
  var hint$ = dart.privateName(dropdown, "DropdownButton.hint");
  var disabledHint$ = dart.privateName(dropdown, "DropdownButton.disabledHint");
  var onChanged$ = dart.privateName(dropdown, "DropdownButton.onChanged");
  var onTap$0 = dart.privateName(dropdown, "DropdownButton.onTap");
  var selectedItemBuilder$ = dart.privateName(dropdown, "DropdownButton.selectedItemBuilder");
  var elevation$0 = dart.privateName(dropdown, "DropdownButton.elevation");
  var style$0 = dart.privateName(dropdown, "DropdownButton.style");
  var underline$ = dart.privateName(dropdown, "DropdownButton.underline");
  var icon$ = dart.privateName(dropdown, "DropdownButton.icon");
  var iconDisabledColor$ = dart.privateName(dropdown, "DropdownButton.iconDisabledColor");
  var iconEnabledColor$ = dart.privateName(dropdown, "DropdownButton.iconEnabledColor");
  var iconSize$ = dart.privateName(dropdown, "DropdownButton.iconSize");
  var isDense$ = dart.privateName(dropdown, "DropdownButton.isDense");
  var isExpanded$ = dart.privateName(dropdown, "DropdownButton.isExpanded");
  var itemHeight$ = dart.privateName(dropdown, "DropdownButton.itemHeight");
  var focusColor$ = dart.privateName(dropdown, "DropdownButton.focusColor");
  var focusNode$ = dart.privateName(dropdown, "DropdownButton.focusNode");
  var autofocus$ = dart.privateName(dropdown, "DropdownButton.autofocus");
  var dropdownColor$1 = dart.privateName(dropdown, "DropdownButton.dropdownColor");
  var menuMaxHeight$ = dart.privateName(dropdown, "DropdownButton.menuMaxHeight");
  var enableFeedback$2 = dart.privateName(dropdown, "DropdownButton.enableFeedback");
  var alignment$0 = dart.privateName(dropdown, "DropdownButton.alignment");
  var borderRadius$1 = dart.privateName(dropdown, "DropdownButton.borderRadius");
  var _inputDecoration = dart.privateName(dropdown, "_inputDecoration");
  var _isEmpty = dart.privateName(dropdown, "_isEmpty");
  var _isFocused = dart.privateName(dropdown, "_isFocused");
  const _is_DropdownButton_default = Symbol('_is_DropdownButton_default');
  dropdown.DropdownButton$ = dart.generic(T => {
    var __t$DropdownMenuItemOfT = () => (__t$DropdownMenuItemOfT = dart.constFn(dropdown.DropdownMenuItem$(T)))();
    var __t$DropdownMenuItemOfTTobool = () => (__t$DropdownMenuItemOfTTobool = dart.constFn(dart.fnType(core.bool, [__t$DropdownMenuItemOfT()])))();
    var __t$_DropdownButtonStateOfT = () => (__t$_DropdownButtonStateOfT = dart.constFn(dropdown._DropdownButtonState$(T)))();
    class DropdownButton extends framework.StatefulWidget {
      get items() {
        return this[items$0];
      }
      set items(value) {
        super.items = value;
      }
      get value() {
        return this[value$0];
      }
      set value(value) {
        super.value = value;
      }
      get hint() {
        return this[hint$];
      }
      set hint(value) {
        super.hint = value;
      }
      get disabledHint() {
        return this[disabledHint$];
      }
      set disabledHint(value) {
        super.disabledHint = value;
      }
      get onChanged() {
        return this[onChanged$];
      }
      set onChanged(value) {
        super.onChanged = value;
      }
      get onTap() {
        return this[onTap$0];
      }
      set onTap(value) {
        super.onTap = value;
      }
      get selectedItemBuilder() {
        return this[selectedItemBuilder$];
      }
      set selectedItemBuilder(value) {
        super.selectedItemBuilder = value;
      }
      get elevation() {
        return this[elevation$0];
      }
      set elevation(value) {
        super.elevation = value;
      }
      get style() {
        return this[style$0];
      }
      set style(value) {
        super.style = value;
      }
      get underline() {
        return this[underline$];
      }
      set underline(value) {
        super.underline = value;
      }
      get icon() {
        return this[icon$];
      }
      set icon(value) {
        super.icon = value;
      }
      get iconDisabledColor() {
        return this[iconDisabledColor$];
      }
      set iconDisabledColor(value) {
        super.iconDisabledColor = value;
      }
      get iconEnabledColor() {
        return this[iconEnabledColor$];
      }
      set iconEnabledColor(value) {
        super.iconEnabledColor = value;
      }
      get iconSize() {
        return this[iconSize$];
      }
      set iconSize(value) {
        super.iconSize = value;
      }
      get isDense() {
        return this[isDense$];
      }
      set isDense(value) {
        super.isDense = value;
      }
      get isExpanded() {
        return this[isExpanded$];
      }
      set isExpanded(value) {
        super.isExpanded = value;
      }
      get itemHeight() {
        return this[itemHeight$];
      }
      set itemHeight(value) {
        super.itemHeight = value;
      }
      get focusColor() {
        return this[focusColor$];
      }
      set focusColor(value) {
        super.focusColor = value;
      }
      get focusNode() {
        return this[focusNode$];
      }
      set focusNode(value) {
        super.focusNode = value;
      }
      get autofocus() {
        return this[autofocus$];
      }
      set autofocus(value) {
        super.autofocus = value;
      }
      get dropdownColor() {
        return this[dropdownColor$1];
      }
      set dropdownColor(value) {
        super.dropdownColor = value;
      }
      get menuMaxHeight() {
        return this[menuMaxHeight$];
      }
      set menuMaxHeight(value) {
        super.menuMaxHeight = value;
      }
      get enableFeedback() {
        return this[enableFeedback$2];
      }
      set enableFeedback(value) {
        super.enableFeedback = value;
      }
      get alignment() {
        return this[alignment$0];
      }
      set alignment(value) {
        super.alignment = value;
      }
      get borderRadius() {
        return this[borderRadius$1];
      }
      set borderRadius(value) {
        super.borderRadius = value;
      }
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let items = opts && 'items' in opts ? opts.items : null;
        let selectedItemBuilder = opts && 'selectedItemBuilder' in opts ? opts.selectedItemBuilder : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let hint = opts && 'hint' in opts ? opts.hint : null;
        let disabledHint = opts && 'disabledHint' in opts ? opts.disabledHint : null;
        let onChanged = opts && 'onChanged' in opts ? opts.onChanged : null;
        let onTap = opts && 'onTap' in opts ? opts.onTap : null;
        let elevation = opts && 'elevation' in opts ? opts.elevation : 8;
        let style = opts && 'style' in opts ? opts.style : null;
        let underline = opts && 'underline' in opts ? opts.underline : null;
        let icon = opts && 'icon' in opts ? opts.icon : null;
        let iconDisabledColor = opts && 'iconDisabledColor' in opts ? opts.iconDisabledColor : null;
        let iconEnabledColor = opts && 'iconEnabledColor' in opts ? opts.iconEnabledColor : null;
        let iconSize = opts && 'iconSize' in opts ? opts.iconSize : 24;
        let isDense = opts && 'isDense' in opts ? opts.isDense : false;
        let isExpanded = opts && 'isExpanded' in opts ? opts.isExpanded : false;
        let itemHeight = opts && 'itemHeight' in opts ? opts.itemHeight : 48;
        let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
        let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
        let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
        let dropdownColor = opts && 'dropdownColor' in opts ? opts.dropdownColor : null;
        let menuMaxHeight = opts && 'menuMaxHeight' in opts ? opts.menuMaxHeight : null;
        let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
        let alignment = opts && 'alignment' in opts ? opts.alignment : C[46] || CT.C46;
        let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
        return new (dropdown.DropdownButton$(T)).new({key: key, items: items, selectedItemBuilder: selectedItemBuilder, value: value, hint: hint, disabledHint: disabledHint, onChanged: onChanged, onTap: onTap, elevation: elevation, style: style, underline: underline, icon: icon, iconDisabledColor: iconDisabledColor, iconEnabledColor: iconEnabledColor, iconSize: iconSize, isDense: isDense, isExpanded: isExpanded, itemHeight: itemHeight, focusColor: focusColor, focusNode: focusNode, autofocus: autofocus, dropdownColor: dropdownColor, menuMaxHeight: menuMaxHeight, enableFeedback: enableFeedback, alignment: alignment, borderRadius: borderRadius, $creationLocationd_0dea112b090073317d4: C[52] || CT.C52});
      }
      static ['_#_formField#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let items = opts && 'items' in opts ? opts.items : null;
        let selectedItemBuilder = opts && 'selectedItemBuilder' in opts ? opts.selectedItemBuilder : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let hint = opts && 'hint' in opts ? opts.hint : null;
        let disabledHint = opts && 'disabledHint' in opts ? opts.disabledHint : null;
        let onChanged = opts && 'onChanged' in opts ? opts.onChanged : null;
        let onTap = opts && 'onTap' in opts ? opts.onTap : null;
        let elevation = opts && 'elevation' in opts ? opts.elevation : 8;
        let style = opts && 'style' in opts ? opts.style : null;
        let underline = opts && 'underline' in opts ? opts.underline : null;
        let icon = opts && 'icon' in opts ? opts.icon : null;
        let iconDisabledColor = opts && 'iconDisabledColor' in opts ? opts.iconDisabledColor : null;
        let iconEnabledColor = opts && 'iconEnabledColor' in opts ? opts.iconEnabledColor : null;
        let iconSize = opts && 'iconSize' in opts ? opts.iconSize : 24;
        let isDense = opts && 'isDense' in opts ? opts.isDense : false;
        let isExpanded = opts && 'isExpanded' in opts ? opts.isExpanded : false;
        let itemHeight = opts && 'itemHeight' in opts ? opts.itemHeight : 48;
        let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
        let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
        let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
        let dropdownColor = opts && 'dropdownColor' in opts ? opts.dropdownColor : null;
        let menuMaxHeight = opts && 'menuMaxHeight' in opts ? opts.menuMaxHeight : null;
        let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
        let alignment = opts && 'alignment' in opts ? opts.alignment : C[46] || CT.C46;
        let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
        let inputDecoration = opts && 'inputDecoration' in opts ? opts.inputDecoration : null;
        let isEmpty = opts && 'isEmpty' in opts ? opts.isEmpty : null;
        let isFocused = opts && 'isFocused' in opts ? opts.isFocused : null;
        return new (dropdown.DropdownButton$(T))._formField({key: key, items: items, selectedItemBuilder: selectedItemBuilder, value: value, hint: hint, disabledHint: disabledHint, onChanged: onChanged, onTap: onTap, elevation: elevation, style: style, underline: underline, icon: icon, iconDisabledColor: iconDisabledColor, iconEnabledColor: iconEnabledColor, iconSize: iconSize, isDense: isDense, isExpanded: isExpanded, itemHeight: itemHeight, focusColor: focusColor, focusNode: focusNode, autofocus: autofocus, dropdownColor: dropdownColor, menuMaxHeight: menuMaxHeight, enableFeedback: enableFeedback, alignment: alignment, borderRadius: borderRadius, inputDecoration: inputDecoration, isEmpty: isEmpty, isFocused: isFocused, $creationLocationd_0dea112b090073317d4: C[53] || CT.C53});
      }
      createState() {
        return new (__t$_DropdownButtonStateOfT()).new();
      }
    }
    (DropdownButton.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let items = opts && 'items' in opts ? opts.items : null;
      let selectedItemBuilder = opts && 'selectedItemBuilder' in opts ? opts.selectedItemBuilder : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let hint = opts && 'hint' in opts ? opts.hint : null;
      let disabledHint = opts && 'disabledHint' in opts ? opts.disabledHint : null;
      let onChanged = opts && 'onChanged' in opts ? opts.onChanged : null;
      let onTap = opts && 'onTap' in opts ? opts.onTap : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : 8;
      let style = opts && 'style' in opts ? opts.style : null;
      let underline = opts && 'underline' in opts ? opts.underline : null;
      let icon = opts && 'icon' in opts ? opts.icon : null;
      let iconDisabledColor = opts && 'iconDisabledColor' in opts ? opts.iconDisabledColor : null;
      let iconEnabledColor = opts && 'iconEnabledColor' in opts ? opts.iconEnabledColor : null;
      let iconSize = opts && 'iconSize' in opts ? opts.iconSize : 24;
      let isDense = opts && 'isDense' in opts ? opts.isDense : false;
      let isExpanded = opts && 'isExpanded' in opts ? opts.isExpanded : false;
      let itemHeight = opts && 'itemHeight' in opts ? opts.itemHeight : 48;
      let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
      let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
      let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
      let dropdownColor = opts && 'dropdownColor' in opts ? opts.dropdownColor : null;
      let menuMaxHeight = opts && 'menuMaxHeight' in opts ? opts.menuMaxHeight : null;
      let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
      let alignment = opts && 'alignment' in opts ? opts.alignment : C[46] || CT.C46;
      let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[items$0] = items;
      this[selectedItemBuilder$] = selectedItemBuilder;
      this[value$0] = value;
      this[hint$] = hint;
      this[disabledHint$] = disabledHint;
      this[onChanged$] = onChanged;
      this[onTap$0] = onTap;
      this[elevation$0] = elevation;
      this[style$0] = style;
      this[underline$] = underline;
      this[icon$] = icon;
      this[iconDisabledColor$] = iconDisabledColor;
      this[iconEnabledColor$] = iconEnabledColor;
      this[iconSize$] = iconSize;
      this[isDense$] = isDense;
      this[isExpanded$] = isExpanded;
      this[itemHeight$] = itemHeight;
      this[focusColor$] = focusColor;
      this[focusNode$] = focusNode;
      this[autofocus$] = autofocus;
      this[dropdownColor$1] = dropdownColor;
      this[menuMaxHeight$] = menuMaxHeight;
      this[enableFeedback$2] = enableFeedback;
      this[alignment$0] = alignment;
      this[borderRadius$1] = borderRadius;
      if (!(items == null || items[$isEmpty] || value == null || items[$where](dart.fn(item => dart.equals(item.value, value), __t$DropdownMenuItemOfTTobool()))[$length] === 1)) dart.assertFailed("There should be exactly one item with [DropdownButton]'s value: " + dart.str(value) + ". \n" + "Either zero or 2 or more [DropdownMenuItem]s were detected " + "with the same value", I[1], 890, 15, "items == null || items.isEmpty || value == null ||\n              items.where((DropdownMenuItem<T> item) {\n                return item.value == value;\n              }).length == 1");
      if (!(elevation !== null)) dart.assertFailed(null, I[1], 899, 15, "elevation != null");
      if (!(iconSize !== null)) dart.assertFailed(null, I[1], 900, 15, "iconSize != null");
      if (!(isDense !== null)) dart.assertFailed(null, I[1], 901, 15, "isDense != null");
      if (!(isExpanded !== null)) dart.assertFailed(null, I[1], 902, 15, "isExpanded != null");
      if (!(autofocus !== null)) dart.assertFailed(null, I[1], 903, 15, "autofocus != null");
      if (!(itemHeight == null || dart.notNull(itemHeight) >= 48)) dart.assertFailed(null, I[1], 904, 15, "itemHeight == null || itemHeight >=  kMinInteractiveDimension");
      this[_inputDecoration] = null;
      this[_isEmpty] = false;
      this[_isFocused] = false;
      DropdownButton.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = DropdownButton.prototype;
    (DropdownButton._formField = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let items = opts && 'items' in opts ? opts.items : null;
      let selectedItemBuilder = opts && 'selectedItemBuilder' in opts ? opts.selectedItemBuilder : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let hint = opts && 'hint' in opts ? opts.hint : null;
      let disabledHint = opts && 'disabledHint' in opts ? opts.disabledHint : null;
      let onChanged = opts && 'onChanged' in opts ? opts.onChanged : null;
      let onTap = opts && 'onTap' in opts ? opts.onTap : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : 8;
      let style = opts && 'style' in opts ? opts.style : null;
      let underline = opts && 'underline' in opts ? opts.underline : null;
      let icon = opts && 'icon' in opts ? opts.icon : null;
      let iconDisabledColor = opts && 'iconDisabledColor' in opts ? opts.iconDisabledColor : null;
      let iconEnabledColor = opts && 'iconEnabledColor' in opts ? opts.iconEnabledColor : null;
      let iconSize = opts && 'iconSize' in opts ? opts.iconSize : 24;
      let isDense = opts && 'isDense' in opts ? opts.isDense : false;
      let isExpanded = opts && 'isExpanded' in opts ? opts.isExpanded : false;
      let itemHeight = opts && 'itemHeight' in opts ? opts.itemHeight : 48;
      let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
      let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
      let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
      let dropdownColor = opts && 'dropdownColor' in opts ? opts.dropdownColor : null;
      let menuMaxHeight = opts && 'menuMaxHeight' in opts ? opts.menuMaxHeight : null;
      let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
      let alignment = opts && 'alignment' in opts ? opts.alignment : C[46] || CT.C46;
      let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
      let inputDecoration = opts && 'inputDecoration' in opts ? opts.inputDecoration : null;
      let isEmpty = opts && 'isEmpty' in opts ? opts.isEmpty : null;
      let isFocused = opts && 'isFocused' in opts ? opts.isFocused : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[items$0] = items;
      this[selectedItemBuilder$] = selectedItemBuilder;
      this[value$0] = value;
      this[hint$] = hint;
      this[disabledHint$] = disabledHint;
      this[onChanged$] = onChanged;
      this[onTap$0] = onTap;
      this[elevation$0] = elevation;
      this[style$0] = style;
      this[underline$] = underline;
      this[icon$] = icon;
      this[iconDisabledColor$] = iconDisabledColor;
      this[iconEnabledColor$] = iconEnabledColor;
      this[iconSize$] = iconSize;
      this[isDense$] = isDense;
      this[isExpanded$] = isExpanded;
      this[itemHeight$] = itemHeight;
      this[focusColor$] = focusColor;
      this[focusNode$] = focusNode;
      this[autofocus$] = autofocus;
      this[dropdownColor$1] = dropdownColor;
      this[menuMaxHeight$] = menuMaxHeight;
      this[enableFeedback$2] = enableFeedback;
      this[alignment$0] = alignment;
      this[borderRadius$1] = borderRadius;
      if (!(items == null || items[$isEmpty] || value == null || items[$where](dart.fn(item => dart.equals(item.value, value), __t$DropdownMenuItemOfTTobool()))[$length] === 1)) dart.assertFailed("There should be exactly one item with [DropdownButtonFormField]'s value: " + dart.str(value) + ". \n" + "Either zero or 2 or more [DropdownMenuItem]s were detected " + "with the same value", I[1], 939, 15, "items == null || items.isEmpty || value == null ||\n              items.where((DropdownMenuItem<T> item) {\n                return item.value == value;\n              }).length == 1");
      if (!(elevation !== null)) dart.assertFailed(null, I[1], 948, 15, "elevation != null");
      if (!(iconSize !== null)) dart.assertFailed(null, I[1], 949, 15, "iconSize != null");
      if (!(isDense !== null)) dart.assertFailed(null, I[1], 950, 15, "isDense != null");
      if (!(isExpanded !== null)) dart.assertFailed(null, I[1], 951, 15, "isExpanded != null");
      if (!(autofocus !== null)) dart.assertFailed(null, I[1], 952, 15, "autofocus != null");
      if (!(itemHeight == null || dart.notNull(itemHeight) >= 48)) dart.assertFailed(null, I[1], 953, 15, "itemHeight == null || itemHeight >=  kMinInteractiveDimension");
      if (!(isEmpty !== null)) dart.assertFailed(null, I[1], 954, 15, "isEmpty != null");
      if (!(isFocused !== null)) dart.assertFailed(null, I[1], 955, 15, "isFocused != null");
      this[_inputDecoration] = inputDecoration;
      this[_isEmpty] = isEmpty;
      this[_isFocused] = isFocused;
      DropdownButton.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = DropdownButton.prototype;
    dart.addTypeTests(DropdownButton);
    DropdownButton.prototype[_is_DropdownButton_default] = true;
    dart.addTypeCaches(DropdownButton);
    dart.setMethodSignature(DropdownButton, () => ({
      __proto__: dart.getMethods(DropdownButton.__proto__),
      createState: dart.fnType(framework.State$(dropdown.DropdownButton$(T)), [])
    }));
    dart.setLibraryUri(DropdownButton, I[0]);
    dart.setFieldSignature(DropdownButton, () => ({
      __proto__: dart.getFields(DropdownButton.__proto__),
      items: dart.finalFieldType(dart.nullable(core.List$(dropdown.DropdownMenuItem$(T)))),
      value: dart.finalFieldType(dart.nullable(T)),
      hint: dart.finalFieldType(dart.nullable(framework.Widget)),
      disabledHint: dart.finalFieldType(dart.nullable(framework.Widget)),
      onChanged: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [dart.nullable(T)]))),
      onTap: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
      selectedItemBuilder: dart.finalFieldType(dart.nullable(dart.fnType(core.List$(framework.Widget), [framework.BuildContext]))),
      elevation: dart.finalFieldType(core.int),
      style: dart.finalFieldType(dart.nullable(text_style.TextStyle)),
      underline: dart.finalFieldType(dart.nullable(framework.Widget)),
      icon: dart.finalFieldType(dart.nullable(framework.Widget)),
      iconDisabledColor: dart.finalFieldType(dart.nullable(ui.Color)),
      iconEnabledColor: dart.finalFieldType(dart.nullable(ui.Color)),
      iconSize: dart.finalFieldType(core.double),
      isDense: dart.finalFieldType(core.bool),
      isExpanded: dart.finalFieldType(core.bool),
      itemHeight: dart.finalFieldType(dart.nullable(core.double)),
      focusColor: dart.finalFieldType(dart.nullable(ui.Color)),
      focusNode: dart.finalFieldType(dart.nullable(focus_manager.FocusNode)),
      autofocus: dart.finalFieldType(core.bool),
      dropdownColor: dart.finalFieldType(dart.nullable(ui.Color)),
      menuMaxHeight: dart.finalFieldType(dart.nullable(core.double)),
      enableFeedback: dart.finalFieldType(dart.nullable(core.bool)),
      alignment: dart.finalFieldType(alignment.AlignmentGeometry),
      borderRadius: dart.finalFieldType(dart.nullable(border_radius.BorderRadius)),
      [_inputDecoration]: dart.finalFieldType(dart.nullable(input_decorator.InputDecoration)),
      [_isEmpty]: dart.finalFieldType(core.bool),
      [_isFocused]: dart.finalFieldType(core.bool)
    }));
    return DropdownButton;
  });
  dropdown.DropdownButton = dropdown.DropdownButton$();
  dart.addTypeTests(dropdown.DropdownButton, _is_DropdownButton_default);
  var _selectedIndex = dart.privateName(dropdown, "_selectedIndex");
  var _dropdownRoute = dart.privateName(dropdown, "_dropdownRoute");
  var _lastOrientation = dart.privateName(dropdown, "_lastOrientation");
  var _internalNode = dart.privateName(dropdown, "_internalNode");
  var _hasPrimaryFocus = dart.privateName(dropdown, "_hasPrimaryFocus");
  var ___DropdownButtonState__actionMap = dart.privateName(dropdown, "_#_DropdownButtonState#_actionMap");
  var _actionMap = dart.privateName(dropdown, "_actionMap");
  var _createFocusNode = dart.privateName(dropdown, "_createFocusNode");
  var _updateSelectedIndex = dart.privateName(dropdown, "_updateSelectedIndex");
  var _handleTap = dart.privateName(dropdown, "_handleTap");
  var _handleFocusChanged = dart.privateName(dropdown, "_handleFocusChanged");
  var _removeDropdownRoute = dart.privateName(dropdown, "_removeDropdownRoute");
  var _textStyle = dart.privateName(dropdown, "_textStyle");
  var _denseButtonHeight = dart.privateName(dropdown, "_denseButtonHeight");
  var _enabled = dart.privateName(dropdown, "_enabled");
  var _iconColor = dart.privateName(dropdown, "_iconColor");
  var _getOrientation = dart.privateName(dropdown, "_getOrientation");
  var Widget__location = dart.privateName(framework, "Widget._location");
  var Widget_key = dart.privateName(framework, "Widget.key");
  var Icon_shadows = dart.privateName(icon, "Icon.shadows");
  var Icon_textDirection = dart.privateName(icon, "Icon.textDirection");
  var Icon_semanticLabel = dart.privateName(icon, "Icon.semanticLabel");
  var Icon_color = dart.privateName(icon, "Icon.color");
  var Icon_size = dart.privateName(icon, "Icon.size");
  var IconData_matchTextDirection = dart.privateName(icon_data, "IconData.matchTextDirection");
  var IconData_fontPackage = dart.privateName(icon_data, "IconData.fontPackage");
  var IconData_fontFamily = dart.privateName(icon_data, "IconData.fontFamily");
  var IconData_codePoint = dart.privateName(icon_data, "IconData.codePoint");
  var Icon_icon = dart.privateName(icon, "Icon.icon");
  var BoxDecoration_shape = dart.privateName(box_decoration, "BoxDecoration.shape");
  var BoxDecoration_backgroundBlendMode = dart.privateName(box_decoration, "BoxDecoration.backgroundBlendMode");
  var BoxDecoration_gradient = dart.privateName(box_decoration, "BoxDecoration.gradient");
  var BoxDecoration_boxShadow = dart.privateName(box_decoration, "BoxDecoration.boxShadow");
  var BoxDecoration_borderRadius = dart.privateName(box_decoration, "BoxDecoration.borderRadius");
  var BorderSide_strokeAlign = dart.privateName(borders, "BorderSide.strokeAlign");
  var BorderSide_style = dart.privateName(borders, "BorderSide.style");
  var BorderSide_width = dart.privateName(borders, "BorderSide.width");
  var Color_value = dart.privateName(ui, "Color.value");
  var BorderSide_color = dart.privateName(borders, "BorderSide.color");
  var Border_left = dart.privateName(box_border, "Border.left");
  var Border_bottom = dart.privateName(box_border, "Border.bottom");
  var Border_right = dart.privateName(box_border, "Border.right");
  var Border_top = dart.privateName(box_border, "Border.top");
  var BoxDecoration_border = dart.privateName(box_decoration, "BoxDecoration.border");
  var BoxDecoration_image = dart.privateName(box_decoration, "BoxDecoration.image");
  var BoxDecoration_color = dart.privateName(box_decoration, "BoxDecoration.color");
  const _is__DropdownButtonState_default = Symbol('_is__DropdownButtonState_default');
  dropdown._DropdownButtonState$ = dart.generic(T => {
    var __t$DropdownButtonOfT = () => (__t$DropdownButtonOfT = dart.constFn(dropdown.DropdownButton$(T)))();
    var __t$DropdownMenuItemOfT = () => (__t$DropdownMenuItemOfT = dart.constFn(dropdown.DropdownMenuItem$(T)))();
    var __t$DropdownMenuItemOfTTobool = () => (__t$DropdownMenuItemOfTTobool = dart.constFn(dart.fnType(core.bool, [__t$DropdownMenuItemOfT()])))();
    var __t$_MenuItemOfT = () => (__t$_MenuItemOfT = dart.constFn(dropdown._MenuItem$(T)))();
    var __t$JSArrayOf_MenuItemOfT = () => (__t$JSArrayOf_MenuItemOfT = dart.constFn(_interceptors.JSArray$(__t$_MenuItemOfT())))();
    var __t$_DropdownRouteOfT = () => (__t$_DropdownRouteOfT = dart.constFn(dropdown._DropdownRoute$(T)))();
    var __t$_DropdownRouteResultOfT = () => (__t$_DropdownRouteResultOfT = dart.constFn(dropdown._DropdownRouteResult$(T)))();
    var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
    var __t$TNTovoid = () => (__t$TNTovoid = dart.constFn(dart.fnType(dart.void, [__t$TN()])))();
    var __t$TNToNvoid = () => (__t$TNToNvoid = dart.constFn(dart.nullable(__t$TNTovoid())))();
    var __t$_DropdownRouteResultNOfT = () => (__t$_DropdownRouteResultNOfT = dart.constFn(dart.nullable(__t$_DropdownRouteResultOfT())))();
    var __t$_DropdownRouteResultNOfTToNull = () => (__t$_DropdownRouteResultNOfTToNull = dart.constFn(dart.fnType(core.Null, [__t$_DropdownRouteResultNOfT()])))();
    const State_WidgetsBindingObserver$36 = class State_WidgetsBindingObserver extends framework.State$(dropdown.DropdownButton$(T)) {};
    (State_WidgetsBindingObserver$36.new = function() {
      State_WidgetsBindingObserver$36.__proto__.new.call(this);
    }).prototype = State_WidgetsBindingObserver$36.prototype;
    dart.applyMixin(State_WidgetsBindingObserver$36, binding.WidgetsBindingObserver);
    class _DropdownButtonState extends State_WidgetsBindingObserver$36 {
      get focusNode() {
        let t1;
        t1 = this.widget.focusNode;
        return t1 == null ? this[_internalNode] : t1;
      }
      get [_actionMap]() {
        let t1;
        t1 = this[___DropdownButtonState__actionMap];
        return t1 == null ? dart.throw(new _internal.LateError.fieldNI("_actionMap")) : t1;
      }
      set [_actionMap](library$32package$58flutter$47src$47material$47dropdown$46dart$58$58_actionMap$35param) {
        this[___DropdownButtonState__actionMap] = library$32package$58flutter$47src$47material$47dropdown$46dart$58$58_actionMap$35param;
      }
      [_createFocusNode]() {
        return new focus_manager.FocusNode.new({debugLabel: dart.str(this.widget[$runtimeType])});
      }
      initState() {
        super.initState();
        this[_updateSelectedIndex]();
        if (this.widget.focusNode == null) {
          this[_internalNode] == null ? this[_internalNode] = this[_createFocusNode]() : null;
        }
        this[_actionMap] = new (T$.LinkedMapOfType$ActionOfIntent()).from([dart.wrapType(actions.ActivateIntent), new (T$.CallbackActionOfActivateIntent()).new({onInvoke: dart.fn(intent => this[_handleTap](), T$.ActivateIntentTovoid())}), dart.wrapType(actions.ButtonActivateIntent), new (T$.CallbackActionOfButtonActivateIntent()).new({onInvoke: dart.fn(intent => this[_handleTap](), T$.ButtonActivateIntentTovoid())})]);
        dart.nullCheck(this.focusNode).addListener(dart.bind(this, _handleFocusChanged));
      }
      dispose() {
        let t1;
        binding.WidgetsBinding.instance.removeObserver(this);
        this[_removeDropdownRoute]();
        dart.nullCheck(this.focusNode).removeListener(dart.bind(this, _handleFocusChanged));
        t1 = this[_internalNode];
        t1 == null ? null : t1.dispose();
        super.dispose();
      }
      [_removeDropdownRoute]() {
        let t1;
        t1 = this[_dropdownRoute];
        t1 == null ? null : t1[_dismiss]();
        this[_dropdownRoute] = null;
        this[_lastOrientation] = null;
      }
      [_handleFocusChanged]() {
        if (this[_hasPrimaryFocus] !== dart.nullCheck(this.focusNode).hasPrimaryFocus) {
          this.setState(dart.fn(() => {
            this[_hasPrimaryFocus] = dart.nullCheck(this.focusNode).hasPrimaryFocus;
          }, T$.VoidTovoid()));
        }
      }
      didUpdateWidget(oldWidget) {
        let t1;
        __t$DropdownButtonOfT().as(oldWidget);
        super.didUpdateWidget(oldWidget);
        if (!dart.equals(this.widget.focusNode, oldWidget.focusNode)) {
          t1 = oldWidget.focusNode;
          t1 == null ? null : t1.removeListener(dart.bind(this, _handleFocusChanged));
          if (this.widget.focusNode == null) {
            this[_internalNode] == null ? this[_internalNode] = this[_createFocusNode]() : null;
          }
          this[_hasPrimaryFocus] = dart.nullCheck(this.focusNode).hasPrimaryFocus;
          dart.nullCheck(this.focusNode).addListener(dart.bind(this, _handleFocusChanged));
        }
        this[_updateSelectedIndex]();
      }
      [_updateSelectedIndex]() {
        if (this.widget.items == null || dart.nullCheck(this.widget.items)[$isEmpty] || this.widget.value == null && dart.nullCheck(this.widget.items)[$where](dart.fn(item => item.enabled && dart.equals(item.value, this.widget.value), __t$DropdownMenuItemOfTTobool()))[$isEmpty]) {
          this[_selectedIndex] = null;
          return;
        }
        if (!(dart.nullCheck(this.widget.items)[$where](dart.fn(item => dart.equals(item.value, this.widget.value), __t$DropdownMenuItemOfTTobool()))[$length] === 1)) dart.assertFailed(null, I[1], 1258, 12, "widget.items!.where((DropdownMenuItem<T> item) => item.value == widget.value).length == 1");
        for (let itemIndex = 0; itemIndex < dart.nullCheck(this.widget.items)[$length]; itemIndex = itemIndex + 1) {
          if (dart.equals(dart.nullCheck(this.widget.items)[$_get](itemIndex).value, this.widget.value)) {
            this[_selectedIndex] = itemIndex;
            return;
          }
        }
      }
      get [_textStyle]() {
        let t1;
        t1 = this.widget.style;
        return t1 == null ? theme.Theme.of(this.context).textTheme.subtitle1 : t1;
      }
      [_handleTap]() {
        let t2, t2$, t2$0, t2$1;
        let textDirection = basic.Directionality.maybeOf(this.context);
        let menuMargin = button_theme.ButtonTheme.of(this.context).alignedDropdown ? dropdown._kAlignedMenuMargin : dropdown._kUnalignedMenuMargin;
        let menuItems = (() => {
          let t1 = __t$JSArrayOf_MenuItemOfT().of([]);
          for (let index = 0; index < dart.nullCheck(this.widget.items)[$length]; index = index + 1)
            t1.push(new (__t$_MenuItemOfT()).new({item: dart.nullCheck(this.widget.items)[$_get](index), onLayout: dart.fn(size => {
                if (this[_dropdownRoute] == null) {
                  return;
                }
                dart.nullCheck(this[_dropdownRoute]).itemHeights[$_set](index, size.height);
              }, T$.SizeTovoid()), $creationLocationd_0dea112b090073317d4: C[54] || CT.C54}));
          return t1;
        })();
        let navigator = navigator$.Navigator.of(this.context);
        if (!(this[_dropdownRoute] == null)) dart.assertFailed(null, I[1], 1298, 12, "_dropdownRoute == null");
        let itemBox = box.RenderBox.as(dart.nullCheck(this.context.findRenderObject()));
        let itemRect = itemBox.localToGlobal(ui.Offset.zero, {ancestor: navigator.context.findRenderObject()})['&'](itemBox.size);
        this[_dropdownRoute] = new (__t$_DropdownRouteOfT()).new({items: menuItems, buttonRect: menuMargin.resolve(textDirection).inflateRect(itemRect), padding: dropdown._kMenuItemPadding.resolve(textDirection), selectedIndex: (t2 = this[_selectedIndex], t2 == null ? 0 : t2), elevation: this.widget.elevation, capturedThemes: inherited_theme.InheritedTheme.capture({from: this.context, to: navigator.context}), style: dart.nullCheck(this[_textStyle]), barrierLabel: material_localizations.MaterialLocalizations.of(this.context).modalBarrierDismissLabel, itemHeight: this.widget.itemHeight, dropdownColor: this.widget.dropdownColor, menuMaxHeight: this.widget.menuMaxHeight, enableFeedback: (t2$ = this.widget.enableFeedback, t2$ == null ? true : t2$), borderRadius: this.widget.borderRadius});
        t2$0 = this.focusNode;
        t2$0 == null ? null : t2$0.requestFocus();
        navigator.push(__t$_DropdownRouteResultOfT(), dart.nullCheck(this[_dropdownRoute])).then(dart.void, dart.fn(newValue => {
          let t2;
          this[_removeDropdownRoute]();
          if (!this.mounted || newValue == null) {
            return;
          }
          t2 = __t$TNToNvoid().as(this.widget.onChanged);
          t2 == null ? null : t2(newValue.result);
        }, __t$_DropdownRouteResultNOfTToNull()));
        t2$1 = this.widget.onTap;
        t2$1 == null ? null : t2$1();
      }
      get [_denseButtonHeight]() {
        let t2;
        let fontSize = (t2 = dart.nullCheck(this[_textStyle]).fontSize, t2 == null ? dart.nullCheck(dart.nullCheck(theme.Theme.of(this.context).textTheme.subtitle1).fontSize) : t2);
        return math.max(core.double, fontSize, math.max(core.double, this.widget.iconSize, 24));
      }
      get [_iconColor]() {
        if (this[_enabled]) {
          if (this.widget.iconEnabledColor != null) {
            return dart.nullCheck(this.widget.iconEnabledColor);
          }
          switch (theme.Theme.of(this.context).brightness) {
            case C[55] || CT.C55:
              {
                return colors.Colors.grey.shade700;
              }
            case C[56] || CT.C56:
              {
                return colors.Colors.white70;
              }
          }
        } else {
          if (this.widget.iconDisabledColor != null) {
            return dart.nullCheck(this.widget.iconDisabledColor);
          }
          switch (theme.Theme.of(this.context).brightness) {
            case C[55] || CT.C55:
              {
                return colors.Colors.grey.shade400;
              }
            case C[56] || CT.C56:
              {
                return colors.Colors.white10;
              }
          }
        }
      }
      get [_enabled]() {
        return this.widget.items != null && dart.nullCheck(this.widget.items)[$isNotEmpty] && __t$TNToNvoid().as(this.widget.onChanged) != null;
      }
      [_getOrientation](context) {
        let t2;
        let result = (t2 = media_query.MediaQuery.maybeOf(context), t2 == null ? null : t2.orientation);
        if (result == null) {
          let size = binding.WidgetsBinding.instance.window.physicalSize;
          result = size.width > size.height ? media_query.Orientation.landscape : media_query.Orientation.portrait;
        }
        return result;
      }
      build(context) {
        let t2, t2$, t3, t3$, t4;
        if (!debug$.debugCheckHasMaterial(context)) dart.assertFailed(null, I[1], 1380, 12, "debugCheckHasMaterial(context)");
        if (!debug$.debugCheckHasMaterialLocalizations(context)) dart.assertFailed(null, I[1], 1381, 12, "debugCheckHasMaterialLocalizations(context)");
        let newOrientation = this[_getOrientation](context);
        this[_lastOrientation] == null ? this[_lastOrientation] = newOrientation : null;
        if (newOrientation !== this[_lastOrientation]) {
          this[_removeDropdownRoute]();
          this[_lastOrientation] = newOrientation;
        }
        let items = this.widget.selectedItemBuilder == null ? this.widget.items != null ? T$.ListOfWidget().of(dart.nullCheck(this.widget.items)) : T$.JSArrayOfWidget().of([]) : T$.ListOfWidget().of(dart.nullCheck(this.widget.selectedItemBuilder)(context));
        let hintIndex = null;
        if (this.widget.hint != null || !this[_enabled] && this.widget.disabledHint != null) {
          let displayedHint = this[_enabled] ? dart.nullCheck(this.widget.hint) : (t2 = this.widget.disabledHint, t2 == null ? dart.nullCheck(this.widget.hint) : t2);
          if (this.widget.selectedItemBuilder == null) {
            displayedHint = new dropdown._DropdownMenuItemContainer.new({alignment: this.widget.alignment, child: displayedHint, $creationLocationd_0dea112b090073317d4: C[57] || CT.C57});
          }
          hintIndex = items[$length];
          items[$add](new text.DefaultTextStyle.new({style: dart.nullCheck(this[_textStyle]).copyWith({color: theme.Theme.of(context).hintColor}), child: new basic.IgnorePointer.new({ignoringSemantics: false, child: displayedHint, $creationLocationd_0dea112b090073317d4: C[58] || CT.C58}), $creationLocationd_0dea112b090073317d4: C[59] || CT.C59}));
        }
        let padding = button_theme.ButtonTheme.of(context).alignedDropdown ? dropdown._kAlignedButtonPadding : dropdown._kUnalignedButtonPadding;
        let innerItemsWidget = null;
        if (items[$isEmpty]) {
          innerItemsWidget = new container.Container.new({$creationLocationd_0dea112b090073317d4: C[60] || CT.C60});
        } else {
          innerItemsWidget = new basic.IndexedStack.new({index: (t2$ = this[_selectedIndex], t2$ == null ? hintIndex : t2$), alignment: this.widget.alignment, children: this.widget.isDense ? items : items[$map](framework.RenderObjectWidget, dart.fn(item => this.widget.itemHeight != null ? new basic.SizedBox.new({height: this.widget.itemHeight, child: item, $creationLocationd_0dea112b090073317d4: C[61] || CT.C61}) : new basic.Column.new({mainAxisSize: flex.MainAxisSize.min, children: T$.JSArrayOfWidget().of([item]), $creationLocationd_0dea112b090073317d4: C[62] || CT.C62}), T$.WidgetToRenderObjectWidget()))[$toList](), $creationLocationd_0dea112b090073317d4: C[63] || CT.C63});
        }
        let defaultIcon = C[64] || CT.C64;
        let result = new text.DefaultTextStyle.new({style: this[_enabled] ? dart.nullCheck(this[_textStyle]) : dart.nullCheck(this[_textStyle]).copyWith({color: theme.Theme.of(context).disabledColor}), child: new container.Container.new({padding: padding.resolve(basic.Directionality.of(context)), height: this.widget.isDense ? this[_denseButtonHeight] : null, child: new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.spaceBetween, mainAxisSize: flex.MainAxisSize.min, children: (() => {
                let t2 = T$.JSArrayOfWidget().of([]);
                if (this.widget.isExpanded)
                  t2.push(new basic.Expanded.new({child: innerItemsWidget, $creationLocationd_0dea112b090073317d4: C[67] || CT.C67}));
                else
                  t2.push(innerItemsWidget);
                t2.push(new icon_theme.IconTheme.new({data: new icon_theme_data.IconThemeData.new({color: this[_iconColor], size: this.widget.iconSize}), child: (t3 = this.widget.icon, t3 == null ? defaultIcon : t3), $creationLocationd_0dea112b090073317d4: C[68] || CT.C68}));
                return t2;
              })(), $creationLocationd_0dea112b090073317d4: C[69] || CT.C69}), $creationLocationd_0dea112b090073317d4: C[70] || CT.C70}), $creationLocationd_0dea112b090073317d4: C[71] || CT.C71});
        if (!dropdown.DropdownButtonHideUnderline.at(context)) {
          let bottom = this.widget.isDense || this.widget.itemHeight == null ? 0.0 : 8.0;
          result = new basic.Stack.new({children: T$.JSArrayOfWidget().of([result, new basic.Positioned.new({left: 0.0, right: 0.0, bottom: bottom, child: (t3$ = this.widget.underline, t3$ == null ? new container.Container.new({height: 1.0, decoration: C[72] || CT.C72, $creationLocationd_0dea112b090073317d4: C[82] || CT.C82}) : t3$), $creationLocationd_0dea112b090073317d4: C[83] || CT.C83})]), $creationLocationd_0dea112b090073317d4: C[84] || CT.C84});
        }
        let effectiveMouseCursor = material_state.MaterialStateProperty.resolveAs(mouse_cursor.MouseCursor, material_state.MaterialStateMouseCursor.clickable, (() => {
          let t3 = T$.LinkedHashSetOfMaterialState().new();
          if (!this[_enabled]) t3.add(material_state.MaterialState.disabled);
          return t3;
        })());
        if (this.widget[_inputDecoration] != null) {
          result = new input_decorator.InputDecorator.new({decoration: dart.nullCheck(this.widget[_inputDecoration]), isEmpty: this.widget[_isEmpty], isFocused: this.widget[_isFocused], child: result, $creationLocationd_0dea112b090073317d4: C[85] || CT.C85});
        }
        return new basic.Semantics.new({button: true, child: new actions.Actions.new({actions: this[_actionMap], child: new ink_well.InkWell.new({mouseCursor: effectiveMouseCursor, onTap: this[_enabled] ? dart.bind(this, _handleTap) : null, canRequestFocus: this[_enabled], borderRadius: this.widget.borderRadius, focusNode: this.focusNode, autofocus: this.widget.autofocus, focusColor: (t4 = this.widget.focusColor, t4 == null ? theme.Theme.of(context).focusColor : t4), enableFeedback: false, child: result, $creationLocationd_0dea112b090073317d4: C[86] || CT.C86}), $creationLocationd_0dea112b090073317d4: C[87] || CT.C87}), $creationLocationd_0dea112b090073317d4: C[88] || CT.C88});
      }
      static ['_#new#tearOff'](T) {
        return new (dropdown._DropdownButtonState$(T)).new();
      }
    }
    (_DropdownButtonState.new = function() {
      this[_selectedIndex] = null;
      this[_dropdownRoute] = null;
      this[_lastOrientation] = null;
      this[_internalNode] = null;
      this[_hasPrimaryFocus] = false;
      this[___DropdownButtonState__actionMap] = null;
      _DropdownButtonState.__proto__.new.call(this);
      ;
    }).prototype = _DropdownButtonState.prototype;
    dart.addTypeTests(_DropdownButtonState);
    _DropdownButtonState.prototype[_is__DropdownButtonState_default] = true;
    dart.addTypeCaches(_DropdownButtonState);
    dart.setMethodSignature(_DropdownButtonState, () => ({
      __proto__: dart.getMethods(_DropdownButtonState.__proto__),
      [_createFocusNode]: dart.fnType(focus_manager.FocusNode, []),
      [_removeDropdownRoute]: dart.fnType(dart.void, []),
      [_handleFocusChanged]: dart.fnType(dart.void, []),
      [_updateSelectedIndex]: dart.fnType(dart.void, []),
      [_handleTap]: dart.fnType(dart.void, []),
      [_getOrientation]: dart.fnType(media_query.Orientation, [framework.BuildContext]),
      build: dart.fnType(framework.Widget, [framework.BuildContext])
    }));
    dart.setGetterSignature(_DropdownButtonState, () => ({
      __proto__: dart.getGetters(_DropdownButtonState.__proto__),
      focusNode: dart.nullable(focus_manager.FocusNode),
      [_actionMap]: core.Map$(core.Type, actions.Action$(actions.Intent)),
      [_textStyle]: dart.nullable(text_style.TextStyle),
      [_denseButtonHeight]: core.double,
      [_iconColor]: ui.Color,
      [_enabled]: core.bool
    }));
    dart.setSetterSignature(_DropdownButtonState, () => ({
      __proto__: dart.getSetters(_DropdownButtonState.__proto__),
      [_actionMap]: core.Map$(core.Type, actions.Action$(actions.Intent))
    }));
    dart.setLibraryUri(_DropdownButtonState, I[0]);
    dart.setFieldSignature(_DropdownButtonState, () => ({
      __proto__: dart.getFields(_DropdownButtonState.__proto__),
      [_selectedIndex]: dart.fieldType(dart.nullable(core.int)),
      [_dropdownRoute]: dart.fieldType(dart.nullable(dropdown._DropdownRoute$(T))),
      [_lastOrientation]: dart.fieldType(dart.nullable(media_query.Orientation)),
      [_internalNode]: dart.fieldType(dart.nullable(focus_manager.FocusNode)),
      [_hasPrimaryFocus]: dart.fieldType(core.bool),
      [___DropdownButtonState__actionMap]: dart.fieldType(dart.nullable(core.Map$(core.Type, actions.Action$(actions.Intent))))
    }));
    return _DropdownButtonState;
  });
  dropdown._DropdownButtonState = dropdown._DropdownButtonState$();
  dart.addTypeTests(dropdown._DropdownButtonState, _is__DropdownButtonState_default);
  var onChanged$0 = dart.privateName(dropdown, "DropdownButtonFormField.onChanged");
  var decoration$ = dart.privateName(dropdown, "DropdownButtonFormField.decoration");
  const _is_DropdownButtonFormField_default = Symbol('_is_DropdownButtonFormField_default');
  dropdown.DropdownButtonFormField$ = dart.generic(T => {
    var __t$DropdownMenuItemOfT = () => (__t$DropdownMenuItemOfT = dart.constFn(dropdown.DropdownMenuItem$(T)))();
    var __t$DropdownMenuItemOfTTobool = () => (__t$DropdownMenuItemOfTTobool = dart.constFn(dart.fnType(core.bool, [__t$DropdownMenuItemOfT()])))();
    var __t$_DropdownButtonFormFieldStateOfT = () => (__t$_DropdownButtonFormFieldStateOfT = dart.constFn(dropdown._DropdownButtonFormFieldState$(T)))();
    var __t$DropdownButtonOfT = () => (__t$DropdownButtonOfT = dart.constFn(dropdown.DropdownButton$(T)))();
    var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
    var __t$TNTovoid = () => (__t$TNTovoid = dart.constFn(dart.fnType(dart.void, [__t$TN()])))();
    var __t$FormFieldStateOfT = () => (__t$FormFieldStateOfT = dart.constFn(form.FormFieldState$(T)))();
    var __t$FormFieldStateOfTToFocus = () => (__t$FormFieldStateOfTToFocus = dart.constFn(dart.fnType(focus_scope.Focus, [__t$FormFieldStateOfT()])))();
    class DropdownButtonFormField extends form.FormField$(T) {
      get onChanged() {
        return this[onChanged$0];
      }
      set onChanged(value) {
        super.onChanged = value;
      }
      get decoration() {
        return this[decoration$];
      }
      set decoration(value) {
        super.decoration = value;
      }
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let items = opts && 'items' in opts ? opts.items : null;
        let selectedItemBuilder = opts && 'selectedItemBuilder' in opts ? opts.selectedItemBuilder : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let hint = opts && 'hint' in opts ? opts.hint : null;
        let disabledHint = opts && 'disabledHint' in opts ? opts.disabledHint : null;
        let onChanged = opts && 'onChanged' in opts ? opts.onChanged : null;
        let onTap = opts && 'onTap' in opts ? opts.onTap : null;
        let elevation = opts && 'elevation' in opts ? opts.elevation : 8;
        let style = opts && 'style' in opts ? opts.style : null;
        let icon = opts && 'icon' in opts ? opts.icon : null;
        let iconDisabledColor = opts && 'iconDisabledColor' in opts ? opts.iconDisabledColor : null;
        let iconEnabledColor = opts && 'iconEnabledColor' in opts ? opts.iconEnabledColor : null;
        let iconSize = opts && 'iconSize' in opts ? opts.iconSize : 24;
        let isDense = opts && 'isDense' in opts ? opts.isDense : true;
        let isExpanded = opts && 'isExpanded' in opts ? opts.isExpanded : false;
        let itemHeight = opts && 'itemHeight' in opts ? opts.itemHeight : null;
        let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
        let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
        let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
        let dropdownColor = opts && 'dropdownColor' in opts ? opts.dropdownColor : null;
        let decoration = opts && 'decoration' in opts ? opts.decoration : null;
        let onSaved = opts && 'onSaved' in opts ? opts.onSaved : null;
        let validator = opts && 'validator' in opts ? opts.validator : null;
        let autovalidateMode = opts && 'autovalidateMode' in opts ? opts.autovalidateMode : null;
        let menuMaxHeight = opts && 'menuMaxHeight' in opts ? opts.menuMaxHeight : null;
        let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
        let alignment = opts && 'alignment' in opts ? opts.alignment : C[46] || CT.C46;
        let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
        return new (dropdown.DropdownButtonFormField$(T)).new({key: key, items: items, selectedItemBuilder: selectedItemBuilder, value: value, hint: hint, disabledHint: disabledHint, onChanged: onChanged, onTap: onTap, elevation: elevation, style: style, icon: icon, iconDisabledColor: iconDisabledColor, iconEnabledColor: iconEnabledColor, iconSize: iconSize, isDense: isDense, isExpanded: isExpanded, itemHeight: itemHeight, focusColor: focusColor, focusNode: focusNode, autofocus: autofocus, dropdownColor: dropdownColor, decoration: decoration, onSaved: onSaved, validator: validator, autovalidateMode: autovalidateMode, menuMaxHeight: menuMaxHeight, enableFeedback: enableFeedback, alignment: alignment, borderRadius: borderRadius, $creationLocationd_0dea112b090073317d4: C[93] || CT.C93});
      }
      createState() {
        return new (__t$_DropdownButtonFormFieldStateOfT()).new();
      }
    }
    (DropdownButtonFormField.new = function(opts) {
      let t4, t4$;
      let key = opts && 'key' in opts ? opts.key : null;
      let items = opts && 'items' in opts ? opts.items : null;
      let selectedItemBuilder = opts && 'selectedItemBuilder' in opts ? opts.selectedItemBuilder : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let hint = opts && 'hint' in opts ? opts.hint : null;
      let disabledHint = opts && 'disabledHint' in opts ? opts.disabledHint : null;
      let onChanged = opts && 'onChanged' in opts ? opts.onChanged : null;
      let onTap = opts && 'onTap' in opts ? opts.onTap : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : 8;
      let style = opts && 'style' in opts ? opts.style : null;
      let icon = opts && 'icon' in opts ? opts.icon : null;
      let iconDisabledColor = opts && 'iconDisabledColor' in opts ? opts.iconDisabledColor : null;
      let iconEnabledColor = opts && 'iconEnabledColor' in opts ? opts.iconEnabledColor : null;
      let iconSize = opts && 'iconSize' in opts ? opts.iconSize : 24;
      let isDense = opts && 'isDense' in opts ? opts.isDense : true;
      let isExpanded = opts && 'isExpanded' in opts ? opts.isExpanded : false;
      let itemHeight = opts && 'itemHeight' in opts ? opts.itemHeight : null;
      let focusColor = opts && 'focusColor' in opts ? opts.focusColor : null;
      let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
      let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
      let dropdownColor = opts && 'dropdownColor' in opts ? opts.dropdownColor : null;
      let decoration = opts && 'decoration' in opts ? opts.decoration : null;
      let onSaved = opts && 'onSaved' in opts ? opts.onSaved : null;
      let validator = opts && 'validator' in opts ? opts.validator : null;
      let autovalidateMode = opts && 'autovalidateMode' in opts ? opts.autovalidateMode : null;
      let menuMaxHeight = opts && 'menuMaxHeight' in opts ? opts.menuMaxHeight : null;
      let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
      let alignment = opts && 'alignment' in opts ? opts.alignment : C[46] || CT.C46;
      let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[onChanged$0] = onChanged;
      if (!(items == null || items[$isEmpty] || value == null || items[$where](dart.fn(item => dart.equals(item.value, value), __t$DropdownMenuItemOfTTobool()))[$length] === 1)) dart.assertFailed("There should be exactly one item with [DropdownButton]'s value: " + dart.str(value) + ". \n" + "Either zero or 2 or more [DropdownMenuItem]s were detected " + "with the same value", I[1], 1580, 15, "items == null || items.isEmpty || value == null ||\n              items.where((DropdownMenuItem<T> item) {\n                return item.value == value;\n              }).length == 1");
      if (!(elevation !== null)) dart.assertFailed(null, I[1], 1589, 15, "elevation != null");
      if (!(iconSize !== null)) dart.assertFailed(null, I[1], 1590, 15, "iconSize != null");
      if (!(isDense !== null)) dart.assertFailed(null, I[1], 1591, 15, "isDense != null");
      if (!(isExpanded !== null)) dart.assertFailed(null, I[1], 1592, 15, "isExpanded != null");
      if (!(itemHeight == null || dart.notNull(itemHeight) >= 48)) dart.assertFailed(null, I[1], 1593, 15, "itemHeight == null || itemHeight >= kMinInteractiveDimension");
      if (!(autofocus !== null)) dart.assertFailed(null, I[1], 1594, 15, "autofocus != null");
      this[decoration$] = (t4 = decoration, t4 == null ? new input_decorator.InputDecoration.new({focusColor: focusColor}) : t4);
      DropdownButtonFormField.__proto__.new.call(this, {initialValue: value, autovalidateMode: (t4$ = autovalidateMode, t4$ == null ? form.AutovalidateMode.disabled : t4$), builder: dart.fn(field => {
          let t4;
          let state = __t$_DropdownButtonFormFieldStateOfT().as(field);
          let decorationArg = (t4 = decoration, t4 == null ? new input_decorator.InputDecoration.new({focusColor: focusColor}) : t4);
          let effectiveDecoration = decorationArg.applyDefaults(theme.Theme.of(field.context).inputDecorationTheme);
          let showSelectedItem = items != null && items[$where](dart.fn(item => dart.equals(item.value, state.value), __t$DropdownMenuItemOfTTobool()))[$isNotEmpty];
          function isHintOrDisabledHintAvailable() {
            let isDropdownDisabled = onChanged == null || items == null || items[$isEmpty];
            if (isDropdownDisabled) {
              return hint != null || disabledHint != null;
            } else {
              return hint != null;
            }
          }
          dart.fn(isHintOrDisabledHintAvailable, T$.VoidTobool());
          let isEmpty = !showSelectedItem && !isHintOrDisabledHintAvailable();
          return new focus_scope.Focus.new({canRequestFocus: false, skipTraversal: true, child: new basic.Builder.new({builder: dart.fn(context => new dropdown.DropdownButtonHideUnderline.new({child: new (__t$DropdownButtonOfT())._formField({items: items, selectedItemBuilder: selectedItemBuilder, value: state.value, hint: hint, disabledHint: disabledHint, onChanged: onChanged == null ? null : __t$TNTovoid().as(dart.bind(state, 'didChange')), onTap: onTap, elevation: elevation, style: style, icon: icon, iconDisabledColor: iconDisabledColor, iconEnabledColor: iconEnabledColor, iconSize: iconSize, isDense: isDense, isExpanded: isExpanded, itemHeight: itemHeight, focusColor: focusColor, focusNode: focusNode, autofocus: autofocus, dropdownColor: dropdownColor, menuMaxHeight: menuMaxHeight, enableFeedback: enableFeedback, alignment: alignment, borderRadius: borderRadius, inputDecoration: effectiveDecoration.copyWith({errorText: field.errorText}), isEmpty: isEmpty, isFocused: focus_scope.Focus.of(context).hasFocus, $creationLocationd_0dea112b090073317d4: C[89] || CT.C89}), $creationLocationd_0dea112b090073317d4: C[90] || CT.C90}), T$.BuildContextToDropdownButtonHideUnderline()), $creationLocationd_0dea112b090073317d4: C[91] || CT.C91}), $creationLocationd_0dea112b090073317d4: C[92] || CT.C92});
        }, __t$FormFieldStateOfTToFocus()), key: key, onSaved: onSaved, validator: validator, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = DropdownButtonFormField.prototype;
    dart.addTypeTests(DropdownButtonFormField);
    DropdownButtonFormField.prototype[_is_DropdownButtonFormField_default] = true;
    dart.addTypeCaches(DropdownButtonFormField);
    dart.setLibraryUri(DropdownButtonFormField, I[0]);
    dart.setFieldSignature(DropdownButtonFormField, () => ({
      __proto__: dart.getFields(DropdownButtonFormField.__proto__),
      onChanged: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [dart.nullable(T)]))),
      decoration: dart.finalFieldType(input_decorator.InputDecoration)
    }));
    return DropdownButtonFormField;
  });
  dropdown.DropdownButtonFormField = dropdown.DropdownButtonFormField$();
  dart.addTypeTests(dropdown.DropdownButtonFormField, _is_DropdownButtonFormField_default);
  const _is__DropdownButtonFormFieldState_default = Symbol('_is__DropdownButtonFormFieldState_default');
  dropdown._DropdownButtonFormFieldState$ = dart.generic(T => {
    var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
    var __t$DropdownButtonFormFieldOfT = () => (__t$DropdownButtonFormFieldOfT = dart.constFn(dropdown.DropdownButtonFormField$(T)))();
    var __t$TNTovoid = () => (__t$TNTovoid = dart.constFn(dart.fnType(dart.void, [__t$TN()])))();
    var __t$TNToNvoid = () => (__t$TNToNvoid = dart.constFn(dart.nullable(__t$TNTovoid())))();
    class _DropdownButtonFormFieldState extends form.FormFieldState$(T) {
      didChange(value) {
        __t$TN().as(value);
        super.didChange(value);
        let dropdownButtonFormField = __t$DropdownButtonFormFieldOfT().as(this.widget);
        if (!(__t$TNToNvoid().as(dropdownButtonFormField.onChanged) != null)) dart.assertFailed(null, I[1], 1681, 12, "dropdownButtonFormField.onChanged != null");
        dart.nullCheck(__t$TNToNvoid().as(dropdownButtonFormField.onChanged))(value);
      }
      didUpdateWidget(oldWidget) {
        __t$DropdownButtonFormFieldOfT().as(oldWidget);
        super.didUpdateWidget(oldWidget);
        if (!dart.equals(oldWidget.initialValue, this.widget.initialValue)) {
          this.setValue(this.widget.initialValue);
        }
      }
      static ['_#new#tearOff'](T) {
        return new (dropdown._DropdownButtonFormFieldState$(T)).new();
      }
    }
    (_DropdownButtonFormFieldState.new = function() {
      _DropdownButtonFormFieldState.__proto__.new.call(this);
      ;
    }).prototype = _DropdownButtonFormFieldState.prototype;
    dart.addTypeTests(_DropdownButtonFormFieldState);
    _DropdownButtonFormFieldState.prototype[_is__DropdownButtonFormFieldState_default] = true;
    dart.addTypeCaches(_DropdownButtonFormFieldState);
    dart.setLibraryUri(_DropdownButtonFormFieldState, I[0]);
    return _DropdownButtonFormFieldState;
  });
  dropdown._DropdownButtonFormFieldState = dropdown._DropdownButtonFormFieldState$();
  dart.addTypeTests(dropdown._DropdownButtonFormFieldState, _is__DropdownButtonFormFieldState_default);
  var EdgeInsets_bottom = dart.privateName(edge_insets, "EdgeInsets.bottom");
  var EdgeInsets_right = dart.privateName(edge_insets, "EdgeInsets.right");
  var EdgeInsets_top = dart.privateName(edge_insets, "EdgeInsets.top");
  var EdgeInsets_left = dart.privateName(edge_insets, "EdgeInsets.left");
  var EdgeInsetsDirectional_bottom = dart.privateName(edge_insets, "EdgeInsetsDirectional.bottom");
  var EdgeInsetsDirectional_end = dart.privateName(edge_insets, "EdgeInsetsDirectional.end");
  var EdgeInsetsDirectional_top = dart.privateName(edge_insets, "EdgeInsetsDirectional.top");
  var EdgeInsetsDirectional_start = dart.privateName(edge_insets, "EdgeInsetsDirectional.start");
  dart.defineLazy(dropdown, {
    /*dropdown._kDropdownMenuDuration*/get _kDropdownMenuDuration() {
      return C[94] || CT.C94;
    },
    /*dropdown._kMenuItemHeight*/get _kMenuItemHeight() {
      return 48;
    },
    /*dropdown._kDenseButtonHeight*/get _kDenseButtonHeight() {
      return 24;
    },
    /*dropdown._kMenuItemPadding*/get _kMenuItemPadding() {
      return C[95] || CT.C95;
    },
    /*dropdown._kAlignedButtonPadding*/get _kAlignedButtonPadding() {
      return C[96] || CT.C96;
    },
    /*dropdown._kUnalignedButtonPadding*/get _kUnalignedButtonPadding() {
      return C[97] || CT.C97;
    },
    /*dropdown._kAlignedMenuMargin*/get _kAlignedMenuMargin() {
      return C[97] || CT.C97;
    },
    /*dropdown._kUnalignedMenuMargin*/get _kUnalignedMenuMargin() {
      return C[98] || CT.C98;
    }
  }, false);
  dart.trackLibraries("packages/flutter/src/material/dropdown.dart", {
    "package:flutter/src/material/dropdown.dart": dropdown
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["dropdown.dart"],"names":[],"mappings":"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","file":"../../../../../../../../../packages/flutter/src/material/dropdown.dart.lib.js"}');
  // Exports:
  return {
    src__material__dropdown: dropdown
  };
}));

//# sourceMappingURL=dropdown.dart.lib.js.map
